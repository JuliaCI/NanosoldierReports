Julia Version 1.6.0-DEV.888
Commit 0d7dc9621e (2020-09-10 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CodecZlib ──────────────────── v0.7.0
  Installed TimerOutputs ───────────────── v0.5.6
  Installed CEnum ──────────────────────── v0.4.1
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed TranscodingStreams ─────────── v0.9.5
  Installed AutoGrad ───────────────────── v1.2.3
  Installed NNlib ──────────────────────── v0.7.4
  Installed GPUCompiler ────────────────── v0.6.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed FileIO ─────────────────────── v1.4.3
  Installed Knet ───────────────────────── v1.4.1
  Installed Reexport ───────────────────── v0.2.0
  Installed Zlib_jll ───────────────────── v1.2.11+16
  Installed Requires ───────────────────── v1.0.2
  Installed JLD2 ───────────────────────── v0.1.14
  Installed ExprTools ──────────────────── v0.1.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DataStructures ─────────────── v0.17.20
  Installed Adapt ──────────────────────── v2.0.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed CUDA ───────────────────────── v1.3.3
  Installed LLVM ───────────────────────── v2.0.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed GPUArrays ──────────────────── v5.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [1902f260] + Knet v1.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v2.0.2
  [6710c13c] + AutoGrad v1.2.3
  [b99e7846] + BinaryProvider v0.5.10
  [fa961155] + CEnum v0.4.1
  [052768ef] + CUDA v1.3.3
  [944b1d66] + CodecZlib v0.7.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] + DataStructures v0.17.20
  [e2ba6199] + ExprTools v0.1.2
  [5789e2e9] + FileIO v1.4.3
  [0c68f7d7] + GPUArrays v5.1.0
  [61eb1bfa] + GPUCompiler v0.6.1
  [033835bb] + JLD2 v0.1.14
  [1902f260] + Knet v1.4.1
  [929cbde3] + LLVM v2.0.0
  [1914dd2f] + MacroTools v0.5.5
  [872c559c] + NNlib v0.7.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.2
  [276daf66] + SpecialFunctions v0.10.3
  [a759f4b9] + TimerOutputs v0.5.6
  [3bb67fe8] + TranscodingStreams v0.9.5
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Knet
Status `/tmp/jl_KfuVtn/Project.toml`
  [6710c13c] AutoGrad v1.2.3
  [052768ef] CUDA v1.3.3
  [5789e2e9] FileIO v1.4.3
  [033835bb] JLD2 v0.1.14
  [1902f260] Knet v1.4.1
  [872c559c] NNlib v0.7.4
  [276daf66] SpecialFunctions v0.10.3
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_KfuVtn/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v2.0.2
  [6710c13c] AutoGrad v1.2.3
  [b99e7846] BinaryProvider v0.5.10
  [fa961155] CEnum v0.4.1
  [052768ef] CUDA v1.3.3
  [944b1d66] CodecZlib v0.7.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [864edb3b] DataStructures v0.17.20
  [e2ba6199] ExprTools v0.1.2
  [5789e2e9] FileIO v1.4.3
  [0c68f7d7] GPUArrays v5.1.0
  [61eb1bfa] GPUCompiler v0.6.1
  [033835bb] JLD2 v0.1.14
  [1902f260] Knet v1.4.1
  [929cbde3] LLVM v2.0.0
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.7.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.2
  [276daf66] SpecialFunctions v0.10.3
  [a759f4b9] TimerOutputs v0.5.6
  [3bb67fe8] TranscodingStreams v0.9.5
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
kptr.jl	248.136009 seconds (16.68 M allocations: 1014.812 MiB, 0.68% gc time)
gpu.jl	CUDA toolkit 11.0.3, artifact installation
CUDA driver 11.0.0
NVIDIA driver 450.36.6

Libraries: 
- CUBLAS: 11.2.0
- CURAND: 10.2.1
- CUFFT: 10.2.1
- CUSOLVER: 10.6.0
- CUSPARSE: 11.1.1
- CUPTI: 13.0.0
- NVML: 11.0.0+450.36.6
- CUDNN: 8.0.2 (for CUDA 11.0.0)
- CUTENSOR: 1.2.0 (for CUDA 11.0.0)

Toolchain:
- Julia: 1.6.0-DEV.888
- LLVM: 9.0.1
- PTX ISA support: 3.2, 4.0, 4.1, 4.2, 4.3, 5.0, 6.0, 6.1, 6.3, 6.4
- Device support: sm_35, sm_37, sm_50, sm_52, sm_53, sm_60, sm_61, sm_62, sm_70, sm_72, sm_75

1 device:
  0: Tesla T4 (sm_75, 14.541 GiB / 14.756 GiB available)
CuDevice(0): Tesla T4length(CUDA.devices()) = 1
CUDA.capability(CUDA.device()) = v"7.5.0"
CUDA.warpsize(CUDA.device()) = 32
CUDA.find_toolkit() = String[]
CUDA.version() = v"11.0.0"
Mem.info() = (15613034496, 15843721216)
CUDA.synchronize() = nothing
NVML.driver_version() = v"450.36.6"
NVML.version() = v"11.0.0+450.36.6"
NVML.cuda_driver_version() = v"11.0.0"
NVML.memory_info(nvmldev) = (total = 15843721216, free = 15613034496, used = 230686720)
CUBLAS.handle() = Ptr{Nothing} @0x0000000009ed68f0
CUBLAS.version() = v"11.2.0"
CUDNN.handle() = Ptr{Nothing} @0x00000000224ed350
CUDNN.version() = v"8.0.2"
Knet.LibKnet8.libknet8 = "/home/pkgeval/.julia/artifacts/172aab1c490da4e9f26ed08c3b8e99cd86e8d7e7/libknet8"
readdir(artifact"libknet8") = ["libknet8.so"]
  5.902121 seconds (2.76 M allocations: 158.128 MiB, 0.94% gc time)
distributions.jl	  2.437838 seconds (3.09 M allocations: 174.137 MiB, 3.98% gc time)
dropout.jl	 19.463960 seconds (7.01 M allocations: 445.685 MiB, 0.98% gc time)
gcnode.jl	  8.990893 seconds (7.61 M allocations: 444.510 MiB, 2.42% gc time)
jld.jl	 24.369663 seconds (23.51 M allocations: 1.277 GiB, 3.33% gc time)
statistics.jl	 26.038448 seconds (23.25 M allocations: 1.435 GiB, 2.92% gc time)
bmm.jl	Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f047c102e6f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f047c102333)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f047c10210c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f047c101f34)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f047c1019e7)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f047c100ecb)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f047c0fec04)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:9
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f047c102e6f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f047c102333)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f047c10210c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f047c101f34)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f047c1019e7)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f047c100ecb)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f047c0fec04)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:9
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
bmm: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/bmm.jl:8
  Got exception outside of a @test
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/bmm.jl:41
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/bmm.jl:9
   [33] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [34] macro expansion
      @ ./timing.jl:174 [inlined]
   [35] macro expansion
      @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
   [36] macro expansion
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
   [37] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
   [38] include(fname::String)
      @ Base.MainInclude ./client.jl:444
   [39] top-level scope
      @ none:6
   [40] eval(m::Module, e::Any)
      @ Core ./boot.jl:345
   [41] exec_options(opts::Base.JLOptions)
      @ Base ./client.jl:261
   [42] _start()
      @ Base ./client.jl:485
 53.811708 seconds (44.08 M allocations: 2.520 GiB, 4.36% gc time)
serialize.jl	 16.821377 seconds (12.94 M allocations: 721.193 MiB, 3.53% gc time)
loss.jl	 63.021740 seconds (51.33 M allocations: 3.227 GiB, 3.21% gc time)
cuarray.jl	┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{2}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bdfdbd0f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bdfdb625)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bdfdb3cf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bdfdb211)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bdfdac30)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f03bdfd35ac)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f03bdfd348c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f047c212bd4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bdfdbd0f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bdfdb625)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bdfdb3cf)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bdfdb211)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bdfdac30)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f03bdfd35ac)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f03bdfd348c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f047c212bd4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuVector{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{2})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] hcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
 [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 =# @gcheck hcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuVector{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuVector{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] hcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
   [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{1}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde0340f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde02d45)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde02aff)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde02941)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde02600)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
vcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
#105 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f03bde00c4c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f03bde00b2c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f047c212bd4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde0340f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde02d45)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde02aff)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde02941)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde02600)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
vcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
#105 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f03bde00c4c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f03bde00b2c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f047c212bd4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{1})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] vcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
 [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 =# @gcheck vcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Val{1})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] vcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
   [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceVector{Float64, CUDA.AS.Global}, CuDeviceVector{Float64, CUDA.AS.Global}, Tuple{Int64}, Tuple{UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuVector{Float64}, ::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{UnitRange{Int64}}, ::Int64; target::CuVector{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(#unused#::IndexLinear, dest::CuVector{Float64}, src::CuVector{Float64}, Is::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuVector{Float64}, ::Tuple{Int64}, ::Tuple{Bool}, ::CuVector{Float64}, ::Vararg{CuVector{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetVector{Float64}, ::Vararg{Knet.KnetArrays.KnetVector{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetVector{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetVector{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetVector{Float64}}, Param{Knet.KnetArrays.KnetVector{Float64}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde13b6f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde134b3)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde1328c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde130c4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde12e07)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f03bde1283b)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f03bde11634)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:23 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde13b6f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde134b3)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde1328c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde130c4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde12e07)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
unknown function (ip: 0x7f03bde1283b)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
unknown function (ip: 0x7f03bde11634)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:23 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:23
  Test threw exception
  Expression: permutedims(a0, (2, 1)) == permutedims(a1, (2, 1))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:23
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:24
  Test threw exception
  Expression: permutedims(a0, (1, 2)) == permutedims(a1, (1, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:24
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:29 =# @gcheck permutedims(a3, (2, 1))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#98#118"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:29
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:30 =# @gcheck permutedims(a3, (1, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}; target::CuMatrix{Float64}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float64}, src::CuMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float64}, x::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float64}, perm::Tuple{Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#99#119"{Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:30
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{2}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde2498f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde24285)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde2402f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde23e71)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde23b20)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f03bde21b2c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f03bde21a0c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f047c212bd4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde2498f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde24285)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde2402f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde23e71)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde23b20)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#forw#1 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
forw##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
#cat#185 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
cat##kw at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
hcat at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
#104 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
unknown function (ip: 0x7f03bde21b2c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#gcsum#207 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
gcsum at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
#220 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
unknown function (ip: 0x7f03bde21a0c)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#differentiate#3 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
differentiate at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
#gcheck#219 at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
gcheck at /home/pkgeval/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
unknown function (ip: 0x7f047c212bd4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:434
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{2})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] hcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
 [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 =# @gcheck hcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] hcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
   [35] (::var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{1}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{1})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] vcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
 [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 =# @gcheck vcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Val{1})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] vcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
   [35] (::var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float64, CUDA.AS.Global}, CuDeviceMatrix{Float64, CUDA.AS.Global}, Tuple{Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuMatrix{Float64}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuMatrix{Float64}, ::CuMatrix{Float64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuMatrix{Float64}, ::Tuple{Int64, Int64}, ::Tuple{Bool, Bool}, ::CuMatrix{Float64}, ::Vararg{CuMatrix{Float64}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::Knet.KnetArrays.KnetMatrix{Float64}, ::Vararg{Knet.KnetArrays.KnetMatrix{Float64}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float64}}, ::Vararg{Param{Knet.KnetArrays.KnetMatrix{Float64}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{Knet.KnetArrays.KnetMatrix{Float64}}, Param{Knet.KnetArrays.KnetMatrix{Float64}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde32e7f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde3275e)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde324f8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde3232b)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde31ff8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
getindex at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
unknown function (ip: 0x7f03bde31896)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:14 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde32e7f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde3275e)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde324f8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde3232b)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde31ff8)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_getindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
getindex at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
unknown function (ip: 0x7f03bde31896)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:14 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:14
  Test threw exception
  Expression: getindex(a0, idx...) == getindex(a1, idx...)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
   [28] _unsafe_getindex!
      @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
   [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:14
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
 [28] _unsafe_getindex!
    @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
 [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] getindex
    @ ./none:0 [inlined]
 [33] (::var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:16 =# @gcheck getindex(a3, idx...)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
   [28] _unsafe_getindex!
      @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
   [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] getindex
      @ ./none:0 [inlined]
   [33] (::var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#91#111"{Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:16
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:32
  Test threw exception
  Expression: permutedims(a0, (1, 3, 2)) == permutedims(a1, (1, 3, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:32
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#101#121"{Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#101#121"{Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [40] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:34 =# @gcheck permutedims(a3, (1, 3, 2))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Tuple{Int64, Int64, Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#101#121"{Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [34] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [36] (::AutoGrad.var"#220#225"{Tuple{}, var"#101#121"{Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [40] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:34
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde4403f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde438f5)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde4366f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde43481)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde430f0)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134 [inlined]
hcat at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:130
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:36 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bde4403f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bde438f5)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bde4366f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bde43481)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bde430f0)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_unsafe_setindex! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
_setindex! at ./multidimensional.jl:801 [inlined]
setindex! at ./abstractarray.jl:1217 [inlined]
__cat at ./abstractarray.jl:1615
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#cat#23 at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
cat##kw at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:134 [inlined]
hcat at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:130
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:36 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:36
  Test threw exception
  Expression: hcat(a0, b0) == hcat(a1, b1)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] hcat(::KnetArray{Float64, 3}, ::KnetArray{Float64, 3})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:130
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:36
   [34] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [35] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] hcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
 [35] (::var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:40 =# @gcheck hcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{2})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{2}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{2}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] hcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:119 [inlined]
   [35] (::var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#104#124"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:40
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{1}) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{1})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] vcat
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
 [35] (::var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [37] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [40] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
 [44] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [45] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [46] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [47] macro expansion
    @ ./timing.jl:174 [inlined]
 [48] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [49] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [50] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [51] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [52] top-level scope
    @ none:6
 [53] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [54] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:41 =# @gcheck vcat(a3, b3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Val{1})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Val{1}, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Val{1}}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] vcat
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:118 [inlined]
   [35] (::var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [36] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [37] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [38] (::AutoGrad.var"#220#225"{Tuple{}, var"#105#125"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [39] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [40] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [41] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:41
   [44] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [45] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
┌ Warning: `cat_shape(dims, shape::Tuple{}, shapes::Tuple...)` is deprecated, use `cat_shape(dims, shapes)` instead.
│   caller = cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64) at cat.jl:136
└ @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:136
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
  Test threw exception
  Expression: cat(a0, b0, dims = i) == cat(a1, b1, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:43
   [33] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [34] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
 [28] _setindex!
    @ ./multidimensional.jl:801 [inlined]
 [29] setindex!
    @ ./abstractarray.jl:1217 [inlined]
 [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
    @ Base ./abstractarray.jl:1615
 [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
 [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [33] #cat#185
    @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
 [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
    @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
 [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] gcsum
    @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
 [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [39] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [41] gcheck(::Function)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
 [42] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
 [43] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [44] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 [45] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [46] macro expansion
    @ ./timing.jl:174 [inlined]
 [47] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [48] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [49] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [50] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [51] top-level scope
    @ none:6
 [52] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [53] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:45 =# @gcheck cat(a3, b3, dims = i)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [4] gcheck(::Function)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:143
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.setindex_kernel!), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.setindex_kernel!), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.setindex_kernel!), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, ::Int64; target::CuArray{Float64, 3}, total_threads::Int64, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] _unsafe_setindex!(::IndexLinear, ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:161
   [28] _setindex!
      @ ./multidimensional.jl:801 [inlined]
   [29] setindex!
      @ ./abstractarray.jl:1217 [inlined]
   [30] __cat(::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{Bool, Bool, Bool}, ::CuArray{Float64, 3}, ::Vararg{CuArray{Float64, 3}, N} where N)
      @ Base ./abstractarray.jl:1615
   [31] cat(::KnetArray{Float64, 3}, ::Vararg{KnetArray{Float64, 3}, N} where N; dims::Int64)
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/cat.jl:142
   [32] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Param{KnetArray{Float64, 3}}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Int64, Tuple{Symbol}, NamedTuple{(:dims,), Tuple{Int64}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [33] #cat#185
      @ ~/.julia/packages/AutoGrad/VFrAv/src/cat.jl:30 [inlined]
   [34] (::var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64})()
      @ Main ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:172
   [35] gcsum(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] gcsum
      @ ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50 [inlined]
   [37] (::AutoGrad.var"#220#225"{Tuple{}, var"#107#127"{Param{KnetArray{Float64, 3}}, Param{KnetArray{Float64, 3}}, Int64}, Tuple{}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [38] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [39] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [40] gcheck(::Function; kw::Tuple{}, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [41] gcheck(::Function)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:158
   [42] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:45
   [43] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [44] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:47
  Test threw exception
  Expression: setindex!(a0, b0[idx...], idx...) == setindex!(a1, b1[idx...], idx...)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:119
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{typeof(GPUArrays.index_kernel), Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::typeof(GPUArrays.index_kernel), tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::Nothing)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] gpu_call(::typeof(GPUArrays.index_kernel), ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}, ::Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
   [28] _unsafe_getindex!
      @ ~/.julia/packages/GPUArrays/eVYIC/src/host/indexing.jl:135 [inlined]
   [29] getindex(::KnetArray{Float64, 3}, ::UnitRange{Int64}, ::UnitRange{Int64}, ::UnitRange{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/getindex.jl:40
   [30] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:47
   [31] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [32] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
  Expression: argmax(a0, dims = i) == argmax(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 1, 1) CartesianIndex(3, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(7, 8, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(4, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(1, 8, 2)]

CartesianIndex{3}[CartesianIndex(4, 1, 3) CartesianIndex(2, 2, 3) … CartesianIndex(2, 7, 3) CartesianIndex(3, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(1, 2, 4) … CartesianIndex(4, 7, 4) CartesianIndex(1, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 5) … CartesianIndex(3, 7, 5) CartesianIndex(7, 8, 5)]

CartesianIndex{3}[CartesianIndex(6, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(7, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(7, 2, 7) … CartesianIndex(3, 7, 7) CartesianIndex(4, 8, 7)]

CartesianIndex{3}[CartesianIndex(8, 1, 8) CartesianIndex(5, 2, 8) … CartesianIndex(1, 7, 8) CartesianIndex(4, 8, 8)] == CartesianIndex{3}[CartesianIndex(1, 1, 1) CartesianIndex(3, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(7, 8, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(3, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(1, 8, 2)]

CartesianIndex{3}[CartesianIndex(4, 1, 3) CartesianIndex(5, 2, 3) … CartesianIndex(2, 7, 3) CartesianIndex(3, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(1, 2, 4) … CartesianIndex(4, 7, 4) CartesianIndex(1, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 5) … CartesianIndex(3, 7, 5) CartesianIndex(7, 8, 5)]

CartesianIndex{3}[CartesianIndex(6, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(7, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(7, 2, 7) … CartesianIndex(3, 7, 7) CartesianIndex(4, 8, 7)]

CartesianIndex{3}[CartesianIndex(8, 1, 8) CartesianIndex(5, 2, 8) … CartesianIndex(1, 7, 8) CartesianIndex(4, 8, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
  Expression: argmin(a0, dims = i) == argmin(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(6, 1, 1) CartesianIndex(2, 2, 1) … CartesianIndex(2, 7, 1) CartesianIndex(5, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(7, 2, 2) … CartesianIndex(2, 7, 2) CartesianIndex(4, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(7, 2, 3) … CartesianIndex(5, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(4, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(4, 1, 5) CartesianIndex(2, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(5, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(5, 7, 6) CartesianIndex(5, 8, 6)]

CartesianIndex{3}[CartesianIndex(4, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(1, 7, 7) CartesianIndex(2, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8)] == CartesianIndex{3}[CartesianIndex(6, 1, 1) CartesianIndex(2, 2, 1) … CartesianIndex(2, 7, 1) CartesianIndex(5, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(7, 2, 2) … CartesianIndex(2, 7, 2) CartesianIndex(4, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(3, 2, 3) … CartesianIndex(5, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(5, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(4, 1, 5) CartesianIndex(2, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(5, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(5, 7, 6) CartesianIndex(5, 8, 6)]

CartesianIndex{3}[CartesianIndex(4, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(1, 7, 7) CartesianIndex(2, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
  Expression: findmax(a0, dims = i) == findmax(a1, dims = i)
   Evaluated: ([0.9316378129331424 0.9739431179388978 … 0.8884472718181615 0.9966380206932022]

[0.9815254869716623 0.6253592254058904 … 0.962403956281203 0.9742550373274788]

[0.915595472628699 0.9819515385217972 … 0.9392349263832787 0.8090558131764587]

[0.9933457446263012 0.9336296729375912 … 0.8158735762750096 0.9150837813930315]

[0.9515179936413407 0.9336859806486211 … 0.9391898011766546 0.780285275484969]

[0.79974273877109 0.9948624497167464 … 0.8909571898367437 0.8549337046666061]

[0.9019909166940305 0.9673489767753991 … 0.8517321503830206 0.9767519030900298]

[0.9501319556884611 0.999483799311466 … 0.8777724887884248 0.6529440626073353], CartesianIndex{3}[CartesianIndex(1, 1, 1) CartesianIndex(3, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(7, 8, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(4, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(1, 8, 2)]

CartesianIndex{3}[CartesianIndex(4, 1, 3) CartesianIndex(2, 2, 3) … CartesianIndex(2, 7, 3) CartesianIndex(3, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(1, 2, 4) … CartesianIndex(4, 7, 4) CartesianIndex(1, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 5) … CartesianIndex(3, 7, 5) CartesianIndex(7, 8, 5)]

CartesianIndex{3}[CartesianIndex(6, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(7, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(7, 2, 7) … CartesianIndex(3, 7, 7) CartesianIndex(4, 8, 7)]

CartesianIndex{3}[CartesianIndex(8, 1, 8) CartesianIndex(5, 2, 8) … CartesianIndex(1, 7, 8) CartesianIndex(4, 8, 8)]) == ([0.9316378129331424 0.9739431179388978 … 0.8884472718181615 0.9966380206932022]

[0.9815254869716623 0.8712341248739561 … 0.962403956281203 0.9742550373274788]

[0.915595472628699 0.9494299013103074 … 0.9392349263832787 0.8090558131764587]

[0.9933457446263012 0.9336296729375912 … 0.8158735762750096 0.9150837813930315]

[0.9515179936413407 0.9336859806486211 … 0.9391898011766546 0.780285275484969]

[0.79974273877109 0.9948624497167464 … 0.8909571898367437 0.8549337046666061]

[0.9019909166940305 0.9673489767753991 … 0.8517321503830206 0.9767519030900298]

[0.9501319556884611 0.999483799311466 … 0.8777724887884248 0.6529440626073353], CartesianIndex{3}[CartesianIndex(1, 1, 1) CartesianIndex(3, 2, 1) … CartesianIndex(1, 7, 1) CartesianIndex(7, 8, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(3, 2, 2) … CartesianIndex(8, 7, 2) CartesianIndex(1, 8, 2)]

CartesianIndex{3}[CartesianIndex(4, 1, 3) CartesianIndex(5, 2, 3) … CartesianIndex(2, 7, 3) CartesianIndex(3, 8, 3)]

CartesianIndex{3}[CartesianIndex(6, 1, 4) CartesianIndex(1, 2, 4) … CartesianIndex(4, 7, 4) CartesianIndex(1, 8, 4)]

CartesianIndex{3}[CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 5) … CartesianIndex(3, 7, 5) CartesianIndex(7, 8, 5)]

CartesianIndex{3}[CartesianIndex(6, 1, 6) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 6) CartesianIndex(7, 8, 6)]

CartesianIndex{3}[CartesianIndex(5, 1, 7) CartesianIndex(7, 2, 7) … CartesianIndex(3, 7, 7) CartesianIndex(4, 8, 7)]

CartesianIndex{3}[CartesianIndex(8, 1, 8) CartesianIndex(5, 2, 8) … CartesianIndex(1, 7, 8) CartesianIndex(4, 8, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
  Expression: findmin(a0, dims = i) == findmin(a1, dims = i)
   Evaluated: ([0.18592621356234473 0.05754342057919959 … 0.13811456038299275 0.15731574366790335]

[0.017470733731113963 0.020345939292932824 … 0.18012344314697581 0.026085667765904708]

[0.24745692306285116 0.4337901268906694 … 0.2193780229035689 0.11799889414127462]

[0.11726877389068857 0.00632302152113251 … 0.13303750650548052 0.24547504265370246]

[0.07510885550875401 0.016893305742972764 … 0.02454043554365759 0.04390215570210998]

[0.01868041512266716 0.399592310199552 … 0.0021492089781243173 0.03835649325671575]

[0.19059948483573486 0.21584876590133173 … 0.15996235148218974 0.20458363525040446]

[0.0019685232366857264 0.34292355077393966 … 0.08988134880785736 0.10708515207342528], CartesianIndex{3}[CartesianIndex(6, 1, 1) CartesianIndex(2, 2, 1) … CartesianIndex(2, 7, 1) CartesianIndex(5, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(7, 2, 2) … CartesianIndex(2, 7, 2) CartesianIndex(4, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(7, 2, 3) … CartesianIndex(5, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(4, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(4, 1, 5) CartesianIndex(2, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(5, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(5, 7, 6) CartesianIndex(5, 8, 6)]

CartesianIndex{3}[CartesianIndex(4, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(1, 7, 7) CartesianIndex(2, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8)]) == ([0.18592621356234473 0.05754342057919959 … 0.13811456038299275 0.15731574366790335]

[0.017470733731113963 0.020345939292932824 … 0.18012344314697581 0.026085667765904708]

[0.24745692306285116 0.22484270877364732 … 0.2193780229035689 0.11799889414127462]

[0.11726877389068857 0.07373923400152882 … 0.13303750650548052 0.24547504265370246]

[0.07510885550875401 0.016893305742972764 … 0.02454043554365759 0.04390215570210998]

[0.01868041512266716 0.399592310199552 … 0.0021492089781243173 0.03835649325671575]

[0.19059948483573486 0.21584876590133173 … 0.15996235148218974 0.20458363525040446]

[0.0019685232366857264 0.34292355077393966 … 0.08988134880785736 0.10708515207342528], CartesianIndex{3}[CartesianIndex(6, 1, 1) CartesianIndex(2, 2, 1) … CartesianIndex(2, 7, 1) CartesianIndex(5, 8, 1)]

CartesianIndex{3}[CartesianIndex(4, 1, 2) CartesianIndex(7, 2, 2) … CartesianIndex(2, 7, 2) CartesianIndex(4, 8, 2)]

CartesianIndex{3}[CartesianIndex(8, 1, 3) CartesianIndex(3, 2, 3) … CartesianIndex(5, 7, 3) CartesianIndex(8, 8, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(5, 2, 4) … CartesianIndex(3, 7, 4) CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(4, 1, 5) CartesianIndex(2, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(5, 8, 5)]

CartesianIndex{3}[CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 6) … CartesianIndex(5, 7, 6) CartesianIndex(5, 8, 6)]

CartesianIndex{3}[CartesianIndex(4, 1, 7) CartesianIndex(8, 2, 7) … CartesianIndex(1, 7, 7) CartesianIndex(2, 8, 7)]

CartesianIndex{3}[CartesianIndex(4, 1, 8) CartesianIndex(6, 2, 8) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
  Expression: argmax(a0, dims = i) == argmax(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 8, 1); CartesianIndex(2, 4, 1); … ; CartesianIndex(7, 8, 1); CartesianIndex(8, 5, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2); CartesianIndex(2, 8, 2); … ; CartesianIndex(7, 8, 2); CartesianIndex(8, 7, 2)]

CartesianIndex{3}[CartesianIndex(1, 7, 3); CartesianIndex(2, 2, 3); … ; CartesianIndex(7, 6, 3); CartesianIndex(8, 2, 3)]

CartesianIndex{3}[CartesianIndex(1, 2, 4); CartesianIndex(2, 4, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 7, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 1, 5); CartesianIndex(8, 4, 5)]

CartesianIndex{3}[CartesianIndex(1, 2, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 6, 6)]

CartesianIndex{3}[CartesianIndex(1, 4, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 2, 7); CartesianIndex(8, 6, 7)]

CartesianIndex{3}[CartesianIndex(1, 7, 8); CartesianIndex(2, 4, 8); … ; CartesianIndex(7, 2, 8); CartesianIndex(8, 4, 8)] == CartesianIndex{3}[CartesianIndex(1, 8, 1); CartesianIndex(2, 4, 1); … ; CartesianIndex(7, 8, 1); CartesianIndex(8, 5, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2); CartesianIndex(2, 3, 2); … ; CartesianIndex(7, 8, 2); CartesianIndex(8, 7, 2)]

CartesianIndex{3}[CartesianIndex(1, 7, 3); CartesianIndex(2, 7, 3); … ; CartesianIndex(7, 6, 3); CartesianIndex(8, 2, 3)]

CartesianIndex{3}[CartesianIndex(1, 2, 4); CartesianIndex(2, 6, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 7, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 1, 5); CartesianIndex(8, 4, 5)]

CartesianIndex{3}[CartesianIndex(1, 2, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 6, 6)]

CartesianIndex{3}[CartesianIndex(1, 4, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 2, 7); CartesianIndex(8, 6, 7)]

CartesianIndex{3}[CartesianIndex(1, 7, 8); CartesianIndex(2, 4, 8); … ; CartesianIndex(7, 2, 8); CartesianIndex(8, 4, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
  Expression: argmin(a0, dims = i) == argmin(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 3, 1); CartesianIndex(2, 2, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 2, 2); CartesianIndex(2, 4, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 1, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3); CartesianIndex(2, 6, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 7, 4); … ; CartesianIndex(7, 3, 4); CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(1, 6, 5); CartesianIndex(2, 2, 5); … ; CartesianIndex(7, 3, 5); CartesianIndex(8, 7, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 5, 6); CartesianIndex(8, 1, 6)]

CartesianIndex{3}[CartesianIndex(1, 7, 7); CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 6, 7); CartesianIndex(8, 2, 7)]

CartesianIndex{3}[CartesianIndex(1, 4, 8); CartesianIndex(2, 5, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 8, 8)] == CartesianIndex{3}[CartesianIndex(1, 3, 1); CartesianIndex(2, 2, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 2, 2); CartesianIndex(2, 4, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 1, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3); CartesianIndex(2, 4, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 2, 4); … ; CartesianIndex(7, 3, 4); CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(1, 6, 5); CartesianIndex(2, 2, 5); … ; CartesianIndex(7, 3, 5); CartesianIndex(8, 7, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 5, 6); CartesianIndex(8, 1, 6)]

CartesianIndex{3}[CartesianIndex(1, 7, 7); CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 6, 7); CartesianIndex(8, 2, 7)]

CartesianIndex{3}[CartesianIndex(1, 4, 8); CartesianIndex(2, 5, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 8, 8)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
  Expression: findmax(a0, dims = i) == findmax(a1, dims = i)
   Evaluated: ([0.959040654806234; 0.8451004702567848; … ; 0.9966380206932022; 0.6963208781586281]

[0.9815254869716623; 0.7935485858682807; … ; 0.8515080230984087; 0.962403956281203]

[0.9053739496758275; 0.9819515385217972; … ; 0.9424153064224665; 0.9046024767581147]

[0.9336296729375912; 0.9288409640125923; … ; 0.9086910849746546; 0.9803691190097348]

[0.8666332505544745; 0.7316312766404209; … ; 0.9515179936413407; 0.9655757182586362]

[0.9948624497167464; 0.9200416957606246; … ; 0.8549337046666061; 0.768553557771193]

[0.9492059309543668; 0.8454779933496415; … ; 0.9673489767753991; 0.9613511621149187]

[0.8777724887884248; 0.9262717063589272; … ; 0.6365627047603337; 0.9989108487363694], CartesianIndex{3}[CartesianIndex(1, 8, 1); CartesianIndex(2, 4, 1); … ; CartesianIndex(7, 8, 1); CartesianIndex(8, 5, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2); CartesianIndex(2, 8, 2); … ; CartesianIndex(7, 8, 2); CartesianIndex(8, 7, 2)]

CartesianIndex{3}[CartesianIndex(1, 7, 3); CartesianIndex(2, 2, 3); … ; CartesianIndex(7, 6, 3); CartesianIndex(8, 2, 3)]

CartesianIndex{3}[CartesianIndex(1, 2, 4); CartesianIndex(2, 4, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 7, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 1, 5); CartesianIndex(8, 4, 5)]

CartesianIndex{3}[CartesianIndex(1, 2, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 6, 6)]

CartesianIndex{3}[CartesianIndex(1, 4, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 2, 7); CartesianIndex(8, 6, 7)]

CartesianIndex{3}[CartesianIndex(1, 7, 8); CartesianIndex(2, 4, 8); … ; CartesianIndex(7, 2, 8); CartesianIndex(8, 4, 8)]) == ([0.959040654806234; 0.8451004702567848; … ; 0.9966380206932022; 0.6963208781586281]

[0.9815254869716623; 0.9758816842611173; … ; 0.8515080230984087; 0.962403956281203]

[0.9053739496758275; 0.9392349263832787; … ; 0.9424153064224665; 0.9046024767581147]

[0.9336296729375912; 0.7158369297134113; … ; 0.9086910849746546; 0.9803691190097348]

[0.8666332505544745; 0.7316312766404209; … ; 0.9515179936413407; 0.9655757182586362]

[0.9948624497167464; 0.9200416957606246; … ; 0.8549337046666061; 0.768553557771193]

[0.9492059309543668; 0.8454779933496415; … ; 0.9673489767753991; 0.9613511621149187]

[0.8777724887884248; 0.9262717063589272; … ; 0.6365627047603337; 0.9989108487363694], CartesianIndex{3}[CartesianIndex(1, 8, 1); CartesianIndex(2, 4, 1); … ; CartesianIndex(7, 8, 1); CartesianIndex(8, 5, 1)]

CartesianIndex{3}[CartesianIndex(1, 1, 2); CartesianIndex(2, 3, 2); … ; CartesianIndex(7, 8, 2); CartesianIndex(8, 7, 2)]

CartesianIndex{3}[CartesianIndex(1, 7, 3); CartesianIndex(2, 7, 3); … ; CartesianIndex(7, 6, 3); CartesianIndex(8, 2, 3)]

CartesianIndex{3}[CartesianIndex(1, 2, 4); CartesianIndex(2, 6, 4); … ; CartesianIndex(7, 4, 4); CartesianIndex(8, 6, 4)]

CartesianIndex{3}[CartesianIndex(1, 7, 5); CartesianIndex(2, 4, 5); … ; CartesianIndex(7, 1, 5); CartesianIndex(8, 4, 5)]

CartesianIndex{3}[CartesianIndex(1, 2, 6); CartesianIndex(2, 3, 6); … ; CartesianIndex(7, 8, 6); CartesianIndex(8, 6, 6)]

CartesianIndex{3}[CartesianIndex(1, 4, 7); CartesianIndex(2, 4, 7); … ; CartesianIndex(7, 2, 7); CartesianIndex(8, 6, 7)]

CartesianIndex{3}[CartesianIndex(1, 7, 8); CartesianIndex(2, 4, 8); … ; CartesianIndex(7, 2, 8); CartesianIndex(8, 4, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
  Expression: findmin(a0, dims = i) == findmin(a1, dims = i)
   Evaluated: ([0.07460159441643399; 0.05754342057919959; … ; 0.3133918936696307; 0.18307176680173787]

[0.386221147139703; 0.17839768882805007; … ; 0.020345939292932824; 0.0870968380157302]

[0.30272033048048463; 0.30850457585667335; … ; 0.26117022785759136; 0.014812392433004584]

[0.11726877389068857; 0.19013124688813265; … ; 0.012751172133095068; 0.24547504265370246]

[0.05829225495247137; 0.016893305742972764; … ; 0.051771385324071995; 0.02454043554365759]

[0.11402308199295774; 0.019211767132608637; … ; 0.11453507757001313; 0.01868041512266716]

[0.15996235148218974; 0.20458363525040446; … ; 0.03164678292912493; 0.21584876590133173]

[0.06882543068705416; 0.1091984127597796; … ; 0.08988134880785736; 0.31992570096047834], CartesianIndex{3}[CartesianIndex(1, 3, 1); CartesianIndex(2, 2, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 2, 2); CartesianIndex(2, 4, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 1, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3); CartesianIndex(2, 6, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 7, 4); … ; CartesianIndex(7, 3, 4); CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(1, 6, 5); CartesianIndex(2, 2, 5); … ; CartesianIndex(7, 3, 5); CartesianIndex(8, 7, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 5, 6); CartesianIndex(8, 1, 6)]

CartesianIndex{3}[CartesianIndex(1, 7, 7); CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 6, 7); CartesianIndex(8, 2, 7)]

CartesianIndex{3}[CartesianIndex(1, 4, 8); CartesianIndex(2, 5, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 8, 8)]) == ([0.07460159441643399; 0.05754342057919959; … ; 0.3133918936696307; 0.18307176680173787]

[0.386221147139703; 0.03537799041399792; … ; 0.020345939292932824; 0.0870968380157302]

[0.30272033048048463; 0.1354891494519066; … ; 0.26117022785759136; 0.014812392433004584]

[0.11726877389068857; 0.11040859094121025; … ; 0.012751172133095068; 0.24547504265370246]

[0.05829225495247137; 0.016893305742972764; … ; 0.051771385324071995; 0.02454043554365759]

[0.11402308199295774; 0.019211767132608637; … ; 0.11453507757001313; 0.01868041512266716]

[0.15996235148218974; 0.20458363525040446; … ; 0.03164678292912493; 0.21584876590133173]

[0.06882543068705416; 0.1091984127597796; … ; 0.08988134880785736; 0.31992570096047834], CartesianIndex{3}[CartesianIndex(1, 3, 1); CartesianIndex(2, 2, 1); … ; CartesianIndex(7, 5, 1); CartesianIndex(8, 6, 1)]

CartesianIndex{3}[CartesianIndex(1, 2, 2); CartesianIndex(2, 4, 2); … ; CartesianIndex(7, 2, 2); CartesianIndex(8, 1, 2)]

CartesianIndex{3}[CartesianIndex(1, 1, 3); CartesianIndex(2, 4, 3); … ; CartesianIndex(7, 7, 3); CartesianIndex(8, 5, 3)]

CartesianIndex{3}[CartesianIndex(1, 1, 4); CartesianIndex(2, 2, 4); … ; CartesianIndex(7, 3, 4); CartesianIndex(8, 8, 4)]

CartesianIndex{3}[CartesianIndex(1, 6, 5); CartesianIndex(2, 2, 5); … ; CartesianIndex(7, 3, 5); CartesianIndex(8, 7, 5)]

CartesianIndex{3}[CartesianIndex(1, 8, 6); CartesianIndex(2, 7, 6); … ; CartesianIndex(7, 5, 6); CartesianIndex(8, 1, 6)]

CartesianIndex{3}[CartesianIndex(1, 7, 7); CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 6, 7); CartesianIndex(8, 2, 7)]

CartesianIndex{3}[CartesianIndex(1, 4, 8); CartesianIndex(2, 5, 8); … ; CartesianIndex(7, 7, 8); CartesianIndex(8, 8, 8)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
  Expression: argmax(a0, dims = i) == argmax(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 2); CartesianIndex(2, 1, 8) CartesianIndex(2, 2, 3) … CartesianIndex(2, 7, 3) CartesianIndex(2, 8, 2); … ; CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 6) CartesianIndex(7, 8, 1); CartesianIndex(8, 1, 8) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 2) CartesianIndex(8, 8, 1)] == CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 2); CartesianIndex(2, 1, 8) CartesianIndex(2, 2, 6) … CartesianIndex(2, 7, 3) CartesianIndex(2, 8, 2); … ; CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 6) CartesianIndex(7, 8, 1); CartesianIndex(8, 1, 8) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 2) CartesianIndex(8, 8, 1)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:55
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
  Expression: argmin(a0, dims = i) == argmin(a1, dims = i)
   Evaluated: CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(1, 2, 1) … CartesianIndex(1, 7, 7) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 7) CartesianIndex(2, 2, 5) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 1, 8) CartesianIndex(7, 2, 2) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8); CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(8, 8, 3)] == CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(1, 2, 1) … CartesianIndex(1, 7, 7) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 7) CartesianIndex(2, 2, 5) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 1, 8) CartesianIndex(7, 2, 2) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8); CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(8, 8, 3)]
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:56
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
  Expression: findmax(a0, dims = i) == findmax(a1, dims = i)
   Evaluated: ([0.9815254869716623 0.9948624497167464 … 0.9053739496758275 0.9742550373274788; 0.8994799284072208 0.9819515385217972 … 0.9392349263832787 0.7935485858682807; … ; 0.9515179936413407 0.9673489767753991 … 0.6006854180493975 0.9966380206932022; 0.9501319556884611 0.9046024767581147 … 0.962403956281203 0.513268160356215], CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 2); CartesianIndex(2, 1, 8) CartesianIndex(2, 2, 3) … CartesianIndex(2, 7, 3) CartesianIndex(2, 8, 2); … ; CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 6) CartesianIndex(7, 8, 1); CartesianIndex(8, 1, 8) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 2) CartesianIndex(8, 8, 1)]) == ([0.9815254869716623 0.9948624497167464 … 0.9053739496758275 0.9742550373274788; 0.8994799284072208 0.8358528224072617 … 0.9392349263832787 0.7935485858682807; … ; 0.9515179936413407 0.9673489767753991 … 0.6006854180493975 0.9966380206932022; 0.9501319556884611 0.9046024767581147 … 0.962403956281203 0.513268160356215], CartesianIndex{3}[CartesianIndex(1, 1, 2) CartesianIndex(1, 2, 6) … CartesianIndex(1, 7, 3) CartesianIndex(1, 8, 2); CartesianIndex(2, 1, 8) CartesianIndex(2, 2, 6) … CartesianIndex(2, 7, 3) CartesianIndex(2, 8, 2); … ; CartesianIndex(7, 1, 5) CartesianIndex(7, 2, 7) … CartesianIndex(7, 7, 6) CartesianIndex(7, 8, 1); CartesianIndex(8, 1, 8) CartesianIndex(8, 2, 3) … CartesianIndex(8, 7, 2) CartesianIndex(8, 8, 1)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:57
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
cuarray: Test Failed at /home/pkgeval/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
  Expression: findmin(a0, dims = i) == findmin(a1, dims = i)
   Evaluated: ([0.11726877389068857 0.10444987363392699 … 0.15996235148218974 0.11402308199295774; 0.2584387480348336 0.016893305742972764 … 0.019211767132608637 0.20458363525040446; … ; 0.1478817935629364 0.020345939292932824 … 0.08988134880785736 0.10708515207342528; 0.01868041512266716 0.09090761499232736 … 0.02454043554365759 0.11799889414127462], CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(1, 2, 1) … CartesianIndex(1, 7, 7) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 7) CartesianIndex(2, 2, 5) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 1, 8) CartesianIndex(7, 2, 2) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8); CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(8, 8, 3)]) == ([0.11726877389068857 0.10444987363392699 … 0.15996235148218974 0.11402308199295774; 0.2584387480348336 0.016893305742972764 … 0.019211767132608637 0.20458363525040446; … ; 0.1478817935629364 0.020345939292932824 … 0.08988134880785736 0.10708515207342528; 0.01868041512266716 0.09090761499232736 … 0.02454043554365759 0.11799889414127462], CartesianIndex{3}[CartesianIndex(1, 1, 4) CartesianIndex(1, 2, 1) … CartesianIndex(1, 7, 7) CartesianIndex(1, 8, 6); CartesianIndex(2, 1, 7) CartesianIndex(2, 2, 5) … CartesianIndex(2, 7, 6) CartesianIndex(2, 8, 7); … ; CartesianIndex(7, 1, 8) CartesianIndex(7, 2, 2) … CartesianIndex(7, 7, 8) CartesianIndex(7, 8, 8); CartesianIndex(8, 1, 6) CartesianIndex(8, 2, 5) … CartesianIndex(8, 7, 5) CartesianIndex(8, 8, 3)])
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:58
 [2] top-level scope
   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [3] top-level scope
   @ ~/.julia/packages/Knet/8aEsn/test/cuarray.jl:7
 52.126736 seconds (25.09 M allocations: 1.444 GiB, 1.88% gc time)
update.jl	┌ Warning: optimizers is deprecated, use sgd, adam etc. instead.
└ @ Knet.Train20 ~/.julia/packages/Knet/8aEsn/src/train20/update.jl:598
 54.415579 seconds (62.99 M allocations: 3.613 GiB, 4.93% gc time)
linalg.jl	Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bdef699f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bdef62e3)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bdef60bc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bdef5ef4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bdef5c37)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p2 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:85
unknown function (ip: 0x7f03bdef562f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bdef699f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bdef62e3)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bdef60bc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bdef5ef4)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bdef5c37)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p2 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:85
unknown function (ip: 0x7f03bdef562f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88
  Test threw exception
  Expression: isapprox(p2(a), Array(p2(ka)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p2#141"{Vector{Int64}})(x::Knet.KnetArrays.KnetMatrix{Float32})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:88
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
 [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:89
  Test threw exception
  Expression: gradcheck(p2, ka)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:88
  Test threw exception
  Expression: isapprox(p2(a), Array(p2(ka)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p2#141"{Vector{Int64}})(x::Knet.KnetArrays.KnetMatrix{Float32})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:88
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
 [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:89
  Test threw exception
  Expression: gradcheck(p2, ka)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceMatrix{Float32, CUDA.AS.Global}, CuDeviceMatrix{Float32, CUDA.AS.Global}, Tuple{Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuMatrix{Float32}, ::CuMatrix{Float32}, ::Tuple{Int64, Int64}; target::CuMatrix{Float32}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuMatrix{Float32}, src::CuMatrix{Float32}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::Knet.KnetArrays.KnetMatrix{Float32}, x::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::Knet.KnetArrays.KnetMatrix{Float32}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{Knet.KnetArrays.KnetMatrix{Float32}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p2#141"{Vector{Int64}})(x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:85
   [34] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{Knet.KnetArrays.KnetMatrix{Float32}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p2#141"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p2#141"{Vector{Int64}}, x::Knet.KnetArrays.KnetMatrix{Float32}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::Knet.KnetArrays.KnetMatrix{Float32})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:89
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:99
  Test threw exception
  Expression: isapprox(p3(a3), Array(p3(k3)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p3#142"{Vector{Int64}})(x::KnetArray{Float64, 3})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:99
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:100
  Test threw exception
  Expression: gradcheck(p3, k3)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 3})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 3, CUDA.AS.Global}, CuDeviceArray{Float64, 3, CUDA.AS.Global}, Tuple{Int64, Int64, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 3}, ::CuArray{Float64, 3}, ::Tuple{Int64, Int64, Int64}; target::CuArray{Float64, 3}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 3}, src::CuArray{Float64, 3}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 3}, x::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 3}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 3}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p3#142"{Vector{Int64}})(x::Param{KnetArray{Float64, 3}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:96
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 3}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 3}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p3#142"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p3#142"{Vector{Int64}}, x::KnetArray{Float64, 3}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 3})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:100
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:313
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1895
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bdd060ff)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bdd05a23)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bdd057fc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bdd05624)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bdd05367)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p4 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:107
unknown function (ip: 0x7f03bdd04d5f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
Internal error: encountered unexpected error during compilation of #cached_compilation#100:
ErrorException("unsupported or misplaced expression "return" in function #cached_compilation#100")
jl_errorf at /buildworker/worker/package_linux64/build/src/rtutils.c:77
emit_expr at /buildworker/worker/package_linux64/build/src/codegen.cpp:4539
emit_ssaval_assign at /buildworker/worker/package_linux64/build/src/codegen.cpp:3978
emit_stmtpos at /buildworker/worker/package_linux64/build/src/codegen.cpp:4220 [inlined]
emit_function at /buildworker/worker/package_linux64/build/src/codegen.cpp:6778
jl_emit_code at /buildworker/worker/package_linux64/build/src/codegen.cpp:7140
jl_emit_codeinst at /buildworker/worker/package_linux64/build/src/codegen.cpp:7174
_jl_compile_codeinst at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:102
jl_generate_fptr_for_unspecialized at /buildworker/worker/package_linux64/build/src/jitlayers.cpp:351
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:1901
jl_compile_method_internal at /buildworker/worker/package_linux64/build/src/gf.c:2162 [inlined]
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2155 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cached_compilation at /home/pkgeval/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
unknown function (ip: 0x7f03bdd060ff)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#cufunction#778 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
cufunction at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
#launch_heuristic#838 at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
unknown function (ip: 0x7f03bdd05a23)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
launch_heuristic at /home/pkgeval/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
unknown function (ip: 0x7f03bdd057fc)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
#gpu_call#1 at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
unknown function (ip: 0x7f03bdd05624)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_apply at /buildworker/worker/package_linux64/build/src/builtins.c:653
gpu_call##kw at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:46
unknown function (ip: 0x7f03bdd05367)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
permutedims! at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
permutedims at /home/pkgeval/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
p4 at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:107
unknown function (ip: 0x7f03bdd04d5f)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:489
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:12
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
macro expansion at ./timing.jl:174 [inlined]
macro expansion at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
top-level scope at /home/pkgeval/.julia/packages/Knet/8aEsn/test/runtests.jl:11
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:831
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345 [inlined]
include_string at ./loading.jl:1004
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
_include at ./loading.jl:1058
include at ./client.jl:444
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/src/julia.h:1682 [inlined]
do_call at /buildworker/worker/package_linux64/build/src/interpreter.c:115
eval_value at /buildworker/worker/package_linux64/build/src/interpreter.c:204
eval_stmt_value at /buildworker/worker/package_linux64/build/src/interpreter.c:155 [inlined]
eval_body at /buildworker/worker/package_linux64/build/src/interpreter.c:561
jl_interpret_toplevel_thunk at /buildworker/worker/package_linux64/build/src/interpreter.c:669
top-level scope at none:6
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:837
jl_toplevel_eval_flex at /buildworker/worker/package_linux64/build/src/toplevel.c:785
jl_toplevel_eval_in at /buildworker/worker/package_linux64/build/src/toplevel.c:880
eval at ./boot.jl:345
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
exec_options at ./client.jl:261
_start at ./client.jl:485
jfptr__start_31430.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
_jl_invoke at /buildworker/worker/package_linux64/build/src/gf.c:2163 [inlined]
jl_apply_generic at /buildworker/worker/package_linux64/build/src/gf.c:2345
jl_apply at /buildworker/worker/package_linux64/build/ui/../src/julia.h:1682 [inlined]
true_main at /buildworker/worker/package_linux64/build/ui/repl.c:106
main at /buildworker/worker/package_linux64/build/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
_start at /opt/julia/bin/julia (unknown line)
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:111
  Test threw exception
  Expression: gradcheck(p4, k4)
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
   [1] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:148
   [2] differentiate
     @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [3] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [4] gradcheck(f::Function, x::KnetArray{Float64, 4})
     @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [5] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [6] top-level scope
     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [7] top-level scope
     @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
  
  caused by: MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
   [31] forw
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
   [32] permutedims
      @ ./none:0 [inlined]
   [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
   [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
   [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
   [38] differentiate
      @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
   [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
   [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
      @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
   [41] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
   [42] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [43] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
linalg: Error During Test at /home/pkgeval/.julia/packages/Knet/8aEsn/test/linalg.jl:110
  Test threw exception
  Expression: isapprox(p4(a4), Array(p4(k4)))
  MethodError: no method matching Base.CodegenParams(; track_allocations=false, code_coverage=false, static_alloc=false, prefer_specsig=true, emit_function=GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), emitted_function=GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}(GPUCompiler.MethodCompileTracer(PTX CompilerJob of function unbox_uint64(Any) for sm_75, Core.MethodInstance[MethodInstance for unbox_uint64(::Any)], #undef)), gnu_pubnames=false, debug_info_kind=0)
  Closest candidates are:
    Base.CodegenParams(; track_allocations, code_coverage, prefer_specsig, gnu_pubnames, debug_info_kind, lookup, generic_context) at reflection.jl:972 got unsupported keyword arguments "static_alloc", "emit_function", "emitted_function"
  Stacktrace:
    [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
      @ Base ./error.jl:157
    [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
    [3] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
    [5] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [6] macro expansion
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
    [7] macro expansion
      @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
    [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
    [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
   [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
   [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
   [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
      @ Base ./dict.jl:465
   [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
   [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
   [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
   [16] compile
      @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
   [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
   [18] _cufunction
      @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
   [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
   [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
   [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
      @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
   [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
   [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
   [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
   [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
      @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
   [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
   [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
      @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
   [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
   [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
      @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
   [30] (::var"#p4#143"{Vector{Int64}})(x::KnetArray{Float64, 4})
      @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
   [31] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:110
   [32] top-level scope
      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
   [33] top-level scope
      @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12

Stacktrace:
  [1] kwerr(kw::NamedTuple{(:track_allocations, :code_coverage, :static_alloc, :prefer_specsig, :emit_function, :emitted_function, :gnu_pubnames, :debug_info_kind), Tuple{Bool, Bool, Bool, Bool, GPUCompiler.var"#hook_emit_function#36"{GPUCompiler.MethodCompileTracer}, GPUCompiler.var"#hook_emitted_function#37"{GPUCompiler.MethodCompileTracer}, Bool, Int32}}, args::Type)
    @ Base ./error.jl:157
  [2] compile_method_instance(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:119
  [3] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [4] irgen(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, method_instance::Core.MethodInstance, world::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/irgen.jl:332
  [5] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [6] macro expansion
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:101 [inlined]
  [7] macro expansion
    @ ~/.julia/packages/TimerOutputs/dVnaw/src/TimerOutput.jl:206 [inlined]
  [8] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:100
  [9] emit_function!(mod::LLVM.Module, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, f::Function, method::GPUCompiler.Runtime.RuntimeMethodInstance)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:77
 [10] build_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:117
 [11] (::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String})()
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:159
 [12] get!(default::GPUCompiler.var"#65#68"{GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}, String, String}, h::Dict{String, LLVM.Module}, key::String)
    @ Base ./dict.jl:465
 [13] load_runtime(job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/rtlib.jl:151
 [14] codegen(output::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:96
 [15] compile(target::Symbol, job::GPUCompiler.CompilerJob{GPUCompiler.PTXCompilerTarget, CUDA.CUDACompilerParams}; libraries::Bool, deferred_codegen::Bool, optimize::Bool, strip::Bool, validate::Bool, only_entry::Bool)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:39
 [16] compile
    @ ~/.julia/packages/GPUCompiler/GKp4B/src/driver.jl:35 [inlined]
 [17] _cufunction(source::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:310
 [18] _cufunction
    @ ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:304 [inlined]
 [19] check_cache(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, id::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:24
 [20] cached_compilation(driver::typeof(CUDA._cufunction), spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ GPUCompiler ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:208
 [21] cached_compilation(driver::Function, spec::GPUCompiler.FunctionSpec{GPUArrays.var"#46#47", Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}, env::UInt64)
    @ GPUCompiler ~/.julia/packages/GPUCompiler/GKp4B/src/cache.jl:40
 [22] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}}; name::Nothing, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:298
 [23] cufunction(f::GPUArrays.var"#46#47", tt::Type{Tuple{CUDA.CuKernelContext, CuDeviceArray{Float64, 4, CUDA.AS.Global}, CuDeviceArray{Float64, 4, CUDA.AS.Global}, NTuple{4, Int64}}})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/compiler/execution.jl:293
 [24] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; maximize_blocksize::Bool)
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:19
 [25] launch_heuristic(::CUDA.CuArrayBackend, ::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64})
    @ CUDA ~/.julia/packages/CUDA/dZvbp/src/gpuarrays.jl:17
 [26] gpu_call(::GPUArrays.var"#46#47", ::CuArray{Float64, 4}, ::CuArray{Float64, 4}, ::NTuple{4, Int64}; target::CuArray{Float64, 4}, total_threads::Nothing, threads::Nothing, blocks::Nothing, name::String)
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/device/execution.jl:61
 [27] permutedims!(dest::CuArray{Float64, 4}, src::CuArray{Float64, 4}, perm::Vector{Int64})
    @ GPUArrays ~/.julia/packages/GPUArrays/eVYIC/src/host/linalg.jl:207
 [28] permutedims!(y::KnetArray{Float64, 4}, x::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:18
 [29] permutedims(B::KnetArray{Float64, 4}, perm::Vector{Int64})
    @ Knet.KnetArrays ~/.julia/packages/Knet/8aEsn/src/knetarrays/reshape.jl:27
 [30] forw(::Function, ::Param{KnetArray{Float64, 4}}, ::Vararg{Any, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:66
 [31] forw
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:65 [inlined]
 [32] permutedims
    @ ./none:0 [inlined]
 [33] (::var"#p4#143"{Vector{Int64}})(x::Param{KnetArray{Float64, 4}})
    @ Main ~/.julia/packages/Knet/8aEsn/test/linalg.jl:107
 [34] gcsum(f::Function, x::Param{KnetArray{Float64, 4}}; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [35] gcsum(f::Function, x::Param{KnetArray{Float64, 4}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:50
 [36] (::AutoGrad.var"#203#205"{Tuple{}, var"#p4#143"{Vector{Int64}}, Vector{Any}})()
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:205
 [37] differentiate(::Function; o::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:144
 [38] differentiate
    @ ~/.julia/packages/AutoGrad/VFrAv/src/core.jl:135 [inlined]
 [39] gradcheck(f::var"#p4#143"{Vector{Int64}}, x::KnetArray{Float64, 4}; kw::Tuple{}, args::Function, nsample::Int64, verbose::Int64, rtol::Float64, atol::Float64, delta::Float64)
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:39
 [40] gradcheck(f::Function, x::KnetArray{Float64, 4})
    @ AutoGrad ~/.julia/packages/AutoGrad/VFrAv/test/gradcheck.jl:36
 [41] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:111
 [42] top-level scope
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113
 [43] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/linalg.jl:12
 [44] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [45] macro expansion
    @ ./timing.jl:174 [inlined]
 [46] macro expansion
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:4 [inlined]
 [47] macro expansion
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1113 [inlined]
 [48] top-level scope
    @ ~/.julia/packages/Knet/8aEsn/test/runtests.jl:11
 [49] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [50] top-level scope
    @ none:6
 [51] eval(m::Module, e::Any)
    @ Core ./boot.jl:345
 [52] exec_options(opts::Base.JLOptions)
    @ Base ./client.jl:261
