Julia Version 1.6.0-DEV.929
Commit a7ce2a2de7 (2020-09-16 16:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_SIO030/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_SIO030/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.970122 seconds (1.36 M allocations: 72.172 MiB, 1.74% gc time)
Running: chebyshev_quadrature with k=1
  1.671545 seconds (2.15 M allocations: 123.638 MiB, 4.50% gc time)
Running: chebyshev_quadrature with k=2
  0.318946 seconds (409.21 k allocations: 23.543 MiB, 8.50% gc time)
Running: chebyshev_quadrature with k=3
  0.310954 seconds (522.62 k allocations: 28.689 MiB)
Running: chebyshev_quadrature with k=4
  0.368992 seconds (467.28 k allocations: 25.337 MiB, 12.79% gc time)
Running: jacobi_quadrature with α=β=1
 43.378167 seconds (37.16 M allocations: 3.042 GiB, 8.53% gc time)
Running: laguerre_quadrature with k=1
  3.776736 seconds (3.17 M allocations: 177.165 MiB, 3.05% gc time)
Running: legendre_quadrature
  0.212094 seconds (206.06 k allocations: 11.846 MiB)
Running: lobatto_quadrature
  0.339636 seconds (329.76 k allocations: 19.905 MiB)
Running: radau_quadrature
  0.391028 seconds (414.15 k allocations: 25.220 MiB, 8.44% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 86.280433 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.164755 seconds (172.63 k allocations: 3.836 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 88.501463 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rombergs_method
  0.538704 seconds (722.04 k allocations: 41.695 MiB, 5.86% gc time)
Running: simpsons_rule
  0.038690 seconds (45.97 k allocations: 2.054 MiB)
Running: simpsons38_rule
  0.094608 seconds (109.09 k allocations: 5.779 MiB)
Running: trapezoidal_rule
  0.319070 seconds (1.51 M allocations: 25.688 MiB, 5.49% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.090838 seconds (31.26 k allocations: 1.878 MiB)
Running: chebyshev_quadrature with k=1
  0.534107 seconds (272.98 k allocations: 14.186 MiB)
Running: chebyshev_quadrature with k=2
  0.194624 seconds (93.84 k allocations: 2.677 MiB)
Running: chebyshev_quadrature with k=3
  0.201929 seconds (82.09 k allocations: 2.478 MiB)
Running: chebyshev_quadrature with k=4
  0.195843 seconds (64.70 k allocations: 2.124 MiB)
Running: jacobi_quadrature with α=β=1
  3.402919 seconds (499.09 k allocations: 161.590 MiB, 14.62% gc time)
Running: legendre_quadrature
  0.152263 seconds (41.64 k allocations: 2.407 MiB)
Running: lobatto_quadrature
  0.020017 seconds (16.13 k allocations: 1.005 MiB)
Running: radau_quadrature
  0.020900 seconds (16.24 k allocations: 1.012 MiB)
Running: rectangle_rule_left
 33.974457 seconds (471.41 M allocations: 7.025 GiB, 2.79% gc time)
Running: rectangle_rule_midpoint
  0.000031 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.798861 seconds (476.96 M allocations: 7.107 GiB, 2.12% gc time)
Running: rombergs_method
  0.446263 seconds (326.56 k allocations: 18.556 MiB, 1.87% gc time)
Running: simpsons_rule
  0.000038 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.071115 seconds (19.12 k allocations: 1.156 MiB)
Running: trapezoidal_rule
  0.063586 seconds (17.61 k allocations: 1.065 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027381 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.103237 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.105716 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.111909 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.113902 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.300942 seconds (362.17 k allocations: 18.911 MiB)
Running: legendre_quadrature
  0.068563 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000134 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000133 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000532 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000383 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000525 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.069859 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000052 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024703 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022279 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.094131 seconds (72.77 k allocations: 4.238 MiB)
Running: chebyshev_quadrature with k=1
  0.239574 seconds (230.11 k allocations: 12.932 MiB, 12.76% gc time)
Running: chebyshev_quadrature with k=2
  0.228562 seconds (282.77 k allocations: 15.906 MiB)
Running: chebyshev_quadrature with k=3
  0.201425 seconds (262.35 k allocations: 14.298 MiB)
Running: chebyshev_quadrature with k=4
  0.203647 seconds (262.37 k allocations: 14.214 MiB, 11.27% gc time)
Running: jacobi_quadrature with α=β=1
  2.891567 seconds (445.70 k allocations: 163.102 MiB, 4.94% gc time)
Running: legendre_quadrature
  0.216848 seconds (184.98 k allocations: 10.684 MiB)
Running: lobatto_quadrature
  0.242388 seconds (195.85 k allocations: 11.375 MiB)
Running: radau_quadrature
  0.204375 seconds (195.85 k allocations: 11.375 MiB)
Running: rectangle_rule_left
  1.352673 seconds (18.94 k allocations: 1.154 MiB)
Running: rectangle_rule_midpoint
  0.032088 seconds (24.84 k allocations: 1.564 MiB)
Running: rectangle_rule_right
  1.266652 seconds (17.51 k allocations: 1.071 MiB)
Running: rombergs_method
  0.145428 seconds (133.60 k allocations: 7.727 MiB, 12.64% gc time)
Running: simpsons_rule
  0.028564 seconds (27.73 k allocations: 1.739 MiB)
Running: simpsons38_rule
  0.033922 seconds (42.67 k allocations: 2.694 MiB)
Running: trapezoidal_rule
  0.026033 seconds (44.25 k allocations: 1.780 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039538 seconds (99.77 k allocations: 2.991 MiB)
Running: chebyshev_quadrature with k=1
  0.329909 seconds (236.70 k allocations: 13.003 MiB)
Running: chebyshev_quadrature with k=2
  0.206115 seconds (289.78 k allocations: 15.844 MiB)
Running: chebyshev_quadrature with k=3
  0.222749 seconds (269.06 k allocations: 14.290 MiB, 8.36% gc time)
Running: chebyshev_quadrature with k=4
  0.217708 seconds (269.08 k allocations: 14.284 MiB)
Running: hermite_quadrature with k=2
 19.226452 seconds (20.86 M allocations: 1.086 GiB, 10.27% gc time)
Running: jacobi_quadrature with α=β=1
  0.538547 seconds (454.91 k allocations: 49.320 MiB, 8.03% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.310084 seconds (275.97 k allocations: 15.225 MiB, 20.56% gc time)
Running: legendre_quadrature
  0.157348 seconds (191.54 k allocations: 11.003 MiB)
Running: lobatto_quadrature
  0.234721 seconds (216.66 k allocations: 37.144 MiB, 10.23% gc time)
Running: radau_quadrature
  0.197964 seconds (213.27 k allocations: 29.815 MiB)
Running: rectangle_rule_left
  0.026759 seconds (21.89 k allocations: 1.301 MiB)
Running: rectangle_rule_midpoint
  0.025749 seconds (26.66 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.024691 seconds (18.64 k allocations: 1.124 MiB)
Running: rombergs_method
  0.135365 seconds (136.09 k allocations: 7.768 MiB, 16.98% gc time)
Running: simpsons_rule
  0.035044 seconds (39.61 k allocations: 2.073 MiB)
Running: simpsons38_rule
  0.038010 seconds (57.69 k allocations: 3.080 MiB)
Running: trapezoidal_rule
  0.029475 seconds (30.32 k allocations: 1.707 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.060606 seconds (60.13 k allocations: 2.291 MiB)
Running: chebyshev_quadrature with k=1
  0.193650 seconds (232.22 k allocations: 12.800 MiB)
Running: chebyshev_quadrature with k=2
  0.209816 seconds (284.99 k allocations: 15.610 MiB)
Running: chebyshev_quadrature with k=3
  0.261356 seconds (264.48 k allocations: 14.079 MiB, 11.51% gc time)
Running: chebyshev_quadrature with k=4
  0.294801 seconds (264.50 k allocations: 14.078 MiB)
Running: hermite_quadrature with k=2
  0.139933 seconds (170.26 k allocations: 9.829 MiB)
Running: jacobi_quadrature with α=β=1
 10.934743 seconds (448.15 k allocations: 1.175 GiB, 9.68% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.220129 seconds (271.25 k allocations: 15.041 MiB)
Running: legendre_quadrature
  0.162917 seconds (187.10 k allocations: 10.807 MiB)
Running: lobatto_quadrature
  0.291376 seconds (207.42 k allocations: 22.881 MiB, 5.12% gc time)
Running: radau_quadrature
  0.216107 seconds (206.57 k allocations: 20.812 MiB)
Running: rectangle_rule_left
  0.027460 seconds (19.66 k allocations: 1.196 MiB)
Running: rectangle_rule_midpoint
  0.030708 seconds (25.54 k allocations: 1.600 MiB)
Running: rectangle_rule_right
  0.028439 seconds (17.49 k allocations: 1.069 MiB)
Running: rombergs_method
  0.139533 seconds (131.91 k allocations: 7.590 MiB)
Running: simpsons_rule
  0.037906 seconds (32.11 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.107912 seconds (48.48 k allocations: 2.838 MiB, 23.96% gc time)
Running: trapezoidal_rule
  0.028226 seconds (25.21 k allocations: 1.544 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.057511 seconds (31.08 k allocations: 1.886 MiB)
Running: chebyshev_quadrature with k=1
  0.255554 seconds (230.60 k allocations: 13.011 MiB)
Running: chebyshev_quadrature with k=2
  0.223416 seconds (283.28 k allocations: 15.959 MiB)
Running: chebyshev_quadrature with k=3
  0.234640 seconds (262.85 k allocations: 14.291 MiB, 7.86% gc time)
Running: chebyshev_quadrature with k=4
  0.192693 seconds (262.88 k allocations: 14.131 MiB)
Running: jacobi_quadrature with α=β=1
  2.732001 seconds (446.24 k allocations: 194.173 MiB, 9.44% gc time)
Running: legendre_quadrature
  0.196356 seconds (185.48 k allocations: 10.778 MiB, 9.86% gc time)
Running: lobatto_quadrature
  0.172926 seconds (196.35 k allocations: 11.401 MiB)
Running: radau_quadrature
  0.175051 seconds (196.35 k allocations: 11.715 MiB)
Running: rectangle_rule_left
  0.299688 seconds (19.47 k allocations: 1.180 MiB)
Running: rectangle_rule_midpoint
  0.023813 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  0.101446 seconds (17.85 k allocations: 1.087 MiB)
Running: rombergs_method
  0.128869 seconds (144.42 k allocations: 8.455 MiB)
Running: simpsons_rule
  0.029939 seconds (28.43 k allocations: 1.769 MiB)
Running: simpsons38_rule
  0.050699 seconds (43.39 k allocations: 2.724 MiB, 34.55% gc time)
Running: trapezoidal_rule
  0.026340 seconds (45.19 k allocations: 1.814 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034811 seconds (31.84 k allocations: 1.837 MiB)
Running: chebyshev_quadrature with k=1
  0.193217 seconds (231.19 k allocations: 12.975 MiB)
Running: chebyshev_quadrature with k=2
  0.230465 seconds (283.90 k allocations: 15.859 MiB)
Running: chebyshev_quadrature with k=3
  0.255766 seconds (263.43 k allocations: 14.216 MiB, 14.55% gc time)
Running: chebyshev_quadrature with k=4
  0.232177 seconds (263.45 k allocations: 14.296 MiB)
Running: jacobi_quadrature with α=β=1
  1.839708 seconds (446.95 k allocations: 148.856 MiB, 9.22% gc time)
Running: legendre_quadrature
  0.177263 seconds (186.07 k allocations: 10.726 MiB, 8.91% gc time)
Running: lobatto_quadrature
  0.167938 seconds (196.95 k allocations: 11.418 MiB)
Running: radau_quadrature
  0.192903 seconds (196.94 k allocations: 11.435 MiB)
Running: rectangle_rule_left
  1.195011 seconds (19.72 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.027091 seconds (25.18 k allocations: 1.583 MiB)
Running: rectangle_rule_right
  1.187599 seconds (17.81 k allocations: 1.085 MiB)
Running: rombergs_method
  0.140862 seconds (134.82 k allocations: 7.782 MiB)
Running: simpsons_rule
  0.030862 seconds (29.13 k allocations: 1.797 MiB)
Running: simpsons38_rule
  0.033515 seconds (44.09 k allocations: 2.750 MiB)
Running: trapezoidal_rule
  0.027913 seconds (57.42 k allocations: 2.014 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.186584 seconds (146.09 k allocations: 8.743 MiB)
Running: chebyshev_quadrature with k=1
  0.271226 seconds (69.97 k allocations: 2.207 MiB, 11.71% gc time)
Running: chebyshev_quadrature with k=2
  0.178429 seconds (105.13 k allocations: 2.869 MiB)
Running: chebyshev_quadrature with k=3
  0.217863 seconds (92.61 k allocations: 2.656 MiB)
Running: chebyshev_quadrature with k=4
  0.214827 seconds (72.14 k allocations: 2.252 MiB)
Running: jacobi_quadrature with α=β=1
  2.709246 seconds (474.71 k allocations: 167.497 MiB, 4.25% gc time)
Running: legendre_quadrature
  0.139283 seconds (18.76 k allocations: 1.094 MiB)
Running: lobatto_quadrature
  0.000125 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000149 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 46.300665 seconds (590.00 M allocations: 8.792 GiB, 2.92% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.403998 seconds (592.75 M allocations: 8.833 GiB, 2.88% gc time)
Running: rombergs_method
  0.144325 seconds (20.54 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000028 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033535 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.027325 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.758879 seconds (629.33 M allocations: 9.387 GiB, 4.15% gc time)
Running: chebyshev_quadrature with k=1
  0.652954 seconds (418.90 k allocations: 23.196 MiB)
Running: chebyshev_quadrature with k=2
 14.659536 seconds (473.62 k allocations: 4.040 GiB, 4.06% gc time)
Running: chebyshev_quadrature with k=3
  7.117724 seconds (276.75 k allocations: 1.643 GiB, 4.89% gc time)
Running: chebyshev_quadrature with k=4
  9.544786 seconds (276.78 k allocations: 2.261 GiB, 2.57% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 51.030794 seconds (483.65 k allocations: 13.254 GiB, 3.07% gc time)
Running: legendre_quadrature.
  5.667851 seconds (223.20 k allocations: 1.976 GiB, 1.08% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.999588 seconds (8.23 M allocations: 13.383 GiB, 3.71% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 64.814307 seconds (7.23 M allocations: 13.369 GiB, 2.76% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  4.705603 seconds (22.38 k allocations: 1.354 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.613750 seconds (30.63 k allocations: 1.894 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.411973 seconds (22.59 k allocations: 1.364 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.171438 seconds (437.89 k allocations: 152.679 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.780779 seconds (600.04 M allocations: 8.943 GiB, 8.52% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.667415 seconds (600.05 M allocations: 8.943 GiB, 7.99% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.160515 seconds (600.03 M allocations: 8.943 GiB, 8.96% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.091410 seconds (180.71 k allocations: 4.420 MiB)
Running: chebyshev_quadrature with k=1
  0.426174 seconds (247.17 k allocations: 13.416 MiB)
Running: chebyshev_quadrature with k=2
  0.368225 seconds (271.77 k allocations: 14.487 MiB)
Running: chebyshev_quadrature with k=3
  0.312561 seconds (247.88 k allocations: 12.783 MiB)
Running: chebyshev_quadrature with k=4
  0.322795 seconds (247.91 k allocations: 12.782 MiB)
Running: jacobi_quadrature with α=β=1
  0.401441 seconds (387.52 k allocations: 34.885 MiB)
Running: laguerre_quadrature with k=2
  0.209980 seconds (180.07 k allocations: 10.454 MiB)
Running: legendre_quadrature
  0.133012 seconds (145.31 k allocations: 8.039 MiB)
Running: lobatto_quadrature
  0.037965 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.034562 seconds (9.47 k allocations: 13.174 MiB)
Running: rectangle_rule_left
  0.059646 seconds (18.99 k allocations: 1.129 MiB)
Running: rectangle_rule_midpoint
  0.048428 seconds (25.65 k allocations: 1.585 MiB)
Running: rectangle_rule_right
  0.054180 seconds (17.59 k allocations: 1.055 MiB)
Running: rombergs_method
  0.283967 seconds (171.87 k allocations: 9.874 MiB)
Running: simpsons_rule
  0.002109 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.051156 seconds (79.17 k allocations: 3.400 MiB)
Running: trapezoidal_rule
  0.202760 seconds (2.39 M allocations: 37.700 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001998 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.125059 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.125297 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.136775 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.126112 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  9.130040 seconds (364.56 k allocations: 904.784 MiB, 3.50% gc time)
Running: legendre_quadrature
  0.095987 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000221 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000211 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.928729 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000503 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.500780 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065707 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001133 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.001921 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.166774 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.158462 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.139169 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.136311 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.426987 seconds (371.12 k allocations: 252.864 MiB)
Running: legendre_quadrature
  0.097092 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000098 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000050 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 15.468162 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001404 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.620307 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.098352 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000064 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001956 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
