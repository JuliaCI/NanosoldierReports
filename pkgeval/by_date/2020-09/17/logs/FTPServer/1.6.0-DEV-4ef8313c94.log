Julia Version 1.6.0-DEV.952
Commit 4ef8313c94 (2020-09-17 11:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Zlib_jll ─────── v1.2.11+16
  Installed MacroTools ───── v0.5.5
  Installed EzXML ────────── v1.1.0
  Installed Parsers ──────── v1.0.10
  Installed FTPServer ────── v0.3.1
  Installed PyCall ───────── v1.91.4
  Installed JSON ─────────── v0.21.1
  Installed TimeZones ────── v1.3.2
  Installed Mocking ──────── v0.7.1
  Installed Syslogs ──────── v0.3.0
  Installed VersionParsing ─ v1.2.0
  Installed Memento ──────── v1.1.1
  Installed RecipesBase ──── v1.1.0
  Installed ExprTools ────── v0.1.2
  Installed Libiconv_jll ─── v1.16.0+6
  Installed Conda ────────── v1.4.1
  Installed XML2_jll ─────── v2.9.10+2
Updating `~/.julia/environments/v1.6/Project.toml`
  [9c2b0ca7] + FTPServer v0.3.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [e2ba6199] + ExprTools v0.1.2
  [8f5d6c58] + EzXML v1.1.0
  [9c2b0ca7] + FTPServer v0.3.1
  [682c06a0] + JSON v0.21.1
  [94ce4f54] + Libiconv_jll v1.16.0+6
  [1914dd2f] + MacroTools v0.5.5
  [f28f55f0] + Memento v1.1.1
  [78c3b35d] + Mocking v0.7.1
  [69de0a69] + Parsers v1.0.10
  [438e738f] + PyCall v1.91.4
  [3cdcf5f2] + RecipesBase v1.1.0
  [cea106d9] + Syslogs v0.3.0
  [f269a46b] + TimeZones v1.3.2
  [81def892] + VersionParsing v1.2.0
  [02c8fc9c] + XML2_jll v2.9.10+2
  [83775a58] + Zlib_jll v1.2.11+16
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall ───→ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
    Testing FTPServer
Status `/tmp/jl_34Zu4U/Project.toml`
  [8f4d0f93] Conda v1.4.1
  [01fcc997] FTPClient v1.2.1
  [9c2b0ca7] FTPServer v0.3.1
  [f28f55f0] Memento v1.1.1
  [438e738f] PyCall v1.91.4
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_34Zu4U/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [e2ba6199] ExprTools v0.1.2
  [8f5d6c58] EzXML v1.1.0
  [01fcc997] FTPClient v1.2.1
  [9c2b0ca7] FTPServer v0.3.1
  [682c06a0] JSON v0.21.1
  [94ce4f54] Libiconv_jll v1.16.0+6
  [1914dd2f] MacroTools v0.5.5
  [f28f55f0] Memento v1.1.1
  [78c3b35d] Mocking v0.7.1
  [69de0a69] Parsers v1.0.10
  [438e738f] PyCall v1.91.4
  [3cdcf5f2] RecipesBase v1.1.0
  [cea106d9] Syslogs v0.3.0
  [f269a46b] TimeZones v1.3.2
  [30578b45] URIParser v0.4.1
  [81def892] VersionParsing v1.2.0
  [02c8fc9c] XML2_jll v2.9.10+2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [b27032c2] LibCURL
  [deac9b47] LibCURL_jll
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [14a3606d] MozillaCACerts_jll
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
[ Info: Installing pyftpdlib.servers via the Conda pyftpdlib==1.5.6 package...
[ Info: Running `conda config --add channels invenia --file /home/pkgeval/.julia/conda/3/condarc-julia.yml --force` in root environment
[ Info: Running `conda install -q -y pyftpdlib==1.5.6` in root environment
Collecting package metadata (current_repodata.json): ...working... failed

CondaHTTPError: HTTP 504 GATEWAY_TIMEOUT for url <https://conda.anaconda.org/invenia/linux-64/current_repodata.json>
Elapsed: 00:59.818154
CF-RAY: 5d486f186b6cebf0-BOS

A remote server error occurred when trying to retrieve this URL.

A 500-type error (e.g. 500, 501, 502, 503, etc.) indicates the server failed to
fulfill a valid request.  The problem may be spurious, and will resolve itself if you
try your request again.  If the problem persists, consider notifying the maintainer
of the remote server.


ERROR: LoadError: InitError: failed process: Process(setenv(`/home/pkgeval/.julia/conda/3/bin/conda install -q -y pyftpdlib==1.5.6`,["PYTHONIOENCODING=UTF-8", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "PWD=/home/pkgeval", "DISPLAY=:99", "NVIDIA_DRIVER_CAPABILITIES=all", "OPENBLAS_NUM_THREADS=8", "XAUTHORITY=/tmp/xvfb-run.8wAipy/Xauthority", "CI=true", "CONDARC=/home/pkgeval/.julia/conda/3/condarc-julia.yml", "NVIDIA_VISIBLE_DEVICES=all"  …  "CONDA_PREFIX=/home/pkgeval/.julia/conda/3", "DEBIAN_FRONTEND=noninteractive", "JULIA_LOAD_PATH=@:/tmp/jl_34Zu4U", "PKGEVAL=true", "HOME=/home/pkgeval", "JULIA_PKGEVAL=true", "JULIA_DEPOT_PATH=::/usr/local/share/julia", "HOSTNAME=212938f22460", "JULIA_NUM_THREADS=2", "OPENBLAS_MAIN_FREE=1"]), ProcessExited(1)) [1]

Stacktrace:
  [1] pipeline_error
    @ ./process.jl:525 [inlined]
  [2] run(::Cmd; wait::Bool)
    @ Base ./process.jl:440
  [3] run
    @ ./process.jl:438 [inlined]
  [4] runconda(args::Cmd, env::String)
    @ Conda ~/.julia/packages/Conda/3rPhK/src/Conda.jl:114
  [5] add(pkg::String, env::String; channel::String)
    @ Conda ~/.julia/packages/Conda/3rPhK/src/Conda.jl:188
  [6] add
    @ ~/.julia/packages/Conda/3rPhK/src/Conda.jl:187 [inlined]
  [7] pyimport_conda(modulename::String, condapkg::String, channel::String)
    @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:699
  [8] __init__()
    @ FTPServer ~/.julia/packages/FTPServer/8L0oJ/src/FTPServer.jl:36
  [9] _include_from_serialized(path::String, depmods::Vector{Any})
    @ Base ./loading.jl:599
 [10] _require_from_serialized(path::String, cache::Base.TOMLCache)
    @ Base ./loading.jl:651
 [11] _require(pkg::Base.PkgId, cache::Base.TOMLCache)
    @ Base ./loading.jl:956
 [12] require(uuidkey::Base.PkgId, cache::Base.TOMLCache)
    @ Base ./loading.jl:839
 [13] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:826
 [14] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [15] top-level scope
    @ none:6
during initialization of module FTPServer
in expression starting at /home/pkgeval/.julia/packages/FTPServer/8L0oJ/test/runtests.jl:2

caused by: PyError (PyImport_ImportModule

The Python package pyftpdlib.servers could not be found by pyimport. Usually this means
that you did not install pyftpdlib.servers in the Python version being used by PyCall.

PyCall is currently configured to use the Julia-specific Python distribution
installed by the Conda.jl package.  To install the pyftpdlib.servers module, you can
use `pyimport_conda("pyftpdlib.servers", PKG)`, where PKG is the Anaconda
package the contains the module pyftpdlib.servers, or alternatively you can use the
Conda package directly (via `using Conda` followed by `Conda.add` etcetera).

Alternatively, if you want to use a different Python distribution on your
system, such as a system-wide Python (as opposed to the Julia-specific Python),
you can re-configure PyCall with that Python.   As explained in the PyCall
documentation, set ENV["PYTHON"] to the path/name of the python executable
you want to use, run Pkg.build("PyCall"), and re-launch Julia.

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'pyftpdlib'")

Stacktrace:
  [1] pyimport(name::String)
    @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
  [2] pyimport_conda(modulename::String, condapkg::String, channel::String)
    @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
  [3] __init__()
    @ FTPServer ~/.julia/packages/FTPServer/8L0oJ/src/FTPServer.jl:36
  [4] _include_from_serialized(path::String, depmods::Vector{Any})
    @ Base ./loading.jl:599
  [5] _require_from_serialized(path::String, cache::Base.TOMLCache)
    @ Base ./loading.jl:651
  [6] _require(pkg::Base.PkgId, cache::Base.TOMLCache)
    @ Base ./loading.jl:956
  [7] require(uuidkey::Base.PkgId, cache::Base.TOMLCache)
    @ Base ./loading.jl:839
  [8] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:826
  [9] include(fname::String)
    @ Base.MainInclude ./client.jl:444
 [10] top-level scope
    @ none:6
ERROR: Package FTPServer errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String, N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:19
