Julia Version 1.6.0-DEV.929
Commit a7ce2a2de7 (2020-09-16 16:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed OrderedCollections ─ v1.3.1
  Installed Parsers ──────────── v1.0.10
  Installed JSON ─────────────── v0.21.1
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed DataStructures ───── v0.17.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_fZzmrk/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_fZzmrk/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(47, 0.0017191172f0), Item(19, 0.014920831f0), Item(33, 0.039930344f0), Item(24, 0.046481848f0)])
Vsorted = Item[Item(47, 0.0017191172f0), Item(19, 0.014920831f0), Item(33, 0.039930344f0), Item(24, 0.046481848f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0047157923380533855, 0.004552769660949707, 301.0, 47.54691994190216))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003354350725809733, 0.0037671724955240884, 301.0, 69.54876363277435))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004308382670084636, 0.004915833473205566, 301.0, 38.46277570724487))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004220787684122721, 0.004436397552490234, 301.0, 8.352855856763199))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004147545496622721, 0.0053882678349812824, 301.0, 42.953399397432804))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00017351309458414713, 0.0001445611317952474, 301.0, 172.95364715903997))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.9994061787923175e-5, 0.011800233523050945, 300.0, 27.178677254356444)
p = PerformanceResult(1.0, 1.0, 1.0, 5.916754404703776e-5, 3.147125244140625e-5, 300.0, 27.178677254356444)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003955745697021484, 0.0037520647048950194, 300.0, 1.4703310193781363)
p = PerformanceResult(1.0, 1.0, 1.0, 9.241369035508898e-5, 2.106825510660807e-5, 300.0, 1.4703310193781363)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.9994061787923175e-5, 0.011800233523050945, 300.0, 27.178677254356444), PerformanceResult(1.0, 1.0, 1.0, 5.916754404703776e-5, 3.147125244140625e-5, 300.0, 27.178677254356444), PerformanceResult(1.0, 1.0, 1.0, 0.003955745697021484, 0.0037520647048950194, 300.0, 1.4703310193781363), PerformanceResult(1.0, 1.0, 1.0, 9.241369035508898e-5, 2.106825510660807e-5, 300.0, 1.4703310193781363))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 137.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008632413546244304, 0.0044816335042317705, 348.0, 28554.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0075603961944580075, 0.0036862929662068683, 302.3, 6969.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3102760314941408e-5, 1.113414764404297e-5, 94.06666666666666, 47.34699104167521))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.00016020933787027996, 1.533826192220052e-5, 83.73333333333333, 69.2377141714096))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3206075032552082e-5, 1.3804435729980468e-5, 88.2, 38.278621315956116))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.995764414469401e-5, 0.0001560052235921224, 94.33333333333333, 42.76390980929136))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8266666666666664, 0.8266666666666664, 0.8266666666666664, 5.6513150533040364e-5, 0.00014140605926513672, 69.46666666666667, 180.5417360290885))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-18T09:23:56.064
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9152499999999999, 0.9139999999999999, 0.9145555555555555, 2.3331642150878906e-5, 2.4039745330810546e-5, 153.64, 48.72875546477735))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2015571594238282e-5, 1.842021942138672e-5, 157.04, 0.0))
*** advance 1 from 1000; 2020-09-18T09:23:56.746
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9079999999999998, 0.9079999999999998, 0.9079999999999998, 2.3090839385986327e-5, 2.1488666534423827e-5, 153.6, 74.14006998110563))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.347707748413086e-5, 1.9271373748779296e-5, 157.11, 0.0))
*** advance 1 from 1000; 2020-09-18T09:23:57.373
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8816666666666668, 0.879, 0.8800000000000001, 2.5973320007324218e-5, 4.217863082885742e-5, 153.54, 40.0068276533857))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.7549266815185546e-5, 3.7188529968261716e-5, 156.9, 0.0))
*** advance 1 from 1000; 2020-09-18T09:23:58.041
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9027142857142857, 0.9010000000000001, 0.9017058823529414, 0.00011878252029418945, 0.000572199821472168, 153.82, 43.91850420460105))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010903835296630859, 0.0007799196243286132, 157.34, 0.0))
*** advance 1 from 1000; 2020-09-18T09:23:58.712
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.866, 0.866, 0.866, 8.722543716430665e-5, 0.00043176889419555665, 152.46, 198.54156976845115))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 7.600307464599609e-5, 0.0004276895523071289, 156.0, 0.0))
*** advance 1 from 1000; 2020-09-18T09:24:00.098
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9152499999999999, 0.9139999999999999, 0.9145555555555555, 3.5212039947509765e-5, 7.678031921386719e-5, 153.64, 48.737830785801634))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.633022308349609e-5, 7.486104965209961e-5, 157.04, 0.0152738458418753))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:02.076
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7369999999999997, 0.7369999999999997, 0.7369999999999997, 0.0017537021636962892, 8.167028427124024e-5, 205.94, 188.03333541750908))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:03.097
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7359999999999998, 0.7359999999999998, 0.7359999999999998, 0.0015259885787963867, 7.655858993530274e-5, 212.41, 107.18651005625725))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:03.903
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6629999999999999, 0.6629999999999999, 0.6629999999999999, 0.0015118026733398438, 7.332086563110351e-5, 285.01, 1.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:04.705
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9760000000000002, 0.9760000000000002, 0.9760000000000002, 0.0014855670928955078, 2.062082290649414e-5, 224.2, 600.4000207483768))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:05.663
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5650000000000001, 0.5650000000000001, 0.5650000000000001, 0.001620781421661377, 0.0004112410545349121, 249.48, 2355.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:06.566
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3889999999999999, 0.3889999999999999, NaN, 0.0017117857933044434, 0.0003177690505981445, 249.59, 3644.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-18T09:24:07.481
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.603, 0.603, 0.603, 0.001466224193572998, 3.333091735839844e-5, 250.64, 2359.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0716279069767443,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9587797619047624,"seconds":0.0027005448937416077,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.3984375,"distances_sum":687.7399311810732}}, beam: 3, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0716279069767443,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9587797619047624,"seconds":0.0027005448937416077,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.3984375,"distances_sum":687.7399311810732}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.9937067337948395, conf: {"restarts":7}, perf: {"precision":0.9105902777777762,"recall":0.9105902777777762,"f1":0.9105902777777762,"seconds":2.100318670272827e-5,"exhaustive_search_seconds":7.148832082748413e-6,"evaluations":49.65625,"distances_sum":296.0051241219044}, best_list's length: 3, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9937067337948395,"state":{"restarts":7},"perf":{"precision":0.9105902777777762,"recall":0.9105902777777762,"f1":0.9105902777777762,"seconds":2.100318670272827e-5,"exhaustive_search_seconds":7.148832082748413e-6,"evaluations":49.65625,"distances_sum":296.0051241219044}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.9937067337948395,"state":{"restarts":7},"perf":{"precision":0.9105902777777762,"recall":0.9105902777777762,"f1":0.9105902777777762,"seconds":2.100318670272827e-5,"exhaustive_search_seconds":7.148832082748413e-6,"evaluations":49.65625,"distances_sum":296.0051241219044}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.9937067337948395,"state":{"restarts":7},"perf":{"precision":0.9105902777777762,"recall":0.9105902777777762,"f1":0.9105902777777762,"seconds":2.100318670272827e-5,"exhaustive_search_seconds":7.148832082748413e-6,"evaluations":49.65625,"distances_sum":296.0051241219044}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8671874999999988, conf: {"restarts":13}, perf: {"precision":0.8671874999999988,"recall":0.8671874999999988,"f1":0.8671874999999988,"seconds":5.057826638221741e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":148.9375,"distances_sum":122.60150262154639}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.851562499999999, conf: {"restarts":5}, perf: {"precision":0.851562499999999,"recall":0.851562499999999,"f1":0.851562499999999,"seconds":3.3952295780181885e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":94.96875,"distances_sum":123.89551084302366}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666656, conf: {"restarts":15}, perf: {"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":5.570612847805023e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":163.6015625,"distances_sum":122.86580982245505}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8758680555555546, conf: {"restarts":16}, perf: {"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":5.7149678468704224e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":168.9765625,"distances_sum":122.18312049098313}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555546,"state":{"restarts":16},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":5.7149678468704224e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":168.9765625,"distances_sum":122.18312049098313}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8758680555555546,"state":{"restarts":16},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":5.7149678468704224e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":168.9765625,"distances_sum":122.18312049098313}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8758680555555546,"state":{"restarts":16},"perf":{"precision":0.8758680555555546,"recall":0.8758680555555546,"f1":0.8758680555555546,"seconds":5.7149678468704224e-5,"exhaustive_search_seconds":2.7390196919441223e-5,"evaluations":168.9765625,"distances_sum":122.18312049098313}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8602430555555544, conf: {"restarts":22}, perf: {"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00019767694175243378,"exhaustive_search_seconds":0.00039321184158325195,"evaluations":315.421875,"distances_sum":56.598704440984875}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999987, conf: {"restarts":21}, perf: {"precision":0.8593749999999987,"recall":0.8593749999999987,"f1":0.8593749999999987,"seconds":0.0001308135688304901,"exhaustive_search_seconds":0.00039321184158325195,"evaluations":304.5234375,"distances_sum":56.64118516398594}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8602430555555544,"state":{"restarts":22},"perf":{"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00019767694175243378,"exhaustive_search_seconds":0.00039321184158325195,"evaluations":315.421875,"distances_sum":56.598704440984875}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8602430555555544,"state":{"restarts":22},"perf":{"precision":0.8602430555555544,"recall":0.8602430555555544,"f1":0.8602430555555544,"seconds":0.00019767694175243378,"exhaustive_search_seconds":0.00039321184158325195,"evaluations":315.421875,"distances_sum":56.598704440984875}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(22), SatNeighborhood(32), 2020-09-18T09:24:14.532
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(8892, 0.036032576f0), Item(8545, 0.039362077f0), Item(4472, 0.047249407f0), Item(1875, 0.04779804f0), Item(4292, 0.048347574f0), Item(879, 0.050748758f0), Item(9002, 0.056687612f0), Item(3584, 0.05699006f0), Item(4184, 0.058386322f0), Item(1603, 0.059248727f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0258236865538732,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9846726190476193,"seconds":0.0043381936848163605,"exhaustive_search_seconds":2.4456530809402466e-6,"evaluations":8.7734375,"distances_sum":734.7136629372835}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0258236865538732,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9846726190476193,"seconds":0.0043381936848163605,"exhaustive_search_seconds":2.4456530809402466e-6,"evaluations":8.7734375,"distances_sum":734.7136629372835}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.142077857674188, conf: {"bsize":2}, perf: {"precision":0.9522569444444438,"recall":0.9522569444444438,"f1":0.9522569444444438,"seconds":1.3573095202445984e-5,"exhaustive_search_seconds":7.601454854011536e-6,"evaluations":31.5078125,"distances_sum":274.8918997235596}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.142077857674188,"state":{"bsize":2},"perf":{"precision":0.9522569444444438,"recall":0.9522569444444438,"f1":0.9522569444444438,"seconds":1.3573095202445984e-5,"exhaustive_search_seconds":7.601454854011536e-6,"evaluations":31.5078125,"distances_sum":274.8918997235596}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.142077857674188,"state":{"bsize":2},"perf":{"precision":0.9522569444444438,"recall":0.9522569444444438,"f1":0.9522569444444438,"seconds":1.3573095202445984e-5,"exhaustive_search_seconds":7.601454854011536e-6,"evaluations":31.5078125,"distances_sum":274.8918997235596}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.142077857674188,"state":{"bsize":2},"perf":{"precision":0.9522569444444438,"recall":0.9522569444444438,"f1":0.9522569444444438,"seconds":1.3573095202445984e-5,"exhaustive_search_seconds":7.601454854011536e-6,"evaluations":31.5078125,"distances_sum":274.8918997235596}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. BeamSearch. A new best conf was found> score: 17.51666236114699, conf: {"bsize":3}, perf: {"precision":0.9835069444444442,"recall":0.9835069444444442,"f1":0.9835069444444442,"seconds":5.939602851867676e-5,"exhaustive_search_seconds":2.5859102606773376e-5,"evaluations":60.484375,"distances_sum":119.68356173485518}, best_list's length: 4, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.51666236114699,"state":{"bsize":3},"perf":{"precision":0.9835069444444442,"recall":0.9835069444444442,"f1":0.9835069444444442,"seconds":5.939602851867676e-5,"exhaustive_search_seconds":2.5859102606773376e-5,"evaluations":60.484375,"distances_sum":119.68356173485518}}, beam: 4, n: 999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.51666236114699,"state":{"bsize":3},"perf":{"precision":0.9835069444444442,"recall":0.9835069444444442,"f1":0.9835069444444442,"seconds":5.939602851867676e-5,"exhaustive_search_seconds":2.5859102606773376e-5,"evaluations":60.484375,"distances_sum":119.68356173485518}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.51666236114699,"state":{"bsize":3},"perf":{"precision":0.9835069444444442,"recall":0.9835069444444442,"f1":0.9835069444444442,"seconds":5.939602851867676e-5,"exhaustive_search_seconds":2.5859102606773376e-5,"evaluations":60.484375,"distances_sum":119.68356173485518}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.91594729668333, conf: {"bsize":8}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.70459121465683e-5,"exhaustive_search_seconds":0.00041964091360569,"evaluations":103.171875,"distances_sum":54.27301127370447}, best_list's length: 4, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.91594729668333,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.70459121465683e-5,"exhaustive_search_seconds":0.00041964091360569,"evaluations":103.171875,"distances_sum":54.27301127370447}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":97.91594729668333,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.70459121465683e-5,"exhaustive_search_seconds":0.00041964091360569,"evaluations":103.171875,"distances_sum":54.27301127370447}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":97.91594729668333,"state":{"bsize":8},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.70459121465683e-5,"exhaustive_search_seconds":0.00041964091360569,"evaluations":103.171875,"distances_sum":54.27301127370447}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(8), SatNeighborhood(32), 2020-09-18T09:24:19.039
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1002, 0.025290957f0), Item(6790, 0.03232136f0), Item(1085, 0.038190402f0), Item(7560, 0.03846623f0), Item(7205, 0.043476984f0), Item(9156, 0.04580756f0), Item(810, 0.04687323f0), Item(9328, 0.047518957f0), Item(4816, 0.04889264f0), Item(6526, 0.04985555f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
