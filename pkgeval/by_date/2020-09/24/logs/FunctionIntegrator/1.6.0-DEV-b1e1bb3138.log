Julia Version 1.6.0-DEV.1034
Commit b1e1bb3138 (2020-09-24 17:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_MZsxe6/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_MZsxe6/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.935063 seconds (1.40 M allocations: 74.341 MiB, 1.43% gc time)
Running: chebyshev_quadrature with k=1
  1.982642 seconds (2.19 M allocations: 126.544 MiB, 3.92% gc time)
Running: chebyshev_quadrature with k=2
  0.354271 seconds (409.38 k allocations: 23.557 MiB, 13.86% gc time)
Running: chebyshev_quadrature with k=3
  0.365110 seconds (473.74 k allocations: 26.615 MiB)
Running: chebyshev_quadrature with k=4
  0.379124 seconds (418.55 k allocations: 23.252 MiB, 11.47% gc time)
Running: jacobi_quadrature with α=β=1
 38.801823 seconds (36.50 M allocations: 3.006 GiB, 9.18% gc time)
Running: laguerre_quadrature with k=1
  2.792562 seconds (3.17 M allocations: 177.044 MiB, 2.97% gc time)
Running: legendre_quadrature
  0.191746 seconds (206.13 k allocations: 11.831 MiB)
Running: lobatto_quadrature
  0.340338 seconds (329.92 k allocations: 19.928 MiB, 7.27% gc time)
Running: radau_quadrature
  0.346963 seconds (443.93 k allocations: 27.112 MiB, 6.14% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 76.398602 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rectangle_rule_midpoint.
  0.157199 seconds (172.46 k allocations: 3.827 MiB, 4.92% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.199316 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.475527 seconds (723.20 k allocations: 41.738 MiB, 3.24% gc time)
Running: simpsons_rule
  0.035902 seconds (45.77 k allocations: 2.043 MiB)
Running: simpsons38_rule
  0.111775 seconds (108.37 k allocations: 5.743 MiB, 14.52% gc time)
Running: trapezoidal_rule
  0.298039 seconds (1.51 M allocations: 25.664 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.092312 seconds (30.97 k allocations: 1.864 MiB)
Running: chebyshev_quadrature with k=1
  0.494450 seconds (291.93 k allocations: 15.452 MiB)
Running: chebyshev_quadrature with k=2
  0.154193 seconds (93.80 k allocations: 2.675 MiB)
Running: chebyshev_quadrature with k=3
  0.172642 seconds (82.06 k allocations: 2.476 MiB)
Running: chebyshev_quadrature with k=4
  0.162957 seconds (64.67 k allocations: 2.122 MiB)
Running: jacobi_quadrature with α=β=1
  3.051776 seconds (503.82 k allocations: 161.791 MiB, 15.38% gc time)
Running: legendre_quadrature
  0.154513 seconds (41.19 k allocations: 2.371 MiB)
Running: lobatto_quadrature
  0.019060 seconds (15.62 k allocations: 996.310 KiB)
Running: radau_quadrature
  0.020091 seconds (15.73 k allocations: 1002.728 KiB)
Running: rectangle_rule_left
 26.913435 seconds (471.41 M allocations: 7.025 GiB, 2.32% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 25.879784 seconds (476.96 M allocations: 7.107 GiB, 2.43% gc time)
Running: rombergs_method
  0.300765 seconds (326.61 k allocations: 18.536 MiB)
Running: simpsons_rule
  0.000032 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.051401 seconds (18.91 k allocations: 1.146 MiB)
Running: trapezoidal_rule
  0.062995 seconds (17.40 k allocations: 1.054 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029230 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.110098 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.110573 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.110503 seconds (2.31 k allocations: 109.297 KiB)
Running: chebyshev_quadrature with k=4
  0.107615 seconds (2.31 k allocations: 109.297 KiB)
Running: jacobi_quadrature with α=β=1
  0.284027 seconds (364.10 k allocations: 18.999 MiB)
Running: legendre_quadrature
  0.073122 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000122 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000109 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000492 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000357 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000479 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.078370 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000071 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024653 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021708 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059426 seconds (72.31 k allocations: 4.214 MiB)
Running: chebyshev_quadrature with k=1
  0.196913 seconds (230.61 k allocations: 12.966 MiB)
Running: chebyshev_quadrature with k=2
  0.244614 seconds (283.16 k allocations: 15.880 MiB, 14.82% gc time)
Running: chebyshev_quadrature with k=3
  0.185485 seconds (234.76 k allocations: 13.134 MiB)
Running: chebyshev_quadrature with k=4
  0.172285 seconds (234.76 k allocations: 13.067 MiB)
Running: jacobi_quadrature with α=β=1
  2.179823 seconds (447.18 k allocations: 163.231 MiB, 4.89% gc time)
Running: legendre_quadrature
  0.167949 seconds (185.44 k allocations: 10.708 MiB)
Running: lobatto_quadrature
  0.207612 seconds (196.76 k allocations: 11.419 MiB, 7.92% gc time)
Running: radau_quadrature
  0.184092 seconds (196.76 k allocations: 11.417 MiB)
Running: rectangle_rule_left
  0.927056 seconds (18.82 k allocations: 1.147 MiB)
Running: rectangle_rule_midpoint
  0.027671 seconds (24.66 k allocations: 1.555 MiB)
Running: rectangle_rule_right
  0.922664 seconds (17.39 k allocations: 1.065 MiB)
Running: rombergs_method
  0.153357 seconds (134.26 k allocations: 7.758 MiB)
Running: simpsons_rule
  0.033119 seconds (27.53 k allocations: 1.729 MiB)
Running: simpsons38_rule
  0.039316 seconds (42.37 k allocations: 2.678 MiB)
Running: trapezoidal_rule
  0.030294 seconds (44.10 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043415 seconds (99.53 k allocations: 2.980 MiB)
Running: chebyshev_quadrature with k=1
  0.258439 seconds (237.19 k allocations: 13.054 MiB, 14.38% gc time)
Running: chebyshev_quadrature with k=2
  0.215049 seconds (290.20 k allocations: 15.883 MiB)
Running: chebyshev_quadrature with k=3
  0.154603 seconds (241.33 k allocations: 13.116 MiB)
Running: chebyshev_quadrature with k=4
  0.173047 seconds (241.33 k allocations: 13.136 MiB, 9.77% gc time)
Running: hermite_quadrature with k=2
 13.846055 seconds (20.09 M allocations: 1.055 GiB, 7.99% gc time)
Running: jacobi_quadrature with α=β=1
  0.458161 seconds (456.36 k allocations: 49.474 MiB, 8.93% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.241743 seconds (276.26 k allocations: 15.253 MiB, 11.87% gc time)
Running: legendre_quadrature
  0.156053 seconds (191.98 k allocations: 11.046 MiB)
Running: lobatto_quadrature
  0.235342 seconds (217.43 k allocations: 37.260 MiB, 9.15% gc time)
Running: radau_quadrature
  0.200701 seconds (214.00 k allocations: 29.855 MiB)
Running: rectangle_rule_left
  0.026033 seconds (21.73 k allocations: 1.293 MiB)
Running: rectangle_rule_midpoint
  0.027197 seconds (26.47 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.025669 seconds (18.50 k allocations: 1.117 MiB)
Running: rombergs_method
  0.134486 seconds (136.74 k allocations: 7.809 MiB)
Running: simpsons_rule
  0.053843 seconds (39.37 k allocations: 2.060 MiB, 35.35% gc time)
Running: simpsons38_rule
  0.037876 seconds (57.34 k allocations: 3.063 MiB)
Running: trapezoidal_rule
  0.026943 seconds (30.13 k allocations: 1.697 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.037487 seconds (59.91 k allocations: 2.280 MiB)
Running: chebyshev_quadrature with k=1
  0.207054 seconds (232.72 k allocations: 12.824 MiB)
Running: chebyshev_quadrature with k=2
  0.230861 seconds (285.38 k allocations: 15.643 MiB)
Running: chebyshev_quadrature with k=3
  0.224504 seconds (236.87 k allocations: 12.932 MiB, 11.65% gc time)
Running: chebyshev_quadrature with k=4
  0.217086 seconds (236.87 k allocations: 12.929 MiB)
Running: hermite_quadrature with k=2
  0.146250 seconds (170.78 k allocations: 9.789 MiB)
Running: jacobi_quadrature with α=β=1
  9.568113 seconds (449.62 k allocations: 1.175 GiB, 14.63% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.222424 seconds (271.55 k allocations: 15.066 MiB)
Running: legendre_quadrature
  0.175565 seconds (187.55 k allocations: 10.814 MiB, 10.14% gc time)
Running: lobatto_quadrature
  0.196887 seconds (208.18 k allocations: 22.920 MiB)
Running: radau_quadrature
  0.195495 seconds (207.33 k allocations: 20.852 MiB)
Running: rectangle_rule_left
  0.025286 seconds (19.52 k allocations: 1.188 MiB)
Running: rectangle_rule_midpoint
  0.023593 seconds (25.36 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.021831 seconds (17.36 k allocations: 1.062 MiB)
Running: rombergs_method
  0.108929 seconds (132.58 k allocations: 7.622 MiB)
Running: simpsons_rule
  0.028270 seconds (31.90 k allocations: 1.855 MiB)
Running: simpsons38_rule
  0.032520 seconds (48.15 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.025094 seconds (25.04 k allocations: 1.535 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031062 seconds (30.87 k allocations: 1.874 MiB)
Running: chebyshev_quadrature with k=1
  0.196199 seconds (231.10 k allocations: 13.042 MiB)
Running: chebyshev_quadrature with k=2
  0.249773 seconds (283.67 k allocations: 15.985 MiB, 9.14% gc time)
Running: chebyshev_quadrature with k=3
  0.245073 seconds (235.25 k allocations: 13.208 MiB)
Running: chebyshev_quadrature with k=4
  0.196370 seconds (235.25 k allocations: 12.972 MiB)
Running: jacobi_quadrature with α=β=1
  2.280224 seconds (447.72 k allocations: 194.255 MiB, 3.81% gc time)
Running: legendre_quadrature
  0.163277 seconds (185.93 k allocations: 10.745 MiB)
Running: lobatto_quadrature
  0.184351 seconds (197.26 k allocations: 11.461 MiB)
Running: radau_quadrature
  0.233180 seconds (197.26 k allocations: 11.461 MiB)
Running: rectangle_rule_left
  0.356656 seconds (19.34 k allocations: 1.173 MiB, 5.18% gc time)
Running: rectangle_rule_midpoint
  0.020461 seconds (25.01 k allocations: 1.573 MiB)
Running: rectangle_rule_right
  0.099893 seconds (17.73 k allocations: 1.081 MiB)
Running: rombergs_method
  0.131083 seconds (145.02 k allocations: 8.499 MiB)
Running: simpsons_rule
  0.032876 seconds (28.22 k allocations: 1.758 MiB)
Running: simpsons38_rule
  0.032381 seconds (43.08 k allocations: 2.708 MiB)
Running: trapezoidal_rule
  0.023447 seconds (45.03 k allocations: 1.805 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033094 seconds (31.64 k allocations: 1.827 MiB)
Running: chebyshev_quadrature with k=1
  0.167756 seconds (231.69 k allocations: 12.989 MiB)
Running: chebyshev_quadrature with k=2
  0.200420 seconds (284.30 k allocations: 15.954 MiB, 9.07% gc time)
Running: chebyshev_quadrature with k=3
  0.172270 seconds (235.84 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=4
  0.176472 seconds (235.84 k allocations: 13.144 MiB)
Running: jacobi_quadrature with α=β=1
  2.038815 seconds (448.43 k allocations: 148.940 MiB, 12.06% gc time)
Running: legendre_quadrature
  0.152736 seconds (186.52 k allocations: 10.758 MiB)
Running: lobatto_quadrature
  0.208750 seconds (197.86 k allocations: 11.460 MiB)
Running: radau_quadrature
  0.181670 seconds (197.85 k allocations: 11.473 MiB)
Running: rectangle_rule_left
  0.939501 seconds (19.59 k allocations: 1.186 MiB)
Running: rectangle_rule_midpoint
  0.024750 seconds (25.00 k allocations: 1.574 MiB)
Running: rectangle_rule_right
  0.935490 seconds (17.69 k allocations: 1.078 MiB)
Running: rombergs_method
  0.147516 seconds (135.49 k allocations: 7.816 MiB, 11.33% gc time)
Running: simpsons_rule
  0.030251 seconds (28.92 k allocations: 1.785 MiB)
Running: simpsons38_rule
  0.036935 seconds (43.78 k allocations: 2.734 MiB)
Running: trapezoidal_rule
  0.027788 seconds (57.27 k allocations: 2.006 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.177127 seconds (145.06 k allocations: 8.693 MiB)
Running: chebyshev_quadrature with k=1
  0.152069 seconds (69.93 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.153802 seconds (105.09 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.178984 seconds (92.57 k allocations: 2.654 MiB)
Running: chebyshev_quadrature with k=4
  0.177072 seconds (72.10 k allocations: 2.248 MiB)
Running: jacobi_quadrature with α=β=1
  2.817353 seconds (480.19 k allocations: 167.744 MiB, 12.92% gc time)
Running: legendre_quadrature
  0.130022 seconds (18.73 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000100 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000066 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 44.729251 seconds (590.00 M allocations: 8.792 GiB, 3.41% gc time)
Running: rectangle_rule_midpoint
  0.000067 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 45.287738 seconds (592.75 M allocations: 8.833 GiB, 3.45% gc time)
Running: rombergs_method
  0.132159 seconds (20.51 k allocations: 1.165 MiB)
Running: simpsons_rule
  0.000069 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.035146 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.028411 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.840903 seconds (629.32 M allocations: 9.387 GiB, 5.05% gc time)
Running: chebyshev_quadrature with k=1
  0.454303 seconds (413.99 k allocations: 22.950 MiB, 4.21% gc time)
Running: chebyshev_quadrature with k=2
 12.923186 seconds (468.63 k allocations: 4.040 GiB, 5.50% gc time)
Running: chebyshev_quadrature with k=3
  6.437655 seconds (249.12 k allocations: 1.642 GiB, 5.00% gc time)
Running: chebyshev_quadrature with k=4
  8.023964 seconds (249.12 k allocations: 2.260 GiB, 3.41% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 63.695205 seconds (484.56 k allocations: 13.254 GiB, 3.69% gc time)
Running: legendre_quadrature.
  6.715376 seconds (223.28 k allocations: 1.976 GiB, 3.55% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.318443 seconds (8.23 M allocations: 13.383 GiB, 4.33% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.703619 seconds (7.23 M allocations: 13.369 GiB, 3.87% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.841872 seconds (22.24 k allocations: 1.347 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.629934 seconds (30.44 k allocations: 1.884 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.660088 seconds (22.45 k allocations: 1.357 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  0.993034 seconds (438.18 k allocations: 152.673 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.926516 seconds (600.04 M allocations: 8.943 GiB, 8.40% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.531486 seconds (600.05 M allocations: 8.943 GiB, 8.63% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.123725 seconds (600.03 M allocations: 8.943 GiB, 8.95% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.056272 seconds (180.45 k allocations: 4.406 MiB)
Running: chebyshev_quadrature with k=1
  0.205821 seconds (247.70 k allocations: 13.449 MiB)
Running: chebyshev_quadrature with k=2
  0.210835 seconds (272.34 k allocations: 14.527 MiB)
Running: chebyshev_quadrature with k=3
  0.202248 seconds (220.25 k allocations: 11.630 MiB)
Running: chebyshev_quadrature with k=4
  0.221227 seconds (220.25 k allocations: 11.626 MiB)
Running: jacobi_quadrature with α=β=1
  0.433075 seconds (389.30 k allocations: 34.988 MiB)
Running: laguerre_quadrature with k=2
  0.226659 seconds (180.53 k allocations: 10.477 MiB)
Running: legendre_quadrature
  0.165919 seconds (145.98 k allocations: 8.082 MiB)
Running: lobatto_quadrature
  0.037861 seconds (10.55 k allocations: 15.097 MiB)
Running: radau_quadrature
  0.034320 seconds (9.33 k allocations: 13.171 MiB)
Running: rectangle_rule_left
  0.059652 seconds (18.87 k allocations: 1.122 MiB)
Running: rectangle_rule_midpoint
  0.048073 seconds (25.47 k allocations: 1.576 MiB)
Running: rectangle_rule_right
  0.053299 seconds (17.48 k allocations: 1.049 MiB)
Running: rombergs_method
  0.285354 seconds (170.44 k allocations: 9.767 MiB)
Running: simpsons_rule
  0.002074 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053031 seconds (78.86 k allocations: 3.384 MiB)
Running: trapezoidal_rule
  0.201883 seconds (2.39 M allocations: 37.691 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.012156 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.139646 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.133551 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.117611 seconds (2.31 k allocations: 2.028 MiB)
Running: chebyshev_quadrature with k=4
  0.115793 seconds (2.31 k allocations: 1.469 MiB)
Running: jacobi_quadrature with α=β=1
  5.751968 seconds (366.38 k allocations: 904.821 MiB, 4.33% gc time)
Running: legendre_quadrature
  0.069238 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000225 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000227 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.751799 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000509 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.982550 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.084301 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000841 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000497 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.120414 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.138282 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.129112 seconds (2.39 k allocations: 661.047 KiB)
Running: chebyshev_quadrature with k=4
  0.143293 seconds (2.39 k allocations: 491.547 KiB)
Running: jacobi_quadrature with α=β=1
  3.214872 seconds (372.94 k allocations: 252.986 MiB)
Running: legendre_quadrature
  0.080725 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000151 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000068 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
  2.253466 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000198 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
  1.920997 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.094124 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000014 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000414 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
