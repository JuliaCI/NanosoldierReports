Julia Version 1.6.0-DEV.1034
Commit b1e1bb3138 (2020-09-24 17:32 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_KKHYYg/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_KKHYYg/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.056922520017246805 0.048241645522835414; -0.056922520017246805 0.0 0.08665948875523524; -0.048241645522835414 -0.08665948875523524 0.0])
dAA = so3([0.0 0.030876250152798164 0.04324351218687084; -0.030876250152798164 0.0 0.0925553779924185; -0.04324351218687084 -0.0925553779924185 0.0])
dAA = so3([0.0 -0.02212288158354673 -0.05487013381659085; 0.02212288158354673 0.0 0.05433510663140848; 0.05487013381659085 -0.05433510663140848 0.0])
dAA = Quaternion(0.9933342283030848, [-0.02951454586266529, 0.06051187575790972, 0.09356449837569208])
dAA = SO3([0.9987521321077764 -0.039454315879870985 0.030619202612449218; 0.039753999526694964 0.9991667650109126 -0.009240953373936572; -0.030229094128048115 0.010446657651090784 0.9994884037406928])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9912292650221142 0.06384451798918324 0.11570834752276143; -0.08871159732002047 0.9704265594864485 0.2245051116215953; -0.09795303295278718 -0.23280070911838582 0.9675789544886386]), [-0.8665948875523524, 0.48241645522835414, -0.569225200172468])
xj = SE3(SO3([0.8478027062219166 -0.45555899116453075 0.27147113454647354; 0.4189798556577135 0.8892131314944023 0.18372775329535884; -0.3250945276005674 -0.04202394968436067 0.944747339650708]), [-0.5433510663140848, -0.5487013381659085, 0.22122881583546727])
Dx = SE3(SO3([0.8350424761066316 -0.5263305479108011 0.16025048341150672; 0.5363989715046259 0.8436143009262203 -0.0243116153627069; -0.12239365370183683 0.10625942597567808 0.9867769392952159]), [0.3344534735483594, -1.1640050021610373, 0.5707374634817345])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
