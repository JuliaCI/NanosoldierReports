Julia Version 1.6.0-DEV.1021
Commit ee93bd8426 (2020-09-23 15:07 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_WvDwWB/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_WvDwWB/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0508041761349671 0.1105792447971099; 0.0508041761349671 0.0 -0.20052264834800254; -0.1105792447971099 0.20052264834800254 0.0])
dAA = so3([0.0 -0.05228005682993519 -0.06565575197276925; 0.05228005682993519 0.0 0.06617629055097644; 0.06565575197276925 -0.06617629055097644 0.0])
dAA = so3([0.0 0.06742000360415117 0.13917453022551873; -0.06742000360415117 0.0 -0.05061626134571101; -0.13917453022551873 0.05061626134571101 0.0])
dAA = Quaternion(0.9988841982879402, [0.007260863666122904, -0.018886661839208677, 0.042672383036952574])
dAA = SO3([0.9970393708387814 0.05395702263368451 0.05478259491768442; -0.059699126535232315 0.9922196319126414 0.1092529923529463; -0.04846139998325848 -0.112200007823755 0.99250322465774])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.978118519958927 -0.11565338408939943 -0.17294061310758668; 0.14264754361943044 0.9779053438565479 0.15281628432909083; 0.15144582930110956 -0.1741419915054284 0.9730049987445196]), [2.0052264834800253, 1.105792447971099, 0.5080417613496709])
xj = SE3(SO3([0.9728745249183147 -0.21242636018350175 -0.09159803635533144; 0.20934701863839966 0.9769338377705069 -0.0421200950402811; 0.09843263966884645 0.021801791627707318 0.9949048684822308]), [0.5061626134571101, 1.3917453022551873, -0.6742000360415117])
Dx = SE3(SO3([0.9963566411366108 -0.06511915437297454 0.05507212903746894; 0.07506408124468837 0.9761200405626449 -0.20385055829914067; -0.04048243285502662 0.20724179632914114 0.9774517944555673]), [-1.604517251056467, 0.6588845748684024, -0.8473799011321391])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
