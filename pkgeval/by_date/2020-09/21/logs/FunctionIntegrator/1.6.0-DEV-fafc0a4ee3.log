Julia Version 1.6.0-DEV.988
Commit fafc0a4ee3* (2020-09-19 22:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_I3SHsM/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_I3SHsM/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.809812 seconds (1.36 M allocations: 72.189 MiB, 1.92% gc time)
Running: chebyshev_quadrature with k=1
  1.970722 seconds (2.19 M allocations: 126.378 MiB, 6.57% gc time)
Running: chebyshev_quadrature with k=2
  0.298077 seconds (409.60 k allocations: 23.564 MiB, 7.30% gc time)
Running: chebyshev_quadrature with k=3
  0.312916 seconds (522.83 k allocations: 28.743 MiB)
Running: chebyshev_quadrature with k=4
  0.348610 seconds (467.63 k allocations: 25.356 MiB, 19.35% gc time)
Running: jacobi_quadrature with α=β=1
 41.274620 seconds (37.33 M allocations: 3.048 GiB, 7.97% gc time)
Running: laguerre_quadrature with k=1
  2.754088 seconds (3.18 M allocations: 177.413 MiB, 3.54% gc time)
Running: legendre_quadrature
  0.186585 seconds (206.67 k allocations: 11.883 MiB)
Running: lobatto_quadrature
  0.292203 seconds (329.14 k allocations: 19.876 MiB)
Running: radau_quadrature
  0.343886 seconds (439.28 k allocations: 26.847 MiB, 7.03% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.318061 seconds (100.02 M allocations: 1.491 GiB, 0.32% gc time)
Running: rectangle_rule_midpoint.
  0.139778 seconds (172.49 k allocations: 3.828 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 82.372629 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rombergs_method
  0.566935 seconds (723.24 k allocations: 41.749 MiB, 6.00% gc time)
Running: simpsons_rule
  0.041436 seconds (45.82 k allocations: 2.045 MiB)
Running: simpsons38_rule
  0.094781 seconds (108.58 k allocations: 5.752 MiB)
Running: trapezoidal_rule
  0.344459 seconds (1.51 M allocations: 25.670 MiB, 5.02% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.105559 seconds (31.11 k allocations: 1.871 MiB)
Running: chebyshev_quadrature with k=1
  0.452457 seconds (297.32 k allocations: 15.742 MiB)
Running: chebyshev_quadrature with k=2
  0.143799 seconds (93.82 k allocations: 2.676 MiB)
Running: chebyshev_quadrature with k=3
  0.182770 seconds (82.07 k allocations: 2.477 MiB)
Running: chebyshev_quadrature with k=4
  0.155013 seconds (64.68 k allocations: 2.123 MiB)
Running: jacobi_quadrature with α=β=1
  3.062397 seconds (498.39 k allocations: 161.550 MiB, 6.49% gc time)
Running: legendre_quadrature
  0.221746 seconds (41.60 k allocations: 2.400 MiB)
Running: lobatto_quadrature
  0.032442 seconds (16.01 k allocations: 1.001 MiB)
Running: radau_quadrature
  0.031432 seconds (16.12 k allocations: 1.007 MiB)
Running: rectangle_rule_left
 29.326253 seconds (471.41 M allocations: 7.025 GiB, 3.44% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.498632 seconds (476.96 M allocations: 7.107 GiB, 2.14% gc time)
Running: rombergs_method
  0.358915 seconds (326.76 k allocations: 18.553 MiB, 1.51% gc time)
Running: simpsons_rule
  0.000023 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.063233 seconds (19.03 k allocations: 1.152 MiB)
Running: trapezoidal_rule
  0.057857 seconds (17.52 k allocations: 1.059 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028502 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.131754 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.128457 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.132391 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.129065 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.282115 seconds (362.72 k allocations: 18.936 MiB)
Running: legendre_quadrature
  0.077992 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000150 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000125 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000573 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000342 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000555 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.092732 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000058 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027122 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024503 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.064277 seconds (72.40 k allocations: 4.219 MiB)
Running: chebyshev_quadrature with k=1
  0.190605 seconds (230.76 k allocations: 12.975 MiB)
Running: chebyshev_quadrature with k=2
  0.281945 seconds (283.34 k allocations: 15.925 MiB)
Running: chebyshev_quadrature with k=3
  0.248427 seconds (263.05 k allocations: 14.346 MiB, 14.84% gc time)
Running: chebyshev_quadrature with k=4
  0.192070 seconds (263.07 k allocations: 14.240 MiB)
Running: jacobi_quadrature with α=β=1
  2.025705 seconds (445.97 k allocations: 163.138 MiB, 5.23% gc time)
Running: legendre_quadrature
  0.157830 seconds (185.58 k allocations: 10.715 MiB)
Running: lobatto_quadrature
  0.149224 seconds (196.40 k allocations: 11.422 MiB)
Running: radau_quadrature
  0.150936 seconds (196.39 k allocations: 11.416 MiB)
Running: rectangle_rule_left
  0.970784 seconds (18.85 k allocations: 1.148 MiB)
Running: rectangle_rule_midpoint
  0.046867 seconds (24.70 k allocations: 1.557 MiB, 47.20% gc time)
Running: rectangle_rule_right
  1.178298 seconds (17.41 k allocations: 1.066 MiB)
Running: rombergs_method
  0.136061 seconds (134.37 k allocations: 7.779 MiB)
Running: simpsons_rule
  0.029653 seconds (27.58 k allocations: 1.731 MiB)
Running: simpsons38_rule
  0.052770 seconds (42.43 k allocations: 2.682 MiB)
Running: trapezoidal_rule
  0.026902 seconds (44.13 k allocations: 1.774 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.031800 seconds (99.58 k allocations: 2.981 MiB)
Running: chebyshev_quadrature with k=1
  0.156503 seconds (237.34 k allocations: 13.065 MiB)
Running: chebyshev_quadrature with k=2
  0.183779 seconds (290.37 k allocations: 15.879 MiB, 9.26% gc time)
Running: chebyshev_quadrature with k=3
  0.171430 seconds (269.75 k allocations: 14.325 MiB)
Running: chebyshev_quadrature with k=4
  0.236537 seconds (269.78 k allocations: 14.329 MiB)
Running: hermite_quadrature with k=2
 14.845140 seconds (20.91 M allocations: 1.089 GiB, 8.17% gc time)
Running: jacobi_quadrature with α=β=1
  0.642803 seconds (455.17 k allocations: 49.354 MiB, 28.78% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.307530 seconds (276.43 k allocations: 15.251 MiB)
Running: legendre_quadrature
  0.241044 seconds (192.12 k allocations: 11.050 MiB)
Running: lobatto_quadrature
  0.316384 seconds (217.19 k allocations: 37.179 MiB, 8.16% gc time)
Running: radau_quadrature
  0.299479 seconds (213.79 k allocations: 29.840 MiB, 5.53% gc time)
Running: rectangle_rule_left
  0.028319 seconds (21.77 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.039777 seconds (26.51 k allocations: 1.644 MiB)
Running: rectangle_rule_right
  0.025050 seconds (18.53 k allocations: 1.119 MiB)
Running: rombergs_method
  0.135239 seconds (136.85 k allocations: 7.813 MiB)
Running: simpsons_rule
  0.042722 seconds (39.43 k allocations: 2.063 MiB)
Running: simpsons38_rule
  0.045916 seconds (57.41 k allocations: 3.066 MiB)
Running: trapezoidal_rule
  0.035375 seconds (30.17 k allocations: 1.699 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.052380 seconds (59.96 k allocations: 2.282 MiB)
Running: chebyshev_quadrature with k=1
  0.258293 seconds (232.86 k allocations: 12.831 MiB, 7.01% gc time)
Running: chebyshev_quadrature with k=2
  0.287425 seconds (285.55 k allocations: 15.651 MiB)
Running: chebyshev_quadrature with k=3
  0.292116 seconds (265.18 k allocations: 14.124 MiB)
Running: chebyshev_quadrature with k=4
  0.285782 seconds (265.20 k allocations: 14.125 MiB, 5.84% gc time)
Running: hermite_quadrature with k=2
  0.195181 seconds (170.91 k allocations: 9.795 MiB)
Running: jacobi_quadrature with α=β=1
 12.170110 seconds (448.41 k allocations: 1.175 GiB, 16.50% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.243467 seconds (271.72 k allocations: 15.078 MiB, 6.28% gc time)
Running: legendre_quadrature
  0.146735 seconds (187.69 k allocations: 10.821 MiB)
Running: lobatto_quadrature
  0.188341 seconds (207.96 k allocations: 22.920 MiB)
Running: radau_quadrature
  0.202943 seconds (207.11 k allocations: 20.901 MiB, 6.74% gc time)
Running: rectangle_rule_left
  0.031136 seconds (19.55 k allocations: 1.190 MiB)
Running: rectangle_rule_midpoint
  0.032406 seconds (25.40 k allocations: 1.592 MiB)
Running: rectangle_rule_right
  0.027045 seconds (17.39 k allocations: 1.064 MiB)
Running: rombergs_method
  0.172508 seconds (132.68 k allocations: 7.626 MiB)
Running: simpsons_rule
  0.036137 seconds (31.95 k allocations: 1.857 MiB)
Running: simpsons38_rule
  0.050745 seconds (48.22 k allocations: 2.824 MiB)
Running: trapezoidal_rule
  0.035294 seconds (25.07 k allocations: 1.536 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.038563 seconds (30.91 k allocations: 1.877 MiB)
Running: chebyshev_quadrature with k=1
  0.277042 seconds (231.24 k allocations: 13.049 MiB, 6.34% gc time)
Running: chebyshev_quadrature with k=2
  0.274900 seconds (283.84 k allocations: 15.993 MiB)
Running: chebyshev_quadrature with k=3
  0.224944 seconds (263.56 k allocations: 14.340 MiB)
Running: chebyshev_quadrature with k=4
  0.232616 seconds (263.58 k allocations: 14.166 MiB, 7.27% gc time)
Running: jacobi_quadrature with α=β=1
  2.659200 seconds (446.51 k allocations: 194.203 MiB, 5.70% gc time)
Running: legendre_quadrature
  0.175838 seconds (186.07 k allocations: 10.751 MiB)
Running: lobatto_quadrature
  0.202360 seconds (196.89 k allocations: 11.434 MiB, 8.46% gc time)
Running: radau_quadrature
  0.148127 seconds (196.89 k allocations: 11.428 MiB)
Running: rectangle_rule_left
  0.301411 seconds (19.36 k allocations: 1.174 MiB)
Running: rectangle_rule_midpoint
  0.023326 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.104181 seconds (17.76 k allocations: 1.082 MiB)
Running: rombergs_method
  0.136740 seconds (145.13 k allocations: 8.488 MiB)
Running: simpsons_rule
  0.028783 seconds (28.27 k allocations: 1.761 MiB)
Running: simpsons38_rule
  0.035614 seconds (43.14 k allocations: 2.710 MiB)
Running: trapezoidal_rule
  0.022183 seconds (45.06 k allocations: 1.807 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037693 seconds (31.69 k allocations: 1.829 MiB)
Running: chebyshev_quadrature with k=1
  0.212316 seconds (231.83 k allocations: 12.995 MiB, 7.51% gc time)
Running: chebyshev_quadrature with k=2
  0.204663 seconds (284.47 k allocations: 15.899 MiB)
Running: chebyshev_quadrature with k=3
  0.193396 seconds (264.14 k allocations: 14.264 MiB)
Running: chebyshev_quadrature with k=4
  0.227967 seconds (264.16 k allocations: 14.340 MiB, 11.70% gc time)
Running: jacobi_quadrature with α=β=1
  1.992025 seconds (447.22 k allocations: 149.132 MiB, 5.92% gc time)
Running: legendre_quadrature
  0.152634 seconds (186.67 k allocations: 10.780 MiB)
Running: lobatto_quadrature
  0.188010 seconds (197.49 k allocations: 11.444 MiB, 8.89% gc time)
Running: radau_quadrature
  0.171156 seconds (197.49 k allocations: 11.445 MiB)
Running: rectangle_rule_left
  0.936299 seconds (19.62 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.023841 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.969347 seconds (17.72 k allocations: 1.079 MiB)
Running: rombergs_method
  0.131719 seconds (135.59 k allocations: 7.820 MiB)
Running: simpsons_rule
  0.031410 seconds (28.97 k allocations: 1.787 MiB)
Running: simpsons38_rule
  0.036612 seconds (43.84 k allocations: 2.737 MiB)
Running: trapezoidal_rule
  0.028664 seconds (57.30 k allocations: 2.007 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.142892 seconds (145.23 k allocations: 8.701 MiB)
Running: chebyshev_quadrature with k=1
  0.164784 seconds (69.94 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.154127 seconds (105.11 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.182313 seconds (92.59 k allocations: 2.655 MiB)
Running: chebyshev_quadrature with k=4
  0.165643 seconds (72.12 k allocations: 2.249 MiB)
Running: jacobi_quadrature with α=β=1
  3.199213 seconds (474.25 k allocations: 167.468 MiB, 4.23% gc time)
Running: legendre_quadrature
  0.106080 seconds (18.74 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000094 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000062 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 43.262875 seconds (590.00 M allocations: 8.792 GiB, 2.43% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 42.650742 seconds (592.75 M allocations: 8.833 GiB, 2.44% gc time)
Running: rombergs_method
  0.118352 seconds (20.52 k allocations: 1.167 MiB)
Running: simpsons_rule
  0.000036 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024754 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.020146 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.073410 seconds (629.33 M allocations: 9.387 GiB, 3.65% gc time)
Running: chebyshev_quadrature with k=1
  0.470529 seconds (419.94 k allocations: 23.191 MiB)
Running: chebyshev_quadrature with k=2
 13.227017 seconds (474.62 k allocations: 4.041 GiB, 4.02% gc time)
Running: chebyshev_quadrature with k=3
  6.485616 seconds (277.51 k allocations: 1.643 GiB, 4.93% gc time)
Running: chebyshev_quadrature with k=4
  8.180594 seconds (277.54 k allocations: 2.261 GiB, 2.46% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 69.090998 seconds (483.85 k allocations: 13.254 GiB, 3.49% gc time)
Running: legendre_quadrature.
  6.651458 seconds (223.84 k allocations: 1.976 GiB, 1.29% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 64.244526 seconds (8.23 M allocations: 13.384 GiB, 4.72% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.761633 seconds (7.23 M allocations: 13.369 GiB, 3.87% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.107186 seconds (22.28 k allocations: 1.349 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.880332 seconds (30.48 k allocations: 1.886 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.811511 seconds (22.48 k allocations: 1.358 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.472317 seconds (438.95 k allocations: 152.719 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.835086 seconds (600.04 M allocations: 8.943 GiB, 8.62% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.128080 seconds (600.05 M allocations: 8.943 GiB, 7.96% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.697626 seconds (600.03 M allocations: 8.943 GiB, 8.56% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.067332 seconds (180.52 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.291814 seconds (247.84 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=2
  0.214207 seconds (272.49 k allocations: 14.530 MiB)
Running: chebyshev_quadrature with k=3
  0.191775 seconds (248.71 k allocations: 12.837 MiB)
Running: chebyshev_quadrature with k=4
  0.197402 seconds (248.73 k allocations: 12.833 MiB)
Running: jacobi_quadrature with α=β=1
  0.399652 seconds (388.05 k allocations: 34.990 MiB)
Running: laguerre_quadrature with k=2
  0.189458 seconds (180.67 k allocations: 10.483 MiB)
Running: legendre_quadrature
  0.145259 seconds (146.09 k allocations: 8.087 MiB)
Running: lobatto_quadrature
  0.039465 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.034983 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.062078 seconds (18.90 k allocations: 1.124 MiB)
Running: rectangle_rule_midpoint
  0.048629 seconds (25.51 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  0.052888 seconds (17.50 k allocations: 1.050 MiB)
Running: rombergs_method
  0.297696 seconds (171.57 k allocations: 9.793 MiB)
Running: simpsons_rule
  0.003600 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055020 seconds (78.92 k allocations: 3.387 MiB)
Running: trapezoidal_rule
  0.186095 seconds (2.39 M allocations: 37.693 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.003997 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.197622 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.154247 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.190046 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.157236 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  8.197747 seconds (365.11 k allocations: 904.760 MiB, 4.08% gc time)
Running: legendre_quadrature
  0.070215 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000218 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000181 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.892404 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000516 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.162649 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.065705 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000951 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000762 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.117545 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.115398 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.131940 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.122981 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  3.387561 seconds (371.67 k allocations: 252.880 MiB)
Running: legendre_quadrature
  0.083034 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000089 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000048 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.053303 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001104 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.482246 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.096283 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000088 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001643 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
