Julia Version 1.6.0-DEV.993
Commit 5a86131b14* (2020-09-21 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.3
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.3
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_tNQlnm/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_tNQlnm/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.3
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [56f22d72] Artifacts
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.956791 seconds (1.36 M allocations: 72.170 MiB, 1.57% gc time)
Running: chebyshev_quadrature with k=1
  2.065476 seconds (2.19 M allocations: 126.407 MiB, 5.15% gc time)
Running: chebyshev_quadrature with k=2
  0.310064 seconds (409.61 k allocations: 23.572 MiB, 14.02% gc time)
Running: chebyshev_quadrature with k=3
  0.286550 seconds (522.83 k allocations: 28.716 MiB)
Running: chebyshev_quadrature with k=4
  0.305582 seconds (467.63 k allocations: 25.370 MiB, 12.85% gc time)
Running: jacobi_quadrature with α=β=1
 41.065528 seconds (37.33 M allocations: 3.048 GiB, 8.73% gc time)
Running: laguerre_quadrature with k=1
  2.532665 seconds (3.18 M allocations: 177.426 MiB, 2.19% gc time)
Running: legendre_quadrature
  0.199269 seconds (206.67 k allocations: 11.864 MiB, 8.47% gc time)
Running: lobatto_quadrature
  0.276575 seconds (329.51 k allocations: 19.894 MiB)
Running: radau_quadrature
  0.278352 seconds (439.54 k allocations: 26.864 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 88.236110 seconds (100.02 M allocations: 1.491 GiB, 0.73% gc time)
Running: rectangle_rule_midpoint.
  0.154737 seconds (172.49 k allocations: 3.828 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 88.795776 seconds (100.02 M allocations: 1.491 GiB, 0.51% gc time)
Running: rombergs_method
  0.596686 seconds (723.23 k allocations: 41.743 MiB, 6.70% gc time)
Running: simpsons_rule
  0.041490 seconds (45.82 k allocations: 2.045 MiB)
Running: simpsons38_rule
  0.081138 seconds (108.74 k allocations: 5.761 MiB)
Running: trapezoidal_rule
  0.266623 seconds (1.51 M allocations: 25.679 MiB, 6.61% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.144823 seconds (31.12 k allocations: 1.871 MiB)
Running: chebyshev_quadrature with k=1
  0.659706 seconds (297.62 k allocations: 15.760 MiB)
Running: chebyshev_quadrature with k=2
  0.166216 seconds (93.82 k allocations: 2.676 MiB)
Running: chebyshev_quadrature with k=3
  0.161217 seconds (82.07 k allocations: 2.477 MiB)
Running: chebyshev_quadrature with k=4
  0.164102 seconds (64.68 k allocations: 2.123 MiB)
Running: jacobi_quadrature with α=β=1
  3.112415 seconds (498.43 k allocations: 161.549 MiB, 4.41% gc time)
Running: legendre_quadrature
  0.159993 seconds (41.60 k allocations: 2.398 MiB)
Running: lobatto_quadrature
  0.025287 seconds (16.01 k allocations: 1022.653 KiB)
Running: radau_quadrature
  0.022867 seconds (16.12 k allocations: 1.005 MiB)
Running: rectangle_rule_left
 37.170854 seconds (471.41 M allocations: 7.025 GiB, 5.16% gc time)
Running: rectangle_rule_midpoint
  0.000019 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 35.757853 seconds (476.96 M allocations: 7.107 GiB, 5.25% gc time)
Running: rombergs_method
  0.439493 seconds (326.75 k allocations: 18.551 MiB, 3.09% gc time)
Running: simpsons_rule
  0.000072 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.065151 seconds (19.04 k allocations: 1.152 MiB)
Running: trapezoidal_rule
  0.095939 seconds (17.52 k allocations: 1.060 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.047502 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.150404 seconds (2.46 k allocations: 116.359 KiB)
Running: chebyshev_quadrature with k=2
  0.217602 seconds (2.71 k allocations: 124.266 KiB)
Running: chebyshev_quadrature with k=3
  0.187640 seconds (3.13 k allocations: 136.422 KiB)
Running: chebyshev_quadrature with k=4
  0.155375 seconds (3.14 k allocations: 136.484 KiB)
Running: jacobi_quadrature with α=β=1
  0.346110 seconds (362.70 k allocations: 18.961 MiB, 6.00% gc time)
Running: legendre_quadrature
  0.075404 seconds (1.28 k allocations: 65.891 KiB)
Running: lobatto_quadrature
  0.000096 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000048 seconds (73 allocations: 3.109 KiB)
Running: rectangle_rule_left
  0.000470 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000679 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000463 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.079679 seconds (1.04 k allocations: 56.531 KiB)
Running: simpsons_rule
  0.000037 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024827 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021132 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.060098 seconds (72.40 k allocations: 4.219 MiB)
Running: chebyshev_quadrature with k=1
  0.237587 seconds (230.76 k allocations: 12.973 MiB)
Running: chebyshev_quadrature with k=2
  0.298117 seconds (283.33 k allocations: 15.910 MiB)
Running: chebyshev_quadrature with k=3
  0.349928 seconds (263.05 k allocations: 14.349 MiB, 7.32% gc time)
Running: chebyshev_quadrature with k=4
  0.256806 seconds (263.07 k allocations: 14.260 MiB)
Running: jacobi_quadrature with α=β=1
  2.725325 seconds (445.95 k allocations: 163.149 MiB, 3.28% gc time)
Running: legendre_quadrature
  0.169084 seconds (185.58 k allocations: 10.715 MiB)
Running: lobatto_quadrature
  0.258411 seconds (196.39 k allocations: 11.422 MiB)
Running: radau_quadrature
  0.186538 seconds (196.39 k allocations: 11.423 MiB)
Running: rectangle_rule_left
  1.146375 seconds (18.85 k allocations: 1.148 MiB)
Running: rectangle_rule_midpoint
  0.021587 seconds (24.70 k allocations: 1.557 MiB)
Running: rectangle_rule_right
  1.076010 seconds (17.41 k allocations: 1.066 MiB)
Running: rombergs_method
  0.147501 seconds (134.37 k allocations: 7.763 MiB, 14.24% gc time)
Running: simpsons_rule
  0.030296 seconds (27.58 k allocations: 1.731 MiB)
Running: simpsons38_rule
  0.035212 seconds (42.43 k allocations: 2.681 MiB)
Running: trapezoidal_rule
  0.025994 seconds (44.13 k allocations: 1.774 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039210 seconds (99.58 k allocations: 2.983 MiB)
Running: chebyshev_quadrature with k=1
  0.262289 seconds (237.34 k allocations: 13.046 MiB)
Running: chebyshev_quadrature with k=2
  0.226879 seconds (290.37 k allocations: 15.879 MiB)
Running: chebyshev_quadrature with k=3
  0.211397 seconds (269.75 k allocations: 14.325 MiB)
Running: chebyshev_quadrature with k=4
  0.217908 seconds (269.78 k allocations: 14.329 MiB, 9.27% gc time)
Running: hermite_quadrature with k=2
 13.633877 seconds (20.91 M allocations: 1.089 GiB, 10.50% gc time)
Running: jacobi_quadrature with α=β=1
  0.509272 seconds (455.15 k allocations: 49.357 MiB, 7.53% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.272476 seconds (276.43 k allocations: 15.247 MiB)
Running: legendre_quadrature
  0.270016 seconds (192.12 k allocations: 11.050 MiB, 16.44% gc time)
Running: lobatto_quadrature
  0.228152 seconds (217.19 k allocations: 37.182 MiB)
Running: radau_quadrature
  0.280846 seconds (213.78 k allocations: 29.839 MiB, 10.05% gc time)
Running: rectangle_rule_left
  0.027688 seconds (21.77 k allocations: 1.295 MiB)
Running: rectangle_rule_midpoint
  0.030565 seconds (26.51 k allocations: 1.644 MiB)
Running: rectangle_rule_right
  0.024313 seconds (18.53 k allocations: 1.119 MiB)
Running: rombergs_method
  0.127238 seconds (136.85 k allocations: 7.814 MiB)
Running: simpsons_rule
  0.038906 seconds (39.43 k allocations: 2.063 MiB)
Running: simpsons38_rule
  0.042108 seconds (57.41 k allocations: 3.066 MiB)
Running: trapezoidal_rule
  0.025469 seconds (30.17 k allocations: 1.699 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034113 seconds (59.96 k allocations: 2.282 MiB)
Running: chebyshev_quadrature with k=1
  0.196344 seconds (232.86 k allocations: 12.831 MiB, 12.12% gc time)
Running: chebyshev_quadrature with k=2
  0.213790 seconds (285.55 k allocations: 15.655 MiB)
Running: chebyshev_quadrature with k=3
  0.188759 seconds (265.18 k allocations: 14.124 MiB)
Running: chebyshev_quadrature with k=4
  0.271932 seconds (265.20 k allocations: 14.126 MiB, 18.86% gc time)
Running: hermite_quadrature with k=2
  0.212314 seconds (170.91 k allocations: 9.858 MiB)
Running: jacobi_quadrature with α=β=1
 11.228780 seconds (448.39 k allocations: 1.175 GiB, 11.19% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.214060 seconds (271.72 k allocations: 15.074 MiB, 5.71% gc time)
Running: legendre_quadrature
  0.172418 seconds (187.69 k allocations: 10.821 MiB)
Running: lobatto_quadrature
  0.234052 seconds (207.95 k allocations: 22.905 MiB, 6.64% gc time)
Running: radau_quadrature
  0.206942 seconds (207.10 k allocations: 20.854 MiB)
Running: rectangle_rule_left
  0.029385 seconds (19.55 k allocations: 1.190 MiB)
Running: rectangle_rule_midpoint
  0.025912 seconds (25.40 k allocations: 1.592 MiB)
Running: rectangle_rule_right
  0.023441 seconds (17.39 k allocations: 1.064 MiB)
Running: rombergs_method
  0.158286 seconds (132.69 k allocations: 7.630 MiB)
Running: simpsons_rule
  0.031676 seconds (31.95 k allocations: 1.857 MiB)
Running: simpsons38_rule
  0.040350 seconds (48.22 k allocations: 2.824 MiB)
Running: trapezoidal_rule
  0.025198 seconds (25.07 k allocations: 1.536 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034023 seconds (30.91 k allocations: 1.877 MiB)
Running: chebyshev_quadrature with k=1
  0.202512 seconds (231.24 k allocations: 13.049 MiB, 6.92% gc time)
Running: chebyshev_quadrature with k=2
  0.202223 seconds (283.84 k allocations: 16.056 MiB)
Running: chebyshev_quadrature with k=3
  0.192326 seconds (263.56 k allocations: 14.340 MiB)
Running: chebyshev_quadrature with k=4
  0.260367 seconds (263.58 k allocations: 14.166 MiB, 6.78% gc time)
Running: jacobi_quadrature with α=β=1
  3.160974 seconds (446.49 k allocations: 194.199 MiB, 6.77% gc time)
Running: legendre_quadrature
  0.173963 seconds (186.07 k allocations: 10.752 MiB)
Running: lobatto_quadrature
  0.213822 seconds (196.89 k allocations: 11.438 MiB, 7.99% gc time)
Running: radau_quadrature
  0.186358 seconds (196.89 k allocations: 11.432 MiB)
Running: rectangle_rule_left
  0.353499 seconds (19.36 k allocations: 1.174 MiB)
Running: rectangle_rule_midpoint
  0.026008 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  0.117807 seconds (17.76 k allocations: 1.082 MiB)
Running: rombergs_method
  0.170924 seconds (145.13 k allocations: 8.488 MiB)
Running: simpsons_rule
  0.040551 seconds (28.27 k allocations: 1.761 MiB)
Running: simpsons38_rule
  0.046037 seconds (43.14 k allocations: 2.710 MiB)
Running: trapezoidal_rule
  0.033972 seconds (45.06 k allocations: 1.807 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.056836 seconds (31.69 k allocations: 1.829 MiB)
Running: chebyshev_quadrature with k=1
  0.293042 seconds (231.83 k allocations: 12.995 MiB, 6.23% gc time)
Running: chebyshev_quadrature with k=2
  0.219541 seconds (284.47 k allocations: 15.899 MiB)
Running: chebyshev_quadrature with k=3
  0.207926 seconds (264.13 k allocations: 14.260 MiB)
Running: chebyshev_quadrature with k=4
  0.228262 seconds (264.16 k allocations: 14.340 MiB, 7.39% gc time)
Running: jacobi_quadrature with α=β=1
  2.239421 seconds (447.21 k allocations: 148.896 MiB, 10.66% gc time)
Running: legendre_quadrature
  0.170639 seconds (186.67 k allocations: 10.780 MiB)
Running: lobatto_quadrature
  0.199008 seconds (197.49 k allocations: 11.443 MiB, 10.60% gc time)
Running: radau_quadrature
  0.204655 seconds (197.48 k allocations: 11.508 MiB)
Running: rectangle_rule_left
  1.085338 seconds (19.62 k allocations: 1.187 MiB)
Running: rectangle_rule_midpoint
  0.026289 seconds (25.04 k allocations: 1.575 MiB)
Running: rectangle_rule_right
  1.040001 seconds (17.72 k allocations: 1.079 MiB)
Running: rombergs_method
  0.129251 seconds (135.59 k allocations: 7.820 MiB)
Running: simpsons_rule
  0.030714 seconds (28.97 k allocations: 1.787 MiB)
Running: simpsons38_rule
  0.035850 seconds (43.84 k allocations: 2.737 MiB)
Running: trapezoidal_rule
  0.027896 seconds (57.30 k allocations: 2.007 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.146020 seconds (145.25 k allocations: 8.701 MiB)
Running: chebyshev_quadrature with k=1
  0.143582 seconds (69.94 k allocations: 2.205 MiB)
Running: chebyshev_quadrature with k=2
  0.153735 seconds (105.11 k allocations: 2.868 MiB)
Running: chebyshev_quadrature with k=3
  0.167620 seconds (92.59 k allocations: 2.655 MiB)
Running: chebyshev_quadrature with k=4
  0.191328 seconds (72.12 k allocations: 2.249 MiB, 14.68% gc time)
Running: jacobi_quadrature with α=β=1
  1.914096 seconds (474.31 k allocations: 167.472 MiB, 4.21% gc time)
Running: legendre_quadrature
  0.128717 seconds (18.74 k allocations: 1.095 MiB)
Running: lobatto_quadrature
  0.000098 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000064 seconds (150 allocations: 4.406 KiB)
Running: rectangle_rule_left
 46.007571 seconds (590.00 M allocations: 8.792 GiB, 2.48% gc time)
Running: rectangle_rule_midpoint
  0.000040 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.370674 seconds (592.75 M allocations: 8.833 GiB, 2.46% gc time)
Running: rombergs_method
  0.131302 seconds (20.52 k allocations: 1.166 MiB)
Running: simpsons_rule
  0.000032 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028168 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021788 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 30.565381 seconds (629.33 M allocations: 9.387 GiB, 3.73% gc time)
Running: chebyshev_quadrature with k=1
  0.482031 seconds (419.94 k allocations: 23.189 MiB, 5.92% gc time)
Running: chebyshev_quadrature with k=2
 11.859682 seconds (474.61 k allocations: 4.041 GiB, 4.35% gc time)
Running: chebyshev_quadrature with k=3
  6.344995 seconds (277.51 k allocations: 1.643 GiB, 5.46% gc time)
Running: chebyshev_quadrature with k=4
  7.047739 seconds (277.54 k allocations: 2.261 GiB, 2.84% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 72.605230 seconds (483.80 k allocations: 13.254 GiB, 3.35% gc time)
Running: legendre_quadrature.
  6.400227 seconds (223.83 k allocations: 1.976 GiB, 1.14% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 62.024196 seconds (8.23 M allocations: 13.383 GiB, 3.97% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.024143 seconds (7.23 M allocations: 13.369 GiB, 2.48% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.836697 seconds (22.28 k allocations: 1.349 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.619986 seconds (30.48 k allocations: 1.886 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.927095 seconds (22.48 k allocations: 1.358 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.076524 seconds (438.95 k allocations: 152.717 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.826638 seconds (600.04 M allocations: 8.943 GiB, 8.99% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.167635 seconds (600.05 M allocations: 8.943 GiB, 7.87% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.057540 seconds (600.03 M allocations: 8.943 GiB, 8.40% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060851 seconds (180.52 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.217605 seconds (247.84 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=2
  0.196348 seconds (272.49 k allocations: 14.530 MiB)
Running: chebyshev_quadrature with k=3
  0.197362 seconds (248.71 k allocations: 12.837 MiB)
Running: chebyshev_quadrature with k=4
  0.190401 seconds (248.73 k allocations: 12.833 MiB)
Running: jacobi_quadrature with α=β=1
  0.370991 seconds (388.03 k allocations: 34.927 MiB)
Running: laguerre_quadrature with k=2
  0.257673 seconds (180.67 k allocations: 10.483 MiB)
Running: legendre_quadrature
  0.143732 seconds (146.09 k allocations: 8.087 MiB)
Running: lobatto_quadrature
  0.038511 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.034663 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.059985 seconds (18.90 k allocations: 1.124 MiB)
Running: rectangle_rule_midpoint
  0.051802 seconds (25.51 k allocations: 1.577 MiB)
Running: rectangle_rule_right
  0.051766 seconds (17.50 k allocations: 1.050 MiB)
Running: rombergs_method
  0.264187 seconds (171.44 k allocations: 9.786 MiB)
Running: simpsons_rule
  0.001897 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.048803 seconds (78.92 k allocations: 3.387 MiB)
Running: trapezoidal_rule
  0.200429 seconds (2.39 M allocations: 37.693 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001980 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.139890 seconds (2.46 k allocations: 1.691 MiB)
Running: chebyshev_quadrature with k=2
  0.136623 seconds (2.71 k allocations: 2.355 MiB)
Running: chebyshev_quadrature with k=3
  0.157328 seconds (3.13 k allocations: 2.055 MiB)
Running: chebyshev_quadrature with k=4
  0.172499 seconds (3.14 k allocations: 1.496 MiB)
Running: jacobi_quadrature with α=β=1
  7.378179 seconds (365.09 k allocations: 904.759 MiB, 4.08% gc time)
Running: legendre_quadrature
  0.080164 seconds (1.27 k allocations: 68.203 KiB)
Running: lobatto_quadrature
  0.000209 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000178 seconds (224 allocations: 8.859 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  5.439007 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000906 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  5.859839 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082532 seconds (997 allocations: 56.672 KiB)
Running: simpsons_rule
  0.000044 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001072 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000692 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.129058 seconds (2.53 k allocations: 579.203 KiB)
Running: chebyshev_quadrature with k=2
  0.146537 seconds (2.79 k allocations: 780.188 KiB)
Running: chebyshev_quadrature with k=3
  0.175906 seconds (3.21 k allocations: 688.438 KiB)
Running: chebyshev_quadrature with k=4
  0.145103 seconds (3.21 k allocations: 519.000 KiB)
Running: jacobi_quadrature with α=β=1
  2.589550 seconds (371.66 k allocations: 252.880 MiB)
Running: legendre_quadrature
  0.076934 seconds (1.32 k allocations: 67.859 KiB)
Running: lobatto_quadrature
  0.000108 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000054 seconds (83 allocations: 3.484 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.679668 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001053 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.486870 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.112630 seconds (1.21 k allocations: 64.938 KiB)
Running: simpsons_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001872 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
