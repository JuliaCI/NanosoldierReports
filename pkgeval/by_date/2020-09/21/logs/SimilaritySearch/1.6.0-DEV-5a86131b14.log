Julia Version 1.6.0-DEV.993
Commit 5a86131b14* (2020-09-21 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Parsers ──────────── v1.0.10
  Installed OrderedCollections ─ v1.3.1
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed JSON ─────────────── v0.21.1
  Installed SimilaritySearch ─── v0.3.20
  Installed DataAPI ──────────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.1
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.1
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_fp5J68/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_fp5J68/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.1
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.1
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(49, 0.021751165f0), Item(38, 0.03228867f0), Item(35, 0.039606094f0), Item(2, 0.060940146f0)])
Vsorted = Item[Item(49, 0.021751165f0), Item(38, 0.03228867f0), Item(35, 0.039606094f0), Item(2, 0.060940146f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005340218544006348, 0.004659636815388998, 301.0, 48.030099634081125))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004153744379679362, 0.0049127976099650065, 301.0, 69.78558611869812))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004120230674743652, 0.004313961664835612, 301.0, 39.262956976890564))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004022423426310221, 0.0038698355356852213, 301.0, 8.473279534489848))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.005372071266174316, 0.005705499649047851, 301.0, 43.53819868713617))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015239715576171876, 0.00013506412506103516, 301.0, 172.20965081453323))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.387233734130859e-5, 0.01700276533762614, 300.0, 27.039017766248435)
p = PerformanceResult(1.0, 1.0, 1.0, 5.6672096252441404e-5, 3.0461947123209635e-5, 300.0, 27.039017766248435)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004286138216654459, 0.0044011354446411135, 300.0, 1.5073324323502675)
p = PerformanceResult(1.0, 1.0, 1.0, 4.6846601698133685e-5, 2.00351079305013e-5, 300.0, 1.5073324323502675)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.387233734130859e-5, 0.01700276533762614, 300.0, 27.039017766248435), PerformanceResult(1.0, 1.0, 1.0, 5.6672096252441404e-5, 3.0461947123209635e-5, 300.0, 27.039017766248435), PerformanceResult(1.0, 1.0, 1.0, 0.004286138216654459, 0.0044011354446411135, 300.0, 1.5073324323502675), PerformanceResult(1.0, 1.0, 1.0, 4.6846601698133685e-5, 2.00351079305013e-5, 300.0, 1.5073324323502675))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.012074987093607584, 0.00641626516977946, 346.93333333333334, 28598.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009557437896728516, 0.004228671391805013, 303.0, 6951.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.19265619913737e-5, 1.3534228006998698e-5, 93.7, 47.94089773669839))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2172927856445312e-5, 1.2230873107910156e-5, 83.76666666666667, 69.69866919517517))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.8427441914876302e-5, 1.71661376953125e-5, 90.26666666666667, 39.139540672302246))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.228388468424479e-5, 0.00016783873240152996, 94.93333333333334, 43.43913774937391))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.8333333333333334, 0.8333333333333334, 0.8333333333333334, 5.084673563639323e-5, 0.00013586680094401042, 68.9, 180.13355499505997))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-09-22T05:51:39.253
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9079999999999998, 0.9079999999999998, 0.9079999999999998, 2.2416114807128905e-5, 2.4321079254150392e-5, 151.63, 49.17359712684993))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.408266067504883e-5, 1.862049102783203e-5, 154.84, 0.0))
*** advance 1 from 1000; 2020-09-22T05:51:39.978
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9710000000000001, 0.9710000000000001, 0.9710000000000001, 2.519845962524414e-5, 2.5417804718017578e-5, 165.56, 71.51458910666406))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3844242095947267e-5, 2.0270347595214843e-5, 169.96, 0.0))
*** advance 1 from 1000; 2020-09-22T05:51:40.674
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9109999999999998, 0.9109999999999998, 0.9109999999999998, 2.875804901123047e-5, 4.726886749267578e-5, 154.03, 40.08211068902165))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.7196407318115233e-5, 3.852128982543945e-5, 157.46, 0.0))
*** advance 1 from 1000; 2020-09-22T05:51:41.387
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9015555555555553, 0.8989999999999998, 0.9002105263157892, 9.87410545349121e-5, 0.000511767864227295, 152.41, 44.36953439284116))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00012610912322998048, 0.0006049799919128417, 155.72, 0.0))
*** advance 1 from 1000; 2020-09-22T05:51:42.069
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(0.968, 0.968, 0.968, 8.785724639892578e-5, 0.00040163993835449217, 165.43, 185.27018292364664))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64, Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.025335311889649e-5, 0.0004245305061340332, 169.66, 0.0))
*** advance 1 from 1000; 2020-09-22T05:51:43.210
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9079999999999998, 0.9079999999999998, 0.9079999999999998, 3.2322406768798826e-5, 6.94894790649414e-5, 151.63, 49.182532700535376))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.180503845214844e-5, 6.695032119750977e-5, 154.84, 0.01528258397593163))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:45.218
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7830000000000003, 0.7830000000000003, 0.7830000000000003, 0.0018709135055541993, 9.578943252563476e-5, 201.56, 192.8833351880312))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:46.391
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7810000000000004, 0.7810000000000004, 0.7810000000000004, 0.002086491584777832, 9.65714454650879e-5, 204.75, 110.52460563182831))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:47.441
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6509999999999998, 0.6509999999999998, 0.6509999999999998, 0.0016798019409179688, 8.052825927734375e-5, 269.04, 4.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:48.403
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.96, 0.96, 0.96, 0.0014860486984252929, 2.0260810852050782e-5, 220.01, 602.2000205218792))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:49.384
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5950000000000001, 0.5950000000000001, 0.5950000000000001, 0.0016141462326049805, 0.0004604506492614746, 253.21, 2319.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:50.267
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38599999999999995, 0.38599999999999995, NaN, 0.0015924644470214843, 0.00037865161895751955, 247.46, 3658.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-09-22T05:51:51.155
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5900000000000003, 0.5900000000000003, NaN, 0.0015978813171386719, 3.154993057250977e-5, 246.8, 2351.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.074626865671642, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560496794871799,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.375,"distances_sum":576.5293150246143}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.074626865671642,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9560496794871799,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.375,"distances_sum":576.5293150246143}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.074626865671642,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9560496794871799,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.375,"distances_sum":576.5293150246143}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.074626865671642,"state":{"restarts":7},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9560496794871799,"seconds":6.459653377532959e-6,"exhaustive_search_seconds":2.032145857810974e-6,"evaluations":8.375,"distances_sum":576.5293150246143}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.857519788918206, conf: {"restarts":10}, perf: {"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":2.300180494785309e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":53.296875,"distances_sum":296.8649669215083}, best_list's length: 2, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7075865786282174, conf: {"restarts":13}, perf: {"precision":0.9149305555555545,"recall":0.9149305555555545,"f1":0.9149305555555545,"seconds":2.5482848286628723e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":57.9765625,"distances_sum":294.23458229750395}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.979381443298969, conf: {"restarts":8}, perf: {"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.1889805793762207e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":50.015625,"distances_sum":295.8687177374959}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7266657582776945, conf: {"restarts":12}, perf: {"precision":0.919270833333332,"recall":0.919270833333332,"f1":0.919270833333332,"seconds":2.557598054409027e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":57.3359375,"distances_sum":294.27964840084314}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.979381443298969,"state":{"restarts":8},"perf":{"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.1889805793762207e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":50.015625,"distances_sum":295.8687177374959}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.979381443298969,"state":{"restarts":8},"perf":{"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.1889805793762207e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":50.015625,"distances_sum":295.8687177374959}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.979381443298969,"state":{"restarts":8},"perf":{"precision":0.9045138888888881,"recall":0.9045138888888881,"f1":0.9045138888888881,"seconds":2.1889805793762207e-5,"exhaustive_search_seconds":6.789341568946838e-6,"evaluations":50.015625,"distances_sum":295.8687177374959}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.86892361111111, conf: {"restarts":12}, perf: {"precision":0.86892361111111,"recall":0.86892361111111,"f1":0.86892361111111,"seconds":4.9754977226257324e-5,"exhaustive_search_seconds":2.64681875705719e-5,"evaluations":142.0234375,"distances_sum":126.03022812027484}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8767361111111097, conf: {"restarts":7}, perf: {"precision":0.8767361111111097,"recall":0.8767361111111097,"f1":0.8767361111111097,"seconds":3.938935697078705e-5,"exhaustive_search_seconds":2.64681875705719e-5,"evaluations":109.1328125,"distances_sum":125.5325048873201}, best_list's length: 5, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8767361111111097,"state":{"restarts":7},"perf":{"precision":0.8767361111111097,"recall":0.8767361111111097,"f1":0.8767361111111097,"seconds":3.938935697078705e-5,"exhaustive_search_seconds":2.64681875705719e-5,"evaluations":109.1328125,"distances_sum":125.5325048873201}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8767361111111097,"state":{"restarts":7},"perf":{"precision":0.8767361111111097,"recall":0.8767361111111097,"f1":0.8767361111111097,"seconds":3.938935697078705e-5,"exhaustive_search_seconds":2.64681875705719e-5,"evaluations":109.1328125,"distances_sum":125.5325048873201}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8506944444444431,"state":{"restarts":7},"perf":{"precision":0.8506944444444431,"recall":0.8506944444444431,"f1":0.8506944444444431,"seconds":7.815472781658173e-5,"exhaustive_search_seconds":0.0005243364721536636,"evaluations":182.421875,"distances_sum":57.02396318083629}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8506944444444431,"state":{"restarts":7},"perf":{"precision":0.8506944444444431,"recall":0.8506944444444431,"f1":0.8506944444444431,"seconds":7.815472781658173e-5,"exhaustive_search_seconds":0.0005243364721536636,"evaluations":182.421875,"distances_sum":57.02396318083629}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(7), SatNeighborhood(32), 2020-09-22T05:51:58.198
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3004, 0.029346135f0), Item(1866, 0.031454656f0), Item(1620, 0.032624774f0), Item(4892, 0.0422546f0), Item(3477, 0.04836472f0), Item(1638, 0.049582712f0), Item(631, 0.050714597f0), Item(95, 0.060821265f0), Item(4328, 0.062273078f0), Item(4314, 0.06258934f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9171854187479193,"seconds":0.00406600721180439,"exhaustive_search_seconds":2.1494925022125244e-6,"evaluations":7.953125,"distances_sum":534.5401922762394}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.869140625,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9171854187479193,"seconds":0.00406600721180439,"exhaustive_search_seconds":2.1494925022125244e-6,"evaluations":7.953125,"distances_sum":534.5401922762394}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.1374102500618966,"state":{"bsize":3},"perf":{"precision":0.9861111111111108,"recall":0.9861111111111108,"f1":0.9861111111111108,"seconds":1.4193356037139893e-5,"exhaustive_search_seconds":6.804242730140686e-6,"evaluations":31.5546875,"distances_sum":266.1100157611072}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.1374102500618966,"state":{"bsize":3},"perf":{"precision":0.9861111111111108,"recall":0.9861111111111108,"f1":0.9861111111111108,"seconds":1.4193356037139893e-5,"exhaustive_search_seconds":6.804242730140686e-6,"evaluations":31.5546875,"distances_sum":266.1100157611072}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.80757097791798,"state":{"bsize":3},"perf":{"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":2.3597851395606995e-5,"exhaustive_search_seconds":5.871802568435669e-5,"evaluations":59.4375,"distances_sum":121.34992162976414}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.80757097791798,"state":{"bsize":3},"perf":{"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":2.3597851395606995e-5,"exhaustive_search_seconds":5.871802568435669e-5,"evaluations":59.4375,"distances_sum":121.34992162976414}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.80597350101056, conf: {"bsize":5}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.444007158279419e-5,"exhaustive_search_seconds":0.0004485473036766052,"evaluations":104.3671875,"distances_sum":53.498273903504014}, best_list's length: 5, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.80597350101056,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.444007158279419e-5,"exhaustive_search_seconds":0.0004485473036766052,"evaluations":104.3671875,"distances_sum":53.498273903504014}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.80597350101056,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.444007158279419e-5,"exhaustive_search_seconds":0.0004485473036766052,"evaluations":104.3671875,"distances_sum":53.498273903504014}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.80597350101056,"state":{"bsize":5},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.444007158279419e-5,"exhaustive_search_seconds":0.0004485473036766052,"evaluations":104.3671875,"distances_sum":53.498273903504014}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(5), SatNeighborhood(32), 2020-09-22T05:52:02.597
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6202, 0.031629633f0), Item(2200, 0.032729078f0), Item(6855, 0.03364755f0), Item(9133, 0.034443736f0), Item(355, 0.04222527f0), Item(7669, 0.05780212f0), Item(1662, 0.061591636f0), Item(2023, 0.06236374f0), Item(9552, 0.0707444f0), Item(6643, 0.07102336f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
