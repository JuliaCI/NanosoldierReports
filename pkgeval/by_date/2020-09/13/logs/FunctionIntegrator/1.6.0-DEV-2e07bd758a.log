Julia Version 1.6.0-DEV.910
Commit 2e07bd758a (2020-09-13 14:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_khqn9d/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_khqn9d/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.782684 seconds (1.37 M allocations: 72.860 MiB, 1.59% gc time)
Running: chebyshev_quadrature with k=1
  1.604583 seconds (2.16 M allocations: 123.910 MiB, 5.08% gc time)
Running: chebyshev_quadrature with k=2
  0.269766 seconds (410.94 k allocations: 23.613 MiB)
Running: chebyshev_quadrature with k=3
  0.339972 seconds (524.65 k allocations: 28.750 MiB)
Running: chebyshev_quadrature with k=4
  0.332497 seconds (469.04 k allocations: 25.370 MiB, 8.16% gc time)
Running: jacobi_quadrature with α=β=1
 41.387569 seconds (37.25 M allocations: 3.042 GiB, 9.68% gc time)
Running: laguerre_quadrature with k=1
  3.165976 seconds (3.19 M allocations: 177.672 MiB, 2.71% gc time)
Running: legendre_quadrature
  0.224007 seconds (207.12 k allocations: 11.871 MiB, 10.66% gc time)
Running: lobatto_quadrature
  0.312542 seconds (332.13 k allocations: 19.977 MiB)
Running: radau_quadrature
  0.270934 seconds (314.88 k allocations: 19.052 MiB, 8.32% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 78.875694 seconds (100.02 M allocations: 1.491 GiB, 0.19% gc time)
Running: rectangle_rule_midpoint.
  0.166300 seconds (172.85 k allocations: 3.842 MiB, 14.30% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 82.159841 seconds (100.02 M allocations: 1.491 GiB, 0.18% gc time)
Running: rombergs_method
  0.561140 seconds (726.26 k allocations: 41.805 MiB)
Running: simpsons_rule
  0.034678 seconds (46.21 k allocations: 2.061 MiB)
Running: simpsons38_rule
  0.088526 seconds (109.87 k allocations: 5.803 MiB)
Running: trapezoidal_rule
  0.373116 seconds (1.51 M allocations: 25.704 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.093337 seconds (31.52 k allocations: 1.885 MiB)
Running: chebyshev_quadrature with k=1
  0.445548 seconds (274.19 k allocations: 14.218 MiB)
Running: chebyshev_quadrature with k=2
  0.152896 seconds (93.97 k allocations: 2.681 MiB)
Running: chebyshev_quadrature with k=3
  0.197357 seconds (82.22 k allocations: 2.482 MiB)
Running: chebyshev_quadrature with k=4
  0.191237 seconds (64.83 k allocations: 2.128 MiB)
Running: jacobi_quadrature with α=β=1
  2.803927 seconds (500.66 k allocations: 161.653 MiB, 20.87% gc time)
Running: legendre_quadrature
  0.186623 seconds (41.79 k allocations: 2.407 MiB)
Running: lobatto_quadrature
  0.020867 seconds (16.15 k allocations: 1.001 MiB)
Running: radau_quadrature
  0.020416 seconds (16.13 k allocations: 1.001 MiB)
Running: rectangle_rule_left
 28.820012 seconds (471.41 M allocations: 7.025 GiB, 2.37% gc time)
Running: rectangle_rule_midpoint
  0.000020 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.374180 seconds (476.96 M allocations: 7.107 GiB, 2.02% gc time)
Running: rombergs_method
  0.380335 seconds (328.38 k allocations: 18.604 MiB)
Running: simpsons_rule
  0.000024 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.068338 seconds (19.27 k allocations: 1.161 MiB)
Running: trapezoidal_rule
  0.058968 seconds (17.75 k allocations: 1.067 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037033 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.132076 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.151652 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.138443 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.129040 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.330816 seconds (363.41 k allocations: 18.922 MiB)
Running: legendre_quadrature
  0.088014 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000131 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000098 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000568 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000400 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000614 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.102463 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000076 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.030388 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.027294 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066402 seconds (73.32 k allocations: 4.254 MiB)
Running: chebyshev_quadrature with k=1
  0.201477 seconds (231.21 k allocations: 12.964 MiB)
Running: chebyshev_quadrature with k=2
  0.280599 seconds (284.06 k allocations: 15.954 MiB, 9.82% gc time)
Running: chebyshev_quadrature with k=3
  0.210316 seconds (263.44 k allocations: 14.323 MiB)
Running: chebyshev_quadrature with k=4
  0.210746 seconds (263.46 k allocations: 14.245 MiB)
Running: jacobi_quadrature with α=β=1
  2.437896 seconds (447.44 k allocations: 163.150 MiB, 4.67% gc time)
Running: legendre_quadrature
  0.150744 seconds (186.06 k allocations: 10.714 MiB)
Running: lobatto_quadrature
  0.185578 seconds (197.00 k allocations: 11.408 MiB, 7.89% gc time)
Running: radau_quadrature
  0.172572 seconds (196.99 k allocations: 11.408 MiB)
Running: rectangle_rule_left
  1.248089 seconds (19.09 k allocations: 1.158 MiB)
Running: rectangle_rule_midpoint
  0.027250 seconds (25.05 k allocations: 1.571 MiB)
Running: rectangle_rule_right
  1.269488 seconds (17.64 k allocations: 1.073 MiB)
Running: rombergs_method
  0.139207 seconds (134.40 k allocations: 7.754 MiB)
Running: simpsons_rule
  0.035910 seconds (27.97 k allocations: 1.746 MiB)
Running: simpsons38_rule
  0.037209 seconds (43.06 k allocations: 2.706 MiB)
Running: trapezoidal_rule
  0.028683 seconds (44.46 k allocations: 1.786 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.055359 seconds (100.03 k allocations: 2.999 MiB)
Running: chebyshev_quadrature with k=1
  0.210505 seconds (237.80 k allocations: 13.035 MiB, 7.89% gc time)
Running: chebyshev_quadrature with k=2
  0.202657 seconds (291.08 k allocations: 15.881 MiB)
Running: chebyshev_quadrature with k=3
  0.244729 seconds (270.17 k allocations: 14.322 MiB)
Running: chebyshev_quadrature with k=4
  0.259979 seconds (270.19 k allocations: 14.335 MiB, 7.44% gc time)
Running: hermite_quadrature with k=2
 14.973967 seconds (20.95 M allocations: 1.089 GiB, 9.95% gc time)
Running: jacobi_quadrature with α=β=1
  0.489996 seconds (456.66 k allocations: 49.370 MiB, 14.05% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.234814 seconds (277.29 k allocations: 15.260 MiB)
Running: legendre_quadrature
  0.203360 seconds (192.63 k allocations: 11.037 MiB, 18.24% gc time)
Running: lobatto_quadrature
  0.272695 seconds (217.82 k allocations: 37.181 MiB)
Running: radau_quadrature
  0.247181 seconds (214.41 k allocations: 29.841 MiB, 9.79% gc time)
Running: rectangle_rule_left
  0.031023 seconds (22.05 k allocations: 1.306 MiB)
Running: rectangle_rule_midpoint
  0.029879 seconds (26.89 k allocations: 1.660 MiB)
Running: rectangle_rule_right
  0.025610 seconds (18.79 k allocations: 1.129 MiB)
Running: rombergs_method
  0.135806 seconds (136.88 k allocations: 7.790 MiB)
Running: simpsons_rule
  0.044320 seconds (39.87 k allocations: 2.080 MiB)
Running: simpsons38_rule
  0.043889 seconds (58.09 k allocations: 3.092 MiB)
Running: trapezoidal_rule
  0.036540 seconds (30.55 k allocations: 1.714 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043993 seconds (60.38 k allocations: 2.298 MiB)
Running: chebyshev_quadrature with k=1
  0.242940 seconds (233.32 k allocations: 12.832 MiB, 10.57% gc time)
Running: chebyshev_quadrature with k=2
  0.257455 seconds (286.28 k allocations: 15.646 MiB)
Running: chebyshev_quadrature with k=3
  0.235214 seconds (265.58 k allocations: 14.111 MiB)
Running: chebyshev_quadrature with k=4
  0.253653 seconds (265.60 k allocations: 14.125 MiB, 10.66% gc time)
Running: hermite_quadrature with k=2
  0.176373 seconds (171.23 k allocations: 9.794 MiB)
Running: jacobi_quadrature with α=β=1
 10.527561 seconds (449.90 k allocations: 1.175 GiB, 11.84% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.273158 seconds (272.56 k allocations: 15.078 MiB, 4.98% gc time)
Running: legendre_quadrature
  0.181334 seconds (188.18 k allocations: 10.822 MiB)
Running: lobatto_quadrature
  0.291739 seconds (208.57 k allocations: 22.910 MiB, 5.68% gc time)
Running: radau_quadrature
  0.211830 seconds (207.72 k allocations: 20.844 MiB)
Running: rectangle_rule_left
  0.025751 seconds (19.81 k allocations: 1.200 MiB)
Running: rectangle_rule_midpoint
  0.027261 seconds (25.76 k allocations: 1.607 MiB)
Running: rectangle_rule_right
  0.024672 seconds (17.63 k allocations: 1.073 MiB)
Running: rombergs_method
  0.117122 seconds (132.69 k allocations: 7.613 MiB)
Running: simpsons_rule
  0.032878 seconds (32.36 k allocations: 1.871 MiB)
Running: simpsons38_rule
  0.094661 seconds (48.87 k allocations: 2.851 MiB)
Running: trapezoidal_rule
  0.028777 seconds (25.43 k allocations: 1.550 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030537 seconds (31.33 k allocations: 1.893 MiB)
Running: chebyshev_quadrature with k=1
  0.196664 seconds (231.70 k allocations: 13.043 MiB, 7.85% gc time)
Running: chebyshev_quadrature with k=2
  0.209114 seconds (284.56 k allocations: 15.992 MiB)
Running: chebyshev_quadrature with k=3
  0.200498 seconds (263.95 k allocations: 14.322 MiB)
Running: chebyshev_quadrature with k=4
  0.215190 seconds (263.98 k allocations: 14.166 MiB, 7.94% gc time)
Running: jacobi_quadrature with α=β=1
  2.541681 seconds (447.99 k allocations: 194.235 MiB, 7.66% gc time)
Running: legendre_quadrature
  0.195291 seconds (186.56 k allocations: 10.750 MiB)
Running: lobatto_quadrature
  0.199898 seconds (197.50 k allocations: 11.434 MiB, 11.40% gc time)
Running: radau_quadrature
  0.211070 seconds (197.50 k allocations: 11.434 MiB)
Running: rectangle_rule_left
  0.303790 seconds (19.61 k allocations: 1.184 MiB)
Running: rectangle_rule_midpoint
  0.022067 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  0.107318 seconds (17.99 k allocations: 1.092 MiB)
Running: rombergs_method
  0.120536 seconds (145.33 k allocations: 8.481 MiB)
Running: simpsons_rule
  0.030765 seconds (28.67 k allocations: 1.776 MiB)
Running: simpsons38_rule
  0.031814 seconds (43.78 k allocations: 2.735 MiB)
Running: trapezoidal_rule
  0.026117 seconds (45.40 k allocations: 1.820 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029945 seconds (32.09 k allocations: 1.844 MiB)
Running: chebyshev_quadrature with k=1
  0.189277 seconds (232.29 k allocations: 13.007 MiB, 9.17% gc time)
Running: chebyshev_quadrature with k=2
  0.202246 seconds (285.19 k allocations: 15.896 MiB)
Running: chebyshev_quadrature with k=3
  0.190058 seconds (264.53 k allocations: 14.247 MiB)
Running: chebyshev_quadrature with k=4
  0.218142 seconds (264.55 k allocations: 14.389 MiB, 8.10% gc time)
Running: jacobi_quadrature with α=β=1
  1.587236 seconds (448.69 k allocations: 148.905 MiB, 6.08% gc time)
Running: legendre_quadrature
  0.160718 seconds (187.15 k allocations: 10.757 MiB)
Running: lobatto_quadrature
  0.192594 seconds (198.10 k allocations: 11.451 MiB, 7.94% gc time)
Running: radau_quadrature
  0.168434 seconds (198.09 k allocations: 11.468 MiB)
Running: rectangle_rule_left
  1.275703 seconds (19.86 k allocations: 1.197 MiB)
Running: rectangle_rule_midpoint
  0.029005 seconds (25.40 k allocations: 1.589 MiB)
Running: rectangle_rule_right
  1.364856 seconds (17.95 k allocations: 1.089 MiB)
Running: rombergs_method
  0.129451 seconds (135.63 k allocations: 7.825 MiB)
Running: simpsons_rule
  0.034103 seconds (29.37 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.037369 seconds (44.48 k allocations: 2.761 MiB)
Running: trapezoidal_rule
  0.029379 seconds (57.63 k allocations: 2.020 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.170387 seconds (147.31 k allocations: 8.779 MiB)
Running: chebyshev_quadrature with k=1
  0.150728 seconds (70.10 k allocations: 2.210 MiB)
Running: chebyshev_quadrature with k=2
  0.151778 seconds (105.25 k allocations: 2.873 MiB)
Running: chebyshev_quadrature with k=3
  0.187928 seconds (92.74 k allocations: 2.660 MiB, 15.30% gc time)
Running: chebyshev_quadrature with k=4
  0.159533 seconds (72.27 k allocations: 2.256 MiB)
Running: jacobi_quadrature with α=β=1
  2.016044 seconds (476.08 k allocations: 167.540 MiB, 4.40% gc time)
Running: legendre_quadrature
  0.136589 seconds (18.89 k allocations: 1.098 MiB)
Running: lobatto_quadrature
  0.000106 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000046 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 42.354493 seconds (590.00 M allocations: 8.792 GiB, 2.70% gc time)
Running: rectangle_rule_midpoint
  0.000056 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 42.113591 seconds (592.75 M allocations: 8.833 GiB, 2.70% gc time)
Running: rombergs_method
  0.130632 seconds (20.67 k allocations: 1.171 MiB)
Running: simpsons_rule
  0.000095 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.029164 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024080 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.038151 seconds (629.33 M allocations: 9.387 GiB, 3.78% gc time)
Running: chebyshev_quadrature with k=1
  0.505454 seconds (420.90 k allocations: 23.246 MiB)
Running: chebyshev_quadrature with k=2
 12.554469 seconds (475.81 k allocations: 4.041 GiB, 4.44% gc time)
Running: chebyshev_quadrature with k=3
  5.873164 seconds (277.89 k allocations: 1.643 GiB, 4.61% gc time)
Running: chebyshev_quadrature with k=4
  7.708970 seconds (277.91 k allocations: 2.261 GiB, 2.49% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 56.486244 seconds (485.46 k allocations: 13.254 GiB, 2.70% gc time)
Running: legendre_quadrature.
  5.953018 seconds (224.34 k allocations: 1.976 GiB, 4.16% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.084126 seconds (8.23 M allocations: 13.383 GiB, 4.46% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 49.850859 seconds (7.23 M allocations: 13.369 GiB, 2.52% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.924961 seconds (22.55 k allocations: 1.359 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.009722 seconds (30.88 k allocations: 1.901 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.985600 seconds (22.76 k allocations: 1.369 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.118564 seconds (440.31 k allocations: 152.744 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.142828 seconds (600.04 M allocations: 8.943 GiB, 8.35% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.951048 seconds (600.05 M allocations: 8.943 GiB, 7.85% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.396753 seconds (600.03 M allocations: 8.943 GiB, 8.79% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.070670 seconds (180.97 k allocations: 4.427 MiB)
Running: chebyshev_quadrature with k=1
  0.227933 seconds (248.26 k allocations: 13.448 MiB)
Running: chebyshev_quadrature with k=2
  0.214599 seconds (272.84 k allocations: 14.522 MiB)
Running: chebyshev_quadrature with k=3
  0.210435 seconds (248.77 k allocations: 12.808 MiB)
Running: chebyshev_quadrature with k=4
  0.210882 seconds (248.79 k allocations: 13.061 MiB)
Running: jacobi_quadrature with α=β=1
  0.401099 seconds (388.81 k allocations: 34.926 MiB)
Running: laguerre_quadrature with k=2
  0.206679 seconds (181.10 k allocations: 10.483 MiB)
Running: legendre_quadrature
  0.129859 seconds (146.05 k allocations: 8.056 MiB)
Running: lobatto_quadrature
  0.055850 seconds (10.69 k allocations: 15.100 MiB)
Running: radau_quadrature
  0.047757 seconds (9.47 k allocations: 13.173 MiB)
Running: rectangle_rule_left
  0.073495 seconds (19.12 k allocations: 1.132 MiB)
Running: rectangle_rule_midpoint
  0.064350 seconds (25.86 k allocations: 1.591 MiB)
Running: rectangle_rule_right
  0.055598 seconds (17.73 k allocations: 1.059 MiB)
Running: rombergs_method
  0.299025 seconds (172.78 k allocations: 9.900 MiB)
Running: simpsons_rule
  0.002069 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.058191 seconds (79.55 k allocations: 3.411 MiB)
Running: trapezoidal_rule
  0.227348 seconds (2.39 M allocations: 37.705 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002457 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.220770 seconds (2.40 k allocations: 1.688 MiB)
Running: chebyshev_quadrature with k=2
  0.212678 seconds (2.65 k allocations: 2.352 MiB)
Running: chebyshev_quadrature with k=3
  0.232097 seconds (3.08 k allocations: 2.052 MiB)
Running: chebyshev_quadrature with k=4
  0.201182 seconds (3.08 k allocations: 1.493 MiB)
Running: jacobi_quadrature with α=β=1
  6.864577 seconds (365.81 k allocations: 904.757 MiB, 4.24% gc time)
Running: legendre_quadrature
  0.075000 seconds (1.23 k allocations: 65.688 KiB)
Running: lobatto_quadrature
  0.000175 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000127 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.303444 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000548 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  4.664642 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081766 seconds (959 allocations: 54.031 KiB)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000060 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000980 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000721 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.112770 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.113871 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.134272 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.123257 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.233838 seconds (372.37 k allocations: 252.899 MiB)
Running: legendre_quadrature
  0.072323 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000150 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000117 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.411414 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001119 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.388631 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.116773 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002372 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
