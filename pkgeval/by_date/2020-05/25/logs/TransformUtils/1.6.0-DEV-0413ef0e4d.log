Julia Version 1.6.0-DEV.85
Commit 0413ef0e4d (2020-05-24 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Lmjgyx/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Lmjgyx/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.2087081031423399 -0.18677375439439353; 0.2087081031423399 0.0 0.028197704562388244; 0.18677375439439353 -0.028197704562388244 0.0])
dAA = so3([0.0 -0.07883092277135352 0.05245749941044883; 0.07883092277135352 0.0 0.04717495116158346; -0.05245749941044883 -0.04717495116158346 0.0])
dAA = so3([0.0 -0.14850914342302518 -0.14299427152483785; 0.14850914342302518 0.0 -0.04472312398967804; 0.14299427152483785 0.04472312398967804 0.0])
dAA = Quaternion(0.9953591356292957, [0.04553963841164804, 0.016428352135275034, 0.08316514713963542])
dAA = SO3([0.9919304556799717 -0.006298667286840924 -0.12662660812378015; 0.0017068053209518914 0.9993380681777404 -0.036338853949709364; 0.12677167629293254 0.0358294889887034 0.9912846159447288])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9721438675528935 -0.20247622459146364 0.11806641882639414; 0.18709941969727376 0.9737790316748289 0.12941485470909442; -0.14117403418563113 -0.1037196989275412 0.9845364981178374]), [-0.2819770456238824, -1.8677375439439352, 2.087081031423399])
xj = SE3(SO3([0.9116849934104504 -0.39629671603895344 0.10853287818411653; 0.4107066827093975 0.8867998866794667 -0.21191031537687674; -0.012267581996035753 0.237770632841876 0.9712438584567443]), [0.4472312398967804, -1.4299427152483783, 1.4850914342302517])
Dx = SE3(SO3([0.9648638215247735 -0.2529047174924408 -0.07125313875668252; 0.21661541021989464 0.9191262993694714 -0.3290662697127248; 0.14871304572187702 0.3020696106486876 0.9416147727997226]), [0.8757918213066177, 0.3411062635447544, -0.44992856492592104])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
