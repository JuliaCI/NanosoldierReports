Julia Version 1.6.0-DEV.92
Commit 52d85a3440 (2020-05-25 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_sWilCg/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_sWilCg/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723177487616968
curgen: 20 fitness: 0.21723177487616968
curgen: 30 fitness: 0.21723177487616968
curgen: 40 fitness: 0.21723352286536862
curgen: 50 fitness: 0.21723352286536862
CoordinateCreature{Array{Float64,1}}([0.22259694180204473], -0.21723352286536862) 0.22259694180204473 -0.21723352286536862
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258130172847317
curgen: 100 fitness: 3.258295333884547
curgen: 150 fitness: 3.258325974858429
curgen: 200 fitness: 3.2583850105133743
curgen: 250 fitness: 3.2584076486445013
curgen: 300 fitness: 3.2584125766798966
curgen: 350 fitness: 3.258421819411818
curgen: 400 fitness: 3.258424359919497
curgen: 450 fitness: 3.258441035720247
curgen: 500 fitness: 3.2584548259357153
CoordinateCreature{Array{Float64,1}}([-0.2224475303130176, -0.2224671061826615, 0.22220864090134265, 0.22186304982495975, -0.22265372515735415, 0.22255005877800288, -0.2222715729545204, -0.22242969836676574, -0.2225193458366203, -0.22299866828379272, 0.22242978785302958, -0.22246566372438487, 0.22282079126959387, 0.22259189407214622, -0.2222099954656768], -3.2584548259357153) [-0.2224475303130176, -0.2224671061826615, 0.22220864090134265, 0.22186304982495975, -0.22265372515735415, 0.22255005877800288, -0.2222715729545204, -0.22242969836676574, -0.2225193458366203, -0.22299866828379272, 0.22242978785302958, -0.22246566372438487, 0.22282079126959387, 0.22259189407214622, -0.2222099954656768] -3.2584548259357153
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.008283920921257959
curgen: 100 fitness: -0.006489552486698358
curgen: 150 fitness: -0.005722246133103681
curgen: 200 fitness: -0.004268913283993925
curgen: 250 fitness: -0.004268913283993925
curgen: 300 fitness: -0.003989424337277114
curgen: 350 fitness: -0.0022973401505055335
curgen: 400 fitness: -0.0014749406087162242
curgen: 450 fitness: -0.001474648504625975
curgen: 500 fitness: -0.001474648504625975
CoordinateCreature{Array{Float64,1}}([-6.408013800360962e-5, 0.000726316867920854, 3.280062156242841e-5, -5.448324950909668e-5, 0.000904707787253213, 0.0003871847742180929, 2.192285018709954e-5, -0.00044631847558056735, -0.0007723399687412101, 0.00019762192380282009, -0.0001940835161208706, -0.0008594161913179363, 0.0002492799577456811, -0.00047751485634306423, -0.0020068122340759385], 0.001474648504625975) [-6.408013800360962e-5, 0.000726316867920854, 3.280062156242841e-5, -5.448324950909668e-5, 0.000904707787253213, 0.0003871847742180929, 2.192285018709954e-5, -0.00044631847558056735, -0.0007723399687412101, 0.00019762192380282009, -0.0001940835161208706, -0.0008594161913179363, 0.0002492799577456811, -0.00047751485634306423, -0.0020068122340759385] 0.001474648504625975
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
