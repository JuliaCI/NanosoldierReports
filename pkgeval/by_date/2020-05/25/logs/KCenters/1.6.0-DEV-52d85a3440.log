Julia Version 1.6.0-DEV.92
Commit 52d85a3440 (2020-05-25 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed OrderedCollections ────────── v1.2.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed JSON ──────────────────────── v0.21.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed Tables ────────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.17
  Installed DataFrames ────────────────── v0.20.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed Compat ────────────────────── v3.10.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed MLDataPattern ─────────────── v0.5.3
  Installed CategoricalArrays ─────────── v0.7.7
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_21Oxik/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_21Oxik/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9360659371813138
[ Info: 0.8321307849884033
[ Info: 0.5531853482623895
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32982491600016756
mean(cdnet.distances) = 0.3752826055884361
mean(crand.distances) = 0.3562626918902
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6860552641802647,"seconds":5.036592483520508e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.8125,"distances_sum":1433.5714614553765}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8550584831834839,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3828125,"distances_sum":2086.4344594346144}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7867278554778563,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.9609375,"distances_sum":1804.284641721816}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8550584831834839,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.3828125,"distances_sum":2086.4344594346144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9532795329670332,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2770.6158108105155}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.930159944222445,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8984375,"distances_sum":2578.099543983033}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8700611888111897,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.453125,"distances_sum":2231.308598606818}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9532795329670332,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2770.6158108105155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669700091575095,"seconds":6.446614861488342e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.953125,"distances_sum":2877.1348356577205}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.972825091575092,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":9.0,"distances_sum":2906.738444947212}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9761561355311361,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2936.0115741943164}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967714056776557,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9453125,"distances_sum":2866.159356890061}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761561355311361,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2936.0115741943164}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9761561355311361,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.9765625,"distances_sum":2936.0115741943164}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8597645410145418,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.3828125,"distances_sum":1984.1346860296567}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8104749417249426,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.9375,"distances_sum":1729.780316597385}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8597645410145418,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.3828125,"distances_sum":1984.1346860296567}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9413747710622716,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8671875,"distances_sum":2498.3320728451167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9387190934065939,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8515625,"distances_sum":2478.507084528027}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9453125,"distances_sum":2684.4088880946497}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.922390630203131,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8671875,"distances_sum":2356.28259625556}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519745879120883,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9375,"distances_sum":2555.372906610877}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.96856684981685,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9453125,"distances_sum":2684.4088880946497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9842261904761906,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":9.0,"distances_sum":2781.15401315346}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904765,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9765625,"distances_sum":2776.834735539363}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9824805402930404,"seconds":6.193295121192932e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.9921875,"distances_sum":2784.3732947432227}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.975990155677656,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.96875,"distances_sum":2742.038119623057}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9842261904761906,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":9.0,"distances_sum":2781.15401315346}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9842261904761906,"seconds":6.22868537902832e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":9.0,"distances_sum":2781.15401315346}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":5.78125,"distances_sum":934.7321735324745}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3984375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.3984375,"f1":null,"seconds":3.3993273973464966e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":5.78125,"distances_sum":934.7321735324745}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5732421875,"f1":null,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.4765625,"distances_sum":1322.4749430886059}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.80205991924742,"seconds":4.41819429397583e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.53125,"distances_sum":1634.9759063557976}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7914575008325017,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.4375,"distances_sum":1579.0136396766904}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.80205991924742,"seconds":4.41819429397583e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.53125,"distances_sum":1634.9759063557976}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9171989468864477,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.546875,"distances_sum":2254.867904796539}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8852652555777565,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.1953125,"distances_sum":2051.571473998173}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9171989468864477,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.546875,"distances_sum":2254.867904796539}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8544921875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9171989468864477,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.546875,"distances_sum":2254.867904796539}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.6640625,"distances_sum":824.6689176970194}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3681640625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.6992132663726807e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.6640625,"distances_sum":824.6689176970194}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8185460372960383,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.3359375,"distances_sum":1783.3976876447157}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.541015625,"f1":null,"seconds":4.325062036514282e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.2734375,"distances_sum":1298.5962840086333}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8642638611388619,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.5,"distances_sum":2025.4764843650885}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9184841200466208,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6796875,"distances_sum":2278.8600438363687}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.857421875,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.857421875,"f1":0.9184841200466208,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6796875,"distances_sum":2278.8600438363687}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9667239010989015,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2672.8507171621677}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9404246794871801,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.765625,"distances_sum":2441.513141720973}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9502690018315023,"seconds":5.8729201555252075e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2563.951360748147}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9335451007326013,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7265625,"distances_sum":2419.9205836764622}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9667239010989015,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2672.8507171621677}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9667239010989015,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.90625,"distances_sum":2672.8507171621677}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2294921875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2294921875,"f1":null,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.7578125,"distances_sum":559.4505584209634}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":6.5625,"distances_sum":484.075531316385}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.484375,"distances_sum":929.5175954138665}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.42578125,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.42578125,"f1":null,"seconds":4.071742296218872e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.484375,"distances_sum":929.5175954138665}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9097413003663012,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.890625,"distances_sum":2145.1948174801873}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":8,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.3125,"distances_sum":952.6034310136763}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.603515625, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.603515625,"f1":0.7359598734598741,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":7.9765625,"distances_sum":1417.5041584250016}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.822964015151516,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.46875,"distances_sum":1698.908008403581}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9097413003663012,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.890625,"distances_sum":2145.1948174801873}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9921875,"distances_sum":2563.237869546307}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9596211080586085,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.96875,"distances_sum":2478.133063560119}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9416208791208794,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":2361.8599698731414}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9305236430236437,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.953125,"distances_sum":2297.746999565769}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9921875,"distances_sum":2563.237869546307}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9708161630036634,"seconds":6.197020411491394e-6,"exhaustive_search_seconds":1.5087425708770752e-6,"evaluations":8.9921875,"distances_sum":2563.237869546307}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.55859375,"f1":null,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.6328125,"distances_sum":1269.1584623580898}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.2265625,"distances_sum":930.1912438087562}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.55859375,"f1":null,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.6328125,"distances_sum":1269.1584623580898}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.810342782217783,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.625,"distances_sum":1674.0857914988237}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8922795954045962,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2578125,"distances_sum":2012.5715208821691}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8538555194805204,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.9296875,"distances_sum":1870.147533865515}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.8922795954045962,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.2578125,"distances_sum":2012.5715208821691}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491472069597076,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2380.146869861227}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9082818223443231,"seconds":6.023794412612915e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3984375,"distances_sum":2121.425471986871}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9190736346986356,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.65625,"distances_sum":2186.35786024203}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9491472069597076,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2380.146869861227}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9491472069597076,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8046875,"distances_sum":2380.146869861227}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4423828125,"f1":null,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.015625,"distances_sum":967.6400123491383}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4423828125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4423828125,"f1":null,"seconds":4.546716809272766e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.015625,"distances_sum":967.6400123491383}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.814696241258742,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.0078125,"distances_sum":1636.272873138685}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8205263486513494,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.078125,"distances_sum":1671.628903416131}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8699295496170503,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5859375,"distances_sum":1923.162450692176}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.798692800255301,"seconds":8.087605237960815e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":7.9921875,"distances_sum":1589.496499139809}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8699295496170503,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5859375,"distances_sum":1923.162450692176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9090950715950722,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2116.940102364362}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9585279304029308,"seconds":9.501352906227112e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2452.8164673437195}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9178144771894778,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9375,"distances_sum":2157.026579162001}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9497996794871801,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9140625,"distances_sum":2414.0581141504}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9565876831501838,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9296875,"distances_sum":2438.391495494394}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9478682775557784,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.875,"distances_sum":2414.3600765501105}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9585279304029308,"seconds":9.501352906227112e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2452.8164673437195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9585279304029308,"seconds":9.501352906227112e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9765625,"distances_sum":2452.8164673437195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8158518564768572,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.875,"distances_sum":1633.4424527661904}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.28125,"distances_sum":525.7807819897432}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8158518564768572,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.875,"distances_sum":1633.4424527661904}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.952890338827839,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2436.003817549221}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9496196511821517,"seconds":5.684792995452881e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2413.2538073533838}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9340086996337005,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8046875,"distances_sum":2258.0209279457035}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8608953546453555,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.328125,"distances_sum":1876.5715477657768}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.952890338827839,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2436.003817549221}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9767857142857146,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.984375,"distances_sum":2580.6921277326655}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9810096153846156,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.953125,"distances_sum":2652.3183448147533}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9692937271062274,"seconds":6.241723895072937e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9296875,"distances_sum":2544.0294371562777}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9774381868131872,"seconds":6.204470992088318e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9453125,"distances_sum":2611.349646620931}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626888736263742,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2503.9538805179973}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647550366300371,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.9140625,"distances_sum":2515.511713030789}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9810096153846156,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.953125,"distances_sum":2652.3183448147533}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9810096153846156,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.953125,"distances_sum":2652.3183448147533}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.517578125,"f1":null,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.1796875,"distances_sum":951.2949018798826}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.220703125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.220703125,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.078125,"distances_sum":427.52269739178587}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2001953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2001953125,"f1":null,"seconds":3.164634108543396e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.671875,"distances_sum":367.8325764152599}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.517578125,"f1":null,"seconds":4.04752790927887e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.1796875,"distances_sum":951.2949018798826}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9286401098901106,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.796875,"distances_sum":1967.1981206122312}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9319914460539468,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.84375,"distances_sum":1981.7983785144554}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7929591242091251,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.984375,"distances_sum":1353.2594500948874}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8653773310023318,"seconds":4.893168807029724e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1484375,"distances_sum":1641.040761977669}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7921469155844163,"seconds":4.526227712631226e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.1640625,"distances_sum":1358.4530135972}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9319914460539468,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.84375,"distances_sum":1981.7983785144554}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654075091575094,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2177.7805267868807}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733287545787547,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.96875,"distances_sum":2221.4735434254126}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9682291666666671,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9609375,"distances_sum":2191.408723179934}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417584,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9921875,"distances_sum":2257.5997089354523}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417584,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9921875,"distances_sum":2257.5997089354523}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9801167582417584,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9921875,"distances_sum":2257.5997089354523}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":5.6171875,"distances_sum":789.774729284992}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.671875,"f1":null,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.5546875,"distances_sum":1395.194558601101}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.671875,"state":{"ssize":2,"bsize":4},"perf":{"precision":null,"recall":0.671875,"f1":null,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.5546875,"distances_sum":1395.194558601101}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8767003829503837,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.8125,"distances_sum":1729.224810869603}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.803071928071929,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.59375,"distances_sum":1428.7976437376244}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8767003829503837,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.8125,"distances_sum":1729.224810869603}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9030708874458881,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.296875,"distances_sum":1900.9951335214832}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448374542124547,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7890625,"distances_sum":2139.4036906741685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9322661713286721,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.75,"distances_sum":2089.091632497948}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9484146062271069,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2196.502836298929}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9484146062271069,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2196.502836298929}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9484146062271069,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.7734375,"distances_sum":2196.502836298929}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.815944472194473,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.5390625,"distances_sum":1538.7179544553878}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.705078125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.705078125,"f1":0.815944472194473,"seconds":4.5280903577804565e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.5390625,"distances_sum":1538.7179544553878}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9175194597069606,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.390625,"distances_sum":2054.7388985416032}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8833479020979028,"seconds":4.755333065986633e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.7421875,"distances_sum":1889.838818251051}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8632763070263079,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.6953125,"distances_sum":1761.940908225125}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8544921875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8544921875,"f1":0.9175194597069606,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.390625,"distances_sum":2054.7388985416032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9403731684981693,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.625,"distances_sum":2308.0618503245078}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9403731684981693,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.625,"distances_sum":2308.0618503245078}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.89453125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9403731684981693,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.625,"distances_sum":2308.0618503245078}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":2.998858690261841e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.2578125,"distances_sum":408.2081251998905}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.4477561712265015e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.03125,"distances_sum":820.0384313430555}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8775422494172505,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.96875,"distances_sum":1764.957273678501}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7939453125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7939453125,"f1":0.8775422494172505,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.96875,"distances_sum":1764.957273678501}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623740842490847,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2301.7695269557535}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8988584332334342,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3046875,"distances_sum":1892.1930941528267}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9623740842490847,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9140625,"distances_sum":2301.7695269557535}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.96875,"distances_sum":2370.9062407241154}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.96875,"distances_sum":2370.9062407241154}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.96875,"distances_sum":2370.9062407241154}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.193359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.193359375,"f1":null,"seconds":2.8442591428756714e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":4.671875,"distances_sum":486.9474193786318}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7877839174714181,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.59375,"distances_sum":1531.3149601836833}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8460105866355875,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.921875,"distances_sum":1764.9002129828773}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8460105866355875,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.921875,"distances_sum":1764.9002129828773}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559180402930407,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":2417.762494354005}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9262992216117222,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":2207.2360556754247}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9028729950604957,"seconds":5.243346095085144e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.546875,"distances_sum":2062.352971834601}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9337599900099908,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6171875,"distances_sum":2288.763527208502}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.915046932234433,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5,"distances_sum":2092.0819282201146}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8953728563103571,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.375,"distances_sum":1990.5204718606838}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9559180402930407,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":2417.762494354005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696829212454215,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2459.1770709694083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120882,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":2443.6217251073094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683092948717953,"seconds":5.5283308029174805e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":2453.7181989071505}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586538461538465,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":2413.032899190846}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696829212454215,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2459.1770709694083}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696829212454215,"seconds":5.384907126426697e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":2459.1770709694083}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.50390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.50390625,"f1":null,"seconds":3.6507844924926758e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.09375,"distances_sum":1145.0619975667335}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5224609375,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.28125,"distances_sum":1200.8468873170416}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5224609375,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5224609375,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.28125,"distances_sum":1200.8468873170416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7696978368853375,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.46875,"distances_sum":1465.2318174742832}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.642578125,"f1":0.7674948315573322,"seconds":4.16487455368042e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.375,"distances_sum":1478.1432894785669}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.52734375,"f1":0.6737233252858258,"seconds":4.148110747337341e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.375,"distances_sum":1175.035130754773}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8916042291042297,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4296875,"distances_sum":1983.353205133837}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8510432276057281,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.8125,"distances_sum":1793.1150182748017}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7669453810078816,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.390625,"distances_sum":1466.7863032296523}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.818359375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.818359375,"f1":0.8916042291042297,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4296875,"distances_sum":1983.353205133837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575034340659347,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2427.7669495455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9154163544788552,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.75,"distances_sum":2120.2499132226253}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9019777097902104,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.453125,"distances_sum":2076.705134638236}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9575034340659347,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2427.7669495455}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9575034340659347,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2427.7669495455}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4130859375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4130859375,"f1":0.5616723554223556,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.859375,"distances_sum":900.4322513317398}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4130859375,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.4130859375,"f1":0.5616723554223556,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.859375,"distances_sum":900.4322513317398}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9091231684981693,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.375,"distances_sum":2156.797114560214}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9034632034632043,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.296875,"distances_sum":2147.168012949214}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8447265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8447265625,"f1":0.9091231684981693,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.375,"distances_sum":2156.797114560214}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9183009698634705,"seconds":5.2209943532943726e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.75,"distances_sum":2229.3786200615773}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9503663003663008,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.703125,"distances_sum":2492.997916106407}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9197916666666676,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6796875,"distances_sum":2245.5123298719227}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945489926739927,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2436.8000010695164}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9503663003663008,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.703125,"distances_sum":2492.997916106407}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9140625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9503663003663008,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.703125,"distances_sum":2492.997916106407}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.84177072927073,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.046875,"distances_sum":1851.307681267569}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.84177072927073,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.046875,"distances_sum":1851.307681267569}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8862241924741933,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.390625,"distances_sum":2153.2899295425527}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9447432775557778,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2493.311193679151}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9447432775557778,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.734375,"distances_sum":2493.311193679151}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9792410714285718,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9296875,"distances_sum":2700.5968121996516}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560554029304034,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8203125,"distances_sum":2559.3151229014393}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9792410714285718,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9296875,"distances_sum":2700.5968121996516}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9792410714285718,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.9296875,"distances_sum":2700.5968121996516}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3623046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3623046875,"f1":null,"seconds":3.295019268989563e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.078125,"distances_sum":865.6808742151625}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8964087995338001,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.328125,"distances_sum":2203.912617051579}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8964087995338001,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.328125,"distances_sum":2203.912617051579}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9449493215118221,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.640625,"distances_sum":2582.436244878797}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9053259240759246,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.4609375,"distances_sum":2310.8133236399835}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9449493215118221,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.640625,"distances_sum":2582.436244878797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9830357142857147,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9453125,"distances_sum":2791.1960244395914}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720810439560442,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":2723.068946676196}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616503288378293,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7578125,"distances_sum":2673.476432597894}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9578614094239097,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8359375,"distances_sum":2638.1490800760453}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9518315018315022,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.78125,"distances_sum":2602.5498691371827}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9830357142857147,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9453125,"distances_sum":2791.1960244395914}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9830357142857147,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9453125,"distances_sum":2791.1960244395914}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":0.9878720238095237,"recall":0.763671875,"f1":0.8542931027306032,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.2890625,"distances_sum":1375.1395730159888}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.4794211387634277e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":6.5,"distances_sum":708.3275881730123}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":0.9878720238095237,"recall":0.763671875,"f1":0.8542931027306032,"seconds":4.842877388000488e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.2890625,"distances_sum":1375.1395730159888}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9890904017857142,"recall":0.8291015625,"f1":0.895870340596904,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.671875,"distances_sum":1538.033073916499}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":9}, perf: {"precision":0.9845331101190476,"recall":0.908203125,"f1":0.940949089972528,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8671875,"distances_sum":1776.535787271148}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":6,"bsize":9},"perf":{"precision":0.9845331101190476,"recall":0.908203125,"f1":0.940949089972528,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8671875,"distances_sum":1776.535787271148}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":11}, perf: {"precision":0.98828125,"recall":0.9521484375,"f1":0.9684724130036634,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1915.973214829006}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":6,"bsize":11},"perf":{"precision":0.98828125,"recall":0.9521484375,"f1":0.9684724130036634,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1915.973214829006}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":6,"bsize":11},"perf":{"precision":0.98828125,"recall":0.9521484375,"f1":0.9684724130036634,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":1915.973214829006}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2578125,"f1":null,"seconds":3.0621886253356934e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":5.71875,"distances_sum":403.8959668573342}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7777784715284723,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.734375,"distances_sum":1051.1136090884147}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.654296875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.654296875,"f1":0.7777784715284723,"seconds":4.345551133155823e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.734375,"distances_sum":1051.1136090884147}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.94945054945055,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7734375,"distances_sum":1620.9375516236412}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8550210206460215,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.296875,"distances_sum":1248.608232808102}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7906156343656351,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.7734375,"distances_sum":1070.0913704675872}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.94945054945055,"seconds":6.144866347312927e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7734375,"distances_sum":1620.9375516236412}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699233058608061,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":1713.2649823593067}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9627632783882787,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.859375,"distances_sum":1669.0280072683875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960067536630037,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":1669.7755406802653}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699233058608061,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":1713.2649823593067}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9699233058608061,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.890625,"distances_sum":1713.2649823593067}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.4375,"distances_sum":720.3235217713824}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5517578125,"f1":0.6983648296148302,"seconds":3.948807716369629e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.0,"distances_sum":968.9500416178902}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7971518065268073,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7421875,"distances_sum":1251.3265433938898}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7971518065268073,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7421875,"distances_sum":1251.3265433938898}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8806667291042297,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.3984375,"distances_sum":1473.9398190209806}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8539101523476532,"seconds":4.7292560338974e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.21875,"distances_sum":1381.4082685077085}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8895521145521154,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.453125,"distances_sum":1511.0666246395133}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8644246378621387,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.296875,"distances_sum":1424.8109751623065}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8895521145521154,"seconds":4.976987838745117e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.453125,"distances_sum":1511.0666246395133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9405620421245428,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.703125,"distances_sum":1763.430515061678}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9203296703296712,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6171875,"distances_sum":1653.4280196022555}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9406021062271067,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6875,"distances_sum":1779.5950249777736}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9501774267399272,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":1830.577671409163}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461595695970703,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6328125,"distances_sum":1824.1776263150493}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.91278148934399,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5703125,"distances_sum":1650.7227594122112}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9501774267399272,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":1830.577671409163}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9501774267399272,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7265625,"distances_sum":1830.577671409163}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7931348165723172,"seconds":4.464760422706604e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.765625,"distances_sum":1301.4526130363454}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7079902736152742,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.1171875,"distances_sum":1081.3657005211396}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7931348165723172,"seconds":4.464760422706604e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.765625,"distances_sum":1301.4526130363454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.840743111055612,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.328125,"distances_sum":1416.9802380110607}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9227621336996343,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6875,"distances_sum":1765.3032997599098}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.946377060439561,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7578125,"distances_sum":1901.868203829759}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7974998959373967,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.828125,"distances_sum":1297.187813537437}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9102652555777562,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5859375,"distances_sum":1730.2571539866801}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.946377060439561,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7578125,"distances_sum":1901.868203829759}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705929487179493,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8828125,"distances_sum":2001.8789545252148}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743303571428574,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.921875,"distances_sum":2041.9940178194925}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477048992673996,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.75,"distances_sum":1935.114755449031}, best_list's length: 14, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948517628205129,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7421875,"distances_sum":1917.773688566498}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743303571428574,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.921875,"distances_sum":2041.9940178194925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743303571428574,"seconds":6.368383765220642e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.921875,"distances_sum":2041.9940178194925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7990840756465765,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":7.90625,"distances_sum":1324.356417774843}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.8034026737151747,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":7.78125,"distances_sum":1350.6915565781264}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8739047410922419,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.5,"distances_sum":1521.3681433320542}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7861328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7861328125,"f1":0.8739047410922419,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.5,"distances_sum":1521.3681433320542}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8962344946719955,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.640625,"distances_sum":1674.3303585638855}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9291042291042299,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.765625,"distances_sum":1823.666851436653}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588026556776562,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.90625,"distances_sum":1992.9309017390233}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9007586163836174,"seconds":5.248934030532837e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.5703125,"distances_sum":1676.8058171319358}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9581501831501834,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9140625,"distances_sum":1999.858131089117}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588026556776562,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.90625,"distances_sum":1992.9309017390233}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9683264652014656,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9140625,"distances_sum":2051.0211332805834}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9693280677655681,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.921875,"distances_sum":2060.5730819564906}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9684383325008331,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9375,"distances_sum":2058.3675181119957}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971211080586081,"seconds":5.7872384786605835e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9609375,"distances_sum":2077.0931861395034}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9817536630036633,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9765625,"distances_sum":2139.772170407232}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719322344322346,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9453125,"distances_sum":2082.437873710575}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817536630036633,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9765625,"distances_sum":2139.772170407232}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9817536630036633,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":6.440654397010803e-5,"evaluations":8.9765625,"distances_sum":2139.772170407232}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8506732850482859,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.25,"distances_sum":1430.4759405704522}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.265625,"distances_sum":391.78182549180934}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":2.989545464515686e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.1171875,"distances_sum":419.20190228012524}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8506732850482859,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.25,"distances_sum":1430.4759405704522}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8506732850482859,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.25,"distances_sum":1430.4759405704522}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.75390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8506732850482859,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.25,"distances_sum":1430.4759405704522}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6917535589410595,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.3359375,"distances_sum":1041.5845259919881}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6917535589410595,"seconds":4.10713255405426e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.3359375,"distances_sum":1041.5845259919881}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6484375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6484375,"f1":0.774650869963371,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.921875,"distances_sum":1252.263509363263}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7923545204795213,"seconds":4.4871121644973755e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0625,"distances_sum":1295.875491822902}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8633590367965377,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4609375,"distances_sum":1554.5427476042305}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8633590367965377,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4609375,"distances_sum":1554.5427476042305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9167613636363642,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6484375,"distances_sum":1768.5298760912344}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9209020146520154,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6640625,"distances_sum":1783.3510840611991}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9400958416583421,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":1914.9796032498607}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.941094322344323,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6640625,"distances_sum":1914.992027258511}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9342064185814192,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.671875,"distances_sum":1881.6986111778187}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9279850357975364,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7421875,"distances_sum":1842.3743232872114}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9383845321345329,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6171875,"distances_sum":1929.9878257017017}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400958416583421,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":1914.9796032498607}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8955078125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9400958416583421,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":1914.9796032498607}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.546875,"f1":null,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.359375,"distances_sum":1009.1341406298596}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8660464535464544,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4375,"distances_sum":1506.6402804826182}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8660464535464544,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.4375,"distances_sum":1506.6402804826182}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9599702380952388,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8671875,"distances_sum":1993.4066901709778}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9329498626373632,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8125,"distances_sum":1832.0549390754484}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9599702380952388,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.8671875,"distances_sum":1993.4066901709778}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9765625, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9765625,"f1":0.9874255952380954,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9609375,"distances_sum":2169.9256265556783}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700721153846158,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9375,"distances_sum":2057.4104692967367}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618875915750921,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.921875,"distances_sum":2003.9460340614417}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9765625,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9874255952380954,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9609375,"distances_sum":2169.9256265556783}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9765625,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9874255952380954,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.9609375,"distances_sum":2169.9256265556783}}, n: 9
mean(cfft.distances) = 0.3276400745562959
mean(cdnet.distances) = 0.36221893016185713
mean(crand.distances) = 0.3367208346040114
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8688888888888889
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8555555555555556
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8533333333333332
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.88
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8644444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8555555555555556
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8466666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8933333333333332
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.6559449668725331] ***
*** center 1: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 9, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2397165698344181] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2397165698344181, 0.19936107907784933] ***
*** starting iteration: 2; err: [Inf, 0.2397165698344181, 0.19936107907784933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2397165698344181, 0.19936107907784933, 0.1945468186969119] ***
*** starting iteration: 3; err: [Inf, 0.2397165698344181, 0.19936107907784933, 0.1945468186969119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2397165698344181, 0.19936107907784933, 0.1945468186969119, 0.19174213526209166] ***
*** finished computation of 7 references, err: [Inf, 0.2397165698344181, 0.19936107907784933, 0.1945468186969119, 0.19174213526209166] ***
*** center 1: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 65, 19]]
** centroid: 2, normalized-entropy: 0.7713111060849788, [(2, 65), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 64, 0]]
** centroid: 3, normalized-entropy: 0.9995844639313985, [(1, 61), (2, 64)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 48, 0]]
** centroid: 4, normalized-entropy: 0.9788698505067782, [(1, 34), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 70, 0]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(1, 30), (2, 70)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24088359514094732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24088359514094732, 0.19223863128908314] ***
*** starting iteration: 2; err: [Inf, 0.24088359514094732, 0.19223863128908314] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24088359514094732, 0.19223863128908314, 0.18824836171397172] ***
*** starting iteration: 3; err: [Inf, 0.24088359514094732, 0.19223863128908314, 0.18824836171397172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24088359514094732, 0.19223863128908314, 0.18824836171397172, 0.18701410460266266] ***
*** finished computation of 7 references, err: [Inf, 0.24088359514094732, 0.19223863128908314, 0.18824836171397172, 0.18701410460266266] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 101, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 57, 0]]
** centroid: 3, normalized-entropy: 0.9999435071707974, [(1, 56), (2, 57)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 30, 0]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(1, 75), (2, 30)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 53, 24]]
** centroid: 5, normalized-entropy: 0.8951127210954559, [(2, 53), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23424749863313055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23424749863313055, 0.19690285773523364] ***
*** starting iteration: 2; err: [Inf, 0.23424749863313055, 0.19690285773523364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23424749863313055, 0.19690285773523364, 0.1946426454102104] ***
*** starting iteration: 3; err: [Inf, 0.23424749863313055, 0.19690285773523364, 0.1946426454102104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23424749863313055, 0.19690285773523364, 0.1946426454102104, 0.1942083654196366] ***
*** finished computation of 7 references, err: [Inf, 0.23424749863313055, 0.19690285773523364, 0.1946426454102104, 0.1942083654196366] ***
*** center 1: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 35, 0]]
** centroid: 2, normalized-entropy: 0.8865408928220899, [(1, 80), (2, 35)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 25]]
** centroid: 3, normalized-entropy: 0.9917033083725819, [(2, 31), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 14, 0]]
** centroid: 5, normalized-entropy: 0.6032154068313579, [(1, 81), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [21, 63, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 21), (2, 63)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2526281042284592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235] ***
*** starting iteration: 2; err: [Inf, 0.2526281042284592, 0.21097406610747235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324] ***
*** starting iteration: 3; err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223] ***
*** starting iteration: 4; err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355] ***
*** starting iteration: 5; err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196] ***
*** starting iteration: 6; err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196, 0.19242728113874305] ***
*** starting iteration: 7; err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196, 0.19242728113874305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196, 0.19242728113874305, 0.1901656400982861] ***
*** starting iteration: 8; err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196, 0.19242728113874305, 0.1901656400982861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196, 0.19242728113874305, 0.1901656400982861, 0.1893210537590411] ***
*** finished computation of 7 references, err: [Inf, 0.2526281042284592, 0.21097406610747235, 0.20681690089628324, 0.2040251767257223, 0.20122734779721355, 0.19784955319168196, 0.19242728113874305, 0.1901656400982861, 0.1893210537590411] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [91, 26, 0]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(1, 91), (2, 26)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 76, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 24]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 68), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [126, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 54, 0]]
** centroid: 5, normalized-entropy: 0.9994110647387552, [(1, 51), (2, 54)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 17, 0]]
** centroid: 6, normalized-entropy: 0.7829924501610913, [(1, 56), (2, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22473612591076916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22473612591076916, 0.1945342790786417] ***
*** starting iteration: 2; err: [Inf, 0.22473612591076916, 0.1945342790786417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22473612591076916, 0.1945342790786417, 0.19121290788032125] ***
*** starting iteration: 3; err: [Inf, 0.22473612591076916, 0.1945342790786417, 0.19121290788032125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22473612591076916, 0.1945342790786417, 0.19121290788032125, 0.19024703981224977] ***
*** finished computation of 7 references, err: [Inf, 0.22473612591076916, 0.1945342790786417, 0.19121290788032125, 0.19024703981224977] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 49, 19]]
** centroid: 1, normalized-entropy: 0.8546480601169081, [(2, 49), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 2, 0]]
** centroid: 2, normalized-entropy: 0.13206535647488304, [(1, 107), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 85, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 28, 0]]
** centroid: 5, normalized-entropy: 0.8292743048721369, [(1, 79), (2, 28)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 83, 0]]
** centroid: 7, normalized-entropy: 0.39430023792747493, [(1, 7), (2, 83)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24217867681538796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24217867681538796, 0.20220557480737722] ***
*** starting iteration: 2; err: [Inf, 0.24217867681538796, 0.20220557480737722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24217867681538796, 0.20220557480737722, 0.19590426963786112] ***
*** starting iteration: 3; err: [Inf, 0.24217867681538796, 0.20220557480737722, 0.19590426963786112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24217867681538796, 0.20220557480737722, 0.19590426963786112, 0.1934127165493311] ***
*** starting iteration: 4; err: [Inf, 0.24217867681538796, 0.20220557480737722, 0.19590426963786112, 0.1934127165493311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24217867681538796, 0.20220557480737722, 0.19590426963786112, 0.1934127165493311, 0.19285108784989996] ***
*** finished computation of 7 references, err: [Inf, 0.24217867681538796, 0.20220557480737722, 0.19590426963786112, 0.1934127165493311, 0.19285108784989996] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 22, 0]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(1, 62), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 25]]
** centroid: 2, normalized-entropy: 0.8481636883083004, [(2, 66), (3, 25)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 47, 0]]
** centroid: 4, normalized-entropy: 0.9965322634876737, [(1, 54), (2, 47)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [97, 35, 0]]
** centroid: 5, normalized-entropy: 0.8344210035612928, [(1, 97), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24919599769553086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24919599769553086, 0.18928315432591214] ***
*** starting iteration: 2; err: [Inf, 0.24919599769553086, 0.18928315432591214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24919599769553086, 0.18928315432591214, 0.16842007056695293] ***
*** starting iteration: 3; err: [Inf, 0.24919599769553086, 0.18928315432591214, 0.16842007056695293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24919599769553086, 0.18928315432591214, 0.16842007056695293, 0.15902867746908586] ***
*** finished computation of 7 references, err: [Inf, 0.24919599769553086, 0.18928315432591214, 0.16842007056695293, 0.15902867746908586] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 114, 24]]
** centroid: 1, normalized-entropy: 0.6665783579949205, [(2, 114), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [5, 91, 0]]
** centroid: 2, normalized-entropy: 0.29518174309075856, [(1, 5), (2, 91)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 28, 0]]
** centroid: 3, normalized-entropy: 0.6970987920874041, [(1, 121), (2, 28)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 2, 0]]
** centroid: 4, normalized-entropy: 0.19823496409776642, [(1, 63), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [100, 6, 0]]
** centroid: 6, normalized-entropy: 0.3138129641688652, [(1, 100), (2, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26656960025276133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26656960025276133, 0.19063007446338257] ***
*** starting iteration: 2; err: [Inf, 0.26656960025276133, 0.19063007446338257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26656960025276133, 0.19063007446338257, 0.1684076523581433] ***
*** starting iteration: 3; err: [Inf, 0.26656960025276133, 0.19063007446338257, 0.1684076523581433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26656960025276133, 0.19063007446338257, 0.1684076523581433, 0.16071764950262107] ***
*** finished computation of 7 references, err: [Inf, 0.26656960025276133, 0.19063007446338257, 0.1684076523581433, 0.16071764950262107] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [97, 5, 0]]
** centroid: 1, normalized-entropy: 0.28221763445592507, [(1, 97), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [91, 86, 0]]
** centroid: 2, normalized-entropy: 0.9994243005775637, [(1, 91), (2, 86)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 4, 0]]
** centroid: 3, normalized-entropy: 0.5787946246321198, [(1, 25), (2, 4)]
*** center 4: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [6, 79, 0]]
** centroid: 5, normalized-entropy: 0.3681150054280774, [(1, 6), (2, 79)]
*** center 6: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 73, 19]]
** centroid: 7, normalized-entropy: 0.7347813522127804, [(2, 73), (3, 19)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24340026177091711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24340026177091711, 0.17634593084666772] ***
*** starting iteration: 2; err: [Inf, 0.24340026177091711, 0.17634593084666772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24340026177091711, 0.17634593084666772, 0.16114669664018694] ***
*** starting iteration: 3; err: [Inf, 0.24340026177091711, 0.17634593084666772, 0.16114669664018694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24340026177091711, 0.17634593084666772, 0.16114669664018694, 0.15469315570166176] ***
*** finished computation of 7 references, err: [Inf, 0.24340026177091711, 0.17634593084666772, 0.16114669664018694, 0.15469315570166176] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 102, 25]]
** centroid: 1, normalized-entropy: 0.7155839810598772, [(2, 102), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 49, 0]]
** centroid: 2, normalized-entropy: 0.8887971978466939, [(1, 111), (2, 49)]
*** center 3: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [41, 47, 0]]
** centroid: 4, normalized-entropy: 0.99664402524877, [(1, 41), (2, 47)]
*** center 5: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 34, 0]]
** centroid: 7, normalized-entropy: 0.9984628557283827, [(1, 31), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25288723158655696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25288723158655696, 0.2002618927802253] ***
*** starting iteration: 2; err: [Inf, 0.25288723158655696, 0.2002618927802253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202] ***
*** starting iteration: 3; err: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202, 0.1932775151074022] ***
*** starting iteration: 4; err: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202, 0.1932775151074022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202, 0.1932775151074022, 0.19226083788159373] ***
*** starting iteration: 5; err: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202, 0.1932775151074022, 0.19226083788159373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202, 0.1932775151074022, 0.19226083788159373, 0.19180525664810663] ***
*** finished computation of 7 references, err: [Inf, 0.25288723158655696, 0.2002618927802253, 0.19471497366599202, 0.1932775151074022, 0.19226083788159373, 0.19180525664810663] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 95, 24]]
** centroid: 1, normalized-entropy: 0.7252767313016596, [(2, 95), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 48, 0]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(1, 30), (2, 48)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 44, 0]]
** centroid: 3, normalized-entropy: 0.9810077194625308, [(1, 61), (2, 44)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 54, 0]]
** centroid: 4, normalized-entropy: 0.9674320981530666, [(1, 83), (2, 54)]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3274273938224323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995] ***
*** starting iteration: 2; err: [Inf, 0.3274273938224323, 0.21306043970251995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987] ***
*** starting iteration: 3; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277] ***
*** starting iteration: 4; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791] ***
*** starting iteration: 5; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525] ***
*** starting iteration: 6; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273] ***
*** starting iteration: 7; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273, 0.18726427486442823] ***
*** starting iteration: 8; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273, 0.18726427486442823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273, 0.18726427486442823, 0.1851782210470028] ***
*** starting iteration: 9; err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273, 0.18726427486442823, 0.1851782210470028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273, 0.18726427486442823, 0.1851782210470028, 0.18528141573104992] ***
*** finished computation of 7 references, err: [Inf, 0.3274273938224323, 0.21306043970251995, 0.20233404865722987, 0.1977943133610277, 0.1935792899155791, 0.19057658285522525, 0.18875582174522273, 0.18726427486442823, 0.1851782210470028, 0.18528141573104992] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 78, 19]]
** centroid: 1, normalized-entropy: 0.7136036068604937, [(2, 78), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [11, 67, 0]]
** centroid: 2, normalized-entropy: 0.5869185834047994, [(1, 11), (2, 67)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 65, 0]]
** centroid: 4, normalized-entropy: 0.9999579654725078, [(1, 66), (2, 65)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 37, 0]]
** centroid: 5, normalized-entropy: 0.9534985819759996, [(1, 62), (2, 37)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27776455810304723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27776455810304723, 0.21428882335054353] ***
*** starting iteration: 2; err: [Inf, 0.27776455810304723, 0.21428882335054353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605] ***
*** starting iteration: 3; err: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605, 0.18698665503457165] ***
*** starting iteration: 4; err: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605, 0.18698665503457165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605, 0.18698665503457165, 0.18452129299672826] ***
*** starting iteration: 5; err: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605, 0.18698665503457165, 0.18452129299672826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605, 0.18698665503457165, 0.18452129299672826, 0.1837359517016846] ***
*** finished computation of 7 references, err: [Inf, 0.27776455810304723, 0.21428882335054353, 0.19882091168995605, 0.18698665503457165, 0.18452129299672826, 0.1837359517016846] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 40, 0]]
** centroid: 1, normalized-entropy: 0.9876925088958032, [(1, 52), (2, 40)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 88, 25]]
** centroid: 3, normalized-entropy: 0.7624233236147429, [(2, 88), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [79, 42, 0]]
** centroid: 4, normalized-entropy: 0.9314581888225363, [(1, 79), (2, 42)]
*** center 5: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 62, 0]]
** centroid: 6, normalized-entropy: 0.3829576722723533, [(1, 5), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2404414560910113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238] ***
*** starting iteration: 2; err: [Inf, 0.2404414560910113, 0.21350402379962238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243] ***
*** starting iteration: 3; err: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842] ***
*** starting iteration: 4; err: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136] ***
*** starting iteration: 5; err: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136, 0.19004958637013986] ***
*** starting iteration: 6; err: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136, 0.19004958637013986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136, 0.19004958637013986, 0.18790734218092295] ***
*** starting iteration: 7; err: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136, 0.19004958637013986, 0.18790734218092295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136, 0.19004958637013986, 0.18790734218092295, 0.18759023274124428] ***
*** finished computation of 7 references, err: [Inf, 0.2404414560910113, 0.21350402379962238, 0.20757238479756243, 0.20114988509520842, 0.19545662515956136, 0.19004958637013986, 0.18790734218092295, 0.18759023274124428] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [88, 36, 0]]
** centroid: 1, normalized-entropy: 0.8691375806126381, [(1, 88), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 44, 0]]
** centroid: 2, normalized-entropy: 0.9790981671667148, [(1, 62), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 67, 0]]
** centroid: 3, normalized-entropy: 0.892338681064176, [(1, 30), (2, 67)]
*** center 4: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 94, 24]]
** centroid: 7, normalized-entropy: 0.7286561673702678, [(2, 94), (3, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31013820273173354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662] ***
*** starting iteration: 2; err: [Inf, 0.31013820273173354, 0.23553510586646662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907] ***
*** starting iteration: 3; err: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968] ***
*** starting iteration: 4; err: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837] ***
*** starting iteration: 5; err: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837, 0.18901106755205918] ***
*** starting iteration: 6; err: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837, 0.18901106755205918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837, 0.18901106755205918, 0.18784977018350046] ***
*** starting iteration: 7; err: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837, 0.18901106755205918, 0.18784977018350046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837, 0.18901106755205918, 0.18784977018350046, 0.1874044485672236] ***
*** finished computation of 7 references, err: [Inf, 0.31013820273173354, 0.23553510586646662, 0.212364142958907, 0.19686283598579968, 0.19157487074732837, 0.18901106755205918, 0.18784977018350046, 0.1874044485672236] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 95, 19]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 95), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 40, 0]]
** centroid: 2, normalized-entropy: 0.9483190833715304, [(1, 69), (2, 40)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [79, 2, 0]]
** centroid: 4, normalized-entropy: 0.16702680404522793, [(1, 79), (2, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 67, 0]]
** centroid: 6, normalized-entropy: 0.9930097965421731, [(1, 55), (2, 67)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [54, 43, 0]]
** centroid: 7, normalized-entropy: 0.9907034651869471, [(1, 54), (2, 43)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25612383901743385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25612383901743385, 0.1936549436310767] ***
*** starting iteration: 2; err: [Inf, 0.25612383901743385, 0.1936549436310767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25612383901743385, 0.1936549436310767, 0.1916688480819373] ***
*** starting iteration: 3; err: [Inf, 0.25612383901743385, 0.1936549436310767, 0.1916688480819373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25612383901743385, 0.1936549436310767, 0.1916688480819373, 0.19124174693451337] ***
*** finished computation of 7 references, err: [Inf, 0.25612383901743385, 0.1936549436310767, 0.1916688480819373, 0.19124174693451337] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [80, 39, 0]]
** centroid: 1, normalized-entropy: 0.9125914261094841, [(1, 80), (2, 39)]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 107, 25]]
** centroid: 3, normalized-entropy: 0.700201905045644, [(2, 107), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [99, 10, 0]]
** centroid: 4, normalized-entropy: 0.4422615143479816, [(1, 99), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [43, 46, 0]]
** centroid: 5, normalized-entropy: 0.9991802351145687, [(1, 43), (2, 46)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 30, 0]]
** centroid: 7, normalized-entropy: 0.9509560484549724, [(1, 51), (2, 30)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23631726960824975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23631726960824975, 0.16699424920066655] ***
*** finished computation of 7 references, err: [Inf, 0.23631726960824975, 0.16699424920066655] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [144, 5, 0]]
** centroid: 1, normalized-entropy: 0.21192797897135776, [(1, 144), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [74, 36, 0]]
** centroid: 2, normalized-entropy: 0.9121156307204275, [(1, 74), (2, 36)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 98, 24]]
** centroid: 3, normalized-entropy: 0.7153220528038851, [(2, 98), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [100, 2, 0]]
** centroid: 5, normalized-entropy: 0.13923299905509884, [(1, 100), (2, 2)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [5, 37, 0]]
** centroid: 7, normalized-entropy: 0.5266170655714281, [(1, 5), (2, 37)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1817001724967208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1817001724967208, 0.15757784509690648] ***
*** finished computation of 7 references, err: [Inf, 0.1817001724967208, 0.15757784509690648] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [87, 78, 0]]
** centroid: 1, normalized-entropy: 0.9978527766088781, [(1, 87), (2, 78)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 42, 0]]
** centroid: 2, normalized-entropy: 0.9945386816500111, [(1, 50), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 32, 0]]
** centroid: 3, normalized-entropy: 0.9844268978000115, [(1, 43), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 4, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 94, 19]]
** centroid: 7, normalized-entropy: 0.6534358224760193, [(2, 94), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22934031585228631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22934031585228631, 0.18752174158447954] ***
*** finished computation of 7 references, err: [Inf, 0.22934031585228631, 0.18752174158447954] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [151, 5, 0]]
** centroid: 1, normalized-entropy: 0.20457685916658336, [(1, 151), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [3, 135, 0]]
** centroid: 2, normalized-entropy: 0.1510969705171136, [(1, 3), (2, 135)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 39, 0]]
** centroid: 3, normalized-entropy: 0.1686609314966701, [(1, 1), (2, 39)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 2, 0]]
** centroid: 4, normalized-entropy: 0.15790637433488164, [(1, 85), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [170, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 31, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 25]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 20), (3, 25)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2683988487174561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2683988487174561, 0.2216874323058146] ***
*** finished computation of 7 references, err: [Inf, 0.2683988487174561, 0.2216874323058146] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [113, 70, 0]]
** centroid: 1, normalized-entropy: 0.9597980134804149, [(1, 113), (2, 70)]
*** center 2: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [81, 87, 0]]
** centroid: 3, normalized-entropy: 0.9990797181805819, [(1, 81), (2, 87)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 84, 24]]
** centroid: 6, normalized-entropy: 0.7642045065086204, [(2, 84), (3, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29273147650504266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29273147650504266, 0.21734369951935634] ***
*** finished computation of 7 references, err: [Inf, 0.29273147650504266, 0.21734369951935634] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [2, 143, 19]]
** centroid: 1, normalized-entropy: 0.384968347897351, [(1, 2), (2, 143), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 17, 0]]
** centroid: 2, normalized-entropy: 0.8599530497177523, [(1, 43), (2, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 72, 0]]
** centroid: 5, normalized-entropy: 0.9901765446486983, [(1, 91), (2, 72)]
*** center 6: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [95, 15, 0]]
** centroid: 7, normalized-entropy: 0.5746356978376794, [(1, 95), (2, 15)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25450565159527483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25450565159527483, 0.18997303185554437] ***
*** finished computation of 7 references, err: [Inf, 0.25450565159527483, 0.18997303185554437] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 100, 25]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 100), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 43, 0]]
** centroid: 2, normalized-entropy: 0.9858150371789197, [(1, 57), (2, 43)]
*** center 3: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 26, 0]]
** centroid: 4, normalized-entropy: 0.8714630056611941, [(1, 63), (2, 26)]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 9, 0]]
** centroid: 6, normalized-entropy: 0.5203346157857599, [(1, 68), (2, 9)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 54, 0]]
** centroid: 7, normalized-entropy: 0.9940302114769566, [(1, 45), (2, 54)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.411612673780067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.411612673780067, 0.2935780921906188] ***
*** starting iteration: 2; err: [Inf, 0.411612673780067, 0.2935780921906188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.411612673780067, 0.2935780921906188, 0.29312229050077254] ***
*** finished computation of 3 references, err: [Inf, 0.411612673780067, 0.2935780921906188, 0.29312229050077254] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [81, 157, 24]]
** centroid: 1, normalized-entropy: 0.8089733585047358, [(1, 81), (2, 157), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 84, 0]]
** centroid: 2, normalized-entropy: 0.987862452220926, [(1, 109), (2, 84)]
*** center 3: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4616677682634549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4616677682634549, 0.2995813666211757] ***
*** starting iteration: 2; err: [Inf, 0.4616677682634549, 0.2995813666211757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4616677682634549, 0.2995813666211757, 0.29484822395267424] ***
*** starting iteration: 3; err: [Inf, 0.4616677682634549, 0.2995813666211757, 0.29484822395267424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4616677682634549, 0.2995813666211757, 0.29484822395267424, 0.2919538495678181] ***
*** finished computation of 3 references, err: [Inf, 0.4616677682634549, 0.2995813666211757, 0.29484822395267424, 0.2919538495678181] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [81, 158, 19]]
** centroid: 1, normalized-entropy: 0.7792735676641758, [(1, 81), (2, 158), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [201, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [119, 89, 0]]
** centroid: 3, normalized-entropy: 0.9849416931908292, [(1, 119), (2, 89)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42040876308916836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42040876308916836, 0.3066109462502947] ***
*** starting iteration: 2; err: [Inf, 0.42040876308916836, 0.3066109462502947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42040876308916836, 0.3066109462502947, 0.3029125171812667] ***
*** starting iteration: 3; err: [Inf, 0.42040876308916836, 0.3066109462502947, 0.3029125171812667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42040876308916836, 0.3066109462502947, 0.3029125171812667, 0.301772382236023] ***
*** finished computation of 3 references, err: [Inf, 0.42040876308916836, 0.3066109462502947, 0.3029125171812667, 0.301772382236023] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [283, 12, 0]]
** centroid: 1, normalized-entropy: 0.24539205024894414, [(1, 283), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [127, 64, 0]]
** centroid: 2, normalized-entropy: 0.9200311567265075, [(1, 127), (2, 64)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 156, 25]]
** centroid: 3, normalized-entropy: 0.5792980921280737, [(2, 156), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2648947836702561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2648947836702561, 0.23923713176905573] ***
*** finished computation of 3 references, err: [Inf, 0.2648947836702561, 0.23923713176905573] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [69, 189, 24]]
** centroid: 1, normalized-entropy: 0.7485296355736322, [(1, 69), (2, 189), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [216, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 52, 0]]
** centroid: 3, normalized-entropy: 0.8926230133850988, [(1, 116), (2, 52)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3471098858597821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3471098858597821, 0.229756861909766] ***
*** finished computation of 3 references, err: [Inf, 0.3471098858597821, 0.229756861909766] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [80, 150, 19]]
** centroid: 1, normalized-entropy: 0.7886693049096519, [(1, 80), (2, 150), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [136, 97, 0]]
** centroid: 2, normalized-entropy: 0.9796947622414153, [(1, 136), (2, 97)]
*** center 3: selecting labels [1] (freq >= 1) [from [185, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26062793190963846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26062793190963846, 0.23416375010686255] ***
*** finished computation of 3 references, err: [Inf, 0.26062793190963846, 0.23416375010686255] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [98, 123, 14]]
** centroid: 1, normalized-entropy: 0.7933811831429555, [(1, 98), (2, 123), (3, 14)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [98, 109, 11]]
** centroid: 2, normalized-entropy: 0.7797966995277095, [(1, 98), (2, 109), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [214, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19107149074038676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19107149074038676, 0.15337232040666468] ***
*** starting iteration: 2; err: [Inf, 0.19107149074038676, 0.15337232040666468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19107149074038676, 0.15337232040666468, 0.148901178673897] ***
*** starting iteration: 3; err: [Inf, 0.19107149074038676, 0.15337232040666468, 0.148901178673897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19107149074038676, 0.15337232040666468, 0.148901178673897, 0.14734358999839015] ***
*** starting iteration: 4; err: [Inf, 0.19107149074038676, 0.15337232040666468, 0.148901178673897, 0.14734358999839015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19107149074038676, 0.15337232040666468, 0.148901178673897, 0.14734358999839015, 0.14688483879247025] ***
*** finished computation of 7 references, err: [Inf, 0.19107149074038676, 0.15337232040666468, 0.148901178673897, 0.14734358999839015, 0.14688483879247025] ***
*** center 1: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [93, 15, 0]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(1, 93), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 52, 24]]
** centroid: 3, normalized-entropy: 0.8997437586982626, [(2, 52), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 37, 0]]
** centroid: 5, normalized-entropy: 0.9534985819759996, [(1, 62), (2, 37)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [35, 64, 0]]
** centroid: 6, normalized-entropy: 0.9371858565132074, [(1, 35), (2, 64)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 73, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18577960368477622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577960368477622, 0.15710184559354495] ***
*** starting iteration: 2; err: [Inf, 0.18577960368477622, 0.15710184559354495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577960368477622, 0.15710184559354495, 0.15208006319638784] ***
*** starting iteration: 3; err: [Inf, 0.18577960368477622, 0.15710184559354495, 0.15208006319638784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577960368477622, 0.15710184559354495, 0.15208006319638784, 0.1512555077503054] ***
*** finished computation of 7 references, err: [Inf, 0.18577960368477622, 0.15710184559354495, 0.15208006319638784, 0.1512555077503054] ***
*** center 1: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 62, 19]]
** centroid: 2, normalized-entropy: 0.785889583138768, [(2, 62), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [66, 13, 0]]
** centroid: 3, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 11, 0]]
** centroid: 4, normalized-entropy: 0.5643364444932288, [(1, 72), (2, 11)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 70, 0]]
** centroid: 5, normalized-entropy: 0.9501866467511052, [(1, 41), (2, 70)]
*** center 6: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [16, 91, 0]]
** centroid: 7, normalized-entropy: 0.6086696755779567, [(1, 16), (2, 91)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1875125485105158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1875125485105158, 0.15292984626299214] ***
*** starting iteration: 2; err: [Inf, 0.1875125485105158, 0.15292984626299214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1875125485105158, 0.15292984626299214, 0.14850979608328624] ***
*** starting iteration: 3; err: [Inf, 0.1875125485105158, 0.15292984626299214, 0.14850979608328624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1875125485105158, 0.15292984626299214, 0.14850979608328624, 0.1476621501122614] ***
*** finished computation of 7 references, err: [Inf, 0.1875125485105158, 0.15292984626299214, 0.14850979608328624, 0.1476621501122614] ***
*** center 1: selecting labels [1] (freq >= 2) [from [126, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 25]]
** centroid: 2, normalized-entropy: 0.8439491244805034, [(2, 67), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 23, 0]]
** centroid: 3, normalized-entropy: 0.8468781063424823, [(1, 61), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 4, 0]]
** centroid: 4, normalized-entropy: 0.26014536394771426, [(1, 87), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [28, 53, 0]]
** centroid: 5, normalized-entropy: 0.9301497323974339, [(1, 28), (2, 53)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [15, 85, 0]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(1, 15), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3494443949871325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3494443949871325, 0.3103313309786556] ***
*** starting iteration: 2; err: [Inf, 0.3494443949871325, 0.3103313309786556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3494443949871325, 0.3103313309786556, 0.30851195856800173] ***
*** starting iteration: 3; err: [Inf, 0.3494443949871325, 0.3103313309786556, 0.30851195856800173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3494443949871325, 0.3103313309786556, 0.30851195856800173, 0.30791629626843575] ***
*** finished computation of 3 references, err: [Inf, 0.3494443949871325, 0.3103313309786556, 0.30851195856800173, 0.30791629626843575] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [252, 25, 0]]
** centroid: 1, normalized-entropy: 0.4373127600334951, [(1, 252), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [149, 53, 0]]
** centroid: 2, normalized-entropy: 0.8303110191839155, [(1, 149), (2, 53)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 163, 24]]
** centroid: 3, normalized-entropy: 0.5528741970161213, [(2, 163), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37906269256983405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37906269256983405, 0.30116861850453325] ***
*** starting iteration: 2; err: [Inf, 0.37906269256983405, 0.30116861850453325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37906269256983405, 0.30116861850453325, 0.28816980191937897] ***
*** starting iteration: 3; err: [Inf, 0.37906269256983405, 0.30116861850453325, 0.28816980191937897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37906269256983405, 0.30116861850453325, 0.28816980191937897, 0.28764417999866665] ***
*** finished computation of 3 references, err: [Inf, 0.37906269256983405, 0.30116861850453325, 0.28816980191937897, 0.28764417999866665] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [113, 115, 0]]
** centroid: 1, normalized-entropy: 0.9999444939387797, [(1, 113), (2, 115)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [76, 132, 19]]
** centroid: 2, normalized-entropy: 0.8094060757356247, [(1, 76), (2, 132), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [212, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3935004617373782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3935004617373782, 0.303474235830122] ***
*** starting iteration: 2; err: [Inf, 0.3935004617373782, 0.303474235830122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3935004617373782, 0.303474235830122, 0.2995548869442681] ***
*** starting iteration: 3; err: [Inf, 0.3935004617373782, 0.303474235830122, 0.2995548869442681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3935004617373782, 0.303474235830122, 0.2995548869442681, 0.2987872025171208] ***
*** finished computation of 3 references, err: [Inf, 0.3935004617373782, 0.303474235830122, 0.2995548869442681, 0.2987872025171208] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 139, 25]]
** centroid: 1, normalized-entropy: 0.8329237659621844, [(1, 75), (2, 139), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 93, 0]]
** centroid: 2, normalized-entropy: 0.9954695974362903, [(1, 109), (2, 93)]
*** center 3: selecting labels [1] (freq >= 1) [from [226, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2164597594456792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2164597594456792, 0.16836624267278938] ***
*** finished computation of 7 references, err: [Inf, 0.2164597594456792, 0.16836624267278938] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 48, 0]]
** centroid: 1, normalized-entropy: 0.927526588431676, [(1, 92), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [99, 2, 0]]
** centroid: 2, normalized-entropy: 0.1403272709905931, [(1, 99), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [106, 67, 0]]
** centroid: 3, normalized-entropy: 0.9630239273802514, [(1, 106), (2, 67)]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 124, 24]]
** centroid: 5, normalized-entropy: 0.6394571324851642, [(2, 124), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18932124480082915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18932124480082915, 0.15717734332647415] ***
*** finished computation of 7 references, err: [Inf, 0.18932124480082915, 0.15717734332647415] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [115, 56, 0]]
** centroid: 1, normalized-entropy: 0.9123365412377752, [(1, 115), (2, 56)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [9, 100, 0]]
** centroid: 2, normalized-entropy: 0.41116649000212574, [(1, 9), (2, 100)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 16, 0]]
** centroid: 3, normalized-entropy: 0.7478061583312324, [(1, 59), (2, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 75, 19]]
** centroid: 7, normalized-entropy: 0.7261630586710504, [(2, 75), (3, 19)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20965027907860467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20965027907860467, 0.1539780780647894] ***
*** finished computation of 7 references, err: [Inf, 0.20965027907860467, 0.1539780780647894] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [24, 65, 0]]
** centroid: 1, normalized-entropy: 0.8409805336163159, [(1, 24), (2, 65)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 25]]
** centroid: 2, normalized-entropy: 0.9940302114769566, [(2, 30), (3, 25)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 118, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [107, 17, 0]]
** centroid: 6, normalized-entropy: 0.5765847309822099, [(1, 107), (2, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [85, 1, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9520298741855627
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.19309789136012978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19309789136012978, 0.1594590798108461] ***
*** finished computation of 7 references, err: [Inf, 0.19309789136012978, 0.1594590798108461] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 101, 23]]
** centroid: 1, normalized-entropy: 0.6919278850058869, [(2, 101), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [26, 92, 1]]
** centroid: 2, normalized-entropy: 0.7607859931846075, [(1, 26), (2, 92)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 27, 0]]
** centroid: 3, normalized-entropy: 0.8571484374283717, [(1, 69), (2, 27)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [92, 21, 0]]
** centroid: 4, normalized-entropy: 0.6926889992682925, [(1, 92), (2, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2368512069094351] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368512069094351, 0.17085393464522272] ***
*** finished computation of 7 references, err: [Inf, 0.2368512069094351, 0.17085393464522272] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 99, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [18, 56, 0]]
** centroid: 2, normalized-entropy: 0.8003922080453356, [(1, 18), (2, 56)]
*** center 3: selecting labels [1] (freq >= 2) [from [177, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [117, 18, 0]]
** centroid: 4, normalized-entropy: 0.5665095065529052, [(1, 117), (2, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 74, 19]]
** centroid: 7, normalized-entropy: 0.7304472862481346, [(2, 74), (3, 19)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22122816300868564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22122816300868564, 0.1696461956435605] ***
*** finished computation of 7 references, err: [Inf, 0.22122816300868564, 0.1696461956435605] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 102, 25]]
** centroid: 1, normalized-entropy: 0.7155839810598772, [(2, 102), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [36, 82, 0]]
** centroid: 2, normalized-entropy: 0.8874179270685693, [(1, 36), (2, 82)]
*** center 3: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [91, 43, 0]]
** centroid: 4, normalized-entropy: 0.9053526478438054, [(1, 91), (2, 43)]
*** center 5: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [63, 5, 0]]
** centroid: 6, normalized-entropy: 0.378958787501346, [(1, 63), (2, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9520298741855627
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.22617865244633165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22617865244633165, 0.19473431580818665] ***
*** starting iteration: 2; err: [Inf, 0.22617865244633165, 0.19473431580818665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22617865244633165, 0.19473431580818665, 0.1931878625285411] ***
*** starting iteration: 3; err: [Inf, 0.22617865244633165, 0.19473431580818665, 0.1931878625285411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22617865244633165, 0.19473431580818665, 0.1931878625285411, 0.1928515702631252] ***
*** finished computation of 7 references, err: [Inf, 0.22617865244633165, 0.19473431580818665, 0.1931878625285411, 0.1928515702631252] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 90, 0]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(1, 25), (2, 90)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [70, 8, 0]]
** centroid: 2, normalized-entropy: 0.4770713062193298, [(1, 70), (2, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 19]]
** centroid: 4, normalized-entropy: 0.7958812735955936, [(2, 60), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [19, 88, 0]]
** centroid: 5, normalized-entropy: 0.6747323584057238, [(1, 19), (2, 88)]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22897917887911917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897917887911917, 0.19390163813121952] ***
*** starting iteration: 2; err: [Inf, 0.22897917887911917, 0.19390163813121952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897917887911917, 0.19390163813121952, 0.19062948592465828] ***
*** starting iteration: 3; err: [Inf, 0.22897917887911917, 0.19390163813121952, 0.19062948592465828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897917887911917, 0.19390163813121952, 0.19062948592465828, 0.18909458545604357] ***
*** starting iteration: 4; err: [Inf, 0.22897917887911917, 0.19390163813121952, 0.19062948592465828, 0.18909458545604357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22897917887911917, 0.19390163813121952, 0.19062948592465828, 0.18909458545604357, 0.18838565786964856] ***
*** finished computation of 7 references, err: [Inf, 0.22897917887911917, 0.19390163813121952, 0.19062948592465828, 0.18909458545604357, 0.18838565786964856] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 72, 24]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 72), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 22, 0]]
** centroid: 3, normalized-entropy: 0.7979519684655734, [(1, 69), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 21, 0]]
** centroid: 4, normalized-entropy: 0.7455178428108284, [(1, 78), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 33, 0]]
** centroid: 5, normalized-entropy: 0.8647572655747071, [(1, 82), (2, 33)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 4, 0]]
** centroid: 7, normalized-entropy: 0.29181825659888555, [(1, 74), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21821039803102724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21821039803102724, 0.19413974279652293] ***
*** starting iteration: 2; err: [Inf, 0.21821039803102724, 0.19413974279652293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21821039803102724, 0.19413974279652293, 0.19090329351760948] ***
*** starting iteration: 3; err: [Inf, 0.21821039803102724, 0.19413974279652293, 0.19090329351760948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21821039803102724, 0.19413974279652293, 0.19090329351760948, 0.18970328748974574] ***
*** starting iteration: 4; err: [Inf, 0.21821039803102724, 0.19413974279652293, 0.19090329351760948, 0.18970328748974574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21821039803102724, 0.19413974279652293, 0.19090329351760948, 0.18970328748974574, 0.18897057289321875] ***
*** finished computation of 7 references, err: [Inf, 0.21821039803102724, 0.19413974279652293, 0.19090329351760948, 0.18970328748974574, 0.18897057289321875] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 45, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 54), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 24, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 72), (2, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 82, 0]]
** centroid: 4, normalized-entropy: 0.6975195309289136, [(1, 19), (2, 82)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 74, 25]]
** centroid: 5, normalized-entropy: 0.8152560766360704, [(2, 74), (3, 25)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [99, 7, 0]]
** centroid: 7, normalized-entropy: 0.3509601730322126, [(1, 99), (2, 7)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9170038301774829, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :rand, 0.6, 1) => 0.9520298741855627
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.26619073949536093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863] ***
*** starting iteration: 2; err: [Inf, 0.26619073949536093, 0.1885579460336863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878] ***
*** starting iteration: 3; err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664] ***
*** starting iteration: 4; err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607] ***
*** starting iteration: 5; err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398] ***
*** starting iteration: 6; err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398, 0.152220976143214] ***
*** starting iteration: 7; err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398, 0.152220976143214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398, 0.152220976143214, 0.15009544497669056] ***
*** starting iteration: 8; err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398, 0.152220976143214, 0.15009544497669056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398, 0.152220976143214, 0.15009544497669056, 0.14915394461531942] ***
*** finished computation of 7 references, err: [Inf, 0.26619073949536093, 0.1885579460336863, 0.16920005604512878, 0.15945158686835664, 0.1557861333132607, 0.15379580852922398, 0.152220976143214, 0.15009544497669056, 0.14915394461531942] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 35, 0]]
** centroid: 2, normalized-entropy: 0.9151190292999326, [(1, 71), (2, 35)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 105, 24]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 105), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [52, 67, 0]]
** centroid: 4, normalized-entropy: 0.9885081741986365, [(1, 52), (2, 67)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 33, 0]]
** centroid: 5, normalized-entropy: 0.8713360108238786, [(1, 80), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22297392300968205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297392300968205, 0.16702367201925017] ***
*** starting iteration: 2; err: [Inf, 0.22297392300968205, 0.16702367201925017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107] ***
*** starting iteration: 3; err: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797] ***
*** starting iteration: 4; err: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797, 0.1498730982698478] ***
*** starting iteration: 5; err: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797, 0.1498730982698478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797, 0.1498730982698478, 0.1487588464761379] ***
*** starting iteration: 6; err: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797, 0.1498730982698478, 0.1487588464761379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797, 0.1498730982698478, 0.1487588464761379, 0.1483221777436928] ***
*** finished computation of 7 references, err: [Inf, 0.22297392300968205, 0.16702367201925017, 0.15492198014467107, 0.15185867702152797, 0.1498730982698478, 0.1487588464761379, 0.1483221777436928] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 89, 0]]
** centroid: 2, normalized-entropy: 0.2559300438391133, [(1, 4), (2, 89)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 36, 0]]
** centroid: 3, normalized-entropy: 0.9090221560878149, [(1, 75), (2, 36)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [86, 33, 0]]
** centroid: 5, normalized-entropy: 0.8517608318524026, [(1, 86), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 89, 19]]
** centroid: 7, normalized-entropy: 0.6710828900205286, [(2, 89), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2243414960419019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2243414960419019, 0.15564016881922463] ***
*** starting iteration: 2; err: [Inf, 0.2243414960419019, 0.15564016881922463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2243414960419019, 0.15564016881922463, 0.1493265072115581] ***
*** starting iteration: 3; err: [Inf, 0.2243414960419019, 0.15564016881922463, 0.1493265072115581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2243414960419019, 0.15564016881922463, 0.1493265072115581, 0.14824367505868247] ***
*** starting iteration: 4; err: [Inf, 0.2243414960419019, 0.15564016881922463, 0.1493265072115581, 0.14824367505868247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2243414960419019, 0.15564016881922463, 0.1493265072115581, 0.14824367505868247, 0.14777026954770223] ***
*** finished computation of 7 references, err: [Inf, 0.2243414960419019, 0.15564016881922463, 0.1493265072115581, 0.14824367505868247, 0.14777026954770223] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 89, 25]]
** centroid: 1, normalized-entropy: 0.7588840483719564, [(2, 89), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 53, 0]]
** centroid: 3, normalized-entropy: 0.9803107984107206, [(1, 38), (2, 53)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 51, 0]]
** centroid: 4, normalized-entropy: 0.9894671995465737, [(1, 65), (2, 51)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 39, 0]]
** centroid: 5, normalized-entropy: 0.9097361225311661, [(1, 81), (2, 39)]
*** center 6: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9539989090887295, 0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9170038301774829, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9539989090887295
finished with 17
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9539989090887295, 0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9170038301774829, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9539989090887295
finished with 17
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9539989090887295, 0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9170038301774829, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9539989090887295
finished with 17
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9539989090887295, 0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9389958821096546, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9170038301774829, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9539989090887295
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.2134071498511658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2134071498511658, 0.15065345179423623] ***
*** starting iteration: 2; err: [Inf, 0.2134071498511658, 0.15065345179423623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2134071498511658, 0.15065345179423623, 0.14652422371193363] ***
*** starting iteration: 3; err: [Inf, 0.2134071498511658, 0.15065345179423623, 0.14652422371193363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2134071498511658, 0.15065345179423623, 0.14652422371193363, 0.14601798196542431] ***
*** finished computation of 7 references, err: [Inf, 0.2134071498511658, 0.15065345179423623, 0.14652422371193363, 0.14601798196542431] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [78, 26, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 78), (2, 26)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 69, 19]]
** centroid: 2, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 64, 0]]
** centroid: 3, normalized-entropy: 0.9988076767835602, [(1, 59), (2, 64)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [90, 2, 0]]
** centroid: 4, normalized-entropy: 0.1510969705171136, [(1, 90), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 85, 0]]
** centroid: 6, normalized-entropy: 0.09140162014739266, [(1, 1), (2, 85)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [76, 1, 0]]
** centroid: 7, normalized-entropy: 0.1000009430103234, [(1, 76), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18749068323215162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18749068323215162, 0.15064150593159636] ***
*** starting iteration: 2; err: [Inf, 0.18749068323215162, 0.15064150593159636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18749068323215162, 0.15064150593159636, 0.1479383222507061] ***
*** starting iteration: 3; err: [Inf, 0.18749068323215162, 0.15064150593159636, 0.1479383222507061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18749068323215162, 0.15064150593159636, 0.1479383222507061, 0.14745038487303824] ***
*** finished computation of 7 references, err: [Inf, 0.18749068323215162, 0.15064150593159636, 0.1479383222507061, 0.14745038487303824] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 20, 0]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(1, 70), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [88, 25, 0]]
** centroid: 2, normalized-entropy: 0.7624233236147429, [(1, 88), (2, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 59, 24]]
** centroid: 3, normalized-entropy: 0.8676293117125105, [(2, 59), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 56, 0]]
** centroid: 5, normalized-entropy: 0.9984242941042116, [(1, 51), (2, 56)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 81, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1845391410482542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845391410482542, 0.1485714188077371] ***
*** starting iteration: 2; err: [Inf, 0.1845391410482542, 0.1485714188077371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845391410482542, 0.1485714188077371, 0.14493099222521016] ***
*** starting iteration: 3; err: [Inf, 0.1845391410482542, 0.1485714188077371, 0.14493099222521016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1845391410482542, 0.1485714188077371, 0.14493099222521016, 0.14429904280071226] ***
*** finished computation of 7 references, err: [Inf, 0.1845391410482542, 0.1485714188077371, 0.14493099222521016, 0.14429904280071226] ***
*** center 1: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 71, 25]]
** centroid: 2, normalized-entropy: 0.8273744775003173, [(2, 71), (3, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [72, 39, 0]]
** centroid: 4, normalized-entropy: 0.9352691398683568, [(1, 72), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [32, 61, 0]]
** centroid: 5, normalized-entropy: 0.928675181093665, [(1, 32), (2, 61)]
*** center 6: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 61, 0]]
** centroid: 7, normalized-entropy: 0.33352200393097675, [(1, 4), (2, 61)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22991248653703802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22991248653703802, 0.18909105422763942] ***
*** starting iteration: 2; err: [Inf, 0.22991248653703802, 0.18909105422763942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22991248653703802, 0.18909105422763942, 0.18628037048296797] ***
*** starting iteration: 3; err: [Inf, 0.22991248653703802, 0.18909105422763942, 0.18628037048296797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22991248653703802, 0.18909105422763942, 0.18628037048296797, 0.18598133375638867] ***
*** finished computation of 7 references, err: [Inf, 0.22991248653703802, 0.18909105422763942, 0.18628037048296797, 0.18598133375638867] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 89, 24]]
** centroid: 1, normalized-entropy: 0.7460251980495494, [(2, 89), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 48, 0]]
** centroid: 4, normalized-entropy: 0.9986359641585719, [(1, 44), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [92, 23, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 92), (2, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 1, 0]]
** centroid: 6, normalized-entropy: 0.098959095355743, [(1, 77), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 80, 0]]
** centroid: 7, normalized-entropy: 0.16542703399626665, [(1, 2), (2, 80)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2317311790125302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317311790125302, 0.1955156215833782] ***
*** starting iteration: 2; err: [Inf, 0.2317311790125302, 0.1955156215833782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317311790125302, 0.1955156215833782, 0.19150854328247918] ***
*** starting iteration: 3; err: [Inf, 0.2317311790125302, 0.1955156215833782, 0.19150854328247918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2317311790125302, 0.1955156215833782, 0.19150854328247918, 0.19095366245388393] ***
*** finished computation of 7 references, err: [Inf, 0.2317311790125302, 0.1955156215833782, 0.19150854328247918, 0.19095366245388393] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [104, 1, 0]]
** centroid: 1, normalized-entropy: 0.07761951112637416, [(1, 104), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 47, 19]]
** centroid: 2, normalized-entropy: 0.8659653498997099, [(2, 47), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [84, 11, 0]]
** centroid: 3, normalized-entropy: 0.5171354891896202, [(1, 84), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 4, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 93, 0]]
** centroid: 6, normalized-entropy: 0.290715865467415, [(1, 5), (2, 93)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 94, 0]]
** centroid: 7, normalized-entropy: 0.5336439173027161, [(1, 13), (2, 94)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22982047437627365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982047437627365, 0.19472558878228136] ***
*** starting iteration: 2; err: [Inf, 0.22982047437627365, 0.19472558878228136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982047437627365, 0.19472558878228136, 0.19260810348351878] ***
*** starting iteration: 3; err: [Inf, 0.22982047437627365, 0.19472558878228136, 0.19260810348351878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982047437627365, 0.19472558878228136, 0.19260810348351878, 0.1923708436986909] ***
*** finished computation of 7 references, err: [Inf, 0.22982047437627365, 0.19472558878228136, 0.19260810348351878, 0.1923708436986909] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 61, 0]]
** centroid: 1, normalized-entropy: 0.9515388458648668, [(1, 36), (2, 61)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 26, 0]]
** centroid: 2, normalized-entropy: 0.8589810370425965, [(1, 66), (2, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [29, 78, 0]]
** centroid: 4, normalized-entropy: 0.8429359403268015, [(1, 29), (2, 78)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 67, 25]]
** centroid: 5, normalized-entropy: 0.8439491244805034, [(2, 67), (3, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9539989090887295, 0.9520298741855627, 0.9440278601955248, 0.9430148711585837, 0.9419779060497623, 0.9390258521995049, 0.9389958821096546, 0.9379948811086537, 0.9339878800956646, 0.9320008631385877, 0.9270228312144481, 0.9170038301774829, 0.9169948391505277, 0.9159998321674969, 0.9010327692962422, 0.892988797180414, 0.8810127492762222, 0.8530266793739848, 0.806000611389833]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9539989090887295
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20217946639284493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217946639284493, 0.16243025757092983] ***
*** starting iteration: 2; err: [Inf, 0.20217946639284493, 0.16243025757092983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322] ***
*** starting iteration: 3; err: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322, 0.15208729413105174] ***
*** starting iteration: 4; err: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322, 0.15208729413105174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322, 0.15208729413105174, 0.14976827902253717] ***
*** starting iteration: 5; err: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322, 0.15208729413105174, 0.14976827902253717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322, 0.15208729413105174, 0.14976827902253717, 0.14905727458000184] ***
*** finished computation of 7 references, err: [Inf, 0.20217946639284493, 0.16243025757092983, 0.15619020549487322, 0.15208729413105174, 0.14976827902253717, 0.14905727458000184] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 100, 34]]
** centroid: 1, normalized-entropy: 0.8171387756817725, [(2, 100), (3, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [92, 90, 0]]
** centroid: 2, normalized-entropy: 0.999912889501356, [(1, 92), (2, 90)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [17, 128, 0]]
** centroid: 3, normalized-entropy: 0.5213789637993774, [(1, 17), (2, 128)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [126, 10, 0]]
** centroid: 4, normalized-entropy: 0.378958787501346, [(1, 126), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [123, 32, 0]]
** centroid: 5, normalized-entropy: 0.7346451526501957, [(1, 123), (2, 32)]
*** center 6: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25249250255525113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25249250255525113, 0.1739836733341217] ***
*** starting iteration: 2; err: [Inf, 0.25249250255525113, 0.1739836733341217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738] ***
*** starting iteration: 3; err: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707] ***
*** starting iteration: 4; err: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707, 0.1506724976701662] ***
*** starting iteration: 5; err: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707, 0.1506724976701662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707, 0.1506724976701662, 0.14929693245980888] ***
*** starting iteration: 6; err: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707, 0.1506724976701662, 0.14929693245980888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707, 0.1506724976701662, 0.14929693245980888, 0.14881376706436275] ***
*** finished computation of 7 references, err: [Inf, 0.25249250255525113, 0.1739836733341217, 0.16373563612438738, 0.15511870742216707, 0.1506724976701662, 0.14929693245980888, 0.14881376706436275] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 45, 0]]
** centroid: 1, normalized-entropy: 0.9605187074766162, [(1, 28), (2, 45)]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [5, 55, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 5), (2, 55)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 21]]
** centroid: 4, normalized-entropy: 0.9076961653608385, [(2, 44), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [65, 25, 0]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(1, 65), (2, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18008039364311845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18008039364311845, 0.15063790744449942] ***
*** starting iteration: 2; err: [Inf, 0.18008039364311845, 0.15063790744449942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18008039364311845, 0.15063790744449942, 0.1472509782500565] ***
*** starting iteration: 3; err: [Inf, 0.18008039364311845, 0.15063790744449942, 0.1472509782500565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18008039364311845, 0.15063790744449942, 0.1472509782500565, 0.14633029688429086] ***
*** finished computation of 7 references, err: [Inf, 0.18008039364311845, 0.15063790744449942, 0.1472509782500565, 0.14633029688429086] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 35, 0]]
** centroid: 1, normalized-entropy: 0.8974271930876951, [(1, 16), (2, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 36, 20]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(2, 36), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [74, 42, 0]]
** centroid: 6, normalized-entropy: 0.9443871950133461, [(1, 74), (2, 42)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2005736108906567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2005736108906567, 0.15744661703519522] ***
*** starting iteration: 2; err: [Inf, 0.2005736108906567, 0.15744661703519522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2005736108906567, 0.15744661703519522, 0.15066728336259258] ***
*** starting iteration: 3; err: [Inf, 0.2005736108906567, 0.15744661703519522, 0.15066728336259258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2005736108906567, 0.15744661703519522, 0.15066728336259258, 0.14943128935061395] ***
*** starting iteration: 4; err: [Inf, 0.2005736108906567, 0.15744661703519522, 0.15066728336259258, 0.14943128935061395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2005736108906567, 0.15744661703519522, 0.15066728336259258, 0.14943128935061395, 0.1487133276630193] ***
*** finished computation of 7 references, err: [Inf, 0.2005736108906567, 0.15744661703519522, 0.15066728336259258, 0.14943128935061395, 0.1487133276630193] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [19, 65, 0]]
** centroid: 1, normalized-entropy: 0.7713111060849788, [(1, 19), (2, 65)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 17]]
** centroid: 2, normalized-entropy: 0.9248187049730301, [(2, 33), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 10, 0]]
** centroid: 5, normalized-entropy: 0.576291461217437, [(1, 63), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [76, 7, 0]]
** centroid: 7, normalized-entropy: 0.4172806906708316, [(1, 76), (2, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2524113969360478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524113969360478, 0.19346885534888134] ***
*** starting iteration: 2; err: [Inf, 0.2524113969360478, 0.19346885534888134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303] ***
*** starting iteration: 3; err: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303, 0.1486219997033477] ***
*** starting iteration: 4; err: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303, 0.1486219997033477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303, 0.1486219997033477, 0.14752172308415173] ***
*** starting iteration: 5; err: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303, 0.1486219997033477, 0.14752172308415173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303, 0.1486219997033477, 0.14752172308415173, 0.14726652720198036] ***
*** finished computation of 7 references, err: [Inf, 0.2524113969360478, 0.19346885534888134, 0.15840331433620303, 0.1486219997033477, 0.14752172308415173, 0.14726652720198036] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [64, 35, 0]]
** centroid: 1, normalized-entropy: 0.9371858565132074, [(1, 64), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [22, 46, 0]]
** centroid: 2, normalized-entropy: 0.9081783472997053, [(1, 22), (2, 46)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [41, 50, 0]]
** centroid: 4, normalized-entropy: 0.9929326437363045, [(1, 41), (2, 50)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 56, 20]]
** centroid: 7, normalized-entropy: 0.8314743880097292, [(2, 56), (3, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24597382513247432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365] ***
*** starting iteration: 2; err: [Inf, 0.24597382513247432, 0.194642393367365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803] ***
*** starting iteration: 3; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332] ***
*** starting iteration: 4; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134] ***
*** starting iteration: 5; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348] ***
*** starting iteration: 6; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228] ***
*** starting iteration: 7; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228, 0.15532053549215197] ***
*** starting iteration: 8; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228, 0.15532053549215197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228, 0.15532053549215197, 0.15386752703040837] ***
*** starting iteration: 9; err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228, 0.15532053549215197, 0.15386752703040837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228, 0.15532053549215197, 0.15386752703040837, 0.1531692994851619] ***
*** finished computation of 7 references, err: [Inf, 0.24597382513247432, 0.194642393367365, 0.17334146515838803, 0.16609315691888332, 0.1634529673308134, 0.16070998279750348, 0.15797972605936228, 0.15532053549215197, 0.15386752703040837, 0.1531692994851619] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 30, 0]]
** centroid: 1, normalized-entropy: 0.8595316914502928, [(1, 76), (2, 30)]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 49, 0]]
** centroid: 3, normalized-entropy: 0.656540281386946, [(1, 10), (2, 49)]
*** center 4: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [21, 48, 0]]
** centroid: 6, normalized-entropy: 0.8865408928220899, [(1, 21), (2, 48)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 58, 18]]
** centroid: 7, normalized-entropy: 0.7897492536625221, [(2, 58), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1807107333280146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807107333280146, 0.15126576780970208] ***
*** starting iteration: 2; err: [Inf, 0.1807107333280146, 0.15126576780970208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807107333280146, 0.15126576780970208, 0.14819096862711012] ***
*** starting iteration: 3; err: [Inf, 0.1807107333280146, 0.15126576780970208, 0.14819096862711012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807107333280146, 0.15126576780970208, 0.14819096862711012, 0.14773135198839007] ***
*** finished computation of 7 references, err: [Inf, 0.1807107333280146, 0.15126576780970208, 0.14819096862711012, 0.14773135198839007] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 29, 0]]
** centroid: 1, normalized-entropy: 0.9693253797191861, [(1, 44), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [20, 48, 0]]
** centroid: 2, normalized-entropy: 0.8739810481273581, [(1, 20), (2, 48)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 47, 0]]
** centroid: 3, normalized-entropy: 0.9992158792218827, [(1, 44), (2, 47)]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 67, 18]]
** centroid: 6, normalized-entropy: 0.7448423974714387, [(2, 67), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2629244371857494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574] ***
*** starting iteration: 2; err: [Inf, 0.2629244371857494, 0.18541700207814574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697] ***
*** starting iteration: 3; err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737] ***
*** starting iteration: 4; err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797] ***
*** starting iteration: 5; err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429] ***
*** starting iteration: 6; err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429, 0.14853125535696746] ***
*** starting iteration: 7; err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429, 0.14853125535696746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429, 0.14853125535696746, 0.14716303689870983] ***
*** starting iteration: 8; err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429, 0.14853125535696746, 0.14716303689870983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429, 0.14853125535696746, 0.14716303689870983, 0.14666898372210563] ***
*** finished computation of 7 references, err: [Inf, 0.2629244371857494, 0.18541700207814574, 0.16600090751610697, 0.15720123067870737, 0.15321820206497797, 0.1505075110029429, 0.14853125535696746, 0.14716303689870983, 0.14666898372210563] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 14, 0]]
** centroid: 1, normalized-entropy: 0.7455178428108284, [(1, 52), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [28, 47, 0]]
** centroid: 2, normalized-entropy: 0.9531971725430559, [(1, 28), (2, 47)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 11, 0]]
** centroid: 5, normalized-entropy: 0.6167482598263911, [(1, 61), (2, 11)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 27, 18]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 27), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 4, 0]]
** centroid: 7, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22807384642399847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22807384642399847, 0.18091492941789328] ***
*** starting iteration: 2; err: [Inf, 0.22807384642399847, 0.18091492941789328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928] ***
*** starting iteration: 3; err: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414] ***
*** starting iteration: 4; err: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414, 0.15606148265488445] ***
*** starting iteration: 5; err: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414, 0.15606148265488445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414, 0.15606148265488445, 0.1550377382263541] ***
*** starting iteration: 6; err: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414, 0.15606148265488445, 0.1550377382263541] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414, 0.15606148265488445, 0.1550377382263541, 0.15438194659538568] ***
*** finished computation of 7 references, err: [Inf, 0.22807384642399847, 0.18091492941789328, 0.16404021877422928, 0.15795629249699414, 0.15606148265488445, 0.1550377382263541, 0.15438194659538568] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 53, 0]]
** centroid: 1, normalized-entropy: 0.9972301143765979, [(1, 60), (2, 53)]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 18]]
** centroid: 3, normalized-entropy: 0.9994110647387552, [(2, 17), (3, 18)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 58, 0]]
** centroid: 5, normalized-entropy: 0.6024308020404452, [(1, 10), (2, 58)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2471868154127151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092] ***
*** starting iteration: 2; err: [Inf, 0.2471868154127151, 0.17523575516045092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652] ***
*** starting iteration: 3; err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057] ***
*** starting iteration: 4; err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024] ***
*** starting iteration: 5; err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318] ***
*** starting iteration: 6; err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318, 0.15270024142414332] ***
*** starting iteration: 7; err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318, 0.15270024142414332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318, 0.15270024142414332, 0.1513233809247613] ***
*** starting iteration: 8; err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318, 0.15270024142414332, 0.1513233809247613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318, 0.15270024142414332, 0.1513233809247613, 0.15087022672779857] ***
*** finished computation of 7 references, err: [Inf, 0.2471868154127151, 0.17523575516045092, 0.1660241691544652, 0.16105511611700057, 0.15735262670723024, 0.15390461163595318, 0.15270024142414332, 0.1513233809247613, 0.15087022672779857] ***
*** center 1: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 64, 20]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 64), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 57, 0]]
** centroid: 3, normalized-entropy: 0.9999435071707974, [(1, 56), (2, 57)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 17, 0]]
** centroid: 4, normalized-entropy: 0.7564041945982506, [(1, 61), (2, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 39, 0]]
** centroid: 6, normalized-entropy: 0.9905577004075262, [(1, 31), (2, 39)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2196495399363339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2196495399363339, 0.15263323021307587] ***
*** starting iteration: 2; err: [Inf, 0.2196495399363339, 0.15263323021307587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2196495399363339, 0.15263323021307587, 0.14885201774537563] ***
*** starting iteration: 3; err: [Inf, 0.2196495399363339, 0.15263323021307587, 0.14885201774537563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2196495399363339, 0.15263323021307587, 0.14885201774537563, 0.14784286768734456] ***
*** starting iteration: 4; err: [Inf, 0.2196495399363339, 0.15263323021307587, 0.14885201774537563, 0.14784286768734456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2196495399363339, 0.15263323021307587, 0.14885201774537563, 0.14784286768734456, 0.14756523619079961] ***
*** finished computation of 7 references, err: [Inf, 0.2196495399363339, 0.15263323021307587, 0.14885201774537563, 0.14784286768734456, 0.14756523619079961] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 43, 0]]
** centroid: 1, normalized-entropy: 0.9996273710574612, [(1, 45), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 7, 0]]
** centroid: 2, normalized-entropy: 0.5086113313826895, [(1, 55), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [22, 37, 0]]
** centroid: 4, normalized-entropy: 0.9528588097297789, [(1, 22), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 22, 0]]
** centroid: 5, normalized-entropy: 0.8829589691462253, [(1, 51), (2, 22)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 73, 19]]
** centroid: 6, normalized-entropy: 0.7347813522127804, [(2, 73), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21462863762304188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21462863762304188, 0.16121877263300122] ***
*** starting iteration: 2; err: [Inf, 0.21462863762304188, 0.16121877263300122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21462863762304188, 0.16121877263300122, 0.16008447027765216] ***
*** starting iteration: 3; err: [Inf, 0.21462863762304188, 0.16121877263300122, 0.16008447027765216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21462863762304188, 0.16121877263300122, 0.16008447027765216, 0.1593189746644348] ***
*** finished computation of 7 references, err: [Inf, 0.21462863762304188, 0.16121877263300122, 0.16008447027765216, 0.1593189746644348] ***
*** center 1: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 57, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [8, 41, 0]]
** centroid: 3, normalized-entropy: 0.6420642892306891, [(1, 8), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 44, 0]]
** centroid: 4, normalized-entropy: 0.9552178476322734, [(1, 73), (2, 44)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 46, 20]]
** centroid: 5, normalized-entropy: 0.8849636363831529, [(2, 46), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25961787981539963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143] ***
*** starting iteration: 2; err: [Inf, 0.25961787981539963, 0.20499312279187143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153] ***
*** starting iteration: 3; err: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272] ***
*** starting iteration: 4; err: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433] ***
*** starting iteration: 5; err: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433, 0.14886287507321685] ***
*** starting iteration: 6; err: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433, 0.14886287507321685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433, 0.14886287507321685, 0.14560837724199518] ***
*** starting iteration: 7; err: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433, 0.14886287507321685, 0.14560837724199518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433, 0.14886287507321685, 0.14560837724199518, 0.1446984961461276] ***
*** finished computation of 7 references, err: [Inf, 0.25961787981539963, 0.20499312279187143, 0.18780103509873153, 0.1695443827328272, 0.15637786952592433, 0.14886287507321685, 0.14560837724199518, 0.1446984961461276] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 35, 0]]
** centroid: 1, normalized-entropy: 0.9309350721504903, [(1, 66), (2, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 18]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 33, 0]]
** centroid: 5, normalized-entropy: 0.980377508715691, [(1, 46), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 62, 0]]
** centroid: 6, normalized-entropy: 0.43055186701043935, [(1, 6), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1976705078445375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1976705078445375, 0.15644139113649727] ***
*** starting iteration: 2; err: [Inf, 0.1976705078445375, 0.15644139113649727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1976705078445375, 0.15644139113649727, 0.1533588230907917] ***
*** starting iteration: 3; err: [Inf, 0.1976705078445375, 0.15644139113649727, 0.1533588230907917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1976705078445375, 0.15644139113649727, 0.1533588230907917, 0.15276215288368986] ***
*** finished computation of 7 references, err: [Inf, 0.1976705078445375, 0.15644139113649727, 0.1533588230907917, 0.15276215288368986] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [91, 36, 0]]
** centroid: 1, normalized-entropy: 0.8601286843311847, [(1, 91), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 22, 0]]
** centroid: 2, normalized-entropy: 0.9740248644357521, [(1, 15), (2, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 49, 17]]
** centroid: 4, normalized-entropy: 0.8230660790114689, [(2, 49), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [78, 3, 0]]
** centroid: 5, normalized-entropy: 0.22853814395352806, [(1, 78), (2, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22078446760587395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22078446760587395, 0.17723296009004116] ***
*** starting iteration: 2; err: [Inf, 0.22078446760587395, 0.17723296009004116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306] ***
*** starting iteration: 3; err: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495] ***
*** starting iteration: 4; err: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495, 0.15208184932451696] ***
*** starting iteration: 5; err: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495, 0.15208184932451696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495, 0.15208184932451696, 0.15036753665376454] ***
*** starting iteration: 6; err: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495, 0.15208184932451696, 0.15036753665376454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495, 0.15208184932451696, 0.15036753665376454, 0.14936955706123262] ***
*** finished computation of 7 references, err: [Inf, 0.22078446760587395, 0.17723296009004116, 0.16399698815867306, 0.15648408100381495, 0.15208184932451696, 0.15036753665376454, 0.14936955706123262] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 32, 0]]
** centroid: 1, normalized-entropy: 0.9113423759758414, [(1, 66), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 44, 21]]
** centroid: 2, normalized-entropy: 0.9076961653608385, [(2, 44), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 72, 0]]
** centroid: 3, normalized-entropy: 0.5349436990971067, [(1, 10), (2, 72)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 30, 0]]
** centroid: 4, normalized-entropy: 0.9509560484549724, [(1, 51), (2, 30)]
*** center 5: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2368164997883141] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868] ***
*** starting iteration: 2; err: [Inf, 0.2368164997883141, 0.1837542223848868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202] ***
*** starting iteration: 3; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771] ***
*** starting iteration: 4; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454] ***
*** starting iteration: 5; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438] ***
*** starting iteration: 6; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564] ***
*** starting iteration: 7; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564, 0.14905593822896482] ***
*** starting iteration: 8; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564, 0.14905593822896482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564, 0.14905593822896482, 0.14800296247564257] ***
*** starting iteration: 9; err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564, 0.14905593822896482, 0.14800296247564257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564, 0.14905593822896482, 0.14800296247564257, 0.1470815355964005] ***
*** finished computation of 7 references, err: [Inf, 0.2368164997883141, 0.1837542223848868, 0.17274562127888202, 0.1659271886944771, 0.15967117207916454, 0.15519997673295438, 0.15173661826271564, 0.14905593822896482, 0.14800296247564257, 0.1470815355964005] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 55, 20]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 55), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [50, 17, 0]]
** centroid: 3, normalized-entropy: 0.8171387756817725, [(1, 50), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 47, 0]]
** centroid: 4, normalized-entropy: 0.9844961311800012, [(1, 35), (2, 47)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 47, 0]]
** centroid: 5, normalized-entropy: 0.9974015885677396, [(1, 53), (2, 47)]
*** center 6: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3236297208555043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673] ***
*** starting iteration: 2; err: [Inf, 0.3236297208555043, 0.2175740085169673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446] ***
*** starting iteration: 3; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367] ***
*** starting iteration: 4; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516] ***
*** starting iteration: 5; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708] ***
*** starting iteration: 6; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162] ***
*** starting iteration: 7; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162, 0.14991742661595345] ***
*** starting iteration: 8; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162, 0.14991742661595345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162, 0.14991742661595345, 0.1488933148700744] ***
*** starting iteration: 9; err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162, 0.14991742661595345, 0.1488933148700744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162, 0.14991742661595345, 0.1488933148700744, 0.14800652009434997] ***
*** finished computation of 7 references, err: [Inf, 0.3236297208555043, 0.2175740085169673, 0.18521633867919446, 0.17432510652579367, 0.16318598614586516, 0.15402260148152708, 0.15119756857585162, 0.14991742661595345, 0.1488933148700744, 0.14800652009434997] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 61, 22]]
** centroid: 1, normalized-entropy: 0.8342867421739538, [(2, 61), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 36, 0]]
** centroid: 3, normalized-entropy: 0.9980008838722993, [(1, 40), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [11, 36, 0]]
** centroid: 4, normalized-entropy: 0.7849920887641585, [(1, 11), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 49, 0]]
** centroid: 5, normalized-entropy: 0.9900829509840566, [(1, 62), (2, 49)]
*** center 6: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21186556490324437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21186556490324437, 0.1568023282843642] ***
*** starting iteration: 2; err: [Inf, 0.21186556490324437, 0.1568023282843642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225] ***
*** starting iteration: 3; err: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225, 0.14991376106627285] ***
*** starting iteration: 4; err: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225, 0.14991376106627285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225, 0.14991376106627285, 0.14839989035204054] ***
*** starting iteration: 5; err: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225, 0.14991376106627285, 0.14839989035204054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225, 0.14991376106627285, 0.14839989035204054, 0.14748584260419012] ***
*** finished computation of 7 references, err: [Inf, 0.21186556490324437, 0.1568023282843642, 0.15162831378076225, 0.14991376106627285, 0.14839989035204054, 0.14748584260419012] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 14, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 56), (2, 14)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [77, 9, 0]]
** centroid: 5, normalized-entropy: 0.48356837509176975, [(1, 77), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 64, 0]]
** centroid: 6, normalized-entropy: 0.6550239908788728, [(1, 13), (2, 64)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 39, 13]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 39), (3, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21708990416303278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698] ***
*** starting iteration: 2; err: [Inf, 0.21708990416303278, 0.17329058035183698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947] ***
*** starting iteration: 3; err: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052] ***
*** starting iteration: 4; err: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184] ***
*** starting iteration: 5; err: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184, 0.1465620923899114] ***
*** starting iteration: 6; err: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184, 0.1465620923899114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184, 0.1465620923899114, 0.14549903400801123] ***
*** starting iteration: 7; err: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184, 0.1465620923899114, 0.14549903400801123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184, 0.1465620923899114, 0.14549903400801123, 0.14522219234891237] ***
*** finished computation of 7 references, err: [Inf, 0.21708990416303278, 0.17329058035183698, 0.15831629716604947, 0.15155344219692052, 0.1482807515282184, 0.1465620923899114, 0.14549903400801123, 0.14522219234891237] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 16, 0]]
** centroid: 3, normalized-entropy: 0.6795851972782937, [(1, 73), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 2, 0]]
** centroid: 4, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 47, 0]]
** centroid: 5, normalized-entropy: 0.7982441335646697, [(1, 15), (2, 47)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 49, 18]]
** centroid: 6, normalized-entropy: 0.8395304981054318, [(2, 49), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 59, 0]]
** centroid: 7, normalized-entropy: 0.2795055456366802, [(1, 3), (2, 59)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2853668782804161] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855] ***
*** starting iteration: 2; err: [Inf, 0.2853668782804161, 0.1925015811137855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105] ***
*** starting iteration: 3; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921] ***
*** starting iteration: 4; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637] ***
*** starting iteration: 5; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888] ***
*** starting iteration: 6; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536] ***
*** starting iteration: 7; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617] ***
*** starting iteration: 8; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617, 0.14766110467351973] ***
*** starting iteration: 9; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617, 0.14766110467351973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617, 0.14766110467351973, 0.1464363148882985] ***
*** starting iteration: 10; err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617, 0.14766110467351973, 0.1464363148882985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617, 0.14766110467351973, 0.1464363148882985, 0.14543471255060286] ***
*** finished computation of 7 references, err: [Inf, 0.2853668782804161, 0.1925015811137855, 0.16748327577114105, 0.1606256245262921, 0.15508926777541637, 0.15228675386495888, 0.1505917686894536, 0.14884410974569617, 0.14766110467351973, 0.1464363148882985, 0.14543471255060286] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 4, 0]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(1, 76), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 55, 23]]
** centroid: 3, normalized-entropy: 0.8749315876677922, [(2, 55), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 39, 0]]
** centroid: 4, normalized-entropy: 0.9966132830150962, [(1, 34), (2, 39)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 19, 0]]
** centroid: 7, normalized-entropy: 0.8218127305034848, [(1, 55), (2, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19015974328108132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19015974328108132, 0.15614229555660858] ***
*** starting iteration: 2; err: [Inf, 0.19015974328108132, 0.15614229555660858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19015974328108132, 0.15614229555660858, 0.15419968597078695] ***
*** starting iteration: 3; err: [Inf, 0.19015974328108132, 0.15614229555660858, 0.15419968597078695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19015974328108132, 0.15614229555660858, 0.15419968597078695, 0.15324890201352537] ***
*** finished computation of 7 references, err: [Inf, 0.19015974328108132, 0.15614229555660858, 0.15419968597078695, 0.15324890201352537] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [75, 46, 0]]
** centroid: 1, normalized-entropy: 0.9581586772265479, [(1, 75), (2, 46)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 28, 0]]
** centroid: 2, normalized-entropy: 0.9330252953592912, [(1, 15), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [69, 6, 0]]
** centroid: 5, normalized-entropy: 0.4021791902022729, [(1, 69), (2, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 49, 20]]
** centroid: 7, normalized-entropy: 0.868533960265235, [(2, 49), (3, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19586771668493747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114] ***
*** starting iteration: 2; err: [Inf, 0.19586771668493747, 0.16819298618473114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438] ***
*** starting iteration: 3; err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249] ***
*** starting iteration: 4; err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858] ***
*** starting iteration: 5; err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558] ***
*** starting iteration: 6; err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558, 0.14656752677541227] ***
*** starting iteration: 7; err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558, 0.14656752677541227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558, 0.14656752677541227, 0.14547192548122256] ***
*** starting iteration: 8; err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558, 0.14656752677541227, 0.14547192548122256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558, 0.14656752677541227, 0.14547192548122256, 0.14458460748940707] ***
*** finished computation of 7 references, err: [Inf, 0.19586771668493747, 0.16819298618473114, 0.15319539845455438, 0.150135039428249, 0.14868362324684858, 0.14763916948344558, 0.14656752677541227, 0.14547192548122256, 0.14458460748940707] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 2, 0]]
** centroid: 1, normalized-entropy: 0.22536363912739493, [(1, 53), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 31, 0]]
** centroid: 2, normalized-entropy: 0.8967550157663144, [(1, 68), (2, 31)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 67, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 20, 0]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(1, 48), (2, 20)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 63, 17]]
** centroid: 5, normalized-entropy: 0.7462343013654809, [(2, 63), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19802834898419677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837] ***
*** starting iteration: 2; err: [Inf, 0.19802834898419677, 0.16512443643435837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326] ***
*** starting iteration: 3; err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756] ***
*** starting iteration: 4; err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617] ***
*** starting iteration: 5; err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757] ***
*** starting iteration: 6; err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757, 0.14847003713063894] ***
*** starting iteration: 7; err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757, 0.14847003713063894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757, 0.14847003713063894, 0.14627442952245473] ***
*** starting iteration: 8; err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757, 0.14847003713063894, 0.14627442952245473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757, 0.14847003713063894, 0.14627442952245473, 0.14569086739420892] ***
*** finished computation of 7 references, err: [Inf, 0.19802834898419677, 0.16512443643435837, 0.1599560250295326, 0.15735046563029756, 0.1538534715026617, 0.15084642990119757, 0.14847003713063894, 0.14627442952245473, 0.14569086739420892] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 36, 0]]
** centroid: 1, normalized-entropy: 0.9486131982385807, [(1, 62), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 52, 0]]
** centroid: 2, normalized-entropy: 0.7455178428108284, [(1, 14), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 32, 0]]
** centroid: 3, normalized-entropy: 0.9522656254366643, [(1, 54), (2, 32)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 54, 17]]
** centroid: 4, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1827798889577389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1827798889577389, 0.15697736666165293] ***
*** starting iteration: 2; err: [Inf, 0.1827798889577389, 0.15697736666165293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713] ***
*** starting iteration: 3; err: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338] ***
*** starting iteration: 4; err: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338, 0.14782143407315015] ***
*** starting iteration: 5; err: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338, 0.14782143407315015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338, 0.14782143407315015, 0.14655549139343202] ***
*** starting iteration: 6; err: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338, 0.14782143407315015, 0.14655549139343202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338, 0.14782143407315015, 0.14655549139343202, 0.1461520879995078] ***
*** finished computation of 7 references, err: [Inf, 0.1827798889577389, 0.15697736666165293, 0.15250869132112713, 0.1498087089555338, 0.14782143407315015, 0.14655549139343202, 0.1461520879995078] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 25, 0]]
** centroid: 1, normalized-entropy: 0.9315627684809641, [(1, 47), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 39, 0]]
** centroid: 2, normalized-entropy: 0.9889525767600615, [(1, 50), (2, 39)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 20]]
** centroid: 4, normalized-entropy: 0.7597659876428757, [(2, 71), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [12, 49, 0]]
** centroid: 6, normalized-entropy: 0.7153220528038851, [(1, 12), (2, 49)]
*** center 7: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2465388917857781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2465388917857781, 0.17498457538243384] ***
*** starting iteration: 2; err: [Inf, 0.2465388917857781, 0.17498457538243384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914] ***
*** starting iteration: 3; err: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263] ***
*** starting iteration: 4; err: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263, 0.1546567460037768] ***
*** starting iteration: 5; err: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263, 0.1546567460037768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263, 0.1546567460037768, 0.15343740658368915] ***
*** starting iteration: 6; err: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263, 0.1546567460037768, 0.15343740658368915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263, 0.1546567460037768, 0.15343740658368915, 0.15246136926393955] ***
*** finished computation of 7 references, err: [Inf, 0.2465388917857781, 0.17498457538243384, 0.16219585296697914, 0.1576844300525263, 0.1546567460037768, 0.15343740658368915, 0.15246136926393955] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 30, 0]]
** centroid: 1, normalized-entropy: 0.8776296673746861, [(1, 71), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 50, 8]]
** centroid: 2, normalized-entropy: 0.5787946246321198, [(2, 50), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 56, 7]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 56), (3, 7)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [41, 23, 0]]
** centroid: 6, normalized-entropy: 0.9421631690835511, [(1, 41), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [36, 22, 0]]
** centroid: 7, normalized-entropy: 0.9575534837147484, [(1, 36), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2553394637852907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872] ***
*** starting iteration: 2; err: [Inf, 0.2553394637852907, 0.20061942674405872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544] ***
*** starting iteration: 3; err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248] ***
*** starting iteration: 4; err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078] ***
*** starting iteration: 5; err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872] ***
*** starting iteration: 6; err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872, 0.14717419015057384] ***
*** starting iteration: 7; err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872, 0.14717419015057384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872, 0.14717419015057384, 0.14607078840304166] ***
*** starting iteration: 8; err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872, 0.14717419015057384, 0.14607078840304166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872, 0.14717419015057384, 0.14607078840304166, 0.14577774197608231] ***
*** finished computation of 7 references, err: [Inf, 0.2553394637852907, 0.20061942674405872, 0.1816929716458544, 0.16599284148216248, 0.15523188320361078, 0.149702196681872, 0.14717419015057384, 0.14607078840304166, 0.14577774197608231] ***
*** center 1: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 36, 0]]
** centroid: 2, normalized-entropy: 0.9957274520849256, [(1, 42), (2, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 12, 0]]
** centroid: 4, normalized-entropy: 0.5830194167347007, [(1, 74), (2, 12)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 42, 16]]
** centroid: 6, normalized-entropy: 0.8497511372532974, [(2, 42), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [16, 34, 0]]
** centroid: 7, normalized-entropy: 0.9043814577244941, [(1, 16), (2, 34)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2452607497535646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746] ***
*** starting iteration: 2; err: [Inf, 0.2452607497535646, 0.19300587419606746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184] ***
*** starting iteration: 3; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077] ***
*** starting iteration: 4; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465] ***
*** starting iteration: 5; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478] ***
*** starting iteration: 6; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437] ***
*** starting iteration: 7; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238] ***
*** starting iteration: 8; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238, 0.1488821350261569] ***
*** starting iteration: 9; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238, 0.1488821350261569] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238, 0.1488821350261569, 0.14762335469201207] ***
*** starting iteration: 10; err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238, 0.1488821350261569, 0.14762335469201207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238, 0.1488821350261569, 0.14762335469201207, 0.14678922371193767] ***
*** finished computation of 7 references, err: [Inf, 0.2452607497535646, 0.19300587419606746, 0.16519243638031184, 0.15664698482491077, 0.15370260105561465, 0.15238360553700478, 0.15102160662971437, 0.1499860475566238, 0.1488821350261569, 0.14762335469201207, 0.14678922371193767] ***
*** center 1: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [7, 73, 0]]
** centroid: 3, normalized-entropy: 0.4280696292293062, [(1, 7), (2, 73)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 14, 0]]
** centroid: 4, normalized-entropy: 0.6546640527143932, [(1, 69), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 56, 0]]
** centroid: 5, normalized-entropy: 0.4090731390438265, [(1, 5), (2, 56)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 49, 11]]
** centroid: 6, normalized-entropy: 0.6873150928309273, [(2, 49), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1860760035086423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084] ***
*** starting iteration: 2; err: [Inf, 0.1860760035086423, 0.16321070716530084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048] ***
*** starting iteration: 3; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112] ***
*** starting iteration: 4; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288] ***
*** starting iteration: 5; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265] ***
*** starting iteration: 6; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253] ***
*** starting iteration: 7; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253, 0.15020062046125532] ***
*** starting iteration: 8; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253, 0.15020062046125532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253, 0.15020062046125532, 0.14895302158221602] ***
*** starting iteration: 9; err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253, 0.15020062046125532, 0.14895302158221602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253, 0.15020062046125532, 0.14895302158221602, 0.14811764317564666] ***
*** finished computation of 7 references, err: [Inf, 0.1860760035086423, 0.16321070716530084, 0.15980125673674048, 0.15751836022362112, 0.15538304666802288, 0.15412306286470265, 0.15192727490328253, 0.15020062046125532, 0.14895302158221602, 0.14811764317564666] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 18, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 36), (2, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [83, 26, 0]]
** centroid: 2, normalized-entropy: 0.7925906965800167, [(1, 83), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 23, 0]]
** centroid: 3, normalized-entropy: 0.937456170782005, [(1, 42), (2, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 57, 12]]
** centroid: 6, normalized-entropy: 0.6665783579949205, [(2, 57), (3, 12)]
*** center 7: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29454210006352516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29454210006352516, 0.18384044683724643] ***
*** starting iteration: 2; err: [Inf, 0.29454210006352516, 0.18384044683724643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814] ***
*** starting iteration: 3; err: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256] ***
*** starting iteration: 4; err: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256, 0.14866490300744772] ***
*** starting iteration: 5; err: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256, 0.14866490300744772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256, 0.14866490300744772, 0.14656759544461967] ***
*** starting iteration: 6; err: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256, 0.14866490300744772, 0.14656759544461967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256, 0.14866490300744772, 0.14656759544461967, 0.14563610318116843] ***
*** finished computation of 7 references, err: [Inf, 0.29454210006352516, 0.18384044683724643, 0.15896477212011814, 0.15237976197805256, 0.14866490300744772, 0.14656759544461967, 0.14563610318116843] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 37, 0]]
** centroid: 1, normalized-entropy: 0.9976432959863935, [(1, 33), (2, 37)]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 18, 0]]
** centroid: 4, normalized-entropy: 0.7175106531195438, [(1, 73), (2, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 79, 19]]
** centroid: 6, normalized-entropy: 0.7095128863456239, [(2, 79), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 37, 0]]
** centroid: 7, normalized-entropy: 0.9931231770192241, [(1, 45), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23261702828481792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23261702828481792, 0.15666690871119499] ***
*** starting iteration: 2; err: [Inf, 0.23261702828481792, 0.15666690871119499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23261702828481792, 0.15666690871119499, 0.1521610415633768] ***
*** starting iteration: 3; err: [Inf, 0.23261702828481792, 0.15666690871119499, 0.1521610415633768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23261702828481792, 0.15666690871119499, 0.1521610415633768, 0.1510961617231369] ***
*** starting iteration: 4; err: [Inf, 0.23261702828481792, 0.15666690871119499, 0.1521610415633768, 0.1510961617231369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23261702828481792, 0.15666690871119499, 0.1521610415633768, 0.1510961617231369, 0.15053037717938422] ***
*** finished computation of 7 references, err: [Inf, 0.23261702828481792, 0.15666690871119499, 0.1521610415633768, 0.1510961617231369, 0.15053037717938422] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 21, 0]]
** centroid: 1, normalized-entropy: 0.9023932827949788, [(1, 45), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 43, 0]]
** centroid: 2, normalized-entropy: 0.9996273710574612, [(1, 45), (2, 43)]
*** center 3: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 94, 16]]
** centroid: 6, normalized-entropy: 0.5983474220910422, [(2, 94), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 35, 0]]
** centroid: 7, normalized-entropy: 0.9866554896538049, [(1, 46), (2, 35)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20442977287247777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442977287247777, 0.16295525907352568] ***
*** starting iteration: 2; err: [Inf, 0.20442977287247777, 0.16295525907352568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049] ***
*** starting iteration: 3; err: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049, 0.15251671617850662] ***
*** starting iteration: 4; err: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049, 0.15251671617850662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049, 0.15251671617850662, 0.15084858144633473] ***
*** starting iteration: 5; err: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049, 0.15251671617850662, 0.15084858144633473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049, 0.15251671617850662, 0.15084858144633473, 0.150295838939026] ***
*** finished computation of 7 references, err: [Inf, 0.20442977287247777, 0.16295525907352568, 0.1557008833643049, 0.15251671617850662, 0.15084858144633473, 0.150295838939026] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 60, 0]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(1, 9), (2, 60)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 37, 16]]
** centroid: 2, normalized-entropy: 0.8835850861052531, [(2, 37), (3, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [9, 59, 0]]
** centroid: 4, normalized-entropy: 0.5638560041131417, [(1, 9), (2, 59)]
*** center 5: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [76, 2, 0]]
** centroid: 6, normalized-entropy: 0.17203694935311387, [(1, 76), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [70, 17, 0]]
** centroid: 7, normalized-entropy: 0.7126368350739763, [(1, 70), (2, 17)]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 360,3 => 34,1 => 606), Dict(2 => 363,3 => 41,1 => 596))
[ Info: ===== scores for single classifier: {"micro_f1":0.925,"precision":0.925,"recall":0.925,"macro_recall":0.9447710786942025,"macro_f1":0.8734366023830971,"accuracy":0.925,"class_f1":{"2":0.8968363136176066,"3":0.766355140186916,"1":0.9571183533447685},"class_precision":{"2":0.8956043956043956,"3":0.6212121212121212,"1":0.9789473684210527},"class_recall":{"2":0.8980716253443526,"3":1.0,"1":0.9362416107382551}}
[ Info: ===== scores for 1: {"micro_f1":0.966,"precision":0.966,"recall":0.966,"macro_recall":0.9410084340180026,"macro_f1":0.9442760796496978,"accuracy":0.966,"class_f1":{"2":0.9518413597733711,"3":0.9024390243902439,"1":0.9785478547854786},"class_precision":{"2":0.9795918367346939,"3":0.9024390243902439,"1":0.9626623376623377},"class_recall":{"2":0.9256198347107438,"3":0.9024390243902439,"1":0.9949664429530202}}
[ Info: ===== scores for 5: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.9681362126450596,"macro_f1":0.9434307451481668,"accuracy":0.961,"class_f1":{"2":0.9449929478138223,"3":0.9111111111111111,"1":0.974188176519567},"class_precision":{"2":0.9682080924855492,"3":0.8367346938775511,"1":0.9669421487603306},"class_recall":{"2":0.9228650137741047,"3":1.0,"1":0.9815436241610739}}
[ Info: ===== scores for 7: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9697724653490364,"macro_f1":0.9442687368518571,"accuracy":0.962,"class_f1":{"2":0.9467787114845938,"3":0.9111111111111111,"1":0.9749163879598663},"class_precision":{"2":0.9629629629629629,"3":0.8367346938775511,"1":0.9716666666666667},"class_recall":{"2":0.931129476584022,"3":1.0,"1":0.9781879194630873}}
[ Info: ===== scores for 9: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9706907389945828,"macro_f1":0.9419666876953309,"accuracy":0.963,"class_f1":{"2":0.9482517482517482,"3":0.9010989010989011,"1":0.9765494137353433},"class_precision":{"2":0.9630681818181818,"3":0.82,"1":0.9749163879598662},"class_recall":{"2":0.9338842975206612,"3":1.0,"1":0.9781879194630873}}
[ Info: ===== scores for 11: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.974564128163884,"macro_f1":0.9457090118068732,"accuracy":0.968,"class_f1":{"2":0.9553072625698323,"3":0.9010989010989011,"1":0.9807208717518859},"class_precision":{"2":0.9688385269121813,"3":0.82,"1":0.9798994974874372},"class_recall":{"2":0.9421487603305785,"3":1.0,"1":0.9815436241610739}}
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.968,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.935992163183044,"macro_f1":0.9450628767021357,"accuracy":0.968,"class_f1":{"2":0.955056179775281,"3":0.9,"1":0.9801324503311258},"class_precision":{"2":0.9742120343839542,"3":0.9230769230769231,"1":0.9673202614379085},"class_recall":{"2":0.9366391184573003,"3":0.8780487804878049,"1":0.9932885906040269}}
Test Summary: | Pass  Total
AKNC          |    8      8
[464, 2, 1, 1, 7, 1, 3, 4, 4, 3, 1, 1, 3, 1, 2, 8, 6, 4, 3, 5, 1, 13, 8, 2, 8, 63, 5, 15, 1, 3, 7, 8, 8, 19, 20, 3, 2, 31, 7, 6, 13, 1, 15, 20, 139, 5, 58, 11, 15, 3, 12, 2, 2, 6, 43, 7, 4, 3, 8, 15, 2, 12, 24, 21, 33, 8, 9, 11, 3, 42, 2, 1, 16, 2, 13, 7, 19, 14, 28, 19, 7, 7, 11, 4, 14, 38, 64, 8, 57, 1, 54, 68, 1, 8, 3, 4, 3, 7, 39, 13, 59, 15, 8, 35, 19, 3, 8, 23, 131, 102, 16, 24, 3, 6, 11, 9, 14, 19, 8, 6, 20, 98, 289, 38, 39, 27, 14, 4, 80, 41, 37, 14, 34, 27, 60, 22, 16, 149, 32, 27, 13, 4, 12, 7, 15, 9, 8, 96, 11, 41, 40, 9, 28, 18, 9, 43, 7, 12, 14, 3, 8, 13, 12, 1, 6, 4, 81, 8, 142, 6, 407, 63, 15, 83, 298, 1, 41, 14, 37, 9, 479, 18, 5, 30, 34, 103, 10, 5, 35, 18, 50, 45, 165, 7, 4, 64, 40, 8, 14, 8, 3, 33, 6, 22, 3, 39, 1, 28, 115, 67, 36, 136, 150, 89, 52, 31, 19, 28, 21, 36, 3, 55, 2, 11, 50, 4, 14, 22, 5, 7, 53, 72, 33, 17, 16, 47, 6, 51, 26, 3, 14, 23, 22, 14, 12, 10, 3, 16, 13, 42, 12, 3, 3, 11, 47, 74, 6, 48, 13, 12, 75, 19, 9, 23, 16, 9, 27, 6, 34, 9, 5, 73, 2, 6, 16, 15, 12, 76, 2, 34, 2, 18, 25, 5, 20, 75, 69, 31, 14, 12, 156, 44, 613, 23, 44, 7, 36, 55, 44, 219]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6390000000000001, speedup = 0.2896821343864546, eval_ratio = 0.070438)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3992838541666667,"recall":0.39409722222222227,"f1":null,"seconds":0.00017306581139564514,"exhaustive_search_seconds":0.0003648512065410614,"evaluations":477.46875,"distances_sum":1636.8987951264808}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5651041666666666,"recall":0.5651041666666666,"f1":null,"seconds":0.00028725527226924896,"exhaustive_search_seconds":0.0003648512065410614,"evaluations":629.1015625,"distances_sum":1592.7092714784048}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.692708333333333,"recall":0.692708333333333,"f1":0.692708333333333,"seconds":0.000402107834815979,"exhaustive_search_seconds":0.0003648512065410614,"evaluations":777.71875,"distances_sum":1535.3077550607484}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7560763888888885,"recall":0.7560763888888885,"f1":0.7560763888888885,"seconds":0.0004908200353384018,"exhaustive_search_seconds":0.0003648512065410614,"evaluations":896.34375,"distances_sum":1510.1653431696707}
KCenters.DeloneInvIndex> reached performance {"precision":0.8064236111111106,"recall":0.8064236111111106,"f1":0.8064236111111106,"seconds":0.0007962919771671295,"exhaustive_search_seconds":0.0003648512065410614,"evaluations":1007.125,"distances_sum":1496.0726674494003}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7810000000000004, speedup = 0.6938560089881124, eval_ratio = 0.095354)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
