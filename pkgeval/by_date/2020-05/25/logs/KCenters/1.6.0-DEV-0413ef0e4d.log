Julia Version 1.6.0-DEV.85
Commit 0413ef0e4d (2020-05-24 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ──────────────────── v0.4.3
  Installed Compat ────────────────────── v3.10.0
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed JSON ──────────────────────── v0.21.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed SimilaritySearch ──────────── v0.3.19
  Installed MappedArrays ──────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed DataFrames ────────────────── v0.20.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataValueInterfaces ───────── v1.0.0
  Installed OrderedCollections ────────── v1.2.0
  Installed Tables ────────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.17
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_QxJdfB/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_QxJdfB/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9364293802777927
[ Info: 0.8321307849884033
[ Info: 0.5531853482623895
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3276126202692588
mean(cdnet.distances) = 0.39147188285986584
mean(crand.distances) = 0.34741854334870975
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":4.75,"distances_sum":564.3379357495396}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.6015625,"distances_sum":1140.2382136391548}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8427895021645028,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.03125,"distances_sum":2157.1980097765545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8427895021645028,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.03125,"distances_sum":2157.1980097765545}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.920813561438562,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.625,"distances_sum":2585.3219158734446}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574290293040298,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2806.440579794053}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9369365009990013,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7421875,"distances_sum":2673.7608112830576}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9574290293040298,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2806.440579794053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628376831501834,"seconds":7.666647434234619e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.796875,"distances_sum":2881.8713964949293}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608859890109895,"seconds":7.3015689849853516e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8203125,"distances_sum":2835.908609694956}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9628376831501834,"seconds":7.666647434234619e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.796875,"distances_sum":2881.8713964949293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9628376831501834,"seconds":7.666647434234619e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.796875,"distances_sum":2881.8713964949293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.439453125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.439453125,"f1":null,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":6.2265625,"distances_sum":968.5311825255052}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.796875,"f1":0.8812187812187822,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.3984375,"distances_sum":1975.2932551847978}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7001953125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7001953125,"f1":0.8131743256743265,"seconds":6.774440407752991e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":7.859375,"distances_sum":1654.6483390407952}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.796875,"f1":0.8812187812187822,"seconds":6.685033440589905e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.3984375,"distances_sum":1975.2932551847978}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9002237345987354,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.5625,"distances_sum":2103.7221604340302}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9398929195804202,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.6796875,"distances_sum":2350.61701952326}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9294184981684986,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.6171875,"distances_sum":2311.4693135860243}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9398929195804202,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.6796875,"distances_sum":2350.61701952326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95796130952381,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.8671875,"distances_sum":2489.28299816085}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.9609375,"distances_sum":2624.4538598051317}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959884386446887,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.859375,"distances_sum":2508.2046874483135}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.9609375,"distances_sum":2624.4538598051317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.7881393432617188e-6,"evaluations":8.9609375,"distances_sum":2624.4538598051317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8656744297369307,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.2265625,"distances_sum":1849.5218765691513}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5986328125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5986328125,"f1":0.7354130244755251,"seconds":4.284083843231201e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.5625,"distances_sum":1345.4880508771832}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8656744297369307,"seconds":5.2694231271743774e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.2265625,"distances_sum":1849.5218765691513}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9582074175824179,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.921875,"distances_sum":2432.64454463784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534455128205134,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.8984375,"distances_sum":2414.547517394965}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9298451548451555,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.7421875,"distances_sum":2245.860900070165}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8750515109890119,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.296875,"distances_sum":1944.3777865029529}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9379006410256417,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.7421875,"distances_sum":2289.806924841519}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8823176823176833,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.390625,"distances_sum":1942.8607082070607}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9582074175824179,"seconds":5.956739187240601e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.921875,"distances_sum":2432.64454463784}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.968641254578755,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9296875,"distances_sum":2521.0806037445673}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586538461538467,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.890625,"distances_sum":2411.3851803825564}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549452,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9609375,"distances_sum":2611.4695387589713}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753376831501834,"seconds":6.899237632751465e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.96875,"distances_sum":2571.529931640316}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9798191391941398,"seconds":7.070600986480713e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9609375,"distances_sum":2600.651036748043}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.974479166666667,"seconds":6.726011633872986e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9296875,"distances_sum":2564.3705517345625}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549452,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9609375,"distances_sum":2611.4695387589713}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809924450549452,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.9609375,"distances_sum":2611.4695387589713}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8752617174492183,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.4609375,"distances_sum":1931.5344910800263}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.794921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.794921875,"f1":0.8752617174492183,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.4609375,"distances_sum":1931.5344910800263}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9568369130869134,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8203125,"distances_sum":2430.540034792975}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9568369130869134,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8203125,"distances_sum":2430.540034792975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9632841117216123,"seconds":1.0136514902114868e-5,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8203125,"distances_sum":2496.192203504991}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9776785714285717,"seconds":1.1224299669265747e-5,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9375,"distances_sum":2566.089507433114}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776785714285717,"seconds":1.1224299669265747e-5,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9375,"distances_sum":2566.089507433114}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9776785714285717,"seconds":1.1224299669265747e-5,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.9375,"distances_sum":2566.089507433114}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8130638458763466,"seconds":8.927658200263977e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":7.90625,"distances_sum":1703.5019362677363}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8130638458763466,"seconds":8.927658200263977e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":7.90625,"distances_sum":1703.5019362677363}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9505494505494511,"seconds":9.743496775627136e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.734375,"distances_sum":2538.6251955460702}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506753663003669,"seconds":6.856396794319153e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.8046875,"distances_sum":2492.5203684767607}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9619104853479857,"seconds":6.843358278274536e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.8828125,"distances_sum":2531.585984600309}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9619104853479857,"seconds":6.843358278274536e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.8828125,"distances_sum":2531.585984600309}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713198260073265,"seconds":6.755813956260681e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.9375,"distances_sum":2609.272130780109}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799851190476194,"seconds":7.29784369468689e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.921875,"distances_sum":2689.670043020036}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799851190476194,"seconds":7.29784369468689e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.921875,"distances_sum":2689.670043020036}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799851190476194,"seconds":7.29784369468689e-6,"exhaustive_search_seconds":2.7026981115341187e-6,"evaluations":8.921875,"distances_sum":2689.670043020036}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3701171875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3701171875,"f1":null,"seconds":4.036352038383484e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":5.8125,"distances_sum":877.6297091962964}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8088919760794769,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.03125,"distances_sum":1654.0240769360862}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8088919760794769,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.03125,"distances_sum":1654.0240769360862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9487439643689649,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.7421875,"distances_sum":2480.0542011897683}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8520519411144419,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.421875,"distances_sum":1860.6612857437506}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8635562354312363,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.4296875,"distances_sum":1887.2758109495933}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9487439643689649,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.7421875,"distances_sum":2480.0542011897683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608287545787552,"seconds":6.763264536857605e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.859375,"distances_sum":2534.0778684999277}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9594150641025646,"seconds":9.078532457351685e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.84375,"distances_sum":2528.58813522075}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628777472527477,"seconds":8.275732398033142e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.8359375,"distances_sum":2557.9223576843797}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9584509240759247,"seconds":8.542090654373169e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.828125,"distances_sum":2530.579729641365}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628777472527477,"seconds":8.275732398033142e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.8359375,"distances_sum":2557.9223576843797}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9628777472527477,"seconds":8.275732398033142e-6,"exhaustive_search_seconds":1.695007085800171e-6,"evaluations":8.8359375,"distances_sum":2557.9223576843797}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7832091519591527,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.625,"distances_sum":1571.5558022624482}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":4.319474101066589e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":6.4609375,"distances_sum":993.1649396341606}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7832091519591527,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":7.625,"distances_sum":1571.5558022624482}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.903660402097903,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.1875,"distances_sum":2157.1987223355704}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8359375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8359375,"f1":0.903660402097903,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.1875,"distances_sum":2157.1987223355704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707245879120883,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.9296875,"distances_sum":2610.376126715271}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707245879120883,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.9296875,"distances_sum":2610.376126715271}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707245879120883,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.6801059246063232e-6,"evaluations":8.9296875,"distances_sum":2610.376126715271}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":2.209097146987915e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.875,"distances_sum":499.05215999278096}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1962890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1962890625,"f1":null,"seconds":2.0097941160202026e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":5.7421875,"distances_sum":490.3645866006314}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8756191724941732,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2421875,"distances_sum":1933.6434392847436}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8756191724941732,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2421875,"distances_sum":1933.6434392847436}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494677197802203,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7421875,"distances_sum":2452.449328552751}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9437614468864474,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.703125,"distances_sum":2436.7814819862892}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8758741258741267,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.1640625,"distances_sum":1934.6044981077775}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9494677197802203,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7421875,"distances_sum":2452.449328552751}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476193,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.984375,"distances_sum":2608.6575398277078}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9674336080586086,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8515625,"distances_sum":2552.616118258027}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.980505952380953,"seconds":3.637745976448059e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9140625,"distances_sum":2628.2252327281994}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9517170329670337,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6953125,"distances_sum":2480.7038588443106}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9652358058608065,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.828125,"distances_sum":2547.521393397051}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476193,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.984375,"distances_sum":2608.6575398277078}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9815476190476193,"seconds":4.075467586517334e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.984375,"distances_sum":2608.6575398277078}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.4052734375,"f1":0.5522803585303587,"seconds":2.29664146900177e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":6.2265625,"distances_sum":882.484757517941}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":2.037733793258667e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":6.5390625,"distances_sum":621.2842713415857}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4052734375,"state":{"ssize":3,"bsize":2},"perf":{"precision":1.0,"recall":0.4052734375,"f1":0.5522803585303587,"seconds":2.29664146900177e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":6.2265625,"distances_sum":882.484757517941}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.591796875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.591796875,"f1":null,"seconds":3.037974238395691e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.375,"distances_sum":1398.7266682699787}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.591796875,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.591796875,"f1":null,"seconds":3.037974238395691e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":7.375,"distances_sum":1398.7266682699787}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.924771062271063,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.734375,"distances_sum":2358.605043722906}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.924771062271063,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.734375,"distances_sum":2358.605043722906}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.924771062271063,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":9.685754776000977e-7,"evaluations":8.734375,"distances_sum":2358.605043722906}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8668565809190816,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7734375,"distances_sum":2000.1863153743307}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4189453125,"f1":null,"seconds":3.824010491371155e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.1875,"distances_sum":949.368657612203}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8668565809190816,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.7734375,"distances_sum":2000.1863153743307}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.942902930402931,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2498.2865123866295}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.942902930402931,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2498.2865123866295}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.942902930402931,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2498.2865123866295}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.900390625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.942902930402931,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2498.2865123866295}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.1640625,"distances_sum":531.7870967116078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.560546875,"f1":0.7012532606282611,"seconds":4.0996819734573364e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.9765625,"distances_sum":1321.0166000175132}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8635879745254753,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.78125,"distances_sum":1941.8735896697349}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8717064185814194,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7734375,"distances_sum":1993.6120439408635}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8717064185814194,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.7734375,"distances_sum":1993.6120439408635}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9432177197802204,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6953125,"distances_sum":2504.9634932130234}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9481856684981691,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.890625,"distances_sum":2483.237654194219}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9487293956043962,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.75,"distances_sum":2556.2350065723595}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9521691849816852,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7890625,"distances_sum":2577.0602303975024}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.90792748917749,"seconds":4.7441571950912476e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5,"distances_sum":2237.8003517591196}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9295194388944394,"seconds":3.382563591003418e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.640625,"distances_sum":2387.3602583313764}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9521691849816852,"seconds":4.837289452552795e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7890625,"distances_sum":2577.0602303975024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586881868131872,"seconds":3.730878233909607e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2575.243511636086}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087917,"seconds":3.632158041000366e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2567.8371941159817}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2698.7128445834483}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9742559523809526,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9453125,"distances_sum":2675.1133997744378}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2698.7128445834483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9609375,"distances_sum":2698.7128445834483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4072265625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.015625,"distances_sum":947.0315373278595}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4072265625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4072265625,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.015625,"distances_sum":947.0315373278595}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9106398809523816,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.234375,"distances_sum":2384.0001538680376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8621716824841833,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.953125,"distances_sum":2081.1387189636193}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.7457793951034546e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.0625,"distances_sum":989.8624853323519}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8466796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8466796875,"f1":0.9106398809523816,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.234375,"distances_sum":2384.0001538680376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9177801365301371,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6015625,"distances_sum":2452.68317572092}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9316163003663008,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5859375,"distances_sum":2574.420890987909}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.913988095238096,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.296875,"distances_sum":2366.2310818214614}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9316163003663008,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5859375,"distances_sum":2574.420890987909}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9316163003663008,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5859375,"distances_sum":2574.420890987909}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":6.3203125,"distances_sum":1013.5864875385282}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7136594308469315,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.453125,"distances_sum":1412.4042366926649}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7136594308469315,"seconds":4.455447196960449e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.453125,"distances_sum":1412.4042366926649}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9277815934065942,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.640625,"distances_sum":2502.43367444935}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8639568764568774,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.7890625,"distances_sum":2007.6094244899239}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.805331474081475,"seconds":4.541128873825073e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.546875,"distances_sum":1717.3971856577896}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7177734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7177734375,"f1":0.8236336580086588,"seconds":5.133450031280518e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":7.640625,"distances_sum":1857.8551621259223}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9277815934065942,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.640625,"distances_sum":2502.43367444935}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8359375,"distances_sum":2786.123573344361}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9442250457875463,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.703125,"distances_sum":2635.9388800710835}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960531135531136,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.875,"distances_sum":2705.1574135794}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9466804029304035,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.75,"distances_sum":2648.99769940572}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8359375,"distances_sum":2786.123573344361}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662431318681324,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.5012919902801514e-6,"evaluations":8.8359375,"distances_sum":2786.123573344361}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8336829836829845,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1875,"distances_sum":1411.9389916201833}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7795288045288054,"seconds":4.3548643589019775e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.8671875,"distances_sum":1194.5149259505622}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6815125846375851,"seconds":3.8817524909973145e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.140625,"distances_sum":946.0333990081454}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7265625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7265625,"f1":0.8336829836829845,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.1875,"distances_sum":1411.9389916201833}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.902967865467866,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":1763.0802756201283}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9010905760905771,"seconds":5.168840289115906e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6875,"distances_sum":1739.435242317053}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.879532967032968,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5234375,"distances_sum":1655.6710544359448}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9418612637362643,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":1990.9896469945927}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9276327838827846,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":1927.564034978975}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.854567828005329,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.2890625,"distances_sum":1515.2339783465945}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9418612637362643,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8671875,"distances_sum":1990.9896469945927}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615384615384619,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9609375,"distances_sum":2109.5174199157586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9720810439560443,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2185.715233497879}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9720810439560443,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2185.715233497879}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9720810439560443,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9296875,"distances_sum":2185.715233497879}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6819054209679214,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.7109375,"distances_sum":1052.9121101852859}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3876953125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3876953125,"f1":null,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.3671875,"distances_sum":746.5515758587132}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.533203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.533203125,"f1":0.6819054209679214,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.7109375,"distances_sum":1052.9121101852859}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9377632783882792,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.921875,"distances_sum":2093.597414656439}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9377632783882792,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.921875,"distances_sum":2093.597414656439}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.968515338827839,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2298.172785425762}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548420329670334,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9609375,"distances_sum":2196.981807331977}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.968515338827839,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2298.172785425762}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.968515338827839,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2298.172785425762}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.328125,"distances_sum":482.5839127429981}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.248046875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.248046875,"f1":null,"seconds":3.3713877201080322e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.328125,"distances_sum":482.5839127429981}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8459273365523372,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.046875,"distances_sum":1605.4452300032037}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8459273365523372,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.046875,"distances_sum":1605.4452300032037}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":11,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9061870421245429,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.734375,"distances_sum":1898.2707144263577}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616300366300371,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9140625,"distances_sum":2254.1222387451603}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9344983141858149,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8828125,"distances_sum":2095.5074077700415}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523179945054949,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8984375,"distances_sum":2181.828786196243}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616300366300371,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9140625,"distances_sum":2254.1222387451603}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616300366300371,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9140625,"distances_sum":2254.1222387451603}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.1328125,"distances_sum":1180.4381328220966}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.560546875,"f1":null,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.1328125,"distances_sum":1180.4381328220966}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.948700778388279,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2229.747753767668}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.948700778388279,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2229.747753767668}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.948700778388279,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2229.747753767668}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.948700778388279,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9375,"distances_sum":2229.747753767668}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.248046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.248046875,"f1":null,"seconds":3.034248948097229e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.046875,"distances_sum":520.7827293928354}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8106809856809865,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.9453125,"distances_sum":1540.3494722054904}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8106809856809865,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.9453125,"distances_sum":1540.3494722054904}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9454899267399274,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8671875,"distances_sum":2279.3357125505195}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9454899267399274,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8671875,"distances_sum":2279.3357125505195}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977529761904762,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9765625,"distances_sum":2471.1733114575463}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977529761904762,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9765625,"distances_sum":2471.1733114575463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977529761904762,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9765625,"distances_sum":2471.1733114575463}}, n: 9
mean(cfft.distances) = 0.3347060217671201
mean(cdnet.distances) = 0.38150584256775993
mean(crand.distances) = 0.34423448249101773
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8666666666666666
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8488888888888889
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9311111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9111111111111111
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9133333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8555555555555555
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8799999999999999
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8688888888888888
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8999999999999999
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9199999999999999
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8511111111111113
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8488888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5285758327444394] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 12]]
** centroid: 9, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 13, 5]]
** centroid: 12, normalized-entropy: 0.8524051786494784, [(2, 13), (3, 5)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.22333636510783006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22333636510783006, 0.17793466264728802] ***
*** starting iteration: 2; err: [Inf, 0.22333636510783006, 0.17793466264728802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22333636510783006, 0.17793466264728802, 0.16460550389240017] ***
*** starting iteration: 3; err: [Inf, 0.22333636510783006, 0.17793466264728802, 0.16460550389240017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22333636510783006, 0.17793466264728802, 0.16460550389240017, 0.15817374241462834] ***
*** finished computation of 7 references, err: [Inf, 0.22333636510783006, 0.17793466264728802, 0.16460550389240017, 0.15817374241462834] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 136, 20]]
** centroid: 2, normalized-entropy: 0.552495114325111, [(2, 136), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 38, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 114), (2, 38)]
*** center 4: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 32, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 64), (2, 32)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [35, 30, 0]]
** centroid: 6, normalized-entropy: 0.9957274520849256, [(1, 35), (2, 30)]
*** center 7: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1970098360382893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1970098360382893, 0.15321822970191035] ***
*** finished computation of 7 references, err: [Inf, 0.1970098360382893, 0.15321822970191035] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 77, 0]]
** centroid: 1, normalized-entropy: 0.9991875557819342, [(1, 72), (2, 77)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 1, 0]]
** centroid: 2, normalized-entropy: 0.10327508457163559, [(1, 73), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 81, 20]]
** centroid: 4, normalized-entropy: 0.7179499765002912, [(2, 81), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 10, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 70), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 67, 0]]
** centroid: 6, normalized-entropy: 0.4098553703184051, [(1, 6), (2, 67)]
*** center 7: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21443974828233067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21443974828233067, 0.1662826679829882] ***
*** starting iteration: 2; err: [Inf, 0.21443974828233067, 0.1662826679829882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21443974828233067, 0.1662826679829882, 0.15551625329699517] ***
*** starting iteration: 3; err: [Inf, 0.21443974828233067, 0.1662826679829882, 0.15551625329699517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21443974828233067, 0.1662826679829882, 0.15551625329699517, 0.15123342512234084] ***
*** finished computation of 7 references, err: [Inf, 0.21443974828233067, 0.1662826679829882, 0.15551625329699517, 0.15123342512234084] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 94, 26]]
** centroid: 1, normalized-entropy: 0.7540340561971327, [(2, 94), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 38, 0]]
** centroid: 2, normalized-entropy: 0.9553413768968346, [(1, 63), (2, 38)]
*** center 3: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 67, 0]]
** centroid: 4, normalized-entropy: 0.6864381668766382, [(1, 15), (2, 67)]
*** center 5: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [49, 52, 0]]
** centroid: 6, normalized-entropy: 0.999363485672765, [(1, 49), (2, 52)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19892820045128576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19892820045128576, 0.1780600521233173] ***
*** starting iteration: 2; err: [Inf, 0.19892820045128576, 0.1780600521233173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19892820045128576, 0.1780600521233173, 0.16833003486242742] ***
*** starting iteration: 3; err: [Inf, 0.19892820045128576, 0.1780600521233173, 0.16833003486242742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19892820045128576, 0.1780600521233173, 0.16833003486242742, 0.15836557579496274] ***
*** finished computation of 7 references, err: [Inf, 0.19892820045128576, 0.1780600521233173, 0.16833003486242742, 0.15836557579496274] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [3, 91, 9]]
** centroid: 1, normalized-entropy: 0.38723178573798683, [(1, 3), (2, 91), (3, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 87, 13]]
** centroid: 2, normalized-entropy: 0.557438185027989, [(2, 87), (3, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 35, 0]]
** centroid: 4, normalized-entropy: 0.9822309298084991, [(1, 48), (2, 35)]
*** center 5: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [115, 14, 0]]
** centroid: 7, normalized-entropy: 0.4954572959859703, [(1, 115), (2, 14)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19359108304808745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19359108304808745, 0.15807126361647736] ***
*** finished computation of 7 references, err: [Inf, 0.19359108304808745, 0.15807126361647736] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 105, 25]]
** centroid: 1, normalized-entropy: 0.7062740891876008, [(2, 105), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 9, 0]]
** centroid: 3, normalized-entropy: 0.5387379148665815, [(1, 64), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [104, 18, 0]]
** centroid: 4, normalized-entropy: 0.603652249754401, [(1, 104), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 37, 0]]
** centroid: 5, normalized-entropy: 0.9562940061600327, [(1, 61), (2, 37)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 82, 1]]
** centroid: 6, normalized-entropy: 0.09408443883267342, [(2, 82), (3, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19134793076608358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19134793076608358, 0.15065053099629538] ***
*** finished computation of 7 references, err: [Inf, 0.19134793076608358, 0.15065053099629538] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 79, 18]]
** centroid: 1, normalized-entropy: 0.6921053253628727, [(2, 79), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 10, 0]]
** centroid: 3, normalized-entropy: 0.5969995167604553, [(1, 59), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [118, 25, 0]]
** centroid: 4, normalized-entropy: 0.6686245915401701, [(1, 118), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 40, 0]]
** centroid: 5, normalized-entropy: 0.9509560484549724, [(1, 68), (2, 40)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 73, 4]]
** centroid: 6, normalized-entropy: 0.29461520565280713, [(2, 73), (3, 4)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31406683576581357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31406683576581357, 0.2393688279422218] ***
*** starting iteration: 2; err: [Inf, 0.31406683576581357, 0.2393688279422218] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31406683576581357, 0.2393688279422218, 0.23359588872328088] ***
*** starting iteration: 3; err: [Inf, 0.31406683576581357, 0.2393688279422218, 0.23359588872328088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31406683576581357, 0.2393688279422218, 0.23359588872328088, 0.23324415262497672] ***
*** finished computation of 3 references, err: [Inf, 0.31406683576581357, 0.2393688279422218, 0.23359588872328088, 0.23324415262497672] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [74, 184, 20]]
** centroid: 1, normalized-entropy: 0.7416649775481834, [(1, 74), (2, 184), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [210, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [126, 52, 0]]
** centroid: 3, normalized-entropy: 0.8714630056611941, [(1, 126), (2, 52)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3879957186055371] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3879957186055371, 0.2422718840963284] ***
*** starting iteration: 2; err: [Inf, 0.3879957186055371, 0.2422718840963284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3879957186055371, 0.2422718840963284, 0.2417519704551845] ***
*** finished computation of 3 references, err: [Inf, 0.3879957186055371, 0.2422718840963284, 0.2417519704551845] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [61, 176, 26]]
** centroid: 1, normalized-entropy: 0.7614082313633679, [(1, 61), (2, 176), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 75, 0]]
** centroid: 3, normalized-entropy: 0.9690632527820694, [(1, 114), (2, 75)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39507258599805556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39507258599805556, 0.2424010779342797] ***
*** starting iteration: 2; err: [Inf, 0.39507258599805556, 0.2424010779342797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39507258599805556, 0.2424010779342797, 0.24159871638547267] ***
*** finished computation of 3 references, err: [Inf, 0.39507258599805556, 0.2424010779342797, 0.24159871638547267] ***
*** center 1: selecting labels [1] (freq >= 2) [from [247, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [26, 170, 22]]
** centroid: 2, normalized-entropy: 0.6180471965240033, [(1, 26), (2, 170), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 57, 0]]
** centroid: 3, normalized-entropy: 0.8584018349322116, [(1, 145), (2, 57)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31990087050497085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31990087050497085, 0.2005489333728524] ***
*** starting iteration: 2; err: [Inf, 0.31990087050497085, 0.2005489333728524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31990087050497085, 0.2005489333728524, 0.1909291490453768] ***
*** starting iteration: 3; err: [Inf, 0.31990087050497085, 0.2005489333728524, 0.1909291490453768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31990087050497085, 0.2005489333728524, 0.1909291490453768, 0.18859800296190948] ***
*** starting iteration: 4; err: [Inf, 0.31990087050497085, 0.2005489333728524, 0.1909291490453768, 0.18859800296190948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31990087050497085, 0.2005489333728524, 0.1909291490453768, 0.18859800296190948, 0.18772502032852545] ***
*** finished computation of 7 references, err: [Inf, 0.31990087050497085, 0.2005489333728524, 0.1909291490453768, 0.18859800296190948, 0.18772502032852545] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [96, 13, 0]]
** centroid: 1, normalized-entropy: 0.527247477024035, [(1, 96), (2, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 17, 0]]
** centroid: 3, normalized-entropy: 0.8536576732793314, [(1, 44), (2, 17)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 102, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 40, 0]]
** centroid: 6, normalized-entropy: 0.9127341558073343, [(1, 82), (2, 40)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 64, 20]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(2, 64), (3, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2743261085210209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743261085210209, 0.19945055207710943] ***
*** starting iteration: 2; err: [Inf, 0.2743261085210209, 0.19945055207710943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743261085210209, 0.19945055207710943, 0.191202813949341] ***
*** starting iteration: 3; err: [Inf, 0.2743261085210209, 0.19945055207710943, 0.191202813949341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743261085210209, 0.19945055207710943, 0.191202813949341, 0.18841769292844512] ***
*** starting iteration: 4; err: [Inf, 0.2743261085210209, 0.19945055207710943, 0.191202813949341, 0.18841769292844512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743261085210209, 0.19945055207710943, 0.191202813949341, 0.18841769292844512, 0.18842515645592683] ***
*** finished computation of 7 references, err: [Inf, 0.2743261085210209, 0.19945055207710943, 0.191202813949341, 0.18841769292844512, 0.18842515645592683] ***
*** center 1: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 57, 0]]
** centroid: 3, normalized-entropy: 0.8403586716091169, [(1, 21), (2, 57)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 80, 26]]
** centroid: 4, normalized-entropy: 0.8037159237834126, [(2, 80), (3, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [27, 66, 0]]
** centroid: 6, normalized-entropy: 0.8691375806126381, [(1, 27), (2, 66)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 48, 0]]
** centroid: 7, normalized-entropy: 0.998845535995202, [(1, 52), (2, 48)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27569085927582393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27569085927582393, 0.22464347888144484] ***
*** starting iteration: 2; err: [Inf, 0.27569085927582393, 0.22464347888144484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203] ***
*** starting iteration: 3; err: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285] ***
*** starting iteration: 4; err: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285, 0.20318343377123396] ***
*** starting iteration: 5; err: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285, 0.20318343377123396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285, 0.20318343377123396, 0.19713003337355345] ***
*** starting iteration: 6; err: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285, 0.20318343377123396, 0.19713003337355345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285, 0.20318343377123396, 0.19713003337355345, 0.19640513050064132] ***
*** finished computation of 7 references, err: [Inf, 0.27569085927582393, 0.22464347888144484, 0.21393182104093203, 0.20765888292169285, 0.20318343377123396, 0.19713003337355345, 0.19640513050064132] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 15, 0]]
** centroid: 2, normalized-entropy: 0.6769418697808861, [(1, 69), (2, 15)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 94, 1]]
** centroid: 3, normalized-entropy: 0.10531957909257636, [(1, 1), (2, 94), (3, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [123, 19, 0]]
** centroid: 4, normalized-entropy: 0.5677759440669734, [(1, 123), (2, 19)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 84, 21]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(2, 84), (3, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [67, 15, 0]]
** centroid: 7, normalized-entropy: 0.6864381668766382, [(1, 67), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23973109357774974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23973109357774974, 0.1898917855244611] ***
*** starting iteration: 2; err: [Inf, 0.23973109357774974, 0.1898917855244611] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23973109357774974, 0.1898917855244611, 0.1885362603273746] ***
*** starting iteration: 3; err: [Inf, 0.23973109357774974, 0.1898917855244611, 0.1885362603273746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23973109357774974, 0.1898917855244611, 0.1885362603273746, 0.18872397466543112] ***
*** finished computation of 7 references, err: [Inf, 0.23973109357774974, 0.1898917855244611, 0.1885362603273746, 0.18872397466543112] ***
*** center 1: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 74, 20]]
** centroid: 3, normalized-entropy: 0.7467366074830678, [(2, 74), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [94, 29, 0]]
** centroid: 5, normalized-entropy: 0.7879388881327561, [(1, 94), (2, 29)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [29, 51, 0]]
** centroid: 6, normalized-entropy: 0.9447388286467892, [(1, 29), (2, 51)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 81, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24828606748442422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24828606748442422, 0.19310843710985867] ***
*** starting iteration: 2; err: [Inf, 0.24828606748442422, 0.19310843710985867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24828606748442422, 0.19310843710985867, 0.18967452931261133] ***
*** starting iteration: 3; err: [Inf, 0.24828606748442422, 0.19310843710985867, 0.18967452931261133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24828606748442422, 0.19310843710985867, 0.18967452931261133, 0.1892938759328722] ***
*** finished computation of 7 references, err: [Inf, 0.24828606748442422, 0.19310843710985867, 0.18967452931261133, 0.1892938759328722] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 85, 0]]
** centroid: 1, normalized-entropy: 0.5135877363803757, [(1, 11), (2, 85)]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [84, 55, 0]]
** centroid: 3, normalized-entropy: 0.9683695061244273, [(1, 84), (2, 55)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [45, 40, 0]]
** centroid: 4, normalized-entropy: 0.9975025463691153, [(1, 45), (2, 40)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 71, 26]]
** centroid: 5, normalized-entropy: 0.8386398715015523, [(2, 71), (3, 26)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2281135050524054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2281135050524054, 0.1972917293643822] ***
*** starting iteration: 2; err: [Inf, 0.2281135050524054, 0.1972917293643822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2281135050524054, 0.1972917293643822, 0.19338671059237383] ***
*** starting iteration: 3; err: [Inf, 0.2281135050524054, 0.1972917293643822, 0.19338671059237383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2281135050524054, 0.1972917293643822, 0.19338671059237383, 0.19237782445392743] ***
*** starting iteration: 4; err: [Inf, 0.2281135050524054, 0.1972917293643822, 0.19338671059237383, 0.19237782445392743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2281135050524054, 0.1972917293643822, 0.19338671059237383, 0.19237782445392743, 0.1914700207578345] ***
*** finished computation of 7 references, err: [Inf, 0.2281135050524054, 0.1972917293643822, 0.19338671059237383, 0.19237782445392743, 0.1914700207578345] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 42, 0]]
** centroid: 1, normalized-entropy: 0.9753130577847331, [(1, 61), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 35, 0]]
** centroid: 2, normalized-entropy: 0.940285958670631, [(1, 63), (2, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 95, 22]]
** centroid: 4, normalized-entropy: 0.6973409725623739, [(2, 95), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 50, 0]]
** centroid: 5, normalized-entropy: 0.9484103893488014, [(1, 29), (2, 50)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [88, 5, 0]]
** centroid: 6, normalized-entropy: 0.30217361847879526, [(1, 88), (2, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23101013909197515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23101013909197515, 0.20547275757277245] ***
*** starting iteration: 2; err: [Inf, 0.23101013909197515, 0.20547275757277245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718] ***
*** starting iteration: 3; err: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718, 0.19560838717402326] ***
*** starting iteration: 4; err: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718, 0.19560838717402326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718, 0.19560838717402326, 0.19445290112051297] ***
*** starting iteration: 5; err: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718, 0.19560838717402326, 0.19445290112051297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718, 0.19560838717402326, 0.19445290112051297, 0.19427502100277613] ***
*** finished computation of 7 references, err: [Inf, 0.23101013909197515, 0.20547275757277245, 0.1980163301788718, 0.19560838717402326, 0.19445290112051297, 0.19427502100277613] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 15, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 60), (2, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 55, 0]]
** centroid: 3, normalized-entropy: 0.8058049113482652, [(1, 18), (2, 55)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [105, 30, 0]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(1, 105), (2, 30)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 102, 20]]
** centroid: 5, normalized-entropy: 0.6436394131461666, [(2, 102), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 34, 0]]
** centroid: 7, normalized-entropy: 0.9937071066045081, [(1, 41), (2, 34)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29456845323333164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29456845323333164, 0.2204800594760024] ***
*** starting iteration: 2; err: [Inf, 0.29456845323333164, 0.2204800594760024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29456845323333164, 0.2204800594760024, 0.20450754992376224] ***
*** starting iteration: 3; err: [Inf, 0.29456845323333164, 0.2204800594760024, 0.20450754992376224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29456845323333164, 0.2204800594760024, 0.20450754992376224, 0.1988134088435921] ***
*** starting iteration: 4; err: [Inf, 0.29456845323333164, 0.2204800594760024, 0.20450754992376224, 0.1988134088435921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29456845323333164, 0.2204800594760024, 0.20450754992376224, 0.1988134088435921, 0.1979211114306489] ***
*** finished computation of 7 references, err: [Inf, 0.29456845323333164, 0.2204800594760024, 0.20450754992376224, 0.1988134088435921, 0.1979211114306489] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 42, 0]]
** centroid: 2, normalized-entropy: 0.9340680553754911, [(1, 78), (2, 42)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 40, 0]]
** centroid: 4, normalized-entropy: 0.9429819088696832, [(1, 71), (2, 40)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 91, 26]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 91), (3, 26)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 78, 0]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(1, 13), (2, 78)]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28573383761198445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064] ***
*** starting iteration: 2; err: [Inf, 0.28573383761198445, 0.23732988467870064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676] ***
*** starting iteration: 3; err: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832] ***
*** starting iteration: 4; err: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244] ***
*** starting iteration: 5; err: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244, 0.19268451898876784] ***
*** starting iteration: 6; err: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244, 0.19268451898876784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244, 0.19268451898876784, 0.19166888109082986] ***
*** starting iteration: 7; err: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244, 0.19268451898876784, 0.19166888109082986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244, 0.19268451898876784, 0.19166888109082986, 0.19094353828110036] ***
*** finished computation of 7 references, err: [Inf, 0.28573383761198445, 0.23732988467870064, 0.2184710901417676, 0.20780330210591832, 0.19920397737598244, 0.19268451898876784, 0.19166888109082986, 0.19094353828110036] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 72, 20]]
** centroid: 2, normalized-entropy: 0.7553754125614286, [(2, 72), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [83, 9, 0]]
** centroid: 3, normalized-entropy: 0.4620663276355394, [(1, 83), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [87, 26, 0]]
** centroid: 4, normalized-entropy: 0.7781655393133492, [(1, 87), (2, 26)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 104, 2]]
** centroid: 5, normalized-entropy: 0.13503620280212753, [(2, 104), (3, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 15, 0]]
** centroid: 6, normalized-entropy: 0.6816559115981193, [(1, 68), (2, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22865415149152996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22865415149152996, 0.19363631818488286] ***
*** starting iteration: 2; err: [Inf, 0.22865415149152996, 0.19363631818488286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22865415149152996, 0.19363631818488286, 0.19179981696285173] ***
*** starting iteration: 3; err: [Inf, 0.22865415149152996, 0.19363631818488286, 0.19179981696285173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22865415149152996, 0.19363631818488286, 0.19179981696285173, 0.19076298842173037] ***
*** finished computation of 7 references, err: [Inf, 0.22865415149152996, 0.19363631818488286, 0.19179981696285173, 0.19076298842173037] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 60, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 15), (2, 60)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 14, 0]]
** centroid: 2, normalized-entropy: 0.710676853856123, [(1, 58), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 99, 20]]
** centroid: 4, normalized-entropy: 0.6532642567060226, [(2, 99), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 63, 0]]
** centroid: 5, normalized-entropy: 0.9867867202680318, [(1, 48), (2, 63)]
*** center 6: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23085803688172882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23085803688172882, 0.1915120277637574] ***
*** starting iteration: 2; err: [Inf, 0.23085803688172882, 0.1915120277637574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23085803688172882, 0.1915120277637574, 0.19152246097261938] ***
*** finished computation of 7 references, err: [Inf, 0.23085803688172882, 0.1915120277637574, 0.19152246097261938] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 95, 0]]
** centroid: 1, normalized-entropy: 0.42480887386781474, [(1, 9), (2, 95)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 28, 0]]
** centroid: 2, normalized-entropy: 0.8403586716091169, [(1, 76), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 77, 26]]
** centroid: 4, normalized-entropy: 0.8151025048028707, [(2, 77), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 51, 0]]
** centroid: 5, normalized-entropy: 0.9984242941042116, [(1, 56), (2, 51)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22472523650883333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472523650883333, 0.1905494081093811] ***
*** starting iteration: 2; err: [Inf, 0.22472523650883333, 0.1905494081093811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472523650883333, 0.1905494081093811, 0.18775055677849223] ***
*** starting iteration: 3; err: [Inf, 0.22472523650883333, 0.1905494081093811, 0.18775055677849223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472523650883333, 0.1905494081093811, 0.18775055677849223, 0.18697560505681102] ***
*** finished computation of 7 references, err: [Inf, 0.22472523650883333, 0.1905494081093811, 0.18775055677849223, 0.18697560505681102] ***
*** center 1: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 56, 22]]
** centroid: 2, normalized-entropy: 0.8582307926411409, [(2, 56), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [100, 16, 0]]
** centroid: 3, normalized-entropy: 0.5787946246321198, [(1, 100), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 6, 0]]
** centroid: 4, normalized-entropy: 0.5095157180881823, [(1, 47), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 67, 0]]
** centroid: 5, normalized-entropy: 0.9577800211448372, [(1, 41), (2, 67)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [101, 7, 0]]
** centroid: 6, normalized-entropy: 0.34626857427148255, [(1, 101), (2, 7)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17707118198174882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17707118198174882, 0.15610243993959538] ***
*** finished computation of 7 references, err: [Inf, 0.17707118198174882, 0.15610243993959538] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [107, 41, 0]]
** centroid: 1, normalized-entropy: 0.8513682322893271, [(1, 107), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 42, 0]]
** centroid: 2, normalized-entropy: 0.9919924034538556, [(1, 34), (2, 42)]
*** center 3: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 49, 0]]
** centroid: 5, normalized-entropy: 0.9982994837029028, [(1, 54), (2, 49)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 104, 20]]
** centroid: 6, normalized-entropy: 0.6373874992221911, [(2, 104), (3, 20)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23639310823370893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23639310823370893, 0.15895795759589953] ***
*** finished computation of 7 references, err: [Inf, 0.23639310823370893, 0.15895795759589953] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 82, 0]]
** centroid: 1, normalized-entropy: 0.3974104103699249, [(1, 7), (2, 82)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 26]]
** centroid: 2, normalized-entropy: 0.8589810370425965, [(2, 66), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [18, 87, 0]]
** centroid: 5, normalized-entropy: 0.6609623351442084, [(1, 18), (2, 87)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [122, 16, 0]]
** centroid: 6, normalized-entropy: 0.5175827525559071, [(1, 122), (2, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24219563808445743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24219563808445743, 0.18523049666343824] ***
*** finished computation of 7 references, err: [Inf, 0.24219563808445743, 0.18523049666343824] ***
*** center 1: selecting labels [1] (freq >= 1) [from [202, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 14]]
** centroid: 2, normalized-entropy: 0.6641593279528072, [(2, 67), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 66, 0]]
** centroid: 3, normalized-entropy: 0.9777945702913884, [(1, 94), (2, 66)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 21, 8]]
** centroid: 4, normalized-entropy: 0.8497511372532974, [(2, 21), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 40, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [100, 33, 0]]
** centroid: 6, normalized-entropy: 0.8082852556793744, [(1, 100), (2, 33)]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4182291833667068] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4182291833667068, 0.2343496863734447] ***
*** starting iteration: 2; err: [Inf, 0.4182291833667068, 0.2343496863734447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4182291833667068, 0.2343496863734447, 0.23366022163962907] ***
*** finished computation of 3 references, err: [Inf, 0.4182291833667068, 0.2343496863734447, 0.23366022163962907] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [201, 34, 0]]
** centroid: 1, normalized-entropy: 0.5963674719714839, [(1, 201), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [209, 34, 0]]
** centroid: 2, normalized-entropy: 0.584023222916826, [(1, 209), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 168, 20]]
** centroid: 3, normalized-entropy: 0.48890859144051524, [(2, 168), (3, 20)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3986699137979116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986699137979116, 0.23678070168545667] ***
*** starting iteration: 2; err: [Inf, 0.3986699137979116, 0.23678070168545667] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986699137979116, 0.23678070168545667, 0.2357681602123717] ***
*** starting iteration: 3; err: [Inf, 0.3986699137979116, 0.23678070168545667, 0.2357681602123717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3986699137979116, 0.23678070168545667, 0.2357681602123717, 0.235095563572252] ***
*** finished computation of 3 references, err: [Inf, 0.3986699137979116, 0.23678070168545667, 0.2357681602123717, 0.235095563572252] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [204, 45, 0]]
** centroid: 1, normalized-entropy: 0.6816559115981193, [(1, 204), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [186, 30, 0]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(1, 186), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 176, 26]]
** centroid: 3, normalized-entropy: 0.5538976334852961, [(2, 176), (3, 26)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32741013571139665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32741013571139665, 0.23351563167000103] ***
*** starting iteration: 2; err: [Inf, 0.32741013571139665, 0.23351563167000103] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32741013571139665, 0.23351563167000103, 0.23240058342444486] ***
*** starting iteration: 3; err: [Inf, 0.32741013571139665, 0.23351563167000103, 0.23240058342444486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32741013571139665, 0.23351563167000103, 0.23240058342444486, 0.23239173464661372] ***
*** finished computation of 3 references, err: [Inf, 0.32741013571139665, 0.23351563167000103, 0.23240058342444486, 0.23239173464661372] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [256, 13, 0]]
** centroid: 1, normalized-entropy: 0.279247803687352, [(1, 256), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [162, 42, 0]]
** centroid: 2, normalized-entropy: 0.7335379291086666, [(1, 162), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 172, 22]]
** centroid: 3, normalized-entropy: 0.5100930822965021, [(2, 172), (3, 22)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3053052749417655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3053052749417655, 0.2233187987178273] ***
*** starting iteration: 2; err: [Inf, 0.3053052749417655, 0.2233187987178273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3053052749417655, 0.2233187987178273, 0.20416098680450684] ***
*** starting iteration: 3; err: [Inf, 0.3053052749417655, 0.2233187987178273, 0.20416098680450684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3053052749417655, 0.2233187987178273, 0.20416098680450684, 0.19536346379197664] ***
*** finished computation of 7 references, err: [Inf, 0.3053052749417655, 0.2233187987178273, 0.20416098680450684, 0.19536346379197664] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 10, 0]]
** centroid: 2, normalized-entropy: 0.6987003526563345, [(1, 43), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 30, 0]]
** centroid: 3, normalized-entropy: 0.7246045493084647, [(1, 119), (2, 30)]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [25, 96, 0]]
** centroid: 5, normalized-entropy: 0.7349557594762549, [(1, 25), (2, 96)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 100, 20]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 100), (3, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2681516750685653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2681516750685653, 0.20581312280293482] ***
*** starting iteration: 2; err: [Inf, 0.2681516750685653, 0.20581312280293482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2681516750685653, 0.20581312280293482, 0.19416655563627896] ***
*** starting iteration: 3; err: [Inf, 0.2681516750685653, 0.20581312280293482, 0.19416655563627896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2681516750685653, 0.20581312280293482, 0.19416655563627896, 0.1921869177452248] ***
*** finished computation of 7 references, err: [Inf, 0.2681516750685653, 0.20581312280293482, 0.19416655563627896, 0.1921869177452248] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [35, 54, 0]]
** centroid: 1, normalized-entropy: 0.9668701645630143, [(1, 35), (2, 54)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 93, 26]]
** centroid: 2, normalized-entropy: 0.7573958968817643, [(2, 93), (3, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 4, 0]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(1, 80), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 80, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 15), (2, 80)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 20, 0]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(1, 64), (2, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27321122466367315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27321122466367315, 0.21241636831184912] ***
*** starting iteration: 2; err: [Inf, 0.27321122466367315, 0.21241636831184912] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27321122466367315, 0.21241636831184912, 0.1994584599870077] ***
*** starting iteration: 3; err: [Inf, 0.27321122466367315, 0.21241636831184912, 0.1994584599870077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27321122466367315, 0.21241636831184912, 0.1994584599870077, 0.19512822520828385] ***
*** finished computation of 7 references, err: [Inf, 0.27321122466367315, 0.21241636831184912, 0.1994584599870077, 0.19512822520828385] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 75, 22]]
** centroid: 1, normalized-entropy: 0.772398436030307, [(2, 75), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [13, 86, 0]]
** centroid: 2, normalized-entropy: 0.5610284863400681, [(1, 13), (2, 86)]
*** center 3: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [115, 32, 0]]
** centroid: 4, normalized-entropy: 0.7559216247098123, [(1, 115), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 24, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 48), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 10, 0]]
** centroid: 6, normalized-entropy: 0.6136190195993708, [(1, 56), (2, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9220118321914729
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.2429495690812146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2429495690812146, 0.1963132198437814] ***
*** finished computation of 7 references, err: [Inf, 0.2429495690812146, 0.1963132198437814] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 122, 0]]
** centroid: 1, normalized-entropy: 0.06812462580532001, [(1, 1), (2, 122)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 55, 0]]
** centroid: 3, normalized-entropy: 0.9999392847706552, [(1, 54), (2, 55)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 12, 0]]
** centroid: 4, normalized-entropy: 0.5259359840917625, [(1, 89), (2, 12)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 56, 26]]
** centroid: 5, normalized-entropy: 0.9011701959974223, [(2, 56), (3, 26)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 6, 0]]
** centroid: 6, normalized-entropy: 0.32046828741158423, [(1, 97), (2, 6)]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22640701098501817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22640701098501817, 0.19055374663437832] ***
*** finished computation of 7 references, err: [Inf, 0.22640701098501817, 0.19055374663437832] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 106, 0]]
** centroid: 1, normalized-entropy: 0.646966308330803, [(1, 21), (2, 106)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [74, 41, 0]]
** centroid: 3, normalized-entropy: 0.9397580401106037, [(1, 74), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 18, 0]]
** centroid: 4, normalized-entropy: 0.8395304981054318, [(1, 49), (2, 18)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 70, 20]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 70), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [105, 1, 0]]
** centroid: 7, normalized-entropy: 0.07701687574298331, [(1, 105), (2, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23720540988330227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23720540988330227, 0.1899144453250676] ***
*** finished computation of 7 references, err: [Inf, 0.23720540988330227, 0.1899144453250676] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [110, 22, 0]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(1, 110), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [77, 6, 0]]
** centroid: 2, normalized-entropy: 0.3744088453489206, [(1, 77), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 82, 22]]
** centroid: 3, normalized-entropy: 0.7444131797881749, [(2, 82), (3, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 24, 0]]
** centroid: 5, normalized-entropy: 0.7832211182191516, [(1, 79), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 21, 0]]
** centroid: 6, normalized-entropy: 0.8918107543797084, [(1, 47), (2, 21)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9269868671066277, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9269868671066277
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.18332479420179562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18332479420179562, 0.1556903718524632] ***
*** starting iteration: 2; err: [Inf, 0.18332479420179562, 0.1556903718524632] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18332479420179562, 0.1556903718524632, 0.15138704048234736] ***
*** starting iteration: 3; err: [Inf, 0.18332479420179562, 0.1556903718524632, 0.15138704048234736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18332479420179562, 0.1556903718524632, 0.15138704048234736, 0.14999693095846264] ***
*** starting iteration: 4; err: [Inf, 0.18332479420179562, 0.1556903718524632, 0.15138704048234736, 0.14999693095846264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18332479420179562, 0.1556903718524632, 0.15138704048234736, 0.14999693095846264, 0.14967705226886469] ***
*** finished computation of 7 references, err: [Inf, 0.18332479420179562, 0.1556903718524632, 0.15138704048234736, 0.14999693095846264, 0.14967705226886469] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [21, 84, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 21), (2, 84)]
*** center 2: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 77, 20]]
** centroid: 3, normalized-entropy: 0.7341280428958428, [(2, 77), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [82, 13, 0]]
** centroid: 6, normalized-entropy: 0.5759084429149787, [(1, 82), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [17, 62, 0]]
** centroid: 7, normalized-entropy: 0.751286576718343, [(1, 17), (2, 62)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1950479375123084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950479375123084, 0.15908467656942546] ***
*** starting iteration: 2; err: [Inf, 0.1950479375123084, 0.15908467656942546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950479375123084, 0.15908467656942546, 0.15513556912217452] ***
*** starting iteration: 3; err: [Inf, 0.1950479375123084, 0.15908467656942546, 0.15513556912217452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950479375123084, 0.15908467656942546, 0.15513556912217452, 0.1545005850312391] ***
*** finished computation of 7 references, err: [Inf, 0.1950479375123084, 0.15908467656942546, 0.15513556912217452, 0.1545005850312391] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 34, 0]]
** centroid: 1, normalized-entropy: 0.9564574047992596, [(1, 56), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 73, 0]]
** centroid: 2, normalized-entropy: 0.1773894531859976, [(1, 2), (2, 73)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 12, 0]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(1, 51), (2, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [95, 23, 0]]
** centroid: 5, normalized-entropy: 0.7116412885080164, [(1, 95), (2, 23)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 109, 26]]
** centroid: 6, normalized-entropy: 0.7068635668852503, [(2, 109), (3, 26)]
*** center 7: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19720169885127317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720169885127317, 0.1533035151150798] ***
*** starting iteration: 2; err: [Inf, 0.19720169885127317, 0.1533035151150798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720169885127317, 0.1533035151150798, 0.14897996228121255] ***
*** starting iteration: 3; err: [Inf, 0.19720169885127317, 0.1533035151150798, 0.14897996228121255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720169885127317, 0.1533035151150798, 0.14897996228121255, 0.1478799286939349] ***
*** starting iteration: 4; err: [Inf, 0.19720169885127317, 0.1533035151150798, 0.14897996228121255, 0.1478799286939349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19720169885127317, 0.1533035151150798, 0.14897996228121255, 0.1478799286939349, 0.14730650500353912] ***
*** finished computation of 7 references, err: [Inf, 0.19720169885127317, 0.1533035151150798, 0.14897996228121255, 0.1478799286939349, 0.14730650500353912] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 73, 0]]
** centroid: 1, normalized-entropy: 0.23987382528036535, [(1, 3), (2, 73)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 22, 0]]
** centroid: 2, normalized-entropy: 0.80235344282919, [(1, 68), (2, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 92, 22]]
** centroid: 4, normalized-entropy: 0.7076690004167966, [(2, 92), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [104, 7, 0]]
** centroid: 6, normalized-entropy: 0.33948600021427877, [(1, 104), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [63, 33, 0]]
** centroid: 7, normalized-entropy: 0.9283620723948678, [(1, 63), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23649008615451442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23649008615451442, 0.20368466347556663] ***
*** starting iteration: 2; err: [Inf, 0.23649008615451442, 0.20368466347556663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418] ***
*** starting iteration: 3; err: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196] ***
*** starting iteration: 4; err: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196, 0.1916098339530687] ***
*** starting iteration: 5; err: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196, 0.1916098339530687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196, 0.1916098339530687, 0.1900446036755032] ***
*** starting iteration: 6; err: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196, 0.1916098339530687, 0.1900446036755032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196, 0.1916098339530687, 0.1900446036755032, 0.18918395278046843] ***
*** finished computation of 7 references, err: [Inf, 0.23649008615451442, 0.20368466347556663, 0.1981669176445418, 0.1952710427559196, 0.1916098339530687, 0.1900446036755032, 0.18918395278046843] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 63, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 9), (2, 63)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [106, 34, 0]]
** centroid: 2, normalized-entropy: 0.7997594113291759, [(1, 106), (2, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [31, 50, 0]]
** centroid: 4, normalized-entropy: 0.9599377175669783, [(1, 31), (2, 50)]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 89, 20]]
** centroid: 6, normalized-entropy: 0.6876445334580582, [(2, 89), (3, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25522154854991747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404] ***
*** starting iteration: 2; err: [Inf, 0.25522154854991747, 0.21463635573624404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164] ***
*** starting iteration: 3; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052] ***
*** starting iteration: 4; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854] ***
*** starting iteration: 5; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484] ***
*** starting iteration: 6; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228] ***
*** starting iteration: 7; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016] ***
*** starting iteration: 8; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016, 0.19154950980979507] ***
*** starting iteration: 9; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016, 0.19154950980979507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016, 0.19154950980979507, 0.18921092469831635] ***
*** starting iteration: 10; err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016, 0.19154950980979507, 0.18921092469831635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016, 0.19154950980979507, 0.18921092469831635, 0.18905959982282552] ***
*** finished computation of 7 references, err: [Inf, 0.25522154854991747, 0.21463635573624404, 0.20807529728220164, 0.20391059013131052, 0.1994656353987854, 0.19602229187999484, 0.19400153657061228, 0.1926743420486016, 0.19154950980979507, 0.18921092469831635, 0.18905959982282552] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [87, 2, 0]]
** centroid: 2, normalized-entropy: 0.1551032721030341, [(1, 87), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 52, 26]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 52), (3, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 79, 0]]
** centroid: 4, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
*** center 5: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [70, 9, 0]]
** centroid: 6, normalized-entropy: 0.511639783631173, [(1, 70), (2, 9)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [14, 109, 0]]
** centroid: 7, normalized-entropy: 0.5113351532295534, [(1, 14), (2, 109)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2833714989423082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833714989423082, 0.20898105089749577] ***
*** starting iteration: 2; err: [Inf, 0.2833714989423082, 0.20898105089749577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678] ***
*** starting iteration: 3; err: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678, 0.19503449672111206] ***
*** starting iteration: 4; err: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678, 0.19503449672111206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678, 0.19503449672111206, 0.1934959544273822] ***
*** starting iteration: 5; err: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678, 0.19503449672111206, 0.1934959544273822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678, 0.19503449672111206, 0.1934959544273822, 0.19250270814042836] ***
*** finished computation of 7 references, err: [Inf, 0.2833714989423082, 0.20898105089749577, 0.19928067937811678, 0.19503449672111206, 0.1934959544273822, 0.19250270814042836] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 22, 0]]
** centroid: 3, normalized-entropy: 0.893010810044601, [(1, 49), (2, 22)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 70, 22]]
** centroid: 4, normalized-entropy: 0.7935912300117066, [(2, 70), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [39, 62, 0]]
** centroid: 6, normalized-entropy: 0.9622623958249239, [(1, 39), (2, 62)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 73, 0]]
** centroid: 7, normalized-entropy: 0.7663350359691776, [(1, 21), (2, 73)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9269868671066277, 0.9239868611126095, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.9039608470746195, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9269868671066277
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.19349027113910686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19349027113910686, 0.17017334788987362] ***
*** starting iteration: 2; err: [Inf, 0.19349027113910686, 0.17017334788987362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19349027113910686, 0.17017334788987362, 0.1606243274367957] ***
*** starting iteration: 3; err: [Inf, 0.19349027113910686, 0.17017334788987362, 0.1606243274367957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19349027113910686, 0.17017334788987362, 0.1606243274367957, 0.15403213303860602] ***
*** finished computation of 7 references, err: [Inf, 0.19349027113910686, 0.17017334788987362, 0.1606243274367957, 0.15403213303860602] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 54, 0]]
** centroid: 1, normalized-entropy: 0.9624127354629922, [(1, 34), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 47, 0]]
** centroid: 2, normalized-entropy: 0.9758104923889663, [(1, 68), (2, 47)]
*** center 3: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 2, 0]]
** centroid: 4, normalized-entropy: 0.16082302082246946, [(1, 83), (2, 2)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 127, 20]]
** centroid: 5, normalized-entropy: 0.5738116841709745, [(2, 127), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [93, 6, 0]]
** centroid: 7, normalized-entropy: 0.32984607020714635, [(1, 93), (2, 6)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2285199967314904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2285199967314904, 0.16162087446193155] ***
*** starting iteration: 2; err: [Inf, 0.2285199967314904, 0.16162087446193155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2285199967314904, 0.16162087446193155, 0.15192445903957852] ***
*** starting iteration: 3; err: [Inf, 0.2285199967314904, 0.16162087446193155, 0.15192445903957852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2285199967314904, 0.16162087446193155, 0.15192445903957852, 0.1501265912396328] ***
*** finished computation of 7 references, err: [Inf, 0.2285199967314904, 0.16162087446193155, 0.15192445903957852, 0.1501265912396328] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [102, 30, 0]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(1, 102), (2, 30)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 96, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 26]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 65), (3, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [89, 2, 0]]
** centroid: 4, normalized-entropy: 0.15240699892386778, [(1, 89), (2, 2)]
*** center 5: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [37, 58, 0]]
** centroid: 6, normalized-entropy: 0.9644590583765235, [(1, 37), (2, 58)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2926836390693349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2926836390693349, 0.168503576923145] ***
*** starting iteration: 2; err: [Inf, 0.2926836390693349, 0.168503576923145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2926836390693349, 0.168503576923145, 0.15561009596229003] ***
*** starting iteration: 3; err: [Inf, 0.2926836390693349, 0.168503576923145, 0.15561009596229003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2926836390693349, 0.168503576923145, 0.15561009596229003, 0.15128416408096318] ***
*** finished computation of 7 references, err: [Inf, 0.2926836390693349, 0.168503576923145, 0.15561009596229003, 0.15128416408096318] ***
*** center 1: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [86, 9, 0]]
** centroid: 3, normalized-entropy: 0.4520861986745138, [(1, 86), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 25, 0]]
** centroid: 4, normalized-entropy: 0.8871723027673716, [(1, 57), (2, 25)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 81, 21]]
** centroid: 5, normalized-entropy: 0.7335379291086666, [(2, 81), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 99, 1]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 11), (2, 99)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [63, 13, 0]]
** centroid: 7, normalized-entropy: 0.6601070987550468, [(1, 63), (2, 13)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9269868671066277, 0.9239868611126095, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139918361475248, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.9039608470746195, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9269868671066277
finished with 16
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9269868671066277, 0.9239868611126095, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139918361475248, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.9039608470746195, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9269868671066277
finished with 16
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9269868671066277, 0.9239868611126095, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139918361475248, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.9039608470746195, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 1) => 0.9269868671066277
finished with 17
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.23061536985600517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23061536985600517, 0.16934739534013174] ***
*** starting iteration: 2; err: [Inf, 0.23061536985600517, 0.16934739534013174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573] ***
*** starting iteration: 3; err: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694] ***
*** starting iteration: 4; err: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694, 0.15256297744687525] ***
*** starting iteration: 5; err: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694, 0.15256297744687525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694, 0.15256297744687525, 0.15117180138244643] ***
*** starting iteration: 6; err: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694, 0.15256297744687525, 0.15117180138244643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694, 0.15256297744687525, 0.15117180138244643, 0.15023966817753026] ***
*** finished computation of 7 references, err: [Inf, 0.23061536985600517, 0.16934739534013174, 0.1595723592891573, 0.15468574229588694, 0.15256297744687525, 0.15117180138244643, 0.15023966817753026] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 88, 0]]
** centroid: 1, normalized-entropy: 0.6912898694057888, [(1, 20), (2, 88)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 74, 20]]
** centroid: 2, normalized-entropy: 0.7467366074830678, [(2, 74), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [97, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [9, 68, 0]]
** centroid: 4, normalized-entropy: 0.5203346157857599, [(1, 9), (2, 68)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [97, 5, 0]]
** centroid: 5, normalized-entropy: 0.28221763445592507, [(1, 97), (2, 5)]
*** center 6: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24486051671028228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486051671028228, 0.15771808464888545] ***
*** starting iteration: 2; err: [Inf, 0.24486051671028228, 0.15771808464888545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486051671028228, 0.15771808464888545, 0.1524273580522451] ***
*** starting iteration: 3; err: [Inf, 0.24486051671028228, 0.15771808464888545, 0.1524273580522451] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486051671028228, 0.15771808464888545, 0.1524273580522451, 0.1502467718204369] ***
*** starting iteration: 4; err: [Inf, 0.24486051671028228, 0.15771808464888545, 0.1524273580522451, 0.1502467718204369] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24486051671028228, 0.15771808464888545, 0.1524273580522451, 0.1502467718204369, 0.14955531473577335] ***
*** finished computation of 7 references, err: [Inf, 0.24486051671028228, 0.15771808464888545, 0.1524273580522451, 0.1502467718204369, 0.14955531473577335] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 91, 0]]
** centroid: 1, normalized-entropy: 0.2039058755048202, [(1, 3), (2, 91)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 57, 26]]
** centroid: 2, normalized-entropy: 0.8968928834064589, [(2, 57), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [15, 102, 0]]
** centroid: 3, normalized-entropy: 0.552495114325111, [(1, 15), (2, 102)]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21584155773771913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21584155773771913, 0.1644053970361645] ***
*** starting iteration: 2; err: [Inf, 0.21584155773771913, 0.1644053970361645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187] ***
*** starting iteration: 3; err: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187, 0.1528132725199838] ***
*** starting iteration: 4; err: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187, 0.1528132725199838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187, 0.1528132725199838, 0.15161836782478724] ***
*** starting iteration: 5; err: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187, 0.1528132725199838, 0.15161836782478724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187, 0.1528132725199838, 0.15161836782478724, 0.15098538364645378] ***
*** finished computation of 7 references, err: [Inf, 0.21584155773771913, 0.1644053970361645, 0.15597993826055187, 0.1528132725199838, 0.15161836782478724, 0.15098538364645378] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [69, 32, 0]]
** centroid: 1, normalized-entropy: 0.9009026954478971, [(1, 69), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 22]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 66), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 44, 0]]
** centroid: 6, normalized-entropy: 0.9688035512085579, [(1, 67), (2, 44)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [100, 10, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 100), (2, 10)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9330018641395886, 0.9269868671066277, 0.9239868611126095, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139918361475248, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.9039608470746195, 0.8980387573201943, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9330018641395886
finished with 18
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.18979022477305252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18979022477305252, 0.155055262704102] ***
*** starting iteration: 2; err: [Inf, 0.18979022477305252, 0.155055262704102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18979022477305252, 0.155055262704102, 0.15152503918113558] ***
*** starting iteration: 3; err: [Inf, 0.18979022477305252, 0.155055262704102, 0.15152503918113558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18979022477305252, 0.155055262704102, 0.15152503918113558, 0.15045503556666925] ***
*** starting iteration: 4; err: [Inf, 0.18979022477305252, 0.155055262704102, 0.15152503918113558, 0.15045503556666925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18979022477305252, 0.155055262704102, 0.15152503918113558, 0.15045503556666925, 0.14959519684755954] ***
*** finished computation of 7 references, err: [Inf, 0.18979022477305252, 0.155055262704102, 0.15152503918113558, 0.15045503556666925, 0.14959519684755954] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 100, 26]]
** centroid: 1, normalized-entropy: 0.7344461802527668, [(2, 100), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [88, 2, 0]]
** centroid: 3, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 49, 0]]
** centroid: 4, normalized-entropy: 0.9979139338855983, [(1, 44), (2, 49)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 23, 0]]
** centroid: 5, normalized-entropy: 0.8199653102187632, [(1, 67), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 77, 0]]
** centroid: 7, normalized-entropy: 0.2837689703721877, [(1, 4), (2, 77)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19970733481221595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19970733481221595, 0.15157694674821365] ***
*** starting iteration: 2; err: [Inf, 0.19970733481221595, 0.15157694674821365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19970733481221595, 0.15157694674821365, 0.14847429862033362] ***
*** starting iteration: 3; err: [Inf, 0.19970733481221595, 0.15157694674821365, 0.14847429862033362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19970733481221595, 0.15157694674821365, 0.14847429862033362, 0.1481758135219885] ***
*** finished computation of 7 references, err: [Inf, 0.19970733481221595, 0.15157694674821365, 0.14847429862033362, 0.1481758135219885] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 84, 20]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(2, 84), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 26, 0]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(1, 91), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [24, 77, 0]]
** centroid: 4, normalized-entropy: 0.7910662980902586, [(1, 24), (2, 77)]
*** center 5: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [23, 48, 0]]
** centroid: 6, normalized-entropy: 0.9086185980409245, [(1, 23), (2, 48)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 1, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1862492879972733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1862492879972733, 0.14916936842294626] ***
*** starting iteration: 2; err: [Inf, 0.1862492879972733, 0.14916936842294626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1862492879972733, 0.14916936842294626, 0.14621169988563035] ***
*** starting iteration: 3; err: [Inf, 0.1862492879972733, 0.14916936842294626, 0.14621169988563035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1862492879972733, 0.14916936842294626, 0.14621169988563035, 0.14545384894604788] ***
*** finished computation of 7 references, err: [Inf, 0.1862492879972733, 0.14916936842294626, 0.14621169988563035, 0.14545384894604788] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 46, 0]]
** centroid: 1, normalized-entropy: 0.987380023288353, [(1, 60), (2, 46)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 6, 0]]
** centroid: 2, normalized-entropy: 0.45868581620054033, [(1, 56), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 78, 22]]
** centroid: 3, normalized-entropy: 0.7601675029619658, [(2, 78), (3, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [90, 20, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 90), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 77, 0]]
** centroid: 6, normalized-entropy: 0.3744088453489206, [(1, 6), (2, 77)]
*** center 7: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9330018641395886, 0.9269868671066277, 0.9239868611126095, 0.9220118321914729, 0.9189608770447094, 0.9159728590866315, 0.9139918361475248, 0.9139618660576744, 0.913011814209419, 0.9089928251604898, 0.9060197922473372, 0.9039608470746195, 0.8980387573201943, 0.8940137742532951, 0.8909688131245018, 0.8700107292921664, 0.8649787512062961, 0.7639795484106862]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 2) => 0.9330018641395886
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.1931813845669385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931813845669385, 0.15816022155387327] ***
*** starting iteration: 2; err: [Inf, 0.1931813845669385, 0.15816022155387327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931813845669385, 0.15816022155387327, 0.15492197876097635] ***
*** starting iteration: 3; err: [Inf, 0.1931813845669385, 0.15816022155387327, 0.15492197876097635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931813845669385, 0.15816022155387327, 0.15492197876097635, 0.15300897525897017] ***
*** starting iteration: 4; err: [Inf, 0.1931813845669385, 0.15816022155387327, 0.15492197876097635, 0.15300897525897017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931813845669385, 0.15816022155387327, 0.15492197876097635, 0.15300897525897017, 0.1520583902504295] ***
*** finished computation of 7 references, err: [Inf, 0.1931813845669385, 0.15816022155387327, 0.15492197876097635, 0.15300897525897017, 0.1520583902504295] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 170, 34]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 170), (3, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [106, 2, 0]]
** centroid: 2, normalized-entropy: 0.13303964861069897, [(1, 106), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 97, 0]]
** centroid: 4, normalized-entropy: 0.38861174916944274, [(1, 8), (2, 97)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [119, 24, 0]]
** centroid: 5, normalized-entropy: 0.6527215895689277, [(1, 119), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [103, 60, 0]]
** centroid: 6, normalized-entropy: 0.9492006079956014, [(1, 103), (2, 60)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [144, 4, 0]]
** centroid: 7, normalized-entropy: 0.1792560669283214, [(1, 144), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24331263707764447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366] ***
*** starting iteration: 2; err: [Inf, 0.24331263707764447, 0.20283236005250366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304] ***
*** starting iteration: 3; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406] ***
*** starting iteration: 4; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545] ***
*** starting iteration: 5; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046] ***
*** starting iteration: 6; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614] ***
*** starting iteration: 7; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614, 0.1524099590908736] ***
*** starting iteration: 8; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614, 0.1524099590908736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614, 0.1524099590908736, 0.1512401119787246] ***
*** starting iteration: 9; err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614, 0.1524099590908736, 0.1512401119787246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614, 0.1524099590908736, 0.1512401119787246, 0.15039754106476902] ***
*** finished computation of 7 references, err: [Inf, 0.24331263707764447, 0.20283236005250366, 0.17896065769158304, 0.16130561477318406, 0.15766534658614545, 0.15589483003132046, 0.15380722936801614, 0.1524099590908736, 0.1512401119787246, 0.15039754106476902] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [82, 14, 0]]
** centroid: 1, normalized-entropy: 0.5993142373098089, [(1, 82), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 13, 0]]
** centroid: 2, normalized-entropy: 0.7473944462440388, [(1, 48), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 42, 14]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 42), (3, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 57, 0]]
** centroid: 6, normalized-entropy: 0.45371633918694493, [(1, 6), (2, 57)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 46, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2015566590614617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456] ***
*** starting iteration: 2; err: [Inf, 0.2015566590614617, 0.16058989581279456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797] ***
*** starting iteration: 3; err: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037] ***
*** starting iteration: 4; err: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875] ***
*** starting iteration: 5; err: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875, 0.15145391366630792] ***
*** starting iteration: 6; err: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875, 0.15145391366630792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875, 0.15145391366630792, 0.1503110747113824] ***
*** starting iteration: 7; err: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875, 0.15145391366630792, 0.1503110747113824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875, 0.15145391366630792, 0.1503110747113824, 0.14958974537067116] ***
*** finished computation of 7 references, err: [Inf, 0.2015566590614617, 0.16058989581279456, 0.15548229376319797, 0.1537234126199037, 0.15258534342981875, 0.15145391366630792, 0.1503110747113824, 0.14958974537067116] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 14, 0]]
** centroid: 1, normalized-entropy: 0.6641593279528072, [(1, 67), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 23, 0]]
** centroid: 2, normalized-entropy: 0.8941071841443881, [(1, 51), (2, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 12]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 48), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 41, 0]]
** centroid: 5, normalized-entropy: 0.9235785996175947, [(1, 21), (2, 41)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 56, 7]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(2, 56), (3, 7)]
*** center 7: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2009060992449522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2009060992449522, 0.161298685727641] ***
*** starting iteration: 2; err: [Inf, 0.2009060992449522, 0.161298685727641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2009060992449522, 0.161298685727641, 0.15611123143415898] ***
*** starting iteration: 3; err: [Inf, 0.2009060992449522, 0.161298685727641, 0.15611123143415898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2009060992449522, 0.161298685727641, 0.15611123143415898, 0.15469362033344805] ***
*** starting iteration: 4; err: [Inf, 0.2009060992449522, 0.161298685727641, 0.15611123143415898, 0.15469362033344805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2009060992449522, 0.161298685727641, 0.15611123143415898, 0.15469362033344805, 0.15384327709302306] ***
*** finished computation of 7 references, err: [Inf, 0.2009060992449522, 0.161298685727641, 0.15611123143415898, 0.15469362033344805, 0.15384327709302306] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 7]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 35), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 12]]
** centroid: 3, normalized-entropy: 0.8030909760146977, [(2, 37), (3, 12)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 48, 0]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(1, 8), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 42, 0]]
** centroid: 5, normalized-entropy: 0.9756797868933086, [(1, 29), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 2, 0]]
** centroid: 6, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [82, 13, 0]]
** centroid: 7, normalized-entropy: 0.5759084429149787, [(1, 82), (2, 13)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1807612154595554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807612154595554, 0.15857565035112203] ***
*** starting iteration: 2; err: [Inf, 0.1807612154595554, 0.15857565035112203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176] ***
*** starting iteration: 3; err: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176, 0.1510546941133216] ***
*** starting iteration: 4; err: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176, 0.1510546941133216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176, 0.1510546941133216, 0.1499940259065479] ***
*** starting iteration: 5; err: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176, 0.1510546941133216, 0.1499940259065479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176, 0.1510546941133216, 0.1499940259065479, 0.14933838397078217] ***
*** finished computation of 7 references, err: [Inf, 0.1807612154595554, 0.15857565035112203, 0.15381123254448176, 0.1510546941133216, 0.1499940259065479, 0.14933838397078217] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 48, 0]]
** centroid: 1, normalized-entropy: 0.7918583525674836, [(1, 15), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 11, 0]]
** centroid: 2, normalized-entropy: 0.674398887071447, [(1, 51), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 33, 0]]
** centroid: 3, normalized-entropy: 0.9723594643683989, [(1, 49), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 3, 0]]
** centroid: 4, normalized-entropy: 0.24229218908241482, [(1, 72), (2, 3)]
*** center 5: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 75, 19]]
** centroid: 6, normalized-entropy: 0.7261630586710504, [(2, 75), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2524348913691938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524348913691938, 0.16599898217432202] ***
*** starting iteration: 2; err: [Inf, 0.2524348913691938, 0.16599898217432202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524348913691938, 0.16599898217432202, 0.15614645189698786] ***
*** starting iteration: 3; err: [Inf, 0.2524348913691938, 0.16599898217432202, 0.15614645189698786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524348913691938, 0.16599898217432202, 0.15614645189698786, 0.15344453727453947] ***
*** starting iteration: 4; err: [Inf, 0.2524348913691938, 0.16599898217432202, 0.15614645189698786, 0.15344453727453947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2524348913691938, 0.16599898217432202, 0.15614645189698786, 0.15344453727453947, 0.15249561088345945] ***
*** finished computation of 7 references, err: [Inf, 0.2524348913691938, 0.16599898217432202, 0.15614645189698786, 0.15344453727453947, 0.15249561088345945] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 16]]
** centroid: 1, normalized-entropy: 0.8974271930876951, [(2, 35), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [90, 5, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 90), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 51, 0]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(1, 15), (2, 51)]
*** center 5: selecting labels [1] (freq >= 2) [from [64, 1, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 45, 1]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [18, 46, 0]]
** centroid: 7, normalized-entropy: 0.8571484374283717, [(1, 18), (2, 46)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23559709119051694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583] ***
*** starting iteration: 2; err: [Inf, 0.23559709119051694, 0.1944941351171583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386] ***
*** starting iteration: 3; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254] ***
*** starting iteration: 4; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014] ***
*** starting iteration: 5; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946] ***
*** starting iteration: 6; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204] ***
*** starting iteration: 7; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788] ***
*** starting iteration: 8; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788, 0.1564645743658766] ***
*** starting iteration: 9; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788, 0.1564645743658766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788, 0.1564645743658766, 0.1551629111589864] ***
*** starting iteration: 10; err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788, 0.1564645743658766, 0.1551629111589864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788, 0.1564645743658766, 0.1551629111589864, 0.15394462821446359] ***
*** finished computation of 7 references, err: [Inf, 0.23559709119051694, 0.1944941351171583, 0.18022618520632386, 0.1715157237360254, 0.16528806601651014, 0.16145726868649946, 0.159964872835204, 0.15837106080725788, 0.1564645743658766, 0.1551629111589864, 0.15394462821446359] ***
*** center 1: selecting labels [1] (freq >= 2) [from [81, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [66, 6, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 66), (2, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 22, 21]]
** centroid: 4, normalized-entropy: 0.9996098363678071, [(2, 22), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 32, 0]]
** centroid: 5, normalized-entropy: 0.9766349114440099, [(1, 46), (2, 32)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 73, 0]]
** centroid: 6, normalized-entropy: 0.1773894531859976, [(1, 2), (2, 73)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 43, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19645104056410492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014] ***
*** starting iteration: 2; err: [Inf, 0.19645104056410492, 0.16534092746675014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172] ***
*** starting iteration: 3; err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288] ***
*** starting iteration: 4; err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125] ***
*** starting iteration: 5; err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533] ***
*** starting iteration: 6; err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533, 0.15178858456574382] ***
*** starting iteration: 7; err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533, 0.15178858456574382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533, 0.15178858456574382, 0.1506053563412279] ***
*** starting iteration: 8; err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533, 0.15178858456574382, 0.1506053563412279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533, 0.15178858456574382, 0.1506053563412279, 0.14983652891777455] ***
*** finished computation of 7 references, err: [Inf, 0.19645104056410492, 0.16534092746675014, 0.15945888715796172, 0.15698490521684288, 0.15467514974065125, 0.15341067575104533, 0.15178858456574382, 0.1506053563412279, 0.14983652891777455] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 22]]
** centroid: 3, normalized-entropy: 0.9480782435939054, [(2, 38), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [56, 18, 0]]
** centroid: 4, normalized-entropy: 0.8003922080453356, [(1, 56), (2, 18)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 49, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 6, 0]]
** centroid: 6, normalized-entropy: 0.4021791902022729, [(1, 69), (2, 6)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 68, 0]]
** centroid: 7, normalized-entropy: 0.552495114325111, [(1, 10), (2, 68)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2025491414554417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025491414554417, 0.15584409903734922] ***
*** starting iteration: 2; err: [Inf, 0.2025491414554417, 0.15584409903734922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025491414554417, 0.15584409903734922, 0.14934715032204984] ***
*** starting iteration: 3; err: [Inf, 0.2025491414554417, 0.15584409903734922, 0.14934715032204984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025491414554417, 0.15584409903734922, 0.14934715032204984, 0.14709905628673733] ***
*** starting iteration: 4; err: [Inf, 0.2025491414554417, 0.15584409903734922, 0.14934715032204984, 0.14709905628673733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025491414554417, 0.15584409903734922, 0.14934715032204984, 0.14709905628673733, 0.14629624023661017] ***
*** finished computation of 7 references, err: [Inf, 0.2025491414554417, 0.15584409903734922, 0.14934715032204984, 0.14709905628673733, 0.14629624023661017] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 17, 0]]
** centroid: 1, normalized-entropy: 0.8351164948421137, [(1, 47), (2, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 67, 0]]
** centroid: 4, normalized-entropy: 0.3127333763966432, [(1, 4), (2, 67)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 43, 0]]
** centroid: 5, normalized-entropy: 0.8431619569518377, [(1, 16), (2, 43)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 45, 21]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 45), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [84, 6, 0]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(1, 84), (2, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19366369104385375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19366369104385375, 0.15773380847740917] ***
*** starting iteration: 2; err: [Inf, 0.19366369104385375, 0.15773380847740917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19366369104385375, 0.15773380847740917, 0.15200555335357785] ***
*** starting iteration: 3; err: [Inf, 0.19366369104385375, 0.15773380847740917, 0.15200555335357785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19366369104385375, 0.15773380847740917, 0.15200555335357785, 0.15007262026146054] ***
*** starting iteration: 4; err: [Inf, 0.19366369104385375, 0.15773380847740917, 0.15200555335357785, 0.15007262026146054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19366369104385375, 0.15773380847740917, 0.15200555335357785, 0.15007262026146054, 0.14929177707247437] ***
*** finished computation of 7 references, err: [Inf, 0.19366369104385375, 0.15773380847740917, 0.15200555335357785, 0.15007262026146054, 0.14929177707247437] ***
*** center 1: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 50, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [24, 36, 0]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(1, 24), (2, 36)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 54, 17]]
** centroid: 5, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [89, 25, 0]]
** centroid: 6, normalized-entropy: 0.7588840483719564, [(1, 89), (2, 25)]
*** center 7: selecting labels [1] (freq >= 2) [from [32, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20834762131236492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20834762131236492, 0.1557109478916973] ***
*** starting iteration: 2; err: [Inf, 0.20834762131236492, 0.1557109478916973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20834762131236492, 0.1557109478916973, 0.1484475867608562] ***
*** starting iteration: 3; err: [Inf, 0.20834762131236492, 0.1557109478916973, 0.1484475867608562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20834762131236492, 0.1557109478916973, 0.1484475867608562, 0.1462004723136779] ***
*** starting iteration: 4; err: [Inf, 0.20834762131236492, 0.1557109478916973, 0.1484475867608562, 0.1462004723136779] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20834762131236492, 0.1557109478916973, 0.1484475867608562, 0.1462004723136779, 0.1454627921357751] ***
*** finished computation of 7 references, err: [Inf, 0.20834762131236492, 0.1557109478916973, 0.1484475867608562, 0.1462004723136779, 0.1454627921357751] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 66, 0]]
** centroid: 1, normalized-entropy: 0.3159971329784246, [(1, 4), (2, 66)]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 3, 0]]
** centroid: 3, normalized-entropy: 0.269828447703074, [(1, 62), (2, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 49, 15]]
** centroid: 4, normalized-entropy: 0.7855602922535471, [(2, 49), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 56, 0]]
** centroid: 5, normalized-entropy: 0.6136190195993708, [(1, 10), (2, 56)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3074948514234275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3074948514234275, 0.18399086324684322] ***
*** starting iteration: 2; err: [Inf, 0.3074948514234275, 0.18399086324684322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552] ***
*** starting iteration: 3; err: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975] ***
*** starting iteration: 4; err: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975, 0.15673407903965564] ***
*** starting iteration: 5; err: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975, 0.15673407903965564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975, 0.15673407903965564, 0.15289198801666498] ***
*** starting iteration: 6; err: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975, 0.15673407903965564, 0.15289198801666498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975, 0.15673407903965564, 0.15289198801666498, 0.1520968975778669] ***
*** finished computation of 7 references, err: [Inf, 0.3074948514234275, 0.18399086324684322, 0.16913660262152552, 0.16286937976581975, 0.15673407903965564, 0.15289198801666498, 0.1520968975778669] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 27, 0]]
** centroid: 2, normalized-entropy: 0.829952434172285, [(1, 76), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 31, 0]]
** centroid: 3, normalized-entropy: 0.995978956518722, [(1, 36), (2, 31)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 63, 19]]
** centroid: 4, normalized-entropy: 0.7809756883263416, [(2, 63), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 2, 0]]
** centroid: 7, normalized-entropy: 0.22853814395352806, [(1, 52), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19085204285103827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19085204285103827, 0.1554302219157107] ***
*** starting iteration: 2; err: [Inf, 0.19085204285103827, 0.1554302219157107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976] ***
*** starting iteration: 3; err: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976, 0.14733255133219064] ***
*** starting iteration: 4; err: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976, 0.14733255133219064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976, 0.14733255133219064, 0.14564993045851587] ***
*** starting iteration: 5; err: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976, 0.14733255133219064, 0.14564993045851587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976, 0.14733255133219064, 0.14564993045851587, 0.14506181299220772] ***
*** finished computation of 7 references, err: [Inf, 0.19085204285103827, 0.1554302219157107, 0.14997395566198976, 0.14733255133219064, 0.14564993045851587, 0.14506181299220772] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 65, 22]]
** centroid: 1, normalized-entropy: 0.8158009273789572, [(2, 65), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 29, 0]]
** centroid: 2, normalized-entropy: 0.8429359403268015, [(1, 78), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 32, 0]]
** centroid: 5, normalized-entropy: 0.9922666387194963, [(1, 26), (2, 32)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 43, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 9, 0]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(1, 39), (2, 9)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2148258656077087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334] ***
*** starting iteration: 2; err: [Inf, 0.2148258656077087, 0.1802908457806334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042] ***
*** starting iteration: 3; err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047] ***
*** starting iteration: 4; err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956] ***
*** starting iteration: 5; err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216] ***
*** starting iteration: 6; err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216, 0.15226620080694556] ***
*** starting iteration: 7; err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216, 0.15226620080694556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216, 0.15226620080694556, 0.151086981350556] ***
*** starting iteration: 8; err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216, 0.15226620080694556, 0.151086981350556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216, 0.15226620080694556, 0.151086981350556, 0.1502106663584709] ***
*** finished computation of 7 references, err: [Inf, 0.2148258656077087, 0.1802908457806334, 0.16626607786864042, 0.15861807209067047, 0.15540091836079956, 0.15345502207428216, 0.15226620080694556, 0.151086981350556, 0.1502106663584709] ***
*** center 1: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 37, 0]]
** centroid: 2, normalized-entropy: 0.8478617451660525, [(1, 14), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 29, 0]]
** centroid: 4, normalized-entropy: 0.9106223680988619, [(1, 60), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [19, 45, 0]]
** centroid: 5, normalized-entropy: 0.877437311089633, [(1, 19), (2, 45)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 70, 15]]
** centroid: 6, normalized-entropy: 0.6722948170756378, [(2, 70), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1754433198813349] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1754433198813349, 0.16035268432833255] ***
*** starting iteration: 2; err: [Inf, 0.1754433198813349, 0.16035268432833255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677] ***
*** starting iteration: 3; err: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677, 0.1509851253554225] ***
*** starting iteration: 4; err: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677, 0.1509851253554225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677, 0.1509851253554225, 0.14937955539952963] ***
*** starting iteration: 5; err: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677, 0.1509851253554225, 0.14937955539952963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677, 0.1509851253554225, 0.14937955539952963, 0.14873887995816767] ***
*** finished computation of 7 references, err: [Inf, 0.1754433198813349, 0.16035268432833255, 0.15425756376236677, 0.1509851253554225, 0.14937955539952963, 0.14873887995816767] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [29, 28, 0]]
** centroid: 1, normalized-entropy: 0.9997779672118906, [(1, 29), (2, 28)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [5, 66, 0]]
** centroid: 3, normalized-entropy: 0.3674984948272913, [(1, 5), (2, 66)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 32, 0]]
** centroid: 4, normalized-entropy: 0.9738354819891416, [(1, 47), (2, 32)]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 59, 17]]
** centroid: 6, normalized-entropy: 0.7668379316856329, [(2, 59), (3, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17194290198851378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17194290198851378, 0.14926927429717035] ***
*** starting iteration: 2; err: [Inf, 0.17194290198851378, 0.14926927429717035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17194290198851378, 0.14926927429717035, 0.14750592873618007] ***
*** starting iteration: 3; err: [Inf, 0.17194290198851378, 0.14926927429717035, 0.14750592873618007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17194290198851378, 0.14926927429717035, 0.14750592873618007, 0.14715934029407798] ***
*** finished computation of 7 references, err: [Inf, 0.17194290198851378, 0.14926927429717035, 0.14750592873618007, 0.14715934029407798] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 53, 19]]
** centroid: 1, normalized-entropy: 0.8325582396745668, [(2, 53), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 49, 0]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(1, 21), (2, 49)]
*** center 3: selecting labels [1] (freq >= 2) [from [45, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 54, 0]]
** centroid: 4, normalized-entropy: 0.36205125173399805, [(1, 4), (2, 54)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 24, 0]]
** centroid: 5, normalized-entropy: 0.8030909760146977, [(1, 74), (2, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18577679637353867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862] ***
*** starting iteration: 2; err: [Inf, 0.18577679637353867, 0.1617034437134862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199] ***
*** starting iteration: 3; err: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321] ***
*** starting iteration: 4; err: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334] ***
*** starting iteration: 5; err: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334, 0.14985346909612418] ***
*** starting iteration: 6; err: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334, 0.14985346909612418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334, 0.14985346909612418, 0.14877673891698942] ***
*** starting iteration: 7; err: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334, 0.14985346909612418, 0.14877673891698942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334, 0.14985346909612418, 0.14877673891698942, 0.14812530663702636] ***
*** finished computation of 7 references, err: [Inf, 0.18577679637353867, 0.1617034437134862, 0.15555480776727199, 0.1529296415541321, 0.1513968297606334, 0.14985346909612418, 0.14877673891698942, 0.14812530663702636] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 43, 0]]
** centroid: 1, normalized-entropy: 0.8042522359016421, [(1, 14), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 30, 0]]
** centroid: 2, normalized-entropy: 0.8739810481273581, [(1, 72), (2, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [9, 55, 0]]
** centroid: 4, normalized-entropy: 0.5858732928619204, [(1, 9), (2, 55)]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 64, 18]]
** centroid: 6, normalized-entropy: 0.7592757847892834, [(2, 64), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31157987571321427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597] ***
*** starting iteration: 2; err: [Inf, 0.31157987571321427, 0.20642476989142597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354] ***
*** starting iteration: 3; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385] ***
*** starting iteration: 4; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935] ***
*** starting iteration: 5; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908] ***
*** starting iteration: 6; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738] ***
*** starting iteration: 7; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738, 0.15492130953539163] ***
*** starting iteration: 8; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738, 0.15492130953539163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738, 0.15492130953539163, 0.15391689025936647] ***
*** starting iteration: 9; err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738, 0.15492130953539163, 0.15391689025936647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738, 0.15492130953539163, 0.15391689025936647, 0.15300176564324647] ***
*** finished computation of 7 references, err: [Inf, 0.31157987571321427, 0.20642476989142597, 0.17548145928932354, 0.1650488623045385, 0.16019375578220935, 0.1575148536413908, 0.15613115928787738, 0.15492130953539163, 0.15391689025936647, 0.15300176564324647] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 51, 17]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 51), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 25, 0]]
** centroid: 4, normalized-entropy: 0.9445911819316588, [(1, 44), (2, 25)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 72, 4]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 72), (3, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [43, 24, 0]]
** centroid: 6, normalized-entropy: 0.9411864371816836, [(1, 43), (2, 24)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 12, 0]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(1, 78), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22769286825787277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22769286825787277, 0.17562229378335178] ***
*** starting iteration: 2; err: [Inf, 0.22769286825787277, 0.17562229378335178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345] ***
*** starting iteration: 3; err: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417] ***
*** starting iteration: 4; err: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417, 0.15531291383923962] ***
*** starting iteration: 5; err: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417, 0.15531291383923962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417, 0.15531291383923962, 0.15324729265086354] ***
*** starting iteration: 6; err: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417, 0.15531291383923962, 0.15324729265086354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417, 0.15531291383923962, 0.15324729265086354, 0.15251816869154572] ***
*** finished computation of 7 references, err: [Inf, 0.22769286825787277, 0.17562229378335178, 0.16235001184628345, 0.15828022517636417, 0.15531291383923962, 0.15324729265086354, 0.15251816869154572] ***
*** center 1: selecting labels [1] (freq >= 2) [from [37, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [79, 33, 0]]
** centroid: 2, normalized-entropy: 0.8746434484431391, [(1, 79), (2, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 20]]
** centroid: 4, normalized-entropy: 0.8063495153650776, [(2, 61), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 31, 0]]
** centroid: 5, normalized-entropy: 0.992563136012236, [(1, 38), (2, 31)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 52, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2590246846135706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005] ***
*** starting iteration: 2; err: [Inf, 0.2590246846135706, 0.16285524350591005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261] ***
*** starting iteration: 3; err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768] ***
*** starting iteration: 4; err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802] ***
*** starting iteration: 5; err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952] ***
*** starting iteration: 6; err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952, 0.14684341040812432] ***
*** starting iteration: 7; err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952, 0.14684341040812432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952, 0.14684341040812432, 0.14579685565643014] ***
*** starting iteration: 8; err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952, 0.14684341040812432, 0.14579685565643014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952, 0.14684341040812432, 0.14579685565643014, 0.14546716912835836] ***
*** finished computation of 7 references, err: [Inf, 0.2590246846135706, 0.16285524350591005, 0.1556047166120261, 0.1522281671622768, 0.14960567852202802, 0.1479335163719952, 0.14684341040812432, 0.14579685565643014, 0.14546716912835836] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 10]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(2, 64), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 2, 0]]
** centroid: 2, normalized-entropy: 0.19823496409776642, [(1, 63), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 4, 0]]
** centroid: 3, normalized-entropy: 0.3411538931451763, [(1, 59), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [17, 54, 0]]
** centroid: 4, normalized-entropy: 0.7941021417852022, [(1, 17), (2, 54)]
*** center 5: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 54, 0]]
** centroid: 6, normalized-entropy: 0.8271595195340525, [(1, 19), (2, 54)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21682290146872402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682290146872402, 0.15332721581868827] ***
*** starting iteration: 2; err: [Inf, 0.21682290146872402, 0.15332721581868827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682290146872402, 0.15332721581868827, 0.15133857452124358] ***
*** starting iteration: 3; err: [Inf, 0.21682290146872402, 0.15332721581868827, 0.15133857452124358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21682290146872402, 0.15332721581868827, 0.15133857452124358, 0.1507775522880256] ***
*** finished computation of 7 references, err: [Inf, 0.21682290146872402, 0.15332721581868827, 0.15133857452124358, 0.1507775522880256] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 58, 6]]
** centroid: 1, normalized-entropy: 0.44886448872302936, [(2, 58), (3, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 15, 0]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(1, 51), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 39, 0]]
** centroid: 4, normalized-entropy: 0.9998783322990061, [(1, 38), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 12, 0]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(1, 68), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 8, 0]]
** centroid: 6, normalized-entropy: 0.47299536229314826, [(1, 71), (2, 8)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 38, 8]]
** centroid: 7, normalized-entropy: 0.6665783579949205, [(2, 38), (3, 8)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21596300560142845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21596300560142845, 0.17325575636699797] ***
*** starting iteration: 2; err: [Inf, 0.21596300560142845, 0.17325575636699797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362] ***
*** starting iteration: 3; err: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362, 0.14877612425014378] ***
*** starting iteration: 4; err: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362, 0.14877612425014378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362, 0.14877612425014378, 0.1467435379996896] ***
*** starting iteration: 5; err: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362, 0.14877612425014378, 0.1467435379996896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362, 0.14877612425014378, 0.1467435379996896, 0.14648516414128243] ***
*** finished computation of 7 references, err: [Inf, 0.21596300560142845, 0.17325575636699797, 0.15423260331852362, 0.14877612425014378, 0.1467435379996896, 0.14648516414128243] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 22, 0]]
** centroid: 2, normalized-entropy: 0.8582307926411409, [(1, 56), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 50, 0]]
** centroid: 3, normalized-entropy: 0.9695235828220429, [(1, 33), (2, 50)]
*** center 4: selecting labels [1] (freq >= 2) [from [74, 1, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 68, 19]]
** centroid: 6, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [12, 33, 0]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(1, 12), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2339098740713671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416] ***
*** starting iteration: 2; err: [Inf, 0.2339098740713671, 0.17400415836833416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068] ***
*** starting iteration: 3; err: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354] ***
*** starting iteration: 4; err: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564] ***
*** starting iteration: 5; err: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564, 0.15054209159687162] ***
*** starting iteration: 6; err: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564, 0.15054209159687162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564, 0.15054209159687162, 0.1494194525014609] ***
*** starting iteration: 7; err: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564, 0.15054209159687162, 0.1494194525014609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564, 0.15054209159687162, 0.1494194525014609, 0.1490359038449824] ***
*** finished computation of 7 references, err: [Inf, 0.2339098740713671, 0.17400415836833416, 0.15802591410838068, 0.15330182121880354, 0.15197604060545564, 0.15054209159687162, 0.1494194525014609, 0.1490359038449824] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 17, 0]]
** centroid: 1, normalized-entropy: 0.7615877869576693, [(1, 60), (2, 17)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 21]]
** centroid: 2, normalized-entropy: 0.8605553930586318, [(2, 53), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [25, 44, 0]]
** centroid: 3, normalized-entropy: 0.9445911819316588, [(1, 25), (2, 44)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 56, 0]]
** centroid: 4, normalized-entropy: 0.21639693245126485, [(1, 2), (2, 56)]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 8, 0]]
** centroid: 7, normalized-entropy: 0.4612160405139095, [(1, 74), (2, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22862034982908516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483] ***
*** starting iteration: 2; err: [Inf, 0.22862034982908516, 0.17584248729981483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259] ***
*** starting iteration: 3; err: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879] ***
*** starting iteration: 4; err: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977] ***
*** starting iteration: 5; err: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977, 0.15166335923969745] ***
*** starting iteration: 6; err: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977, 0.15166335923969745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977, 0.15166335923969745, 0.15056715442519636] ***
*** starting iteration: 7; err: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977, 0.15166335923969745, 0.15056715442519636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977, 0.15166335923969745, 0.15056715442519636, 0.15007125901710242] ***
*** finished computation of 7 references, err: [Inf, 0.22862034982908516, 0.17584248729981483, 0.16495546016935259, 0.1585850671324879, 0.15408998827449977, 0.15166335923969745, 0.15056715442519636, 0.15007125901710242] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 47, 0]]
** centroid: 1, normalized-entropy: 0.2460225782203316, [(1, 2), (2, 47)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 65, 21]]
** centroid: 2, normalized-entropy: 0.8019325020834525, [(2, 65), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [16, 44, 0]]
** centroid: 4, normalized-entropy: 0.8366407419411671, [(1, 16), (2, 44)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 23, 0]]
** centroid: 5, normalized-entropy: 0.7700664782920602, [(1, 79), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22590763369575143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22590763369575143, 0.1763694694787264] ***
*** starting iteration: 2; err: [Inf, 0.22590763369575143, 0.1763694694787264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853] ***
*** starting iteration: 3; err: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703] ***
*** starting iteration: 4; err: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703, 0.15056772828567774] ***
*** starting iteration: 5; err: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703, 0.15056772828567774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703, 0.15056772828567774, 0.14896503405552358] ***
*** starting iteration: 6; err: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703, 0.15056772828567774, 0.14896503405552358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703, 0.15056772828567774, 0.14896503405552358, 0.14848168801516295] ***
*** finished computation of 7 references, err: [Inf, 0.22590763369575143, 0.1763694694787264, 0.1587364652454853, 0.15311242850031703, 0.15056772828567774, 0.14896503405552358, 0.14848168801516295] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 25, 0]]
** centroid: 1, normalized-entropy: 0.9571814385446724, [(1, 41), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 20, 0]]
** centroid: 2, normalized-entropy: 0.7467366074830678, [(1, 74), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 25, 0]]
** centroid: 4, normalized-entropy: 0.9315627684809641, [(1, 47), (2, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 108, 13]]
** centroid: 7, normalized-entropy: 0.4921395466176624, [(2, 108), (3, 13)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3111106321290135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523] ***
*** starting iteration: 2; err: [Inf, 0.3111106321290135, 0.204247764531523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037] ***
*** starting iteration: 3; err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135] ***
*** starting iteration: 4; err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946] ***
*** starting iteration: 5; err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421] ***
*** starting iteration: 6; err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421, 0.1541015422195196] ***
*** starting iteration: 7; err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421, 0.1541015422195196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421, 0.1541015422195196, 0.15304787509795278] ***
*** starting iteration: 8; err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421, 0.1541015422195196, 0.15304787509795278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421, 0.1541015422195196, 0.15304787509795278, 0.1521164758289233] ***
*** finished computation of 7 references, err: [Inf, 0.3111106321290135, 0.204247764531523, 0.17594028572645037, 0.16425639711134135, 0.15835095082595946, 0.15571402489021421, 0.1541015422195196, 0.15304787509795278, 0.1521164758289233] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 2, 0]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(1, 44), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 28, 0]]
** centroid: 4, normalized-entropy: 0.8554508105601307, [(1, 72), (2, 28)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 93, 16]]
** centroid: 5, normalized-entropy: 0.601746073097597, [(2, 93), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [28, 39, 0]]
** centroid: 6, normalized-entropy: 0.9804679314541813, [(1, 28), (2, 39)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [53, 21, 0]]
** centroid: 7, normalized-entropy: 0.8605553930586318, [(1, 53), (2, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26133705755881964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26133705755881964, 0.1728492103740573] ***
*** starting iteration: 2; err: [Inf, 0.26133705755881964, 0.1728492103740573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784] ***
*** starting iteration: 3; err: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507] ***
*** starting iteration: 4; err: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507, 0.1571549153085798] ***
*** starting iteration: 5; err: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507, 0.1571549153085798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507, 0.1571549153085798, 0.15611357911955565] ***
*** starting iteration: 6; err: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507, 0.1571549153085798, 0.15611357911955565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507, 0.1571549153085798, 0.15611357911955565, 0.15569305745512246] ***
*** finished computation of 7 references, err: [Inf, 0.26133705755881964, 0.1728492103740573, 0.16327153038419784, 0.1592294374173507, 0.1571549153085798, 0.15611357911955565, 0.15569305745512246] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [64, 43, 0]]
** centroid: 1, normalized-entropy: 0.9720334868479672, [(1, 64), (2, 43)]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [34, 4, 0]]
** centroid: 4, normalized-entropy: 0.48546076074591343, [(1, 34), (2, 4)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 80, 17]]
** centroid: 5, normalized-entropy: 0.6695920597928519, [(2, 80), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 48, 0]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(1, 8), (2, 48)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [69, 2, 0]]
** centroid: 7, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2331833080323413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2331833080323413, 0.18477623659931122] ***
*** starting iteration: 2; err: [Inf, 0.2331833080323413, 0.18477623659931122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603] ***
*** starting iteration: 3; err: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106] ***
*** starting iteration: 4; err: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106, 0.147607923113741] ***
*** starting iteration: 5; err: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106, 0.147607923113741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106, 0.147607923113741, 0.14515615961886943] ***
*** starting iteration: 6; err: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106, 0.147607923113741, 0.14515615961886943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106, 0.147607923113741, 0.14515615961886943, 0.1441840679422021] ***
*** finished computation of 7 references, err: [Inf, 0.2331833080323413, 0.18477623659931122, 0.1611506572747603, 0.15091193863470106, 0.147607923113741, 0.14515615961886943, 0.1441840679422021] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 20, 0]]
** centroid: 2, normalized-entropy: 0.8418521897563208, [(1, 54), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 59, 0]]
** centroid: 3, normalized-entropy: 0.5969995167604553, [(1, 10), (2, 59)]
*** center 4: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 31, 16]]
** centroid: 7, normalized-entropy: 0.9252253278054431, [(2, 31), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2786949279345572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2786949279345572, 0.17461980425845833] ***
*** starting iteration: 2; err: [Inf, 0.2786949279345572, 0.17461980425845833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525] ***
*** starting iteration: 3; err: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525, 0.14819493298465386] ***
*** starting iteration: 4; err: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525, 0.14819493298465386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525, 0.14819493298465386, 0.14503366679232568] ***
*** starting iteration: 5; err: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525, 0.14819493298465386, 0.14503366679232568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525, 0.14819493298465386, 0.14503366679232568, 0.14429405632056297] ***
*** finished computation of 7 references, err: [Inf, 0.2786949279345572, 0.17461980425845833, 0.1523682654723525, 0.14819493298465386, 0.14503366679232568, 0.14429405632056297] ***
*** center 1: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 60, 21]]
** centroid: 2, normalized-entropy: 0.8256265261578954, [(2, 60), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [11, 63, 0]]
** centroid: 4, normalized-entropy: 0.6064481901491525, [(1, 11), (2, 63)]
*** center 5: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [79, 2, 0]]
** centroid: 6, normalized-entropy: 0.16702680404522793, [(1, 79), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [23, 45, 0]]
** centroid: 7, normalized-entropy: 0.9231199835423002, [(1, 23), (2, 45)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2541249962579459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2541249962579459, 0.16682830308005214] ***
*** starting iteration: 2; err: [Inf, 0.2541249962579459, 0.16682830308005214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469] ***
*** starting iteration: 3; err: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469, 0.1492627118974924] ***
*** starting iteration: 4; err: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469, 0.1492627118974924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469, 0.1492627118974924, 0.14813702710717916] ***
*** starting iteration: 5; err: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469, 0.1492627118974924, 0.14813702710717916] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469, 0.1492627118974924, 0.14813702710717916, 0.14730456349253654] ***
*** finished computation of 7 references, err: [Inf, 0.2541249962579459, 0.16682830308005214, 0.1528091470771469, 0.1492627118974924, 0.14813702710717916, 0.14730456349253654] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 29, 0]]
** centroid: 2, normalized-entropy: 0.9029416720373132, [(1, 62), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [16, 59, 0]]
** centroid: 4, normalized-entropy: 0.7478061583312324, [(1, 16), (2, 59)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 27, 0]]
** centroid: 5, normalized-entropy: 0.9823166080205502, [(1, 37), (2, 27)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 65, 13]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 65), (3, 13)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24388701886124908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822] ***
*** starting iteration: 2; err: [Inf, 0.24388701886124908, 0.17786721131391822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956] ***
*** starting iteration: 3; err: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977] ***
*** starting iteration: 4; err: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506] ***
*** starting iteration: 5; err: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506, 0.15192269760463387] ***
*** starting iteration: 6; err: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506, 0.15192269760463387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506, 0.15192269760463387, 0.15023867484927178] ***
*** starting iteration: 7; err: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506, 0.15192269760463387, 0.15023867484927178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506, 0.15192269760463387, 0.15023867484927178, 0.14963372945040465] ***
*** finished computation of 7 references, err: [Inf, 0.24388701886124908, 0.17786721131391822, 0.1635260061332956, 0.1589021712820977, 0.15503645808808506, 0.15192269760463387, 0.15023867484927178, 0.14963372945040465] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [65, 37, 0]]
** centroid: 1, normalized-entropy: 0.9449382598624693, [(1, 65), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [24, 34, 0]]
** centroid: 2, normalized-entropy: 0.9784493292686188, [(1, 24), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 79, 16]]
** centroid: 3, normalized-entropy: 0.6540800387941991, [(2, 79), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 30, 0]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(1, 50), (2, 30)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 357,3 => 34,1 => 609), Dict(2 => 366,3 => 29,1 => 605))
[ Info: ===== scores for single classifier: {"micro_f1":0.908,"precision":0.908,"recall":0.908,"macro_recall":0.9338406418883318,"macro_f1":0.8470390317270348,"accuracy":0.908,"class_f1":{"2":0.875338753387534,"3":0.725,"1":0.9407783417935701},"class_precision":{"2":0.8682795698924731,"3":0.5686274509803921,"1":0.9636048526863085},"class_recall":{"2":0.8825136612021858,"3":1.0,"1":0.9190082644628099}}
[ Info: ===== scores for 1: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9751960740038236,"macro_f1":0.9239483230362451,"accuracy":0.97,"class_f1":{"2":0.958100558659218,"3":0.8285714285714285,"1":0.985172981878089},"class_precision":{"2":0.98,"3":0.7073170731707317,"1":0.9819376026272578},"class_recall":{"2":0.9371584699453552,"3":1.0,"1":0.9884297520661157}}
[ Info: ===== scores for 5: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.96879826581764,"macro_f1":0.9173064202690945,"accuracy":0.961,"class_f1":{"2":0.9456066945606694,"3":0.8285714285714285,"1":0.9777411376751856},"class_precision":{"2":0.9658119658119658,"3":0.7073170731707317,"1":0.975328947368421},"class_recall":{"2":0.9262295081967213,"3":1.0,"1":0.9801652892561984}}
[ Info: ===== scores for 7: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.9698776136928148,"macro_f1":0.9330824304321054,"accuracy":0.961,"class_f1":{"2":0.9460580912863071,"3":0.8787878787878788,"1":0.9744013212221304},"class_precision":{"2":0.957983193277311,"3":0.7837837837837838,"1":0.9735973597359736},"class_recall":{"2":0.9344262295081968,"3":1.0,"1":0.9752066115702479}}
[ Info: ===== scores for 9: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9761068208162098,"macro_f1":0.9445996636301066,"accuracy":0.971,"class_f1":{"2":0.9595536959553697,"3":0.8923076923076924,"1":0.9819376026272578},"class_precision":{"2":0.98005698005698,"3":0.8055555555555556,"1":0.9755301794453507},"class_recall":{"2":0.9398907103825137,"3":1.0,"1":0.9884297520661157}}
[ Info: ===== scores for 11: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9750048924415542,"macro_f1":0.9389141331757105,"accuracy":0.969,"class_f1":{"2":0.9568845618915159,"3":0.8787878787878788,"1":0.9810699588477366},"class_precision":{"2":0.9745042492917847,"3":0.7837837837837838,"1":0.9770491803278688},"class_recall":{"2":0.9398907103825137,"3":1.0,"1":0.9851239669421488}}
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.97,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9751960740038236,"macro_f1":0.9203290426227908,"accuracy":0.97,"class_f1":{"2":0.958100558659218,"3":0.8169014084507042,"1":0.9859851607584501},"class_precision":{"2":0.98,"3":0.6904761904761905,"1":0.9835526315789473},"class_recall":{"2":0.9371584699453552,"3":1.0,"1":0.9884297520661157}}
Test Summary: | Pass  Total
AKNC          |    8      8
[547, 6, 4, 4, 2, 4, 1, 2, 10, 11, 3, 4, 1, 5, 6, 1, 4, 22, 2, 21, 28, 5, 1, 65, 5, 4, 9, 3, 4, 1, 10, 3, 6, 6, 3, 14, 5, 5, 7, 17, 2, 27, 5, 14, 5, 5, 6, 20, 16, 21, 3, 13, 11, 12, 19, 5, 59, 36, 14, 8, 2, 37, 48, 26, 8, 29, 5, 11, 41, 13, 48, 18, 21, 32, 18, 6, 21, 6, 32, 9, 5, 18, 12, 7, 28, 13, 34, 8, 13, 37, 4, 7, 10, 55, 35, 22, 27, 24, 25, 8, 37, 2, 3, 14, 3, 11, 22, 8, 5, 6, 5, 37, 58, 7, 12, 10, 27, 25, 28, 48, 51, 8, 42, 8, 31, 23, 170, 2, 16, 1, 22, 24, 3, 12, 13, 71, 4, 5, 7, 19, 6, 29, 54, 60, 20, 18, 27, 45, 11, 6, 38, 40, 49, 14, 10, 65, 10, 28, 4, 912, 32, 33, 32, 28, 2, 5, 9, 21, 52, 21, 12, 5, 5, 14, 89, 274, 2, 9, 12, 30, 21, 13, 11, 8, 11, 7, 20, 29, 21, 86, 5, 91, 10, 9, 41, 70, 7, 38, 1, 7, 41, 25, 8, 1, 36, 43, 37, 18, 128, 20, 97, 42, 25, 9, 11, 8, 3, 9, 33, 36, 775, 38, 14, 11, 12, 24, 46, 44, 22, 75, 14, 10, 6, 8, 3, 4, 33, 16, 62, 103, 75, 59, 16, 98, 19, 4, 24, 242, 24, 18, 108, 21, 89, 8, 14, 35, 36, 34, 39, 29, 3, 4, 76, 44, 39, 18, 10, 2, 58, 2, 21, 20, 15, 31, 51, 2, 16, 289, 80, 22, 6, 18, 14, 20, 12, 153, 6, 35, 5, 22, 36, 144, 27, 18, 82, 2, 61, 45, 16, 9]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6589999999999998, speedup = 0.25800427800224085, eval_ratio = 0.086673)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.43988715277777773,"recall":0.4366319444444444,"f1":null,"seconds":0.00020635314285755157,"exhaustive_search_seconds":0.00035837478935718536,"evaluations":540.03125,"distances_sum":1727.6968957384313}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5946180555555549,"recall":0.5946180555555549,"f1":null,"seconds":0.00046740472316741943,"exhaustive_search_seconds":0.00035837478935718536,"evaluations":693.078125,"distances_sum":1636.0762006257885}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6892361111111108,"recall":0.6892361111111108,"f1":null,"seconds":0.0003911461681127548,"exhaustive_search_seconds":0.00035837478935718536,"evaluations":812.71875,"distances_sum":1596.410014630881}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7499999999999996,"recall":0.7499999999999996,"f1":0.7499999999999996,"seconds":0.0004732869565486908,"exhaustive_search_seconds":0.00035837478935718536,"evaluations":934.625,"distances_sum":1573.6981710465582}
KCenters.DeloneInvIndex> reached performance {"precision":0.8046874999999996,"recall":0.8046874999999996,"f1":0.8046874999999996,"seconds":0.0005723778158426285,"exhaustive_search_seconds":0.00035837478935718536,"evaluations":1099.234375,"distances_sum":1557.080257009841}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7829999999999998, speedup = 0.6231855533139792, eval_ratio = 0.10949600000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
