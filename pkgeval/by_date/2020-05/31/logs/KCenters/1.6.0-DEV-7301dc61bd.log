Julia Version 1.6.0-DEV.137
Commit 7301dc61bd (2020-05-30 15:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MappedArrays ──────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed StatsBase ─────────────────── v0.32.2
  Installed Missings ──────────────────── v0.4.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed OrderedCollections ────────── v1.2.0
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.17
  Installed MLDataUtils ───────────────── v0.5.1
  Installed TableTraits ───────────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Compat ────────────────────── v3.10.0
  Installed Tables ────────────────────── v1.0.4
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Reexport ──────────────────── v0.2.0
  Installed DataFrames ────────────────── v0.20.2
  Installed SimilaritySearch ──────────── v0.3.19
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_YrkSH6/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_YrkSH6/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9364293802777927
[ Info: 0.8307796732584636
[ Info: 0.5541281573474407
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33257337726652625
mean(cdnet.distances) = 0.40811602485676607
mean(crand.distances) = 0.33206948518753054
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8663721694971703,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.21875,"distances_sum":2358.6375337556474}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8663721694971703,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.21875,"distances_sum":2358.6375337556474}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554544413919418,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.8359375,"distances_sum":3015.224584845958}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8727772227772237,"seconds":6.901100277900696e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.328125,"distances_sum":2395.7354202439114}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9554544413919418,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.8359375,"distances_sum":3015.224584845958}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9570200632700637,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.8046875,"distances_sum":3053.3699645262877}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227112,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.859375,"distances_sum":3205.5464723982864}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9622767857142862,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.859375,"distances_sum":3063.8199296555804}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9563072344322349,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.828125,"distances_sum":3043.5431544990993}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227112,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.859375,"distances_sum":3205.5464723982864}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731227106227112,"seconds":6.668269634246826e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.859375,"distances_sum":3205.5464723982864}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4892578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4892578125,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.328125,"distances_sum":1398.0795077640237}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3212890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3212890625,"f1":null,"seconds":3.0938535928726196e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.296875,"distances_sum":945.0878227634842}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3271484375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3271484375,"f1":null,"seconds":2.9280781745910645e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.265625,"distances_sum":952.532366020551}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4892578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.4892578125,"f1":null,"seconds":3.7942081689834595e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.328125,"distances_sum":1398.0795077640237}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6181640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6181640625,"f1":0.7522004037629045,"seconds":4.211440682411194e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2421875,"distances_sum":1812.5914119466472}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8165811618936628,"seconds":4.598870873451233e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.796875,"distances_sum":2037.045933999804}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7701220654345662,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2421875,"distances_sum":1800.3812300390316}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8824670121545131,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3359375,"distances_sum":2432.286540733966}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8824670121545131,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3359375,"distances_sum":2432.286540733966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.938913690476191,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6875,"distances_sum":2786.4770539737096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9127950174825183,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4375,"distances_sum":2640.5907357278616}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9478854478854482,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7890625,"distances_sum":2816.824799141156}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9492304570429576,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2860.797760041866}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9485748626373631,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":2826.629199421656}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9492304570429576,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2860.797760041866}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9492304570429576,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2860.797760041866}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8603141650016658,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.0703125,"distances_sum":2235.628503296435}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.3671875,"distances_sum":972.4729987599703}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":6.6328125,"distances_sum":1030.4795825228089}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8603141650016658,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.0703125,"distances_sum":2235.628503296435}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8671760531135538,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.140625,"distances_sum":2264.1734087561017}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8693023989898997,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.1328125,"distances_sum":2301.8641592097138}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8663053959928968,"seconds":5.027279257774353e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.1875,"distances_sum":2262.2592525578384}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9030479936729945,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.421875,"distances_sum":2514.985231737147}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9030479936729945,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.421875,"distances_sum":2514.985231737147}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359120046620049,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.859375,"distances_sum":2690.1255037661813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9289205586080596,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.78125,"distances_sum":2662.3892673140867}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9368017399267405,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8046875,"distances_sum":2728.4341312384145}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":11,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9368017399267405,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8046875,"distances_sum":2728.4341312384145}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.892578125,"state":{"ssize":11,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9368017399267405,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.8046875,"distances_sum":2728.4341312384145}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":0.9883742559523809,"recall":0.751953125,"f1":0.8465037566600073,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1796875,"distances_sum":1642.5638413425554}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1513671875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1513671875,"f1":null,"seconds":3.1068921089172363e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":4.515625,"distances_sum":314.408876032962}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9865885416666667,"recall":0.51171875,"f1":0.6601337031024536,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":6.8984375,"distances_sum":1034.7952986299545}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":4,"bsize":5},"perf":{"precision":0.9883742559523809,"recall":0.751953125,"f1":0.8465037566600073,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.1796875,"distances_sum":1642.5638413425554}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":0.9906715029761906,"recall":0.875,"f1":0.9242452209249088,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5234375,"distances_sum":2004.3774973849604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9918526785714286,"recall":0.8515625,"f1":0.9110808462370967,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.515625,"distances_sum":1939.7411975610512}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9891648065476188,"recall":0.7763671875,"f1":0.8636671271436899,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.2734375,"distances_sum":1715.188201000999}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":2,"bsize":7},"perf":{"precision":0.9906715029761906,"recall":0.875,"f1":0.9242452209249088,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5234375,"distances_sum":2004.3774973849604}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9878162202380953,"recall":0.9150390625,"f1":0.946302915834166,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8359375,"distances_sum":2161.6768922934725}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":5,"bsize":10}, perf: {"precision":0.9906063988095238,"recall":0.935546875,"f1":0.9604925022893777,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2231.9201295929975}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":3,"bsize":10}, perf: {"precision":0.990141369047619,"recall":0.94140625,"f1":0.9631896749084251,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2237.0455884338717}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9902064732142857,"recall":0.884765625,"f1":0.929188845009158,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.625,"distances_sum":2028.7850317127404}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.984858630952381,"recall":0.919921875,"f1":0.9483573717948721,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8203125,"distances_sum":2197.189606047576}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":0.990141369047619,"recall":0.94140625,"f1":0.9631896749084251,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2237.0455884338717}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":3,"bsize":10},"perf":{"precision":0.990141369047619,"recall":0.94140625,"f1":0.9631896749084251,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.890625,"distances_sum":2237.0455884338717}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8012440684315691,"seconds":4.479661583900452e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.6484375,"distances_sum":1250.6677092024734}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":3.5725533962249756e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.8046875,"distances_sum":661.2097524278204}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.6875,"distances_sum":444.78818230856416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.8012440684315691,"seconds":4.479661583900452e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.6484375,"distances_sum":1250.6677092024734}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.94946771978022,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6796875,"distances_sum":1974.2985277871326}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8999656593406598,"seconds":5.407258868217468e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.265625,"distances_sum":1706.4639396550817}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8725331959706968,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1796875,"distances_sum":1565.729030442221}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.94946771978022,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6796875,"distances_sum":1974.2985277871326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2051.0234589338525}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2051.0234589338525}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.84375,"distances_sum":2051.0234589338525}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.4609375,"distances_sum":774.9211707920331}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8534782925407934,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.9921875,"distances_sum":1555.0736331521525}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8534782925407934,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.9921875,"distances_sum":1555.0736331521525}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597158050283054,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2063.8217231323642}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8983261530136537,"seconds":8.701905608177185e-5,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3515625,"distances_sum":1774.421417386797}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9597158050283054,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8515625,"distances_sum":2063.8217231323642}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2197.7332935783343}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633985805860807,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":2085.9853281796136}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2197.7332935783343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9453125,"distances_sum":2197.7332935783343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.822147846221924e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.6171875,"distances_sum":713.6404122246431}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7886878746253754,"seconds":4.43682074546814e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.03125,"distances_sum":1369.7350406247317}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.0603259801864624e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.0234375,"distances_sum":382.1696488988731}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8574076964701972,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.375,"distances_sum":1636.1050386755944}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8574076964701972,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.375,"distances_sum":1636.1050386755944}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.8965779012654018,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.46875,"distances_sum":1845.1307622180982}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9425137362637367,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6796875,"distances_sum":2063.3491068915846}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9425137362637367,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6796875,"distances_sum":2063.3491068915846}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718750000000004,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.890625,"distances_sum":2252.1994413317493}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718750000000004,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.890625,"distances_sum":2252.1994413317493}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9718750000000004,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.890625,"distances_sum":2252.1994413317493}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5029296875,"f1":0.6509136696636699,"seconds":4.200264811515808e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.90625,"distances_sum":957.5773012980278}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8563374125874135,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.078125,"distances_sum":1625.61759590045}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3330078125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3330078125,"f1":null,"seconds":3.594905138015747e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.5,"distances_sum":627.6153384310986}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7696314102564109,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.4453125,"distances_sum":1308.3352686568705}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8563374125874135,"seconds":5.107372999191284e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.078125,"distances_sum":1625.61759590045}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9288118131868138,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4375,"distances_sum":1942.556293317309}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9002632783882792,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.296875,"distances_sum":1816.9971603291972}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9012945387945395,"seconds":5.230307579040527e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2265625,"distances_sum":1789.8593176326824}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9288118131868138,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4375,"distances_sum":1942.556293317309}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9592834249084256,"seconds":6.1318278312683105e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.78125,"distances_sum":2108.758315004133}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.97358630952381,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2202.9617347400317}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9521291208791216,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":2087.985955200133}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9352449633699639,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.578125,"distances_sum":1991.4638060067473}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9413836163836168,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.53125,"distances_sum":2030.1013239292695}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471268315018321,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.65625,"distances_sum":2049.3452636496477}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945884844322345,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.65625,"distances_sum":2051.2166572640112}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.97358630952381,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2202.9617347400317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.97358630952381,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2202.9617347400317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.882586684149185,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.296875,"distances_sum":1710.0173814496056}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8698546245421256,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.3515625,"distances_sum":1688.4721439123725}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.798828125,"f1":0.882586684149185,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.296875,"distances_sum":1710.0173814496056}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9389423076923082,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":2026.2444502496512}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9589514652014658,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2207.769525529526}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9589514652014658,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2207.769525529526}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772149725274728,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2305.2653228899158}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772149725274728,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2305.2653228899158}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772149725274728,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9296875,"distances_sum":2305.2653228899158}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":1.8961727619171143e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.09375,"distances_sum":443.8874997995301}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":2.592802047729492e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.953125,"distances_sum":742.6823415197474}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.390625,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.390625,"f1":null,"seconds":2.592802047729492e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.953125,"distances_sum":742.6823415197474}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8588349150849158,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.328125,"distances_sum":1561.3194794148305}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7829607892107899,"seconds":2.8274953365325928e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.6171875,"distances_sum":1331.3361136703877}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.79436951936952,"seconds":3.157183527946472e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8203125,"distances_sum":1339.5755373644306}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.53515625,"f1":0.6818500943500948,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.078125,"distances_sum":995.6585067660634}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8588349150849158,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.328125,"distances_sum":1561.3194794148305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.926762820512821,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.46875,"distances_sum":1888.1470322095176}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.926762820512821,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.46875,"distances_sum":1888.1470322095176}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.926762820512821,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.46875,"distances_sum":1888.1470322095176}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":2.816319465637207e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.640625,"distances_sum":571.135853920619}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.275390625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.275390625,"f1":null,"seconds":2.816319465637207e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.640625,"distances_sum":571.135853920619}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.275390625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.275390625,"f1":null,"seconds":2.816319465637207e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.640625,"distances_sum":571.135853920619}}, n: 9
mean(cfft.distances) = 0.3526645194520913
mean(cdnet.distances) = 0.3881709656393641
mean(crand.distances) = 0.4397474896771868
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9133333333333332
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9355555555555556
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8755555555555556
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8688888888888889
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9133333333333334
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9511111111111111
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.928888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8799999999999999
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9155555555555557
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9288888888888889
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.86
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8666666666666666
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8333333333333334
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8755555555555555
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.9333333333333333
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.94
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.98
*** finished computation of 12 references, err: [Inf, 0.5749798051516215] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2442196855173298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442196855173298, 0.20490690292482888] ***
*** starting iteration: 2; err: [Inf, 0.2442196855173298, 0.20490690292482888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533] ***
*** starting iteration: 3; err: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533, 0.18920059706288594] ***
*** starting iteration: 4; err: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533, 0.18920059706288594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533, 0.18920059706288594, 0.18719633040298056] ***
*** starting iteration: 5; err: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533, 0.18920059706288594, 0.18719633040298056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533, 0.18920059706288594, 0.18719633040298056, 0.1867209610727814] ***
*** finished computation of 7 references, err: [Inf, 0.2442196855173298, 0.20490690292482888, 0.19555042769379533, 0.18920059706288594, 0.18719633040298056, 0.1867209610727814] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [8, 97, 0]]
** centroid: 1, normalized-entropy: 0.38861174916944274, [(1, 8), (2, 97)]
*** center 2: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 66, 0]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(1, 3), (2, 66)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [83, 1, 0]]
** centroid: 4, normalized-entropy: 0.09317131799548928, [(1, 83), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [131, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [45, 42, 0]]
** centroid: 6, normalized-entropy: 0.999142103991909, [(1, 45), (2, 42)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 26]]
** centroid: 7, normalized-entropy: 0.9225641366401655, [(2, 51), (3, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22829517582431436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22829517582431436, 0.19101813997634248] ***
*** starting iteration: 2; err: [Inf, 0.22829517582431436, 0.19101813997634248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22829517582431436, 0.19101813997634248, 0.1880040581375864] ***
*** starting iteration: 3; err: [Inf, 0.22829517582431436, 0.19101813997634248, 0.1880040581375864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22829517582431436, 0.19101813997634248, 0.1880040581375864, 0.18691122890016562] ***
*** starting iteration: 4; err: [Inf, 0.22829517582431436, 0.19101813997634248, 0.1880040581375864, 0.18691122890016562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22829517582431436, 0.19101813997634248, 0.1880040581375864, 0.18691122890016562, 0.18671487325134017] ***
*** finished computation of 7 references, err: [Inf, 0.22829517582431436, 0.19101813997634248, 0.1880040581375864, 0.18691122890016562, 0.18671487325134017] ***
*** center 1: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 26]]
** centroid: 2, normalized-entropy: 0.9140185106642174, [(2, 53), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 18, 0]]
** centroid: 3, normalized-entropy: 0.7355085815538399, [(1, 69), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 12, 0]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(1, 72), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [12, 89, 0]]
** centroid: 5, normalized-entropy: 0.5259359840917625, [(1, 12), (2, 89)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [25, 85, 0]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(1, 25), (2, 85)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2668487734326777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668487734326777, 0.20241233756461333] ***
*** starting iteration: 2; err: [Inf, 0.2668487734326777, 0.20241233756461333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868] ***
*** starting iteration: 3; err: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868, 0.184341034801702] ***
*** starting iteration: 4; err: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868, 0.184341034801702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868, 0.184341034801702, 0.18207837297124552] ***
*** starting iteration: 5; err: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868, 0.184341034801702, 0.18207837297124552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868, 0.184341034801702, 0.18207837297124552, 0.1817384378826092] ***
*** finished computation of 7 references, err: [Inf, 0.2668487734326777, 0.20241233756461333, 0.19003186790995868, 0.184341034801702, 0.18207837297124552, 0.1817384378826092] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 1, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [52, 45, 0]]
** centroid: 2, normalized-entropy: 0.9962401135461777, [(1, 52), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [26, 75, 0]]
** centroid: 4, normalized-entropy: 0.8228368841492258, [(1, 26), (2, 75)]
*** center 5: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [33, 52, 0]]
** centroid: 6, normalized-entropy: 0.9636512739945752, [(1, 33), (2, 52)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 70, 33]]
** centroid: 7, normalized-entropy: 0.904803273542669, [(2, 70), (3, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30293876669653086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30293876669653086, 0.2603272566518773] ***
*** starting iteration: 2; err: [Inf, 0.30293876669653086, 0.2603272566518773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672] ***
*** starting iteration: 3; err: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672, 0.19907944183098503] ***
*** starting iteration: 4; err: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672, 0.19907944183098503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672, 0.19907944183098503, 0.1947226774874611] ***
*** starting iteration: 5; err: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672, 0.19907944183098503, 0.1947226774874611] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672, 0.19907944183098503, 0.1947226774874611, 0.19424965179831102] ***
*** finished computation of 7 references, err: [Inf, 0.30293876669653086, 0.2603272566518773, 0.2191835244994672, 0.19907944183098503, 0.1947226774874611, 0.19424965179831102] ***
*** center 1: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 19, 0]]
** centroid: 2, normalized-entropy: 0.7347813522127804, [(1, 73), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 69, 21]]
** centroid: 3, normalized-entropy: 0.7837769474847011, [(2, 69), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 93, 0]]
** centroid: 5, normalized-entropy: 0.48702128315977294, [(1, 11), (2, 93)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [81, 36, 0]]
** centroid: 6, normalized-entropy: 0.8904916402194913, [(1, 81), (2, 36)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [30, 37, 0]]
** centroid: 7, normalized-entropy: 0.9921116920021501, [(1, 30), (2, 37)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23978208884529803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23978208884529803, 0.18845800125016376] ***
*** starting iteration: 2; err: [Inf, 0.23978208884529803, 0.18845800125016376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23978208884529803, 0.18845800125016376, 0.18477532570355054] ***
*** starting iteration: 3; err: [Inf, 0.23978208884529803, 0.18845800125016376, 0.18477532570355054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23978208884529803, 0.18845800125016376, 0.18477532570355054, 0.1839579999770807] ***
*** finished computation of 7 references, err: [Inf, 0.23978208884529803, 0.18845800125016376, 0.18477532570355054, 0.1839579999770807] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [8, 98, 0]]
** centroid: 1, normalized-entropy: 0.3860189005698936, [(1, 8), (2, 98)]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 44, 0]]
** centroid: 3, normalized-entropy: 0.9771340293867935, [(1, 63), (2, 44)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 35, 0]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(1, 63), (2, 35)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 66, 33]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 66), (3, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22982221647169904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982221647169904, 0.1884287950712657] ***
*** starting iteration: 2; err: [Inf, 0.22982221647169904, 0.1884287950712657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982221647169904, 0.1884287950712657, 0.18568015331751492] ***
*** starting iteration: 3; err: [Inf, 0.22982221647169904, 0.1884287950712657, 0.18568015331751492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22982221647169904, 0.1884287950712657, 0.18568015331751492, 0.18539906112963092] ***
*** finished computation of 7 references, err: [Inf, 0.22982221647169904, 0.1884287950712657, 0.18568015331751492, 0.18539906112963092] ***
*** center 1: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 14, 0]]
** centroid: 2, normalized-entropy: 0.6278191534832795, [(1, 75), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 21]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 49), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 98, 0]]
** centroid: 5, normalized-entropy: 0.192900074578984, [(1, 3), (2, 98)]
*** center 6: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 93, 0]]
** centroid: 7, normalized-entropy: 0.4596942127956402, [(1, 10), (2, 93)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23045718818119876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23045718818119876, 0.19222283188544503] ***
*** starting iteration: 2; err: [Inf, 0.23045718818119876, 0.19222283188544503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23045718818119876, 0.19222283188544503, 0.1893100394019941] ***
*** starting iteration: 3; err: [Inf, 0.23045718818119876, 0.19222283188544503, 0.1893100394019941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23045718818119876, 0.19222283188544503, 0.1893100394019941, 0.18825648643367282] ***
*** finished computation of 7 references, err: [Inf, 0.23045718818119876, 0.19222283188544503, 0.1893100394019941, 0.18825648643367282] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [80, 17, 0]]
** centroid: 1, normalized-entropy: 0.6695920597928519, [(1, 80), (2, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 16, 0]]
** centroid: 2, normalized-entropy: 0.7478061583312324, [(1, 59), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 64, 26]]
** centroid: 3, normalized-entropy: 0.8672816222000259, [(2, 64), (3, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [95, 4, 0]]
** centroid: 5, normalized-entropy: 0.24414164238829597, [(1, 95), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 45, 0]]
** centroid: 6, normalized-entropy: 0.9914266810680207, [(1, 56), (2, 45)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 111, 0]]
** centroid: 7, normalized-entropy: 0.12831912909782706, [(1, 2), (2, 111)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24416209619514634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416209619514634, 0.19715914376515678] ***
*** starting iteration: 2; err: [Inf, 0.24416209619514634, 0.19715914376515678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416209619514634, 0.19715914376515678, 0.1916858809434626] ***
*** starting iteration: 3; err: [Inf, 0.24416209619514634, 0.19715914376515678, 0.1916858809434626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416209619514634, 0.19715914376515678, 0.1916858809434626, 0.19002059738206184] ***
*** finished computation of 7 references, err: [Inf, 0.24416209619514634, 0.19715914376515678, 0.1916858809434626, 0.19002059738206184] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 82, 0]]
** centroid: 1, normalized-entropy: 0.7843112002044088, [(1, 25), (2, 82)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 5, 0]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 33]]
** centroid: 4, normalized-entropy: 0.9350145588035413, [(2, 61), (3, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 12, 0]]
** centroid: 5, normalized-entropy: 0.5746356978376794, [(1, 76), (2, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 83, 0]]
** centroid: 7, normalized-entropy: 0.2690553027246505, [(1, 4), (2, 83)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24470897686892543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24470897686892543, 0.19463834809935254] ***
*** starting iteration: 2; err: [Inf, 0.24470897686892543, 0.19463834809935254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24470897686892543, 0.19463834809935254, 0.19032093172409814] ***
*** starting iteration: 3; err: [Inf, 0.24470897686892543, 0.19463834809935254, 0.19032093172409814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24470897686892543, 0.19463834809935254, 0.19032093172409814, 0.1879736475808465] ***
*** finished computation of 7 references, err: [Inf, 0.24470897686892543, 0.19463834809935254, 0.19032093172409814, 0.1879736475808465] ***
*** center 1: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [105, 2, 0]]
** centroid: 2, normalized-entropy: 0.13402979616803584, [(1, 105), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 21]]
** centroid: 3, normalized-entropy: 0.8160172973428256, [(2, 62), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 31, 0]]
** centroid: 5, normalized-entropy: 0.9111178649415465, [(1, 64), (2, 31)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 89, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [11, 70, 0]]
** centroid: 7, normalized-entropy: 0.5731393980555147, [(1, 11), (2, 70)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23266935186298401] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23266935186298401, 0.19262337659600307] ***
*** starting iteration: 2; err: [Inf, 0.23266935186298401, 0.19262337659600307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162] ***
*** starting iteration: 3; err: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162, 0.1885401132564108] ***
*** starting iteration: 4; err: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162, 0.1885401132564108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162, 0.1885401132564108, 0.18731858627241407] ***
*** starting iteration: 5; err: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162, 0.1885401132564108, 0.18731858627241407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162, 0.1885401132564108, 0.18731858627241407, 0.18653024535614987] ***
*** finished computation of 7 references, err: [Inf, 0.23266935186298401, 0.19262337659600307, 0.1902475478505162, 0.1885401132564108, 0.18731858627241407, 0.18653024535614987] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 76, 26]]
** centroid: 1, normalized-entropy: 0.8189555018403103, [(2, 76), (3, 26)]
*** center 2: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [73, 20, 0]]
** centroid: 3, normalized-entropy: 0.7510324165275097, [(1, 73), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [72, 45, 0]]
** centroid: 4, normalized-entropy: 0.961236604722876, [(1, 72), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 1, 0]]
** centroid: 5, normalized-entropy: 0.10327508457163559, [(1, 73), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [59, 22, 0]]
** centroid: 6, normalized-entropy: 0.8437582063121657, [(1, 59), (2, 22)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 93, 0]]
** centroid: 7, normalized-entropy: 0.0849955598367127, [(1, 1), (2, 93)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2373700370353045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373700370353045, 0.1888885265732857] ***
*** starting iteration: 2; err: [Inf, 0.2373700370353045, 0.1888885265732857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373700370353045, 0.1888885265732857, 0.18659657274821084] ***
*** starting iteration: 3; err: [Inf, 0.2373700370353045, 0.1888885265732857, 0.18659657274821084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2373700370353045, 0.1888885265732857, 0.18659657274821084, 0.18600925796621967] ***
*** finished computation of 7 references, err: [Inf, 0.2373700370353045, 0.1888885265732857, 0.18659657274821084, 0.18600925796621967] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 47, 0]]
** centroid: 1, normalized-entropy: 0.9795091579328259, [(1, 66), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [77, 12, 0]]
** centroid: 2, normalized-entropy: 0.5705411428522262, [(1, 77), (2, 12)]
*** center 3: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 56, 33]]
** centroid: 4, normalized-entropy: 0.951274087437692, [(2, 56), (3, 33)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 36, 0]]
** centroid: 5, normalized-entropy: 0.9213796449361407, [(1, 71), (2, 36)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 92, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24207666275584358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24207666275584358, 0.192930466513606] ***
*** starting iteration: 2; err: [Inf, 0.24207666275584358, 0.192930466513606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24207666275584358, 0.192930466513606, 0.19000597763527324] ***
*** starting iteration: 3; err: [Inf, 0.24207666275584358, 0.192930466513606, 0.19000597763527324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24207666275584358, 0.192930466513606, 0.19000597763527324, 0.18915869571223878] ***
*** finished computation of 7 references, err: [Inf, 0.24207666275584358, 0.192930466513606, 0.19000597763527324, 0.18915869571223878] ***
*** center 1: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 70, 21]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 70), (3, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 42, 0]]
** centroid: 4, normalized-entropy: 0.9568886656798214, [(1, 69), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 60, 0]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(1, 36), (2, 60)]
*** center 6: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 82, 0]]
** centroid: 7, normalized-entropy: 0.09408443883267342, [(1, 1), (2, 82)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37439149716035564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37439149716035564, 0.29983046780236894] ***
*** starting iteration: 2; err: [Inf, 0.37439149716035564, 0.29983046780236894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169] ***
*** starting iteration: 3; err: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169, 0.29501726787380717] ***
*** starting iteration: 4; err: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169, 0.29501726787380717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169, 0.29501726787380717, 0.29398967869378423] ***
*** starting iteration: 5; err: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169, 0.29501726787380717, 0.29398967869378423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169, 0.29501726787380717, 0.29398967869378423, 0.2935931134616604] ***
*** finished computation of 3 references, err: [Inf, 0.37439149716035564, 0.29983046780236894, 0.2964206260654169, 0.29501726787380717, 0.29398967869378423, 0.2935931134616604] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [244, 16, 0]]
** centroid: 1, normalized-entropy: 0.33352200393097675, [(1, 244), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 184, 26]]
** centroid: 2, normalized-entropy: 0.5402129815415571, [(2, 184), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [139, 57, 0]]
** centroid: 3, normalized-entropy: 0.8697734159725661, [(1, 139), (2, 57)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4961467926017661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961467926017661, 0.31250646108038155] ***
*** starting iteration: 2; err: [Inf, 0.4961467926017661, 0.31250646108038155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961467926017661, 0.31250646108038155, 0.31066338105805813] ***
*** starting iteration: 3; err: [Inf, 0.4961467926017661, 0.31250646108038155, 0.31066338105805813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961467926017661, 0.31250646108038155, 0.31066338105805813, 0.3105925776181684] ***
*** finished computation of 3 references, err: [Inf, 0.4961467926017661, 0.31250646108038155, 0.31066338105805813, 0.3105925776181684] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [68, 169, 33]]
** centroid: 1, normalized-entropy: 0.8168883705196319, [(1, 68), (2, 169), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [200, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 74, 0]]
** centroid: 3, normalized-entropy: 0.9549003818255702, [(1, 123), (2, 74)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.385372670224939] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.385372670224939, 0.3092239394028583] ***
*** starting iteration: 2; err: [Inf, 0.385372670224939, 0.3092239394028583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458] ***
*** starting iteration: 3; err: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458, 0.296144791679091] ***
*** starting iteration: 4; err: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458, 0.296144791679091] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458, 0.296144791679091, 0.29473831279920987] ***
*** starting iteration: 5; err: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458, 0.296144791679091, 0.29473831279920987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458, 0.296144791679091, 0.29473831279920987, 0.2939950276684223] ***
*** finished computation of 3 references, err: [Inf, 0.385372670224939, 0.3092239394028583, 0.2992195718945458, 0.296144791679091, 0.29473831279920987, 0.2939950276684223] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 12, 0]]
** centroid: 1, normalized-entropy: 0.2706065262577151, [(1, 247), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [145, 57, 0]]
** centroid: 2, normalized-entropy: 0.8584018349322116, [(1, 145), (2, 57)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 185, 21]]
** centroid: 3, normalized-entropy: 0.47512074041685076, [(2, 185), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18984559772245296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18984559772245296, 0.15236876422103057] ***
*** starting iteration: 2; err: [Inf, 0.18984559772245296, 0.15236876422103057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18984559772245296, 0.15236876422103057, 0.1492304035550537] ***
*** starting iteration: 3; err: [Inf, 0.18984559772245296, 0.15236876422103057, 0.1492304035550537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18984559772245296, 0.15236876422103057, 0.1492304035550537, 0.14838463422987755] ***
*** finished computation of 7 references, err: [Inf, 0.18984559772245296, 0.15236876422103057, 0.1492304035550537, 0.14838463422987755] ***
*** center 1: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 57, 26]]
** centroid: 2, normalized-entropy: 0.8968928834064589, [(2, 57), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 23, 0]]
** centroid: 3, normalized-entropy: 0.8069896049203007, [(1, 70), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [13, 80, 0]]
** centroid: 4, normalized-entropy: 0.5836753280239112, [(1, 13), (2, 80)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 97, 0]]
** centroid: 5, normalized-entropy: 0.6598509794988008, [(1, 20), (2, 97)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18876321007399172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18876321007399172, 0.15765204857385576] ***
*** starting iteration: 2; err: [Inf, 0.18876321007399172, 0.15765204857385576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18876321007399172, 0.15765204857385576, 0.15211675213049466] ***
*** starting iteration: 3; err: [Inf, 0.18876321007399172, 0.15765204857385576, 0.15211675213049466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18876321007399172, 0.15765204857385576, 0.15211675213049466, 0.15058610333908892] ***
*** finished computation of 7 references, err: [Inf, 0.18876321007399172, 0.15765204857385576, 0.15211675213049466, 0.15058610333908892] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 96, 15]]
** centroid: 1, normalized-entropy: 0.5713549744279549, [(2, 96), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [68, 22, 0]]
** centroid: 3, normalized-entropy: 0.80235344282919, [(1, 68), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 30, 0]]
** centroid: 4, normalized-entropy: 0.9256859869821296, [(1, 58), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [106, 14, 0]]
** centroid: 5, normalized-entropy: 0.5197027865043053, [(1, 106), (2, 14)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 77, 18]]
** centroid: 6, normalized-entropy: 0.7003691487575897, [(2, 77), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [84, 4, 0]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(1, 84), (2, 4)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19245197494532437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19245197494532437, 0.15599669963805593] ***
*** starting iteration: 2; err: [Inf, 0.19245197494532437, 0.15599669963805593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19245197494532437, 0.15599669963805593, 0.15160222757102243] ***
*** starting iteration: 3; err: [Inf, 0.19245197494532437, 0.15599669963805593, 0.15160222757102243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19245197494532437, 0.15599669963805593, 0.15160222757102243, 0.15069417801030774] ***
*** finished computation of 7 references, err: [Inf, 0.19245197494532437, 0.15599669963805593, 0.15160222757102243, 0.15069417801030774] ***
*** center 1: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 16, 0]]
** centroid: 2, normalized-entropy: 0.6581912658132184, [(1, 78), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 62, 21]]
** centroid: 3, normalized-entropy: 0.8160172973428256, [(2, 62), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [28, 77, 0]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(1, 28), (2, 77)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 92, 0]]
** centroid: 6, normalized-entropy: 0.3685567775377064, [(1, 7), (2, 92)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [62, 7, 0]]
** centroid: 7, normalized-entropy: 0.47357292491745173, [(1, 62), (2, 7)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3126237516476026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3126237516476026, 0.22775701795671102] ***
*** starting iteration: 2; err: [Inf, 0.3126237516476026, 0.22775701795671102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3126237516476026, 0.22775701795671102, 0.21147583453152496] ***
*** starting iteration: 3; err: [Inf, 0.3126237516476026, 0.22775701795671102, 0.21147583453152496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3126237516476026, 0.22775701795671102, 0.21147583453152496, 0.19816159573453548] ***
*** finished computation of 7 references, err: [Inf, 0.3126237516476026, 0.22775701795671102, 0.21147583453152496, 0.19816159573453548] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [95, 18, 0]]
** centroid: 1, normalized-entropy: 0.6326131852700402, [(1, 95), (2, 18)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 49, 24]]
** centroid: 2, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 27, 0]]
** centroid: 3, normalized-entropy: 0.9141770436147919, [(1, 55), (2, 27)]
*** center 4: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [111, 2, 0]]
** centroid: 5, normalized-entropy: 0.12831912909782706, [(1, 111), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 87, 2]]
** centroid: 6, normalized-entropy: 0.1551032721030341, [(2, 87), (3, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [6, 74, 0]]
** centroid: 7, normalized-entropy: 0.3843115441264972, [(1, 6), (2, 74)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2845547657775535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2845547657775535, 0.2328878028982918] ***
*** starting iteration: 2; err: [Inf, 0.2845547657775535, 0.2328878028982918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2845547657775535, 0.2328878028982918, 0.21790895176593444] ***
*** starting iteration: 3; err: [Inf, 0.2845547657775535, 0.2328878028982918, 0.21790895176593444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2845547657775535, 0.2328878028982918, 0.21790895176593444, 0.2090339902662735] ***
*** finished computation of 7 references, err: [Inf, 0.2845547657775535, 0.2328878028982918, 0.21790895176593444, 0.2090339902662735] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [94, 48, 0]]
** centroid: 1, normalized-entropy: 0.9229192878686723, [(1, 94), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [99, 21, 0]]
** centroid: 2, normalized-entropy: 0.6690158350565576, [(1, 99), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 118, 33]]
** centroid: 3, normalized-entropy: 0.757498211089806, [(2, 118), (3, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 56, 0]]
** centroid: 4, normalized-entropy: 0.9899136543307622, [(1, 71), (2, 56)]
*** center 5: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23778469861251883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23778469861251883, 0.1941239889473773] ***
*** starting iteration: 2; err: [Inf, 0.23778469861251883, 0.1941239889473773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23778469861251883, 0.1941239889473773, 0.19208315165219145] ***
*** starting iteration: 3; err: [Inf, 0.23778469861251883, 0.1941239889473773, 0.19208315165219145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23778469861251883, 0.1941239889473773, 0.19208315165219145, 0.19097144093582297] ***
*** finished computation of 7 references, err: [Inf, 0.23778469861251883, 0.1941239889473773, 0.19208315165219145, 0.19097144093582297] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 87, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 78, 21]]
** centroid: 3, normalized-entropy: 0.7455178428108284, [(2, 78), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [101, 42, 0]]
** centroid: 4, normalized-entropy: 0.8734609066060872, [(1, 101), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [83, 3, 0]]
** centroid: 5, normalized-entropy: 0.21832103023746746, [(1, 83), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [34, 44, 0]]
** centroid: 6, normalized-entropy: 0.98811083652183, [(1, 34), (2, 44)]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19228653782942295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19228653782942295, 0.16017599038600744] ***
*** finished computation of 7 references, err: [Inf, 0.19228653782942295, 0.16017599038600744] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 47, 0]]
** centroid: 1, normalized-entropy: 0.9992158792218827, [(1, 44), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 2, 0]]
** centroid: 2, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 52, 2]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(2, 52), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [87, 1, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [1, 131, 24]]
** centroid: 5, normalized-entropy: 0.6218178683793104, [(2, 131), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [64, 24, 0]]
** centroid: 7, normalized-entropy: 0.8453509366224364, [(1, 64), (2, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2326991440402972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2326991440402972, 0.1874477015794262] ***
*** finished computation of 7 references, err: [Inf, 0.2326991440402972, 0.1874477015794262] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 61, 0]]
** centroid: 1, normalized-entropy: 0.8063495153650776, [(1, 20), (2, 61)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 97, 33]]
** centroid: 3, normalized-entropy: 0.8173174158670672, [(2, 97), (3, 33)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 53, 0]]
** centroid: 4, normalized-entropy: 0.9955773958501508, [(1, 62), (2, 53)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 32, 0]]
** centroid: 5, normalized-entropy: 0.9649567669505686, [(1, 50), (2, 32)]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19019346346106866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19019346346106866, 0.15971659586504464] ***
*** finished computation of 7 references, err: [Inf, 0.19019346346106866, 0.15971659586504464] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [28, 15, 0]]
** centroid: 2, normalized-entropy: 0.9330252953592912, [(1, 28), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 19, 0]]
** centroid: 3, normalized-entropy: 0.6568871346605055, [(1, 93), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [108, 7, 0]]
** centroid: 4, normalized-entropy: 0.33088714061343766, [(1, 108), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [19, 94, 0]]
** centroid: 5, normalized-entropy: 0.6534358224760193, [(1, 19), (2, 94)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 119, 21]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(2, 119), (3, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1802357067060363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1802357067060363, 0.14764691173733846] ***
*** starting iteration: 2; err: [Inf, 0.1802357067060363, 0.14764691173733846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1802357067060363, 0.14764691173733846, 0.14481083653425356] ***
*** starting iteration: 3; err: [Inf, 0.1802357067060363, 0.14764691173733846, 0.14481083653425356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1802357067060363, 0.14764691173733846, 0.14481083653425356, 0.14382854801834793] ***
*** finished computation of 7 references, err: [Inf, 0.1802357067060363, 0.14764691173733846, 0.14481083653425356, 0.14382854801834793] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 87, 0]]
** centroid: 1, normalized-entropy: 0.9389320105807949, [(1, 48), (2, 87)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 13, 0]]
** centroid: 2, normalized-entropy: 0.6705250693158382, [(1, 61), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 51, 26]]
** centroid: 4, normalized-entropy: 0.9225641366401655, [(2, 51), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [99, 9, 0]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(1, 99), (2, 9)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 97, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21100897423754064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21100897423754064, 0.15008325841434222] ***
*** starting iteration: 2; err: [Inf, 0.21100897423754064, 0.15008325841434222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21100897423754064, 0.15008325841434222, 0.1473259910413328] ***
*** starting iteration: 3; err: [Inf, 0.21100897423754064, 0.15008325841434222, 0.1473259910413328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21100897423754064, 0.15008325841434222, 0.1473259910413328, 0.14646095536632472] ***
*** finished computation of 7 references, err: [Inf, 0.21100897423754064, 0.15008325841434222, 0.1473259910413328, 0.14646095536632472] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [119, 26, 0]]
** centroid: 1, normalized-entropy: 0.6785660106679434, [(1, 119), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 15, 0]]
** centroid: 2, normalized-entropy: 0.7382848661434506, [(1, 57), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 61, 33]]
** centroid: 3, normalized-entropy: 0.9350145588035413, [(2, 61), (3, 33)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [23, 69, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 23), (2, 69)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21349965173868404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21349965173868404, 0.1544421256245484] ***
*** starting iteration: 2; err: [Inf, 0.21349965173868404, 0.1544421256245484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21349965173868404, 0.1544421256245484, 0.14901223169385583] ***
*** starting iteration: 3; err: [Inf, 0.21349965173868404, 0.1544421256245484, 0.14901223169385583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21349965173868404, 0.1544421256245484, 0.14901223169385583, 0.14852961078788834] ***
*** finished computation of 7 references, err: [Inf, 0.21349965173868404, 0.1544421256245484, 0.14901223169385583, 0.14852961078788834] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 45, 0]]
** centroid: 1, normalized-entropy: 0.9962401135461777, [(1, 52), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 5, 0]]
** centroid: 2, normalized-entropy: 0.38705142139219795, [(1, 61), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [84, 25, 0]]
** centroid: 4, normalized-entropy: 0.7768901205770734, [(1, 84), (2, 25)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 87, 21]]
** centroid: 5, normalized-entropy: 0.710676853856123, [(2, 87), (3, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 92, 0]]
** centroid: 7, normalized-entropy: 0.3685567775377064, [(1, 7), (2, 92)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21765618619450308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21765618619450308, 0.19997093831147025] ***
*** finished computation of 7 references, err: [Inf, 0.21765618619450308, 0.19997093831147025] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 70, 0]]
** centroid: 1, normalized-entropy: 0.9584161691555605, [(1, 43), (2, 70)]
*** center 2: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 12, 0]]
** centroid: 3, normalized-entropy: 0.6145715612236268, [(1, 67), (2, 12)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 78, 24]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(2, 78), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [119, 35, 0]]
** centroid: 5, normalized-entropy: 0.7732266742876346, [(1, 119), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 62, 2]]
** centroid: 7, normalized-entropy: 0.2006223243127146, [(2, 62), (3, 2)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20973287497380416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20973287497380416, 0.19873755621672168] ***
*** finished computation of 7 references, err: [Inf, 0.20973287497380416, 0.19873755621672168] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 4, 0]]
** centroid: 1, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [32, 46, 0]]
** centroid: 4, normalized-entropy: 0.9766349114440099, [(1, 32), (2, 46)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 48, 0]]
** centroid: 5, normalized-entropy: 0.9922666387194963, [(1, 39), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [110, 44, 0]]
** centroid: 6, normalized-entropy: 0.8631205685666311, [(1, 110), (2, 44)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 101, 33]]
** centroid: 7, normalized-entropy: 0.8053103419744871, [(2, 101), (3, 33)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29337598412748667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29337598412748667, 0.21459415339972304] ***
*** finished computation of 7 references, err: [Inf, 0.29337598412748667, 0.21459415339972304] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [37, 80, 0]]
** centroid: 3, normalized-entropy: 0.9002448724102409, [(1, 37), (2, 80)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 23, 0]]
** centroid: 4, normalized-entropy: 0.9086185980409245, [(1, 48), (2, 23)]
*** center 5: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 122, 21]]
** centroid: 6, normalized-entropy: 0.6019089517362489, [(2, 122), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [111, 29, 0]]
** centroid: 7, normalized-entropy: 0.7359858024909569, [(1, 111), (2, 29)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9369938801076526, 0.9340178501855148, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 12
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9369938801076526, 0.9340178501855148, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 12
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9369938801076526, 0.9340178501855148, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 12
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9369938801076526, 0.9340178501855148, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 12
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9369938801076526, 0.9340178501855148, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 13
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.22634153787882905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22634153787882905, 0.17539881853604908] ***
*** starting iteration: 2; err: [Inf, 0.22634153787882905, 0.17539881853604908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22634153787882905, 0.17539881853604908, 0.16232329450356117] ***
*** starting iteration: 3; err: [Inf, 0.22634153787882905, 0.17539881853604908, 0.16232329450356117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22634153787882905, 0.17539881853604908, 0.16232329450356117, 0.1566551105880008] ***
*** finished computation of 7 references, err: [Inf, 0.22634153787882905, 0.17539881853604908, 0.16232329450356117, 0.1566551105880008] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 55, 0]]
** centroid: 1, normalized-entropy: 0.975119064940866, [(1, 80), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 45, 0]]
** centroid: 2, normalized-entropy: 0.9699058425934317, [(1, 68), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 146, 26]]
** centroid: 4, normalized-entropy: 0.6127425554686624, [(2, 146), (3, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 11, 0]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(1, 88), (2, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3046594550393276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3046594550393276, 0.17853832621940005] ***
*** starting iteration: 2; err: [Inf, 0.3046594550393276, 0.17853832621940005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3046594550393276, 0.17853832621940005, 0.16003289277528482] ***
*** starting iteration: 3; err: [Inf, 0.3046594550393276, 0.17853832621940005, 0.16003289277528482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3046594550393276, 0.17853832621940005, 0.16003289277528482, 0.1570624423002464] ***
*** finished computation of 7 references, err: [Inf, 0.3046594550393276, 0.17853832621940005, 0.16003289277528482, 0.1570624423002464] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 23, 0]]
** centroid: 1, normalized-entropy: 0.7943466904341503, [(1, 73), (2, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [144, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 98, 0]]
** centroid: 3, normalized-entropy: 0.14144054254182067, [(1, 2), (2, 98)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 27, 0]]
** centroid: 4, normalized-entropy: 0.8976844934141643, [(1, 59), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 70, 33]]
** centroid: 5, normalized-entropy: 0.904803273542669, [(2, 70), (3, 33)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 25, 0]]
** centroid: 6, normalized-entropy: 0.9049382594235603, [(1, 53), (2, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1867844914916953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1867844914916953, 0.15575832606892268] ***
*** starting iteration: 2; err: [Inf, 0.1867844914916953, 0.15575832606892268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1867844914916953, 0.15575832606892268, 0.15097020177056836] ***
*** starting iteration: 3; err: [Inf, 0.1867844914916953, 0.15575832606892268, 0.15097020177056836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1867844914916953, 0.15575832606892268, 0.15097020177056836, 0.1493701710040378] ***
*** finished computation of 7 references, err: [Inf, 0.1867844914916953, 0.15575832606892268, 0.15097020177056836, 0.1493701710040378] ***
*** center 1: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 22, 0]]
** centroid: 2, normalized-entropy: 0.6619760641115651, [(1, 106), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [16, 77, 0]]
** centroid: 3, normalized-entropy: 0.6623570516079519, [(1, 16), (2, 77)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 64, 21]]
** centroid: 4, normalized-entropy: 0.806583102274714, [(2, 64), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 88, 0]]
** centroid: 5, normalized-entropy: 0.20905980566852464, [(1, 3), (2, 88)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 3, 0]]
** centroid: 6, normalized-entropy: 0.23987382528036535, [(1, 73), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9369938801076526, 0.9340178501855148, 0.9340028651405897, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 14
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.24545601659246358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24545601659246358, 0.1880580846847187] ***
*** starting iteration: 2; err: [Inf, 0.24545601659246358, 0.1880580846847187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24545601659246358, 0.1880580846847187, 0.18539708281547457] ***
*** starting iteration: 3; err: [Inf, 0.24545601659246358, 0.1880580846847187, 0.18539708281547457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24545601659246358, 0.1880580846847187, 0.18539708281547457, 0.18554464607001067] ***
*** finished computation of 7 references, err: [Inf, 0.24545601659246358, 0.1880580846847187, 0.18539708281547457, 0.18554464607001067] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 110, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 44, 0]]
** centroid: 3, normalized-entropy: 0.984646826868755, [(1, 59), (2, 44)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 32, 0]]
** centroid: 4, normalized-entropy: 0.9009026954478971, [(1, 69), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [107, 7, 0]]
** centroid: 5, normalized-entropy: 0.3329913124162683, [(1, 107), (2, 7)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 50, 33]]
** centroid: 6, normalized-entropy: 0.9695235828220429, [(2, 50), (3, 33)]
*** center 7: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23735570085739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23735570085739, 0.19228375234921788] ***
*** starting iteration: 2; err: [Inf, 0.23735570085739, 0.19228375234921788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23735570085739, 0.19228375234921788, 0.19125852117111078] ***
*** starting iteration: 3; err: [Inf, 0.23735570085739, 0.19228375234921788, 0.19125852117111078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23735570085739, 0.19228375234921788, 0.19125852117111078, 0.19086042565546338] ***
*** finished computation of 7 references, err: [Inf, 0.23735570085739, 0.19228375234921788, 0.19125852117111078, 0.19086042565546338] ***
*** center 1: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 62, 21]]
** centroid: 2, normalized-entropy: 0.8160172973428256, [(2, 62), (3, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [82, 36, 0]]
** centroid: 4, normalized-entropy: 0.8874179270685693, [(1, 82), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 74, 0]]
** centroid: 5, normalized-entropy: 0.8152560766360704, [(1, 25), (2, 74)]
*** center 6: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 82, 0]]
** centroid: 7, normalized-entropy: 0.1623261801753929, [(1, 2), (2, 82)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2387731422001759] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2387731422001759, 0.1904827660668429] ***
*** starting iteration: 2; err: [Inf, 0.2387731422001759, 0.1904827660668429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2387731422001759, 0.1904827660668429, 0.1895309308845852] ***
*** finished computation of 7 references, err: [Inf, 0.2387731422001759, 0.1904827660668429, 0.1895309308845852] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 40, 0]]
** centroid: 1, normalized-entropy: 0.9661773513883509, [(1, 62), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 13, 0]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(1, 54), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 71, 26]]
** centroid: 3, normalized-entropy: 0.8386398715015523, [(2, 71), (3, 26)]
*** center 4: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 35, 0]]
** centroid: 5, normalized-entropy: 0.9494520153879484, [(1, 60), (2, 35)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 98, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 7), (2, 98)]
*** center 7: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9369938801076526, 0.9340178501855148, 0.9340028651405897, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8950147752542962, 0.8949878021734309, 0.8929558300815786, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 15
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.22776750402002857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22776750402002857, 0.18772491272064162] ***
*** starting iteration: 2; err: [Inf, 0.22776750402002857, 0.18772491272064162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22776750402002857, 0.18772491272064162, 0.18514742018484595] ***
*** starting iteration: 3; err: [Inf, 0.22776750402002857, 0.18772491272064162, 0.18514742018484595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22776750402002857, 0.18772491272064162, 0.18514742018484595, 0.18469671084303996] ***
*** finished computation of 7 references, err: [Inf, 0.22776750402002857, 0.18772491272064162, 0.18514742018484595, 0.18469671084303996] ***
*** center 1: selecting labels [1] (freq >= 2) [from [125, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 12, 0]]
** centroid: 2, normalized-entropy: 0.6051865766334207, [(1, 69), (2, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 45, 33]]
** centroid: 3, normalized-entropy: 0.9828586897127057, [(2, 45), (3, 33)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [101, 13, 0]]
** centroid: 5, normalized-entropy: 0.5119682940439919, [(1, 101), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 83, 0]]
** centroid: 6, normalized-entropy: 0.4294619720471057, [(1, 8), (2, 83)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 90, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21777586709405924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21777586709405924, 0.18671725710431622] ***
*** starting iteration: 2; err: [Inf, 0.21777586709405924, 0.18671725710431622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21777586709405924, 0.18671725710431622, 0.18292324220434436] ***
*** starting iteration: 3; err: [Inf, 0.21777586709405924, 0.18671725710431622, 0.18292324220434436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21777586709405924, 0.18671725710431622, 0.18292324220434436, 0.18169039471862228] ***
*** finished computation of 7 references, err: [Inf, 0.21777586709405924, 0.18671725710431622, 0.18292324220434436, 0.18169039471862228] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 76, 0]]
** centroid: 1, normalized-entropy: 0.8073313266519867, [(1, 25), (2, 76)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 23, 0]]
** centroid: 2, normalized-entropy: 0.8561146277685725, [(1, 59), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 41, 26]]
** centroid: 4, normalized-entropy: 0.9635359835770286, [(2, 41), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [98, 10, 0]]
** centroid: 5, normalized-entropy: 0.44506485705083854, [(1, 98), (2, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 107, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22310905739095346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22310905739095346, 0.1955122882765585] ***
*** starting iteration: 2; err: [Inf, 0.22310905739095346, 0.1955122882765585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22310905739095346, 0.1955122882765585, 0.1912262906568932] ***
*** starting iteration: 3; err: [Inf, 0.22310905739095346, 0.1955122882765585, 0.1912262906568932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22310905739095346, 0.1955122882765585, 0.1912262906568932, 0.19056078166640858] ***
*** finished computation of 7 references, err: [Inf, 0.22310905739095346, 0.1955122882765585, 0.1912262906568932, 0.19056078166640858] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 86, 21]]
** centroid: 1, normalized-entropy: 0.7143881566559658, [(2, 86), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 18, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 72), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [97, 26, 0]]
** centroid: 4, normalized-entropy: 0.7441163072594041, [(1, 97), (2, 26)]
*** center 5: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 25, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 50), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 99, 0]]
** centroid: 7, normalized-entropy: 0.1403272709905931, [(1, 2), (2, 99)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9369938801076526, 0.9340178501855148, 0.9340028651405897, 0.9210048371725019, 0.91901482320644, 0.9130088172004339, 0.9049828271385157, 0.8950147752542962, 0.8949878021734309, 0.8929558300815786, 0.8910197622772472, 0.8909927891963819, 0.8849807891724061, 0.8800267333201465, 0.7840085594576612]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9369938801076526
finished with 15
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2750101340776309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778] ***
*** starting iteration: 2; err: [Inf, 0.2750101340776309, 0.22259876394923778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437] ***
*** starting iteration: 3; err: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127] ***
*** starting iteration: 4; err: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856] ***
*** starting iteration: 5; err: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856, 0.18763569340389222] ***
*** starting iteration: 6; err: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856, 0.18763569340389222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856, 0.18763569340389222, 0.18648188530188053] ***
*** starting iteration: 7; err: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856, 0.18763569340389222, 0.18648188530188053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856, 0.18763569340389222, 0.18648188530188053, 0.18609026650805027] ***
*** finished computation of 7 references, err: [Inf, 0.2750101340776309, 0.22259876394923778, 0.20668934788927437, 0.1963365644561127, 0.1902279807709856, 0.18763569340389222, 0.18648188530188053, 0.18609026650805027] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [9, 119, 0]]
** centroid: 1, normalized-entropy: 0.3670887590107337, [(1, 9), (2, 119)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [114, 2, 0]]
** centroid: 2, normalized-entropy: 0.12565805017256745, [(1, 114), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 121, 40]]
** centroid: 3, normalized-entropy: 0.8088077134828132, [(2, 121), (3, 40)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [61, 84, 0]]
** centroid: 4, normalized-entropy: 0.9817736341200938, [(1, 61), (2, 84)]
*** center 5: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [112, 51, 0]]
** centroid: 6, normalized-entropy: 0.8964738983353847, [(1, 112), (2, 51)]
*** center 7: selecting labels [1] (freq >= 1) [from [174, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29593260295875373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003] ***
*** starting iteration: 2; err: [Inf, 0.29593260295875373, 0.21675176031515003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354] ***
*** starting iteration: 3; err: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959] ***
*** starting iteration: 4; err: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795] ***
*** starting iteration: 5; err: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795, 0.18857404856011273] ***
*** starting iteration: 6; err: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795, 0.18857404856011273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795, 0.18857404856011273, 0.18740120292268694] ***
*** starting iteration: 7; err: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795, 0.18857404856011273, 0.18740120292268694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795, 0.18857404856011273, 0.18740120292268694, 0.18723241464607418] ***
*** finished computation of 7 references, err: [Inf, 0.29593260295875373, 0.21675176031515003, 0.2042234182404354, 0.1971416181921959, 0.19228247751807795, 0.18857404856011273, 0.18740120292268694, 0.18723241464607418] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 29, 0]]
** centroid: 2, normalized-entropy: 0.8612621884720756, [(1, 73), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 47, 18]]
** centroid: 3, normalized-entropy: 0.8512243352621381, [(2, 47), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [7, 56, 0]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(1, 7), (2, 56)]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 66, 0]]
** centroid: 6, normalized-entropy: 0.11190990870168394, [(1, 1), (2, 66)]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2692235580887645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2692235580887645, 0.20522849099244922] ***
*** starting iteration: 2; err: [Inf, 0.2692235580887645, 0.20522849099244922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154] ***
*** starting iteration: 3; err: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696] ***
*** starting iteration: 4; err: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696, 0.19514616330713033] ***
*** starting iteration: 5; err: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696, 0.19514616330713033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696, 0.19514616330713033, 0.19402984258532524] ***
*** starting iteration: 6; err: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696, 0.19514616330713033, 0.19402984258532524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696, 0.19514616330713033, 0.19402984258532524, 0.19369611999765038] ***
*** finished computation of 7 references, err: [Inf, 0.2692235580887645, 0.20522849099244922, 0.1995901965238154, 0.19629841051250696, 0.19514616330713033, 0.19402984258532524, 0.19369611999765038] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 30, 0]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(1, 85), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [11, 52, 0]]
** centroid: 2, normalized-entropy: 0.6681273338436138, [(1, 11), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 62, 0]]
** centroid: 3, normalized-entropy: 0.11759466565886466, [(1, 1), (2, 62)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 20]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(2, 50), (3, 20)]
*** center 5: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [62, 2, 0]]
** centroid: 7, normalized-entropy: 0.2006223243127146, [(1, 62), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25690028399787845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25690028399787845, 0.2094191038515419] ***
*** starting iteration: 2; err: [Inf, 0.25690028399787845, 0.2094191038515419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053] ***
*** starting iteration: 3; err: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053, 0.19747776769986375] ***
*** starting iteration: 4; err: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053, 0.19747776769986375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053, 0.19747776769986375, 0.19609713375288992] ***
*** starting iteration: 5; err: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053, 0.19747776769986375, 0.19609713375288992] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053, 0.19747776769986375, 0.19609713375288992, 0.19563005041144788] ***
*** finished computation of 7 references, err: [Inf, 0.25690028399787845, 0.2094191038515419, 0.1999627707079053, 0.19747776769986375, 0.19609713375288992, 0.19563005041144788] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 75, 0]]
** centroid: 2, normalized-entropy: 0.10106696361212422, [(1, 1), (2, 75)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 2, 0]]
** centroid: 3, normalized-entropy: 0.2460225782203316, [(1, 47), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [82, 35, 0]]
** centroid: 4, normalized-entropy: 0.8802436087136892, [(1, 82), (2, 35)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 2, 0]]
** centroid: 5, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 67, 24]]
** centroid: 6, normalized-entropy: 0.8323322690121193, [(2, 67), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [30, 12, 0]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(1, 30), (2, 12)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3878159765135497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763] ***
*** starting iteration: 2; err: [Inf, 0.3878159765135497, 0.22949670798517763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748] ***
*** starting iteration: 3; err: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998] ***
*** starting iteration: 4; err: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275] ***
*** starting iteration: 5; err: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275, 0.187078639741987] ***
*** starting iteration: 6; err: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275, 0.187078639741987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275, 0.187078639741987, 0.1859366812594235] ***
*** starting iteration: 7; err: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275, 0.187078639741987, 0.1859366812594235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275, 0.187078639741987, 0.1859366812594235, 0.18500359938666225] ***
*** finished computation of 7 references, err: [Inf, 0.3878159765135497, 0.22949670798517763, 0.20211682905256748, 0.19323544395714998, 0.18881206255499275, 0.187078639741987, 0.1859366812594235, 0.18500359938666225] ***
*** center 1: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 56, 19]]
** centroid: 3, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [15, 40, 0]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(1, 15), (2, 40)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 55, 0]]
** centroid: 5, normalized-entropy: 0.5858732928619204, [(1, 9), (2, 55)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 44, 0]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(1, 11), (2, 44)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.262350418722257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725] ***
*** starting iteration: 2; err: [Inf, 0.262350418722257, 0.22574818180687725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385] ***
*** starting iteration: 3; err: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027] ***
*** starting iteration: 4; err: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872] ***
*** starting iteration: 5; err: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872, 0.18491476948652416] ***
*** starting iteration: 6; err: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872, 0.18491476948652416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872, 0.18491476948652416, 0.1836023349761963] ***
*** starting iteration: 7; err: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872, 0.18491476948652416, 0.1836023349761963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872, 0.18491476948652416, 0.1836023349761963, 0.18322933584824205] ***
*** finished computation of 7 references, err: [Inf, 0.262350418722257, 0.22574818180687725, 0.21431925844587385, 0.19893346595671027, 0.188828213987872, 0.18491476948652416, 0.1836023349761963, 0.18322933584824205] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 57, 20]]
** centroid: 1, normalized-entropy: 0.8263541679009075, [(2, 57), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 30, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 50), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [80, 3, 0]]
** centroid: 3, normalized-entropy: 0.2243269603450881, [(1, 80), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 43, 0]]
** centroid: 4, normalized-entropy: 0.8599530497177523, [(1, 17), (2, 43)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35366806616913526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937] ***
*** starting iteration: 2; err: [Inf, 0.35366806616913526, 0.24403403973951937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633] ***
*** starting iteration: 3; err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969] ***
*** starting iteration: 4; err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378] ***
*** starting iteration: 5; err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935] ***
*** starting iteration: 6; err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935, 0.18442606910318135] ***
*** starting iteration: 7; err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935, 0.18442606910318135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935, 0.18442606910318135, 0.1832711060801521] ***
*** starting iteration: 8; err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935, 0.18442606910318135, 0.1832711060801521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935, 0.18442606910318135, 0.1832711060801521, 0.18295249550417064] ***
*** finished computation of 7 references, err: [Inf, 0.35366806616913526, 0.24403403973951937, 0.2086197210708633, 0.1946691327895969, 0.18911837108526378, 0.1865360539685935, 0.18442606910318135, 0.1832711060801521, 0.18295249550417064] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 18, 0]]
** centroid: 2, normalized-entropy: 0.8512243352621381, [(1, 47), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 81, 0]]
** centroid: 3, normalized-entropy: 0.09501724567107643, [(1, 1), (2, 81)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 35, 18]]
** centroid: 4, normalized-entropy: 0.9244571409964927, [(2, 35), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [77, 5, 0]]
** centroid: 5, normalized-entropy: 0.3313056130577883, [(1, 77), (2, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [25, 46, 0]]
** centroid: 7, normalized-entropy: 0.935940714955517, [(1, 25), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2843316476717591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924] ***
*** starting iteration: 2; err: [Inf, 0.2843316476717591, 0.21662730816192924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268] ***
*** starting iteration: 3; err: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741] ***
*** starting iteration: 4; err: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578] ***
*** starting iteration: 5; err: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578, 0.19125787819363177] ***
*** starting iteration: 6; err: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578, 0.19125787819363177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578, 0.19125787819363177, 0.18957335842400788] ***
*** starting iteration: 7; err: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578, 0.19125787819363177, 0.18957335842400788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578, 0.19125787819363177, 0.18957335842400788, 0.18902486363984644] ***
*** finished computation of 7 references, err: [Inf, 0.2843316476717591, 0.21662730816192924, 0.20205308951996268, 0.1959658151678741, 0.19371551631763578, 0.19125787819363177, 0.18957335842400788, 0.18902486363984644] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 14, 0]]
** centroid: 1, normalized-entropy: 0.8256265261578954, [(1, 40), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 49, 22]]
** centroid: 2, normalized-entropy: 0.893010810044601, [(2, 49), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [77, 2, 0]]
** centroid: 3, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 26, 0]]
** centroid: 4, normalized-entropy: 0.9596868937742168, [(1, 42), (2, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [58, 20, 0]]
** centroid: 6, normalized-entropy: 0.8212809417449864, [(1, 58), (2, 20)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 79, 0]]
** centroid: 7, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26194543080125005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26194543080125005, 0.20828716233558953] ***
*** starting iteration: 2; err: [Inf, 0.26194543080125005, 0.20828716233558953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301] ***
*** starting iteration: 3; err: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301, 0.19435913506988436] ***
*** starting iteration: 4; err: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301, 0.19435913506988436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301, 0.19435913506988436, 0.19090442357305437] ***
*** starting iteration: 5; err: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301, 0.19435913506988436, 0.19090442357305437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301, 0.19435913506988436, 0.19090442357305437, 0.19026286843419074] ***
*** finished computation of 7 references, err: [Inf, 0.26194543080125005, 0.20828716233558953, 0.19931292725261301, 0.19435913506988436, 0.19090442357305437, 0.19026286843419074] ***
*** center 1: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 40, 22]]
** centroid: 2, normalized-entropy: 0.9383153522334071, [(2, 40), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [11, 66, 0]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(1, 11), (2, 66)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [27, 65, 0]]
** centroid: 5, normalized-entropy: 0.8731720603476306, [(1, 27), (2, 65)]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 22, 0]]
** centroid: 7, normalized-entropy: 0.9132401614300725, [(1, 45), (2, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23377658415958286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23377658415958286, 0.19951328134536744] ***
*** starting iteration: 2; err: [Inf, 0.23377658415958286, 0.19951328134536744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23377658415958286, 0.19951328134536744, 0.19646035057678818] ***
*** starting iteration: 3; err: [Inf, 0.23377658415958286, 0.19951328134536744, 0.19646035057678818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23377658415958286, 0.19951328134536744, 0.19646035057678818, 0.19564844507724047] ***
*** finished computation of 7 references, err: [Inf, 0.23377658415958286, 0.19951328134536744, 0.19646035057678818, 0.19564844507724047] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 39, 0]]
** centroid: 1, normalized-entropy: 0.9929768866085175, [(1, 32), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 22, 0]]
** centroid: 2, normalized-entropy: 0.8249658680139929, [(1, 63), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [76, 5, 0]]
** centroid: 3, normalized-entropy: 0.33426813256179383, [(1, 76), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 15, 0]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(1, 40), (2, 15)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 43, 19]]
** centroid: 7, normalized-entropy: 0.8890349038123858, [(2, 43), (3, 19)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25380710791237654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104] ***
*** starting iteration: 2; err: [Inf, 0.25380710791237654, 0.20201605761703104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015] ***
*** starting iteration: 3; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592] ***
*** starting iteration: 4; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453] ***
*** starting iteration: 5; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049] ***
*** starting iteration: 6; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125] ***
*** starting iteration: 7; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125, 0.185628079617396] ***
*** starting iteration: 8; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125, 0.185628079617396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125, 0.185628079617396, 0.18403823458403348] ***
*** starting iteration: 9; err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125, 0.185628079617396, 0.18403823458403348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125, 0.185628079617396, 0.18403823458403348, 0.18347028179839253] ***
*** finished computation of 7 references, err: [Inf, 0.25380710791237654, 0.20201605761703104, 0.19655555561278015, 0.1940429596444592, 0.19223506856523453, 0.1909158182661049, 0.1885254937671125, 0.185628079617396, 0.18403823458403348, 0.18347028179839253] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 56, 0]]
** centroid: 1, normalized-entropy: 0.8165187119538281, [(1, 19), (2, 56)]
*** center 2: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 36, 23]]
** centroid: 3, normalized-entropy: 0.9646900825612559, [(2, 36), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 33, 0]]
** centroid: 5, normalized-entropy: 0.9415951533268216, [(1, 59), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 1, 0]]
** centroid: 6, normalized-entropy: 0.1044190780054077, [(1, 72), (2, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.310619426548481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263] ***
*** starting iteration: 2; err: [Inf, 0.310619426548481, 0.21609403174184263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678] ***
*** starting iteration: 3; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067] ***
*** starting iteration: 4; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127] ***
*** starting iteration: 5; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526] ***
*** starting iteration: 6; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988] ***
*** starting iteration: 7; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027] ***
*** starting iteration: 8; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027, 0.19067407470569014] ***
*** starting iteration: 9; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027, 0.19067407470569014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027, 0.19067407470569014, 0.18934256156161428] ***
*** starting iteration: 10; err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027, 0.19067407470569014, 0.18934256156161428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027, 0.19067407470569014, 0.18934256156161428, 0.189183583881706] ***
*** finished computation of 7 references, err: [Inf, 0.310619426548481, 0.21609403174184263, 0.20874635222181678, 0.20282202312909067, 0.19737907857634127, 0.1959405923746526, 0.1936610192283988, 0.19178160662204027, 0.19067407470569014, 0.18934256156161428, 0.189183583881706] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 38, 0]]
** centroid: 2, normalized-entropy: 0.9899927915575186, [(1, 30), (2, 38)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 58, 0]]
** centroid: 3, normalized-entropy: 0.28290479297989196, [(1, 3), (2, 58)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 63, 24]]
** centroid: 4, normalized-entropy: 0.8497511372532974, [(2, 63), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 2, 0]]
** centroid: 6, normalized-entropy: 0.22536363912739493, [(1, 53), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 18, 0]]
** centroid: 7, normalized-entropy: 0.7263997735417457, [(1, 71), (2, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22090802727080883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604] ***
*** starting iteration: 2; err: [Inf, 0.22090802727080883, 0.20341606854088604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585] ***
*** starting iteration: 3; err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066] ***
*** starting iteration: 4; err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364] ***
*** starting iteration: 5; err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053] ***
*** starting iteration: 6; err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053, 0.19198736386187373] ***
*** starting iteration: 7; err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053, 0.19198736386187373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053, 0.19198736386187373, 0.19085435727750882] ***
*** starting iteration: 8; err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053, 0.19198736386187373, 0.19085435727750882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053, 0.19198736386187373, 0.19085435727750882, 0.19015777151472865] ***
*** finished computation of 7 references, err: [Inf, 0.22090802727080883, 0.20341606854088604, 0.19881656363699585, 0.19701823301427066, 0.19574309109151364, 0.19407142596133053, 0.19198736386187373, 0.19085435727750882, 0.19015777151472865] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 61, 21]]
** centroid: 1, normalized-entropy: 0.8208002549877175, [(2, 61), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 26, 0]]
** centroid: 3, normalized-entropy: 0.9972943816462351, [(1, 23), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [53, 27, 0]]
** centroid: 4, normalized-entropy: 0.9224062617590724, [(1, 53), (2, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 70, 0]]
** centroid: 7, normalized-entropy: 0.10679203237584184, [(1, 1), (2, 70)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24258120553940535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24258120553940535, 0.1970860616415739] ***
*** starting iteration: 2; err: [Inf, 0.24258120553940535, 0.1970860616415739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965] ***
*** starting iteration: 3; err: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162] ***
*** starting iteration: 4; err: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162, 0.19163775750808418] ***
*** starting iteration: 5; err: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162, 0.19163775750808418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162, 0.19163775750808418, 0.19061398296430707] ***
*** starting iteration: 6; err: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162, 0.19163775750808418, 0.19061398296430707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162, 0.19163775750808418, 0.19061398296430707, 0.18968895042873918] ***
*** finished computation of 7 references, err: [Inf, 0.24258120553940535, 0.1970860616415739, 0.19383176515297965, 0.19280397256743162, 0.19163775750808418, 0.19061398296430707, 0.18968895042873918] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 29, 0]]
** centroid: 1, normalized-entropy: 0.9144612916935675, [(1, 59), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [3, 70, 0]]
** centroid: 2, normalized-entropy: 0.24729443986205674, [(1, 3), (2, 70)]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [77, 17, 0]]
** centroid: 5, normalized-entropy: 0.6819353204567525, [(1, 77), (2, 17)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 39, 3]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(2, 39), (3, 3)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 25, 17]]
** centroid: 7, normalized-entropy: 0.9736680645496202, [(2, 25), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2645217490484938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645217490484938, 0.22164141232147813] ***
*** starting iteration: 2; err: [Inf, 0.2645217490484938, 0.22164141232147813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545] ***
*** starting iteration: 3; err: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796] ***
*** starting iteration: 4; err: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796, 0.1863891565464437] ***
*** starting iteration: 5; err: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796, 0.1863891565464437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796, 0.1863891565464437, 0.18495038177864626] ***
*** starting iteration: 6; err: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796, 0.1863891565464437, 0.18495038177864626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796, 0.1863891565464437, 0.18495038177864626, 0.18433281699940562] ***
*** finished computation of 7 references, err: [Inf, 0.2645217490484938, 0.22164141232147813, 0.19961019879579545, 0.18921399080380796, 0.1863891565464437, 0.18495038177864626, 0.18433281699940562] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 24, 0]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(1, 39), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [2, 67, 0]]
** centroid: 2, normalized-entropy: 0.18927843126120178, [(1, 2), (2, 67)]
*** center 3: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [79, 3, 0]]
** centroid: 4, normalized-entropy: 0.22641094842107634, [(1, 79), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 20, 0]]
** centroid: 5, normalized-entropy: 0.8014698931335286, [(1, 62), (2, 20)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 72, 23]]
** centroid: 6, normalized-entropy: 0.7985237652450764, [(2, 72), (3, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24725130167370662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24725130167370662, 0.21494853293150665] ***
*** starting iteration: 2; err: [Inf, 0.24725130167370662, 0.21494853293150665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475] ***
*** starting iteration: 3; err: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475, 0.1938324993867427] ***
*** starting iteration: 4; err: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475, 0.1938324993867427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475, 0.1938324993867427, 0.19282442256063223] ***
*** starting iteration: 5; err: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475, 0.1938324993867427, 0.19282442256063223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475, 0.1938324993867427, 0.19282442256063223, 0.19232581098005175] ***
*** finished computation of 7 references, err: [Inf, 0.24725130167370662, 0.21494853293150665, 0.19938955286331475, 0.1938324993867427, 0.19282442256063223, 0.19232581098005175] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 40, 0]]
** centroid: 1, normalized-entropy: 0.9990574042663861, [(1, 43), (2, 40)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 20, 0]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(1, 58), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 46, 0]]
** centroid: 4, normalized-entropy: 0.9892452969285004, [(1, 36), (2, 46)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 78, 18]]
** centroid: 5, normalized-entropy: 0.6962122601251459, [(2, 78), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2476451210360974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2476451210360974, 0.20531982776895166] ***
*** starting iteration: 2; err: [Inf, 0.2476451210360974, 0.20531982776895166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436] ***
*** starting iteration: 3; err: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436, 0.1911318147741258] ***
*** starting iteration: 4; err: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436, 0.1911318147741258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436, 0.1911318147741258, 0.18833376471791416] ***
*** starting iteration: 5; err: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436, 0.1911318147741258, 0.18833376471791416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436, 0.1911318147741258, 0.18833376471791416, 0.1878098531216383] ***
*** finished computation of 7 references, err: [Inf, 0.2476451210360974, 0.20531982776895166, 0.19550971088558436, 0.1911318147741258, 0.18833376471791416, 0.1878098531216383] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 30, 0]]
** centroid: 1, normalized-entropy: 0.9826154285526119, [(1, 41), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 43, 16]]
** centroid: 2, normalized-entropy: 0.8431619569518377, [(2, 43), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [24, 46, 0]]
** centroid: 4, normalized-entropy: 0.927526588431676, [(1, 24), (2, 46)]
*** center 5: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 27, 0]]
** centroid: 6, normalized-entropy: 0.8772236230732716, [(1, 64), (2, 27)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 34, 6]]
** centroid: 7, normalized-entropy: 0.6098403047164005, [(2, 34), (3, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30376353559456765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313] ***
*** starting iteration: 2; err: [Inf, 0.30376353559456765, 0.24973438171297313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402] ***
*** starting iteration: 3; err: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537] ***
*** starting iteration: 4; err: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567] ***
*** starting iteration: 5; err: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567, 0.19973053410928696] ***
*** starting iteration: 6; err: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567, 0.19973053410928696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567, 0.19973053410928696, 0.19698965229466558] ***
*** starting iteration: 7; err: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567, 0.19973053410928696, 0.19698965229466558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567, 0.19973053410928696, 0.19698965229466558, 0.19620591498166323] ***
*** finished computation of 7 references, err: [Inf, 0.30376353559456765, 0.24973438171297313, 0.2287542021968402, 0.21357861535530537, 0.20682324123382567, 0.19973053410928696, 0.19698965229466558, 0.19620591498166323] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 1, 0]]
** centroid: 1, normalized-entropy: 0.12923377484588472, [(1, 55), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [5, 78, 0]]
** centroid: 2, normalized-entropy: 0.32840071392894665, [(1, 5), (2, 78)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 59, 21]]
** centroid: 3, normalized-entropy: 0.8304955225035798, [(2, 59), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 23, 0]]
** centroid: 4, normalized-entropy: 0.8027381019527042, [(1, 71), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 18, 0]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(1, 42), (2, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26048240008670837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26048240008670837, 0.20339985971339047] ***
*** starting iteration: 2; err: [Inf, 0.26048240008670837, 0.20339985971339047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626] ***
*** starting iteration: 3; err: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287] ***
*** starting iteration: 4; err: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287, 0.18442954662255942] ***
*** starting iteration: 5; err: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287, 0.18442954662255942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287, 0.18442954662255942, 0.18258083861973137] ***
*** starting iteration: 6; err: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287, 0.18442954662255942, 0.18258083861973137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287, 0.18442954662255942, 0.18258083861973137, 0.18190656326478347] ***
*** finished computation of 7 references, err: [Inf, 0.26048240008670837, 0.20339985971339047, 0.19285634481720626, 0.18790805946849287, 0.18442954662255942, 0.18258083861973137, 0.18190656326478347] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 7, 0]]
** centroid: 1, normalized-entropy: 0.5197027865043053, [(1, 53), (2, 7)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [27, 47, 0]]
** centroid: 3, normalized-entropy: 0.9466474387740499, [(1, 27), (2, 47)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 51, 21]]
** centroid: 4, normalized-entropy: 0.8708644692353648, [(2, 51), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [66, 25, 0]]
** centroid: 7, normalized-entropy: 0.8481636883083004, [(1, 66), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2484083490818739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2484083490818739, 0.21977819435670973] ***
*** starting iteration: 2; err: [Inf, 0.2484083490818739, 0.21977819435670973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502] ***
*** starting iteration: 3; err: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502, 0.18571434745378793] ***
*** starting iteration: 4; err: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502, 0.18571434745378793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502, 0.18571434745378793, 0.1844035218656063] ***
*** starting iteration: 5; err: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502, 0.18571434745378793, 0.1844035218656063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502, 0.18571434745378793, 0.1844035218656063, 0.18340565226599573] ***
*** finished computation of 7 references, err: [Inf, 0.2484083490818739, 0.21977819435670973, 0.18727141751721502, 0.18571434745378793, 0.1844035218656063, 0.18340565226599573] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 25, 0]]
** centroid: 2, normalized-entropy: 0.9227346209530939, [(1, 49), (2, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 43, 0]]
** centroid: 4, normalized-entropy: 0.8599530497177523, [(1, 17), (2, 43)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 51, 20]]
** centroid: 5, normalized-entropy: 0.8577435372751958, [(2, 51), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 66, 0]]
** centroid: 7, normalized-entropy: 0.4558314584408233, [(1, 7), (2, 66)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22662146627157925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003] ***
*** starting iteration: 2; err: [Inf, 0.22662146627157925, 0.20907614544034003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482] ***
*** starting iteration: 3; err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017] ***
*** starting iteration: 4; err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318] ***
*** starting iteration: 5; err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822] ***
*** starting iteration: 6; err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822, 0.1895005276054144] ***
*** starting iteration: 7; err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822, 0.1895005276054144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822, 0.1895005276054144, 0.1877768692728132] ***
*** starting iteration: 8; err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822, 0.1895005276054144, 0.1877768692728132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822, 0.1895005276054144, 0.1877768692728132, 0.1875084998290986] ***
*** finished computation of 7 references, err: [Inf, 0.22662146627157925, 0.20907614544034003, 0.20101055222237482, 0.19772255051136017, 0.1961983617786318, 0.19330812512803822, 0.1895005276054144, 0.1877768692728132, 0.1875084998290986] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [25, 48, 0]]
** centroid: 1, normalized-entropy: 0.9271587399898307, [(1, 25), (2, 48)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 3]]
** centroid: 2, normalized-entropy: 0.28290479297989196, [(2, 58), (3, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 20, 0]]
** centroid: 4, normalized-entropy: 0.868533960265235, [(1, 49), (2, 20)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 39, 17]]
** centroid: 5, normalized-entropy: 0.8856128713989709, [(2, 39), (3, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [85, 24, 0]]
** centroid: 7, normalized-entropy: 0.7605024019419504, [(1, 85), (2, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24007050190959126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24007050190959126, 0.19938360699638724] ***
*** starting iteration: 2; err: [Inf, 0.24007050190959126, 0.19938360699638724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24007050190959126, 0.19938360699638724, 0.19087701185420156] ***
*** starting iteration: 3; err: [Inf, 0.24007050190959126, 0.19938360699638724, 0.19087701185420156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24007050190959126, 0.19938360699638724, 0.19087701185420156, 0.18877060283720493] ***
*** starting iteration: 4; err: [Inf, 0.24007050190959126, 0.19938360699638724, 0.19087701185420156, 0.18877060283720493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24007050190959126, 0.19938360699638724, 0.19087701185420156, 0.18877060283720493, 0.18824530379846693] ***
*** finished computation of 7 references, err: [Inf, 0.24007050190959126, 0.19938360699638724, 0.19087701185420156, 0.18877060283720493, 0.18824530379846693] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 10, 0]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(1, 31), (2, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 53, 0]]
** centroid: 3, normalized-entropy: 0.9438767571287909, [(1, 30), (2, 53)]
*** center 4: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [85, 11, 0]]
** centroid: 5, normalized-entropy: 0.5135877363803757, [(1, 85), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 71, 0]]
** centroid: 6, normalized-entropy: 0.4356133734874324, [(1, 7), (2, 71)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 40, 21]]
** centroid: 7, normalized-entropy: 0.9288391461883213, [(2, 40), (3, 21)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2426523251272738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923] ***
*** starting iteration: 2; err: [Inf, 0.2426523251272738, 0.20805254076886923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275] ***
*** starting iteration: 3; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416] ***
*** starting iteration: 4; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292] ***
*** starting iteration: 5; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682] ***
*** starting iteration: 6; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087] ***
*** starting iteration: 7; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087, 0.18573381750145926] ***
*** starting iteration: 8; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087, 0.18573381750145926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087, 0.18573381750145926, 0.1844544566022232] ***
*** starting iteration: 9; err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087, 0.18573381750145926, 0.1844544566022232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087, 0.18573381750145926, 0.1844544566022232, 0.1838175032855943] ***
*** finished computation of 7 references, err: [Inf, 0.2426523251272738, 0.20805254076886923, 0.2045455795787275, 0.2010762514900416, 0.19770078260265292, 0.1944714284017682, 0.19117767119361087, 0.18573381750145926, 0.1844544566022232, 0.1838175032855943] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 32, 22]]
** centroid: 1, normalized-entropy: 0.975119064940866, [(2, 32), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 3, 0]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(1, 72), (2, 3)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 68, 0]]
** centroid: 5, normalized-entropy: 0.25253077151613923, [(1, 3), (2, 68)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 21, 0]]
** centroid: 6, normalized-entropy: 0.806583102274714, [(1, 64), (2, 21)]
*** center 7: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24249735634587705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24249735634587705, 0.1930361935775727] ***
*** starting iteration: 2; err: [Inf, 0.24249735634587705, 0.1930361935775727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24249735634587705, 0.1930361935775727, 0.19109037514589727] ***
*** starting iteration: 3; err: [Inf, 0.24249735634587705, 0.1930361935775727, 0.19109037514589727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24249735634587705, 0.1930361935775727, 0.19109037514589727, 0.19128572263941168] ***
*** finished computation of 7 references, err: [Inf, 0.24249735634587705, 0.1930361935775727, 0.19109037514589727, 0.19128572263941168] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 74, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 4, 0]]
** centroid: 2, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [11, 58, 0]]
** centroid: 4, normalized-entropy: 0.6329208984823799, [(1, 11), (2, 58)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 15, 0]]
** centroid: 5, normalized-entropy: 0.7553754125614286, [(1, 54), (2, 15)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 37, 23]]
** centroid: 6, normalized-entropy: 0.9603622703154779, [(2, 37), (3, 23)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [76, 3, 0]]
** centroid: 7, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2353589009642601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622] ***
*** starting iteration: 2; err: [Inf, 0.2353589009642601, 0.2062135879136622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068] ***
*** starting iteration: 3; err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307] ***
*** starting iteration: 4; err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338] ***
*** starting iteration: 5; err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015] ***
*** starting iteration: 6; err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015, 0.18419827540963887] ***
*** starting iteration: 7; err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015, 0.18419827540963887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015, 0.18419827540963887, 0.18205727222189308] ***
*** starting iteration: 8; err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015, 0.18419827540963887, 0.18205727222189308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015, 0.18419827540963887, 0.18205727222189308, 0.18125946892425418] ***
*** finished computation of 7 references, err: [Inf, 0.2353589009642601, 0.2062135879136622, 0.19532476947084068, 0.19083909885585307, 0.18768515707133338, 0.18668098035641015, 0.18419827540963887, 0.18205727222189308, 0.18125946892425418] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 63, 0]]
** centroid: 1, normalized-entropy: 0.11611507530476962, [(1, 1), (2, 63)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [76, 1, 0]]
** centroid: 4, normalized-entropy: 0.1000009430103234, [(1, 76), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 63, 21]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 63), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 29, 0]]
** centroid: 6, normalized-entropy: 0.9259400597385792, [(1, 56), (2, 29)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 27, 0]]
** centroid: 7, normalized-entropy: 0.9224062617590724, [(1, 53), (2, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28722656358778476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438] ***
*** starting iteration: 2; err: [Inf, 0.28722656358778476, 0.22052651841193438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418] ***
*** starting iteration: 3; err: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672] ***
*** starting iteration: 4; err: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968] ***
*** starting iteration: 5; err: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968, 0.1938808267544955] ***
*** starting iteration: 6; err: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968, 0.1938808267544955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968, 0.1938808267544955, 0.19254652778431774] ***
*** starting iteration: 7; err: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968, 0.1938808267544955, 0.19254652778431774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968, 0.1938808267544955, 0.19254652778431774, 0.19173165933601558] ***
*** finished computation of 7 references, err: [Inf, 0.28722656358778476, 0.22052651841193438, 0.2028283452950418, 0.19662529639154672, 0.195196920176968, 0.1938808267544955, 0.19254652778431774, 0.19173165933601558] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 59, 17]]
** centroid: 1, normalized-entropy: 0.7668379316856329, [(2, 59), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [80, 21, 0]]
** centroid: 2, normalized-entropy: 0.7374895672137457, [(1, 80), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 5, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 40), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [27, 42, 0]]
** centroid: 4, normalized-entropy: 0.9656361333706099, [(1, 27), (2, 42)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 67, 1]]
** centroid: 5, normalized-entropy: 0.11058084476988722, [(2, 67), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22584650828223676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22584650828223676, 0.19263537679985165] ***
*** starting iteration: 2; err: [Inf, 0.22584650828223676, 0.19263537679985165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22584650828223676, 0.19263537679985165, 0.1905644988194108] ***
*** starting iteration: 3; err: [Inf, 0.22584650828223676, 0.19263537679985165, 0.1905644988194108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22584650828223676, 0.19263537679985165, 0.1905644988194108, 0.19001747243106365] ***
*** finished computation of 7 references, err: [Inf, 0.22584650828223676, 0.19263537679985165, 0.1905644988194108, 0.19001747243106365] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 10, 0]]
** centroid: 1, normalized-entropy: 0.7140152804378671, [(1, 41), (2, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 25]]
** centroid: 2, normalized-entropy: 0.8481636883083004, [(2, 66), (3, 25)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [50, 34, 0]]
** centroid: 3, normalized-entropy: 0.9736680645496202, [(1, 50), (2, 34)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [7, 77, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 7), (2, 77)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [75, 4, 0]]
** centroid: 5, normalized-entropy: 0.2890794597316462, [(1, 75), (2, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27273018794879317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554] ***
*** starting iteration: 2; err: [Inf, 0.27273018794879317, 0.22008983123721554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455] ***
*** starting iteration: 3; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298] ***
*** starting iteration: 4; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043] ***
*** starting iteration: 5; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672] ***
*** starting iteration: 6; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827] ***
*** starting iteration: 7; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827, 0.1875490052048117] ***
*** starting iteration: 8; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827, 0.1875490052048117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827, 0.1875490052048117, 0.18607718050014227] ***
*** starting iteration: 9; err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827, 0.1875490052048117, 0.18607718050014227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827, 0.1875490052048117, 0.18607718050014227, 0.18550156373158097] ***
*** finished computation of 7 references, err: [Inf, 0.27273018794879317, 0.22008983123721554, 0.20558345062844455, 0.20171001971699298, 0.19799964103708043, 0.19422195155266672, 0.191232171503827, 0.1875490052048117, 0.18607718050014227, 0.18550156373158097] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [51, 36, 0]]
** centroid: 1, normalized-entropy: 0.9784493292686188, [(1, 51), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 31, 0]]
** centroid: 2, normalized-entropy: 0.9599377175669783, [(1, 50), (2, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [18, 60, 0]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(1, 18), (2, 60)]
*** center 4: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 61, 18]]
** centroid: 6, normalized-entropy: 0.7742411580847273, [(2, 61), (3, 18)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31232421162351964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31232421162351964, 0.21241544099524617] ***
*** starting iteration: 2; err: [Inf, 0.31232421162351964, 0.21241544099524617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514] ***
*** starting iteration: 3; err: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544] ***
*** starting iteration: 4; err: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544, 0.18306626837048678] ***
*** starting iteration: 5; err: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544, 0.18306626837048678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544, 0.18306626837048678, 0.1815962354214862] ***
*** starting iteration: 6; err: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544, 0.18306626837048678, 0.1815962354214862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544, 0.18306626837048678, 0.1815962354214862, 0.18066165110003204] ***
*** finished computation of 7 references, err: [Inf, 0.31232421162351964, 0.21241544099524617, 0.19233377014426514, 0.18619191131554544, 0.18306626837048678, 0.1815962354214862, 0.18066165110003204] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 68, 22]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(2, 68), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [43, 27, 0]]
** centroid: 2, normalized-entropy: 0.9619780596506257, [(1, 43), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 34, 0]]
** centroid: 3, normalized-entropy: 0.9952525494396791, [(1, 40), (2, 34)]
*** center 4: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 71, 0]]
** centroid: 7, normalized-entropy: 0.6216297820565386, [(1, 13), (2, 71)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.265958162965253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.265958162965253, 0.20497152323741466] ***
*** starting iteration: 2; err: [Inf, 0.265958162965253, 0.20497152323741466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352] ***
*** starting iteration: 3; err: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352, 0.19457764041423797] ***
*** starting iteration: 4; err: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352, 0.19457764041423797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352, 0.19457764041423797, 0.19299268454685808] ***
*** starting iteration: 5; err: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352, 0.19457764041423797, 0.19299268454685808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352, 0.19457764041423797, 0.19299268454685808, 0.1923272099979222] ***
*** finished computation of 7 references, err: [Inf, 0.265958162965253, 0.20497152323741466, 0.19615122318640352, 0.19457764041423797, 0.19299268454685808, 0.1923272099979222] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 45, 12]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 45), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [26, 48, 0]]
** centroid: 2, normalized-entropy: 0.9352691398683568, [(1, 26), (2, 48)]
*** center 3: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 48, 5]]
** centroid: 4, normalized-entropy: 0.4507913883546652, [(2, 48), (3, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [85, 15, 0]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(1, 85), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [19, 32, 0]]
** centroid: 6, normalized-entropy: 0.9526092095121206, [(1, 19), (2, 32)]
*** center 7: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2240661555379629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296] ***
*** starting iteration: 2; err: [Inf, 0.2240661555379629, 0.1989582734266296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936] ***
*** starting iteration: 3; err: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456] ***
*** starting iteration: 4; err: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318] ***
*** starting iteration: 5; err: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318, 0.18441637103795075] ***
*** starting iteration: 6; err: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318, 0.18441637103795075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318, 0.18441637103795075, 0.18310843709169422] ***
*** starting iteration: 7; err: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318, 0.18441637103795075, 0.18310843709169422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318, 0.18441637103795075, 0.18310843709169422, 0.1825970748877153] ***
*** finished computation of 7 references, err: [Inf, 0.2240661555379629, 0.1989582734266296, 0.19213759408704936, 0.1882819048082456, 0.1856797758117318, 0.18441637103795075, 0.18310843709169422, 0.1825970748877153] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 59, 0]]
** centroid: 1, normalized-entropy: 0.7273006785144036, [(1, 15), (2, 59)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 39, 0]]
** centroid: 4, normalized-entropy: 0.998845535995202, [(1, 36), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 58, 24]]
** centroid: 6, normalized-entropy: 0.8721617883411698, [(2, 58), (3, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 41, 0]]
** centroid: 7, normalized-entropy: 0.9981021327390103, [(1, 37), (2, 41)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 377,3 => 40,1 => 583), Dict(2 => 358,3 => 35,1 => 607))
[ Info: ===== scores for single classifier: {"micro_f1":0.916,"precision":0.916,"recall":0.916,"macro_recall":0.9290447571627106,"macro_f1":0.8375579079936798,"accuracy":0.916,"class_f1":{"2":0.8746268656716418,"3":0.6796116504854368,"1":0.9584352078239609},"class_precision":{"2":0.9391025641025641,"3":0.5147058823529411,"1":0.9483870967741935},"class_recall":{"2":0.8184357541899442,"3":1.0,"1":0.9686985172981878}}
[ Info: ===== scores for 1: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.9641642047005913,"macro_f1":0.9393014815272448,"accuracy":0.957,"class_f1":{"2":0.9381294964028777,"3":0.9090909090909091,"1":0.970684039087948},"class_precision":{"2":0.9673590504451038,"3":0.8333333333333334,"1":0.9597423510466989},"class_recall":{"2":0.9106145251396648,"3":1.0,"1":0.9818780889621087}}
[ Info: ===== scores for 5: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9741194444700101,"macro_f1":0.9605211986395948,"accuracy":0.964,"class_f1":{"2":0.9500000000000001,"3":0.958904109589041,"1":0.9726594863297432},"class_precision":{"2":0.9447513812154696,"3":0.9210526315789473,"1":0.9783333333333334},"class_recall":{"2":0.9553072625698324,"3":1.0,"1":0.9670510708401977}}
[ Info: ===== scores for 7: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.9627809895460121,"macro_f1":0.9524135452018796,"accuracy":0.959,"class_f1":{"2":0.9436038514442916,"3":0.9444444444444445,"1":0.9691923397169027},"class_precision":{"2":0.9295392953929539,"3":0.918918918918919,"1":0.9797979797979798},"class_recall":{"2":0.9581005586592178,"3":0.9714285714285714,"1":0.9588138385502472}}
[ Info: ===== scores for 9: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.9756472439785373,"macro_f1":0.9565947370621829,"accuracy":0.964,"class_f1":{"2":0.9505494505494506,"3":0.945945945945946,"1":0.9732888146911519},"class_precision":{"2":0.9351351351351351,"3":0.8974358974358975,"1":0.9864636209813875},"class_recall":{"2":0.9664804469273743,"3":1.0,"1":0.9604612850082372}}
[ Info: ===== scores for 11: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9761963927978673,"macro_f1":0.9533828478203904,"accuracy":0.965,"class_f1":{"2":0.951856946354883,"3":0.9333333333333333,"1":0.9749582637729549},"class_precision":{"2":0.9376693766937669,"3":0.875,"1":0.988155668358714},"class_recall":{"2":0.9664804469273743,"3":1.0,"1":0.9621087314662273}}
(score = 0.957, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.969,"k":3,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9776290883209239,"macro_f1":0.9642032878445125,"accuracy":0.969,"class_f1":{"2":0.956884561891516,"3":0.958904109589041,"1":0.9768211920529801},"class_precision":{"2":0.9529085872576177,"3":0.9210526315789473,"1":0.9816971713810316},"class_recall":{"2":0.9608938547486033,"3":1.0,"1":0.9719934102141681}}
Test Summary: | Pass  Total
AKNC          |    8      8
[502, 4, 3, 1, 2, 1, 5, 11, 3, 1, 1, 2, 5, 3, 4, 15, 1, 18, 2, 5, 11, 5, 19, 8, 14, 6, 1, 12, 6, 3, 12, 22, 27, 60, 12, 2, 5, 4, 20, 5, 5, 2, 8, 22, 4, 7, 9, 4, 3, 5, 2, 12, 8, 11, 6, 2, 22, 8, 27, 13, 73, 10, 9, 8, 9, 5, 296, 2, 4, 45, 7, 14, 12, 61, 7, 12, 3, 4, 2, 19, 10, 13, 52, 35, 9, 9, 3, 9, 44, 5, 4, 31, 7, 30, 5, 9, 12, 43, 2, 89, 36, 74, 13, 33, 15, 16, 3, 43, 87, 37, 23, 11, 8, 15, 54, 10, 4, 15, 17, 8, 11, 6, 110, 92, 6, 2, 3, 7, 48, 31, 74, 20, 11, 9, 14, 25, 5, 26, 5, 27, 9, 22, 6, 46, 12, 12, 788, 28, 7, 43, 4, 28, 19, 72, 48, 174, 12, 11, 5, 37, 3, 11, 8, 13, 33, 46, 85, 22, 31, 19, 38, 20, 39, 124, 20, 4, 1, 9, 13, 43, 4, 90, 21, 161, 6, 8, 24, 21, 26, 16, 6, 22, 21, 15, 11, 84, 31, 71, 12, 22, 27, 9, 26, 91, 33, 3, 79, 20, 15, 9, 20, 2, 107, 10, 17, 23, 8, 4, 17, 45, 27, 45, 10, 5, 49, 14, 105, 18, 28, 7, 15, 154, 14, 53, 12, 89, 37, 20, 3, 9, 8, 47, 78, 3, 5, 7, 18, 11, 8, 44, 23, 10, 55, 412, 21, 1, 12, 6, 8, 8, 61, 58, 15, 8, 22, 35, 21, 15, 894, 132, 75, 61, 16, 17, 25, 12, 29, 23, 53, 57, 17, 27, 19, 4, 9, 14, 50, 48, 64, 55, 26, 12, 9, 16, 24, 36, 83, 37, 6, 14]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6, speedup = 0.333398392347544, eval_ratio = 0.084363)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3820529513888889,"recall":0.37413194444444453,"f1":null,"seconds":0.000385332852602005,"exhaustive_search_seconds":0.00038502365350723267,"evaluations":550.25,"distances_sum":1689.2007548241315}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.534722222222222,"recall":0.534722222222222,"f1":null,"seconds":0.00045336782932281494,"exhaustive_search_seconds":0.00038502365350723267,"evaluations":723.921875,"distances_sum":1611.158655683548}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.642361111111111,"recall":0.642361111111111,"f1":0.642361111111111,"seconds":0.00047335587441921234,"exhaustive_search_seconds":0.00038502365350723267,"evaluations":906.78125,"distances_sum":1560.400765532638}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7456597222222218,"recall":0.7456597222222218,"f1":0.7456597222222218,"seconds":0.0007755067199468613,"exhaustive_search_seconds":0.00038502365350723267,"evaluations":1076.1015625,"distances_sum":1521.278429283533}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7934027777777769,"recall":0.7934027777777769,"f1":0.7934027777777769,"seconds":0.0006349310278892517,"exhaustive_search_seconds":0.00038502365350723267,"evaluations":1213.5703125,"distances_sum":1508.2781106954967}
KCenters.DeloneInvIndex> reached performance {"precision":0.8394097222222214,"recall":0.8394097222222214,"f1":0.8394097222222214,"seconds":0.0007614102214574814,"exhaustive_search_seconds":0.00038502365350723267,"evaluations":1353.5,"distances_sum":1497.0072313447956}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8080000000000004, speedup = 0.6108092720335777, eval_ratio = 0.12430699999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
