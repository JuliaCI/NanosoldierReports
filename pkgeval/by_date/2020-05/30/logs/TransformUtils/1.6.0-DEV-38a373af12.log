Julia Version 1.6.0-DEV.129
Commit 38a373af12 (2020-05-29 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_5U5CNR/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_5U5CNR/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0998452262796648 -0.11691266295436925; -0.0998452262796648 0.0 -0.06297668635861207; 0.11691266295436925 0.06297668635861207 0.0])
dAA = so3([0.0 0.08066810301084815 0.0629809073671902; -0.08066810301084815 0.0 -0.05287463556525484; -0.0629809073671902 0.05287463556525484 0.0])
dAA = so3([0.0 -0.06994962198901208 0.1291506101522258; 0.06994962198901208 0.0 -0.015542646255405513; -0.1291506101522258 0.015542646255405513 0.0])
dAA = Quaternion(0.9974422033093566, [-0.05590009077784427, 0.01871940743237045, -0.04042047369571803])
dAA = SO3([0.9959639943720099 -0.08573712434184902 -0.02654933942947863; 0.08849331531802274 0.9874317090319328 0.13094866605774025; 0.014988497542327221 -0.13276959557017148 0.9910335914758678])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9674945343583836 0.20922900868893796 0.1420476958971838; -0.18855937842460846 0.9711282773157941 -0.14613428689319793; -0.16852206619543858 0.11459969860650819 0.9790133922906865]), [0.6297668635861207, -1.1691266295436924, -0.998452262796648])
xj = SE3(SO3([0.975440627504158 0.1912072905652774 0.10934054256761301; -0.2142106359833599 0.9390679943964957 0.2688216980300282; -0.051277535489714136 -0.28564151297531803 0.9569637090398321]), [0.15542646255405512, 1.2915061015222578, 0.6994962198901208])
Dx = SE3(SO3([0.9927662963044839 0.05605882918732601 -0.10617197649108714; -0.00981192049003616 0.9192271642432589 0.39360531847727115; 0.11966121818774439 -0.38971634323882665 0.913127792083004]), [-1.2090389103207138, 2.484928637703163, 1.2353525334720614])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
