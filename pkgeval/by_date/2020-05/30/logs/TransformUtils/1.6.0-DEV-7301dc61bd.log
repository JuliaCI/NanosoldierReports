Julia Version 1.6.0-DEV.137
Commit 7301dc61bd (2020-05-30 15:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ms4fnu/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ms4fnu/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.12209859499774785 0.20221234512602468; 0.12209859499774785 0.0 -0.05565105281647196; -0.20221234512602468 0.05565105281647196 0.0])
dAA = so3([0.0 -0.049930143422924594 0.18893236943561295; 0.049930143422924594 0.0 0.03537394317234362; -0.18893236943561295 -0.03537394317234362 0.0])
dAA = so3([0.0 0.062285405559300344 -0.044192960123203014; -0.062285405559300344 0.0 0.045482408527012325; 0.044192960123203014 -0.045482408527012325 0.0])
dAA = Quaternion(0.9994108493439022, [0.016342802487337948, 0.024677762344636464, -0.017374552259604478])
dAA = SO3([0.9983360793056387 0.056819085052235964 -0.009831801995174232; -0.05636791289433198 0.9975554419827518 0.041301314343899075; 0.012154470477258067 -0.04067839407379963 0.999098362076024])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8830924170558763 -0.14021973419773368 0.44775686379990537; 0.09930022807721921 0.9885373442640809 0.11372503549847855; -0.45857087526599677 -0.055967357779645746 0.8868936842829261]), [0.5565105281647196, 2.0221234512602466, 1.2209859499774784])
xj = SE3(SO3([0.9886353321952208 0.08947214752360838 0.12080941500048341; -0.07955881771667629 0.9932392818552692 -0.08453474731229654; -0.12755616197883204 0.07396258376464963 0.989069745641877]), [-0.45482408527012325, -0.4419296012320301, -0.6228540555930034])
Dx = SE3(SO3([0.9236496971945013 0.1437239754653949 -0.35526702035079016; -0.21013406452286756 0.9651688707722469 -0.15586123898944645; 0.32049167196606765 0.21861488917420197 0.9216792383642729]), [-0.29225163313238056, -2.190804536675529, -2.3683465913973496])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
