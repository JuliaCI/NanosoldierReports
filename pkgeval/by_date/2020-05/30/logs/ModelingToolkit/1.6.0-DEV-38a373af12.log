Julia Version 1.6.0-DEV.129
Commit 38a373af12 (2020-05-29 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SIMDPirates ────────────────── v0.8.4
  Installed RecursiveFactorization ─────── v0.1.2
  Installed Parameters ─────────────────── v0.12.1
  Installed OffsetArrays ───────────────── v1.0.4
  Installed DataStructures ─────────────── v0.17.17
  Installed StaticArrays ───────────────── v0.12.3
  Installed LoopVectorization ──────────── v0.8.1
  Installed ModelingToolkit ────────────── v3.6.4
  Installed Requires ───────────────────── v1.0.1
  Installed TreeViews ──────────────────── v0.3.0
  Installed RecursiveArrayTools ────────── v2.3.5
  Installed TimerOutputs ───────────────── v0.5.5
  Installed ProgressLogging ────────────── v0.1.2
  Installed Inflate ────────────────────── v0.1.2
  Installed ConstructionBase ───────────── v1.0.0
  Installed ChainRulesCore ─────────────── v0.8.0
  Installed NaNMath ────────────────────── v0.3.3
  Installed ZygoteRules ────────────────── v0.2.0
  Installed SafeTestsets ───────────────── v0.0.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed Unitful ────────────────────── v1.2.1
  Installed AbstractTrees ──────────────── v0.3.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed TableTraits ────────────────── v1.0.0
  Installed RandomNumbers ──────────────── v1.4.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed SimpleTraits ───────────────── v0.9.2
  Installed Compat ─────────────────────── v3.10.0
  Installed Roots ──────────────────────── v1.0.1
  Installed TerminalLoggers ────────────── v0.1.1
  Installed VectorizationBase ──────────── v0.12.4
  Installed DiffRules ──────────────────── v1.0.1
  Installed IterativeSolvers ───────────── v0.8.4
  Installed JuliaVariables ─────────────── v0.2.0
  Installed NameResolution ─────────────── v0.1.3
  Installed SymbolicUtils ──────────────── v0.3.2
  Installed MacroTools ─────────────────── v0.5.5
  Installed ArrayInterface ─────────────── v2.8.7
  Installed PoissonRandom ──────────────── v0.4.0
  Installed Combinatorics ──────────────── v1.0.2
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed GeneralizedGenerated ───────── v0.2.3
  Installed DocStringExtensions ────────── v0.8.1
  Installed Latexify ───────────────────── v0.13.2
  Installed LightGraphs ────────────────── v1.3.3
  Installed UnPack ─────────────────────── v1.0.1
  Installed RecipesBase ────────────────── v1.0.1
  Installed ProgressMeter ──────────────── v1.3.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed CpuId ──────────────────────── v0.2.2
  Installed CanonicalTraits ────────────── v0.2.1
  Installed LabelledArrays ─────────────── v1.2.1
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed Formatting ─────────────────── v0.4.1
  Installed MLStyle ────────────────────── v0.3.1
  Installed PrettyPrint ────────────────── v0.1.0
  Installed DiffEqBase ─────────────────── v6.36.0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed LoggingExtras ──────────────── v0.4.1
  Installed DiffEqJump ─────────────────── v6.7.5
  Installed OrderedCollections ─────────── v1.2.0
  Installed SLEEFPirates ───────────────── v0.5.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [961ee093] + ModelingToolkit v3.6.4
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [1520ce14] + AbstractTrees v0.3.3
  [ec485272] + ArnoldiMethod v0.0.4
  [4fba245c] + ArrayInterface v2.8.7
  [a603d957] + CanonicalTraits v0.2.1
  [d360d2e6] + ChainRulesCore v0.8.0
  [861a8166] + Combinatorics v1.0.2
  [34da2185] + Compat v3.10.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [864edb3b] + DataStructures v0.17.17
  [2b5f629d] + DiffEqBase v6.36.0
  [c894b116] + DiffEqJump v6.7.5
  [b552c78f] + DiffRules v1.0.1
  [ffbed154] + DocStringExtensions v0.8.1
  [59287772] + Formatting v0.4.1
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.3
  [d25df0c9] + Inflate v0.1.2
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [b14d175d] + JuliaVariables v0.2.0
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.2.1
  [23fbe1c1] + Latexify v0.13.2
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [093fc24a] + LightGraphs v1.3.3
  [e6f89c97] + LoggingExtras v0.4.1
  [bdcacae8] + LoopVectorization v0.8.1
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.5
  [961ee093] + ModelingToolkit v3.6.4
  [46d2c3a1] + MuladdMacro v0.2.2
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [6fe1bfb0] + OffsetArrays v1.0.4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [e409e4f3] + PoissonRandom v0.4.0
  [8162dcfd] + PrettyPrint v0.1.0
  [33c8b6b6] + ProgressLogging v0.1.2
  [92933f4c] + ProgressMeter v1.3.0
  [e6cf234a] + RandomNumbers v1.4.0
  [3cdcf5f2] + RecipesBase v1.0.1
  [731186ca] + RecursiveArrayTools v2.3.5
  [f2c3362d] + RecursiveFactorization v0.1.2
  [ae029012] + Requires v1.0.1
  [f2b01f46] + Roots v1.0.1
  [21efa798] + SIMDPirates v0.8.4
  [476501e8] + SLEEFPirates v0.5.0
  [1bc83da4] + SafeTestsets v0.0.1
  [699a6c99] + SimpleTraits v0.9.2
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [d1185830] + SymbolicUtils v0.3.2
  [3783bdb8] + TableTraits v1.0.0
  [5d786b92] + TerminalLoggers v0.1.1
  [a759f4b9] + TimerOutputs v0.5.5
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.1
  [1986cc42] + Unitful v1.2.1
  [3d5dd08c] + VectorizationBase v0.12.4
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building VectorizationBase → `~/.julia/packages/VectorizationBase/FsdEK/deps/build.log`
   Building SLEEFPirates ─────→ `~/.julia/packages/SLEEFPirates/mkNmA/deps/build.log`
    Testing ModelingToolkit
Status `/tmp/jl_R2vzH8/Project.toml`
  [4fba245c] ArrayInterface v2.8.7
  [864edb3b] DataStructures v0.17.17
  [2b5f629d] DiffEqBase v6.36.0
  [c894b116] DiffEqJump v6.7.5
  [b552c78f] DiffRules v1.0.1
  [ffbed154] DocStringExtensions v0.8.1
  [6b9d7cbe] GeneralizedGenerated v0.2.3
  [23fbe1c1] Latexify v0.13.2
  [093fc24a] LightGraphs v1.3.3
  [1914dd2f] MacroTools v0.5.5
  [961ee093] ModelingToolkit v3.6.4
  [77ba4419] NaNMath v0.3.3
  [1dea7af3] OrdinaryDiffEq v5.39.1
  [731186ca] RecursiveArrayTools v2.3.5
  [1bc83da4] SafeTestsets v0.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [789caeaf] StochasticDiffEq v6.23.0
  [d1185830] SymbolicUtils v0.3.2
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.2.1
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_R2vzH8/Manifest.toml`
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.7
  [a603d957] CanonicalTraits v0.2.1
  [d360d2e6] ChainRulesCore v0.8.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.10.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.17
  [2b5f629d] DiffEqBase v6.36.0
  [c894b116] DiffEqJump v6.7.5
  [77a26b50] DiffEqNoiseProcess v4.1.4
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.3
  [ffbed154] DocStringExtensions v0.8.1
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.10
  [6a86dc24] FiniteDiff v2.3.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.3
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [b14d175d] JuliaVariables v0.2.0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.2.1
  [23fbe1c1] Latexify v0.13.2
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [e6f89c97] LoggingExtras v0.4.1
  [bdcacae8] LoopVectorization v0.8.1
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.6.4
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [6fe1bfb0] OffsetArrays v1.0.4
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.39.1
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [e409e4f3] PoissonRandom v0.4.0
  [8162dcfd] PrettyPrint v0.1.0
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.3.0
  [1fd47b50] QuadGK v2.3.1
  [e6cf234a] RandomNumbers v1.4.0
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.3.5
  [f2c3362d] RecursiveFactorization v0.1.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [ae5879a3] ResettableStacks v1.0.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [21efa798] SIMDPirates v0.8.4
  [476501e8] SLEEFPirates v0.5.0
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.8.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [789caeaf] StochasticDiffEq v6.23.0
  [d1185830] SymbolicUtils v0.3.2
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [a759f4b9] TimerOutputs v0.5.5
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.2.1
  [3d5dd08c] VectorizationBase v0.12.4
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Parsing Test  |   14     14
Test Summary:        | Pass  Total
Differentiation Test |   36     36
Test Summary: | Pass  Total
Simplify Test |    9      9
Test Summary:            |
Operation Overloads Test | No tests
Test Summary:     | Pass  Total
Direct Usage Test |   27     27
Test Summary:       | Pass  Total
Build Function Test |    7      7
┌ Warning: Assignment to `f` in soft scope is ambiguous because a global variable by the same name exists: `f` will be treated as a new local. Disambiguate by using `local f` to suppress this warning or `global f` to assign to the existing global variable.
└ @ ~/.julia/packages/ModelingToolkit/MohAp/test/odesystem.jl:165
┌ Warning: Assignment to `du` in soft scope is ambiguous because a global variable by the same name exists: `du` will be treated as a new local. Disambiguate by using `local du` to suppress this warning or `global du` to assign to the existing global variable.
└ @ ~/.julia/packages/ModelingToolkit/MohAp/test/odesystem.jl:165
┌ Warning: Assignment to `sol` in soft scope is ambiguous because a global variable by the same name exists: `sol` will be treated as a new local. Disambiguate by using `local sol` to suppress this warning or `global sol` to assign to the existing global variable.
└ @ ~/.julia/packages/ModelingToolkit/MohAp/test/odesystem.jl:217
Test Summary:  | Pass  Total
ODESystem Test |   37     37
Test Summary:    | Pass  Total
Mass Matrix Test |    2      2
Test Summary:  | Pass  Total
SDESystem Test |    7      7
Test Summary:        | Pass  Total
NonlinearSystem Test |   12     12
Test Summary:           |
OptimizationSystem Test | No tests
Test Summary:       | Pass  Total
ReactionSystem Test |   57     57
JumpSystem Test: Error During Test at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:25
  Got exception outside of a @test
  LoadError: type JumpProblem has no field u0
  Stacktrace:
   [1] getproperty(::DiffEqJump.JumpProblem{true,DiffEqBase.DiscreteProblem{Array{Int64,1},Tuple{Float64,Float64},true,Array{Float64,1},DiffEqBase.DiscreteFunction{true,ModelingToolkit.var"#103#104",Nothing,Array{Symbol,1}},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star}}}},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},Tuple{},Nothing,Nothing}, ::Symbol) at ./Base.jl:33
   [2] solve(::DiffEqJump.JumpProblem{true,DiffEqBase.DiscreteProblem{Array{Int64,1},Tuple{Float64,Float64},true,Array{Float64,1},DiffEqBase.DiscreteFunction{true,ModelingToolkit.var"#103#104",Nothing,Array{Symbol,1}},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star}}}},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},Tuple{},Nothing,Nothing}, ::DiffEqJump.SSAStepper; sensealg::Nothing, u0::Nothing, p::Nothing, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/DiffEqBase/Aj1Ed/src/solve.jl:67
   [3] solve(::DiffEqJump.JumpProblem{true,DiffEqBase.DiscreteProblem{Array{Int64,1},Tuple{Float64,Float64},true,Array{Float64,1},DiffEqBase.DiscreteFunction{true,ModelingToolkit.var"#103#104",Nothing,Array{Symbol,1}},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star}}}},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},Tuple{},Nothing,Nothing}, ::DiffEqJump.SSAStepper) at /home/pkgeval/.julia/packages/DiffEqBase/Aj1Ed/src/solve.jl:67
   [4] getmean(::DiffEqJump.JumpProblem{true,DiffEqBase.DiscreteProblem{Array{Int64,1},Tuple{Float64,Float64},true,Array{Float64,1},DiffEqBase.DiscreteFunction{true,ModelingToolkit.var"#103#104",Nothing,Array{Symbol,1}},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}},DiffEqJump.Direct,DiffEqBase.CallbackSet{Tuple{},Tuple{DiffEqBase.DiscreteCallback{DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star}}}},DiffEqJump.DirectJumpAggregation{Float64,DiffEqJump.MassActionJump{Array{Float64,1},Array{Array{Pair{Int64,Int64},1},1},Array{Array{Pair{Int64,Int64},1},1}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#839, ##MTKArg#840, ##MTKArg#841)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1696#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#839"[1], var"##MTKArg#839"[2], var"##MTKArg#839"[3], var"##MTKArg#840"[1], var"##MTKArg#840"[2], var"##MTKArg#841")
                              (ModelingToolkit).:*((ModelingToolkit).:*(β, S), I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1696#val"
          end
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKArg#852, ##MTKArg#853, ##MTKArg#854)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:74 =#
          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:75 =#
          begin
              $(Expr(:inbounds, true))
              local var"#1700#val" = begin
                          #= /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/src/build_function.jl:118 =#
                          let (S, I, R, β, γ, t) = (var"##MTKArg#852"[1], var"##MTKArg#852"[2], var"##MTKArg#852"[3], var"##MTKArg#853"[1], var"##MTKArg#853"[2], var"##MTKArg#854")
                              (ModelingToolkit).:*(γ, I)
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1700#val"
          end
      end
  end),:function}},Tuple{GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#851)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#848", var"##MTKArg#844", var"##MTKArg#845", var"##MTKArg#846") = ((var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").u, (var"##MTKIntegrator#851").p, (var"##MTKIntegrator#851").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1699#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#844"[1], var"##MTKArg#844"[2], var"##MTKArg#844"[3], var"##MTKArg#845"[1], var"##MTKArg#845"[2], var"##MTKArg#846")
                              begin
                                  var"##MTIIPVar#848"[1] = (S = (ModelingToolkit).:-(S, 1))
                                  var"##MTIIPVar#848"[2] = (I = (ModelingToolkit).:+(I, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1699#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function},GeneralizedGenerated.NGG.RuntimeFn{TypeEncoding(list(##MTKIntegrator#864)),TypeEncoding(nil(GeneralizedGenerated.NGG.Argument)),TypeEncoding(begin
      begin
          (var"##MTIIPVar#861", var"##MTKArg#857", var"##MTKArg#858", var"##MTKArg#859") = ((var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").u, (var"##MTKIntegrator#864").p, (var"##MTKIntegrator#864").t)
          begin
              $(Expr(:inbounds, true))
              local var"#1703#val" = begin
                          let (S, I, R, β, γ, t) = (var"##MTKArg#857"[1], var"##MTKArg#857"[2], var"##MTKArg#857"[3], var"##MTKArg#858"[1], var"##MTKArg#858"[2], var"##MTKArg#859")
                              begin
                                  var"##MTIIPVar#861"[2] = (I = (ModelingToolkit).:-(I, 1))
                                  var"##MTIIPVar#861"[3] = (R = (ModelingToolkit).:+(R, 1))
                              end
                          end
                      end
              $(Expr(:inbounds, :((ModelingToolkit).pop)))
              var"#1703#val"
          end
          (ModelingToolkit).nothing
      end
  end),:function}},RandomNumbers.Xorshifts.Xoroshiro128Star},Tuple{},Nothing,Nothing}, ::Int64) at /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/test/jumpsystem.jl:67
   [5] top-level scope at /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/test/jumpsystem.jl:72
   [6] include at ./Base.jl:369 [inlined]
   [7] include(::String) at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [8] top-level scope at /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/test/runtests.jl:15
   [9] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [10] top-level scope at /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/test/runtests.jl:15
   [11] eval(::Module, ::Any) at ./boot.jl:331
   [12] top-level scope at /home/pkgeval/.julia/packages/SafeTestsets/A83XK/src/SafeTestsets.jl:23
   [13] include(::String) at ./client.jl:444
   [14] top-level scope at none:6
   [15] eval(::Module, ::Any) at ./boot.jl:331
   [16] exec_options(::Base.JLOptions) at ./client.jl:260
   [17] _start() at ./client.jl:485
  in expression starting at /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/test/jumpsystem.jl:72
  
Test Summary:   | Pass  Error  Total
JumpSystem Test |    4      1      5
ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ModelingToolkit/MohAp/test/runtests.jl:15
ERROR: Package ModelingToolkit errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1557
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
