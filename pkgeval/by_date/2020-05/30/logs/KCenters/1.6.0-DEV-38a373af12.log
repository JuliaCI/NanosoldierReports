Julia Version 1.6.0-DEV.129
Commit 38a373af12 (2020-05-29 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed LearnBase ─────────────────── v0.2.2
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed DataStructures ────────────── v0.17.17
  Installed JSON ──────────────────────── v0.21.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed Missings ──────────────────── v0.4.3
  Installed TableTraits ───────────────── v1.0.0
  Installed Tables ────────────────────── v1.0.4
  Installed Compat ────────────────────── v3.10.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed Reexport ──────────────────── v0.2.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataFrames ────────────────── v0.20.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed OrderedCollections ────────── v1.2.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataPattern ─────────────── v0.5.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_IxrVH7/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_IxrVH7/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.932025450070699
[ Info: 0.8321307849884033
[ Info: 0.5548521900673707
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32982491600016756
mean(cdnet.distances) = 0.3551671459774176
mean(crand.distances) = 0.33428793149689834
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.797717213342214,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.0859375,"distances_sum":1934.0613755073023}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":2.5872141122817993e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":4.375,"distances_sum":497.0732191974507}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8476417679542688,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.46875,"distances_sum":2135.7505680173385}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8476417679542688,"seconds":3.773719072341919e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.46875,"distances_sum":2135.7505680173385}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9382357226107231,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.7265625,"distances_sum":2689.3326080393012}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8814794580419588,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.5390625,"distances_sum":2320.815302693806}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8795423326673333,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.515625,"distances_sum":2310.453411337567}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9421646062271067,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.8125,"distances_sum":2701.094795654224}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9421646062271067,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.8125,"distances_sum":2701.094795654224}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9645318223443227,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.875,"distances_sum":2850.6366112622654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9676396520146522,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.875,"distances_sum":2873.45790073602}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9530162545787553,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.8203125,"distances_sum":2768.003754261514}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528705669330675,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.71875,"distances_sum":2792.2918253621256}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448920870795877,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.671875,"distances_sum":2757.3093056066195}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9676396520146522,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.875,"distances_sum":2873.45790073602}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9676396520146522,"seconds":6.658956408500671e-6,"exhaustive_search_seconds":2.115964889526367e-6,"evaluations":8.875,"distances_sum":2873.45790073602}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8558394730269737,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.1796875,"distances_sum":1844.1227643665482}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.866851329803467e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.9296875,"distances_sum":489.4038828243728}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8558394730269737,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.1796875,"distances_sum":1844.1227643665482}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8801948051948059,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.3515625,"distances_sum":2007.554111120131}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.872948926073927,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.296875,"distances_sum":1902.1171957376996}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.8801948051948059,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.3515625,"distances_sum":2007.554111120131}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9055746336996346,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.5703125,"distances_sum":2090.734995576627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9618704212454218,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2514.1133028871645}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8967813436563447,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.609375,"distances_sum":2049.938136114976}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8893772893772902,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.546875,"distances_sum":2001.9008389796354}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8915667665667674,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.4765625,"distances_sum":2035.262017429058}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9307005494505501,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.703125,"distances_sum":2275.015232564747}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9618704212454218,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2514.1133028871645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9618704212454218,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.875,"distances_sum":2514.1133028871645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5439453125,"f1":null,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":6.234375,"distances_sum":1246.1531178197615}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.460794687271118e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":5.0078125,"distances_sum":457.2425907393751}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8532691267066274,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.015625,"distances_sum":1923.5062276242159}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8532691267066274,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.015625,"distances_sum":1923.5062276242159}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.931556464368965,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.703125,"distances_sum":2379.5849916219645}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8569466991341999,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.0625,"distances_sum":1940.1442305410749}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8983318764568773,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.5234375,"distances_sum":2122.347730748786}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.931556464368965,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.703125,"distances_sum":2379.5849916219645}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9520006035631041,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.796875,"distances_sum":2525.9304582340865}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9616701007326012,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.859375,"distances_sum":2579.7514585948966}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9529824342324347,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.7890625,"distances_sum":2535.273220770462}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945358287545788,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.8125,"distances_sum":2446.615278033951}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616701007326012,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.859375,"distances_sum":2579.7514585948966}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9616701007326012,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.2200325727462769e-6,"evaluations":8.859375,"distances_sum":2579.7514585948966}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.7993907134532141,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.953125,"distances_sum":1630.537199182657}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.7993907134532141,"seconds":4.844740033149719e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":7.953125,"distances_sum":1630.537199182657}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.900504183316684,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7578125,"distances_sum":2104.08490061096}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.900504183316684,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.7578125,"distances_sum":2104.08490061096}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9324118589743596,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.78125,"distances_sum":2369.9462345696115}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9363209706959711,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9375,"distances_sum":2321.91350344463}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9363209706959711,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9375,"distances_sum":2321.91350344463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9363209706959711,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3764947652816772e-6,"evaluations":8.9375,"distances_sum":2321.91350344463}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8591809232434241,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.125,"distances_sum":1899.1541724000801}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7800907425907433,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.2734375,"distances_sum":1608.1154229581039}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8591809232434241,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.125,"distances_sum":1899.1541724000801}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.94396488927739,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.765625,"distances_sum":2417.453543804079}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.94396488927739,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.765625,"distances_sum":2417.453543804079}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2599.9804017286756}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610004578754582,"seconds":5.93625009059906e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2498.833310469615}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2599.9804017286756}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720066391941395,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8671875,"distances_sum":2599.9804017286756}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.177734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.177734375,"f1":null,"seconds":3.5353004932403564e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":5.1640625,"distances_sum":328.3202314513188}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7911690739815748,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.8359375,"distances_sum":1278.7361255034757}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7911690739815748,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.8359375,"distances_sum":1278.7361255034757}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9171448343323351,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6640625,"distances_sum":1806.1173547871788}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9171448343323351,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.6640625,"distances_sum":1806.1173547871788}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9747596153846155,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2096.4624951267465}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9747596153846155,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2096.4624951267465}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9747596153846155,"seconds":6.172806024551392e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2096.4624951267465}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4775390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4775390625,"f1":null,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.3203125,"distances_sum":1057.131471488719}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.119930624961853e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":4.5078125,"distances_sum":446.3915865302937}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4775390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.4775390625,"f1":null,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.3203125,"distances_sum":1057.131471488719}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4912109375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.4912109375,"f1":0.6458319458319461,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":6.46875,"distances_sum":1066.1616075251368}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.782082674270175,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.453125,"distances_sum":1463.9231020615057}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.782082674270175,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.453125,"distances_sum":1463.9231020615057}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534626831501837,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8125,"distances_sum":2312.852587927982}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8588241619491629,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.9609375,"distances_sum":1815.59534931562}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8658227189477199,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.0546875,"distances_sum":1791.4227825570897}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9534626831501837,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8125,"distances_sum":2312.852587927982}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91796875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9534626831501837,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8125,"distances_sum":2312.852587927982}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1396484375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1396484375,"f1":null,"seconds":3.0882656574249268e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.3828125,"distances_sum":347.7763661033921}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8259053446553454,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.8515625,"distances_sum":1753.1901959591553}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.71875,"f1":0.8259053446553454,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.8515625,"distances_sum":1753.1901959591553}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.936621711621712,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6015625,"distances_sum":2331.681270531011}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8381420662670673,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.9921875,"distances_sum":1805.2731706021657}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8383689227439235,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.875,"distances_sum":1824.864097438565}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8338557276057285,"seconds":6.243586540222168e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.859375,"distances_sum":1794.2696093895315}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.936621711621712,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6015625,"distances_sum":2331.681270531011}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9411744505494508,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7265625,"distances_sum":2334.054385844313}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9641025641025641,"seconds":6.709247827529907e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.859375,"distances_sum":2445.5168458085573}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":7.10412859916687e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2515.3966713862283}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516769688644694,"seconds":6.8247318267822266e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.78125,"distances_sum":2389.8767982073396}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405963827838835,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.671875,"distances_sum":2332.9180666911375}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9376290376290384,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6484375,"distances_sum":2324.1070752442733}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9422936438561444,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.765625,"distances_sum":2316.2966074952587}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":7.10412859916687e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2515.3966713862283}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465206,"seconds":7.10412859916687e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.9453125,"distances_sum":2515.3966713862283}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.158203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.158203125,"f1":null,"seconds":3.0472874641418457e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":4.9921875,"distances_sum":359.21844385319275}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.158203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.158203125,"f1":null,"seconds":3.0472874641418457e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":4.9921875,"distances_sum":359.21844385319275}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8226060397935407,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.9765625,"distances_sum":1844.4342751341687}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8899699259074267,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.421875,"distances_sum":2233.310459532605}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6826950826950833,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":7.4921875,"distances_sum":1291.666281928673}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.8125,"f1":0.8899699259074267,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.421875,"distances_sum":2233.310459532605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.952163461538462,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8046875,"distances_sum":2756.38010691919}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673191391941395,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.9296875,"distances_sum":2840.738174760079}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9251831501831508,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.8046875,"distances_sum":2536.817348801794}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673191391941395,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.9296875,"distances_sum":2840.738174760079}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807864010989015,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.9765625,"distances_sum":2927.1361606802407}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.980282738095238,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.96875,"distances_sum":2937.0630103423427}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807864010989015,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.9765625,"distances_sum":2927.1361606802407}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807864010989015,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.3373792171478271e-6,"evaluations":8.9765625,"distances_sum":2927.1361606802407}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.513671875,"f1":0.6656461593961599,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.5625,"distances_sum":1296.2465673730358}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.513671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.513671875,"f1":0.6656461593961599,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.5625,"distances_sum":1296.2465673730358}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9125031218781228,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2419.813323065059}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.662109375,"f1":null,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.984375,"distances_sum":1677.4665931958846}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7848516067266076,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.9921875,"distances_sum":1672.5685498386592}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9125031218781228,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2419.813323065059}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9670043498168504,"seconds":5.900859832763672e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8515625,"distances_sum":2778.7841704356524}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9417467948717955,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7109375,"distances_sum":2615.7075743757623}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9678228021978026,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2767.789229085487}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9505093864468871,"seconds":5.403533577919006e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.78125,"distances_sum":2652.089935067615}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9335310522810528,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7890625,"distances_sum":2516.2944782484665}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678228021978026,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2767.789229085487}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9678228021978026,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2767.789229085487}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5185546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5185546875,"f1":0.663873626373627,"seconds":4.176050424575806e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.7265625,"distances_sum":1229.5288149901203}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8384854728604738,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.015625,"distances_sum":1890.7086576725735}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8384854728604738,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.015625,"distances_sum":1890.7086576725735}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9350560897435903,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6015625,"distances_sum":2559.770132597088}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9355196886446894,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2575.8543361358816}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9355196886446894,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.609375,"distances_sum":2575.8543361358816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9635989010989018,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8203125,"distances_sum":2711.7098192745343}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9447947885447893,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6953125,"distances_sum":2619.7573414697463}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635989010989018,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8203125,"distances_sum":2711.7098192745343}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635989010989018,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8203125,"distances_sum":2711.7098192745343}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8130967990342999,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.96875,"distances_sum":1694.2921784331927}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8130967990342999,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.96875,"distances_sum":1694.2921784331927}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.93242902930403,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.875,"distances_sum":2451.5127907807673}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384188727938734,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.90625,"distances_sum":2481.1067495163534}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.892578125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.892578125,"f1":0.9384188727938734,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.90625,"distances_sum":2481.1067495163534}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694768772893776,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2752.5353227540027}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9391082875457882,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2505.9102024179338}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609031593406598,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.875,"distances_sum":2698.739521746632}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9694768772893776,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2752.5353227540027}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9694768772893776,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9296875,"distances_sum":2752.5353227540027}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.4905970096588135e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.46875,"distances_sum":572.0671519020754}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7922270437895447,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.2109375,"distances_sum":1576.7870275767275}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8111071220446229,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.265625,"distances_sum":1670.4371781507825}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8111071220446229,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.265625,"distances_sum":1670.4371781507825}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2688.9795456292745}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9338255494505503,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8984375,"distances_sum":2443.2900877677116}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.941340950715951,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.828125,"distances_sum":2521.6683580079475}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9336195054945063,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2473.243790463423}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8465034965034973,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.484375,"distances_sum":1891.1840018528155}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8599249708624718,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.46875,"distances_sum":1990.1688538436465}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9642914377289381,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2688.9795456292745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9658539377289379,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9765625,"distances_sum":2679.14895932273}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835168,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2689.5089704346915}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835168,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2689.5089704346915}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9680460164835168,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2689.5089704346915}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7749125874125881,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":7.8515625,"distances_sum":1530.9227138280585}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":3.77558171749115e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":6.4296875,"distances_sum":940.4048784474202}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.7749125874125881,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":7.8515625,"distances_sum":1530.9227138280585}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9237439643689651,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.8125,"distances_sum":2370.6433570482623}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7962761197136204,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":7.9375,"distances_sum":1660.685005541603}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.9237439643689651,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.8125,"distances_sum":2370.6433570482623}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9562416749916756,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.8515625,"distances_sum":2645.3206521697402}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.946380182317683,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.8125,"distances_sum":2539.506126932327}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9562416749916756,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.8515625,"distances_sum":2645.3206521697402}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9562416749916756,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.1939555406570435e-6,"evaluations":8.8515625,"distances_sum":2645.3206521697402}}, n: 9
mean(cfft.distances) = 0.3296802085677274
mean(cdnet.distances) = 1.013259967937853
mean(crand.distances) = 0.33927234219592006
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.86
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8888888888888888
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9377777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8777777777777779
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8933333333333332
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9133333333333332
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777779
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8755555555555555
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8733333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.86
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8555555555555555
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.88
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8999999999999999
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.639571085969607] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4156519956285464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4156519956285464, 0.2612539516655622] ***
*** starting iteration: 2; err: [Inf, 0.4156519956285464, 0.2612539516655622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4156519956285464, 0.2612539516655622, 0.2472102961282025] ***
*** starting iteration: 3; err: [Inf, 0.4156519956285464, 0.2612539516655622, 0.2472102961282025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4156519956285464, 0.2612539516655622, 0.2472102961282025, 0.24399067796822693] ***
*** starting iteration: 4; err: [Inf, 0.4156519956285464, 0.2612539516655622, 0.2472102961282025, 0.24399067796822693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4156519956285464, 0.2612539516655622, 0.2472102961282025, 0.24399067796822693, 0.24348435306910415] ***
*** finished computation of 3 references, err: [Inf, 0.4156519956285464, 0.2612539516655622, 0.2472102961282025, 0.24399067796822693, 0.24348435306910415] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [223, 11, 0]]
** centroid: 1, normalized-entropy: 0.2735509354499078, [(1, 223), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [173, 45, 0]]
** centroid: 2, normalized-entropy: 0.7345876609421156, [(1, 173), (2, 45)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 193, 21]]
** centroid: 3, normalized-entropy: 0.46304234120912124, [(2, 193), (3, 21)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37561334909052996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37561334909052996, 0.24784712541102805] ***
*** starting iteration: 2; err: [Inf, 0.37561334909052996, 0.24784712541102805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37561334909052996, 0.24784712541102805, 0.24370003713091007] ***
*** starting iteration: 3; err: [Inf, 0.37561334909052996, 0.24784712541102805, 0.24370003713091007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37561334909052996, 0.24784712541102805, 0.24370003713091007, 0.2428756201251604] ***
*** finished computation of 3 references, err: [Inf, 0.37561334909052996, 0.24784712541102805, 0.24370003713091007, 0.2428756201251604] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [199, 20, 0]]
** centroid: 1, normalized-entropy: 0.44087445053298446, [(1, 199), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [181, 53, 0]]
** centroid: 2, normalized-entropy: 0.7718523706350724, [(1, 181), (2, 53)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 194, 20]]
** centroid: 3, normalized-entropy: 0.447907858914932, [(2, 194), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3388185712859325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388185712859325, 0.24212669118515578] ***
*** starting iteration: 2; err: [Inf, 0.3388185712859325, 0.24212669118515578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388185712859325, 0.24212669118515578, 0.2378879281869535] ***
*** starting iteration: 3; err: [Inf, 0.3388185712859325, 0.24212669118515578, 0.2378879281869535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388185712859325, 0.24212669118515578, 0.2378879281869535, 0.2364929273984265] ***
*** starting iteration: 4; err: [Inf, 0.3388185712859325, 0.24212669118515578, 0.2378879281869535, 0.2364929273984265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388185712859325, 0.24212669118515578, 0.2378879281869535, 0.2364929273984265, 0.23604408427067602] ***
*** finished computation of 3 references, err: [Inf, 0.3388185712859325, 0.24212669118515578, 0.2378879281869535, 0.2364929273984265, 0.23604408427067602] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [42, 192, 23]]
** centroid: 1, normalized-entropy: 0.6643505009590633, [(1, 42), (2, 192), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 74, 0]]
** centroid: 3, normalized-entropy: 0.9549003818255702, [(1, 123), (2, 74)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34521880112183484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34521880112183484, 0.23231990160657906] ***
*** starting iteration: 2; err: [Inf, 0.34521880112183484, 0.23231990160657906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34521880112183484, 0.23231990160657906, 0.22945090157232587] ***
*** starting iteration: 3; err: [Inf, 0.34521880112183484, 0.23231990160657906, 0.22945090157232587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34521880112183484, 0.23231990160657906, 0.22945090157232587, 0.22883156492797913] ***
*** finished computation of 3 references, err: [Inf, 0.34521880112183484, 0.23231990160657906, 0.22945090157232587, 0.22883156492797913] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [74, 161, 20]]
** centroid: 1, normalized-entropy: 0.7728132317750439, [(1, 74), (2, 161), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [207, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [99, 106, 0]]
** centroid: 3, normalized-entropy: 0.9991587650099314, [(1, 99), (2, 106)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3064644658237115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3064644658237115, 0.2401812597746211] ***
*** starting iteration: 2; err: [Inf, 0.3064644658237115, 0.2401812597746211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3064644658237115, 0.2401812597746211, 0.2358281044212674] ***
*** starting iteration: 3; err: [Inf, 0.3064644658237115, 0.2401812597746211, 0.2358281044212674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3064644658237115, 0.2401812597746211, 0.2358281044212674, 0.2349886610221559] ***
*** finished computation of 3 references, err: [Inf, 0.3064644658237115, 0.2401812597746211, 0.2358281044212674, 0.2349886610221559] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [81, 182, 23]]
** centroid: 1, normalized-entropy: 0.7715317930309106, [(1, 81), (2, 182), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [187, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [110, 84, 0]]
** centroid: 3, normalized-entropy: 0.9870044298101771, [(1, 110), (2, 84)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23510290973179332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23510290973179332, 0.19171691230042381] ***
*** starting iteration: 2; err: [Inf, 0.23510290973179332, 0.19171691230042381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23510290973179332, 0.19171691230042381, 0.18820778689243728] ***
*** starting iteration: 3; err: [Inf, 0.23510290973179332, 0.19171691230042381, 0.18820778689243728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23510290973179332, 0.19171691230042381, 0.18820778689243728, 0.1872208476130915] ***
*** finished computation of 7 references, err: [Inf, 0.23510290973179332, 0.19171691230042381, 0.18820778689243728, 0.1872208476130915] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 18, 0]]
** centroid: 2, normalized-entropy: 0.7544062039636575, [(1, 65), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 50, 21]]
** centroid: 3, normalized-entropy: 0.8760643678555242, [(2, 50), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 90, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 10), (2, 90)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [23, 91, 0]]
** centroid: 6, normalized-entropy: 0.7254230207665605, [(1, 23), (2, 91)]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23773990179002955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23773990179002955, 0.19018304912091374] ***
*** starting iteration: 2; err: [Inf, 0.23773990179002955, 0.19018304912091374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23773990179002955, 0.19018304912091374, 0.18776835110652884] ***
*** starting iteration: 3; err: [Inf, 0.23773990179002955, 0.19018304912091374, 0.18776835110652884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23773990179002955, 0.19018304912091374, 0.18776835110652884, 0.18660409690678187] ***
*** finished computation of 7 references, err: [Inf, 0.23773990179002955, 0.19018304912091374, 0.18776835110652884, 0.18660409690678187] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 2, 0]]
** centroid: 2, normalized-entropy: 0.1564910629057016, [(1, 86), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 64, 20]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(2, 64), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 64, 0]]
** centroid: 5, normalized-entropy: 0.980597440991727, [(1, 46), (2, 64)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [42, 53, 0]]
** centroid: 6, normalized-entropy: 0.9903070204513952, [(1, 42), (2, 53)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 84, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23245367071224093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23245367071224093, 0.19901164336970587] ***
*** starting iteration: 2; err: [Inf, 0.23245367071224093, 0.19901164336970587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23245367071224093, 0.19901164336970587, 0.19651872001593929] ***
*** starting iteration: 3; err: [Inf, 0.23245367071224093, 0.19901164336970587, 0.19651872001593929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23245367071224093, 0.19901164336970587, 0.19651872001593929, 0.19546034468290419] ***
*** finished computation of 7 references, err: [Inf, 0.23245367071224093, 0.19901164336970587, 0.19651872001593929, 0.19546034468290419] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 64, 0]]
** centroid: 1, normalized-entropy: 0.9844268978000115, [(1, 86), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 16, 0]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(1, 72), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 23]]
** centroid: 4, normalized-entropy: 0.8607781176165941, [(2, 58), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 39, 0]]
** centroid: 5, normalized-entropy: 0.9596868937742168, [(1, 63), (2, 39)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3338357255173226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3338357255173226, 0.2506708273854297] ***
*** finished computation of 3 references, err: [Inf, 0.3338357255173226, 0.2506708273854297] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [291, 40, 0]]
** centroid: 1, normalized-entropy: 0.5317875621491963, [(1, 291), (2, 40)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 152, 21]]
** centroid: 2, normalized-entropy: 0.5333354650830889, [(2, 152), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [105, 57, 0]]
** centroid: 3, normalized-entropy: 0.9357110512652843, [(1, 105), (2, 57)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3016890810224517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3016890810224517, 0.253851099929743] ***
*** finished computation of 3 references, err: [Inf, 0.3016890810224517, 0.253851099929743] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [275, 87, 0]]
** centroid: 1, normalized-entropy: 0.7955911040662292, [(1, 275), (2, 87)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [105, 68, 0]]
** centroid: 2, normalized-entropy: 0.9667481550357654, [(1, 105), (2, 68)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 112, 20]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(2, 112), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3672032453750876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3672032453750876, 0.2352594782380496] ***
*** finished computation of 3 references, err: [Inf, 0.3672032453750876, 0.2352594782380496] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [94, 177, 23]]
** centroid: 1, normalized-entropy: 0.7913752113009048, [(1, 94), (2, 177), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [186, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [98, 89, 0]]
** centroid: 3, normalized-entropy: 0.9983284701587608, [(1, 98), (2, 89)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22207510391216692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932] ***
*** starting iteration: 2; err: [Inf, 0.22207510391216692, 0.17221260134636932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378] ***
*** starting iteration: 3; err: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749] ***
*** starting iteration: 4; err: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494] ***
*** starting iteration: 5; err: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494, 0.15081618691224033] ***
*** starting iteration: 6; err: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494, 0.15081618691224033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494, 0.15081618691224033, 0.14925993567852824] ***
*** starting iteration: 7; err: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494, 0.15081618691224033, 0.14925993567852824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494, 0.15081618691224033, 0.14925993567852824, 0.14833366208746135] ***
*** finished computation of 7 references, err: [Inf, 0.22207510391216692, 0.17221260134636932, 0.16038337280986378, 0.1559543215792749, 0.15313242651751494, 0.15081618691224033, 0.14925993567852824, 0.14833366208746135] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [68, 15, 0]]
** centroid: 1, normalized-entropy: 0.6816559115981193, [(1, 68), (2, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [2, 98, 0]]
** centroid: 3, normalized-entropy: 0.14144054254182067, [(1, 2), (2, 98)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 62, 0]]
** centroid: 4, normalized-entropy: 0.9790981671667148, [(1, 44), (2, 62)]
*** center 5: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 73, 21]]
** centroid: 6, normalized-entropy: 0.7663350359691776, [(2, 73), (3, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2036123486260871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036123486260871, 0.15682773575091782] ***
*** starting iteration: 2; err: [Inf, 0.2036123486260871, 0.15682773575091782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036123486260871, 0.15682773575091782, 0.1488144822513637] ***
*** starting iteration: 3; err: [Inf, 0.2036123486260871, 0.15682773575091782, 0.1488144822513637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036123486260871, 0.15682773575091782, 0.1488144822513637, 0.14649666349000035] ***
*** starting iteration: 4; err: [Inf, 0.2036123486260871, 0.15682773575091782, 0.1488144822513637, 0.14649666349000035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036123486260871, 0.15682773575091782, 0.1488144822513637, 0.14649666349000035, 0.1458524584440679] ***
*** finished computation of 7 references, err: [Inf, 0.2036123486260871, 0.15682773575091782, 0.1488144822513637, 0.14649666349000035, 0.1458524584440679] ***
*** center 1: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 73, 0]]
** centroid: 3, normalized-entropy: 0.23987382528036535, [(1, 3), (2, 73)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 20]]
** centroid: 4, normalized-entropy: 0.7732266742876346, [(2, 68), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 54, 0]]
** centroid: 6, normalized-entropy: 0.9965322634876737, [(1, 47), (2, 54)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 72, 0]]
** centroid: 7, normalized-entropy: 0.8739810481273581, [(1, 30), (2, 72)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18595322594744734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18595322594744734, 0.15583274382406725] ***
*** starting iteration: 2; err: [Inf, 0.18595322594744734, 0.15583274382406725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18595322594744734, 0.15583274382406725, 0.1534340631683124] ***
*** starting iteration: 3; err: [Inf, 0.18595322594744734, 0.15583274382406725, 0.1534340631683124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18595322594744734, 0.15583274382406725, 0.1534340631683124, 0.15268317756146707] ***
*** finished computation of 7 references, err: [Inf, 0.18595322594744734, 0.15583274382406725, 0.1534340631683124, 0.15268317756146707] ***
*** center 1: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 27, 0]]
** centroid: 2, normalized-entropy: 0.9904799742690307, [(1, 34), (2, 27)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 91, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 51, 0]]
** centroid: 5, normalized-entropy: 0.9984242941042116, [(1, 56), (2, 51)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [93, 19, 0]]
** centroid: 6, normalized-entropy: 0.6568871346605055, [(1, 93), (2, 19)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 78, 23]]
** centroid: 7, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17818388207633798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17818388207633798, 0.15511765198603095] ***
*** finished computation of 7 references, err: [Inf, 0.17818388207633798, 0.15511765198603095] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 63, 7]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 63), (3, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 29, 0]]
** centroid: 2, normalized-entropy: 0.8800270477157599, [(1, 68), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 83, 14]]
** centroid: 3, normalized-entropy: 0.5954670513561874, [(2, 83), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 19, 0]]
** centroid: 4, normalized-entropy: 0.7054690408228712, [(1, 80), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 30, 0]]
** centroid: 5, normalized-entropy: 0.9219957030944405, [(1, 59), (2, 30)]
*** center 6: selecting labels [1] (freq >= 2) [from [126, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [63, 25, 0]]
** centroid: 7, normalized-entropy: 0.8609652558547648, [(1, 63), (2, 25)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2047976565011812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2047976565011812, 0.16849857242987387] ***
*** finished computation of 7 references, err: [Inf, 0.2047976565011812, 0.16849857242987387] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [64, 81, 0]]
** centroid: 1, normalized-entropy: 0.9900618470242131, [(1, 64), (2, 81)]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 18, 0]]
** centroid: 4, normalized-entropy: 0.7401470427139037, [(1, 68), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [73, 17, 0]]
** centroid: 5, normalized-entropy: 0.6991413063352633, [(1, 73), (2, 17)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 150, 20]]
** centroid: 6, normalized-entropy: 0.5225593745369407, [(2, 150), (3, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20055286484635038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20055286484635038, 0.15528873805615723] ***
*** finished computation of 7 references, err: [Inf, 0.20055286484635038, 0.15528873805615723] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 75, 23]]
** centroid: 1, normalized-entropy: 0.7861044688447759, [(2, 75), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 44, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 55), (2, 44)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 32, 0]]
** centroid: 5, normalized-entropy: 0.9078619154263698, [(1, 67), (2, 32)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 93, 0]]
** centroid: 6, normalized-entropy: 0.290715865467415, [(1, 5), (2, 93)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [45, 22, 0]]
** centroid: 7, normalized-entropy: 0.9132401614300725, [(1, 45), (2, 22)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39104500984879315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39104500984879315, 0.30118880319121005] ***
*** finished computation of 3 references, err: [Inf, 0.39104500984879315, 0.30118880319121005] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [87, 176, 21]]
** centroid: 1, normalized-entropy: 0.7750960182517, [(1, 87), (2, 176), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [203, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [106, 73, 0]]
** centroid: 3, normalized-entropy: 0.9753422522254835, [(1, 106), (2, 73)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37706697883288276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37706697883288276, 0.30784767550015557] ***
*** finished computation of 3 references, err: [Inf, 0.37706697883288276, 0.30784767550015557] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [262, 31, 0]]
** centroid: 1, normalized-entropy: 0.4871223423921964, [(1, 262), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [118, 70, 0]]
** centroid: 2, normalized-entropy: 0.9524521973646323, [(1, 118), (2, 70)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 166, 20]]
** centroid: 3, normalized-entropy: 0.49241092131589825, [(2, 166), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4353643108342217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4353643108342217, 0.315615383201632] ***
*** finished computation of 3 references, err: [Inf, 0.4353643108342217, 0.315615383201632] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [252, 66, 0]]
** centroid: 1, normalized-entropy: 0.7367680100024784, [(1, 252), (2, 66)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [126, 57, 0]]
** centroid: 2, normalized-entropy: 0.8948692308065576, [(1, 126), (2, 57)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 143, 23]]
** centroid: 3, normalized-entropy: 0.5804398762347501, [(2, 143), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5017100001095204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5017100001095204, 0.32976548460398886] ***
*** finished computation of 3 references, err: [Inf, 0.5017100001095204, 0.32976548460398886] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [102, 142, 2]]
** centroid: 1, normalized-entropy: 0.6565954949594872, [(1, 102), (2, 142), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [256, 15, 0]]
** centroid: 2, normalized-entropy: 0.308704912445651, [(1, 256), (2, 15)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [38, 92, 19]]
** centroid: 3, normalized-entropy: 0.8272231844091562, [(1, 38), (2, 92), (3, 19)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42423860433286636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42423860433286636, 0.29992053913988587] ***
*** finished computation of 3 references, err: [Inf, 0.42423860433286636, 0.29992053913988587] ***
*** center 1: selecting labels [1] (freq >= 1) [from [214, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [22, 177, 20]]
** centroid: 2, normalized-entropy: 0.5657225187244495, [(1, 22), (2, 177), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [144, 90, 0]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(1, 144), (2, 90)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4176617397073617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4176617397073617, 0.32795025443454373] ***
*** finished computation of 3 references, err: [Inf, 0.4176617397073617, 0.32795025443454373] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [53, 171, 5]]
** centroid: 1, normalized-entropy: 0.5828123032987518, [(1, 53), (2, 171), (3, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [271, 9, 0]]
** centroid: 2, normalized-entropy: 0.2050268911596807, [(1, 271), (2, 9)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [54, 86, 18]]
** centroid: 3, normalized-entropy: 0.8606042133399249, [(1, 54), (2, 86), (3, 18)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3758246962445321] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3758246962445321, 0.338205920909909] ***
*** starting iteration: 2; err: [Inf, 0.3758246962445321, 0.338205920909909] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3758246962445321, 0.338205920909909, 0.33394994307029713] ***
*** starting iteration: 3; err: [Inf, 0.3758246962445321, 0.338205920909909, 0.33394994307029713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3758246962445321, 0.338205920909909, 0.33394994307029713, 0.3279269387380586] ***
*** finished computation of 3 references, err: [Inf, 0.3758246962445321, 0.338205920909909, 0.33394994307029713, 0.3279269387380586] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 140, 0]]
** centroid: 1, normalized-entropy: 0.921423037725537, [(1, 71), (2, 140)]
*** center 2: selecting labels [1] (freq >= 1) [from [235, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [90, 109, 21]]
** centroid: 3, normalized-entropy: 0.8536525481066866, [(1, 90), (2, 109), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36343606080820806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36343606080820806, 0.32110592775672364] ***
*** starting iteration: 2; err: [Inf, 0.36343606080820806, 0.32110592775672364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36343606080820806, 0.32110592775672364, 0.30245481552402564] ***
*** starting iteration: 3; err: [Inf, 0.36343606080820806, 0.32110592775672364, 0.30245481552402564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36343606080820806, 0.32110592775672364, 0.30245481552402564, 0.2977072455357576] ***
*** finished computation of 3 references, err: [Inf, 0.36343606080820806, 0.32110592775672364, 0.30245481552402564, 0.2977072455357576] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [139, 75, 0]]
** centroid: 1, normalized-entropy: 0.934484692495733, [(1, 139), (2, 75)]
*** center 2: selecting labels [1] (freq >= 1) [from [231, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [10, 192, 20]]
** centroid: 3, normalized-entropy: 0.43877947001302003, [(1, 10), (2, 192), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.6046267881559423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6046267881559423, 0.35032417155059425] ***
*** starting iteration: 2; err: [Inf, 0.6046267881559423, 0.35032417155059425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6046267881559423, 0.35032417155059425, 0.3395315058301782] ***
*** starting iteration: 3; err: [Inf, 0.6046267881559423, 0.35032417155059425, 0.3395315058301782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6046267881559423, 0.35032417155059425, 0.3395315058301782, 0.3301555788175188] ***
*** finished computation of 3 references, err: [Inf, 0.6046267881559423, 0.35032417155059425, 0.3395315058301782, 0.3301555788175188] ***
*** center 1: selecting labels [1] (freq >= 1) [from [175, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [118, 93, 0]]
** centroid: 2, normalized-entropy: 0.9898496661586345, [(1, 118), (2, 93)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [85, 173, 23]]
** centroid: 3, normalized-entropy: 0.7875237298329004, [(1, 85), (2, 173), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33555705913876716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33555705913876716, 0.2327619074192178] ***
*** starting iteration: 2; err: [Inf, 0.33555705913876716, 0.2327619074192178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33555705913876716, 0.2327619074192178, 0.2300085159894023] ***
*** starting iteration: 3; err: [Inf, 0.33555705913876716, 0.2327619074192178, 0.2300085159894023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33555705913876716, 0.2327619074192178, 0.2300085159894023, 0.22943646067686313] ***
*** finished computation of 3 references, err: [Inf, 0.33555705913876716, 0.2327619074192178, 0.2300085159894023, 0.22943646067686313] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [76, 153, 20]]
** centroid: 1, normalized-entropy: 0.7864554283249249, [(1, 76), (2, 153), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [105, 96, 1]]
** centroid: 3, normalized-entropy: 0.6553128150382634, [(1, 105), (2, 96), (3, 1)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38470975131863194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38470975131863194, 0.23560252138923132] ***
*** starting iteration: 2; err: [Inf, 0.38470975131863194, 0.23560252138923132] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38470975131863194, 0.23560252138923132, 0.23423611916143677] ***
*** starting iteration: 3; err: [Inf, 0.38470975131863194, 0.23560252138923132, 0.23423611916143677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38470975131863194, 0.23560252138923132, 0.23423611916143677, 0.23317600418904286] ***
*** starting iteration: 4; err: [Inf, 0.38470975131863194, 0.23560252138923132, 0.23423611916143677, 0.23317600418904286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38470975131863194, 0.23560252138923132, 0.23423611916143677, 0.23317600418904286, 0.23221274184773785] ***
*** finished computation of 3 references, err: [Inf, 0.38470975131863194, 0.23560252138923132, 0.23423611916143677, 0.23317600418904286, 0.23221274184773785] ***
*** center 1: selecting labels [1] (freq >= 1) [from [236, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [35, 172, 20]]
** centroid: 2, normalized-entropy: 0.648566606352285, [(1, 35), (2, 172), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [109, 95, 0]]
** centroid: 3, normalized-entropy: 0.9965999782846083, [(1, 109), (2, 95)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32817064707671506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32817064707671506, 0.23768169330879824] ***
*** starting iteration: 2; err: [Inf, 0.32817064707671506, 0.23768169330879824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32817064707671506, 0.23768169330879824, 0.23380204874636798] ***
*** starting iteration: 3; err: [Inf, 0.32817064707671506, 0.23768169330879824, 0.23380204874636798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32817064707671506, 0.23768169330879824, 0.23380204874636798, 0.23317169429834883] ***
*** finished computation of 3 references, err: [Inf, 0.32817064707671506, 0.23768169330879824, 0.23380204874636798, 0.23317169429834883] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [92, 157, 22]]
** centroid: 1, normalized-entropy: 0.8072449056124386, [(1, 92), (2, 157), (3, 22)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [98, 109, 1]]
** centroid: 2, normalized-entropy: 0.6543402966680856, [(1, 98), (2, 109), (3, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [188, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.27861989918654345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27861989918654345, 0.23723281783194425] ***
*** finished computation of 3 references, err: [Inf, 0.27861989918654345, 0.23723281783194425] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [95, 138, 12]]
** centroid: 1, normalized-entropy: 0.7631522527435378, [(1, 95), (2, 138), (3, 12)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [66, 111, 9]]
** centroid: 2, normalized-entropy: 0.7484456467507433, [(1, 66), (2, 111), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [235, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3263674495606285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3263674495606285, 0.2465894681442043] ***
*** finished computation of 3 references, err: [Inf, 0.3263674495606285, 0.2465894681442043] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [2, 223, 20]]
** centroid: 1, normalized-entropy: 0.2998514396646566, [(1, 2), (2, 223), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [147, 13, 0]]
** centroid: 2, normalized-entropy: 0.406568400969989, [(1, 147), (2, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [231, 31, 0]]
** centroid: 3, normalized-entropy: 0.5245141687546166, [(1, 231), (2, 31)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39516448405797483] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39516448405797483, 0.25885677293768206] ***
*** finished computation of 3 references, err: [Inf, 0.39516448405797483, 0.25885677293768206] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [200, 4, 0]]
** centroid: 1, normalized-entropy: 0.13923299905509884, [(1, 200), (2, 4)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [142, 149, 11]]
** centroid: 2, normalized-entropy: 0.7500632528790603, [(1, 142), (2, 149), (3, 11)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [36, 113, 12]]
** centroid: 3, normalized-entropy: 0.707192092611673, [(1, 36), (2, 113), (3, 12)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40586890901478045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40586890901478045, 0.33240862334057597] ***
*** starting iteration: 2; err: [Inf, 0.40586890901478045, 0.33240862334057597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335] ***
*** starting iteration: 3; err: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335, 0.3094988683093194] ***
*** starting iteration: 4; err: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335, 0.3094988683093194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335, 0.3094988683093194, 0.30720218740873506] ***
*** starting iteration: 5; err: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335, 0.3094988683093194, 0.30720218740873506] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335, 0.3094988683093194, 0.30720218740873506, 0.3064919406906128] ***
*** finished computation of 3 references, err: [Inf, 0.40586890901478045, 0.33240862334057597, 0.31571048869284335, 0.3094988683093194, 0.30720218740873506, 0.3064919406906128] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [238, 9, 0]]
** centroid: 1, normalized-entropy: 0.22571155271718235, [(1, 238), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [157, 46, 0]]
** centroid: 2, normalized-entropy: 0.772038835635383, [(1, 157), (2, 46)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 194, 21]]
** centroid: 3, normalized-entropy: 0.31673241233746663, [(1, 1), (2, 194), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3653408510350752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3653408510350752, 0.30115655416446824] ***
*** starting iteration: 2; err: [Inf, 0.3653408510350752, 0.30115655416446824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3653408510350752, 0.30115655416446824, 0.2938298097877265] ***
*** starting iteration: 3; err: [Inf, 0.3653408510350752, 0.30115655416446824, 0.2938298097877265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3653408510350752, 0.30115655416446824, 0.2938298097877265, 0.29159429378952756] ***
*** starting iteration: 4; err: [Inf, 0.3653408510350752, 0.30115655416446824, 0.2938298097877265, 0.29159429378952756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3653408510350752, 0.30115655416446824, 0.2938298097877265, 0.29159429378952756, 0.291008777821484] ***
*** finished computation of 3 references, err: [Inf, 0.3653408510350752, 0.30115655416446824, 0.2938298097877265, 0.29159429378952756, 0.291008777821484] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [76, 159, 20]]
** centroid: 1, normalized-entropy: 0.7782226144614984, [(1, 76), (2, 159), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [101, 108, 0]]
** centroid: 2, normalized-entropy: 0.9991906632216203, [(1, 101), (2, 108)]
*** center 3: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4264427911262607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4264427911262607, 0.3057626784797283] ***
*** starting iteration: 2; err: [Inf, 0.4264427911262607, 0.3057626784797283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4264427911262607, 0.3057626784797283, 0.3032230707639451] ***
*** starting iteration: 3; err: [Inf, 0.4264427911262607, 0.3057626784797283, 0.3032230707639451] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4264427911262607, 0.3057626784797283, 0.3032230707639451, 0.3021847849943559] ***
*** starting iteration: 4; err: [Inf, 0.4264427911262607, 0.3057626784797283, 0.3032230707639451, 0.3021847849943559] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4264427911262607, 0.3057626784797283, 0.3032230707639451, 0.3021847849943559, 0.3012388955712363] ***
*** finished computation of 3 references, err: [Inf, 0.4264427911262607, 0.3057626784797283, 0.3032230707639451, 0.3021847849943559, 0.3012388955712363] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [239, 2, 0]]
** centroid: 1, normalized-entropy: 0.0692911324648208, [(1, 239), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [8, 195, 23]]
** centroid: 2, normalized-entropy: 0.43519945724524123, [(1, 8), (2, 195), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [131, 69, 0]]
** centroid: 3, normalized-entropy: 0.9295231861792265, [(1, 131), (2, 69)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32018368178698886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32018368178698886, 0.2613774384078276] ***
*** starting iteration: 2; err: [Inf, 0.32018368178698886, 0.2613774384078276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687] ***
*** starting iteration: 3; err: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687, 0.2455941682790515] ***
*** starting iteration: 4; err: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687, 0.2455941682790515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687, 0.2455941682790515, 0.24401571519054785] ***
*** starting iteration: 5; err: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687, 0.2455941682790515, 0.24401571519054785] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687, 0.2455941682790515, 0.24401571519054785, 0.2435058162997927] ***
*** finished computation of 3 references, err: [Inf, 0.32018368178698886, 0.2613774384078276, 0.2490469650127687, 0.2455941682790515, 0.24401571519054785, 0.2435058162997927] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [250, 6, 0]]
** centroid: 1, normalized-entropy: 0.16032872589902855, [(1, 250), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [145, 53, 0]]
** centroid: 2, normalized-entropy: 0.8381111547057963, [(1, 145), (2, 53)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 190, 21]]
** centroid: 3, normalized-entropy: 0.32084535318632673, [(1, 1), (2, 190), (3, 21)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.8980177782572992, 0.893989798181415, 0.8820047592502682, 0.872971774169379, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4423369124232941] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4423369124232941, 0.30438926458816745] ***
*** finished computation of 3 references, err: [Inf, 0.4423369124232941, 0.30438926458816745] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [78, 207, 20]]
** centroid: 1, normalized-entropy: 0.7194899947965551, [(1, 78), (2, 207), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [201, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [101, 60, 0]]
** centroid: 3, normalized-entropy: 0.952700757031124, [(1, 101), (2, 60)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41668484750660373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41668484750660373, 0.3074199783670223] ***
*** finished computation of 3 references, err: [Inf, 0.41668484750660373, 0.3074199783670223] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [233, 49, 0]]
** centroid: 1, normalized-entropy: 0.6662316571289619, [(1, 233), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [145, 40, 0]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(1, 145), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 177, 23]]
** centroid: 3, normalized-entropy: 0.5148156530047155, [(2, 177), (3, 23)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38601672554852906] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38601672554852906, 0.3153795937828541] ***
*** finished computation of 3 references, err: [Inf, 0.38601672554852906, 0.3153795937828541] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [121, 183, 21]]
** centroid: 1, normalized-entropy: 0.7903161637876165, [(1, 121), (2, 183), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [88, 66, 0]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(1, 88), (2, 66)]
*** center 3: selecting labels [1] (freq >= 2) [from [187, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.8980177782572992, 0.893989798181415, 0.8820047592502682, 0.872971774169379, 0.8699957442472411, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.2065613095623416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2065613095623416, 0.1928584972038507] ***
*** finished computation of 7 references, err: [Inf, 0.2065613095623416, 0.1928584972038507] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [11, 82, 2]]
** centroid: 2, normalized-entropy: 0.41683384060931, [(1, 11), (2, 82), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 50, 0]]
** centroid: 5, normalized-entropy: 0.9910760598382222, [(1, 40), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 108, 19]]
** centroid: 6, normalized-entropy: 0.6088541907951365, [(2, 108), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [84, 9, 0]]
** centroid: 7, normalized-entropy: 0.45868581620054033, [(1, 84), (2, 9)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23573903527077303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23573903527077303, 0.1977636516115152] ***
*** finished computation of 7 references, err: [Inf, 0.23573903527077303, 0.1977636516115152] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 30, 0]]
** centroid: 1, normalized-entropy: 0.9108783787500366, [(1, 62), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [83, 43, 0]]
** centroid: 2, normalized-entropy: 0.9260286754524167, [(1, 83), (2, 43)]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 19, 0]]
** centroid: 4, normalized-entropy: 0.8659653498997099, [(1, 47), (2, 19)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 77, 18]]
** centroid: 5, normalized-entropy: 0.7003691487575897, [(2, 77), (3, 18)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 98, 2]]
** centroid: 6, normalized-entropy: 0.14144054254182067, [(2, 98), (3, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30232525704710606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30232525704710606, 0.21378077976782617] ***
*** finished computation of 7 references, err: [Inf, 0.30232525704710606, 0.21378077976782617] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [28, 65, 11]]
** centroid: 1, normalized-entropy: 0.8052370637063597, [(1, 28), (2, 65), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 4, 0]]
** centroid: 2, normalized-entropy: 0.2645173683629748, [(1, 85), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [19, 92, 12]]
** centroid: 4, normalized-entropy: 0.6669974501909373, [(1, 19), (2, 92), (3, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [15, 105, 0]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(1, 15), (2, 105)]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.8980177782572992, 0.8959768151384918, 0.893989798181415, 0.8820047592502682, 0.872971774169379, 0.8699957442472411, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4505658598068553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505658598068553, 0.3188865721594911] ***
*** starting iteration: 2; err: [Inf, 0.4505658598068553, 0.3188865721594911] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243] ***
*** starting iteration: 3; err: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243, 0.29390282936704654] ***
*** starting iteration: 4; err: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243, 0.29390282936704654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243, 0.29390282936704654, 0.2920747275293634] ***
*** starting iteration: 5; err: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243, 0.29390282936704654, 0.2920747275293634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243, 0.29390282936704654, 0.2920747275293634, 0.29157542037377665] ***
*** finished computation of 3 references, err: [Inf, 0.4505658598068553, 0.3188865721594911, 0.29977245966403243, 0.29390282936704654, 0.2920747275293634, 0.29157542037377665] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [59, 153, 21]]
** centroid: 1, normalized-entropy: 0.7654028880218056, [(1, 59), (2, 153), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [114, 96, 0]]
** centroid: 2, normalized-entropy: 0.9946937953613056, [(1, 114), (2, 96)]
*** center 3: selecting labels [1] (freq >= 1) [from [223, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3585043995078469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3585043995078469, 0.30319872199427866] ***
*** starting iteration: 2; err: [Inf, 0.3585043995078469, 0.30319872199427866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3585043995078469, 0.30319872199427866, 0.2997598626093752] ***
*** starting iteration: 3; err: [Inf, 0.3585043995078469, 0.30319872199427866, 0.2997598626093752] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3585043995078469, 0.30319872199427866, 0.2997598626093752, 0.29888942856076306] ***
*** finished computation of 3 references, err: [Inf, 0.3585043995078469, 0.30319872199427866, 0.2997598626093752, 0.29888942856076306] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [4, 189, 20]]
** centroid: 1, normalized-entropy: 0.36668206291146876, [(1, 4), (2, 189), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [234, 3, 0]]
** centroid: 2, normalized-entropy: 0.09794058271817412, [(1, 234), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [142, 75, 0]]
** centroid: 3, normalized-entropy: 0.9300973487723323, [(1, 142), (2, 75)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5190106529820672] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5190106529820672, 0.31121421118149595] ***
*** starting iteration: 2; err: [Inf, 0.5190106529820672, 0.31121421118149595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5190106529820672, 0.31121421118149595, 0.2984769539195469] ***
*** starting iteration: 3; err: [Inf, 0.5190106529820672, 0.31121421118149595, 0.2984769539195469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5190106529820672, 0.31121421118149595, 0.2984769539195469, 0.29691019599818846] ***
*** starting iteration: 4; err: [Inf, 0.5190106529820672, 0.31121421118149595, 0.2984769539195469, 0.29691019599818846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5190106529820672, 0.31121421118149595, 0.2984769539195469, 0.29691019599818846, 0.29669745807358616] ***
*** finished computation of 3 references, err: [Inf, 0.5190106529820672, 0.31121421118149595, 0.2984769539195469, 0.29691019599818846, 0.29669745807358616] ***
*** center 1: selecting labels [1] (freq >= 1) [from [194, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [69, 172, 23]]
** centroid: 2, normalized-entropy: 0.7668482670077256, [(1, 69), (2, 172), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [115, 94, 0]]
** centroid: 3, normalized-entropy: 0.9927050272181983, [(1, 115), (2, 94)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2917992239964807] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2917992239964807, 0.2328285390452423] ***
*** starting iteration: 2; err: [Inf, 0.2917992239964807, 0.2328285390452423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2917992239964807, 0.2328285390452423, 0.23071593977790605] ***
*** starting iteration: 3; err: [Inf, 0.2917992239964807, 0.2328285390452423, 0.23071593977790605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2917992239964807, 0.2328285390452423, 0.23071593977790605, 0.23003099596424326] ***
*** finished computation of 3 references, err: [Inf, 0.2917992239964807, 0.2328285390452423, 0.23071593977790605, 0.23003099596424326] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [60, 157, 21]]
** centroid: 1, normalized-entropy: 0.7609836442617329, [(1, 60), (2, 157), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [116, 92, 0]]
** centroid: 2, normalized-entropy: 0.990374836448575, [(1, 116), (2, 92)]
*** center 3: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2417435717616772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2417435717616772, 0.23407072695097822] ***
*** starting iteration: 2; err: [Inf, 0.2417435717616772, 0.23407072695097822] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2417435717616772, 0.23407072695097822, 0.23133093913154176] ***
*** starting iteration: 3; err: [Inf, 0.2417435717616772, 0.23407072695097822, 0.23133093913154176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2417435717616772, 0.23407072695097822, 0.23133093913154176, 0.23005013705428126] ***
*** starting iteration: 4; err: [Inf, 0.2417435717616772, 0.23407072695097822, 0.23133093913154176, 0.23005013705428126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2417435717616772, 0.23407072695097822, 0.23133093913154176, 0.23005013705428126, 0.22917770242634072] ***
*** finished computation of 3 references, err: [Inf, 0.2417435717616772, 0.23407072695097822, 0.23133093913154176, 0.23005013705428126, 0.22917770242634072] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [107, 101, 1]]
** centroid: 1, normalized-entropy: 0.6551457772729846, [(1, 107), (2, 101), (3, 1)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [60, 166, 19]]
** centroid: 2, normalized-entropy: 0.7341851185377181, [(1, 60), (2, 166), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4066502216050047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4066502216050047, 0.2607759803825378] ***
*** starting iteration: 2; err: [Inf, 0.4066502216050047, 0.2607759803825378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4066502216050047, 0.2607759803825378, 0.23997435022307478] ***
*** starting iteration: 3; err: [Inf, 0.4066502216050047, 0.2607759803825378, 0.23997435022307478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4066502216050047, 0.2607759803825378, 0.23997435022307478, 0.2361324783442528] ***
*** starting iteration: 4; err: [Inf, 0.4066502216050047, 0.2607759803825378, 0.23997435022307478, 0.2361324783442528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4066502216050047, 0.2607759803825378, 0.23997435022307478, 0.2361324783442528, 0.23586715752122062] ***
*** finished computation of 3 references, err: [Inf, 0.4066502216050047, 0.2607759803825378, 0.23997435022307478, 0.2361324783442528, 0.23586715752122062] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [103, 90, 0]]
** centroid: 1, normalized-entropy: 0.9967247420891053, [(1, 103), (2, 90)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [27, 176, 23]]
** centroid: 2, normalized-entropy: 0.6199766820559979, [(1, 27), (2, 176), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [248, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.8980177782572992, 0.8959768151384918, 0.893989798181415, 0.8850227472981964, 0.8820047592502682, 0.872971774169379, 0.8699957442472411, 0.8389796982611353, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 18
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.8980177782572992, 0.8959768151384918, 0.893989798181415, 0.8850227472981964, 0.8820047592502682, 0.872971774169379, 0.8699957442472411, 0.8389796982611353, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 20
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.37284547707251925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37284547707251925, 0.3143460418799663] ***
*** starting iteration: 2; err: [Inf, 0.37284547707251925, 0.3143460418799663] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37284547707251925, 0.3143460418799663, 0.3071387365303777] ***
*** starting iteration: 3; err: [Inf, 0.37284547707251925, 0.3143460418799663, 0.3071387365303777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37284547707251925, 0.3143460418799663, 0.3071387365303777, 0.3057934847554086] ***
*** finished computation of 3 references, err: [Inf, 0.37284547707251925, 0.3143460418799663, 0.3071387365303777, 0.3057934847554086] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 209, 21]]
** centroid: 1, normalized-entropy: 0.4408086401475993, [(2, 209), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [170, 27, 0]]
** centroid: 2, normalized-entropy: 0.5764760747770721, [(1, 170), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [226, 13, 0]]
** centroid: 3, normalized-entropy: 0.3047740806097585, [(1, 226), (2, 13)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4685826357509913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4685826357509913, 0.3016601330035183] ***
*** starting iteration: 2; err: [Inf, 0.4685826357509913, 0.3016601330035183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4685826357509913, 0.3016601330035183, 0.29358480577503726] ***
*** starting iteration: 3; err: [Inf, 0.4685826357509913, 0.3016601330035183, 0.29358480577503726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4685826357509913, 0.3016601330035183, 0.29358480577503726, 0.2913192992183803] ***
*** finished computation of 3 references, err: [Inf, 0.4685826357509913, 0.3016601330035183, 0.29358480577503726, 0.2913192992183803] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [104, 108, 0]]
** centroid: 1, normalized-entropy: 0.9997431860710851, [(1, 104), (2, 108)]
*** center 2: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [65, 159, 20]]
** centroid: 3, normalized-entropy: 0.761405640632384, [(1, 65), (2, 159), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4111488108541342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4111488108541342, 0.3233979543645879] ***
*** starting iteration: 2; err: [Inf, 0.4111488108541342, 0.3233979543645879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4111488108541342, 0.3233979543645879, 0.3230239129478651] ***
*** finished computation of 3 references, err: [Inf, 0.4111488108541342, 0.3233979543645879, 0.3230239129478651] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [210, 26, 0]]
** centroid: 1, normalized-entropy: 0.5004269841857644, [(1, 210), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [128, 73, 0]]
** centroid: 2, normalized-entropy: 0.9452945130782259, [(1, 128), (2, 73)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [40, 167, 23]]
** centroid: 3, normalized-entropy: 0.6980416035723036, [(1, 40), (2, 167), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4999852719137797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4999852719137797, 0.2738704380660399] ***
*** starting iteration: 2; err: [Inf, 0.4999852719137797, 0.2738704380660399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4999852719137797, 0.2738704380660399, 0.25122147415171714] ***
*** starting iteration: 3; err: [Inf, 0.4999852719137797, 0.2738704380660399, 0.25122147415171714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4999852719137797, 0.2738704380660399, 0.25122147415171714, 0.24339198783688895] ***
*** finished computation of 3 references, err: [Inf, 0.4999852719137797, 0.2738704380660399, 0.25122147415171714, 0.24339198783688895] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 199, 21]]
** centroid: 1, normalized-entropy: 0.4544189618585682, [(2, 199), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [162, 33, 0]]
** centroid: 2, normalized-entropy: 0.6559420757694151, [(1, 162), (2, 33)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [234, 17, 0]]
** centroid: 3, normalized-entropy: 0.3573913121827543, [(1, 234), (2, 17)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.34431236529250864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34431236529250864, 0.23729661398328494] ***
*** starting iteration: 2; err: [Inf, 0.34431236529250864, 0.23729661398328494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34431236529250864, 0.23729661398328494, 0.2295985072229834] ***
*** starting iteration: 3; err: [Inf, 0.34431236529250864, 0.23729661398328494, 0.2295985072229834] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34431236529250864, 0.23729661398328494, 0.2295985072229834, 0.22759552025606206] ***
*** finished computation of 3 references, err: [Inf, 0.34431236529250864, 0.23729661398328494, 0.2295985072229834, 0.22759552025606206] ***
*** center 1: selecting labels [1] (freq >= 2) [from [195, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [101, 133, 6]]
** centroid: 2, normalized-entropy: 0.7132451717803031, [(1, 101), (2, 133), (3, 6)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [84, 134, 14]]
** centroid: 3, normalized-entropy: 0.7776155010627398, [(1, 84), (2, 134), (3, 14)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3105973933154586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3105973933154586, 0.2531603472509786] ***
*** starting iteration: 2; err: [Inf, 0.3105973933154586, 0.2531603472509786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3105973933154586, 0.2531603472509786, 0.24437779856418473] ***
*** starting iteration: 3; err: [Inf, 0.3105973933154586, 0.2531603472509786, 0.24437779856418473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3105973933154586, 0.2531603472509786, 0.24437779856418473, 0.24195405747462204] ***
*** finished computation of 3 references, err: [Inf, 0.3105973933154586, 0.2531603472509786, 0.24437779856418473, 0.24195405747462204] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [221, 45, 0]]
** centroid: 1, normalized-entropy: 0.6558092965525364, [(1, 221), (2, 45)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [157, 43, 0]]
** centroid: 2, normalized-entropy: 0.7509319796338464, [(1, 157), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 178, 23]]
** centroid: 3, normalized-entropy: 0.5131289264956943, [(2, 178), (3, 23)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 20)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.9010237782692873, 0.8980177782572992, 0.8959768151384918, 0.893989798181415, 0.8850227472981964, 0.8820047592502682, 0.8760107412802024, 0.872971774169379, 0.8699957442472411, 0.8389796982611353, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 20
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 20)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.9010237782692873, 0.8980177782572992, 0.8959768151384918, 0.893989798181415, 0.8850227472981964, 0.8820047592502682, 0.8760107412802024, 0.872971774169379, 0.8699957442472411, 0.8389796982611353, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 20
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 20)
[0.9480018941096785, 0.9240497983012953, 0.9220208232184279, 0.9060317802832772, 0.9030767294240348, 0.9010237782692873, 0.8980177782572992, 0.8959768151384918, 0.893989798181415, 0.8850227472981964, 0.8820047592502682, 0.8760107412802024, 0.872971774169379, 0.8699957442472411, 0.8389796982611353, 0.8380716045386705, 0.8270096443749138, 0.8100076124028219, 0.8080745416074757, 0.7740584896273518]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9480018941096785
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2041351777203381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2041351777203381, 0.15612452318076975] ***
*** starting iteration: 2; err: [Inf, 0.2041351777203381, 0.15612452318076975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2041351777203381, 0.15612452318076975, 0.15352769422950224] ***
*** starting iteration: 3; err: [Inf, 0.2041351777203381, 0.15612452318076975, 0.15352769422950224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2041351777203381, 0.15612452318076975, 0.15352769422950224, 0.1527306306967512] ***
*** finished computation of 7 references, err: [Inf, 0.2041351777203381, 0.15612452318076975, 0.15352769422950224, 0.1527306306967512] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 60, 0]]
** centroid: 1, normalized-entropy: 0.9677884628267678, [(1, 92), (2, 60)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 138, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [110, 50, 0]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(1, 110), (2, 50)]
*** center 4: selecting labels [1] (freq >= 2) [from [139, 1, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 65, 32]]
** centroid: 5, normalized-entropy: 0.9148210087144519, [(2, 65), (3, 32)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [80, 77, 0]]
** centroid: 6, normalized-entropy: 0.9997366009648982, [(1, 80), (2, 77)]
*** center 7: selecting labels [1] (freq >= 2) [from [156, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1949660822208971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1949660822208971, 0.15988186919502914] ***
*** starting iteration: 2; err: [Inf, 0.1949660822208971, 0.15988186919502914] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352] ***
*** starting iteration: 3; err: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728] ***
*** starting iteration: 4; err: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728, 0.15053058209177106] ***
*** starting iteration: 5; err: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728, 0.15053058209177106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728, 0.15053058209177106, 0.14916537638567387] ***
*** starting iteration: 6; err: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728, 0.15053058209177106, 0.14916537638567387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728, 0.15053058209177106, 0.14916537638567387, 0.14818938824161887] ***
*** finished computation of 7 references, err: [Inf, 0.1949660822208971, 0.15988186919502914, 0.15412132255267352, 0.15198898818413728, 0.15053058209177106, 0.14916537638567387, 0.14818938824161887] ***
*** center 1: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 17, 0]]
** centroid: 2, normalized-entropy: 0.8054848387405957, [(1, 52), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 24, 0]]
** centroid: 3, normalized-entropy: 0.8858834790484443, [(1, 55), (2, 24)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 4]]
** centroid: 4, normalized-entropy: 0.33352200393097675, [(2, 61), (3, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [39, 32, 0]]
** centroid: 6, normalized-entropy: 0.9929768866085175, [(1, 39), (2, 32)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 60, 6]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(2, 60), (3, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21543055361090227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796] ***
*** starting iteration: 2; err: [Inf, 0.21543055361090227, 0.16655474902223796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428] ***
*** starting iteration: 3; err: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952] ***
*** starting iteration: 4; err: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666] ***
*** starting iteration: 5; err: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666, 0.14720296854525805] ***
*** starting iteration: 6; err: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666, 0.14720296854525805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666, 0.14720296854525805, 0.14499414905533195] ***
*** starting iteration: 7; err: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666, 0.14720296854525805, 0.14499414905533195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666, 0.14720296854525805, 0.14499414905533195, 0.14424902963265776] ***
*** finished computation of 7 references, err: [Inf, 0.21543055361090227, 0.16655474902223796, 0.1577709141932428, 0.15425705816037952, 0.15116643373295666, 0.14720296854525805, 0.14499414905533195, 0.14424902963265776] ***
*** center 1: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 43, 20]]
** centroid: 2, normalized-entropy: 0.9015982354056711, [(2, 43), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 68, 0]]
** centroid: 4, normalized-entropy: 0.25253077151613923, [(1, 3), (2, 68)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 41, 0]]
** centroid: 5, normalized-entropy: 0.9981021327390103, [(1, 37), (2, 41)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 49, 0]]
** centroid: 6, normalized-entropy: 0.4971677614160751, [(1, 6), (2, 49)]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19158302099071442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496] ***
*** starting iteration: 2; err: [Inf, 0.19158302099071442, 0.16421085777692496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758] ***
*** starting iteration: 3; err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416] ***
*** starting iteration: 4; err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808] ***
*** starting iteration: 5; err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209] ***
*** starting iteration: 6; err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209, 0.15161520800786094] ***
*** starting iteration: 7; err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209, 0.15161520800786094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209, 0.15161520800786094, 0.15031124804844148] ***
*** starting iteration: 8; err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209, 0.15161520800786094, 0.15031124804844148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209, 0.15161520800786094, 0.15031124804844148, 0.14985435222834348] ***
*** finished computation of 7 references, err: [Inf, 0.19158302099071442, 0.16421085777692496, 0.15859010078758, 0.15634259423520416, 0.15512369927670808, 0.15326106497878209, 0.15161520800786094, 0.15031124804844148, 0.14985435222834348] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 79, 0]]
** centroid: 1, normalized-entropy: 0.6921053253628727, [(1, 18), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [13, 54, 0]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(1, 13), (2, 54)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 20, 18]]
** centroid: 5, normalized-entropy: 0.9980008838722993, [(2, 20), (3, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 48, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21250722251832485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21250722251832485, 0.16069570625945925] ***
*** starting iteration: 2; err: [Inf, 0.21250722251832485, 0.16069570625945925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276] ***
*** starting iteration: 3; err: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276, 0.14812546026147902] ***
*** starting iteration: 4; err: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276, 0.14812546026147902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276, 0.14812546026147902, 0.14598563337698578] ***
*** starting iteration: 5; err: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276, 0.14812546026147902, 0.14598563337698578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276, 0.14812546026147902, 0.14598563337698578, 0.14510113089345394] ***
*** finished computation of 7 references, err: [Inf, 0.21250722251832485, 0.16069570625945925, 0.15217453159671276, 0.14812546026147902, 0.14598563337698578, 0.14510113089345394] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 44, 14]]
** centroid: 1, normalized-entropy: 0.7973265101474423, [(2, 44), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 50, 0]]
** centroid: 3, normalized-entropy: 0.9838333347337009, [(1, 37), (2, 50)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 4, 0]]
** centroid: 4, normalized-entropy: 0.3912435636292556, [(1, 48), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [58, 23, 0]]
** centroid: 5, normalized-entropy: 0.8607781176165941, [(1, 58), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 74, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16273789504589514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16273789504589514, 0.15303900491585956] ***
*** starting iteration: 2; err: [Inf, 0.16273789504589514, 0.15303900491585956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16273789504589514, 0.15303900491585956, 0.14979350448027254] ***
*** starting iteration: 3; err: [Inf, 0.16273789504589514, 0.15303900491585956, 0.14979350448027254] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16273789504589514, 0.15303900491585956, 0.14979350448027254, 0.14826221822761] ***
*** starting iteration: 4; err: [Inf, 0.16273789504589514, 0.15303900491585956, 0.14979350448027254, 0.14826221822761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16273789504589514, 0.15303900491585956, 0.14979350448027254, 0.14826221822761, 0.14794217488821595] ***
*** finished computation of 7 references, err: [Inf, 0.16273789504589514, 0.15303900491585956, 0.14979350448027254, 0.14826221822761, 0.14794217488821595] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 21, 0]]
** centroid: 2, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 27, 15]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(2, 27), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [44, 32, 0]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(1, 44), (2, 32)]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 47, 0]]
** centroid: 7, normalized-entropy: 0.9394532068181357, [(1, 26), (2, 47)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23878661249112337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123] ***
*** starting iteration: 2; err: [Inf, 0.23878661249112337, 0.17029649683833123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112] ***
*** starting iteration: 3; err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887] ***
*** starting iteration: 4; err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334] ***
*** starting iteration: 5; err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876] ***
*** starting iteration: 6; err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876, 0.14721870050858707] ***
*** starting iteration: 7; err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876, 0.14721870050858707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876, 0.14721870050858707, 0.14604845093935728] ***
*** starting iteration: 8; err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876, 0.14721870050858707, 0.14604845093935728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876, 0.14721870050858707, 0.14604845093935728, 0.14551373352855443] ***
*** finished computation of 7 references, err: [Inf, 0.23878661249112337, 0.17029649683833123, 0.16153709594719112, 0.15854179705306887, 0.1561054906733334, 0.15125502286478876, 0.14721870050858707, 0.14604845093935728, 0.14551373352855443] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [67, 13, 0]]
** centroid: 2, normalized-entropy: 0.6402569436810504, [(1, 67), (2, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [4, 64, 0]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(1, 4), (2, 64)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 6, 0]]
** centroid: 5, normalized-entropy: 0.5159469300074472, [(1, 46), (2, 6)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 41, 16]]
** centroid: 6, normalized-entropy: 0.8564052389131375, [(2, 41), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [17, 69, 0]]
** centroid: 7, normalized-entropy: 0.7172524777375696, [(1, 17), (2, 69)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2547806257805787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547806257805787, 0.16475479179993271] ***
*** starting iteration: 2; err: [Inf, 0.2547806257805787, 0.16475479179993271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958] ***
*** starting iteration: 3; err: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398] ***
*** starting iteration: 4; err: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398, 0.1477309839334339] ***
*** starting iteration: 5; err: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398, 0.1477309839334339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398, 0.1477309839334339, 0.14539471524115652] ***
*** starting iteration: 6; err: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398, 0.1477309839334339, 0.14539471524115652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398, 0.1477309839334339, 0.14539471524115652, 0.1446632042825222] ***
*** finished computation of 7 references, err: [Inf, 0.2547806257805787, 0.16475479179993271, 0.15485185166168958, 0.1514214058369398, 0.1477309839334339, 0.14539471524115652, 0.1446632042825222] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 17]]
** centroid: 1, normalized-entropy: 0.8791357668533337, [(2, 40), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 2, 0]]
** centroid: 2, normalized-entropy: 0.19823496409776642, [(1, 63), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [37, 29, 0]]
** centroid: 4, normalized-entropy: 0.9893755831922303, [(1, 37), (2, 29)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 64, 0]]
** centroid: 6, normalized-entropy: 0.5387379148665815, [(1, 9), (2, 64)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20691953831724821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20691953831724821, 0.15333135320991279] ***
*** starting iteration: 2; err: [Inf, 0.20691953831724821, 0.15333135320991279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20691953831724821, 0.15333135320991279, 0.14841313584335147] ***
*** starting iteration: 3; err: [Inf, 0.20691953831724821, 0.15333135320991279, 0.14841313584335147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20691953831724821, 0.15333135320991279, 0.14841313584335147, 0.1478184105604887] ***
*** finished computation of 7 references, err: [Inf, 0.20691953831724821, 0.15333135320991279, 0.14841313584335147, 0.1478184105604887] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 53, 0]]
** centroid: 1, normalized-entropy: 0.847107490529376, [(1, 20), (2, 53)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [16, 27, 0]]
** centroid: 4, normalized-entropy: 0.9522656254366643, [(1, 16), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 81, 0]]
** centroid: 5, normalized-entropy: 0.32001486274754665, [(1, 5), (2, 81)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 36, 18]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 36), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20499942411668598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20499942411668598, 0.16153313301876188] ***
*** starting iteration: 2; err: [Inf, 0.20499942411668598, 0.16153313301876188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354] ***
*** starting iteration: 3; err: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354, 0.14783270693477243] ***
*** starting iteration: 4; err: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354, 0.14783270693477243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354, 0.14783270693477243, 0.1459319063872099] ***
*** starting iteration: 5; err: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354, 0.14783270693477243, 0.1459319063872099] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354, 0.14783270693477243, 0.1459319063872099, 0.14550804142840207] ***
*** finished computation of 7 references, err: [Inf, 0.20499942411668598, 0.16153313301876188, 0.15086095201410354, 0.14783270693477243, 0.1459319063872099, 0.14550804142840207] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 43, 0]]
** centroid: 3, normalized-entropy: 0.9901226308935799, [(1, 34), (2, 43)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 53, 15]]
** centroid: 4, normalized-entropy: 0.7612401496918493, [(2, 53), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 26, 0]]
** centroid: 6, normalized-entropy: 0.9225641366401655, [(1, 51), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 66, 0]]
** centroid: 7, normalized-entropy: 0.1914332548141934, [(1, 2), (2, 66)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19950376124307515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366] ***
*** starting iteration: 2; err: [Inf, 0.19950376124307515, 0.16690776219498366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807] ***
*** starting iteration: 3; err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548] ***
*** starting iteration: 4; err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497] ***
*** starting iteration: 5; err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865] ***
*** starting iteration: 6; err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865, 0.15241916916891932] ***
*** starting iteration: 7; err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865, 0.15241916916891932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865, 0.15241916916891932, 0.15102328021079303] ***
*** starting iteration: 8; err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865, 0.15241916916891932, 0.15102328021079303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865, 0.15241916916891932, 0.15102328021079303, 0.15020223654713483] ***
*** finished computation of 7 references, err: [Inf, 0.19950376124307515, 0.16690776219498366, 0.16211440600454807, 0.15939745486434548, 0.15728326842654497, 0.15475936027336865, 0.15241916916891932, 0.15102328021079303, 0.15020223654713483] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 73, 20]]
** centroid: 1, normalized-entropy: 0.7510324165275097, [(2, 73), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 25, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 50), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 46, 0]]
** centroid: 5, normalized-entropy: 0.9677884628267678, [(1, 30), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 47, 0]]
** centroid: 6, normalized-entropy: 0.9738354819891416, [(1, 32), (2, 47)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20832393133081495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20832393133081495, 0.16632702033780516] ***
*** starting iteration: 2; err: [Inf, 0.20832393133081495, 0.16632702033780516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331] ***
*** starting iteration: 3; err: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244] ***
*** starting iteration: 4; err: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244, 0.15067637849412857] ***
*** starting iteration: 5; err: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244, 0.15067637849412857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244, 0.15067637849412857, 0.14913172294665128] ***
*** starting iteration: 6; err: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244, 0.15067637849412857, 0.14913172294665128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244, 0.15067637849412857, 0.14913172294665128, 0.14858474074024708] ***
*** finished computation of 7 references, err: [Inf, 0.20832393133081495, 0.16632702033780516, 0.1601063562296331, 0.15459707005508244, 0.15067637849412857, 0.14913172294665128, 0.14858474074024708] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 1, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 44, 0]]
** centroid: 2, normalized-entropy: 0.9979139338855983, [(1, 49), (2, 44)]
*** center 3: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 64, 19]]
** centroid: 4, normalized-entropy: 0.776116265618875, [(2, 64), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 46, 0]]
** centroid: 5, normalized-entropy: 0.9915017866855546, [(1, 37), (2, 46)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19788566736131907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19788566736131907, 0.16381117768958212] ***
*** starting iteration: 2; err: [Inf, 0.19788566736131907, 0.16381117768958212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533] ***
*** starting iteration: 3; err: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588] ***
*** starting iteration: 4; err: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588, 0.14668051656486933] ***
*** starting iteration: 5; err: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588, 0.14668051656486933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588, 0.14668051656486933, 0.1454508475381881] ***
*** starting iteration: 6; err: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588, 0.14668051656486933, 0.1454508475381881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588, 0.14668051656486933, 0.1454508475381881, 0.14468384137144313] ***
*** finished computation of 7 references, err: [Inf, 0.19788566736131907, 0.16381117768958212, 0.15409300635382533, 0.14870298298634588, 0.14668051656486933, 0.1454508475381881, 0.14468384137144313] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [37, 11, 0]]
** centroid: 1, normalized-entropy: 0.7765557854444601, [(1, 37), (2, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [6, 76, 0]]
** centroid: 3, normalized-entropy: 0.3776463213737003, [(1, 6), (2, 76)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 70, 15]]
** centroid: 4, normalized-entropy: 0.6722948170756378, [(2, 70), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [57, 30, 0]]
** centroid: 6, normalized-entropy: 0.9293636260137188, [(1, 57), (2, 30)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [70, 11, 0]]
** centroid: 7, normalized-entropy: 0.5731393980555147, [(1, 70), (2, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1888286423799582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888286423799582, 0.15952233905158936] ***
*** starting iteration: 2; err: [Inf, 0.1888286423799582, 0.15952233905158936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666] ***
*** starting iteration: 3; err: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883] ***
*** starting iteration: 4; err: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883, 0.1485255861375481] ***
*** starting iteration: 5; err: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883, 0.1485255861375481] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883, 0.1485255861375481, 0.1471569764027372] ***
*** starting iteration: 6; err: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883, 0.1485255861375481, 0.1471569764027372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883, 0.1485255861375481, 0.1471569764027372, 0.14628844883479178] ***
*** finished computation of 7 references, err: [Inf, 0.1888286423799582, 0.15952233905158936, 0.15414409958198666, 0.15102955534122883, 0.1485255861375481, 0.1471569764027372, 0.14628844883479178] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 42, 0]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(1, 30), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 18]]
** centroid: 3, normalized-entropy: 0.8395304981054318, [(2, 49), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 62, 0]]
** centroid: 5, normalized-entropy: 0.5127091420308771, [(1, 8), (2, 62)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [43, 22, 0]]
** centroid: 6, normalized-entropy: 0.9233388889944429, [(1, 43), (2, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [54, 21, 0]]
** centroid: 7, normalized-entropy: 0.8554508105601307, [(1, 54), (2, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17461362434737385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17461362434737385, 0.1567324441857636] ***
*** starting iteration: 2; err: [Inf, 0.17461362434737385, 0.1567324441857636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17461362434737385, 0.1567324441857636, 0.15031407132651656] ***
*** starting iteration: 3; err: [Inf, 0.17461362434737385, 0.1567324441857636, 0.15031407132651656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17461362434737385, 0.1567324441857636, 0.15031407132651656, 0.14831342590972782] ***
*** starting iteration: 4; err: [Inf, 0.17461362434737385, 0.1567324441857636, 0.15031407132651656, 0.14831342590972782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17461362434737385, 0.1567324441857636, 0.15031407132651656, 0.14831342590972782, 0.1474707529246807] ***
*** finished computation of 7 references, err: [Inf, 0.17461362434737385, 0.1567324441857636, 0.15031407132651656, 0.14831342590972782, 0.1474707529246807] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 50, 0]]
** centroid: 1, normalized-entropy: 0.954434002924965, [(1, 30), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 8, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 32), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 13]]
** centroid: 3, normalized-entropy: 0.6652735227649414, [(2, 62), (3, 13)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 27, 0]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(1, 63), (2, 27)]
*** center 5: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 63, 0]]
** centroid: 6, normalized-entropy: 0.19823496409776642, [(1, 2), (2, 63)]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1781540725938976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1781540725938976, 0.1560092181302607] ***
*** starting iteration: 2; err: [Inf, 0.1781540725938976, 0.1560092181302607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428] ***
*** starting iteration: 3; err: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428, 0.1484655700093135] ***
*** starting iteration: 4; err: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428, 0.1484655700093135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428, 0.1484655700093135, 0.14719655538909138] ***
*** starting iteration: 5; err: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428, 0.1484655700093135, 0.14719655538909138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428, 0.1484655700093135, 0.14719655538909138, 0.14650771669484675] ***
*** finished computation of 7 references, err: [Inf, 0.1781540725938976, 0.1560092181302607, 0.1510191902909428, 0.1484655700093135, 0.14719655538909138, 0.14650771669484675] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 22, 0]]
** centroid: 2, normalized-entropy: 0.9081783472997053, [(1, 46), (2, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [70, 24, 0]]
** centroid: 4, normalized-entropy: 0.8196004346196011, [(1, 70), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [42, 14, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 42), (2, 14)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 61, 19]]
** centroid: 6, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24121971530281008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24121971530281008, 0.16949775236845016] ***
*** starting iteration: 2; err: [Inf, 0.24121971530281008, 0.16949775236845016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24121971530281008, 0.16949775236845016, 0.16060552712297066] ***
*** starting iteration: 3; err: [Inf, 0.24121971530281008, 0.16949775236845016, 0.16060552712297066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24121971530281008, 0.16949775236845016, 0.16060552712297066, 0.15918337076622993] ***
*** starting iteration: 4; err: [Inf, 0.24121971530281008, 0.16949775236845016, 0.16060552712297066, 0.15918337076622993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24121971530281008, 0.16949775236845016, 0.16060552712297066, 0.15918337076622993, 0.15842046342324465] ***
*** finished computation of 7 references, err: [Inf, 0.24121971530281008, 0.16949775236845016, 0.16060552712297066, 0.15918337076622993, 0.15842046342324465] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 72, 5]]
** centroid: 1, normalized-entropy: 0.34673146824966367, [(2, 72), (3, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 21, 0]]
** centroid: 2, normalized-entropy: 0.7296274178915987, [(1, 82), (2, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 29, 0]]
** centroid: 5, normalized-entropy: 0.9814538950336533, [(1, 21), (2, 29)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 76, 10]]
** centroid: 6, normalized-entropy: 0.5185697317883058, [(2, 76), (3, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17256499845162035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17256499845162035, 0.15118140535848215] ***
*** starting iteration: 2; err: [Inf, 0.17256499845162035, 0.15118140535848215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17256499845162035, 0.15118140535848215, 0.14916338339820504] ***
*** starting iteration: 3; err: [Inf, 0.17256499845162035, 0.15118140535848215, 0.14916338339820504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17256499845162035, 0.15118140535848215, 0.14916338339820504, 0.14816562964301555] ***
*** finished computation of 7 references, err: [Inf, 0.17256499845162035, 0.15118140535848215, 0.14916338339820504, 0.14816562964301555] ***
*** center 1: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 71, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [37, 37, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 37), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 28, 0]]
** centroid: 5, normalized-entropy: 0.9833761901392238, [(1, 38), (2, 28)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 61, 19]]
** centroid: 7, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17124194853473454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952] ***
*** starting iteration: 2; err: [Inf, 0.17124194853473454, 0.1605749891269952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278] ***
*** starting iteration: 3; err: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948] ***
*** starting iteration: 4; err: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218] ***
*** starting iteration: 5; err: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218, 0.1458442456331104] ***
*** starting iteration: 6; err: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218, 0.1458442456331104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218, 0.1458442456331104, 0.1444990466851741] ***
*** starting iteration: 7; err: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218, 0.1458442456331104, 0.1444990466851741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218, 0.1458442456331104, 0.1444990466851741, 0.14389825748279692] ***
*** finished computation of 7 references, err: [Inf, 0.17124194853473454, 0.1605749891269952, 0.155404517153278, 0.15030705110169948, 0.14752829092182218, 0.1458442456331104, 0.1444990466851741, 0.14389825748279692] ***
*** center 1: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 28, 0]]
** centroid: 2, normalized-entropy: 0.9340680553754911, [(1, 52), (2, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 50, 3]]
** centroid: 3, normalized-entropy: 0.3138129641688652, [(2, 50), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 74, 13]]
** centroid: 4, normalized-entropy: 0.6084002154765848, [(2, 74), (3, 13)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [17, 51, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 17), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [63, 10, 0]]
** centroid: 7, normalized-entropy: 0.576291461217437, [(1, 63), (2, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2254388629216701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254388629216701, 0.16335081697814166] ***
*** starting iteration: 2; err: [Inf, 0.2254388629216701, 0.16335081697814166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316] ***
*** starting iteration: 3; err: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207] ***
*** starting iteration: 4; err: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207, 0.1488107416536659] ***
*** starting iteration: 5; err: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207, 0.1488107416536659] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207, 0.1488107416536659, 0.14777416555164383] ***
*** starting iteration: 6; err: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207, 0.1488107416536659, 0.14777416555164383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207, 0.1488107416536659, 0.14777416555164383, 0.14715599239384755] ***
*** finished computation of 7 references, err: [Inf, 0.2254388629216701, 0.16335081697814166, 0.15504433140624316, 0.15082415965013207, 0.1488107416536659, 0.14777416555164383, 0.14715599239384755] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 22, 0]]
** centroid: 1, normalized-entropy: 0.8296071030882032, [(1, 62), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 52, 0]]
** centroid: 2, normalized-entropy: 0.9681647320759545, [(1, 34), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 48, 0]]
** centroid: 3, normalized-entropy: 0.9086185980409245, [(1, 23), (2, 48)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 72, 12]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 72), (3, 12)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19948601596429943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484] ***
*** starting iteration: 2; err: [Inf, 0.19948601596429943, 0.16500548026524484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333] ***
*** starting iteration: 3; err: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559] ***
*** starting iteration: 4; err: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455] ***
*** starting iteration: 5; err: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455, 0.14474779388401657] ***
*** starting iteration: 6; err: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455, 0.14474779388401657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455, 0.14474779388401657, 0.143578130222857] ***
*** starting iteration: 7; err: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455, 0.14474779388401657, 0.143578130222857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455, 0.14474779388401657, 0.143578130222857, 0.14329995638132095] ***
*** finished computation of 7 references, err: [Inf, 0.19948601596429943, 0.16500548026524484, 0.15585446627624333, 0.1499527198858559, 0.14685951645765455, 0.14474779388401657, 0.143578130222857, 0.14329995638132095] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 79, 0]]
** centroid: 1, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 59, 16]]
** centroid: 3, normalized-entropy: 0.7478061583312324, [(2, 59), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 26, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 52), (2, 26)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [36, 18, 0]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(1, 36), (2, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3202116655521095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3202116655521095, 0.18635961315222085] ***
*** starting iteration: 2; err: [Inf, 0.3202116655521095, 0.18635961315222085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405] ***
*** starting iteration: 3; err: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138] ***
*** starting iteration: 4; err: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138, 0.1473911585044116] ***
*** starting iteration: 5; err: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138, 0.1473911585044116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138, 0.1473911585044116, 0.1460348177959677] ***
*** starting iteration: 6; err: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138, 0.1473911585044116, 0.1460348177959677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138, 0.1473911585044116, 0.1460348177959677, 0.1453487652798649] ***
*** finished computation of 7 references, err: [Inf, 0.3202116655521095, 0.18635961315222085, 0.15862097831850405, 0.1504494749382138, 0.1473911585044116, 0.1460348177959677, 0.1453487652798649] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 11, 0]]
** centroid: 2, normalized-entropy: 0.6167482598263911, [(1, 61), (2, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 70, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 29, 15]]
** centroid: 5, normalized-entropy: 0.9256859869821296, [(2, 29), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [38, 10, 0]]
** centroid: 6, normalized-entropy: 0.7382848661434506, [(1, 38), (2, 10)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 72, 0]]
** centroid: 7, normalized-entropy: 0.7706290693639406, [(1, 21), (2, 72)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20929600067902357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20929600067902357, 0.17535310910083354] ***
*** starting iteration: 2; err: [Inf, 0.20929600067902357, 0.17535310910083354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298] ***
*** starting iteration: 3; err: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424] ***
*** starting iteration: 4; err: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424, 0.14869339941442014] ***
*** starting iteration: 5; err: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424, 0.14869339941442014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424, 0.14869339941442014, 0.14734355314262212] ***
*** starting iteration: 6; err: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424, 0.14869339941442014, 0.14734355314262212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424, 0.14869339941442014, 0.14734355314262212, 0.14661601980403066] ***
*** finished computation of 7 references, err: [Inf, 0.20929600067902357, 0.17535310910083354, 0.15983203895576298, 0.15200266362540424, 0.14869339941442014, 0.14734355314262212, 0.14661601980403066] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 22, 0]]
** centroid: 1, normalized-entropy: 0.8680403986166402, [(1, 54), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 60, 0]]
** centroid: 2, normalized-entropy: 0.699772221773307, [(1, 14), (2, 60)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [26, 76, 0]]
** centroid: 3, normalized-entropy: 0.8189555018403103, [(1, 26), (2, 76)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [37, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 59, 15]]
** centroid: 6, normalized-entropy: 0.7273006785144036, [(2, 59), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25334236374078317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997] ***
*** starting iteration: 2; err: [Inf, 0.25334236374078317, 0.16724373411945997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964] ***
*** starting iteration: 3; err: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143] ***
*** starting iteration: 4; err: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404] ***
*** starting iteration: 5; err: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404, 0.14383354926481842] ***
*** starting iteration: 6; err: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404, 0.14383354926481842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404, 0.14383354926481842, 0.14263159620575608] ***
*** starting iteration: 7; err: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404, 0.14383354926481842, 0.14263159620575608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404, 0.14383354926481842, 0.14263159620575608, 0.14212857143301516] ***
*** finished computation of 7 references, err: [Inf, 0.25334236374078317, 0.16724373411945997, 0.15655230539198964, 0.1515820551738143, 0.14713819744065404, 0.14383354926481842, 0.14263159620575608, 0.14212857143301516] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 38, 17]]
** centroid: 2, normalized-entropy: 0.8921212805771683, [(2, 38), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 59, 0]]
** centroid: 3, normalized-entropy: 0.8561146277685725, [(1, 23), (2, 59)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 16, 0]]
** centroid: 4, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 15, 0]]
** centroid: 5, normalized-entropy: 0.7495952572594798, [(1, 55), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19623744530044496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19623744530044496, 0.1571009133886546] ***
*** starting iteration: 2; err: [Inf, 0.19623744530044496, 0.1571009133886546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19623744530044496, 0.1571009133886546, 0.15074799059331417] ***
*** starting iteration: 3; err: [Inf, 0.19623744530044496, 0.1571009133886546, 0.15074799059331417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19623744530044496, 0.1571009133886546, 0.15074799059331417, 0.1493313479796052] ***
*** starting iteration: 4; err: [Inf, 0.19623744530044496, 0.1571009133886546, 0.15074799059331417, 0.1493313479796052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19623744530044496, 0.1571009133886546, 0.15074799059331417, 0.1493313479796052, 0.148607712732628] ***
*** finished computation of 7 references, err: [Inf, 0.19623744530044496, 0.1571009133886546, 0.15074799059331417, 0.1493313479796052, 0.148607712732628] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 31, 0]]
** centroid: 1, normalized-entropy: 0.995978956518722, [(1, 36), (2, 31)]
*** center 2: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [9, 60, 0]]
** centroid: 4, normalized-entropy: 0.5586293734521991, [(1, 9), (2, 60)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 52, 0]]
** centroid: 5, normalized-entropy: 0.8656939941993219, [(1, 21), (2, 52)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 61, 13]]
** centroid: 6, normalized-entropy: 0.6705250693158382, [(2, 61), (3, 13)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22803850193321704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22803850193321704, 0.15472243387438356] ***
*** starting iteration: 2; err: [Inf, 0.22803850193321704, 0.15472243387438356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22803850193321704, 0.15472243387438356, 0.14983440567180514] ***
*** starting iteration: 3; err: [Inf, 0.22803850193321704, 0.15472243387438356, 0.14983440567180514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22803850193321704, 0.15472243387438356, 0.14983440567180514, 0.1476659904718399] ***
*** starting iteration: 4; err: [Inf, 0.22803850193321704, 0.15472243387438356, 0.14983440567180514, 0.1476659904718399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22803850193321704, 0.15472243387438356, 0.14983440567180514, 0.1476659904718399, 0.14731361719965935] ***
*** finished computation of 7 references, err: [Inf, 0.22803850193321704, 0.15472243387438356, 0.14983440567180514, 0.1476659904718399, 0.14731361719965935] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 40, 0]]
** centroid: 2, normalized-entropy: 0.9468188316776024, [(1, 23), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 13, 0]]
** centroid: 3, normalized-entropy: 0.7746319868686841, [(1, 44), (2, 13)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 63, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [66, 15, 0]]
** centroid: 6, normalized-entropy: 0.6912898694057888, [(1, 66), (2, 15)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 66, 15]]
** centroid: 7, normalized-entropy: 0.6912898694057888, [(2, 66), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1957656077085994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957656077085994, 0.16089460400212557] ***
*** starting iteration: 2; err: [Inf, 0.1957656077085994, 0.16089460400212557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026] ***
*** starting iteration: 3; err: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026, 0.15013098601438105] ***
*** starting iteration: 4; err: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026, 0.15013098601438105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026, 0.15013098601438105, 0.14859792482852935] ***
*** starting iteration: 5; err: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026, 0.15013098601438105, 0.14859792482852935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026, 0.15013098601438105, 0.14859792482852935, 0.14801732258405537] ***
*** finished computation of 7 references, err: [Inf, 0.1957656077085994, 0.16089460400212557, 0.1543124756515026, 0.15013098601438105, 0.14859792482852935, 0.14801732258405537] ***
*** center 1: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 43, 19]]
** centroid: 3, normalized-entropy: 0.8890349038123858, [(2, 43), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 47, 0]]
** centroid: 4, normalized-entropy: 0.9918977415529348, [(1, 38), (2, 47)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 42, 0]]
** centroid: 5, normalized-entropy: 0.7367680100024784, [(1, 11), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 62, 0]]
** centroid: 6, normalized-entropy: 0.269828447703074, [(1, 3), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24055366491153837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24055366491153837, 0.1656403216291219] ***
*** starting iteration: 2; err: [Inf, 0.24055366491153837, 0.1656403216291219] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24055366491153837, 0.1656403216291219, 0.16063192673400045] ***
*** starting iteration: 3; err: [Inf, 0.24055366491153837, 0.1656403216291219, 0.16063192673400045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24055366491153837, 0.1656403216291219, 0.16063192673400045, 0.15874007010413332] ***
*** starting iteration: 4; err: [Inf, 0.24055366491153837, 0.1656403216291219, 0.16063192673400045, 0.15874007010413332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24055366491153837, 0.1656403216291219, 0.16063192673400045, 0.15874007010413332, 0.15797200656868518] ***
*** finished computation of 7 references, err: [Inf, 0.24055366491153837, 0.1656403216291219, 0.16063192673400045, 0.15874007010413332, 0.15797200656868518] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 102, 15]]
** centroid: 1, normalized-entropy: 0.552495114325111, [(2, 102), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [81, 9, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 81), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [20, 66, 0]]
** centroid: 3, normalized-entropy: 0.7824441294066888, [(1, 20), (2, 66)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 2, 0]]
** centroid: 4, normalized-entropy: 0.20307392998664567, [(1, 61), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 23, 0]]
** centroid: 5, normalized-entropy: 0.9841095278800533, [(1, 31), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18350221803970634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18350221803970634, 0.15318640655651689] ***
*** starting iteration: 2; err: [Inf, 0.18350221803970634, 0.15318640655651689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18350221803970634, 0.15318640655651689, 0.15047213381156324] ***
*** starting iteration: 3; err: [Inf, 0.18350221803970634, 0.15318640655651689, 0.15047213381156324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18350221803970634, 0.15318640655651689, 0.15047213381156324, 0.14987739311717452] ***
*** finished computation of 7 references, err: [Inf, 0.18350221803970634, 0.15318640655651689, 0.15047213381156324, 0.14987739311717452] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 57, 0]]
** centroid: 1, normalized-entropy: 0.7586638628883696, [(1, 16), (2, 57)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 69, 12]]
** centroid: 2, normalized-entropy: 0.6051865766334207, [(2, 69), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 40, 0]]
** centroid: 6, normalized-entropy: 0.2761954276479391, [(1, 2), (2, 40)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 28, 0]]
** centroid: 7, normalized-entropy: 0.8478617451660525, [(1, 74), (2, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24746741041354836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24746741041354836, 0.1731662226431072] ***
*** starting iteration: 2; err: [Inf, 0.24746741041354836, 0.1731662226431072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156] ***
*** starting iteration: 3; err: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156, 0.15073039731651078] ***
*** starting iteration: 4; err: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156, 0.15073039731651078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156, 0.15073039731651078, 0.14833716331236063] ***
*** starting iteration: 5; err: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156, 0.15073039731651078, 0.14833716331236063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156, 0.15073039731651078, 0.14833716331236063, 0.14761552137508988] ***
*** finished computation of 7 references, err: [Inf, 0.24746741041354836, 0.1731662226431072, 0.15602903069835156, 0.15073039731651078, 0.14833716331236063, 0.14761552137508988] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [6, 68, 0]]
** centroid: 1, normalized-entropy: 0.40597703847557104, [(1, 6), (2, 68)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [21, 66, 0]]
** centroid: 2, normalized-entropy: 0.7973265101474423, [(1, 21), (2, 66)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [40, 39, 0]]
** centroid: 6, normalized-entropy: 0.9998844148717589, [(1, 40), (2, 39)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 39, 15]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(2, 39), (3, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19144367461651562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19144367461651562, 0.16898223409615457] ***
*** starting iteration: 2; err: [Inf, 0.19144367461651562, 0.16898223409615457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887] ***
*** starting iteration: 3; err: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287] ***
*** starting iteration: 4; err: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287, 0.14390148098766803] ***
*** starting iteration: 5; err: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287, 0.14390148098766803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287, 0.14390148098766803, 0.1426902589481324] ***
*** starting iteration: 6; err: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287, 0.14390148098766803, 0.1426902589481324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287, 0.14390148098766803, 0.1426902589481324, 0.14211456022784114] ***
*** finished computation of 7 references, err: [Inf, 0.19144367461651562, 0.16898223409615457, 0.15555468257702887, 0.14726528051309287, 0.14390148098766803, 0.1426902589481324, 0.14211456022784114] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 68, 0]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(1, 4), (2, 68)]
*** center 2: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 20, 0]]
** centroid: 3, normalized-entropy: 0.9015982354056711, [(1, 43), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 64, 15]]
** centroid: 5, normalized-entropy: 0.7012065844539666, [(2, 64), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [34, 49, 0]]
** centroid: 7, normalized-entropy: 0.9763102872004581, [(1, 34), (2, 49)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 391,3 => 32,1 => 577), Dict(2 => 366,3 => 31,1 => 603))
[ Info: ===== scores for single classifier: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.9730400819219023,"macro_f1":0.9194864241593214,"accuracy":0.959,"class_f1":{"2":0.945260347129506,"3":0.8378378378378378,"1":0.9753610875106202},"class_precision":{"2":0.9242819843342036,"3":0.7209302325581395,"1":1.0},"class_recall":{"2":0.9672131147540983,"3":1.0,"1":0.9519071310116086}}
[ Info: ===== scores for 1: {"micro_f1":0.984,"precision":0.984,"recall":0.984,"macro_recall":0.9780917961458937,"macro_f1":0.9780917961458937,"accuracy":0.984,"class_f1":{"2":0.9781420765027322,"3":0.967741935483871,"1":0.988391376451078},"class_precision":{"2":0.9781420765027322,"3":0.967741935483871,"1":0.988391376451078},"class_recall":{"2":0.9781420765027322,"3":0.967741935483871,"1":0.988391376451078}}
[ Info: ===== scores for 5: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9791207894951471,"macro_f1":0.9635464521215485,"accuracy":0.97,"class_f1":{"2":0.959349593495935,"3":0.9538461538461539,"1":0.9774436090225564},"class_precision":{"2":0.9516129032258065,"3":0.9117647058823529,"1":0.9848484848484849},"class_recall":{"2":0.9672131147540983,"3":1.0,"1":0.9701492537313433}}
[ Info: ===== scores for 7: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9781783251320809,"macro_f1":0.9614469225997059,"accuracy":0.967,"class_f1":{"2":0.9557046979865771,"3":0.9538461538461539,"1":0.9747899159663865},"class_precision":{"2":0.9393139841688655,"3":0.9117647058823529,"1":0.9880749574105622},"class_recall":{"2":0.9726775956284153,"3":1.0,"1":0.9618573797678275}}
[ Info: ===== scores for 9: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9787311167296487,"macro_f1":0.9576179249803539,"accuracy":0.968,"class_f1":{"2":0.956989247311828,"3":0.9393939393939393,"1":0.9764705882352941},"class_precision":{"2":0.9417989417989417,"3":0.8857142857142857,"1":0.989778534923339},"class_recall":{"2":0.9726775956284153,"3":1.0,"1":0.9635157545605307}}
[ Info: ===== scores for 11: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.979089071944467,"macro_f1":0.9621868225281552,"accuracy":0.968,"class_f1":{"2":0.9571045576407506,"3":0.9538461538461539,"1":0.9756097560975608},"class_precision":{"2":0.9394736842105263,"3":0.9117647058823529,"1":0.9897610921501706},"class_recall":{"2":0.9754098360655737,"3":1.0,"1":0.9618573797678275}}
(score = 0.982, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.982, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.984, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.984, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.984,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.984,"precision":0.984,"recall":0.984,"macro_recall":0.9780917961458937,"macro_f1":0.9780917961458937,"accuracy":0.984,"class_f1":{"2":0.9781420765027322,"3":0.967741935483871,"1":0.988391376451078},"class_precision":{"2":0.9781420765027322,"3":0.967741935483871,"1":0.988391376451078},"class_recall":{"2":0.9781420765027322,"3":0.967741935483871,"1":0.988391376451078}}
Test Summary: | Pass  Total
AKNC          |    8      8
[378, 3, 2, 1, 1, 4, 2, 10, 1, 1, 6, 5, 1, 1, 13, 2, 8, 22, 10, 7, 3, 8, 4, 7, 5, 5, 25, 3, 7, 35, 1, 3, 2, 1, 13, 41, 17, 43, 12, 1, 37, 4, 12, 3, 4, 11, 2, 26, 2, 9, 10, 9, 1, 9, 19, 23, 23, 29, 9, 2, 45, 163, 5, 1, 15, 3, 45, 3, 1, 26, 28, 22, 3, 4, 8, 7, 10, 2, 1, 12, 6, 39, 2, 3, 30, 56, 61, 78, 1, 6, 41, 61, 26, 5, 1, 23, 19, 9, 39, 20, 2, 3, 164, 79, 9, 22, 5, 15, 35, 15, 9, 2, 50, 11, 10, 17, 27, 60, 86, 8, 48, 5, 8, 18, 5, 48, 3, 16, 34, 80, 2, 32, 39, 22, 66, 9, 3, 13, 16, 148, 10, 10, 159, 11, 35, 11, 73, 7, 6, 98, 9, 6, 12, 2, 26, 19, 4, 14, 12, 8, 15, 187, 106, 20, 17, 51, 62, 21, 16, 10, 660, 12, 21, 3, 14, 6, 267, 15, 209, 9, 14, 10, 2, 18, 35, 5, 13, 19, 16, 115, 17, 12, 149, 77, 43, 2, 25, 47, 19, 8, 3, 6, 172, 16, 29, 12, 128, 22, 19, 12, 10, 4, 22, 38, 9, 6, 152, 44, 32, 43, 20, 85, 32, 82, 39, 3, 36, 32, 135, 34, 6, 36, 47, 12, 61, 10, 4, 8, 13, 93, 3, 26, 9, 463, 6, 27, 16, 93, 28, 8, 16, 20, 35, 18, 132, 10, 27, 2, 55, 14, 15, 66, 18, 29, 7, 116, 15, 23, 17, 12, 44, 4, 34, 14, 34, 2, 11, 8, 136, 4, 141, 16, 65, 2, 24, 6, 7, 12, 75, 27, 10, 37, 104, 10, 11, 5, 33, 151, 1, 48]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6409999999999998, speedup = 0.5220172214033867, eval_ratio = 0.067798)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39973958333333315,"recall":0.37673611111111094,"f1":null,"seconds":0.0001415777951478958,"exhaustive_search_seconds":0.0003784447908401489,"evaluations":454.40625,"distances_sum":1701.8635089961251}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5390624999999999,"recall":0.5390624999999999,"f1":null,"seconds":0.0002284012734889984,"exhaustive_search_seconds":0.0003784447908401489,"evaluations":570.0703125,"distances_sum":1696.1664933224129}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6440972222222219,"recall":0.6440972222222219,"f1":0.6440972222222219,"seconds":0.00030560605227947235,"exhaustive_search_seconds":0.0003784447908401489,"evaluations":694.9609375,"distances_sum":1626.2720877101567}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7378472222222218,"recall":0.7378472222222218,"f1":0.7378472222222218,"seconds":0.0004311986267566681,"exhaustive_search_seconds":0.0003784447908401489,"evaluations":815.828125,"distances_sum":1585.2335671965513}
KCenters.DeloneInvIndex> reached performance {"precision":0.8003472222222215,"recall":0.8003472222222215,"f1":0.8003472222222215,"seconds":0.0005510337650775909,"exhaustive_search_seconds":0.0003784447908401489,"evaluations":914.6953125,"distances_sum":1565.160646316461}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7750000000000005, speedup = 0.9352354138459745, eval_ratio = 0.08962200000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
