Julia Version 1.6.0-DEV.129
Commit 38a373af12 (2020-05-29 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_cmChGJ/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_cmChGJ/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21716964407467026
curgen: 20 fitness: 0.21716964407467026
curgen: 30 fitness: 0.21723058327271547
curgen: 40 fitness: 0.2172332156426524
curgen: 50 fitness: 0.2172332156426524
CoordinateCreature{Array{Float64,1}}([-0.22264471309733125], -0.2172332156426524) -0.22264471309733125 -0.2172332156426524
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257889467356575
curgen: 100 fitness: 3.258128137393289
curgen: 150 fitness: 3.2581524680354645
curgen: 200 fitness: 3.258221595019087
curgen: 250 fitness: 3.258328434973851
curgen: 300 fitness: 3.258328434973851
curgen: 350 fitness: 3.2583473892025814
curgen: 400 fitness: 3.2583790273126274
curgen: 450 fitness: 3.258394982667161
curgen: 500 fitness: 3.2584411059807437
CoordinateCreature{Array{Float64,1}}([0.22211952425924997, 0.22241623723954354, -0.22254162797298868, 0.2219381723114358, -0.22261317072938042, 0.22262353574486252, 0.2225135251529566, 0.22229520108578105, 0.2229297633623393, 0.22260632768707062, -0.22328718871965852, -0.22258733350117188, 0.22259857011919126, 0.22226149513314553, 0.22257728422855227], -3.2584411059807437) [0.22211952425924997, 0.22241623723954354, -0.22254162797298868, 0.2219381723114358, -0.22261317072938042, 0.22262353574486252, 0.2225135251529566, 0.22229520108578105, 0.2229297633623393, 0.22260632768707062, -0.22328718871965852, -0.22258733350117188, 0.22259857011919126, 0.22226149513314553, 0.22257728422855227] -3.2584411059807437
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003566177740594867
curgen: 100 fitness: -0.00300175809880443
curgen: 150 fitness: -0.0019021100348197706
curgen: 200 fitness: -0.0018007918620526198
curgen: 250 fitness: -0.0012394675977702718
curgen: 300 fitness: -0.0012394675977702718
curgen: 350 fitness: -0.0012246208142698833
curgen: 400 fitness: -0.0006837420166334596
curgen: 450 fitness: -0.0006837420166334596
curgen: 500 fitness: -0.0006837420166334596
CoordinateCreature{Array{Float64,1}}([-0.00015296892764317483, -0.00016867396921620799, -0.000602519336655989, -9.978177730749345e-5, 1.2008712669589884e-5, -0.0007469119576114733, 0.0005205564947952136, -0.0005620245098023274, 3.53270295103895e-5, -0.00012309747079403783, -0.001088873129637286, 0.0004634296434481086, 0.00023061224850930986, 0.00016340638937377395, -0.0006164576251858015], 0.0006837420166334596) [-0.00015296892764317483, -0.00016867396921620799, -0.000602519336655989, -9.978177730749345e-5, 1.2008712669589884e-5, -0.0007469119576114733, 0.0005205564947952136, -0.0005620245098023274, 3.53270295103895e-5, -0.00012309747079403783, -0.001088873129637286, 0.0004634296434481086, 0.00023061224850930986, 0.00016340638937377395, -0.0006164576251858015] 0.0006837420166334596
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
