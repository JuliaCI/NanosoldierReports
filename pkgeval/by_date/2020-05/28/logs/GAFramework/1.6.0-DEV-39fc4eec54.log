Julia Version 1.6.0-DEV.120
Commit 39fc4eec54 (2020-05-28 16:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_LOjypZ/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_LOjypZ/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722959885498197
curgen: 20 fitness: 0.21722959885498197
curgen: 30 fitness: 0.21723349442642176
curgen: 40 fitness: 0.21723349442642176
curgen: 50 fitness: 0.21723349442642176
CoordinateCreature{Array{Float64,1}}([0.22260313460557585], -0.21723349442642176) 0.22260313460557585 -0.21723349442642176
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580581509895508
curgen: 100 fitness: 3.2583464594254
curgen: 150 fitness: 3.2583703026316
curgen: 200 fitness: 3.258370874287113
curgen: 250 fitness: 3.258380700172063
curgen: 300 fitness: 3.258411562299931
curgen: 350 fitness: 3.2584122583256403
curgen: 400 fitness: 3.2584122583256403
curgen: 450 fitness: 3.2584198216257443
curgen: 500 fitness: 3.2584688254519767
CoordinateCreature{Array{Float64,1}}([0.22284227800192977, -0.22321928448050496, 0.2225355380399486, -0.22275121183311045, 0.22268750959294664, -0.22252257786137225, 0.22247187832432117, -0.22274808364366644, -0.22247559077552478, 0.22250076047773643, 0.2225302890329479, 0.22267812903599596, -0.22218224262319017, 0.2224996382374485, -0.22257234858084438], -3.2584688254519767) [0.22284227800192977, -0.22321928448050496, 0.2225355380399486, -0.22275121183311045, 0.22268750959294664, -0.22252257786137225, 0.22247187832432117, -0.22274808364366644, -0.22247559077552478, 0.22250076047773643, 0.2225302890329479, 0.22267812903599596, -0.22218224262319017, 0.2224996382374485, -0.22257234858084438] -3.2584688254519767
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00442068773105575
curgen: 100 fitness: -0.0032650006531866893
curgen: 150 fitness: -0.0016931209676158687
curgen: 200 fitness: -0.001441991191654779
curgen: 250 fitness: -0.0013622200841894028
curgen: 300 fitness: -0.0012341556829937872
curgen: 350 fitness: -0.0012341556829937872
curgen: 400 fitness: -0.0012295595562648032
curgen: 450 fitness: -0.001207321377705739
curgen: 500 fitness: -0.001207321377705739
CoordinateCreature{Array{Float64,1}}([0.0001398166887729961, -0.0003170858583527749, 6.395040636800403e-5, 5.700695166906925e-6, -0.00033867058096401654, -0.0005600211923050963, 0.0009192693495718111, -0.00037085371714570337, -0.00019805057312623195, -0.0005854784473945953, 0.00024206560513698964, -1.3609174122150981e-6, -0.0005927235060704918, -0.00011499364350111814, 0.00193527921685341], 0.001207321377705739) [0.0001398166887729961, -0.0003170858583527749, 6.395040636800403e-5, 5.700695166906925e-6, -0.00033867058096401654, -0.0005600211923050963, 0.0009192693495718111, -0.00037085371714570337, -0.00019805057312623195, -0.0005854784473945953, 0.00024206560513698964, -1.3609174122150981e-6, -0.0005927235060704918, -0.00011499364350111814, 0.00193527921685341] 0.001207321377705739
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
