Julia Version 1.6.0-DEV.120
Commit 39fc4eec54 (2020-05-28 16:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Zlib_jll ───────────────────── v1.2.11+10
  Installed Mocking ────────────────────── v0.7.1
  Installed Compat ─────────────────────── v3.10.0
  Installed MatrixFactorizations ───────── v0.4.1
  Installed LazyBandedMatrices ─────────── v0.2.9
  Installed SpecialFunctions ───────────── v0.10.3
  Installed InfiniteLinearAlgebra ──────── v0.3.3
  Installed DSP ────────────────────────── v0.6.7
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed Libiconv_jll ───────────────── v1.16.0+2
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed InfiniteArrays ─────────────── v0.7.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed RecipesBase ────────────────── v1.0.1
  Installed Intervals ──────────────────── v1.2.0
  Installed BandedMatrices ─────────────── v0.15.10
  Installed TimeZones ──────────────────── v1.2.0
  Installed Reexport ───────────────────── v0.2.0
  Installed MKL_jll ────────────────────── v2019.0.117+2
  Installed ArrayLayouts ───────────────── v0.3.3
  Installed FillArrays ─────────────────── v0.8.10
  Installed ExprTools ──────────────────── v0.1.1
  Installed BlockArrays ────────────────── v0.12.7
  Installed Polynomials ────────────────── v1.1.1
  Installed XML2_jll ───────────────────── v2.9.9+4
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed SemiseparableMatrices ──────── v0.1.0
  Installed IterTools ──────────────────── v1.3.0
  Installed BlockBandedMatrices ────────── v0.8.4
  Installed LazyArrays ─────────────────── v0.16.9
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed StaticArrays ───────────────── v0.12.3
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed FFTW ───────────────────────── v1.2.1
  Installed EzXML ──────────────────────── v1.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [cde9dba0] + InfiniteLinearAlgebra v0.3.3
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [4c555306] + ArrayLayouts v0.3.3
  [aae01518] + BandedMatrices v0.15.10
  [8e7c35d0] + BlockArrays v0.12.7
  [ffab5731] + BlockBandedMatrices v0.8.4
  [34da2185] + Compat v3.10.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.7
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.1
  [f5851436] + FFTW_jll v3.3.9+5
  [1a297f60] + FillArrays v0.8.10
  [4858937d] + InfiniteArrays v0.7.0
  [cde9dba0] + InfiniteLinearAlgebra v0.3.3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [d8418881] + Intervals v1.2.0
  [c8e1da08] + IterTools v1.3.0
  [5078a376] + LazyArrays v0.16.9
  [d7e5e226] + LazyBandedMatrices v0.2.9
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [856f044c] + MKL_jll v2019.0.117+2
  [1914dd2f] + MacroTools v0.5.5
  [a3b82374] + MatrixFactorizations v0.4.1
  [78c3b35d] + Mocking v0.7.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [f27b6e38] + Polynomials v1.1.1
  [3cdcf5f2] + RecipesBase v1.0.1
  [189a3867] + Reexport v0.2.0
  [f8ebbe35] + SemiseparableMatrices v0.1.0
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [f269a46b] + TimeZones v1.2.0
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones → `~/.julia/packages/TimeZones/OjMoF/deps/build.log`
   Building FFTW ─────→ `~/.julia/packages/FFTW/5DZuu/deps/build.log`
    Testing InfiniteLinearAlgebra
Status `/tmp/jl_updKe3/Project.toml`
  [4c555306] ArrayLayouts v0.3.3
  [aae01518] BandedMatrices v0.15.10
  [8e7c35d0] BlockArrays v0.12.7
  [ffab5731] BlockBandedMatrices v0.8.4
  [1a297f60] FillArrays v0.8.10
  [4858937d] InfiniteArrays v0.7.0
  [cde9dba0] InfiniteLinearAlgebra v0.3.3
  [5078a376] LazyArrays v0.16.9
  [d7e5e226] LazyBandedMatrices v0.2.9
  [a3b82374] MatrixFactorizations v0.4.1
  [f8ebbe35] SemiseparableMatrices v0.1.0
  [276daf66] SpecialFunctions v0.10.3
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_updKe3/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [4c555306] ArrayLayouts v0.3.3
  [aae01518] BandedMatrices v0.15.10
  [8e7c35d0] BlockArrays v0.12.7
  [ffab5731] BlockBandedMatrices v0.8.4
  [34da2185] Compat v3.10.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.7
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.1
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.10
  [4858937d] InfiniteArrays v0.7.0
  [cde9dba0] InfiniteLinearAlgebra v0.3.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [d8418881] Intervals v1.2.0
  [c8e1da08] IterTools v1.3.0
  [5078a376] LazyArrays v0.16.9
  [d7e5e226] LazyBandedMatrices v0.2.9
  [94ce4f54] Libiconv_jll v1.16.0+2
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.5
  [a3b82374] MatrixFactorizations v0.4.1
  [78c3b35d] Mocking v0.7.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [f27b6e38] Polynomials v1.1.1
  [3cdcf5f2] RecipesBase v1.0.1
  [189a3867] Reexport v0.2.0
  [f8ebbe35] SemiseparableMatrices v0.1.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [f269a46b] TimeZones v1.2.0
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
∞-banded      |    6      6
Test Summary:  | Pass  Total
∞-block arrays |    5      5
Test Summary:                | Pass  Total
∞-Toeplitz and Pert-Toeplitz |   16     16
∞ x finite: Error During Test at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:109
  Test threw exception
  Expression: B' * A isa Transpose{<:Any, <:BandedMatrix}
  TypeError: in new, expected Tuple{Int64}, got a value of type Tuple{InfiniteArrays.Infinity}
  Stacktrace:
   [1] CartesianIndex{1}(::Tuple{InfiniteArrays.Infinity}) at ./multidimensional.jl:65
   [2] CartesianIndex(::Tuple{InfiniteArrays.Infinity}) at ./multidimensional.jl:68
   [3] last(::CartesianIndices{1,Tuple{OneToInf{Int64}}}) at ./multidimensional.jl:389
   [4] iterate at ./multidimensional.jl:347 [inlined]
   [5] macro expansion at ./simdloop.jl:70 [inlined]
   [6] lmul!(::Bool, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/generic.jl:200
   [7] materialize!(::Lmul{ScalarLayout,BandedMatrices.BandedRows{DenseColumnMajor},Bool,Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/lmul.jl:63
   [8] lmul!(::Bool, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/lmul.jl:45
   [9] default_blasmul!(::Float64, ::Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}, ::BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}, ::Bool, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:181
   [10] materialize!(::MulAdd{BandedMatrices.BandedRows{DenseColumnMajor},BroadcastBandedLayout{typeof(+)},BandedMatrices.BandedRows{DenseColumnMajor},Float64,Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}},BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}},Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:225
   [11] muladd!(::Float64, ::Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}, ::BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}, ::Float64, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:80
   [12] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:94 [inlined]
   [13] copy(::MulAdd{BandedMatrices.BandedRows{DenseColumnMajor},BroadcastBandedLayout{typeof(+)},ZerosLayout,Float64,Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}},BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}},Zeros{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:82
   [14] copy(::Applied{LazyArrays.MulAddStyle,typeof(*),Tuple{Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}},BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/linalg/muladd.jl:62
   [15] materialize at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyapplying.jl:49 [inlined]
   [16] apply at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyapplying.jl:46 [inlined]
   [17] *(::Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}, ::BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/linalg/lazymul.jl:71
   [18] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:109
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:105
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:73
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:72
  
∞ x finite: Error During Test at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:112
  Test threw exception
  Expression: (B' * A)[1:5, 1:7] ≈ (B')[1:5, 1:6] * A[1:6, 1:7]
  TypeError: in new, expected Tuple{Int64}, got a value of type Tuple{InfiniteArrays.Infinity}
  Stacktrace:
   [1] CartesianIndex{1}(::Tuple{InfiniteArrays.Infinity}) at ./multidimensional.jl:65
   [2] CartesianIndex(::Tuple{InfiniteArrays.Infinity}) at ./multidimensional.jl:68
   [3] last(::CartesianIndices{1,Tuple{OneToInf{Int64}}}) at ./multidimensional.jl:389
   [4] iterate at ./multidimensional.jl:347 [inlined]
   [5] macro expansion at ./simdloop.jl:70 [inlined]
   [6] lmul!(::Bool, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/generic.jl:200
   [7] materialize!(::Lmul{ScalarLayout,BandedMatrices.BandedRows{DenseColumnMajor},Bool,Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/lmul.jl:63
   [8] lmul!(::Bool, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/lmul.jl:45
   [9] default_blasmul!(::Float64, ::Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}, ::BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}, ::Bool, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:181
   [10] materialize!(::MulAdd{BandedMatrices.BandedRows{DenseColumnMajor},BroadcastBandedLayout{typeof(+)},BandedMatrices.BandedRows{DenseColumnMajor},Float64,Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}},BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}},Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:225
   [11] muladd!(::Float64, ::Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}, ::BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}, ::Float64, ::Transpose{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:80
   [12] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:94 [inlined]
   [13] copy(::MulAdd{BandedMatrices.BandedRows{DenseColumnMajor},BroadcastBandedLayout{typeof(+)},ZerosLayout,Float64,Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}},BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}},Zeros{Float64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/Il4Nx/src/muladd.jl:82
   [14] copy(::Applied{LazyArrays.MulAddStyle,typeof(*),Tuple{Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}},BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/linalg/muladd.jl:62
   [15] materialize at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyapplying.jl:49 [inlined]
   [16] apply at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/lazyapplying.jl:46 [inlined]
   [17] *(::Adjoint{Float64,BandedMatrix{Float64,Array{Float64,2},OneToInf{Int64}}}, ::BroadcastArray{Float64,2,typeof(+),Tuple{BandedMatrix{Float64,ApplyArray{Float64,2,typeof(*),Tuple{Array{Int64,2},ApplyArray{Float64,2,typeof(vcat),Tuple{ApplyArray{Float64,2,typeof(hcat),Tuple{Zeros{Float64,2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}},InfiniteArrays.ReshapedArray{Int64,2,InfiniteArrays.InfUnitRange{Int64},Tuple{Int64,InfiniteArrays.Infinity},Tuple{}}}}}}}},OneToInf{Int64}},BandedMatrix{Int64,ApplyArray{Int64,2,typeof(*),Tuple{Array{Int64,1},Ones{Int64,2,Tuple{Base.OneTo{Int64},OneToInf{Int64}}}}},OneToInf{Int64}}}}) at /home/pkgeval/.julia/packages/LazyArrays/KIPvT/src/linalg/lazymul.jl:71
   [18] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:112
   [19] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [20] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:105
   [21] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [22] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:73
   [23] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [24] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:72
  
Triangle OP recurrences: Test Failed at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:187
  Expression: k[Block.(2:3)] isa BlockArray
   Evaluated: [1, 2, 1, 2, 3] isa BlockArray
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:187
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:185
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:72
Triangle OP recurrences: Test Failed at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:188
  Expression: n[Block.(2:3)] isa BlockArray
   Evaluated: [2, 2, 3, 3, 3] isa BlockArray
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:188
 [2] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:185
 [4] top-level scope at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [5] top-level scope at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:72
Test Summary:             | Pass  Fail  Error  Broken  Total
Algebra                   |   70     2      2       3     77
  BandedMatrix            |   13            2       2     17
    ∞ x finite            |                 2       2      4
  BlockTridiagonal        |    8                           8
  Fill                    |    5                    1      6
  Banded Broadast         |   26                          26
  Triangle OP recurrences |    4     2                     6
  KronTrav                |   14                          14
ERROR: LoadError: Some tests did not pass: 70 passed, 2 failed, 2 errored, 3 broken.
in expression starting at /home/pkgeval/.julia/packages/InfiniteLinearAlgebra/D1Mdh/test/runtests.jl:71
ERROR: Package InfiniteLinearAlgebra errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1557
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
