Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Missings ──────────────────── v0.4.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed OrderedCollections ────────── v1.2.0
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.17
  Installed DataFrames ────────────────── v0.20.2
  Installed Compat ────────────────────── v3.10.0
  Installed TableTraits ───────────────── v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLDataPattern ─────────────── v0.5.3
  Installed MLDataUtils ───────────────── v0.5.1
  Installed Tables ────────────────────── v1.0.4
  Installed CategoricalArrays ─────────── v0.7.7
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_absQF2/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_absQF2/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9370718047022819
[ Info: 0.8307796732584636
[ Info: 0.5563809144993623
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3261598734309276
mean(cdnet.distances) = 0.3919384918858608
mean(crand.distances) = 0.34532958788176377
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.150390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.150390625,"f1":null,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.421875,"distances_sum":465.4452450113196}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.150390625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.150390625,"f1":null,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.421875,"distances_sum":465.4452450113196}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.150390625,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.150390625,"f1":null,"seconds":3.842636942863464e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.421875,"distances_sum":465.4452450113196}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":7.1767717599868774e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":5.390625,"distances_sum":524.0039885988299}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2109375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2109375,"f1":null,"seconds":7.1767717599868774e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":5.390625,"distances_sum":524.0039885988299}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":8.534640073776245e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":5.765625,"distances_sum":951.6913618869555}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4892578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.4892578125,"f1":null,"seconds":9.221956133842468e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":6.609375,"distances_sum":1174.539706323152}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.517578125,"f1":0.6678730991230997,"seconds":9.251758456230164e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":6.84375,"distances_sum":1208.6751464620513}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.517578125,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.517578125,"f1":0.6678730991230997,"seconds":9.251758456230164e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":6.84375,"distances_sum":1208.6751464620513}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7647002303252309,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":7.53125,"distances_sum":1583.2904950261084}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9184471778221788,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":8.7109375,"distances_sum":2364.8909641031346}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.924748168498169,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":8.7109375,"distances_sum":2384.7498717465483}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7710256757131764,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":7.4140625,"distances_sum":1630.2498908792427}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8681640625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.924748168498169,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":8.7109375,"distances_sum":2384.7498717465483}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8681640625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8681640625,"f1":0.924748168498169,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":2.7101486921310425e-6,"evaluations":8.7109375,"distances_sum":2384.7498717465483}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5302734375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.5302734375,"f1":null,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.2890625,"distances_sum":1262.7855778536814}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.486328125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.486328125,"f1":null,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":6.9296875,"distances_sum":1121.56557652565}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":6.8515625,"distances_sum":486.32290490243156}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6670624514374519,"seconds":5.144625902175903e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.2578125,"distances_sum":1275.0631368322436}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5302734375,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.5302734375,"f1":null,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":7.2890625,"distances_sum":1262.7855778536814}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9332703754578762,"seconds":7.323920726776123e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.890625,"distances_sum":2395.0231185553216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7984640359640367,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.4375,"distances_sum":1636.8802090739548}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7999290639915648,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.3203125,"distances_sum":1627.4009945463333}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9178316475191484,"seconds":3.201328217983246e-5,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.7109375,"distances_sum":2285.258145705012}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9357403013653022,"seconds":7.282942533493042e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.90625,"distances_sum":2404.2120631022267}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.671875,"f1":0.7904611013986022,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.3203125,"distances_sum":1645.165408371475}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8073003385503394,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.390625,"distances_sum":1715.584387124222}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9357403013653022,"seconds":7.282942533493042e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.90625,"distances_sum":2404.2120631022267}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971560210622711,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":9.0,"distances_sum":2684.893915597196}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671932234432239,"seconds":6.530433893203735e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9609375,"distances_sum":2652.40171669025}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.959752747252748,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.953125,"distances_sum":2588.372359602573}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629120879120885,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.9609375,"distances_sum":2639.6027606696284}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9578353937728945,"seconds":5.0496309995651245e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.8984375,"distances_sum":2599.103686639103}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642342032967037,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":8.953125,"distances_sum":2629.9679205635703}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971560210622711,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":9.0,"distances_sum":2684.893915597196}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971560210622711,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.8589198589324951e-6,"evaluations":9.0,"distances_sum":2684.893915597196}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.9609375,"distances_sum":558.609905005791}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8788378288378297,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.53125,"distances_sum":2059.357668193032}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8788378288378297,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.53125,"distances_sum":2059.357668193032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524267399267405,"seconds":6.580725312232971e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8515625,"distances_sum":2547.7931250395063}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9215404387279393,"seconds":6.314367055892944e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.828125,"distances_sum":2338.1103907671636}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9524267399267405,"seconds":6.580725312232971e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8515625,"distances_sum":2547.7931250395063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607200091575097,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.921875,"distances_sum":2617.59195372568}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9626691017316024,"seconds":7.091090083122253e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9453125,"distances_sum":2652.287620232233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548992673992678,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8671875,"distances_sum":2591.3738101564536}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9626691017316024,"seconds":7.091090083122253e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9453125,"distances_sum":2652.287620232233}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9626691017316024,"seconds":7.091090083122253e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.9453125,"distances_sum":2652.287620232233}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":7.107853889465332e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":5.421875,"distances_sum":852.833779786809}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7684752747252755,"seconds":1.1198222637176514e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.515625,"distances_sum":1639.252391085254}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.638671875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.638671875,"f1":0.7684752747252755,"seconds":1.1198222637176514e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.515625,"distances_sum":1639.252391085254}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.902696262071263,"seconds":1.171790063381195e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.625,"distances_sum":2256.7480468871504}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8440913253413262,"seconds":1.1906027793884277e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.1484375,"distances_sum":1964.3561070390945}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8307671495171504,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.015625,"distances_sum":1870.5876783761935}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6396484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6396484375,"f1":0.770858308358309,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":7.7421875,"distances_sum":1587.2892207593832}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.902696262071263,"seconds":1.171790063381195e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.625,"distances_sum":2256.7480468871504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9130926365301372,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.6640625,"distances_sum":2325.421667348497}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9465487637362645,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.796875,"distances_sum":2587.945668817862}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9153279012654022,"seconds":1.0788440704345703e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.7109375,"distances_sum":2383.3645739009057}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.943835851648352,"seconds":1.4254823327064514e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.703125,"distances_sum":2574.9401929057008}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9031286421911431,"seconds":1.4379620552062988e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.53125,"distances_sum":2311.8827675102043}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9331246878121886,"seconds":1.3913959264755249e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.796875,"distances_sum":2458.8564502594877}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9567453379953385,"seconds":1.3688579201698303e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.828125,"distances_sum":2676.5510314666135}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9567453379953385,"seconds":1.3688579201698303e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.828125,"distances_sum":2676.5510314666135}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9567453379953385,"seconds":1.3688579201698303e-5,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.828125,"distances_sum":2676.5510314666135}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8527852355977363,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.1953125,"distances_sum":1889.686391236258}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5419921875,"f1":0.68056786963037,"seconds":4.302710294723511e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.78125,"distances_sum":1233.0981929748243}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1982421875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1982421875,"f1":null,"seconds":3.2614916563034058e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.8828125,"distances_sum":433.1872599931591}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8527852355977363,"seconds":5.19677996635437e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.1953125,"distances_sum":1889.686391236258}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9510874542124548,"seconds":1.3163313269615173e-5,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2500.7582312534737}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.928943452380953,"seconds":6.865710020065308e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.6953125,"distances_sum":2361.7409640353644}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9150505744255752,"seconds":6.856396794319153e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.5859375,"distances_sum":2291.930794157533}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9140625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9510874542124548,"seconds":1.3163313269615173e-5,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.828125,"distances_sum":2500.7582312534737}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685840201465206,"seconds":7.275491952896118e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.90625,"distances_sum":2639.971015493659}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9832417582417585,"seconds":7.277354598045349e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2744.8084527852156}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9793555402930404,"seconds":7.355585694313049e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9375,"distances_sum":2717.4682646677966}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552140567765574,"seconds":1.1906027793884277e-5,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8125,"distances_sum":2546.9014017028644}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9832417582417585,"seconds":7.277354598045349e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2744.8084527852156}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":3,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9832417582417585,"seconds":7.277354598045349e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2744.8084527852156}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8695981102231111,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.359375,"distances_sum":2135.1001872922734}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.158203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.158203125,"f1":null,"seconds":3.1031668186187744e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":4.84375,"distances_sum":443.1685727296585}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7634875541125548,"seconds":4.947185516357422e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.6171875,"distances_sum":1687.2981288598853}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8695981102231111,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.359375,"distances_sum":2135.1001872922734}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9319888444888453,"seconds":6.6366046667099e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.625,"distances_sum":2592.7238690199983}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9052114552114557,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.390625,"distances_sum":2333.022085074488}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9319888444888453,"seconds":6.6366046667099e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.625,"distances_sum":2592.7238690199983}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616643772893775,"seconds":7.078051567077637e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.8125,"distances_sum":2745.078492790451}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9485405219780226,"seconds":6.8694353103637695e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.6796875,"distances_sum":2672.8774648069266}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970409798534799,"seconds":7.698312401771545e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.875,"distances_sum":2813.1352793682045}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970409798534799,"seconds":7.698312401771545e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.875,"distances_sum":2813.1352793682045}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970409798534799,"seconds":7.698312401771545e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.875,"distances_sum":2813.1352793682045}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8629436535686544,"seconds":6.737187504768372e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.4921875,"distances_sum":2034.4045811509181}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8629436535686544,"seconds":6.737187504768372e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.4921875,"distances_sum":2034.4045811509181}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9314274267399274,"seconds":7.018446922302246e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.890625,"distances_sum":2448.8356788603623}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9314274267399274,"seconds":7.018446922302246e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.890625,"distances_sum":2448.8356788603623}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9438129578754588,"seconds":7.051974534988403e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.9140625,"distances_sum":2543.058972371019}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739812271062273,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.9453125,"distances_sum":2799.07193585833}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739812271062273,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.9453125,"distances_sum":2799.07193585833}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739812271062273,"seconds":6.806105375289917e-6,"exhaustive_search_seconds":2.6710331439971924e-6,"evaluations":8.9453125,"distances_sum":2799.07193585833}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":4.116445779800415e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":6.2109375,"distances_sum":920.7116128242833}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5859375,"f1":0.7241673257298263,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.0625,"distances_sum":1366.3383953169111}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5859375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5859375,"f1":0.7241673257298263,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.0625,"distances_sum":1366.3383953169111}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8642607392607401,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.03125,"distances_sum":1944.0976961823721}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9300740925740931,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8515625,"distances_sum":2362.39900923589}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7798526126651136,"seconds":3.6694109439849854e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.4765625,"distances_sum":1568.1772806255767}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9127232142857153,"seconds":6.24731183052063e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.328125,"distances_sum":2222.461696973671}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8535526973026981,"seconds":5.781650543212891e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":7.921875,"distances_sum":1899.4244712456132}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9300740925740931,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8515625,"distances_sum":2362.39900923589}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":7.094815373420715e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.921875,"distances_sum":2731.2291551119633}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605483058608064,"seconds":6.590038537979126e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.90625,"distances_sum":2593.935866288512}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517914377289379,"seconds":6.858259439468384e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8515625,"distances_sum":2542.593163178113}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9700924075924079,"seconds":6.744638085365295e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.9140625,"distances_sum":2664.8136400732}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580986721611725,"seconds":6.843358278274536e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.8125,"distances_sum":2580.8132112189587}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9660542582417587,"seconds":6.5676867961883545e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.90625,"distances_sum":2639.532773827194}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9520151723276727,"seconds":6.686896085739136e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.859375,"distances_sum":2536.886251242048}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":7.094815373420715e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.921875,"distances_sum":2731.2291551119633}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9795959249084252,"seconds":7.094815373420715e-6,"exhaustive_search_seconds":1.5776604413986206e-6,"evaluations":8.921875,"distances_sum":2731.2291551119633}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1572265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1572265625,"f1":null,"seconds":3.209337592124939e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":5.1328125,"distances_sum":357.8659618928231}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.982440476190476,"recall":0.74609375,"f1":0.8396936396936402,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.296875,"distances_sum":1542.555550877294}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.9716145833333332,"recall":0.5283203125,"f1":0.6720931845931852,"seconds":4.699453711509705e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":7.2578125,"distances_sum":1014.9847511681438}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":2,"bsize":5},"perf":{"precision":0.982440476190476,"recall":0.74609375,"f1":0.8396936396936402,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.296875,"distances_sum":1542.555550877294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9851190476190476,"recall":0.91015625,"f1":0.9430102449633704,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7734375,"distances_sum":2147.92918394128}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9799479166666668,"recall":0.822265625,"f1":0.8882926968864474,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.4453125,"distances_sum":1814.9202057386362}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9851190476190476,"recall":0.91015625,"f1":0.9430102449633704,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.7734375,"distances_sum":2147.92918394128}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":0.984281994047619,"recall":0.94140625,"f1":0.9602320856227107,"seconds":6.502494215965271e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.90625,"distances_sum":2264.720282285938}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":0.9842354910714286,"recall":0.9501953125,"f1":0.9652622767857144,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9296875,"distances_sum":2293.55573748754}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9823288690476192,"recall":0.9296875,"f1":0.9528874771062273,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.875,"distances_sum":2211.503945184488}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":0.9859095982142857,"recall":0.9404296875,"f1":0.9610584077380955,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.8984375,"distances_sum":2243.4557512416836}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":0.9822079613095238,"recall":0.927734375,"f1":0.9523802369505497,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.875,"distances_sum":2224.5250359846455}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":0.9842354910714286,"recall":0.9501953125,"f1":0.9652622767857144,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9296875,"distances_sum":2293.55573748754}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":0.9842354910714286,"recall":0.9501953125,"f1":0.9652622767857144,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":1.5553086996078491e-6,"evaluations":8.9296875,"distances_sum":2293.55573748754}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7907009657009664,"seconds":4.563480615615845e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.78125,"distances_sum":1365.5375460785594}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8648055069930078,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.1171875,"distances_sum":1690.0825283883976}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8648055069930078,"seconds":4.82611358165741e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.1171875,"distances_sum":1690.0825283883976}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9286401098901107,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5234375,"distances_sum":2035.6202967576824}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208794,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.765625,"distances_sum":2124.3100013888416}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208794,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.765625,"distances_sum":2124.3100013888416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.975744047619048,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2285.1074564886567}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9695913461538465,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.875,"distances_sum":2249.6280527701106}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9743875915750918,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9296875,"distances_sum":2269.443185337876}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975744047619048,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2285.1074564886567}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.975744047619048,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2285.1074564886567}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8519787504162512,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.1328125,"distances_sum":1662.417357052282}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7723214285714293,"seconds":4.623085260391235e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.84375,"distances_sum":1359.5948970523327}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8519787504162512,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.1328125,"distances_sum":1662.417357052282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.943778617216118,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.7578125,"distances_sum":2182.084866168184}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9601877289377293,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8046875,"distances_sum":2303.277661530114}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9187359515484522,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.4296875,"distances_sum":2045.2958547595601}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8594847860472866,"seconds":4.775822162628174e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.0390625,"distances_sum":1718.6253276390214}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8554877414252422,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.0703125,"distances_sum":1690.105643922392}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9601877289377293,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8046875,"distances_sum":2303.277661530114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744276556776559,"seconds":6.102025508880615e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.9375,"distances_sum":2367.809968831239}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410262,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8671875,"distances_sum":2290.3882762404282}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952385,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.9609375,"distances_sum":2410.9353155109175}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783310439560442,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.921875,"distances_sum":2397.7489789676347}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672275641025649,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8671875,"distances_sum":2324.0482752466783}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952385,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.9609375,"distances_sum":2410.9353155109175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9802827380952385,"seconds":6.234273314476013e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.9609375,"distances_sum":2410.9353155109175}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8430590243090251,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":7.78125,"distances_sum":1714.920119802508}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8607403013653021,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":7.8515625,"distances_sum":1756.7994173098618}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8607403013653021,"seconds":4.902482032775879e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":7.8515625,"distances_sum":1756.7994173098618}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.926242507492508,"seconds":5.511566996574402e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.609375,"distances_sum":2191.329242378996}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.937234120046621,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.7890625,"distances_sum":2223.620098452385}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9392201548451553,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.6640625,"distances_sum":2243.987326924698}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8981945138195143,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.1953125,"distances_sum":1976.5337009234343}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8950180028305035,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.140625,"distances_sum":1957.3656689957606}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9392201548451553,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.6640625,"distances_sum":2243.987326924698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9625031218781223,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.84375,"distances_sum":2400.5884602769206}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579842032967035,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.734375,"distances_sum":2376.3409366415617}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548935439560441,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.7578125,"distances_sum":2356.8069724924626}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614983974358979,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.796875,"distances_sum":2378.1431499203863}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494333791208797,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.6953125,"distances_sum":2319.722998388606}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9569997710622717,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.671875,"distances_sum":2371.173448887636}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.828125,"distances_sum":2415.8780276575253}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.828125,"distances_sum":2415.8780276575253}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.1883676052093506e-6,"evaluations":8.828125,"distances_sum":2415.8780276575253}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8498178904428914,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.09375,"distances_sum":1776.213340138033}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.8007169913419921,"seconds":4.511326551437378e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.828125,"distances_sum":1553.8245734255527}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8498178904428914,"seconds":5.1800161600112915e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.09375,"distances_sum":1776.213340138033}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9257357226107233,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.828125,"distances_sum":2220.6102285071424}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9257357226107233,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.828125,"distances_sum":2220.6102285071424}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570913461538466,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2429.654948343852}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9516597985347994,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8359375,"distances_sum":2400.7249696976355}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570913461538466,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2429.654948343852}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9570913461538466,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2429.654948343852}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.484375,"distances_sum":867.388770422677}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.208984375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.208984375,"f1":null,"seconds":2.93925404548645e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.765625,"distances_sum":451.807325117403}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3837890625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.242865204811096e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.484375,"distances_sum":867.388770422677}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8870343198468206,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.0546875,"distances_sum":2031.652366020205}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.8870343198468206,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.0546875,"distances_sum":2031.652366020205}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9330128205128212,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7578125,"distances_sum":2288.9094813591246}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9260702838827845,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6796875,"distances_sum":2270.737421677048}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9314961080586087,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.734375,"distances_sum":2299.0826796160095}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9330128205128212,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7578125,"distances_sum":2288.9094813591246}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8828125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9330128205128212,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7578125,"distances_sum":2288.9094813591246}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7026180416805423,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.0859375,"distances_sum":1207.7408960203015}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5595703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5595703125,"f1":0.7026180416805423,"seconds":3.959983587265015e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.0859375,"distances_sum":1207.7408960203015}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7973802239427248,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.890625,"distances_sum":1534.473347219812}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8717038170163178,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.1875,"distances_sum":1842.4775318293314}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8717038170163178,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.1875,"distances_sum":1842.4775318293314}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9381613178488185,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.890625,"distances_sum":2272.885575264739}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538464,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8828125,"distances_sum":2424.085215559359}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8955903471528478,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.328125,"distances_sum":2006.8701453005092}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538464,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8828125,"distances_sum":2424.085215559359}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9602163461538464,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8828125,"distances_sum":2424.085215559359}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8104099025974034,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.9140625,"distances_sum":1651.4912120464537}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8104099025974034,"seconds":4.686415195465088e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.9140625,"distances_sum":1651.4912120464537}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9148065476190486,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5390625,"distances_sum":2192.6413875366993}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9148065476190486,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5390625,"distances_sum":2192.6413875366993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9296448343323347,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7890625,"distances_sum":2280.1521586590497}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9296448343323347,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7890625,"distances_sum":2280.1521586590497}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8779296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9296448343323347,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7890625,"distances_sum":2280.1521586590497}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8480861152736159,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.9375,"distances_sum":1708.908599028285}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6954718892218898,"seconds":4.081055521965027e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.25,"distances_sum":1133.34557278651}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8480861152736159,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":7.9375,"distances_sum":1708.908599028285}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9477907509157515,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.734375,"distances_sum":2273.0841219382264}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9477907509157515,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.734375,"distances_sum":2273.0841219382264}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559409340659345,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.7890625,"distances_sum":2334.869795021083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.90625,"distances_sum":2456.857784699976}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.90625,"distances_sum":2456.857784699976}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758756868131873,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.259148120880127e-6,"evaluations":8.90625,"distances_sum":2456.857784699976}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5517578125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5517578125,"f1":null,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.40625,"distances_sum":1157.0671947434641}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5517578125,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.5517578125,"f1":null,"seconds":4.177913069725037e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.40625,"distances_sum":1157.0671947434641}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8815647893772903,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.2890625,"distances_sum":1867.1348737226945}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9286203379953385,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6015625,"distances_sum":2185.4024542814036}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7090921231546238,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.34375,"distances_sum":1171.8233144163992}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":9,"bsize":3}, perf: {"precision":1.0,"recall":0.5595703125,"f1":0.7028358793983799,"seconds":4.0065497159957886e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":7.25,"distances_sum":1158.7174643129388}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9286203379953385,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.6015625,"distances_sum":2185.4024542814036}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9363183691308699,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.703125,"distances_sum":2219.361346902275}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9476419413919417,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.7890625,"distances_sum":2307.406221149355}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569997710622716,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.859375,"distances_sum":2376.104818864362}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556776556776561,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.8515625,"distances_sum":2335.6281723302804}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9348328754578761,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.625,"distances_sum":2233.313151464997}, best_list's length: 15, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569997710622716,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.859375,"distances_sum":2376.104818864362}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569997710622716,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.1790543794631958e-6,"evaluations":8.859375,"distances_sum":2376.104818864362}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8657941017316025,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3125,"distances_sum":1739.0487294559289}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7066981629481635,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":7.6015625,"distances_sum":1190.3960864477174}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8657941017316025,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.3125,"distances_sum":1739.0487294559289}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8961174242424247,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.4453125,"distances_sum":1955.217866033918}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.95742902930403,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.84375,"distances_sum":2340.098696599966}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8689191017316026,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.09375,"distances_sum":1749.561732857929}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8685512404262412,"seconds":4.991888999938965e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.15625,"distances_sum":1793.6313988361205}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.95742902930403,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.84375,"distances_sum":2340.098696599966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.98139880952381,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2509.3196841001113}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190481,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9296875,"distances_sum":2462.882747714472}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9585622710622715,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.7890625,"distances_sum":2355.2202712224353}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.98139880952381,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2509.3196841001113}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.98139880952381,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.3504177331924438e-6,"evaluations":8.9453125,"distances_sum":2509.3196841001113}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.3515625,"distances_sum":437.8489952541457}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.201171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":6.3515625,"distances_sum":437.8489952541457}}, n: 9
mean(cfft.distances) = 0.3435587484749273
mean(cdnet.distances) = 0.3499583448732948
mean(crand.distances) = 0.6154278513741301
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8777777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9177777777777778
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9466666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8555555555555555
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.94
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8755555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8266666666666667
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.84
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 2, 3, 2, 3, 1, 3, 2, 1, 3, 1, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5388816325863203] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 12, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
finished with 14 centroids; started with 12
acc = 0.96
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.41538855741108144] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41538855741108144, 0.33454215479175653] ***
*** starting iteration: 2; err: [Inf, 0.41538855741108144, 0.33454215479175653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41538855741108144, 0.33454215479175653, 0.3292676869852541] ***
*** starting iteration: 3; err: [Inf, 0.41538855741108144, 0.33454215479175653, 0.3292676869852541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41538855741108144, 0.33454215479175653, 0.3292676869852541, 0.3240952512288505] ***
*** finished computation of 3 references, err: [Inf, 0.41538855741108144, 0.33454215479175653, 0.3292676869852541, 0.3240952512288505] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [203, 11, 0]]
** centroid: 1, normalized-entropy: 0.2923224116646935, [(1, 203), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [71, 152, 15]]
** centroid: 2, normalized-entropy: 0.7476948128536418, [(1, 71), (2, 152), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [160, 54, 0]]
** centroid: 3, normalized-entropy: 0.8149603494908418, [(1, 160), (2, 54)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3437808203782226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3437808203782226, 0.23323460847458188] ***
*** starting iteration: 2; err: [Inf, 0.3437808203782226, 0.23323460847458188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3437808203782226, 0.23323460847458188, 0.2307712164002697] ***
*** starting iteration: 3; err: [Inf, 0.3437808203782226, 0.23323460847458188, 0.2307712164002697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3437808203782226, 0.23323460847458188, 0.2307712164002697, 0.2298174384147958] ***
*** finished computation of 3 references, err: [Inf, 0.3437808203782226, 0.23323460847458188, 0.2307712164002697, 0.2298174384147958] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [254, 15, 0]]
** centroid: 1, normalized-entropy: 0.3103870117229515, [(1, 254), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 166, 15]]
** centroid: 2, normalized-entropy: 0.41222210510686674, [(2, 166), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [180, 36, 0]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(1, 180), (2, 36)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40567908368200467] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40567908368200467, 0.34000169158797305] ***
*** starting iteration: 2; err: [Inf, 0.40567908368200467, 0.34000169158797305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40567908368200467, 0.34000169158797305, 0.3391506289602488] ***
*** finished computation of 3 references, err: [Inf, 0.40567908368200467, 0.34000169158797305, 0.3391506289602488] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [131, 68, 0]]
** centroid: 1, normalized-entropy: 0.9264442868430002, [(1, 131), (2, 68)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [87, 151, 21]]
** centroid: 2, normalized-entropy: 0.8052989590423336, [(1, 87), (2, 151), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39335987580077225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39335987580077225, 0.3123564203863201] ***
*** starting iteration: 2; err: [Inf, 0.39335987580077225, 0.3123564203863201] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39335987580077225, 0.3123564203863201, 0.30320851044866187] ***
*** starting iteration: 3; err: [Inf, 0.39335987580077225, 0.3123564203863201, 0.30320851044866187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39335987580077225, 0.3123564203863201, 0.30320851044866187, 0.30251566909750677] ***
*** finished computation of 3 references, err: [Inf, 0.39335987580077225, 0.3123564203863201, 0.30320851044866187, 0.30251566909750677] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [66, 140, 20]]
** centroid: 1, normalized-entropy: 0.7925489687096147, [(1, 66), (2, 140), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [149, 76, 0]]
** centroid: 2, normalized-entropy: 0.9226762997922611, [(1, 149), (2, 76)]
*** center 3: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.20543403400376709] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20543403400376709, 0.16395499433849464] ***
*** finished computation of 7 references, err: [Inf, 0.20543403400376709, 0.16395499433849464] ***
*** center 1: selecting labels [1] (freq >= 1) [from [177, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 72, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 8), (2, 72)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [122, 10, 0]]
** centroid: 4, normalized-entropy: 0.38705142139219795, [(1, 122), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [127, 23, 0]]
** centroid: 5, normalized-entropy: 0.6181194891000383, [(1, 127), (2, 23)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 10, 14]]
** centroid: 6, normalized-entropy: 0.9798687566511527, [(2, 10), (3, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 42, 1]]
** centroid: 7, normalized-entropy: 0.15935006268563429, [(2, 42), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26591847673605856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26591847673605856, 0.16919886184900976] ***
*** finished computation of 7 references, err: [Inf, 0.26591847673605856, 0.16919886184900976] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 78, 0]]
** centroid: 1, normalized-entropy: 0.9972943816462351, [(1, 69), (2, 78)]
*** center 2: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 42, 0]]
** centroid: 3, normalized-entropy: 0.9957274520849256, [(1, 49), (2, 42)]
*** center 4: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 14, 0]]
** centroid: 6, normalized-entropy: 0.6409441847875289, [(1, 72), (2, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 85, 21]]
** centroid: 7, normalized-entropy: 0.7181384220154764, [(2, 85), (3, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2121693594688396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2121693594688396, 0.1611045962283346] ***
*** finished computation of 7 references, err: [Inf, 0.2121693594688396, 0.1611045962283346] ***
*** center 1: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 154, 20]]
** centroid: 3, normalized-entropy: 0.5146464316834292, [(2, 154), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 27, 0]]
** centroid: 4, normalized-entropy: 0.8492607824494318, [(1, 71), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 15, 0]]
** centroid: 5, normalized-entropy: 0.7012065844539666, [(1, 64), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [117, 20, 0]]
** centroid: 7, normalized-entropy: 0.5997019071283692, [(1, 117), (2, 20)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3779687078577512] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3779687078577512, 0.2405532356840314] ***
*** starting iteration: 2; err: [Inf, 0.3779687078577512, 0.2405532356840314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3779687078577512, 0.2405532356840314, 0.23912833469907294] ***
*** starting iteration: 3; err: [Inf, 0.3779687078577512, 0.2405532356840314, 0.23912833469907294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3779687078577512, 0.2405532356840314, 0.23912833469907294, 0.23915385487007684] ***
*** finished computation of 3 references, err: [Inf, 0.3779687078577512, 0.2405532356840314, 0.23912833469907294, 0.23915385487007684] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [94, 128, 19]]
** centroid: 1, normalized-entropy: 0.8224715320282758, [(1, 94), (2, 128), (3, 19)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [100, 91, 2]]
** centroid: 2, normalized-entropy: 0.6758770485060837, [(1, 100), (2, 91), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [233, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38404187635829984] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38404187635829984, 0.24009668199286827] ***
*** starting iteration: 2; err: [Inf, 0.38404187635829984, 0.24009668199286827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38404187635829984, 0.24009668199286827, 0.23976616857983898] ***
*** finished computation of 3 references, err: [Inf, 0.38404187635829984, 0.24009668199286827, 0.23976616857983898] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [107, 129, 18]]
** centroid: 1, normalized-entropy: 0.815444357479776, [(1, 107), (2, 129), (3, 18)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [120, 87, 2]]
** centroid: 2, normalized-entropy: 0.6625520222319177, [(1, 120), (2, 87), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23069388153976775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23069388153976775, 0.20024581911082887] ***
*** starting iteration: 2; err: [Inf, 0.23069388153976775, 0.20024581911082887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23069388153976775, 0.20024581911082887, 0.19681591745438026] ***
*** starting iteration: 3; err: [Inf, 0.23069388153976775, 0.20024581911082887, 0.19681591745438026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23069388153976775, 0.20024581911082887, 0.19681591745438026, 0.195557713977064] ***
*** finished computation of 7 references, err: [Inf, 0.23069388153976775, 0.20024581911082887, 0.19681591745438026, 0.195557713977064] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [110, 35, 0]]
** centroid: 1, normalized-entropy: 0.7973265101474423, [(1, 110), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [91, 4, 0]]
** centroid: 2, normalized-entropy: 0.25186284771956524, [(1, 91), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 59, 0]]
** centroid: 5, normalized-entropy: 0.5638560041131417, [(1, 9), (2, 59)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 49, 15]]
** centroid: 6, normalized-entropy: 0.7855602922535471, [(2, 49), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [102, 2, 0]]
** centroid: 7, normalized-entropy: 0.13709947889981755, [(1, 102), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23436702488931357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23436702488931357, 0.19869808293739405] ***
*** starting iteration: 2; err: [Inf, 0.23436702488931357, 0.19869808293739405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23436702488931357, 0.19869808293739405, 0.19503138371990406] ***
*** starting iteration: 3; err: [Inf, 0.23436702488931357, 0.19869808293739405, 0.19503138371990406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23436702488931357, 0.19869808293739405, 0.19503138371990406, 0.19331791718536498] ***
*** finished computation of 7 references, err: [Inf, 0.23436702488931357, 0.19869808293739405, 0.19503138371990406, 0.19331791718536498] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 22, 0]]
** centroid: 1, normalized-entropy: 0.887976319515135, [(1, 50), (2, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [102, 20, 0]]
** centroid: 3, normalized-entropy: 0.6436394131461666, [(1, 102), (2, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 115, 21]]
** centroid: 5, normalized-entropy: 0.6207715049491842, [(2, 115), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 47, 0]]
** centroid: 6, normalized-entropy: 0.8659653498997099, [(1, 19), (2, 47)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [89, 15, 0]]
** centroid: 7, normalized-entropy: 0.5952124653513116, [(1, 89), (2, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28330380464533994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28330380464533994, 0.22152366650861868] ***
*** starting iteration: 2; err: [Inf, 0.28330380464533994, 0.22152366650861868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28330380464533994, 0.22152366650861868, 0.2092355093087951] ***
*** starting iteration: 3; err: [Inf, 0.28330380464533994, 0.22152366650861868, 0.2092355093087951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28330380464533994, 0.22152366650861868, 0.2092355093087951, 0.20683233348465618] ***
*** finished computation of 7 references, err: [Inf, 0.28330380464533994, 0.22152366650861868, 0.2092355093087951, 0.20683233348465618] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 30, 0]]
** centroid: 1, normalized-entropy: 0.999142103991909, [(1, 28), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 134, 20]]
** centroid: 2, normalized-entropy: 0.557081908103416, [(2, 134), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 2, 0]]
** centroid: 3, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [129, 26, 0]]
** centroid: 5, normalized-entropy: 0.652513123846701, [(1, 129), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [33, 13, 0]]
** centroid: 6, normalized-entropy: 0.8589810370425965, [(1, 33), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 11, 0]]
** centroid: 7, normalized-entropy: 0.6442142137378306, [(1, 56), (2, 11)]
finished with 11 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1916668619918595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1916668619918595, 0.15218568509640368] ***
*** finished computation of 7 references, err: [Inf, 0.1916668619918595, 0.15218568509640368] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [98, 32, 0]]
** centroid: 1, normalized-entropy: 0.8051250074646822, [(1, 98), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 8, 0]]
** centroid: 2, normalized-entropy: 0.5079353563991225, [(1, 63), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 76, 15]]
** centroid: 3, normalized-entropy: 0.6457523329916605, [(2, 76), (3, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 92, 0]]
** centroid: 5, normalized-entropy: 0.4021791902022729, [(1, 8), (2, 92)]
*** center 6: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 9, 0]]
** centroid: 7, normalized-entropy: 0.5801954953637372, [(1, 56), (2, 9)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20153230665680272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20153230665680272, 0.149554089344256] ***
*** finished computation of 7 references, err: [Inf, 0.20153230665680272, 0.149554089344256] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 90, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 9), (2, 90)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 22, 0]]
** centroid: 2, normalized-entropy: 0.8582307926411409, [(1, 56), (2, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 87, 21]]
** centroid: 4, normalized-entropy: 0.710676853856123, [(2, 87), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [118, 15, 0]]
** centroid: 5, normalized-entropy: 0.5082505651340841, [(1, 118), (2, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 5, 0]]
** centroid: 7, normalized-entropy: 0.4090731390438265, [(1, 56), (2, 5)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21875348432908306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21875348432908306, 0.1482412923348026] ***
*** finished computation of 7 references, err: [Inf, 0.21875348432908306, 0.1482412923348026] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 87, 20]]
** centroid: 1, normalized-entropy: 0.6949749673676271, [(2, 87), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 29, 0]]
** centroid: 3, normalized-entropy: 0.9029416720373132, [(1, 62), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 27, 0]]
** centroid: 4, normalized-entropy: 0.8611247055579295, [(1, 68), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [30, 73, 0]]
** centroid: 5, normalized-entropy: 0.8703460546929581, [(1, 30), (2, 73)]
*** center 6: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35339755753150304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35339755753150304, 0.2513412747604845] ***
*** starting iteration: 2; err: [Inf, 0.35339755753150304, 0.2513412747604845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753] ***
*** starting iteration: 3; err: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753, 0.23721772323113618] ***
*** starting iteration: 4; err: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753, 0.23721772323113618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753, 0.23721772323113618, 0.2360518732120062] ***
*** starting iteration: 5; err: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753, 0.23721772323113618, 0.2360518732120062] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753, 0.23721772323113618, 0.2360518732120062, 0.2356151869889718] ***
*** finished computation of 3 references, err: [Inf, 0.35339755753150304, 0.2513412747604845, 0.23967627277625753, 0.23721772323113618, 0.2360518732120062, 0.2356151869889718] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [88, 156, 15]]
** centroid: 1, normalized-entropy: 0.7619810715636016, [(1, 88), (2, 156), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 61, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 122), (2, 61)]
*** center 3: selecting labels [1] (freq >= 2) [from [224, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2590443451003614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2590443451003614, 0.24019262871482985] ***
*** starting iteration: 2; err: [Inf, 0.2590443451003614, 0.24019262871482985] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2590443451003614, 0.24019262871482985, 0.23856833507202152] ***
*** starting iteration: 3; err: [Inf, 0.2590443451003614, 0.24019262871482985, 0.23856833507202152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2590443451003614, 0.24019262871482985, 0.23856833507202152, 0.23810985572482535] ***
*** finished computation of 3 references, err: [Inf, 0.2590443451003614, 0.24019262871482985, 0.23856833507202152, 0.23810985572482535] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [264, 13, 0]]
** centroid: 1, normalized-entropy: 0.2732159427767484, [(1, 264), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [163, 40, 0]]
** centroid: 2, normalized-entropy: 0.7159772327755203, [(1, 163), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 166, 21]]
** centroid: 3, normalized-entropy: 0.5068131150644096, [(2, 166), (3, 21)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3290504457232175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3290504457232175, 0.23843016018714014] ***
*** starting iteration: 2; err: [Inf, 0.3290504457232175, 0.23843016018714014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3290504457232175, 0.23843016018714014, 0.2353294619426796] ***
*** starting iteration: 3; err: [Inf, 0.3290504457232175, 0.23843016018714014, 0.2353294619426796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3290504457232175, 0.23843016018714014, 0.2353294619426796, 0.23478711162996793] ***
*** finished computation of 3 references, err: [Inf, 0.3290504457232175, 0.23843016018714014, 0.2353294619426796, 0.23478711162996793] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [148, 47, 0]]
** centroid: 1, normalized-entropy: 0.7967417284063618, [(1, 148), (2, 47)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [55, 169, 20]]
** centroid: 2, normalized-entropy: 0.7238572753238594, [(1, 55), (2, 169), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [228, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31158079097729857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31158079097729857, 0.24553279329703803] ***
*** starting iteration: 2; err: [Inf, 0.31158079097729857, 0.24553279329703803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31158079097729857, 0.24553279329703803, 0.232345141509587] ***
*** starting iteration: 3; err: [Inf, 0.31158079097729857, 0.24553279329703803, 0.232345141509587] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31158079097729857, 0.24553279329703803, 0.232345141509587, 0.23001005448675058] ***
*** starting iteration: 4; err: [Inf, 0.31158079097729857, 0.24553279329703803, 0.232345141509587, 0.23001005448675058] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31158079097729857, 0.24553279329703803, 0.232345141509587, 0.23001005448675058, 0.22918953832138228] ***
*** finished computation of 3 references, err: [Inf, 0.31158079097729857, 0.24553279329703803, 0.232345141509587, 0.23001005448675058, 0.22918953832138228] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [245, 18, 0]]
** centroid: 1, normalized-entropy: 0.3600788939250346, [(1, 245), (2, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [189, 35, 0]]
** centroid: 2, normalized-entropy: 0.625262405223423, [(1, 189), (2, 35)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 164, 15]]
** centroid: 3, normalized-entropy: 0.4154253432335666, [(2, 164), (3, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3150366334414956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3150366334414956, 0.2478888156213637] ***
*** starting iteration: 2; err: [Inf, 0.3150366334414956, 0.2478888156213637] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3150366334414956, 0.2478888156213637, 0.23987134693070375] ***
*** starting iteration: 3; err: [Inf, 0.3150366334414956, 0.2478888156213637, 0.23987134693070375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3150366334414956, 0.2478888156213637, 0.23987134693070375, 0.2387042721221014] ***
*** starting iteration: 4; err: [Inf, 0.3150366334414956, 0.2478888156213637, 0.23987134693070375, 0.2387042721221014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3150366334414956, 0.2478888156213637, 0.23987134693070375, 0.2387042721221014, 0.2383366859681357] ***
*** finished computation of 3 references, err: [Inf, 0.3150366334414956, 0.2478888156213637, 0.23987134693070375, 0.2387042721221014, 0.2383366859681357] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [275, 12, 0]]
** centroid: 1, normalized-entropy: 0.25053864332391124, [(1, 275), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 161, 21]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 161), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [152, 46, 0]]
** centroid: 3, normalized-entropy: 0.7820392866349247, [(1, 152), (2, 46)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3370993116862145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3370993116862145, 0.23536342323228515] ***
*** starting iteration: 2; err: [Inf, 0.3370993116862145, 0.23536342323228515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3370993116862145, 0.23536342323228515, 0.2350093788855515] ***
*** finished computation of 3 references, err: [Inf, 0.3370993116862145, 0.23536342323228515, 0.2350093788855515] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [77, 166, 20]]
** centroid: 1, normalized-entropy: 0.7700654128488605, [(1, 77), (2, 166), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [126, 50, 0]]
** centroid: 2, normalized-entropy: 0.8609652558547648, [(1, 126), (2, 50)]
*** center 3: selecting labels [1] (freq >= 1) [from [228, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.18697703845082997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18697703845082997, 0.14984574899994754] ***
*** starting iteration: 2; err: [Inf, 0.18697703845082997, 0.14984574899994754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18697703845082997, 0.14984574899994754, 0.14440769320096913] ***
*** starting iteration: 3; err: [Inf, 0.18697703845082997, 0.14984574899994754, 0.14440769320096913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18697703845082997, 0.14984574899994754, 0.14440769320096913, 0.14283494307175726] ***
*** finished computation of 7 references, err: [Inf, 0.18697703845082997, 0.14984574899994754, 0.14440769320096913, 0.14283494307175726] ***
*** center 1: selecting labels [1] (freq >= 1) [from [124, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 10, 0]]
** centroid: 2, normalized-entropy: 0.552495114325111, [(1, 68), (2, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 75, 15]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 75), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 74, 0]]
** centroid: 5, normalized-entropy: 0.6947570868163001, [(1, 17), (2, 74)]
*** center 6: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 58, 0]]
** centroid: 7, normalized-entropy: 0.6868088934028034, [(1, 13), (2, 58)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1868817078946591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1868817078946591, 0.15368153915092672] ***
*** starting iteration: 2; err: [Inf, 0.1868817078946591, 0.15368153915092672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1868817078946591, 0.15368153915092672, 0.14931701908706277] ***
*** starting iteration: 3; err: [Inf, 0.1868817078946591, 0.15368153915092672, 0.14931701908706277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1868817078946591, 0.15368153915092672, 0.14931701908706277, 0.14810033859349955] ***
*** finished computation of 7 references, err: [Inf, 0.1868817078946591, 0.15368153915092672, 0.14931701908706277, 0.14810033859349955] ***
*** center 1: selecting labels [1] (freq >= 1) [from [152, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 63, 21]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 63), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 9, 0]]
** centroid: 3, normalized-entropy: 0.511639783631173, [(1, 70), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 4, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 75, 0]]
** centroid: 5, normalized-entropy: 0.6904285855304167, [(1, 17), (2, 75)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [10, 71, 0]]
** centroid: 6, normalized-entropy: 0.5392163432092415, [(1, 10), (2, 71)]
*** center 7: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20391897852721064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20391897852721064, 0.158166344269183] ***
*** starting iteration: 2; err: [Inf, 0.20391897852721064, 0.158166344269183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20391897852721064, 0.158166344269183, 0.15224497711266402] ***
*** starting iteration: 3; err: [Inf, 0.20391897852721064, 0.158166344269183, 0.15224497711266402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20391897852721064, 0.158166344269183, 0.15224497711266402, 0.15132316398452492] ***
*** finished computation of 7 references, err: [Inf, 0.20391897852721064, 0.158166344269183, 0.15224497711266402, 0.15132316398452492] ***
*** center 1: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 69, 20]]
** centroid: 2, normalized-entropy: 0.7686913027030167, [(2, 69), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [84, 15, 0]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(1, 84), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 27, 0]]
** centroid: 4, normalized-entropy: 0.7968174923244049, [(1, 85), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [33, 46, 0]]
** centroid: 5, normalized-entropy: 0.980377508715691, [(1, 33), (2, 46)]
*** center 6: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 59, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4419891926412423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4419891926412423, 0.2933115754933754] ***
*** starting iteration: 2; err: [Inf, 0.4419891926412423, 0.2933115754933754] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4419891926412423, 0.2933115754933754, 0.29273379650442405] ***
*** finished computation of 3 references, err: [Inf, 0.4419891926412423, 0.2933115754933754, 0.29273379650442405] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [56, 163, 15]]
** centroid: 1, normalized-entropy: 0.7010530677447862, [(1, 56), (2, 163), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [224, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [154, 54, 0]]
** centroid: 3, normalized-entropy: 0.826165427834159, [(1, 154), (2, 54)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36776037863281175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36776037863281175, 0.30568932754446987] ***
*** starting iteration: 2; err: [Inf, 0.36776037863281175, 0.30568932754446987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36776037863281175, 0.30568932754446987, 0.2940015139301186] ***
*** starting iteration: 3; err: [Inf, 0.36776037863281175, 0.30568932754446987, 0.2940015139301186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36776037863281175, 0.30568932754446987, 0.2940015139301186, 0.2916212335293149] ***
*** starting iteration: 4; err: [Inf, 0.36776037863281175, 0.30568932754446987, 0.2940015139301186, 0.2916212335293149] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36776037863281175, 0.30568932754446987, 0.2940015139301186, 0.2916212335293149, 0.29141246246779967] ***
*** finished computation of 3 references, err: [Inf, 0.36776037863281175, 0.30568932754446987, 0.2940015139301186, 0.2916212335293149, 0.29141246246779967] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [269, 11, 0]]
** centroid: 1, normalized-entropy: 0.23900757647088733, [(1, 269), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [1, 177, 21]]
** centroid: 2, normalized-entropy: 0.3350695168375795, [(1, 1), (2, 177), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [157, 31, 0]]
** centroid: 3, normalized-entropy: 0.6458891538160492, [(1, 157), (2, 31)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39333754278038036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39333754278038036, 0.30794041068746947] ***
*** starting iteration: 2; err: [Inf, 0.39333754278038036, 0.30794041068746947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39333754278038036, 0.30794041068746947, 0.2979429472053516] ***
*** starting iteration: 3; err: [Inf, 0.39333754278038036, 0.30794041068746947, 0.2979429472053516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39333754278038036, 0.30794041068746947, 0.2979429472053516, 0.2959208634487916] ***
*** starting iteration: 4; err: [Inf, 0.39333754278038036, 0.30794041068746947, 0.2979429472053516, 0.2959208634487916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39333754278038036, 0.30794041068746947, 0.2979429472053516, 0.2959208634487916, 0.2951931986913107] ***
*** finished computation of 3 references, err: [Inf, 0.39333754278038036, 0.30794041068746947, 0.2979429472053516, 0.2959208634487916, 0.2951931986913107] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [248, 10, 0]]
** centroid: 1, normalized-entropy: 0.23657622470690265, [(1, 248), (2, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 159, 20]]
** centroid: 2, normalized-entropy: 0.5051177225829171, [(2, 159), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [183, 47, 0]]
** centroid: 3, normalized-entropy: 0.7305389794885983, [(1, 183), (2, 47)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3770885148474404] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3770885148474404, 0.273850240867708] ***
*** starting iteration: 2; err: [Inf, 0.3770885148474404, 0.273850240867708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3770885148474404, 0.273850240867708, 0.2732173128126262] ***
*** finished computation of 3 references, err: [Inf, 0.3770885148474404, 0.273850240867708, 0.2732173128126262] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [93, 155, 15]]
** centroid: 1, normalized-entropy: 0.7669305794738575, [(1, 93), (2, 155), (3, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [132, 62, 0]]
** centroid: 3, normalized-entropy: 0.9039324555927869, [(1, 132), (2, 62)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2611670510779167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2611670510779167, 0.24035322992899072] ***
*** starting iteration: 2; err: [Inf, 0.2611670510779167, 0.24035322992899072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2611670510779167, 0.24035322992899072, 0.2396962532069886] ***
*** finished computation of 3 references, err: [Inf, 0.2611670510779167, 0.24035322992899072, 0.2396962532069886] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [118, 79, 0]]
** centroid: 1, normalized-entropy: 0.9715413680315621, [(1, 118), (2, 79)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [80, 140, 21]]
** centroid: 2, normalized-entropy: 0.8139616744818519, [(1, 80), (2, 140), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [229, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38182235922806823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38182235922806823, 0.2522984457633708] ***
*** starting iteration: 2; err: [Inf, 0.38182235922806823, 0.2522984457633708] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38182235922806823, 0.2522984457633708, 0.23840855234169933] ***
*** starting iteration: 3; err: [Inf, 0.38182235922806823, 0.2522984457633708, 0.23840855234169933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38182235922806823, 0.2522984457633708, 0.23840855234169933, 0.2354773317995681] ***
*** finished computation of 3 references, err: [Inf, 0.38182235922806823, 0.2522984457633708, 0.23840855234169933, 0.2354773317995681] ***
*** center 1: selecting labels [1] (freq >= 2) [from [249, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [7, 179, 20]]
** centroid: 2, normalized-entropy: 0.4218225984937636, [(1, 7), (2, 179), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [175, 37, 0]]
** centroid: 3, normalized-entropy: 0.6679595154173091, [(1, 175), (2, 37)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18948826849930459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18948826849930459, 0.1524670605261757] ***
*** starting iteration: 2; err: [Inf, 0.18948826849930459, 0.1524670605261757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105] ***
*** starting iteration: 3; err: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105, 0.14398247042430323] ***
*** starting iteration: 4; err: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105, 0.14398247042430323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105, 0.14398247042430323, 0.1426190001786583] ***
*** starting iteration: 5; err: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105, 0.14398247042430323, 0.1426190001786583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105, 0.14398247042430323, 0.1426190001786583, 0.1420010836576825] ***
*** finished computation of 7 references, err: [Inf, 0.18948826849930459, 0.1524670605261757, 0.1457454460266105, 0.14398247042430323, 0.1426190001786583, 0.1420010836576825] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 42, 0]]
** centroid: 1, normalized-entropy: 0.9288391461883213, [(1, 80), (2, 42)]
*** center 2: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 13, 0]]
** centroid: 3, normalized-entropy: 0.6261776539736496, [(1, 70), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [11, 77, 0]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(1, 11), (2, 77)]
*** center 5: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 85, 15]]
** centroid: 7, normalized-entropy: 0.6098403047164005, [(2, 85), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25961578205350727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961578205350727, 0.18255474245960432] ***
*** starting iteration: 2; err: [Inf, 0.25961578205350727, 0.18255474245960432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196] ***
*** starting iteration: 3; err: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018] ***
*** starting iteration: 4; err: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018, 0.15232366707868528] ***
*** starting iteration: 5; err: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018, 0.15232366707868528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018, 0.15232366707868528, 0.1512994214143978] ***
*** starting iteration: 6; err: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018, 0.15232366707868528, 0.1512994214143978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018, 0.15232366707868528, 0.1512994214143978, 0.15076486954208593] ***
*** finished computation of 7 references, err: [Inf, 0.25961578205350727, 0.18255474245960432, 0.16763717502724196, 0.15702564019788018, 0.15232366707868528, 0.1512994214143978, 0.15076486954208593] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 47, 0]]
** centroid: 1, normalized-entropy: 0.9393645314754717, [(1, 85), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 6, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 54), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 82, 0]]
** centroid: 3, normalized-entropy: 0.5509844433017146, [(1, 12), (2, 82)]
*** center 4: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 84, 21]]
** centroid: 7, normalized-entropy: 0.7219280948873623, [(2, 84), (3, 21)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.194013559179886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.194013559179886, 0.15932437938720412] ***
*** starting iteration: 2; err: [Inf, 0.194013559179886, 0.15932437938720412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846] ***
*** starting iteration: 3; err: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698] ***
*** starting iteration: 4; err: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698, 0.14644690017415576] ***
*** starting iteration: 5; err: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698, 0.14644690017415576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698, 0.14644690017415576, 0.14518979223510683] ***
*** starting iteration: 6; err: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698, 0.14644690017415576, 0.14518979223510683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698, 0.14644690017415576, 0.14518979223510683, 0.14439981368005925] ***
*** finished computation of 7 references, err: [Inf, 0.194013559179886, 0.15932437938720412, 0.15161342887665846, 0.1480481881198698, 0.14644690017415576, 0.14518979223510683, 0.14439981368005925] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 104, 20]]
** centroid: 2, normalized-entropy: 0.6373874992221911, [(2, 104), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 70, 0]]
** centroid: 3, normalized-entropy: 0.24729443986205674, [(1, 3), (2, 70)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 14, 0]]
** centroid: 4, normalized-entropy: 0.6892019851173655, [(1, 62), (2, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [98, 5, 0]]
** centroid: 6, normalized-entropy: 0.28017814662275986, [(1, 98), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 23, 0]]
** centroid: 7, normalized-entropy: 0.7985237652450764, [(1, 72), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35234643987942116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35234643987942116, 0.29968500980431234] ***
*** finished computation of 3 references, err: [Inf, 0.35234643987942116, 0.29968500980431234] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [165, 35, 0]]
** centroid: 1, normalized-entropy: 0.6690158350565576, [(1, 165), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [71, 182, 15]]
** centroid: 3, normalized-entropy: 0.7064008976412621, [(1, 71), (2, 182), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3366045016946196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3366045016946196, 0.3016123862970604] ***
*** finished computation of 3 references, err: [Inf, 0.3366045016946196, 0.3016123862970604] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [233, 11, 0]]
** centroid: 1, normalized-entropy: 0.26512619203232257, [(1, 233), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [5, 200, 21]]
** centroid: 2, normalized-entropy: 0.3761594849066868, [(1, 5), (2, 200), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [189, 8, 0]]
** centroid: 3, normalized-entropy: 0.2450781231224538, [(1, 189), (2, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3904296420793841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3904296420793841, 0.30132687316769025] ***
*** finished computation of 3 references, err: [Inf, 0.3904296420793841, 0.30132687316769025] ***
*** center 1: selecting labels [1] (freq >= 1) [from [214, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [59, 151, 20]]
** centroid: 2, normalized-entropy: 0.7624624067502817, [(1, 59), (2, 151), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [158, 65, 0]]
** centroid: 3, normalized-entropy: 0.870625164230476, [(1, 158), (2, 65)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9489998981016945, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 13
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 13)
[0.9489998981016945, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4293958816280787] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4293958816280787, 0.30223998566879995] ***
*** starting iteration: 2; err: [Inf, 0.4293958816280787, 0.30223998566879995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4293958816280787, 0.30223998566879995, 0.3014360637204356] ***
*** finished computation of 3 references, err: [Inf, 0.4293958816280787, 0.30223998566879995, 0.3014360637204356] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [88, 145, 21]]
** centroid: 1, normalized-entropy: 0.8131801322967174, [(1, 88), (2, 145), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [222, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [117, 74, 0]]
** centroid: 3, normalized-entropy: 0.9631240047488345, [(1, 117), (2, 74)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4475386386647865] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4475386386647865, 0.3032725127790866] ***
*** starting iteration: 2; err: [Inf, 0.4475386386647865, 0.3032725127790866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4475386386647865, 0.3032725127790866, 0.30135860500195394] ***
*** starting iteration: 3; err: [Inf, 0.4475386386647865, 0.3032725127790866, 0.30135860500195394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4475386386647865, 0.3032725127790866, 0.30135860500195394, 0.3014230311972493] ***
*** finished computation of 3 references, err: [Inf, 0.4475386386647865, 0.3032725127790866, 0.30135860500195394, 0.3014230311972493] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [82, 139, 20]]
** centroid: 1, normalized-entropy: 0.810825090873363, [(1, 82), (2, 139), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [138, 77, 0]]
** centroid: 3, normalized-entropy: 0.9411280185713452, [(1, 138), (2, 77)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3831842440242009] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3831842440242009, 0.29805956079691714] ***
*** starting iteration: 2; err: [Inf, 0.3831842440242009, 0.29805956079691714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3831842440242009, 0.29805956079691714, 0.2904962477366532] ***
*** starting iteration: 3; err: [Inf, 0.3831842440242009, 0.29805956079691714, 0.2904962477366532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3831842440242009, 0.29805956079691714, 0.2904962477366532, 0.2886243404613601] ***
*** finished computation of 3 references, err: [Inf, 0.3831842440242009, 0.29805956079691714, 0.2904962477366532, 0.2886243404613601] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [261, 21, 0]]
** centroid: 1, normalized-entropy: 0.3823806751537801, [(1, 261), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [173, 37, 0]]
** centroid: 2, normalized-entropy: 0.6716719085736249, [(1, 173), (2, 37)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 159, 15]]
** centroid: 3, normalized-entropy: 0.4236805715709106, [(2, 159), (3, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9489998981016945, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9170128212044381, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 15
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.28365874675860453] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28365874675860453, 0.23108521645871904] ***
*** finished computation of 3 references, err: [Inf, 0.28365874675860453, 0.23108521645871904] ***
*** center 1: selecting labels [1] (freq >= 1) [from [235, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [175, 40, 0]]
** centroid: 2, normalized-entropy: 0.6931274153282881, [(1, 175), (2, 40)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [24, 177, 15]]
** centroid: 3, normalized-entropy: 0.539348720036807, [(1, 24), (2, 177), (3, 15)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3482846118079713] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3482846118079713, 0.2806275414772097] ***
*** finished computation of 3 references, err: [Inf, 0.3482846118079713, 0.2806275414772097] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [209, 12, 0]]
** centroid: 1, normalized-entropy: 0.3043839683798553, [(1, 209), (2, 12)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [91, 143, 20]]
** centroid: 2, normalized-entropy: 0.8113071926212558, [(1, 91), (2, 143), (3, 20)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [127, 64, 1]]
** centroid: 3, normalized-entropy: 0.6071050735767143, [(1, 127), (2, 64), (3, 1)]
finished with 8 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31996385851872156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31996385851872156, 0.2421767074570082] ***
*** finished computation of 3 references, err: [Inf, 0.31996385851872156, 0.2421767074570082] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [229, 1, 0]]
** centroid: 1, normalized-entropy: 0.04036975757828742, [(1, 229), (2, 1)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [66, 125, 20]]
** centroid: 2, normalized-entropy: 0.8165018012627576, [(1, 66), (2, 125), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [136, 90, 0]]
** centroid: 3, normalized-entropy: 0.9699058425934317, [(1, 136), (2, 90)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9489998981016945, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9170128212044381, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.8859847871823919, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 16
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.2381541533577165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381541533577165, 0.19732625019035652] ***
*** starting iteration: 2; err: [Inf, 0.2381541533577165, 0.19732625019035652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381541533577165, 0.19732625019035652, 0.19353018145476966] ***
*** starting iteration: 3; err: [Inf, 0.2381541533577165, 0.19732625019035652, 0.19353018145476966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381541533577165, 0.19732625019035652, 0.19353018145476966, 0.19244084364526542] ***
*** finished computation of 7 references, err: [Inf, 0.2381541533577165, 0.19732625019035652, 0.19353018145476966, 0.19244084364526542] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [125, 14, 0]]
** centroid: 1, normalized-entropy: 0.471271975661872, [(1, 125), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 3, 0]]
** centroid: 2, normalized-entropy: 0.2447650820208971, [(1, 71), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 47, 21]]
** centroid: 3, normalized-entropy: 0.8918107543797084, [(2, 47), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [111, 4, 0]]
** centroid: 5, normalized-entropy: 0.2178364755977513, [(1, 111), (2, 4)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 69, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23046023404510976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23046023404510976, 0.1881907519034191] ***
*** starting iteration: 2; err: [Inf, 0.23046023404510976, 0.1881907519034191] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23046023404510976, 0.1881907519034191, 0.1851060656360812] ***
*** starting iteration: 3; err: [Inf, 0.23046023404510976, 0.1881907519034191, 0.1851060656360812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23046023404510976, 0.1881907519034191, 0.1851060656360812, 0.1841567160712706] ***
*** finished computation of 7 references, err: [Inf, 0.23046023404510976, 0.1881907519034191, 0.1851060656360812, 0.1841567160712706] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [66, 34, 0]]
** centroid: 1, normalized-entropy: 0.9248187049730301, [(1, 66), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 30, 0]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(1, 70), (2, 30)]
*** center 3: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 106, 15]]
** centroid: 4, normalized-entropy: 0.5406572280363559, [(2, 106), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [46, 47, 0]]
** centroid: 5, normalized-entropy: 0.9999165959739288, [(1, 46), (2, 47)]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23799168005462798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799168005462798, 0.19307751165677806] ***
*** starting iteration: 2; err: [Inf, 0.23799168005462798, 0.19307751165677806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799168005462798, 0.19307751165677806, 0.1872886789730866] ***
*** starting iteration: 3; err: [Inf, 0.23799168005462798, 0.19307751165677806, 0.1872886789730866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23799168005462798, 0.19307751165677806, 0.1872886789730866, 0.18539684706100862] ***
*** finished computation of 7 references, err: [Inf, 0.23799168005462798, 0.19307751165677806, 0.1872886789730866, 0.18539684706100862] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 84, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 7), (2, 84)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 29, 0]]
** centroid: 3, normalized-entropy: 0.8952722642402938, [(1, 64), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 27, 0]]
** centroid: 4, normalized-entropy: 0.826165427834159, [(1, 77), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 74, 20]]
** centroid: 5, normalized-entropy: 0.7467366074830678, [(2, 74), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [97, 2, 0]]
** centroid: 7, normalized-entropy: 0.14257333025989857, [(1, 97), (2, 2)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9489998981016945, 0.9470038901176626, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9170128212044381, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.8859847871823919, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 16
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9489998981016945, 0.9470038901176626, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9170128212044381, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.8859847871823919, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 18
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.18885859660437196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18885859660437196, 0.15492447001045687] ***
*** starting iteration: 2; err: [Inf, 0.18885859660437196, 0.15492447001045687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18885859660437196, 0.15492447001045687, 0.1470682266840918] ***
*** starting iteration: 3; err: [Inf, 0.18885859660437196, 0.15492447001045687, 0.1470682266840918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18885859660437196, 0.15492447001045687, 0.1470682266840918, 0.14430350766799696] ***
*** finished computation of 7 references, err: [Inf, 0.18885859660437196, 0.15492447001045687, 0.1470682266840918, 0.14430350766799696] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 57, 15]]
** centroid: 1, normalized-entropy: 0.7382848661434506, [(2, 57), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 1, 0]]
** centroid: 2, normalized-entropy: 0.07470433715479614, [(1, 109), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 13, 0]]
** centroid: 3, normalized-entropy: 0.6601070987550468, [(1, 63), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [2, 84, 0]]
** centroid: 4, normalized-entropy: 0.15935006268563429, [(1, 2), (2, 84)]
*** center 5: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [140, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 62, 0]]
** centroid: 7, normalized-entropy: 0.32984607020714635, [(1, 4), (2, 62)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2333170249094737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333170249094737, 0.16703652743685773] ***
*** starting iteration: 2; err: [Inf, 0.2333170249094737, 0.16703652743685773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333170249094737, 0.16703652743685773, 0.15338924914358304] ***
*** starting iteration: 3; err: [Inf, 0.2333170249094737, 0.16703652743685773, 0.15338924914358304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333170249094737, 0.16703652743685773, 0.15338924914358304, 0.14941808170704604] ***
*** finished computation of 7 references, err: [Inf, 0.2333170249094737, 0.16703652743685773, 0.15338924914358304, 0.14941808170704604] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 57, 0]]
** centroid: 1, normalized-entropy: 0.7382848661434506, [(1, 15), (2, 57)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [113, 22, 0]]
** centroid: 3, normalized-entropy: 0.6413510165846328, [(1, 113), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 6, 0]]
** centroid: 4, normalized-entropy: 0.3398550782221443, [(1, 89), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 8, 0]]
** centroid: 5, normalized-entropy: 0.4770713062193298, [(1, 70), (2, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [140, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 68, 21]]
** centroid: 7, normalized-entropy: 0.7882487221644084, [(2, 68), (3, 21)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22997001260470157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22997001260470157, 0.1767327254648548] ***
*** starting iteration: 2; err: [Inf, 0.22997001260470157, 0.1767327254648548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22997001260470157, 0.1767327254648548, 0.16217983703406855] ***
*** starting iteration: 3; err: [Inf, 0.22997001260470157, 0.1767327254648548, 0.16217983703406855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22997001260470157, 0.1767327254648548, 0.16217983703406855, 0.15678557540070842] ***
*** finished computation of 7 references, err: [Inf, 0.22997001260470157, 0.1767327254648548, 0.16217983703406855, 0.15678557540070842] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [16, 61, 0]]
** centroid: 1, normalized-entropy: 0.7372413771710565, [(1, 16), (2, 61)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 88, 20]]
** centroid: 2, normalized-entropy: 0.6912898694057888, [(2, 88), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [85, 53, 0]]
** centroid: 3, normalized-entropy: 0.9608576911002399, [(1, 85), (2, 53)]
*** center 4: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [144, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 14, 0]]
** centroid: 6, normalized-entropy: 0.7394809367166378, [(1, 53), (2, 14)]
*** center 7: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3206810499219834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3206810499219834, 0.2290843615711138] ***
*** starting iteration: 2; err: [Inf, 0.3206810499219834, 0.2290843615711138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3206810499219834, 0.2290843615711138, 0.19542893079492646] ***
*** starting iteration: 3; err: [Inf, 0.3206810499219834, 0.2290843615711138, 0.19542893079492646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3206810499219834, 0.2290843615711138, 0.19542893079492646, 0.18907128771705492] ***
*** finished computation of 7 references, err: [Inf, 0.3206810499219834, 0.2290843615711138, 0.19542893079492646, 0.18907128771705492] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [95, 25, 0]]
** centroid: 1, normalized-entropy: 0.7382848661434506, [(1, 95), (2, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [77, 5, 0]]
** centroid: 2, normalized-entropy: 0.3313056130577883, [(1, 77), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 32, 0]]
** centroid: 3, normalized-entropy: 0.9618624139909456, [(1, 51), (2, 32)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 94, 0]]
** centroid: 5, normalized-entropy: 0.2885385136944103, [(1, 5), (2, 94)]
*** center 6: selecting labels [1] (freq >= 1) [from [124, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 61, 15]]
** centroid: 7, normalized-entropy: 0.7166336117927455, [(2, 61), (3, 15)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2837420557039152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2837420557039152, 0.21133058024025794] ***
*** starting iteration: 2; err: [Inf, 0.2837420557039152, 0.21133058024025794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2837420557039152, 0.21133058024025794, 0.20276739196419] ***
*** starting iteration: 3; err: [Inf, 0.2837420557039152, 0.21133058024025794, 0.20276739196419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2837420557039152, 0.21133058024025794, 0.20276739196419, 0.18901158659404765] ***
*** finished computation of 7 references, err: [Inf, 0.2837420557039152, 0.21133058024025794, 0.20276739196419, 0.18901158659404765] ***
*** center 1: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 42, 0]]
** centroid: 2, normalized-entropy: 0.9945386816500111, [(1, 50), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 81, 21]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(2, 81), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 77, 0]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(1, 11), (2, 77)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [70, 19, 0]]
** centroid: 7, normalized-entropy: 0.748088105780153, [(1, 70), (2, 19)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35766799637846747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35766799637846747, 0.26548730262458836] ***
*** starting iteration: 2; err: [Inf, 0.35766799637846747, 0.26548730262458836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35766799637846747, 0.26548730262458836, 0.20859711788206556] ***
*** starting iteration: 3; err: [Inf, 0.35766799637846747, 0.26548730262458836, 0.20859711788206556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35766799637846747, 0.26548730262458836, 0.20859711788206556, 0.19638861247758638] ***
*** finished computation of 7 references, err: [Inf, 0.35766799637846747, 0.26548730262458836, 0.20859711788206556, 0.19638861247758638] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [89, 21, 0]]
** centroid: 1, normalized-entropy: 0.7033693386668108, [(1, 89), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [113, 3, 0]]
** centroid: 2, normalized-entropy: 0.17319556189412666, [(1, 113), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [5, 75, 0]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(1, 5), (2, 75)]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 14, 0]]
** centroid: 6, normalized-entropy: 0.7837769474847011, [(1, 46), (2, 14)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 103, 20]]
** centroid: 7, normalized-entropy: 0.6404973004805509, [(2, 103), (3, 20)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9489998981016945, 0.9470038901176626, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9179928431425437, 0.9170128212044381, 0.9140038241834648, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.8859847871823919, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 18
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9489998981016945, 0.9470038901176626, 0.9430208651765538, 0.9430118741495987, 0.9309908711106316, 0.9250088411765058, 0.9179928431425437, 0.9170128212044381, 0.9140038241834648, 0.9059988131844419, 0.9030347712982443, 0.8990187792583003, 0.8859847871823919, 0.884989780199361, 0.882987778197359, 0.8820287353221485, 0.8490676305047563, 0.821015626404848]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9489998981016945
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.1950101402080618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950101402080618, 0.15686788247944788] ***
*** starting iteration: 2; err: [Inf, 0.1950101402080618, 0.15686788247944788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863] ***
*** starting iteration: 3; err: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863, 0.1490003122529015] ***
*** starting iteration: 4; err: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863, 0.1490003122529015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863, 0.1490003122529015, 0.14788307401677594] ***
*** starting iteration: 5; err: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863, 0.1490003122529015, 0.14788307401677594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863, 0.1490003122529015, 0.14788307401677594, 0.1474733780003153] ***
*** finished computation of 7 references, err: [Inf, 0.1950101402080618, 0.15686788247944788, 0.15138093272782863, 0.1490003122529015, 0.14788307401677594, 0.1474733780003153] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [182, 5, 0]]
** centroid: 1, normalized-entropy: 0.17775935298603476, [(1, 182), (2, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [146, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 90, 0]]
** centroid: 4, normalized-entropy: 0.8474179614176633, [(1, 34), (2, 90)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 104, 28]]
** centroid: 5, normalized-entropy: 0.7455178428108284, [(2, 104), (3, 28)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 77, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [75, 50, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 75), (2, 50)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30210537105798724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30210537105798724, 0.18748543116170913] ***
*** starting iteration: 2; err: [Inf, 0.30210537105798724, 0.18748543116170913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096] ***
*** starting iteration: 3; err: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585] ***
*** starting iteration: 4; err: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585, 0.14993418811634182] ***
*** starting iteration: 5; err: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585, 0.14993418811634182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585, 0.14993418811634182, 0.14742683569528162] ***
*** starting iteration: 6; err: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585, 0.14993418811634182, 0.14742683569528162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585, 0.14993418811634182, 0.14742683569528162, 0.14643917989451438] ***
*** finished computation of 7 references, err: [Inf, 0.30210537105798724, 0.18748543116170913, 0.16931987405382096, 0.15635128712281585, 0.14993418811634182, 0.14742683569528162, 0.14643917989451438] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 18, 0]]
** centroid: 1, normalized-entropy: 0.8874179270685693, [(1, 41), (2, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 95, 9]]
** centroid: 3, normalized-entropy: 0.42480887386781474, [(2, 95), (3, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 39, 0]]
** centroid: 4, normalized-entropy: 0.9922666387194963, [(1, 48), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [17, 27, 0]]
** centroid: 7, normalized-entropy: 0.9624127354629922, [(1, 17), (2, 27)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21783867525402456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21783867525402456, 0.1646220503244549] ***
*** starting iteration: 2; err: [Inf, 0.21783867525402456, 0.1646220503244549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335] ***
*** starting iteration: 3; err: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335, 0.15021125153824688] ***
*** starting iteration: 4; err: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335, 0.15021125153824688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335, 0.15021125153824688, 0.14850208644196392] ***
*** starting iteration: 5; err: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335, 0.15021125153824688, 0.14850208644196392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335, 0.15021125153824688, 0.14850208644196392, 0.14781313193662207] ***
*** finished computation of 7 references, err: [Inf, 0.21783867525402456, 0.1646220503244549, 0.15366959134163335, 0.15021125153824688, 0.14850208644196392, 0.14781313193662207] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [60, 33, 0]]
** centroid: 1, normalized-entropy: 0.9383153522334071, [(1, 60), (2, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [40, 24, 0]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(1, 40), (2, 24)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 71, 12]]
** centroid: 5, normalized-entropy: 0.5961045458832345, [(2, 71), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 18, 0]]
** centroid: 6, normalized-entropy: 0.8003922080453356, [(1, 56), (2, 18)]
*** center 7: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22800148277822882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22800148277822882, 0.16214167566411197] ***
*** starting iteration: 2; err: [Inf, 0.22800148277822882, 0.16214167566411197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22800148277822882, 0.16214167566411197, 0.149865218417719] ***
*** starting iteration: 3; err: [Inf, 0.22800148277822882, 0.16214167566411197, 0.149865218417719] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22800148277822882, 0.16214167566411197, 0.149865218417719, 0.14579509777668864] ***
*** starting iteration: 4; err: [Inf, 0.22800148277822882, 0.16214167566411197, 0.149865218417719, 0.14579509777668864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22800148277822882, 0.16214167566411197, 0.149865218417719, 0.14579509777668864, 0.1449791358523071] ***
*** finished computation of 7 references, err: [Inf, 0.22800148277822882, 0.16214167566411197, 0.149865218417719, 0.14579509777668864, 0.1449791358523071] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 82, 11]]
** centroid: 1, normalized-entropy: 0.5243952392403632, [(2, 82), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [52, 14, 0]]
** centroid: 2, normalized-entropy: 0.7455178428108284, [(1, 52), (2, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 7, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 4, 0]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(1, 64), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 10, 0]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(1, 55), (2, 10)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2841082006106153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2841082006106153, 0.17103610054403542] ***
*** starting iteration: 2; err: [Inf, 0.2841082006106153, 0.17103610054403542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031] ***
*** starting iteration: 3; err: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031, 0.15353339558281004] ***
*** starting iteration: 4; err: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031, 0.15353339558281004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031, 0.15353339558281004, 0.15131874756515026] ***
*** starting iteration: 5; err: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031, 0.15353339558281004, 0.15131874756515026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031, 0.15353339558281004, 0.15131874756515026, 0.15041334984637797] ***
*** finished computation of 7 references, err: [Inf, 0.2841082006106153, 0.17103610054403542, 0.157091767156031, 0.15353339558281004, 0.15131874756515026, 0.15041334984637797] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 50, 15]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 50), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 58, 0]]
** centroid: 3, normalized-entropy: 0.12394986771100755, [(1, 1), (2, 58)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [98, 8, 0]]
** centroid: 4, normalized-entropy: 0.3860189005698936, [(1, 98), (2, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [16, 44, 0]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(1, 16), (2, 44)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24448230910301208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372] ***
*** starting iteration: 2; err: [Inf, 0.24448230910301208, 0.18929867949057372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627] ***
*** starting iteration: 3; err: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294] ***
*** starting iteration: 4; err: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968] ***
*** starting iteration: 5; err: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968, 0.1533033518176526] ***
*** starting iteration: 6; err: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968, 0.1533033518176526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968, 0.1533033518176526, 0.1512630934957415] ***
*** starting iteration: 7; err: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968, 0.1533033518176526, 0.1512630934957415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968, 0.1533033518176526, 0.1512630934957415, 0.15052239301800727] ***
*** finished computation of 7 references, err: [Inf, 0.24448230910301208, 0.18929867949057372, 0.17239066277630627, 0.16181487715244294, 0.15639371335878968, 0.1533033518176526, 0.1512630934957415, 0.15052239301800727] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 4, 0]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(1, 64), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 31, 0]]
** centroid: 2, normalized-entropy: 0.9631672450918831, [(1, 49), (2, 31)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 111, 9]]
** centroid: 3, normalized-entropy: 0.28403813817895146, [(1, 1), (2, 111), (3, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 28, 0]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(1, 42), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [64, 4, 0]]
** centroid: 7, normalized-entropy: 0.32275695889739825, [(1, 64), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21523322616377846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21523322616377846, 0.1803211088417447] ***
*** starting iteration: 2; err: [Inf, 0.21523322616377846, 0.1803211088417447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524] ***
*** starting iteration: 3; err: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259] ***
*** starting iteration: 4; err: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259, 0.1520458310469985] ***
*** starting iteration: 5; err: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259, 0.1520458310469985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259, 0.1520458310469985, 0.15032562195602805] ***
*** starting iteration: 6; err: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259, 0.1520458310469985, 0.15032562195602805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259, 0.1520458310469985, 0.15032562195602805, 0.14971972712501883] ***
*** finished computation of 7 references, err: [Inf, 0.21523322616377846, 0.1803211088417447, 0.16333244613185524, 0.15688182394020259, 0.1520458310469985, 0.15032562195602805, 0.14971972712501883] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 19, 0]]
** centroid: 1, normalized-entropy: 0.8271595195340525, [(1, 54), (2, 19)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 101, 15]]
** centroid: 2, normalized-entropy: 0.5555437650236148, [(2, 101), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [72, 7, 0]]
** centroid: 3, normalized-entropy: 0.43180499427520785, [(1, 72), (2, 7)]
*** center 4: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 11, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 44), (2, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [31, 28, 0]]
** centroid: 7, normalized-entropy: 0.9981341775041118, [(1, 31), (2, 28)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24416551759000868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416551759000868, 0.15565424909070133] ***
*** starting iteration: 2; err: [Inf, 0.24416551759000868, 0.15565424909070133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416551759000868, 0.15565424909070133, 0.14646443628147243] ***
*** starting iteration: 3; err: [Inf, 0.24416551759000868, 0.15565424909070133, 0.14646443628147243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416551759000868, 0.15565424909070133, 0.14646443628147243, 0.1438568543959409] ***
*** starting iteration: 4; err: [Inf, 0.24416551759000868, 0.15565424909070133, 0.14646443628147243, 0.1438568543959409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24416551759000868, 0.15565424909070133, 0.14646443628147243, 0.1438568543959409, 0.14295005790703] ***
*** finished computation of 7 references, err: [Inf, 0.24416551759000868, 0.15565424909070133, 0.14646443628147243, 0.1438568543959409, 0.14295005790703] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [39, 32, 0]]
** centroid: 2, normalized-entropy: 0.9929768866085175, [(1, 39), (2, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 47, 16]]
** centroid: 5, normalized-entropy: 0.8175072881213616, [(2, 47), (3, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 9, 0]]
** centroid: 7, normalized-entropy: 0.5801954953637372, [(1, 56), (2, 9)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18985150867234915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399] ***
*** starting iteration: 2; err: [Inf, 0.18985150867234915, 0.16283425076399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976] ***
*** starting iteration: 3; err: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564] ***
*** starting iteration: 4; err: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433] ***
*** starting iteration: 5; err: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433, 0.14713446770887822] ***
*** starting iteration: 6; err: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433, 0.14713446770887822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433, 0.14713446770887822, 0.14588552852906286] ***
*** starting iteration: 7; err: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433, 0.14713446770887822, 0.14588552852906286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433, 0.14713446770887822, 0.14588552852906286, 0.1451437623500824] ***
*** finished computation of 7 references, err: [Inf, 0.18985150867234915, 0.16283425076399, 0.15342425352334976, 0.15137438628822564, 0.14884078767709433, 0.14713446770887822, 0.14588552852906286, 0.1451437623500824] ***
*** center 1: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 7, 0]]
** centroid: 3, normalized-entropy: 0.40707680632541937, [(1, 79), (2, 7)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 53, 16]]
** centroid: 4, normalized-entropy: 0.7812812090702043, [(2, 53), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 52, 0]]
** centroid: 5, normalized-entropy: 0.603652249754401, [(1, 9), (2, 52)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [44, 1, 0]]
** centroid: 6, normalized-entropy: 0.1537421803287618, [(1, 44), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [8, 45, 0]]
** centroid: 7, normalized-entropy: 0.612196127490834, [(1, 8), (2, 45)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18648701547179372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648] ***
*** starting iteration: 2; err: [Inf, 0.18648701547179372, 0.15887204476259648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198] ***
*** starting iteration: 3; err: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196] ***
*** starting iteration: 4; err: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989] ***
*** starting iteration: 5; err: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989, 0.14814665778726338] ***
*** starting iteration: 6; err: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989, 0.14814665778726338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989, 0.14814665778726338, 0.14711489756405355] ***
*** starting iteration: 7; err: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989, 0.14814665778726338, 0.14711489756405355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989, 0.14814665778726338, 0.14711489756405355, 0.1462759743919596] ***
*** finished computation of 7 references, err: [Inf, 0.18648701547179372, 0.15887204476259648, 0.15432770193368198, 0.15074164451286196, 0.1491583639997989, 0.14814665778726338, 0.14711489756405355, 0.1462759743919596] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 34, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [11, 51, 0]]
** centroid: 2, normalized-entropy: 0.674398887071447, [(1, 11), (2, 51)]
*** center 3: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 43, 13]]
** centroid: 4, normalized-entropy: 0.7817281222714539, [(2, 43), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 20, 0]]
** centroid: 5, normalized-entropy: 0.7510324165275097, [(1, 73), (2, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 9, 0]]
** centroid: 7, normalized-entropy: 0.5203346157857599, [(1, 68), (2, 9)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23523623068258168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23523623068258168, 0.15893731336295605] ***
*** starting iteration: 2; err: [Inf, 0.23523623068258168, 0.15893731336295605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775] ***
*** starting iteration: 3; err: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285] ***
*** starting iteration: 4; err: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285, 0.14158337145205588] ***
*** starting iteration: 5; err: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285, 0.14158337145205588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285, 0.14158337145205588, 0.13954009783640503] ***
*** starting iteration: 6; err: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285, 0.14158337145205588, 0.13954009783640503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285, 0.14158337145205588, 0.13954009783640503, 0.13896315695159137] ***
*** finished computation of 7 references, err: [Inf, 0.23523623068258168, 0.15893731336295605, 0.14650987425632775, 0.1431650887937285, 0.14158337145205588, 0.13954009783640503, 0.13896315695159137] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 3, 0]]
** centroid: 1, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [10, 61, 0]]
** centroid: 2, normalized-entropy: 0.5864477034453907, [(1, 10), (2, 61)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 28, 0]]
** centroid: 3, normalized-entropy: 0.9675594819018211, [(1, 43), (2, 28)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 63, 15]]
** centroid: 4, normalized-entropy: 0.7062740891876008, [(2, 63), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [82, 3, 0]]
** centroid: 5, normalized-entropy: 0.22028326695127437, [(1, 82), (2, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26464724069833756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155] ***
*** starting iteration: 2; err: [Inf, 0.26464724069833756, 0.21837996104732155] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638] ***
*** starting iteration: 3; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062] ***
*** starting iteration: 4; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833] ***
*** starting iteration: 5; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237] ***
*** starting iteration: 6; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361] ***
*** starting iteration: 7; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361, 0.1490282197482884] ***
*** starting iteration: 8; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361, 0.1490282197482884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361, 0.1490282197482884, 0.14785834261309355] ***
*** starting iteration: 9; err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361, 0.1490282197482884, 0.14785834261309355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361, 0.1490282197482884, 0.14785834261309355, 0.1473495535682887] ***
*** finished computation of 7 references, err: [Inf, 0.26464724069833756, 0.21837996104732155, 0.20342281494289638, 0.1870739446124062, 0.16937131226807833, 0.1567240099143237, 0.1507802660409361, 0.1490282197482884, 0.14785834261309355, 0.1473495535682887] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 55, 0]]
** centroid: 1, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 11, 0]]
** centroid: 2, normalized-entropy: 0.6619760641115651, [(1, 53), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 84, 16]]
** centroid: 3, normalized-entropy: 0.634309554640566, [(2, 84), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 11, 0]]
** centroid: 5, normalized-entropy: 0.5600443203590992, [(1, 73), (2, 11)]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2667909324467182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808] ***
*** starting iteration: 2; err: [Inf, 0.2667909324467182, 0.18059622914157808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687] ***
*** starting iteration: 3; err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622] ***
*** starting iteration: 4; err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627] ***
*** starting iteration: 5; err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987] ***
*** starting iteration: 6; err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987, 0.14753928036941216] ***
*** starting iteration: 7; err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987, 0.14753928036941216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987, 0.14753928036941216, 0.14631615865882486] ***
*** starting iteration: 8; err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987, 0.14753928036941216, 0.14631615865882486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987, 0.14753928036941216, 0.14631615865882486, 0.1456192096117884] ***
*** finished computation of 7 references, err: [Inf, 0.2667909324467182, 0.18059622914157808, 0.15849057651683687, 0.15470515439845622, 0.15185285655781627, 0.14935610460489987, 0.14753928036941216, 0.14631615865882486, 0.1456192096117884] ***
*** center 1: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 60, 10]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 60), (3, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 10, 0]]
** centroid: 3, normalized-entropy: 0.5617526078313283, [(1, 66), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [7, 70, 0]]
** centroid: 4, normalized-entropy: 0.43949698692151346, [(1, 7), (2, 70)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 17, 0]]
** centroid: 5, normalized-entropy: 0.7997594113291759, [(1, 53), (2, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [49, 7, 0]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(1, 49), (2, 7)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2363219130244106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703] ***
*** starting iteration: 2; err: [Inf, 0.2363219130244106, 0.16477881808392703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738] ***
*** starting iteration: 3; err: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552] ***
*** starting iteration: 4; err: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578] ***
*** starting iteration: 5; err: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578, 0.14699298296123742] ***
*** starting iteration: 6; err: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578, 0.14699298296123742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578, 0.14699298296123742, 0.14549908665381373] ***
*** starting iteration: 7; err: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578, 0.14699298296123742, 0.14549908665381373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578, 0.14699298296123742, 0.14549908665381373, 0.1446127087082714] ***
*** finished computation of 7 references, err: [Inf, 0.2363219130244106, 0.16477881808392703, 0.1548393164742738, 0.1515585711989552, 0.14919352097995578, 0.14699298296123742, 0.14549908665381373, 0.1446127087082714] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 16, 0]]
** centroid: 1, normalized-entropy: 0.7586638628883696, [(1, 57), (2, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 13, 0]]
** centroid: 4, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 47, 3]]
** centroid: 5, normalized-entropy: 0.3274449191544762, [(2, 47), (3, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 38, 0]]
** centroid: 6, normalized-entropy: 0.9744894033980525, [(1, 26), (2, 38)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 55, 10]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 55), (3, 10)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22159043593890965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22159043593890965, 0.1652920589130372] ***
*** starting iteration: 2; err: [Inf, 0.22159043593890965, 0.1652920589130372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325] ***
*** starting iteration: 3; err: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125] ***
*** starting iteration: 4; err: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125, 0.1474265351127833] ***
*** starting iteration: 5; err: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125, 0.1474265351127833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125, 0.1474265351127833, 0.14640762644447386] ***
*** starting iteration: 6; err: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125, 0.1474265351127833, 0.14640762644447386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125, 0.1474265351127833, 0.14640762644447386, 0.14588131387531758] ***
*** finished computation of 7 references, err: [Inf, 0.22159043593890965, 0.1652920589130372, 0.1535222918037325, 0.14930766272731125, 0.1474265351127833, 0.14640762644447386, 0.14588131387531758] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 11]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 77), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [9, 36, 0]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(1, 9), (2, 36)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 35, 0]]
** centroid: 5, normalized-entropy: 0.9688977092243805, [(1, 23), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [85, 12, 0]]
** centroid: 7, normalized-entropy: 0.5399357331112666, [(1, 85), (2, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22123500677384436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22123500677384436, 0.16187014077976347] ***
*** starting iteration: 2; err: [Inf, 0.22123500677384436, 0.16187014077976347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966] ***
*** starting iteration: 3; err: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966, 0.14652053738757967] ***
*** starting iteration: 4; err: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966, 0.14652053738757967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966, 0.14652053738757967, 0.14528803998604417] ***
*** starting iteration: 5; err: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966, 0.14652053738757967, 0.14528803998604417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966, 0.14652053738757967, 0.14528803998604417, 0.144829241681844] ***
*** finished computation of 7 references, err: [Inf, 0.22123500677384436, 0.16187014077976347, 0.14999372768308966, 0.14652053738757967, 0.14528803998604417, 0.144829241681844] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [60, 30, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 60), (2, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 13, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 39), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 65, 0]]
** centroid: 6, normalized-entropy: 0.460127886147135, [(1, 7), (2, 65)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 65, 15]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 65), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17424680503923445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17424680503923445, 0.1443970526093617] ***
*** starting iteration: 2; err: [Inf, 0.17424680503923445, 0.1443970526093617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17424680503923445, 0.1443970526093617, 0.14049317201180384] ***
*** starting iteration: 3; err: [Inf, 0.17424680503923445, 0.1443970526093617, 0.14049317201180384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17424680503923445, 0.1443970526093617, 0.14049317201180384, 0.13952357883844524] ***
*** finished computation of 7 references, err: [Inf, 0.17424680503923445, 0.1443970526093617, 0.14049317201180384, 0.13952357883844524] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 62, 0]]
** centroid: 1, normalized-entropy: 0.11759466565886466, [(1, 1), (2, 62)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 42, 0]]
** centroid: 3, normalized-entropy: 0.9932338197397066, [(1, 51), (2, 42)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 50, 14]]
** centroid: 4, normalized-entropy: 0.7578784625383954, [(2, 50), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 15, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 45), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23362241038121284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23362241038121284, 0.18223380193673075] ***
*** starting iteration: 2; err: [Inf, 0.23362241038121284, 0.18223380193673075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338] ***
*** starting iteration: 3; err: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338, 0.1558679567296058] ***
*** starting iteration: 4; err: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338, 0.1558679567296058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338, 0.1558679567296058, 0.15373940004361794] ***
*** starting iteration: 5; err: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338, 0.1558679567296058, 0.15373940004361794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338, 0.1558679567296058, 0.15373940004361794, 0.15316028148494662] ***
*** finished computation of 7 references, err: [Inf, 0.23362241038121284, 0.18223380193673075, 0.1610673033632338, 0.1558679567296058, 0.15373940004361794, 0.15316028148494662] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 4, 0]]
** centroid: 1, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [100, 15, 0]]
** centroid: 2, normalized-entropy: 0.5586293734521991, [(1, 100), (2, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 57, 0]]
** centroid: 4, normalized-entropy: 0.34918437350730797, [(1, 4), (2, 57)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [57, 16, 0]]
** centroid: 5, normalized-entropy: 0.7586638628883696, [(1, 57), (2, 16)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 18, 17]]
** centroid: 6, normalized-entropy: 0.9994110647387552, [(2, 18), (3, 17)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 41, 2]]
** centroid: 7, normalized-entropy: 0.2713895875081112, [(2, 41), (3, 2)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26564751423336563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26564751423336563, 0.18958084707707168] ***
*** starting iteration: 2; err: [Inf, 0.26564751423336563, 0.18958084707707168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533] ***
*** starting iteration: 3; err: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533, 0.15745561561360955] ***
*** starting iteration: 4; err: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533, 0.15745561561360955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533, 0.15745561561360955, 0.15460383733548225] ***
*** starting iteration: 5; err: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533, 0.15745561561360955, 0.15460383733548225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533, 0.15745561561360955, 0.15460383733548225, 0.15379587752651422] ***
*** finished computation of 7 references, err: [Inf, 0.26564751423336563, 0.18958084707707168, 0.16979157789051533, 0.15745561561360955, 0.15460383733548225, 0.15379587752651422] ***
*** center 1: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 26, 0]]
** centroid: 2, normalized-entropy: 0.9876925088958032, [(1, 20), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [7, 59, 0]]
** centroid: 3, normalized-entropy: 0.48791799258948565, [(1, 7), (2, 59)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 61, 16]]
** centroid: 4, normalized-entropy: 0.7372413771710565, [(2, 61), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [120, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [40, 13, 0]]
** centroid: 6, normalized-entropy: 0.8037159237834126, [(1, 40), (2, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20548041481617838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20548041481617838, 0.15881420646887273] ***
*** starting iteration: 2; err: [Inf, 0.20548041481617838, 0.15881420646887273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20548041481617838, 0.15881420646887273, 0.1551891274638474] ***
*** starting iteration: 3; err: [Inf, 0.20548041481617838, 0.15881420646887273, 0.1551891274638474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20548041481617838, 0.15881420646887273, 0.1551891274638474, 0.1544497230532579] ***
*** finished computation of 7 references, err: [Inf, 0.20548041481617838, 0.15881420646887273, 0.1551891274638474, 0.1544497230532579] ***
*** center 1: selecting labels [1] (freq >= 1) [from [116, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [95, 6, 0]]
** centroid: 2, normalized-entropy: 0.3250821976451909, [(1, 95), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 42, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 46, 13]]
** centroid: 5, normalized-entropy: 0.7607859931846075, [(2, 46), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [24, 36, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 24), (2, 36)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [19, 31, 0]]
** centroid: 7, normalized-entropy: 0.9580420222262997, [(1, 19), (2, 31)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2526694138110615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526694138110615, 0.1694064587261528] ***
*** starting iteration: 2; err: [Inf, 0.2526694138110615, 0.1694064587261528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061] ***
*** starting iteration: 3; err: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033] ***
*** starting iteration: 4; err: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033, 0.1562371619231999] ***
*** starting iteration: 5; err: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033, 0.1562371619231999] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033, 0.1562371619231999, 0.15493191940058024] ***
*** starting iteration: 6; err: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033, 0.1562371619231999, 0.15493191940058024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033, 0.1562371619231999, 0.15493191940058024, 0.1541507028657943] ***
*** finished computation of 7 references, err: [Inf, 0.2526694138110615, 0.1694064587261528, 0.1619984559128061, 0.1579239607444033, 0.1562371619231999, 0.15493191940058024, 0.1541507028657943] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 19, 0]]
** centroid: 1, normalized-entropy: 0.6859315226878925, [(1, 85), (2, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 95, 9]]
** centroid: 3, normalized-entropy: 0.42480887386781474, [(2, 95), (3, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 5, 0]]
** centroid: 4, normalized-entropy: 0.3602750564216625, [(1, 68), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 58, 0]]
** centroid: 5, normalized-entropy: 0.12394986771100755, [(1, 1), (2, 58)]
*** center 6: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [20, 2, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 20), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21915523781999946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902] ***
*** starting iteration: 2; err: [Inf, 0.21915523781999946, 0.1787701271995902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775] ***
*** starting iteration: 3; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734] ***
*** starting iteration: 4; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282] ***
*** starting iteration: 5; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906] ***
*** starting iteration: 6; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226] ***
*** starting iteration: 7; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226, 0.1455949912611395] ***
*** starting iteration: 8; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226, 0.1455949912611395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226, 0.1455949912611395, 0.1440713409408927] ***
*** starting iteration: 9; err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226, 0.1455949912611395, 0.1440713409408927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226, 0.1455949912611395, 0.1440713409408927, 0.14365780243836343] ***
*** finished computation of 7 references, err: [Inf, 0.21915523781999946, 0.1787701271995902, 0.1621719789765775, 0.15493507152050734, 0.15167667013779282, 0.14959150229021906, 0.14733971474692226, 0.1455949912611395, 0.1440713409408927, 0.14365780243836343] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 53, 3]]
** centroid: 1, normalized-entropy: 0.3013786435930858, [(2, 53), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 76, 9]]
** centroid: 2, normalized-entropy: 0.48736957102366285, [(2, 76), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 2, 0]]
** centroid: 3, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 13, 0]]
** centroid: 5, normalized-entropy: 0.7746319868686841, [(1, 44), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [84, 4, 0]]
** centroid: 6, normalized-entropy: 0.2667649878030262, [(1, 84), (2, 4)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 14, 0]]
** centroid: 7, normalized-entropy: 0.710676853856123, [(1, 58), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32738280383730306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639] ***
*** starting iteration: 2; err: [Inf, 0.32738280383730306, 0.2000768480114639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568] ***
*** starting iteration: 3; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278] ***
*** starting iteration: 4; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604] ***
*** starting iteration: 5; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017] ***
*** starting iteration: 6; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831] ***
*** starting iteration: 7; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796] ***
*** starting iteration: 8; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796, 0.14470595148578286] ***
*** starting iteration: 9; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796, 0.14470595148578286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796, 0.14470595148578286, 0.14315978140197694] ***
*** starting iteration: 10; err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796, 0.14470595148578286, 0.14315978140197694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796, 0.14470595148578286, 0.14315978140197694, 0.14179360900074245] ***
*** finished computation of 7 references, err: [Inf, 0.32738280383730306, 0.2000768480114639, 0.17106039143260568, 0.15878825334273278, 0.15396581915486604, 0.15098598273308017, 0.1487593076042831, 0.14632867364864796, 0.14470595148578286, 0.14315978140197694, 0.14179360900074245] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 22, 0]]
** centroid: 2, normalized-entropy: 0.9132401614300725, [(1, 45), (2, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 30, 0]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(1, 45), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [28, 37, 0]]
** centroid: 5, normalized-entropy: 0.9861260846302384, [(1, 28), (2, 37)]
*** center 6: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 75, 11]]
** centroid: 7, normalized-entropy: 0.5516699920020824, [(2, 75), (3, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22733251412631944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015] ***
*** starting iteration: 2; err: [Inf, 0.22733251412631944, 0.18624203241989015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578] ***
*** starting iteration: 3; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937] ***
*** starting iteration: 4; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303] ***
*** starting iteration: 5; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197] ***
*** starting iteration: 6; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223] ***
*** starting iteration: 7; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185] ***
*** starting iteration: 8; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185, 0.15082805244298653] ***
*** starting iteration: 9; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185, 0.15082805244298653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185, 0.15082805244298653, 0.1494484323505312] ***
*** starting iteration: 10; err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185, 0.15082805244298653, 0.1494484323505312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185, 0.15082805244298653, 0.1494484323505312, 0.14757763574644922] ***
*** finished computation of 7 references, err: [Inf, 0.22733251412631944, 0.18624203241989015, 0.17219797576032578, 0.1651355756036937, 0.15939083462767303, 0.1562784144040197, 0.15413541812822223, 0.15233685659617185, 0.15082805244298653, 0.1494484323505312, 0.14757763574644922] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 17, 0]]
** centroid: 1, normalized-entropy: 0.7462343013654809, [(1, 63), (2, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 21, 0]]
** centroid: 2, normalized-entropy: 0.9288391461883213, [(1, 40), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 57, 12]]
** centroid: 3, normalized-entropy: 0.6665783579949205, [(2, 57), (3, 12)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [13, 59, 0]]
** centroid: 4, normalized-entropy: 0.6812908868842175, [(1, 13), (2, 59)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [66, 3, 0]]
** centroid: 6, normalized-entropy: 0.2580186686648155, [(1, 66), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2671201922558248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945] ***
*** starting iteration: 2; err: [Inf, 0.2671201922558248, 0.16823282548598945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267] ***
*** starting iteration: 3; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126] ***
*** starting iteration: 4; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256] ***
*** starting iteration: 5; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807] ***
*** starting iteration: 6; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675] ***
*** starting iteration: 7; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675, 0.15246463665738702] ***
*** starting iteration: 8; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675, 0.15246463665738702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675, 0.15246463665738702, 0.1511816710624844] ***
*** starting iteration: 9; err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675, 0.15246463665738702, 0.1511816710624844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675, 0.15246463665738702, 0.1511816710624844, 0.1503034103633836] ***
*** finished computation of 7 references, err: [Inf, 0.2671201922558248, 0.16823282548598945, 0.16084482980333267, 0.15880844105780126, 0.15671898361854256, 0.15531174105405807, 0.15392898204922675, 0.15246463665738702, 0.1511816710624844, 0.1503034103633836] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [79, 3, 0]]
** centroid: 1, normalized-entropy: 0.22641094842107634, [(1, 79), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [6, 61, 0]]
** centroid: 2, normalized-entropy: 0.43497348007474274, [(1, 6), (2, 61)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 44, 13]]
** centroid: 4, normalized-entropy: 0.7746319868686841, [(2, 44), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 13, 0]]
** centroid: 5, normalized-entropy: 0.6758635715876156, [(1, 60), (2, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18020181445591152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093] ***
*** starting iteration: 2; err: [Inf, 0.18020181445591152, 0.15807044535363093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489] ***
*** starting iteration: 3; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552] ***
*** starting iteration: 4; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963] ***
*** starting iteration: 5; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362] ***
*** starting iteration: 6; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328] ***
*** starting iteration: 7; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307] ***
*** starting iteration: 8; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307, 0.14443986774794756] ***
*** starting iteration: 9; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307, 0.14443986774794756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307, 0.14443986774794756, 0.1430589257888496] ***
*** starting iteration: 10; err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307, 0.14443986774794756, 0.1430589257888496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307, 0.14443986774794756, 0.1430589257888496, 0.142300454759039] ***
*** finished computation of 7 references, err: [Inf, 0.18020181445591152, 0.15807044535363093, 0.15582967055961489, 0.15431439753435552, 0.15192949795722963, 0.14925890001468362, 0.14788003280386328, 0.14678493333887307, 0.14443986774794756, 0.1430589257888496, 0.142300454759039] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 52, 15]]
** centroid: 2, normalized-entropy: 0.7671903206448686, [(2, 52), (3, 15)]
*** center 3: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 25, 0]]
** centroid: 4, normalized-entropy: 0.9004854334784268, [(1, 54), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 60, 0]]
** centroid: 5, normalized-entropy: 0.5225593745369407, [(1, 8), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 1, 0]]
** centroid: 6, normalized-entropy: 0.1044190780054077, [(1, 72), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 8, 0]]
** centroid: 7, normalized-entropy: 0.612196127490834, [(1, 45), (2, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21491545714996754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21491545714996754, 0.17852415435388685] ***
*** starting iteration: 2; err: [Inf, 0.21491545714996754, 0.17852415435388685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313] ***
*** starting iteration: 3; err: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906] ***
*** starting iteration: 4; err: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906, 0.1545884185861796] ***
*** starting iteration: 5; err: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906, 0.1545884185861796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906, 0.1545884185861796, 0.15227276731282471] ***
*** starting iteration: 6; err: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906, 0.1545884185861796, 0.15227276731282471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906, 0.1545884185861796, 0.15227276731282471, 0.15159331322554498] ***
*** finished computation of 7 references, err: [Inf, 0.21491545714996754, 0.17852415435388685, 0.1648195458315313, 0.15748744904249906, 0.1545884185861796, 0.15227276731282471, 0.15159331322554498] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [88, 6, 0]]
** centroid: 1, normalized-entropy: 0.3424637724817958, [(1, 88), (2, 6)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 62, 13]]
** centroid: 4, normalized-entropy: 0.6652735227649414, [(2, 62), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 25, 0]]
** centroid: 5, normalized-entropy: 0.9445911819316588, [(1, 44), (2, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [70, 9, 0]]
** centroid: 7, normalized-entropy: 0.511639783631173, [(1, 70), (2, 9)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22630280123464763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277] ***
*** starting iteration: 2; err: [Inf, 0.22630280123464763, 0.18081869119778277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595] ***
*** starting iteration: 3; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324] ***
*** starting iteration: 4; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686] ***
*** starting iteration: 5; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845] ***
*** starting iteration: 6; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304] ***
*** starting iteration: 7; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056] ***
*** starting iteration: 8; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056, 0.144327604688704] ***
*** starting iteration: 9; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056, 0.144327604688704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056, 0.144327604688704, 0.14255039714463055] ***
*** starting iteration: 10; err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056, 0.144327604688704, 0.14255039714463055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056, 0.144327604688704, 0.14255039714463055, 0.14048864126577973] ***
*** finished computation of 7 references, err: [Inf, 0.22630280123464763, 0.18081869119778277, 0.16254577702097595, 0.15493472578935324, 0.15183791190292686, 0.15050499865505845, 0.1486795902820304, 0.1464774922952056, 0.144327604688704, 0.14255039714463055, 0.14048864126577973] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 15, 0]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(1, 55), (2, 15)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 68, 16]]
** centroid: 2, normalized-entropy: 0.7024665512903904, [(2, 68), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 36, 0]]
** centroid: 3, normalized-entropy: 0.9994110647387552, [(1, 34), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [38, 27, 0]]
** centroid: 4, normalized-entropy: 0.9792415350396869, [(1, 38), (2, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30419536883663384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30419536883663384, 0.18336897111870348] ***
*** starting iteration: 2; err: [Inf, 0.30419536883663384, 0.18336897111870348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289] ***
*** starting iteration: 3; err: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787] ***
*** starting iteration: 4; err: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787, 0.14779170088563115] ***
*** starting iteration: 5; err: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787, 0.14779170088563115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787, 0.14779170088563115, 0.1457674294859171] ***
*** starting iteration: 6; err: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787, 0.14779170088563115, 0.1457674294859171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787, 0.14779170088563115, 0.1457674294859171, 0.14493429648084566] ***
*** finished computation of 7 references, err: [Inf, 0.30419536883663384, 0.18336897111870348, 0.1631614171853289, 0.15274723820015787, 0.14779170088563115, 0.1457674294859171, 0.14493429648084566] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [10, 39, 0]]
** centroid: 3, normalized-entropy: 0.7300166301457938, [(1, 10), (2, 39)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 45, 19]]
** centroid: 4, normalized-entropy: 0.877437311089633, [(2, 45), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 59, 0]]
** centroid: 5, normalized-entropy: 0.3955378064564774, [(1, 5), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [107, 8, 0]]
** centroid: 6, normalized-entropy: 0.36429902881461246, [(1, 107), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 4, 0]]
** centroid: 7, normalized-entropy: 0.43275015878875417, [(1, 41), (2, 4)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27643970687314867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355] ***
*** starting iteration: 2; err: [Inf, 0.27643970687314867, 0.16902305821329355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717] ***
*** starting iteration: 3; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214] ***
*** starting iteration: 4; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669] ***
*** starting iteration: 5; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354] ***
*** starting iteration: 6; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045] ***
*** starting iteration: 7; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635] ***
*** starting iteration: 8; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635, 0.14867215714510532] ***
*** starting iteration: 9; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635, 0.14867215714510532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635, 0.14867215714510532, 0.14759869217826055] ***
*** starting iteration: 10; err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635, 0.14867215714510532, 0.14759869217826055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635, 0.14867215714510532, 0.14759869217826055, 0.14663746969029307] ***
*** finished computation of 7 references, err: [Inf, 0.27643970687314867, 0.16902305821329355, 0.15911888948641717, 0.15611282746773214, 0.15418626905232669, 0.1527484317063354, 0.15151799036283045, 0.14999399787932635, 0.14867215714510532, 0.14759869217826055, 0.14663746969029307] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [40, 6, 0]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(1, 40), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [88, 2, 0]]
** centroid: 2, normalized-entropy: 0.1537421803287618, [(1, 88), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 47, 0]]
** centroid: 3, normalized-entropy: 0.3966277727783787, [(1, 4), (2, 47)]
*** center 4: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [6, 58, 0]]
** centroid: 5, normalized-entropy: 0.44886448872302936, [(1, 6), (2, 58)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [87, 1, 0]]
** centroid: 6, normalized-entropy: 0.08970338978685011, [(1, 87), (2, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 46, 11]]
** centroid: 7, normalized-entropy: 0.7076690004167966, [(2, 46), (3, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1967515803296119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967515803296119, 0.14873861533403396] ***
*** starting iteration: 2; err: [Inf, 0.1967515803296119, 0.14873861533403396] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967515803296119, 0.14873861533403396, 0.1461740878354758] ***
*** starting iteration: 3; err: [Inf, 0.1967515803296119, 0.14873861533403396, 0.1461740878354758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967515803296119, 0.14873861533403396, 0.1461740878354758, 0.14530102956667543] ***
*** finished computation of 7 references, err: [Inf, 0.1967515803296119, 0.14873861533403396, 0.1461740878354758, 0.14530102956667543] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 21, 0]]
** centroid: 1, normalized-entropy: 0.8160172973428256, [(1, 62), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 7, 0]]
** centroid: 2, normalized-entropy: 0.44749925503686355, [(1, 68), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [75, 1, 0]]
** centroid: 3, normalized-entropy: 0.10106696361212422, [(1, 75), (2, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 21, 0]]
** centroid: 5, normalized-entropy: 0.9340680553754911, [(1, 39), (2, 21)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 51, 15]]
** centroid: 6, normalized-entropy: 0.7732266742876346, [(2, 51), (3, 15)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 70, 0]]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 326,3 => 28,1 => 646), Dict(2 => 357,3 => 25,1 => 618))
[ Info: ===== scores for single classifier: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9686075077280103,"macro_f1":0.8922495236891,"accuracy":0.963,"class_f1":{"2":0.9466089466089467,"3":0.7462686567164178,"1":0.9838709677419356},"class_precision":{"2":0.9761904761904762,"3":0.5952380952380952,"1":0.9807073954983923},"class_recall":{"2":0.9187675070028011,"3":1.0,"1":0.9870550161812298}}
[ Info: ===== scores for 1: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.897654492217599,"macro_f1":0.8882621838826218,"accuracy":0.965,"class_f1":{"2":0.951048951048951,"3":0.7307692307692308,"1":0.9829683698296836},"class_precision":{"2":0.9497206703910615,"3":0.7037037037037037,"1":0.9853658536585366},"class_recall":{"2":0.9523809523809523,"3":0.76,"1":0.9805825242718447}}
[ Info: ===== scores for 5: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9568741671425852,"macro_f1":0.9363579971122559,"accuracy":0.954,"class_f1":{"2":0.9371584699453552,"3":0.9056603773584904,"1":0.9662551440329218},"class_precision":{"2":0.9146666666666666,"3":0.8571428571428571,"1":0.983249581239531},"class_recall":{"2":0.9607843137254902,"3":0.96,"1":0.9498381877022654}}
[ Info: ===== scores for 7: {"micro_f1":0.955,"precision":0.955,"recall":0.955,"macro_recall":0.957807873958645,"macro_f1":0.9371066355296218,"accuracy":0.955,"class_f1":{"2":0.9386084583901774,"3":0.9056603773584904,"1":0.9670510708401977},"class_precision":{"2":0.9148936170212766,"3":0.8571428571428571,"1":0.9848993288590604},"class_recall":{"2":0.9635854341736695,"3":0.96,"1":0.9498381877022654}}
[ Info: ===== scores for 9: {"micro_f1":0.955,"precision":0.955,"recall":0.955,"macro_recall":0.957807873958645,"macro_f1":0.926660865267973,"accuracy":0.955,"class_f1":{"2":0.9386084583901774,"3":0.8727272727272728,"1":0.9686468646864687},"class_precision":{"2":0.9148936170212766,"3":0.8,"1":0.9882154882154882},"class_recall":{"2":0.9635854341736695,"3":0.96,"1":0.9498381877022654}}
[ Info: ===== scores for 11: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.9724692465983157,"macro_f1":0.9296294188640949,"accuracy":0.957,"class_f1":{"2":0.9414965986394558,"3":0.8771929824561403,"1":0.9701986754966887},"class_precision":{"2":0.9153439153439153,"3":0.78125,"1":0.9932203389830508},"class_recall":{"2":0.969187675070028,"3":1.0,"1":0.948220064724919}}
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.951, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.951, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.955, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.955, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.967,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.967,"precision":0.967,"recall":0.967,"macro_recall":0.9119215323669921,"macro_f1":0.9020150976355356,"accuracy":0.967,"class_f1":{"2":0.9538461538461538,"3":0.7692307692307692,"1":0.9829683698296836},"class_precision":{"2":0.952513966480447,"3":0.7407407407407407,"1":0.9853658536585366},"class_recall":{"2":0.9551820728291317,"3":0.8,"1":0.9805825242718447}}
Test Summary: | Pass  Total
AKNC          |    8      8
[1389, 1, 3, 1, 1, 3, 2, 2, 1, 5, 1, 1, 5, 3, 6, 5, 5, 1, 5, 1, 1, 6, 11, 9, 2, 4, 13, 4, 5, 2, 9, 2, 8, 1, 20, 6, 4, 15, 1, 4, 2, 9, 11, 14, 31, 7, 1, 5, 17, 8, 9, 8, 16, 2, 20, 1, 12, 9, 53, 5, 4, 19, 30, 38, 45, 16, 2, 7, 4, 17, 9, 1, 7, 72, 3, 6, 20, 13, 8, 2, 5, 6, 53, 6, 11, 16, 5, 47, 2, 23, 43, 51, 13, 4, 18, 31, 40, 18, 6, 3, 23, 7, 6, 4, 26, 128, 23, 74, 9, 85, 5, 1, 16, 73, 13, 57, 3, 13, 13, 8, 6, 87, 5, 11, 5, 2, 3, 4, 28, 4, 13, 14, 27, 31, 23, 11, 55, 32, 10, 12, 77, 71, 68, 7, 13, 55, 7, 86, 18, 15, 2, 57, 2, 37, 22, 25, 99, 49, 18, 67, 6, 46, 20, 40, 16, 11, 28, 5, 7, 181, 6, 48, 38, 7, 11, 17, 151, 100, 46, 37, 108, 161, 136, 16, 7, 5, 39, 45, 63, 45, 7, 81, 43, 31, 16, 28, 14, 9, 16, 2, 53, 20, 110, 48, 63, 127, 97, 2, 291, 17, 26, 10, 12, 147, 11, 2, 11, 79, 18, 11, 13, 29, 34, 38, 38, 60, 93, 34, 1, 2, 126, 167, 48, 141, 26, 7, 20, 19, 28, 5, 20, 3, 12, 28, 30, 99, 20, 12, 8, 19, 1, 34, 23, 41, 111, 10, 22, 14, 88, 9, 2, 21, 68, 22, 56, 134, 3, 4, 4, 56, 9, 41, 65, 4, 52, 9, 5, 24, 59, 29, 2, 28, 9, 60, 14, 48, 57, 45, 15, 13, 15, 4, 83, 12, 159, 4, 6, 15, 39, 27]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6370000000000001, speedup = 0.33038779738207913, eval_ratio = 0.08816900000000001)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.38368055555555575,"f1":null,"seconds":0.00022883154451847076,"exhaustive_search_seconds":0.0003565549850463867,"evaluations":591.8671875,"distances_sum":1691.1830517775768}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5437282986111109,"recall":0.5434027777777776,"f1":null,"seconds":0.0005648229271173477,"exhaustive_search_seconds":0.0003565549850463867,"evaluations":770.640625,"distances_sum":1666.2344630227915}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6406249999999999,"recall":0.6406249999999999,"f1":null,"seconds":0.0004160981625318527,"exhaustive_search_seconds":0.0003565549850463867,"evaluations":906.03125,"distances_sum":1608.7197647907344}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7213541666666662,"recall":0.7213541666666662,"f1":0.7213541666666662,"seconds":0.000516209751367569,"exhaustive_search_seconds":0.0003565549850463867,"evaluations":1029.8203125,"distances_sum":1579.4972910066983}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7734374999999993,"recall":0.7734374999999993,"f1":0.7734374999999993,"seconds":0.0006037522107362747,"exhaustive_search_seconds":0.0003565549850463867,"evaluations":1149.21875,"distances_sum":1562.882522824779}
KCenters.DeloneInvIndex> reached performance {"precision":0.8229166666666659,"recall":0.8229166666666659,"f1":0.8229166666666659,"seconds":0.0010378342121839523,"exhaustive_search_seconds":0.0003565549850463867,"evaluations":1261.7578125,"distances_sum":1546.4136158483318}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.815, speedup = 0.6114134074774001, eval_ratio = 0.125097)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
