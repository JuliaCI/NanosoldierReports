Julia Version 1.6.0-DEV.120
Commit 39fc4eec54 (2020-05-28 16:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Ew8jTE/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Ew8jTE/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07216062794633053 -0.14807668802552468; -0.07216062794633053 0.0 -0.09286262417471827; 0.14807668802552468 0.09286262417471827 0.0])
dAA = so3([0.0 0.11712683713679611 0.11484163843499762; -0.11712683713679611 0.0 0.036971303398964955; -0.11484163843499762 -0.036971303398964955 0.0])
dAA = so3([0.0 0.13616276697800953 -0.16153701758474856; -0.13616276697800953 0.0 0.054574778743268694; 0.16153701758474856 -0.054574778743268694 0.0])
dAA = Quaternion(0.9776259880488076, [-0.020531311726295402, -0.17794320834004518, -0.11028194474183708])
dAA = SO3([0.9865978519285823 0.058989598340989054 0.1521344992349734; -0.05145098398751314 0.9972668349517033 -0.0530250521181167; -0.15484661706548197 0.044486932834048115 0.9869363900426384])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9171456745743672 0.2711948233202195 0.2920568085387563; -0.2973428690624693 0.9535477326509479 0.048310866002749156; -0.26538845081734075 -0.1311491111695053 0.9551800253419356]), [0.9286262417471827, -1.4807668802552467, -0.7216062794633054])
xj = SE3(SO3([0.4879576684487873 0.4626647613497563 -0.7401612205507638; -0.46070407094697036 0.8567454198419515 0.231816834144389; 0.7413832158977651 0.22787848556853996 0.6312070365577973]), [-0.5457477874326869, -1.6153701758474854, -1.361627669780095])
Dx = SE3(SO3([0.3877607921082442 0.10910752519833868 -0.9152798020543669; -0.40420347839281123 0.912533879923149 -0.062461716655532115; 0.8284087856600382 0.3941794844198486 0.3979465013086093]), [-1.142338148204306, -0.4442550352011616, -1.048439423153757])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
