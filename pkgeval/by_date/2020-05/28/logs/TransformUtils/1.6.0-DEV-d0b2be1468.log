Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_x6pjL2/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_x6pjL2/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.19943955192662632 -0.06341366623961056; 0.19943955192662632 0.0 -0.06335913948988518; 0.06341366623961056 0.06335913948988518 0.0])
dAA = so3([0.0 -0.029149136723710237 -0.06928980188482968; 0.029149136723710237 0.0 -0.13090045765471944; 0.06928980188482968 0.13090045765471944 0.0])
dAA = so3([0.0 -0.01586937545608262 -0.09130903069339985; 0.01586937545608262 0.0 -0.18632204591890605; 0.09130903069339985 0.18632204591890605 0.0])
dAA = Quaternion(0.9982164858604773, [0.020905472127679313, -0.007873655096069234, 0.05536076360479852])
dAA = SO3([0.9972185309299534 -0.06749405379647581 -0.031618891062528354; 0.06923982288003168 0.9959227279730559 0.057825313092519544; 0.02758710744981155 -0.05985376018951941 0.9978258760393658])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9825499817094865 -0.09916465153077239 -0.15735916029729022; 0.04314629492339213 0.9444619388036439 -0.3257760632484311; 0.1809252074119896 0.3133018002470503 0.9322596479977485]), [0.6335913948988517, -0.6341366623961056, 1.994395519266263])
xj = SE3(SO3([0.9611583544257134 -0.2743161372801183 -0.03041832581471097; 0.26974189169637885 0.9569826970996403 -0.10688044402956455; 0.058428842036391766 0.0945239349562489 0.993806468150954]), [1.8632204591890604, -0.9130903069339984, 0.1586937545608262])
Dx = SE3(SO3([0.966595737137507 -0.21113729544419615 0.14530562074506803; 0.17775387812196006 0.9606507166551449 0.21343326686006514; -0.18465167142542377 -0.18047504830991634 0.966091360678342]), [0.864011475884724, -0.9605255052279493, -1.8139676578806287])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
