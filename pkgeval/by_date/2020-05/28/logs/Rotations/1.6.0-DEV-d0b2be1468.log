Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rotations ──── v1.0.1
  Installed StaticArrays ─ v0.12.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [6038ab10] + Rotations v1.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [6038ab10] + Rotations v1.0.1
  [90137ffa] + StaticArrays v0.12.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing Rotations
Status `/tmp/jl_3k4AwZ/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [f6369f11] ForwardDiff v0.10.10
  [6038ab10] Rotations v1.0.1
  [90137ffa] StaticArrays v0.12.3
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_3k4AwZ/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [f6369f11] ForwardDiff v0.10.10
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [69de0a69] Parsers v1.0.4
  [6038ab10] Rotations v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 200933  200933
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:         | Pass  Total
Principal Value (MRP) | 2000   2000
Test Summary:                    | Pass  Total
Principal Value (UnitQuaternion) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                     | Pass  Total
Principal Value (Rotation Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
Test Summary:    | Pass  Total
Unit Quaternions |   70     70
Test Summary:              | Pass  Total
RodriguesParam basic tests |   23     23
Test Summary:   | Pass  Total
MRP basic tests |   23     23
Test Summary: | Pass  Total
kinematics    |    9      9
Test Summary:   | Pass  Total
Quaternion Maps |   35     35
Test Summary:  | Pass  Total
Rotation Error |   24     24
Test Summary: | Pass  Total
Deprecations  |    3      3
WARNING: using BenchmarkTools.params in module Main conflicts with an existing identifier.
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.731158246 seconds)
done (took 3.146787668 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.046802306 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.044490653 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.025452356 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.085500001 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.009519118 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.039904901 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.057769133 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.055564079 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.125719601 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.13679986 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.061183557 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.040385008 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.983511142 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.961534558 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.047087748 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.94143139 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.011697057 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.035911616 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.100555651 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.93320967 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.997575404 seconds)
done (took 22.431631271 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.90020319 seconds)
  (2/20) tuning "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.007068957 seconds)
  (3/20) tuning "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 0.969945537 seconds)
  (4/20) tuning "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 0.965175141 seconds)
  (5/20) tuning "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.909853928 seconds)
  (6/20) tuning "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.930403764 seconds)
  (7/20) tuning "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 0.971978467 seconds)
  (8/20) tuning "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 1.085672822 seconds)
  (9/20) tuning "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.956216576 seconds)
  (10/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.98160691 seconds)
  (11/20) tuning "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 1.037028777 seconds)
  (12/20) tuning "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.92819903 seconds)
  (13/20) tuning "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 0.981993771 seconds)
  (14/20) tuning "MRP{Float64} -> RotationVec{Float64}"...
  done (took 1.048828485 seconds)
  (15/20) tuning "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.034558836 seconds)
  (16/20) tuning "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 0.977115522 seconds)
  (17/20) tuning "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.989426194 seconds)
  (18/20) tuning "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.957211851 seconds)
  (19/20) tuning "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.025434711 seconds)
  (20/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 0.948991906 seconds)
done (took 20.259640811 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.004928715 seconds)
done (took 1.89218859 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.888094343 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.936325836 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.487991034 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.991184463 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.505787756 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.870689028 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.817195551 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.15639835 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.853312072 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.749136127 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.469746283 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.879441496 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.59521168 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.621637173 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.795979696 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.230461454 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.600799165 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.867968712 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.832257426 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.203646534 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.832739133 seconds)
done (took 35.852688626 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.93826109 seconds)
  (2/20) benchmarking "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.411991723 seconds)
  (3/20) benchmarking "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 1.749583434 seconds)
  (4/20) benchmarking "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.208427788 seconds)
  (5/20) benchmarking "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.815372549 seconds)
  (6/20) benchmarking "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.823910219 seconds)
  (7/20) benchmarking "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.53508477 seconds)
  (8/20) benchmarking "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 2.080562083 seconds)
  (9/20) benchmarking "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.131470052 seconds)
  (10/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.230309367 seconds)
  (11/20) benchmarking "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 0.824378577 seconds)
  (12/20) benchmarking "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.135721609 seconds)
  (13/20) benchmarking "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.220496198 seconds)
  (14/20) benchmarking "MRP{Float64} -> RotationVec{Float64}"...
  done (took 2.019822168 seconds)
  (15/20) benchmarking "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.854489425 seconds)
  (16/20) benchmarking "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.52962152 seconds)
  (17/20) benchmarking "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.784218302 seconds)
  (18/20) benchmarking "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.129653555 seconds)
  (19/20) benchmarking "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.428154894 seconds)
  (20/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.811790256 seconds)
done (took 28.412227221 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 9.391 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 70.658 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 48.222 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  25.604 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 48.830 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  38.590 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 60.673 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 67.584 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   14.202 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 64.841 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 65.400 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  28.351 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 48.673 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  33.972 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  26.558 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 49.979 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   14.203 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  28.785 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 63.157 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 52.403 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   20.757 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 49.043 ns

Group: Non-Euler conversions
UnitQuaternion{Float64} -> RotMatrix{3,Float64,9} 8.702 ns
UnitQuaternion{Float64} -> RotationVec{Float64}   42.178 ns
RotMatrix{3,Float64,9} -> RotationVec{Float64}    84.424 ns
UnitQuaternion{Float64} -> MRP{Float64}           2.165 ns
MRP{Float64} -> UnitQuaternion{Float64}           5.842 ns
UnitQuaternion{Float64} -> AngleAxis{Float64}     27.350 ns
RotMatrix{3,Float64,9} -> MRP{Float64}            40.227 ns
MRP{Float64} -> AngleAxis{Float64}                90.250 ns
MRP{Float64} -> RotMatrix{3,Float64,9}            26.703 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}      29.908 ns
AngleAxis{Float64} -> RotationVec{Float64}        2.872 ns
AngleAxis{Float64} -> UnitQuaternion{Float64}     12.477 ns
RotMatrix{3,Float64,9} -> UnitQuaternion{Float64} 36.354 ns
MRP{Float64} -> RotationVec{Float64}              104.851 ns
RotationVec{Float64} -> MRP{Float64}              105.863 ns
AngleAxis{Float64} -> MRP{Float64}                62.329 ns
RotationVec{Float64} -> RotMatrix{3,Float64,9}    71.530 ns
RotationVec{Float64} -> AngleAxis{Float64}        12.208 ns
RotationVec{Float64} -> UnitQuaternion{Float64}   56.477 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}      84.506 ns

    Testing Rotations tests passed 
