Julia Version 1.5.0-DEV.875
Commit f7de6d242f (2020-05-07 14:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.3
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed OrderedCollections ────────── v1.2.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed JSON ──────────────────────── v0.21.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed Compat ────────────────────── v3.9.0
  Installed Tables ────────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Missings ──────────────────── v0.4.3
  Installed StatsBase ─────────────────── v0.32.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataFrames ────────────────── v0.20.2
  Installed DataStructures ────────────── v0.17.15
  Installed MLDataPattern ─────────────── v0.5.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.3
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_Vdk0Qp/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Vdk0Qp/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.3
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9323044313987097
[ Info: 0.8321307849884033
[ Info: 0.5556568817794323
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3319149543593327
mean(cdnet.distances) = 0.43498622454702857
mean(crand.distances) = 0.3279131403565407
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.7858719405594413,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.7578125,"distances_sum":2064.4334568700115}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3935546875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3935546875,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":6.3515625,"distances_sum":1162.9472656111143}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6650390625,"f1":0.7858719405594413,"seconds":4.630535840988159e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":7.7578125,"distances_sum":2064.4334568700115}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9239926739926747,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.7265625,"distances_sum":2835.8647989538313}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9239926739926747,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.7265625,"distances_sum":2835.8647989538313}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453957500832507,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.7265625,"distances_sum":3057.5999734380885}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9599931318681323,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8984375,"distances_sum":3115.1755762691096}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9599931318681323,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8984375,"distances_sum":3115.1755762691096}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9599931318681323,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.8831342458724976e-6,"evaluations":8.8984375,"distances_sum":3115.1755762691096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8515869547119556,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.984375,"distances_sum":2219.859606080688}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5224609375,"f1":0.673142135642136,"seconds":3.2726675271987915e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.1015625,"distances_sum":1456.2194423084306}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7922598235098243,"seconds":3.6172568798065186e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.7109375,"distances_sum":1926.3699813836809}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8515869547119556,"seconds":4.172325134277344e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.984375,"distances_sum":2219.859606080688}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.89092261904762,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.4765625,"distances_sum":2438.0836483864573}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9206449800199807,"seconds":4.859641194343567e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7265625,"distances_sum":2585.8690579507675}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9388679029304033,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.75,"distances_sum":2719.9619568479084}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9258501914751922,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.734375,"distances_sum":2652.8028993446396}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9388679029304033,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.75,"distances_sum":2719.9619568479084}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654819139194146,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2920.9512303739702}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":13,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9404475732600741,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8203125,"distances_sum":2717.8490935383397}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9468463827838833,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7578125,"distances_sum":2786.545552912859}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.945341117216118,"seconds":4.494562745094299e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7734375,"distances_sum":2793.3266922782736}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654819139194146,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2920.9512303739702}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654819139194146,"seconds":4.274770617485046e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8828125,"distances_sum":2920.9512303739702}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41015625, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.41015625,"f1":null,"seconds":3.112480044364929e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":5.921875,"distances_sum":987.3178746784772}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8545111138861148,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.921875,"distances_sum":2181.7856944232967}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8545111138861148,"seconds":3.945082426071167e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.921875,"distances_sum":2181.7856944232967}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9303857600732605,"seconds":4.410743713378906e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.4921875,"distances_sum":2631.176172712666}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9566620879120883,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7578125,"distances_sum":2837.529109810173}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.951739926739927,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8125,"distances_sum":2788.4411417810234}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9566620879120883,"seconds":4.939734935760498e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7578125,"distances_sum":2837.529109810173}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.977552655677656,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":3022.8979548060493}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614812271062276,"seconds":4.738569259643555e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.828125,"distances_sum":2872.6900652361414}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724530677655681,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":2959.6915534838436}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709478021978027,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8984375,"distances_sum":2943.8670930616577}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9599609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977552655677656,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":3022.8979548060493}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9599609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9599609375,"f1":0.977552655677656,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.90625,"distances_sum":3022.8979548060493}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8746857309357318,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.375,"distances_sum":2165.8182586378593}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8746857309357318,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.375,"distances_sum":2165.8182586378593}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8974187271062279,"seconds":4.649162292480469e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.6640625,"distances_sum":2296.600125630934}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9562728937728944,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2777.431561081615}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9562728937728944,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.828125,"distances_sum":2777.431561081615}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731799450549456,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2904.9154208999685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9705185439560442,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2868.072780078655}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9577037545787551,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8671875,"distances_sum":2751.423342365094}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9575778388278394,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8515625,"distances_sum":2776.831798869173}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731799450549456,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2904.9154208999685}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9731799450549456,"seconds":4.814937710762024e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9296875,"distances_sum":2904.9154208999685}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8848568098568104,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5546875,"distances_sum":2285.7364104800636}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.7048012018203735e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.6328125,"distances_sum":946.9225535127}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":3.157183527946472e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.390625,"distances_sum":518.6079845336602}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8848568098568104,"seconds":4.323199391365051e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5546875,"distances_sum":2285.7364104800636}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619848901098905,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2762.723708547963}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619848901098905,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2762.723708547963}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619848901098905,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2762.723708547963}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9619848901098905,"seconds":5.031004548072815e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2762.723708547963}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1533203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1533203125,"f1":null,"seconds":2.0917505025863647e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":4.8671875,"distances_sum":382.77274360278426}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1533203125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1533203125,"f1":null,"seconds":2.0917505025863647e-6,"exhaustive_search_seconds":1.0784715414047241e-6,"evaluations":4.8671875,"distances_sum":382.77274360278426}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.423301339149475e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":6.1875,"distances_sum":453.1256249255329}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2294921875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2294921875,"f1":null,"seconds":2.423301339149475e-6,"exhaustive_search_seconds":1.1324882507324219e-6,"evaluations":6.1875,"distances_sum":453.1256249255329}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":2.7045607566833496e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":5.125,"distances_sum":398.30601073215325}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.189453125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.189453125,"f1":null,"seconds":2.7045607566833496e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":5.125,"distances_sum":398.30601073215325}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.189453125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.189453125,"f1":null,"seconds":2.7045607566833496e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":5.125,"distances_sum":398.30601073215325}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8015017968142976,"seconds":3.295019268989563e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":7.28125,"distances_sum":1524.4889076083664}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.804854000166501,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":7.328125,"distances_sum":1493.9140221006908}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.804854000166501,"seconds":3.427267074584961e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":7.328125,"distances_sum":1493.9140221006908}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9485405219780224,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.6953125,"distances_sum":2291.4170947496527}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.937786172161173,"seconds":3.946945071220398e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.5546875,"distances_sum":2173.4145628536935}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9269459706959712,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.5703125,"distances_sum":2091.9585239666762}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9374484890109898,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.5859375,"distances_sum":2188.3981156348405}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9485405219780224,"seconds":4.367902874946594e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.6953125,"distances_sum":2291.4170947496527}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610176282051286,"seconds":4.3995678424835205e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.84375,"distances_sum":2328.3591294313487}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666895604395609,"seconds":4.71062958240509e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.8671875,"distances_sum":2369.132069769836}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9728994963369967,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.875,"distances_sum":2436.834774617603}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720638736263738,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.90625,"distances_sum":2411.7812263092537}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9645495129870132,"seconds":4.040077328681946e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.8046875,"distances_sum":2389.8657611820813}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9554544413919421,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.796875,"distances_sum":2323.796345911523}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9727907509157511,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.9296875,"distances_sum":2424.043419428622}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9728994963369967,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.875,"distances_sum":2436.834774617603}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9728994963369967,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.1157244443893433e-6,"evaluations":8.875,"distances_sum":2436.834774617603}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8701298701298709,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.8046875,"distances_sum":1880.7220002422118}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8081224331224338,"seconds":3.4943222999572754e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.3828125,"distances_sum":1559.320186907652}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.783203125,"f1":0.8701298701298709,"seconds":3.7178397178649902e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":7.8046875,"distances_sum":1880.7220002422118}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9058784965034972,"seconds":3.777444362640381e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.5078125,"distances_sum":2059.742042891564}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9058784965034972,"seconds":3.777444362640381e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.5078125,"distances_sum":2059.742042891564}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9596986346986353,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.8046875,"distances_sum":2396.3539188154023}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9182806776556782,"seconds":3.905966877937317e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.625,"distances_sum":2167.2807091832765}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9410058691308695,"seconds":4.084780812263489e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.734375,"distances_sum":2300.424336686902}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9513621794871798,"seconds":4.213303327560425e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.84375,"distances_sum":2337.9788583049526}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9596986346986353,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.8046875,"distances_sum":2396.3539188154023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9596986346986353,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.0468065738677979e-6,"evaluations":8.8046875,"distances_sum":2396.3539188154023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8487450049950058,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.0078125,"distances_sum":1805.5472386842569}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":3.037974238395691e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":5.1484375,"distances_sum":453.9559935207977}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8487450049950058,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.0078125,"distances_sum":1805.5472386842569}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9251805486180492,"seconds":4.20399010181427e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.796875,"distances_sum":2231.135430823141}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8915584415584423,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.2265625,"distances_sum":2022.519608981081}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.941884157509158,"seconds":4.088506102561951e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.671875,"distances_sum":2406.9009494808656}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.941884157509158,"seconds":4.088506102561951e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.671875,"distances_sum":2406.9009494808656}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9672103937728941,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.8515625,"distances_sum":2562.462626624099}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604223901098905,"seconds":4.386529326438904e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.859375,"distances_sum":2498.359119013455}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9513653013653022,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.734375,"distances_sum":2469.5183733244744}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672103937728941,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.8515625,"distances_sum":2562.462626624099}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9672103937728941,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.0542571544647217e-6,"evaluations":8.8515625,"distances_sum":2562.462626624099}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8096367174492182,"seconds":3.4496188163757324e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.5546875,"distances_sum":1597.2482649880242}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.812708125208126,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.5234375,"distances_sum":1613.7997548587446}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.812708125208126,"seconds":3.2279640436172485e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":7.5234375,"distances_sum":1613.7997548587446}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9064159798534808,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.375,"distances_sum":2088.898522400988}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9064159798534808,"seconds":3.928318619728088e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.375,"distances_sum":2088.898522400988}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557692307692313,"seconds":4.4405460357666016e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.796875,"distances_sum":2532.08655968178}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9647378663003666,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.875,"distances_sum":2567.512473313612}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619104853479858,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.8671875,"distances_sum":2558.0690574429946}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647378663003666,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.875,"distances_sum":2567.512473313612}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9647378663003666,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.0617077350616455e-6,"evaluations":8.875,"distances_sum":2567.512473313612}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2578125,"f1":null,"seconds":2.7623027563095093e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":6.6640625,"distances_sum":676.1267394060657}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.22265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.22265625,"f1":null,"seconds":2.6561319828033447e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":6.421875,"distances_sum":579.0426775617037}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8559274059274067,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.8828125,"distances_sum":1910.6468646687504}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8559274059274067,"seconds":4.030764102935791e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":7.8828125,"distances_sum":1910.6468646687504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9561043123543126,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8046875,"distances_sum":2662.1349678136235}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9169127747252753,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8125,"distances_sum":2346.1316038295367}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8678810772560781,"seconds":7.707066833972931e-5,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.015625,"distances_sum":2001.5144037698144}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9561043123543126,"seconds":4.796311259269714e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8046875,"distances_sum":2662.1349678136235}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609832875457879,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8828125,"distances_sum":2670.1004853723216}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.9765625,"distances_sum":2817.68682634901}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588598901098906,"seconds":5.757436156272888e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.8984375,"distances_sum":2644.5985910964914}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.9765625,"distances_sum":2817.68682634901}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9819940476190478,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.1473894119262695e-6,"evaluations":8.9765625,"distances_sum":2817.68682634901}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2548828125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2548828125,"f1":null,"seconds":2.7976930141448975e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":5.734375,"distances_sum":617.0397641590081}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2548828125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2548828125,"f1":null,"seconds":2.7976930141448975e-6,"exhaustive_search_seconds":1.0710209608078003e-6,"evaluations":5.734375,"distances_sum":617.0397641590081}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.412109375,"f1":0.5604444166944168,"seconds":3.4943222999572754e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":6.9765625,"distances_sum":680.4047151675979}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7146240911865918,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":7.7890625,"distances_sum":1013.5025544637753}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8659434315684327,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.6640625,"distances_sum":1471.5979735384024}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8659434315684327,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.6640625,"distances_sum":1471.5979735384024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9249401640026647,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.671875,"distances_sum":1767.0199412205397}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8695689726939734,"seconds":5.0533562898635864e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.625,"distances_sum":1495.729252603289}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9249401640026647,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.671875,"distances_sum":1767.0199412205397}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701121794871799,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.9453125,"distances_sum":2049.722255346463}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9313733141858147,"seconds":6.059184670448303e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.734375,"distances_sum":1844.2746390652085}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9516800907425915,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.765625,"distances_sum":1931.9489037780136}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701121794871799,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.9453125,"distances_sum":2049.722255346463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9701121794871799,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":2.021901309490204e-5,"evaluations":8.9453125,"distances_sum":2049.722255346463}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.5390625,"distances_sum":710.2434828436443}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.840122204184705,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.0703125,"distances_sum":1480.3505505805458}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8467012154512161,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.2265625,"distances_sum":1466.3051786154376}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8467012154512161,"seconds":4.770234227180481e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.2265625,"distances_sum":1466.3051786154376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9264454295704302,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.625,"distances_sum":1871.6714423910296}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9310782967032971,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.625,"distances_sum":1886.118465338408}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9367590742590748,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.65625,"distances_sum":1955.211624443611}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524038461538467,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":2005.8734240663985}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9334592490842497,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.671875,"distances_sum":1924.4219251931886}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654990842490845,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2072.057235730206}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8508824508824517,"seconds":5.105510354042053e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.1953125,"distances_sum":1483.9035702070419}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9654990842490845,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.84375,"distances_sum":2072.057235730206}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9702438186813189,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2119.5257614104867}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9719322344322351,"seconds":6.346032023429871e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2093.1213384777107}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977604166666667,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.90625,"distances_sum":2140.3824863021337}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.971039377289378,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8984375,"distances_sum":2097.864917241625}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666494963369967,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.859375,"distances_sum":2077.569324105891}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9814961080586084,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.96875,"distances_sum":2151.134867797085}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9814961080586084,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.96875,"distances_sum":2151.134867797085}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9814961080586084,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.96875,"distances_sum":2151.134867797085}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.171875,"f1":null,"seconds":2.7026981115341187e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.2109375,"distances_sum":283.83215875996484}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.171875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.171875,"f1":null,"seconds":2.7026981115341187e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.2109375,"distances_sum":283.83215875996484}}, n: 9
mean(cfft.distances) = 0.8446057792648909
mean(cdnet.distances) = 0.5299124137106145
mean(crand.distances) = 0.721531904920661
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9466666666666667
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8577777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9488888888888889
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8688888888888888
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8422222222222223
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.92
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8688888888888889
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9177777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8711111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333332
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 2, 3, 2, 3, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.625467546582222] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.34651639846128385] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34651639846128385, 0.3352839286598536] ***
*** starting iteration: 2; err: [Inf, 0.34651639846128385, 0.3352839286598536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34651639846128385, 0.3352839286598536, 0.3334205842048332] ***
*** starting iteration: 3; err: [Inf, 0.34651639846128385, 0.3352839286598536, 0.3334205842048332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34651639846128385, 0.3352839286598536, 0.3334205842048332, 0.3329431270556832] ***
*** finished computation of 3 references, err: [Inf, 0.34651639846128385, 0.3352839286598536, 0.3334205842048332, 0.3329431270556832] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 129, 0]]
** centroid: 1, normalized-entropy: 0.9874750082985965, [(1, 99), (2, 129)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [84, 118, 19]]
** centroid: 2, normalized-entropy: 0.8316547717953694, [(1, 84), (2, 118), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [216, 1, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5266981043376733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5266981043376733, 0.32850293386546053] ***
*** starting iteration: 2; err: [Inf, 0.5266981043376733, 0.32850293386546053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307] ***
*** starting iteration: 3; err: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307, 0.31096474965964477] ***
*** starting iteration: 4; err: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307, 0.31096474965964477] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307, 0.31096474965964477, 0.3098638946472526] ***
*** starting iteration: 5; err: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307, 0.31096474965964477, 0.3098638946472526] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307, 0.31096474965964477, 0.3098638946472526, 0.30949024504226547] ***
*** finished computation of 3 references, err: [Inf, 0.5266981043376733, 0.32850293386546053, 0.313599851253307, 0.31096474965964477, 0.3098638946472526, 0.30949024504226547] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [153, 36, 0]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(1, 153), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [252, 14, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 252), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 184, 27]]
** centroid: 3, normalized-entropy: 0.5518225893095359, [(2, 184), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35173053462533044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35173053462533044, 0.30579193994805015] ***
*** starting iteration: 2; err: [Inf, 0.35173053462533044, 0.30579193994805015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35173053462533044, 0.30579193994805015, 0.30102063125108314] ***
*** starting iteration: 3; err: [Inf, 0.35173053462533044, 0.30579193994805015, 0.30102063125108314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35173053462533044, 0.30579193994805015, 0.30102063125108314, 0.3004533100253281] ***
*** finished computation of 3 references, err: [Inf, 0.35173053462533044, 0.30579193994805015, 0.30102063125108314, 0.3004533100253281] ***
*** center 1: selecting labels [1] (freq >= 2) [from [256, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [135, 41, 0]]
** centroid: 2, normalized-entropy: 0.7831262902781859, [(1, 135), (2, 41)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [4, 205, 26]]
** centroid: 3, normalized-entropy: 0.3932615475487781, [(1, 4), (2, 205), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19232984400262032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232984400262032, 0.1608120724572814] ***
*** starting iteration: 2; err: [Inf, 0.19232984400262032, 0.1608120724572814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232984400262032, 0.1608120724572814, 0.15433647473239237] ***
*** starting iteration: 3; err: [Inf, 0.19232984400262032, 0.1608120724572814, 0.15433647473239237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19232984400262032, 0.1608120724572814, 0.15433647473239237, 0.14992452686996544] ***
*** finished computation of 7 references, err: [Inf, 0.19232984400262032, 0.1608120724572814, 0.15433647473239237, 0.14992452686996544] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 31, 0]]
** centroid: 1, normalized-entropy: 0.8860318997477157, [(1, 71), (2, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [8, 71, 0]]
** centroid: 3, normalized-entropy: 0.47299536229314826, [(1, 8), (2, 71)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 44, 0]]
** centroid: 4, normalized-entropy: 0.9643986196033757, [(1, 69), (2, 44)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 102, 19]]
** centroid: 5, normalized-entropy: 0.6271441658983906, [(2, 102), (3, 19)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17787355225326595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787355225326595, 0.15050530095055498] ***
*** starting iteration: 2; err: [Inf, 0.17787355225326595, 0.15050530095055498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787355225326595, 0.15050530095055498, 0.1485078547909476] ***
*** starting iteration: 3; err: [Inf, 0.17787355225326595, 0.15050530095055498, 0.1485078547909476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17787355225326595, 0.15050530095055498, 0.1485078547909476, 0.14789728220619228] ***
*** finished computation of 7 references, err: [Inf, 0.17787355225326595, 0.15050530095055498, 0.1485078547909476, 0.14789728220619228] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 80, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [98, 4, 0]]
** centroid: 2, normalized-entropy: 0.23868451135100152, [(1, 98), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [8, 86, 0]]
** centroid: 3, normalized-entropy: 0.4199210973757179, [(1, 8), (2, 86)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [96, 15, 0]]
** centroid: 4, normalized-entropy: 0.5713549744279549, [(1, 96), (2, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 44, 27]]
** centroid: 6, normalized-entropy: 0.9582407282588409, [(2, 44), (3, 27)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [78, 5, 0]]
** centroid: 7, normalized-entropy: 0.32840071392894665, [(1, 78), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21531488922476277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21531488922476277, 0.17289845163639317] ***
*** starting iteration: 2; err: [Inf, 0.21531488922476277, 0.17289845163639317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21531488922476277, 0.17289845163639317, 0.16046764449505457] ***
*** starting iteration: 3; err: [Inf, 0.21531488922476277, 0.17289845163639317, 0.16046764449505457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21531488922476277, 0.17289845163639317, 0.16046764449505457, 0.15488436736405242] ***
*** finished computation of 7 references, err: [Inf, 0.21531488922476277, 0.17289845163639317, 0.16046764449505457, 0.15488436736405242] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [26, 99, 0]]
** centroid: 1, normalized-entropy: 0.737642380185689, [(1, 26), (2, 99)]
*** center 2: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 93, 26]]
** centroid: 3, normalized-entropy: 0.7573958968817643, [(2, 93), (3, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 52, 0]]
** centroid: 4, normalized-entropy: 0.9971293325151022, [(1, 59), (2, 52)]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [90, 2, 0]]
** centroid: 6, normalized-entropy: 0.1510969705171136, [(1, 90), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3953593825255786] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3953593825255786, 0.316614203905972] ***
*** starting iteration: 2; err: [Inf, 0.3953593825255786, 0.316614203905972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3953593825255786, 0.316614203905972, 0.30485201267911505] ***
*** starting iteration: 3; err: [Inf, 0.3953593825255786, 0.316614203905972, 0.30485201267911505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3953593825255786, 0.316614203905972, 0.30485201267911505, 0.30220843235019584] ***
*** finished computation of 3 references, err: [Inf, 0.3953593825255786, 0.316614203905972, 0.30485201267911505, 0.30220843235019584] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [159, 68, 0]]
** centroid: 1, normalized-entropy: 0.8807517335674101, [(1, 159), (2, 68)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [240, 14, 0]]
** centroid: 2, normalized-entropy: 0.30775275033574495, [(1, 240), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 166, 19]]
** centroid: 3, normalized-entropy: 0.4775048747918926, [(2, 166), (3, 19)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5153443965938004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5153443965938004, 0.3377294141626072] ***
*** starting iteration: 2; err: [Inf, 0.5153443965938004, 0.3377294141626072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5153443965938004, 0.3377294141626072, 0.332847972735595] ***
*** starting iteration: 3; err: [Inf, 0.5153443965938004, 0.3377294141626072, 0.332847972735595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5153443965938004, 0.3377294141626072, 0.332847972735595, 0.3315354922752844] ***
*** finished computation of 3 references, err: [Inf, 0.5153443965938004, 0.3377294141626072, 0.332847972735595, 0.3315354922752844] ***
*** center 1: selecting labels [1] (freq >= 2) [from [199, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [71, 146, 27]]
** centroid: 2, normalized-entropy: 0.8284095167992079, [(1, 71), (2, 146), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [136, 88, 0]]
** centroid: 3, normalized-entropy: 0.9666186325481027, [(1, 136), (2, 88)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.48014570197936657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48014570197936657, 0.3244032214627485] ***
*** starting iteration: 2; err: [Inf, 0.48014570197936657, 0.3244032214627485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48014570197936657, 0.3244032214627485, 0.30770575686634033] ***
*** starting iteration: 3; err: [Inf, 0.48014570197936657, 0.3244032214627485, 0.30770575686634033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48014570197936657, 0.3244032214627485, 0.30770575686634033, 0.3017306105880209] ***
*** finished computation of 3 references, err: [Inf, 0.48014570197936657, 0.3244032214627485, 0.30770575686634033, 0.3017306105880209] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 184, 26]]
** centroid: 1, normalized-entropy: 0.5402129815415571, [(2, 184), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [280, 11, 0]]
** centroid: 2, normalized-entropy: 0.2321159183392088, [(1, 280), (2, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 51, 0]]
** centroid: 3, normalized-entropy: 0.8921212805771683, [(1, 114), (2, 51)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3823712254962374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3823712254962374, 0.23926741733303716] ***
*** starting iteration: 2; err: [Inf, 0.3823712254962374, 0.23926741733303716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3823712254962374, 0.23926741733303716, 0.23811949831133392] ***
*** starting iteration: 3; err: [Inf, 0.3823712254962374, 0.23926741733303716, 0.23811949831133392] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3823712254962374, 0.23926741733303716, 0.23811949831133392, 0.2377491435147766] ***
*** finished computation of 3 references, err: [Inf, 0.3823712254962374, 0.23926741733303716, 0.23811949831133392, 0.2377491435147766] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 168, 27]]
** centroid: 1, normalized-entropy: 0.8021863344122641, [(1, 75), (2, 168), (3, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [226, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [105, 66, 0]]
** centroid: 3, normalized-entropy: 0.9621461334087003, [(1, 105), (2, 66)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.381094546737275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.381094546737275, 0.24156664743058864] ***
*** starting iteration: 2; err: [Inf, 0.381094546737275, 0.24156664743058864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.381094546737275, 0.24156664743058864, 0.23976654248839913] ***
*** starting iteration: 3; err: [Inf, 0.381094546737275, 0.24156664743058864, 0.23976654248839913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.381094546737275, 0.24156664743058864, 0.23976654248839913, 0.23959306096923405] ***
*** finished computation of 3 references, err: [Inf, 0.381094546737275, 0.24156664743058864, 0.23976654248839913, 0.23959306096923405] ***
*** center 1: selecting labels [1] (freq >= 1) [from [249, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [23, 180, 26]]
** centroid: 2, normalized-entropy: 0.6072099700776094, [(1, 23), (2, 180), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [123, 66, 0]]
** centroid: 3, normalized-entropy: 0.9333572600179806, [(1, 123), (2, 66)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3058236319845816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058236319845816, 0.24243157170363352] ***
*** starting iteration: 2; err: [Inf, 0.3058236319845816, 0.24243157170363352] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058236319845816, 0.24243157170363352, 0.23598613052324088] ***
*** starting iteration: 3; err: [Inf, 0.3058236319845816, 0.24243157170363352, 0.23598613052324088] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058236319845816, 0.24243157170363352, 0.23598613052324088, 0.23474863958307304] ***
*** starting iteration: 4; err: [Inf, 0.3058236319845816, 0.24243157170363352, 0.23598613052324088, 0.23474863958307304] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058236319845816, 0.24243157170363352, 0.23598613052324088, 0.23474863958307304, 0.2343148461182241] ***
*** finished computation of 3 references, err: [Inf, 0.3058236319845816, 0.24243157170363352, 0.23598613052324088, 0.23474863958307304, 0.2343148461182241] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [78, 165, 19]]
** centroid: 1, normalized-entropy: 0.7666077419553265, [(1, 78), (2, 165), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [196, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [125, 83, 0]]
** centroid: 3, normalized-entropy: 0.9703853509076517, [(1, 125), (2, 83)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35169372473867133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35169372473867133, 0.23710349458374497] ***
*** starting iteration: 2; err: [Inf, 0.35169372473867133, 0.23710349458374497] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35169372473867133, 0.23710349458374497, 0.23520371659255324] ***
*** starting iteration: 3; err: [Inf, 0.35169372473867133, 0.23710349458374497, 0.23520371659255324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35169372473867133, 0.23710349458374497, 0.23520371659255324, 0.23496537272678059] ***
*** finished computation of 3 references, err: [Inf, 0.35169372473867133, 0.23710349458374497, 0.23520371659255324, 0.23496537272678059] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [77, 158, 27]]
** centroid: 1, normalized-entropy: 0.818366321413519, [(1, 77), (2, 158), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [116, 76, 0]]
** centroid: 2, normalized-entropy: 0.968461008760162, [(1, 116), (2, 76)]
*** center 3: selecting labels [1] (freq >= 2) [from [213, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30354005353863184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30354005353863184, 0.23952196723875077] ***
*** starting iteration: 2; err: [Inf, 0.30354005353863184, 0.23952196723875077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30354005353863184, 0.23952196723875077, 0.23296772190921197] ***
*** starting iteration: 3; err: [Inf, 0.30354005353863184, 0.23952196723875077, 0.23296772190921197] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30354005353863184, 0.23952196723875077, 0.23296772190921197, 0.23267648891424356] ***
*** finished computation of 3 references, err: [Inf, 0.30354005353863184, 0.23952196723875077, 0.23296772190921197, 0.23267648891424356] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [80, 190, 26]]
** centroid: 1, normalized-entropy: 0.7753614049081674, [(1, 80), (2, 190), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [106, 56, 0]]
** centroid: 3, normalized-entropy: 0.9301497323974339, [(1, 106), (2, 56)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23465786253272727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23465786253272727, 0.1802989247810185] ***
*** finished computation of 7 references, err: [Inf, 0.23465786253272727, 0.1802989247810185] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [43, 58, 0]]
** centroid: 2, normalized-entropy: 0.9840304711717017, [(1, 43), (2, 58)]
*** center 3: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [142, 10, 0]]
** centroid: 4, normalized-entropy: 0.35001059292688486, [(1, 142), (2, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [52, 27, 0]]
** centroid: 5, normalized-entropy: 0.9265044456232997, [(1, 52), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [80, 33, 0]]
** centroid: 6, normalized-entropy: 0.8713360108238786, [(1, 80), (2, 33)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 69, 19]]
** centroid: 7, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19915122682552622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19915122682552622, 0.15610260522409133] ***
*** finished computation of 7 references, err: [Inf, 0.19915122682552622, 0.15610260522409133] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [8, 38, 0]]
** centroid: 1, normalized-entropy: 0.6665783579949205, [(1, 8), (2, 38)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 27]]
** centroid: 2, normalized-entropy: 0.9018043446575508, [(2, 58), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [2, 92, 0]]
** centroid: 3, normalized-entropy: 0.14854949043034832, [(1, 2), (2, 92)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [110, 38, 0]]
** centroid: 4, normalized-entropy: 0.8218127305034848, [(1, 110), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [87, 8, 0]]
** centroid: 5, normalized-entropy: 0.4168441963431652, [(1, 87), (2, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22075735709058872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22075735709058872, 0.17532751220505338] ***
*** finished computation of 7 references, err: [Inf, 0.22075735709058872, 0.17532751220505338] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [21, 67, 0]]
** centroid: 1, normalized-entropy: 0.7927652363756529, [(1, 21), (2, 67)]
*** center 2: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [128, 22, 0]]
** centroid: 5, normalized-entropy: 0.6014353864290773, [(1, 128), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 156, 26]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(2, 156), (3, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24760532384534162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24760532384534162, 0.20705425493242974] ***
*** starting iteration: 2; err: [Inf, 0.24760532384534162, 0.20705425493242974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928] ***
*** starting iteration: 3; err: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928, 0.1910638723637092] ***
*** starting iteration: 4; err: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928, 0.1910638723637092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928, 0.1910638723637092, 0.18986315133718512] ***
*** starting iteration: 5; err: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928, 0.1910638723637092, 0.18986315133718512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928, 0.1910638723637092, 0.18986315133718512, 0.18976834804370618] ***
*** finished computation of 7 references, err: [Inf, 0.24760532384534162, 0.20705425493242974, 0.19531741715385928, 0.1910638723637092, 0.18986315133718512, 0.18976834804370618] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 2, 0]]
** centroid: 1, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 50, 0]]
** centroid: 2, normalized-entropy: 0.9807983646944296, [(1, 36), (2, 50)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 71, 19]]
** centroid: 3, normalized-entropy: 0.7436012269934466, [(2, 71), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [21, 60, 0]]
** centroid: 4, normalized-entropy: 0.8256265261578954, [(1, 21), (2, 60)]
*** center 5: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 65, 0]]
** centroid: 7, normalized-entropy: 0.9836116360305414, [(1, 48), (2, 65)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3201499463364795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845] ***
*** starting iteration: 2; err: [Inf, 0.3201499463364795, 0.24626817957831845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956] ***
*** starting iteration: 3; err: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222] ***
*** starting iteration: 4; err: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757] ***
*** starting iteration: 5; err: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757, 0.19348815458406438] ***
*** starting iteration: 6; err: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757, 0.19348815458406438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757, 0.19348815458406438, 0.1924004161903548] ***
*** starting iteration: 7; err: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757, 0.19348815458406438, 0.1924004161903548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757, 0.19348815458406438, 0.1924004161903548, 0.1916311355922064] ***
*** finished computation of 7 references, err: [Inf, 0.3201499463364795, 0.24626817957831845, 0.2176696496770956, 0.20316196651780222, 0.1960769821491757, 0.19348815458406438, 0.1924004161903548, 0.1916311355922064] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 72, 27]]
** centroid: 1, normalized-entropy: 0.8453509366224364, [(2, 72), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 23, 0]]
** centroid: 2, normalized-entropy: 0.8243633538094403, [(1, 66), (2, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [88, 45, 0]]
** centroid: 4, normalized-entropy: 0.9232270086221106, [(1, 88), (2, 45)]
*** center 5: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [12, 94, 0]]
** centroid: 6, normalized-entropy: 0.5095157180881823, [(1, 12), (2, 94)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2214784383818485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701] ***
*** starting iteration: 2; err: [Inf, 0.2214784383818485, 0.1990528198039701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595] ***
*** starting iteration: 3; err: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756] ***
*** starting iteration: 4; err: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453] ***
*** starting iteration: 5; err: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453, 0.19020077339729582] ***
*** starting iteration: 6; err: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453, 0.19020077339729582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453, 0.19020077339729582, 0.1891870807180519] ***
*** starting iteration: 7; err: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453, 0.19020077339729582, 0.1891870807180519] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453, 0.19020077339729582, 0.1891870807180519, 0.1887238541732485] ***
*** finished computation of 7 references, err: [Inf, 0.2214784383818485, 0.1990528198039701, 0.19595572977107595, 0.19370640122828756, 0.19154408941327453, 0.19020077339729582, 0.1891870807180519, 0.1887238541732485] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [86, 13, 0]]
** centroid: 2, normalized-entropy: 0.5610284863400681, [(1, 86), (2, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [14, 91, 0]]
** centroid: 3, normalized-entropy: 0.5665095065529052, [(1, 14), (2, 91)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 75, 26]]
** centroid: 4, normalized-entropy: 0.8228368841492258, [(2, 75), (3, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [44, 51, 0]]
** centroid: 6, normalized-entropy: 0.996079990851081, [(1, 44), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [67, 16, 0]]
** centroid: 7, normalized-entropy: 0.7072324944713736, [(1, 67), (2, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2690061983441257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2690061983441257, 0.23015836019882815] ***
*** starting iteration: 2; err: [Inf, 0.2690061983441257, 0.23015836019882815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2690061983441257, 0.23015836019882815, 0.21949026835858598] ***
*** starting iteration: 3; err: [Inf, 0.2690061983441257, 0.23015836019882815, 0.21949026835858598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2690061983441257, 0.23015836019882815, 0.21949026835858598, 0.21336377713711815] ***
*** finished computation of 7 references, err: [Inf, 0.2690061983441257, 0.23015836019882815, 0.21949026835858598, 0.21336377713711815] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [28, 86, 14]]
** centroid: 1, normalized-entropy: 0.7661474852445181, [(1, 28), (2, 86), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [96, 11, 0]]
** centroid: 3, normalized-entropy: 0.4778207445858079, [(1, 96), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 25, 0]]
** centroid: 4, normalized-entropy: 0.9315627684809641, [(1, 47), (2, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 6: selecting labels [1, 2, 3] (freq >= 2) [from [4, 126, 5]]
** centroid: 6, normalized-entropy: 0.26463154311419274, [(1, 4), (2, 126), (3, 5)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31518968145853127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31518968145853127, 0.21481593851086642] ***
*** starting iteration: 2; err: [Inf, 0.31518968145853127, 0.21481593851086642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31518968145853127, 0.21481593851086642, 0.20319972265193398] ***
*** starting iteration: 3; err: [Inf, 0.31518968145853127, 0.21481593851086642, 0.20319972265193398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31518968145853127, 0.21481593851086642, 0.20319972265193398, 0.1968165525588496] ***
*** finished computation of 7 references, err: [Inf, 0.31518968145853127, 0.21481593851086642, 0.20319972265193398, 0.1968165525588496] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 27]]
** centroid: 2, normalized-entropy: 0.8651214227512075, [(2, 67), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 60, 0]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(1, 3), (2, 60)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [3, 84, 0]]
** centroid: 4, normalized-entropy: 0.21639693245126485, [(1, 3), (2, 84)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [79, 22, 0]]
** centroid: 5, normalized-entropy: 0.756170148929897, [(1, 79), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [115, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24961586187648094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24961586187648094, 0.20313327000064516] ***
*** starting iteration: 2; err: [Inf, 0.24961586187648094, 0.20313327000064516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24961586187648094, 0.20313327000064516, 0.1973154587144761] ***
*** starting iteration: 3; err: [Inf, 0.24961586187648094, 0.20313327000064516, 0.1973154587144761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24961586187648094, 0.20313327000064516, 0.1973154587144761, 0.19587325417426885] ***
*** finished computation of 7 references, err: [Inf, 0.24961586187648094, 0.20313327000064516, 0.1973154587144761, 0.19587325417426885] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 107, 0]]
** centroid: 1, normalized-entropy: 0.22381255513458592, [(1, 4), (2, 107)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 40, 0]]
** centroid: 2, normalized-entropy: 0.9995256892936492, [(1, 38), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 67, 26]]
** centroid: 3, normalized-entropy: 0.8548640967818041, [(2, 67), (3, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 28, 0]]
** centroid: 5, normalized-entropy: 0.8184033299219708, [(1, 82), (2, 28)]
*** center 6: selecting labels [1] (freq >= 2) [from [137, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 3, 0]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(1, 57), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30139779543025874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30139779543025874, 0.24492795861468794] ***
*** starting iteration: 2; err: [Inf, 0.30139779543025874, 0.24492795861468794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30139779543025874, 0.24492795861468794, 0.23653290796655793] ***
*** starting iteration: 3; err: [Inf, 0.30139779543025874, 0.24492795861468794, 0.23653290796655793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30139779543025874, 0.24492795861468794, 0.23653290796655793, 0.23492627443225533] ***
*** starting iteration: 4; err: [Inf, 0.30139779543025874, 0.24492795861468794, 0.23653290796655793, 0.23492627443225533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30139779543025874, 0.24492795861468794, 0.23653290796655793, 0.23492627443225533, 0.23431367436339995] ***
*** finished computation of 3 references, err: [Inf, 0.30139779543025874, 0.24492795861468794, 0.23653290796655793, 0.23492627443225533, 0.23431367436339995] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [79, 165, 19]]
** centroid: 1, normalized-entropy: 0.7678708422651545, [(1, 79), (2, 165), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [125, 83, 0]]
** centroid: 3, normalized-entropy: 0.9703853509076517, [(1, 125), (2, 83)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 10)
[0.9320008631385877, 0.9290098481715248, 0.9139918361475248, 0.90399681118244, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.3, 1) => 0.9320008631385877
finished with 10
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 10)
[0.9320008631385877, 0.9290098481715248, 0.9139918361475248, 0.90399681118244, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.3, 1) => 0.9320008631385877
finished with 10
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 10)
[0.9320008631385877, 0.9290098481715248, 0.9139918361475248, 0.90399681118244, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.3, 1) => 0.9320008631385877
finished with 12
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.22375328761704444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664] ***
*** starting iteration: 2; err: [Inf, 0.22375328761704444, 0.20649105209651664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673] ***
*** starting iteration: 3; err: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658] ***
*** starting iteration: 4; err: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322] ***
*** starting iteration: 5; err: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322, 0.1879614297742466] ***
*** starting iteration: 6; err: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322, 0.1879614297742466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322, 0.1879614297742466, 0.1869407818972919] ***
*** starting iteration: 7; err: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322, 0.1879614297742466, 0.1869407818972919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322, 0.1879614297742466, 0.1869407818972919, 0.186548717633203] ***
*** finished computation of 7 references, err: [Inf, 0.22375328761704444, 0.20649105209651664, 0.20083456605640673, 0.19563133757723658, 0.19006427080166322, 0.1879614297742466, 0.1869407818972919, 0.186548717633203] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 39, 0]]
** centroid: 1, normalized-entropy: 0.9811522341999134, [(1, 54), (2, 39)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [42, 70, 0]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(1, 42), (2, 70)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [67, 42, 0]]
** centroid: 5, normalized-entropy: 0.9617136136083148, [(1, 67), (2, 42)]
*** center 6: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 97, 19]]
** centroid: 7, normalized-entropy: 0.6433071292001625, [(2, 97), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25232734854823197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25232734854823197, 0.2051514850990816] ***
*** starting iteration: 2; err: [Inf, 0.25232734854823197, 0.2051514850990816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25232734854823197, 0.2051514850990816, 0.19739090890317842] ***
*** starting iteration: 3; err: [Inf, 0.25232734854823197, 0.2051514850990816, 0.19739090890317842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25232734854823197, 0.2051514850990816, 0.19739090890317842, 0.19450276987306003] ***
*** starting iteration: 4; err: [Inf, 0.25232734854823197, 0.2051514850990816, 0.19739090890317842, 0.19450276987306003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25232734854823197, 0.2051514850990816, 0.19739090890317842, 0.19450276987306003, 0.19355200922236718] ***
*** finished computation of 7 references, err: [Inf, 0.25232734854823197, 0.2051514850990816, 0.19739090890317842, 0.19450276987306003, 0.19355200922236718] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 23, 0]]
** centroid: 3, normalized-entropy: 0.7820392866349247, [(1, 76), (2, 23)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 103, 27]]
** centroid: 4, normalized-entropy: 0.7370484525801073, [(2, 103), (3, 27)]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [66, 39, 0]]
** centroid: 6, normalized-entropy: 0.9517626756348312, [(1, 66), (2, 39)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 69, 0]]
** centroid: 7, normalized-entropy: 0.8849636363831529, [(1, 30), (2, 69)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2422469802517751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192] ***
*** starting iteration: 2; err: [Inf, 0.2422469802517751, 0.21343732645492192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307] ***
*** starting iteration: 3; err: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825] ***
*** starting iteration: 4; err: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774] ***
*** starting iteration: 5; err: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774, 0.18974181722760244] ***
*** starting iteration: 6; err: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774, 0.18974181722760244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774, 0.18974181722760244, 0.18758952662326406] ***
*** starting iteration: 7; err: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774, 0.18974181722760244, 0.18758952662326406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774, 0.18974181722760244, 0.18758952662326406, 0.1867924063400864] ***
*** finished computation of 7 references, err: [Inf, 0.2422469802517751, 0.21343732645492192, 0.2029636432954307, 0.1957787141675825, 0.19245446227613774, 0.18974181722760244, 0.18758952662326406, 0.1867924063400864] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 70, 0]]
** centroid: 2, normalized-entropy: 0.9357110512652843, [(1, 38), (2, 70)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 71, 26]]
** centroid: 3, normalized-entropy: 0.8386398715015523, [(2, 71), (3, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [77, 39, 0]]
** centroid: 5, normalized-entropy: 0.9211426316005454, [(1, 77), (2, 39)]
*** center 6: selecting labels [1] (freq >= 2) [from [118, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 66, 0]]
** centroid: 7, normalized-entropy: 0.1914332548141934, [(1, 2), (2, 66)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23678240161845335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557] ***
*** starting iteration: 2; err: [Inf, 0.23678240161845335, 0.16911927528690557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952] ***
*** starting iteration: 3; err: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064] ***
*** starting iteration: 4; err: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944] ***
*** starting iteration: 5; err: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944, 0.14823010346401963] ***
*** starting iteration: 6; err: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944, 0.14823010346401963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944, 0.14823010346401963, 0.14702939750296665] ***
*** starting iteration: 7; err: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944, 0.14823010346401963, 0.14702939750296665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944, 0.14823010346401963, 0.14702939750296665, 0.14614647827964197] ***
*** finished computation of 7 references, err: [Inf, 0.23678240161845335, 0.16911927528690557, 0.15545642635345952, 0.15190672504159064, 0.1495838965073944, 0.14823010346401963, 0.14702939750296665, 0.14614647827964197] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 70, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 10), (2, 70)]
*** center 2: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [33, 65, 0]]
** centroid: 3, normalized-entropy: 0.9216597034450192, [(1, 33), (2, 65)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 78, 19]]
** centroid: 4, normalized-entropy: 0.7136036068604937, [(2, 78), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [87, 34, 0]]
** centroid: 5, normalized-entropy: 0.8567986030485539, [(1, 87), (2, 34)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18306837597306164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984] ***
*** starting iteration: 2; err: [Inf, 0.18306837597306164, 0.16064782620503984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598] ***
*** starting iteration: 3; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953] ***
*** starting iteration: 4; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568] ***
*** starting iteration: 5; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403] ***
*** starting iteration: 6; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963] ***
*** starting iteration: 7; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963, 0.1495227048193095] ***
*** starting iteration: 8; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963, 0.1495227048193095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963, 0.1495227048193095, 0.1482254001249125] ***
*** starting iteration: 9; err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963, 0.1495227048193095, 0.1482254001249125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963, 0.1495227048193095, 0.1482254001249125, 0.14727910026953997] ***
*** finished computation of 7 references, err: [Inf, 0.18306837597306164, 0.16064782620503984, 0.15876792053408598, 0.15763191874536953, 0.15568982386288568, 0.1540625900982403, 0.15136056785461963, 0.1495227048193095, 0.1482254001249125, 0.14727910026953997] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 35, 0]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(1, 49), (2, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [28, 75, 0]]
** centroid: 3, normalized-entropy: 0.844099171796772, [(1, 28), (2, 75)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 85, 27]]
** centroid: 5, normalized-entropy: 0.7968174923244049, [(2, 85), (3, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [69, 39, 0]]
** centroid: 7, normalized-entropy: 0.943601631299382, [(1, 69), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22734145035288636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255] ***
*** starting iteration: 2; err: [Inf, 0.22734145035288636, 0.1768208293089255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081] ***
*** starting iteration: 3; err: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958] ***
*** starting iteration: 4; err: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526] ***
*** starting iteration: 5; err: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526, 0.14705690975556487] ***
*** starting iteration: 6; err: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526, 0.14705690975556487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526, 0.14705690975556487, 0.14598520289522887] ***
*** starting iteration: 7; err: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526, 0.14705690975556487, 0.14598520289522887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526, 0.14705690975556487, 0.14598520289522887, 0.14559453914034134] ***
*** finished computation of 7 references, err: [Inf, 0.22734145035288636, 0.1768208293089255, 0.15953532605316081, 0.15292842614127958, 0.14900964850523526, 0.14705690975556487, 0.14598520289522887, 0.14559453914034134] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [96, 14, 0]]
** centroid: 1, normalized-entropy: 0.54991090463341, [(1, 96), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 47, 0]]
** centroid: 2, normalized-entropy: 0.9981592324817737, [(1, 52), (2, 47)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 26]]
** centroid: 3, normalized-entropy: 0.9352691398683568, [(2, 48), (3, 26)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 71, 0]]
** centroid: 5, normalized-entropy: 0.2447650820208971, [(1, 3), (2, 71)]
*** center 6: selecting labels [1] (freq >= 2) [from [150, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 12)
[0.9620009230787674, 0.9359868850886816, 0.9320008631385877, 0.9290098481715248, 0.9139918361475248, 0.90399681118244, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9620009230787674
finished with 12
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9620009230787674, 0.9359868850886816, 0.9320008631385877, 0.9290098481715248, 0.9139918361475248, 0.90399681118244, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9620009230787674
finished with 14
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.21316962009267854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21316962009267854, 0.1693253044917195] ***
*** finished computation of 7 references, err: [Inf, 0.21316962009267854, 0.1693253044917195] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 105, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [116, 32, 0]]
** centroid: 4, normalized-entropy: 0.7531979910695015, [(1, 116), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 53, 0]]
** centroid: 5, normalized-entropy: 0.951154114669856, [(1, 90), (2, 53)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 49, 2]]
** centroid: 6, normalized-entropy: 0.23868451135100152, [(2, 49), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 9, 17]]
** centroid: 7, normalized-entropy: 0.9305861291319927, [(2, 9), (3, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20336480592929015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20336480592929015, 0.1726324985465635] ***
*** finished computation of 7 references, err: [Inf, 0.20336480592929015, 0.1726324985465635] ***
*** center 1: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [90, 49, 0]]
** centroid: 2, normalized-entropy: 0.9362967487572058, [(1, 90), (2, 49)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [12, 159, 27]]
** centroid: 3, normalized-entropy: 0.5623008741107688, [(1, 12), (2, 159), (3, 27)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 26, 0]]
** centroid: 4, normalized-entropy: 0.9871377743721862, [(1, 34), (2, 26)]
*** center 5: selecting labels [1] (freq >= 1) [from [37, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.17502168027860024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17502168027860024, 0.15228687064942795] ***
*** finished computation of 7 references, err: [Inf, 0.17502168027860024, 0.15228687064942795] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [32, 77, 0]]
** centroid: 1, normalized-entropy: 0.8732984198823629, [(1, 32), (2, 77)]
*** center 2: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [6, 63, 0]]
** centroid: 3, normalized-entropy: 0.42622865699814483, [(1, 6), (2, 63)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 70, 26]]
** centroid: 4, normalized-entropy: 0.842657877202239, [(2, 70), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 36, 0]]
** centroid: 5, normalized-entropy: 0.9213796449361407, [(1, 71), (2, 36)]
*** center 6: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3281196273367589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3281196273367589, 0.21763460159122766] ***
*** finished computation of 7 references, err: [Inf, 0.3281196273367589, 0.21763460159122766] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 36, 0]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 72), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [157, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [83, 46, 0]]
** centroid: 3, normalized-entropy: 0.9398154509238948, [(1, 83), (2, 46)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 97, 19]]
** centroid: 6, normalized-entropy: 0.6433071292001625, [(2, 97), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [33, 11, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 33), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3250642271148323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3250642271148323, 0.24025460907482896] ***
*** finished computation of 7 references, err: [Inf, 0.3250642271148323, 0.24025460907482896] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 3, 0]]
** centroid: 1, normalized-entropy: 0.1792560669283214, [(1, 108), (2, 3)]
*** center 2: selecting labels [1] (freq >= 1) [from [136, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [81, 99, 0]]
** centroid: 5, normalized-entropy: 0.9927744539878083, [(1, 81), (2, 99)]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [1, 103, 22]]
** centroid: 6, normalized-entropy: 0.4622823328482025, [(1, 1), (2, 103), (3, 22)]
*** center 7: selecting labels [1, 2, 3] (freq >= 1) [from [10, 29, 5]]
** centroid: 7, normalized-entropy: 0.7815587967485825, [(1, 10), (2, 29), (3, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24252512447558333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24252512447558333, 0.20920997472393368] ***
*** finished computation of 7 references, err: [Inf, 0.24252512447558333, 0.20920997472393368] ***
*** center 1: selecting labels [1] (freq >= 1) [from [134, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [94, 26, 0]]
** centroid: 2, normalized-entropy: 0.7540340561971327, [(1, 94), (2, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 80, 26]]
** centroid: 3, normalized-entropy: 0.8037159237834126, [(2, 80), (3, 26)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 23, 0]]
** centroid: 5, normalized-entropy: 0.9568886656798214, [(1, 14), (2, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [70, 57, 0]]
** centroid: 7, normalized-entropy: 0.9924284506025758, [(1, 70), (2, 57)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9620009230787674, 0.9469919020817225, 0.9359868850886816, 0.9320008631385877, 0.9290098481715248, 0.9270108431785079, 0.9139918361475248, 0.90399681118244, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9620009230787674
finished with 16
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.43568843412639535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43568843412639535, 0.30734367779660243] ***
*** starting iteration: 2; err: [Inf, 0.43568843412639535, 0.30734367779660243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43568843412639535, 0.30734367779660243, 0.30115832396791326] ***
*** starting iteration: 3; err: [Inf, 0.43568843412639535, 0.30734367779660243, 0.30115832396791326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43568843412639535, 0.30734367779660243, 0.30115832396791326, 0.30070412975900973] ***
*** finished computation of 3 references, err: [Inf, 0.43568843412639535, 0.30734367779660243, 0.30115832396791326, 0.30070412975900973] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [3, 176, 19]]
** centroid: 1, normalized-entropy: 0.3578045192794568, [(1, 3), (2, 176), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [151, 63, 0]]
** centroid: 2, normalized-entropy: 0.8743279638844103, [(1, 151), (2, 63)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [245, 9, 0]]
** centroid: 3, normalized-entropy: 0.22094602508472252, [(1, 245), (2, 9)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5081945074389855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297] ***
*** starting iteration: 2; err: [Inf, 0.5081945074389855, 0.3384560481596297] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662] ***
*** starting iteration: 3; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943] ***
*** starting iteration: 4; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632] ***
*** starting iteration: 5; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414] ***
*** starting iteration: 6; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736] ***
*** starting iteration: 7; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563] ***
*** starting iteration: 8; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563, 0.3273453195544443] ***
*** starting iteration: 9; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563, 0.3273453195544443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563, 0.3273453195544443, 0.32603837176319633] ***
*** starting iteration: 10; err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563, 0.3273453195544443, 0.32603837176319633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563, 0.3273453195544443, 0.32603837176319633, 0.32510242013559526] ***
*** finished computation of 3 references, err: [Inf, 0.5081945074389855, 0.3384560481596297, 0.3367206513814662, 0.33515557057099943, 0.3335265930814632, 0.3315675946223414, 0.32992718387548736, 0.3285916644962563, 0.3273453195544443, 0.32603837176319633, 0.32510242013559526] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [95, 115, 0]]
** centroid: 1, normalized-entropy: 0.9934472383802028, [(1, 95), (2, 115)]
*** center 2: selecting labels [1] (freq >= 2) [from [235, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [76, 119, 27]]
** centroid: 3, normalized-entropy: 0.8715145085818895, [(1, 76), (2, 119), (3, 27)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3680890365776004] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3680890365776004, 0.3134420996160432] ***
*** starting iteration: 2; err: [Inf, 0.3680890365776004, 0.3134420996160432] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013] ***
*** starting iteration: 3; err: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013, 0.3003909459513524] ***
*** starting iteration: 4; err: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013, 0.3003909459513524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013, 0.3003909459513524, 0.2993603063107788] ***
*** starting iteration: 5; err: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013, 0.3003909459513524, 0.2993603063107788] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013, 0.3003909459513524, 0.2993603063107788, 0.2992122420954561] ***
*** finished computation of 3 references, err: [Inf, 0.3680890365776004, 0.3134420996160432, 0.3049913093174013, 0.3003909459513524, 0.2993603063107788, 0.2992122420954561] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [272, 2, 0]]
** centroid: 1, normalized-entropy: 0.06230254712077369, [(1, 272), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 194, 26]]
** centroid: 2, normalized-entropy: 0.4203298982369126, [(1, 5), (2, 194), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [118, 50, 0]]
** centroid: 3, normalized-entropy: 0.8783609387702275, [(1, 118), (2, 50)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2669752120087902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2669752120087902, 0.242889371360778] ***
*** starting iteration: 2; err: [Inf, 0.2669752120087902, 0.242889371360778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2669752120087902, 0.242889371360778, 0.24169212711594618] ***
*** starting iteration: 3; err: [Inf, 0.2669752120087902, 0.242889371360778, 0.24169212711594618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2669752120087902, 0.242889371360778, 0.24169212711594618, 0.2414886789933384] ***
*** finished computation of 3 references, err: [Inf, 0.2669752120087902, 0.242889371360778, 0.24169212711594618, 0.2414886789933384] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [212, 33, 0]]
** centroid: 1, normalized-entropy: 0.5701720520383781, [(1, 212), (2, 33)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 193, 19]]
** centroid: 2, normalized-entropy: 0.4352089878265592, [(2, 193), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [187, 22, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 187), (2, 22)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3706330962861697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3706330962861697, 0.2645769122711521] ***
*** starting iteration: 2; err: [Inf, 0.3706330962861697, 0.2645769122711521] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3706330962861697, 0.2645769122711521, 0.24995485029980608] ***
*** starting iteration: 3; err: [Inf, 0.3706330962861697, 0.2645769122711521, 0.24995485029980608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3706330962861697, 0.2645769122711521, 0.24995485029980608, 0.24633890582943918] ***
*** starting iteration: 4; err: [Inf, 0.3706330962861697, 0.2645769122711521, 0.24995485029980608, 0.24633890582943918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3706330962861697, 0.2645769122711521, 0.24995485029980608, 0.24633890582943918, 0.24588099633367255] ***
*** finished computation of 3 references, err: [Inf, 0.3706330962861697, 0.2645769122711521, 0.24995485029980608, 0.24633890582943918, 0.24588099633367255] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [175, 23, 0]]
** centroid: 1, normalized-entropy: 0.5182259657363326, [(1, 175), (2, 23)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 190, 27]]
** centroid: 2, normalized-entropy: 0.541945111977688, [(2, 190), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [231, 21, 0]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(1, 231), (2, 21)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29784959700165214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29784959700165214, 0.24933397337079405] ***
*** starting iteration: 2; err: [Inf, 0.29784959700165214, 0.24933397337079405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29784959700165214, 0.24933397337079405, 0.24031924865469673] ***
*** starting iteration: 3; err: [Inf, 0.29784959700165214, 0.24933397337079405, 0.24031924865469673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29784959700165214, 0.24933397337079405, 0.24031924865469673, 0.23840910392342837] ***
*** starting iteration: 4; err: [Inf, 0.29784959700165214, 0.24933397337079405, 0.24031924865469673, 0.23840910392342837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29784959700165214, 0.24933397337079405, 0.24031924865469673, 0.23840910392342837, 0.23744402986405225] ***
*** finished computation of 3 references, err: [Inf, 0.29784959700165214, 0.24933397337079405, 0.24031924865469673, 0.23840910392342837, 0.23744402986405225] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [9, 204, 26]]
** centroid: 1, normalized-entropy: 0.4550921118360649, [(1, 9), (2, 204), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [272, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 41, 0]]
** centroid: 3, normalized-entropy: 0.8334850904089345, [(1, 114), (2, 41)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9620009230787674, 0.9469919020817225, 0.9359868850886816, 0.9320008631385877, 0.9290098481715248, 0.9270108431785079, 0.9139918361475248, 0.90399681118244, 0.8950087812363261, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8799697901494309, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9620009230787674
finished with 18
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.35122586607474376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35122586607474376, 0.24609018051745118] ***
*** starting iteration: 2; err: [Inf, 0.35122586607474376, 0.24609018051745118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35122586607474376, 0.24609018051745118, 0.24223275350157855] ***
*** starting iteration: 3; err: [Inf, 0.35122586607474376, 0.24609018051745118, 0.24223275350157855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35122586607474376, 0.24609018051745118, 0.24223275350157855, 0.24039420537796016] ***
*** finished computation of 3 references, err: [Inf, 0.35122586607474376, 0.24609018051745118, 0.24223275350157855, 0.24039420537796016] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [31, 176, 19]]
** centroid: 1, normalized-entropy: 0.6147650324717396, [(1, 31), (2, 176), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 70, 0]]
** centroid: 2, normalized-entropy: 0.9494520153879484, [(1, 120), (2, 70)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [248, 2, 0]]
** centroid: 3, normalized-entropy: 0.06722154475830684, [(1, 248), (2, 2)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30053731238237696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30053731238237696, 0.2679772487125252] ***
*** starting iteration: 2; err: [Inf, 0.30053731238237696, 0.2679772487125252] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30053731238237696, 0.2679772487125252, 0.2599598251749528] ***
*** starting iteration: 3; err: [Inf, 0.30053731238237696, 0.2679772487125252, 0.2599598251749528] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30053731238237696, 0.2679772487125252, 0.2599598251749528, 0.24457134335613187] ***
*** finished computation of 3 references, err: [Inf, 0.30053731238237696, 0.2679772487125252, 0.2599598251749528, 0.24457134335613187] ***
*** center 1: selecting labels [1] (freq >= 2) [from [219, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [157, 64, 0]]
** centroid: 2, normalized-entropy: 0.8681946065589183, [(1, 157), (2, 64)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [30, 170, 27]]
** centroid: 3, normalized-entropy: 0.6710684678926515, [(1, 30), (2, 170), (3, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.26412053477728387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26412053477728387, 0.24226774221615702] ***
*** starting iteration: 2; err: [Inf, 0.26412053477728387, 0.24226774221615702] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26412053477728387, 0.24226774221615702, 0.23623205379567583] ***
*** starting iteration: 3; err: [Inf, 0.26412053477728387, 0.24226774221615702, 0.23623205379567583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26412053477728387, 0.24226774221615702, 0.23623205379567583, 0.23468435201738058] ***
*** finished computation of 3 references, err: [Inf, 0.26412053477728387, 0.24226774221615702, 0.23623205379567583, 0.23468435201738058] ***
*** center 1: selecting labels [1] (freq >= 2) [from [236, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [44, 190, 26]]
** centroid: 2, normalized-entropy: 0.6918791254660377, [(1, 44), (2, 190), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [115, 56, 0]]
** centroid: 3, normalized-entropy: 0.9123365412377752, [(1, 115), (2, 56)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38078562538618466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38078562538618466, 0.2984512858232623] ***
*** starting iteration: 2; err: [Inf, 0.38078562538618466, 0.2984512858232623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38078562538618466, 0.2984512858232623, 0.2964870665130113] ***
*** starting iteration: 3; err: [Inf, 0.38078562538618466, 0.2984512858232623, 0.2964870665130113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38078562538618466, 0.2984512858232623, 0.2964870665130113, 0.29595567635330444] ***
*** finished computation of 3 references, err: [Inf, 0.38078562538618466, 0.2984512858232623, 0.2964870665130113, 0.29595567635330444] ***
*** center 1: selecting labels [1] (freq >= 2) [from [193, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [82, 158, 19]]
** centroid: 2, normalized-entropy: 0.7803214983411784, [(1, 82), (2, 158), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [124, 90, 0]]
** centroid: 3, normalized-entropy: 0.9817140837953373, [(1, 124), (2, 90)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3542155535079014] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3542155535079014, 0.30437524633560986] ***
*** starting iteration: 2; err: [Inf, 0.3542155535079014, 0.30437524633560986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3542155535079014, 0.30437524633560986, 0.3030446276579728] ***
*** starting iteration: 3; err: [Inf, 0.3542155535079014, 0.30437524633560986, 0.3030446276579728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3542155535079014, 0.30437524633560986, 0.3030446276579728, 0.3029768972237339] ***
*** finished computation of 3 references, err: [Inf, 0.3542155535079014, 0.30437524633560986, 0.3030446276579728, 0.3029768972237339] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [270, 4, 0]]
** centroid: 1, normalized-entropy: 0.10992912236299265, [(1, 270), (2, 4)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 180, 27]]
** centroid: 2, normalized-entropy: 0.4457994167978506, [(1, 5), (2, 180), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [131, 50, 0]]
** centroid: 3, normalized-entropy: 0.8502811208393256, [(1, 131), (2, 50)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4283144043931651] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4283144043931651, 0.31335018373847096] ***
*** starting iteration: 2; err: [Inf, 0.4283144043931651, 0.31335018373847096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4283144043931651, 0.31335018373847096, 0.30374468855470466] ***
*** starting iteration: 3; err: [Inf, 0.4283144043931651, 0.31335018373847096, 0.30374468855470466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4283144043931651, 0.31335018373847096, 0.30374468855470466, 0.30186469777804176] ***
*** finished computation of 3 references, err: [Inf, 0.4283144043931651, 0.31335018373847096, 0.30374468855470466, 0.30186469777804176] ***
*** center 1: selecting labels [1] (freq >= 2) [from [249, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 215, 26]]
** centroid: 2, normalized-entropy: 0.38217192006494466, [(1, 4), (2, 215), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [142, 31, 0]]
** centroid: 3, normalized-entropy: 0.6783035074537305, [(1, 142), (2, 31)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9620009230787674, 0.9469919020817225, 0.9359868850886816, 0.9320008631385877, 0.9290098481715248, 0.9270108431785079, 0.9139918361475248, 0.90399681118244, 0.8950087812363261, 0.891993790197383, 0.879981778185371, 0.8799727871584159, 0.8799697901494309, 0.8729448010885137, 0.8620416824009638, 0.8609627591663521, 0.8289966613319907, 0.7909736083388778]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9620009230787674
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.21189038341864944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21189038341864944, 0.16302505726902747] ***
*** starting iteration: 2; err: [Inf, 0.21189038341864944, 0.16302505726902747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622] ***
*** starting iteration: 3; err: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622, 0.14867878289532382] ***
*** starting iteration: 4; err: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622, 0.14867878289532382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622, 0.14867878289532382, 0.14753795798588545] ***
*** starting iteration: 5; err: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622, 0.14867878289532382, 0.14753795798588545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622, 0.14867878289532382, 0.14753795798588545, 0.14706281130574644] ***
*** finished computation of 7 references, err: [Inf, 0.21189038341864944, 0.16302505726902747, 0.1523068120770622, 0.14867878289532382, 0.14753795798588545, 0.14706281130574644] ***
*** center 1: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [100, 66, 0]]
** centroid: 2, normalized-entropy: 0.9695235828220429, [(1, 100), (2, 66)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [85, 49, 0]]
** centroid: 3, normalized-entropy: 0.9472905939402364, [(1, 85), (2, 49)]
*** center 4: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 131, 36]]
** centroid: 5, normalized-entropy: 0.7519934346696856, [(2, 131), (3, 36)]
*** center 6: selecting labels [1] (freq >= 2) [from [125, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [50, 118, 0]]
** centroid: 7, normalized-entropy: 0.8783609387702275, [(1, 50), (2, 118)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22195751716196538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22195751716196538, 0.16467032912094146] ***
*** starting iteration: 2; err: [Inf, 0.22195751716196538, 0.16467032912094146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083] ***
*** starting iteration: 3; err: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083, 0.1530206416770816] ***
*** starting iteration: 4; err: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083, 0.1530206416770816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083, 0.1530206416770816, 0.15156742531061174] ***
*** starting iteration: 5; err: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083, 0.1530206416770816, 0.15156742531061174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083, 0.1530206416770816, 0.15156742531061174, 0.15085379650443792] ***
*** finished computation of 7 references, err: [Inf, 0.22195751716196538, 0.16467032912094146, 0.15666356508620083, 0.1530206416770816, 0.15156742531061174, 0.15085379650443792] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [47, 23, 0]]
** centroid: 1, normalized-entropy: 0.9134601452569628, [(1, 47), (2, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 33, 0]]
** centroid: 3, normalized-entropy: 0.887976319515135, [(1, 75), (2, 33)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 4, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 5: selecting labels [1] (freq >= 2) [from [39, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 56, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24721047180518507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24721047180518507, 0.17690389175806195] ***
*** starting iteration: 2; err: [Inf, 0.24721047180518507, 0.17690389175806195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427] ***
*** starting iteration: 3; err: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814] ***
*** starting iteration: 4; err: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814, 0.1529993479475379] ***
*** starting iteration: 5; err: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814, 0.1529993479475379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814, 0.1529993479475379, 0.15121758590545506] ***
*** starting iteration: 6; err: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814, 0.1529993479475379, 0.15121758590545506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814, 0.1529993479475379, 0.15121758590545506, 0.15032781761558728] ***
*** finished computation of 7 references, err: [Inf, 0.24721047180518507, 0.17690389175806195, 0.16361849067546427, 0.15652549714408814, 0.1529993479475379, 0.15121758590545506, 0.15032781761558728] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 72, 16]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(2, 72), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 14, 0]]
** centroid: 3, normalized-entropy: 0.7837769474847011, [(1, 46), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 2, 0]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(1, 40), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 56, 0]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(1, 8), (2, 56)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 26, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 78), (2, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2704330198485404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767] ***
*** starting iteration: 2; err: [Inf, 0.2704330198485404, 0.1717157122194767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834] ***
*** starting iteration: 3; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918] ***
*** starting iteration: 4; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608] ***
*** starting iteration: 5; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065] ***
*** starting iteration: 6; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857] ***
*** starting iteration: 7; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893] ***
*** starting iteration: 8; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893, 0.14683775509148836] ***
*** starting iteration: 9; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893, 0.14683775509148836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893, 0.14683775509148836, 0.14526337555237115] ***
*** starting iteration: 10; err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893, 0.14683775509148836, 0.14526337555237115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893, 0.14683775509148836, 0.14526337555237115, 0.14429148713685572] ***
*** finished computation of 7 references, err: [Inf, 0.2704330198485404, 0.1717157122194767, 0.1619301944160834, 0.15721178425801918, 0.15452315731346608, 0.15303394867666065, 0.14997866446524857, 0.14824074248503893, 0.14683775509148836, 0.14526337555237115, 0.14429148713685572] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 30, 0]]
** centroid: 2, normalized-entropy: 0.9145891955877994, [(1, 61), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 58, 20]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 58), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 4, 0]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [42, 31, 0]]
** centroid: 5, normalized-entropy: 0.9835585673909616, [(1, 42), (2, 31)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19996357564919162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19996357564919162, 0.16761934321932495] ***
*** starting iteration: 2; err: [Inf, 0.19996357564919162, 0.16761934321932495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158] ***
*** starting iteration: 3; err: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158, 0.15434055473282934] ***
*** starting iteration: 4; err: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158, 0.15434055473282934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158, 0.15434055473282934, 0.15174688425520436] ***
*** starting iteration: 5; err: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158, 0.15434055473282934, 0.15174688425520436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158, 0.15434055473282934, 0.15174688425520436, 0.1509140486381948] ***
*** finished computation of 7 references, err: [Inf, 0.19996357564919162, 0.16761934321932495, 0.15963221968524158, 0.15434055473282934, 0.15174688425520436, 0.1509140486381948] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 28, 0]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(1, 52), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 17, 0]]
** centroid: 2, normalized-entropy: 0.9440870182837795, [(1, 30), (2, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 25, 0]]
** centroid: 4, normalized-entropy: 0.9445911819316588, [(1, 44), (2, 25)]
*** center 5: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [24, 44, 0]]
** centroid: 6, normalized-entropy: 0.9366673818775627, [(1, 24), (2, 44)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 64, 21]]
** centroid: 7, normalized-entropy: 0.806583102274714, [(2, 64), (3, 21)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23864593753032387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792] ***
*** starting iteration: 2; err: [Inf, 0.23864593753032387, 0.1747497124429792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808] ***
*** starting iteration: 3; err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167] ***
*** starting iteration: 4; err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015] ***
*** starting iteration: 5; err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757] ***
*** starting iteration: 6; err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757, 0.14509652828425168] ***
*** starting iteration: 7; err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757, 0.14509652828425168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757, 0.14509652828425168, 0.14404497877531686] ***
*** starting iteration: 8; err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757, 0.14509652828425168, 0.14404497877531686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757, 0.14509652828425168, 0.14404497877531686, 0.143520537763834] ***
*** finished computation of 7 references, err: [Inf, 0.23864593753032387, 0.1747497124429792, 0.16212364260479808, 0.15510986123327167, 0.15028259075433015, 0.1469555341731757, 0.14509652828425168, 0.14404497877531686, 0.143520537763834] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 60, 17]]
** centroid: 1, normalized-entropy: 0.7615877869576693, [(2, 60), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 28, 0]]
** centroid: 2, normalized-entropy: 0.9932338197397066, [(1, 34), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 33, 0]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(1, 55), (2, 33)]
*** center 5: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [24, 63, 0]]
** centroid: 7, normalized-entropy: 0.8497511372532974, [(1, 24), (2, 63)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24631052494049072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24631052494049072, 0.17505370879359544] ***
*** starting iteration: 2; err: [Inf, 0.24631052494049072, 0.17505370879359544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807] ***
*** starting iteration: 3; err: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715] ***
*** starting iteration: 4; err: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715, 0.1484653690867126] ***
*** starting iteration: 5; err: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715, 0.1484653690867126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715, 0.1484653690867126, 0.14680093714222311] ***
*** starting iteration: 6; err: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715, 0.1484653690867126, 0.14680093714222311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715, 0.1484653690867126, 0.14680093714222311, 0.14620274754799903] ***
*** finished computation of 7 references, err: [Inf, 0.24631052494049072, 0.17505370879359544, 0.15892407402116807, 0.15240884221717715, 0.1484653690867126, 0.14680093714222311, 0.14620274754799903] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [6, 73, 0]]
** centroid: 1, normalized-entropy: 0.3877431810559867, [(1, 6), (2, 73)]
*** center 2: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 26, 0]]
** centroid: 4, normalized-entropy: 0.9225641366401655, [(1, 51), (2, 26)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 65, 24]]
** centroid: 5, normalized-entropy: 0.8409805336163159, [(2, 65), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [39, 13, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 39), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 7, 0]]
** centroid: 7, normalized-entropy: 0.4830306801456181, [(1, 60), (2, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2645147502971813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133] ***
*** starting iteration: 2; err: [Inf, 0.2645147502971813, 0.19325494404137133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998] ***
*** starting iteration: 3; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527] ***
*** starting iteration: 4; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278] ***
*** starting iteration: 5; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101] ***
*** starting iteration: 6; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244] ***
*** starting iteration: 7; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244, 0.14598462883755564] ***
*** starting iteration: 8; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244, 0.14598462883755564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244, 0.14598462883755564, 0.14461299497261643] ***
*** starting iteration: 9; err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244, 0.14598462883755564, 0.14461299497261643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244, 0.14598462883755564, 0.14461299497261643, 0.1442170509044081] ***
*** finished computation of 7 references, err: [Inf, 0.2645147502971813, 0.19325494404137133, 0.17797144331037998, 0.16839986333623527, 0.15967789462581278, 0.1527529752124101, 0.14884509038273244, 0.14598462883755564, 0.14461299497261643, 0.1442170509044081] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 3, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 63), (2, 3)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 82, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 30, 0]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(1, 54), (2, 30)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 56, 19]]
** centroid: 5, normalized-entropy: 0.8165187119538281, [(2, 56), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [62, 13, 0]]
** centroid: 7, normalized-entropy: 0.6652735227649414, [(1, 62), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20829795225523412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20829795225523412, 0.1723011476895772] ***
*** starting iteration: 2; err: [Inf, 0.20829795225523412, 0.1723011476895772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032] ***
*** starting iteration: 3; err: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646] ***
*** starting iteration: 4; err: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646, 0.15301684156805276] ***
*** starting iteration: 5; err: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646, 0.15301684156805276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646, 0.15301684156805276, 0.15187374906614423] ***
*** starting iteration: 6; err: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646, 0.15301684156805276, 0.15187374906614423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646, 0.15301684156805276, 0.15187374906614423, 0.15113884950056672] ***
*** finished computation of 7 references, err: [Inf, 0.20829795225523412, 0.1723011476895772, 0.16301224350417032, 0.15613661835342646, 0.15301684156805276, 0.15187374906614423, 0.15113884950056672] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 30, 0]]
** centroid: 1, normalized-entropy: 0.8418521897563208, [(1, 81), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [40, 10, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 40), (2, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 48, 0]]
** centroid: 5, normalized-entropy: 0.975119064940866, [(1, 33), (2, 48)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 49, 1]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 51, 17]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 51), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19201401781104505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462] ***
*** starting iteration: 2; err: [Inf, 0.19201401781104505, 0.16503607608750462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518] ***
*** starting iteration: 3; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392] ***
*** starting iteration: 4; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063] ***
*** starting iteration: 5; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703] ***
*** starting iteration: 6; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355] ***
*** starting iteration: 7; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355, 0.14623260856373235] ***
*** starting iteration: 8; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355, 0.14623260856373235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355, 0.14623260856373235, 0.14484902830794455] ***
*** starting iteration: 9; err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355, 0.14623260856373235, 0.14484902830794455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355, 0.14623260856373235, 0.14484902830794455, 0.14416281027533115] ***
*** finished computation of 7 references, err: [Inf, 0.19201401781104505, 0.16503607608750462, 0.16267642241809518, 0.1606413688980392, 0.15690802607499063, 0.15335267271613703, 0.14935194377042355, 0.14623260856373235, 0.14484902830794455, 0.14416281027533115] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 27, 0]]
** centroid: 1, normalized-entropy: 0.9426831892554921, [(1, 48), (2, 27)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 17]]
** centroid: 3, normalized-entropy: 0.751286576718343, [(2, 62), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 55, 0]]
** centroid: 5, normalized-entropy: 0.9430685934712909, [(1, 31), (2, 55)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 33, 0]]
** centroid: 7, normalized-entropy: 0.9666186325481027, [(1, 51), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21545409446966368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21545409446966368, 0.16361229198612273] ***
*** starting iteration: 2; err: [Inf, 0.21545409446966368, 0.16361229198612273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642] ***
*** starting iteration: 3; err: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642, 0.15087672051787376] ***
*** starting iteration: 4; err: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642, 0.15087672051787376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642, 0.15087672051787376, 0.14931789696402847] ***
*** starting iteration: 5; err: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642, 0.15087672051787376, 0.14931789696402847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642, 0.15087672051787376, 0.14931789696402847, 0.14882918809354306] ***
*** finished computation of 7 references, err: [Inf, 0.21545409446966368, 0.16361229198612273, 0.1546913958452642, 0.15087672051787376, 0.14931789696402847, 0.14882918809354306] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [78, 5, 0]]
** centroid: 1, normalized-entropy: 0.32840071392894665, [(1, 78), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 19, 0]]
** centroid: 2, normalized-entropy: 0.8546480601169081, [(1, 49), (2, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [2, 70, 0]]
** centroid: 3, normalized-entropy: 0.18312206830137262, [(1, 2), (2, 70)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 59, 17]]
** centroid: 4, normalized-entropy: 0.7668379316856329, [(2, 59), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 7, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2293229086883366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293229086883366, 0.16117797893472016] ***
*** starting iteration: 2; err: [Inf, 0.2293229086883366, 0.16117797893472016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924] ***
*** starting iteration: 3; err: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924, 0.1539007374290377] ***
*** starting iteration: 4; err: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924, 0.1539007374290377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924, 0.1539007374290377, 0.15269448879919947] ***
*** starting iteration: 5; err: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924, 0.1539007374290377, 0.15269448879919947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924, 0.1539007374290377, 0.15269448879919947, 0.15239318693615497] ***
*** finished computation of 7 references, err: [Inf, 0.2293229086883366, 0.16117797893472016, 0.15696173929655924, 0.1539007374290377, 0.15269448879919947, 0.15239318693615497] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 69, 5]]
** centroid: 1, normalized-entropy: 0.35678001438394347, [(2, 69), (3, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 18, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 63), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 58, 16]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 58), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [56, 16, 0]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(1, 56), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [58, 8, 0]]
** centroid: 5, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1867534688003361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1867534688003361, 0.14804053782764823] ***
*** starting iteration: 2; err: [Inf, 0.1867534688003361, 0.14804053782764823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1867534688003361, 0.14804053782764823, 0.14438023282028734] ***
*** starting iteration: 3; err: [Inf, 0.1867534688003361, 0.14804053782764823, 0.14438023282028734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1867534688003361, 0.14804053782764823, 0.14438023282028734, 0.143717927520629] ***
*** finished computation of 7 references, err: [Inf, 0.1867534688003361, 0.14804053782764823, 0.14438023282028734, 0.143717927520629] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 40, 18]]
** centroid: 1, normalized-entropy: 0.8935711016541908, [(2, 40), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 21, 0]]
** centroid: 2, normalized-entropy: 0.8208002549877175, [(1, 61), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [30, 49, 0]]
** centroid: 3, normalized-entropy: 0.9578630237479795, [(1, 30), (2, 49)]
*** center 4: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 11, 0]]
** centroid: 5, normalized-entropy: 0.5558227377664954, [(1, 74), (2, 11)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21396550665609537] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21396550665609537, 0.1586672747200355] ***
*** starting iteration: 2; err: [Inf, 0.21396550665609537, 0.1586672747200355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824] ***
*** starting iteration: 3; err: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855] ***
*** starting iteration: 4; err: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855, 0.14917990413028748] ***
*** starting iteration: 5; err: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855, 0.14917990413028748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855, 0.14917990413028748, 0.14797529171593488] ***
*** starting iteration: 6; err: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855, 0.14917990413028748, 0.14797529171593488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855, 0.14917990413028748, 0.14797529171593488, 0.14716591547895222] ***
*** finished computation of 7 references, err: [Inf, 0.21396550665609537, 0.1586672747200355, 0.15428372439555824, 0.15135336928255855, 0.14917990413028748, 0.14797529171593488, 0.14716591547895222] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 39, 16]]
** centroid: 2, normalized-entropy: 0.8698926856041562, [(2, 39), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [4, 74, 0]]
** centroid: 3, normalized-entropy: 0.29181825659888555, [(1, 4), (2, 74)]
*** center 4: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 11, 0]]
** centroid: 7, normalized-entropy: 0.6385146263620961, [(1, 57), (2, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16979878470115364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16979878470115364, 0.15386786559969187] ***
*** starting iteration: 2; err: [Inf, 0.16979878470115364, 0.15386786559969187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16979878470115364, 0.15386786559969187, 0.15074711695313453] ***
*** starting iteration: 3; err: [Inf, 0.16979878470115364, 0.15386786559969187, 0.15074711695313453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16979878470115364, 0.15386786559969187, 0.15074711695313453, 0.14877533073071392] ***
*** starting iteration: 4; err: [Inf, 0.16979878470115364, 0.15386786559969187, 0.15074711695313453, 0.14877533073071392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16979878470115364, 0.15386786559969187, 0.15074711695313453, 0.14877533073071392, 0.14826740956120193] ***
*** finished computation of 7 references, err: [Inf, 0.16979878470115364, 0.15386786559969187, 0.15074711695313453, 0.14877533073071392, 0.14826740956120193] ***
*** center 1: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 45, 0]]
** centroid: 3, normalized-entropy: 0.9984389230256238, [(1, 41), (2, 45)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 69, 17]]
** centroid: 5, normalized-entropy: 0.7172524777375696, [(2, 69), (3, 17)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [23, 40, 0]]
** centroid: 6, normalized-entropy: 0.9468188316776024, [(1, 23), (2, 40)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 26, 0]]
** centroid: 7, normalized-entropy: 0.943601631299382, [(1, 46), (2, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21793584523629397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258] ***
*** starting iteration: 2; err: [Inf, 0.21793584523629397, 0.1642402790589258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901] ***
*** starting iteration: 3; err: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654] ***
*** starting iteration: 4; err: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564] ***
*** starting iteration: 5; err: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564, 0.147879512200132] ***
*** starting iteration: 6; err: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564, 0.147879512200132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564, 0.147879512200132, 0.14680401952937244] ***
*** starting iteration: 7; err: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564, 0.147879512200132, 0.14680401952937244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564, 0.147879512200132, 0.14680401952937244, 0.1461314230603166] ***
*** finished computation of 7 references, err: [Inf, 0.21793584523629397, 0.1642402790589258, 0.1549141134223901, 0.15153099574148654, 0.14941242692619564, 0.147879512200132, 0.14680401952937244, 0.1461314230603166] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 4, 0]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(1, 52), (2, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 66, 13]]
** centroid: 4, normalized-entropy: 0.6451006442088483, [(2, 66), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 27, 0]]
** centroid: 5, normalized-entropy: 0.8853723770068483, [(1, 62), (2, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 40, 0]]
** centroid: 7, normalized-entropy: 0.9672947789468944, [(1, 26), (2, 40)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20617064137384294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622] ***
*** starting iteration: 2; err: [Inf, 0.20617064137384294, 0.16398712963424622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693] ***
*** starting iteration: 3; err: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558] ***
*** starting iteration: 4; err: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583] ***
*** starting iteration: 5; err: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583, 0.14444486242253332] ***
*** starting iteration: 6; err: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583, 0.14444486242253332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583, 0.14444486242253332, 0.14329351160675288] ***
*** starting iteration: 7; err: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583, 0.14444486242253332, 0.14329351160675288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583, 0.14444486242253332, 0.14329351160675288, 0.14253964642900974] ***
*** finished computation of 7 references, err: [Inf, 0.20617064137384294, 0.16398712963424622, 0.15697553039714693, 0.14957041393313558, 0.14658800600096583, 0.14444486242253332, 0.14329351160675288, 0.14253964642900974] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [72, 13, 0]]
** centroid: 1, normalized-entropy: 0.617151919200282, [(1, 72), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 21, 0]]
** centroid: 2, normalized-entropy: 0.9076961653608385, [(1, 44), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 23]]
** centroid: 3, normalized-entropy: 0.9729661265889024, [(2, 34), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [35, 38, 0]]
** centroid: 7, normalized-entropy: 0.998781393072756, [(1, 35), (2, 38)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2043994916267693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2043994916267693, 0.1571545385569334] ***
*** starting iteration: 2; err: [Inf, 0.2043994916267693, 0.1571545385569334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2043994916267693, 0.1571545385569334, 0.1481101660504937] ***
*** starting iteration: 3; err: [Inf, 0.2043994916267693, 0.1571545385569334, 0.1481101660504937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2043994916267693, 0.1571545385569334, 0.1481101660504937, 0.1451036193894688] ***
*** starting iteration: 4; err: [Inf, 0.2043994916267693, 0.1571545385569334, 0.1481101660504937, 0.1451036193894688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2043994916267693, 0.1571545385569334, 0.1481101660504937, 0.1451036193894688, 0.14432736323587597] ***
*** finished computation of 7 references, err: [Inf, 0.2043994916267693, 0.1571545385569334, 0.1481101660504937, 0.1451036193894688, 0.14432736323587597] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [28, 57, 0]]
** centroid: 1, normalized-entropy: 0.9143242464317818, [(1, 28), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [28, 33, 0]]
** centroid: 2, normalized-entropy: 0.995148095654003, [(1, 28), (2, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [35, 35, 0]]
** centroid: 4, normalized-entropy: 1.0, [(1, 35), (2, 35)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 61, 17]]
** centroid: 5, normalized-entropy: 0.7564041945982506, [(2, 61), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21291262598894536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487] ***
*** starting iteration: 2; err: [Inf, 0.21291262598894536, 0.17017056549340487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261] ***
*** starting iteration: 3; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927] ***
*** starting iteration: 4; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459] ***
*** starting iteration: 5; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338] ***
*** starting iteration: 6; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488] ***
*** starting iteration: 7; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203] ***
*** starting iteration: 8; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203, 0.14743593903258442] ***
*** starting iteration: 9; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203, 0.14743593903258442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203, 0.14743593903258442, 0.14623394128680228] ***
*** starting iteration: 10; err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203, 0.14743593903258442, 0.14623394128680228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203, 0.14743593903258442, 0.14623394128680228, 0.14554013869166374] ***
*** finished computation of 7 references, err: [Inf, 0.21291262598894536, 0.17017056549340487, 0.1614966478124261, 0.15833255381695927, 0.1565443843761459, 0.15493611161783338, 0.15200998536590488, 0.14967545911297203, 0.14743593903258442, 0.14623394128680228, 0.14554013869166374] ***
*** center 1: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [35, 38, 0]]
** centroid: 2, normalized-entropy: 0.998781393072756, [(1, 35), (2, 38)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 42, 0]]
** centroid: 5, normalized-entropy: 0.48890859144051524, [(1, 5), (2, 42)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 69, 19]]
** centroid: 6, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [61, 21, 0]]
** centroid: 7, normalized-entropy: 0.8208002549877175, [(1, 61), (2, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16778820142522455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16778820142522455, 0.15646659825276582] ***
*** starting iteration: 2; err: [Inf, 0.16778820142522455, 0.15646659825276582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247] ***
*** starting iteration: 3; err: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564] ***
*** starting iteration: 4; err: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564, 0.14825928817130626] ***
*** starting iteration: 5; err: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564, 0.14825928817130626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564, 0.14825928817130626, 0.1466461130026728] ***
*** starting iteration: 6; err: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564, 0.14825928817130626, 0.1466461130026728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564, 0.14825928817130626, 0.1466461130026728, 0.14570155167579651] ***
*** finished computation of 7 references, err: [Inf, 0.16778820142522455, 0.15646659825276582, 0.15291688261274247, 0.15047141269687564, 0.14825928817130626, 0.1466461130026728, 0.14570155167579651] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 9, 0]]
** centroid: 1, normalized-entropy: 0.5801954953637372, [(1, 56), (2, 9)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 56, 16]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 56), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [39, 33, 0]]
** centroid: 3, normalized-entropy: 0.9949848281859699, [(1, 39), (2, 33)]
*** center 4: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 26, 0]]
** centroid: 7, normalized-entropy: 0.9225641366401655, [(1, 51), (2, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21265677113784476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816] ***
*** starting iteration: 2; err: [Inf, 0.21265677113784476, 0.18928981738723816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172] ***
*** starting iteration: 3; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268] ***
*** starting iteration: 4; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769] ***
*** starting iteration: 5; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446] ***
*** starting iteration: 6; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493] ***
*** starting iteration: 7; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493, 0.1476083935853094] ***
*** starting iteration: 8; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493, 0.1476083935853094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493, 0.1476083935853094, 0.14657266322302168] ***
*** starting iteration: 9; err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493, 0.1476083935853094, 0.14657266322302168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493, 0.1476083935853094, 0.14657266322302168, 0.14564683527313174] ***
*** finished computation of 7 references, err: [Inf, 0.21265677113784476, 0.18928981738723816, 0.17996812404692172, 0.17177495682053268, 0.1631639292258769, 0.15538419726118446, 0.14974693755805493, 0.1476083935853094, 0.14657266322302168, 0.14564683527313174] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [4, 49, 0]]
** centroid: 1, normalized-entropy: 0.3860189005698936, [(1, 4), (2, 49)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 53, 0]]
** centroid: 2, normalized-entropy: 0.9606276613221153, [(1, 33), (2, 53)]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 24, 0]]
** centroid: 5, normalized-entropy: 0.8409805336163159, [(1, 65), (2, 24)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 49, 18]]
** centroid: 6, normalized-entropy: 0.8395304981054318, [(2, 49), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16250519678834827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16250519678834827, 0.14898489198973403] ***
*** starting iteration: 2; err: [Inf, 0.16250519678834827, 0.14898489198973403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16250519678834827, 0.14898489198973403, 0.1466482507577166] ***
*** starting iteration: 3; err: [Inf, 0.16250519678834827, 0.14898489198973403, 0.1466482507577166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16250519678834827, 0.14898489198973403, 0.1466482507577166, 0.14586673030629754] ***
*** finished computation of 7 references, err: [Inf, 0.16250519678834827, 0.14898489198973403, 0.1466482507577166, 0.14586673030629754] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [7, 51, 0]]
** centroid: 1, normalized-entropy: 0.5313400141801669, [(1, 7), (2, 51)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 55, 17]]
** centroid: 2, normalized-entropy: 0.7885131605379784, [(2, 55), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [66, 25, 0]]
** centroid: 3, normalized-entropy: 0.8481636883083004, [(1, 66), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [15, 49, 0]]
** centroid: 4, normalized-entropy: 0.7855602922535471, [(1, 15), (2, 49)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 1, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17650722837261856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17650722837261856, 0.16001269885897637] ***
*** starting iteration: 2; err: [Inf, 0.17650722837261856, 0.16001269885897637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804] ***
*** starting iteration: 3; err: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203] ***
*** starting iteration: 4; err: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203, 0.1498987887017429] ***
*** starting iteration: 5; err: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203, 0.1498987887017429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203, 0.1498987887017429, 0.1477037459043786] ***
*** starting iteration: 6; err: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203, 0.1498987887017429, 0.1477037459043786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203, 0.1498987887017429, 0.1477037459043786, 0.14681576884724198] ***
*** finished computation of 7 references, err: [Inf, 0.17650722837261856, 0.16001269885897637, 0.1567314816340804, 0.15334575708024203, 0.1498987887017429, 0.1477037459043786, 0.14681576884724198] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 72, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 11, 0]]
** centroid: 3, normalized-entropy: 0.6064481901491525, [(1, 63), (2, 11)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 14]]
** centroid: 4, normalized-entropy: 0.699772221773307, [(2, 60), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [57, 22, 0]]
** centroid: 5, normalized-entropy: 0.8533728188427888, [(1, 57), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 30, 0]]
** centroid: 7, normalized-entropy: 0.9826154285526119, [(1, 41), (2, 30)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2876379468087107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2876379468087107, 0.17097237774636598] ***
*** starting iteration: 2; err: [Inf, 0.2876379468087107, 0.17097237774636598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398] ***
*** starting iteration: 3; err: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394] ***
*** starting iteration: 4; err: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394, 0.15110511099547147] ***
*** starting iteration: 5; err: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394, 0.15110511099547147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394, 0.15110511099547147, 0.14877841523382812] ***
*** starting iteration: 6; err: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394, 0.15110511099547147, 0.14877841523382812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394, 0.15110511099547147, 0.14877841523382812, 0.14785746542923153] ***
*** finished computation of 7 references, err: [Inf, 0.2876379468087107, 0.17097237774636598, 0.16142471616156398, 0.15453768058959394, 0.15110511099547147, 0.14877841523382812, 0.14785746542923153] ***
*** center 1: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [42, 44, 0]]
** centroid: 2, normalized-entropy: 0.9996098363678071, [(1, 42), (2, 44)]
*** center 3: selecting labels [1] (freq >= 2) [from [40, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 83, 18]]
** centroid: 4, normalized-entropy: 0.6761627418829197, [(2, 83), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 25, 0]]
** centroid: 5, normalized-entropy: 0.8783609387702275, [(1, 59), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 26, 0]]
** centroid: 6, normalized-entropy: 0.9097361225311661, [(1, 54), (2, 26)]
*** center 7: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19235785714769735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19235785714769735, 0.1633189867339097] ***
*** starting iteration: 2; err: [Inf, 0.19235785714769735, 0.1633189867339097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082] ***
*** starting iteration: 3; err: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082, 0.15219845366477966] ***
*** starting iteration: 4; err: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082, 0.15219845366477966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082, 0.15219845366477966, 0.15104868953395634] ***
*** starting iteration: 5; err: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082, 0.15219845366477966, 0.15104868953395634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082, 0.15219845366477966, 0.15104868953395634, 0.15048004915984348] ***
*** finished computation of 7 references, err: [Inf, 0.19235785714769735, 0.1633189867339097, 0.15444941962324082, 0.15219845366477966, 0.15104868953395634, 0.15048004915984348] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 67, 21]]
** centroid: 1, normalized-entropy: 0.7927652363756529, [(2, 67), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 32, 0]]
** centroid: 3, normalized-entropy: 0.9252253278054431, [(1, 62), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 32, 0]]
** centroid: 4, normalized-entropy: 0.9946937953613056, [(1, 38), (2, 32)]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 43, 0]]
** centroid: 7, normalized-entropy: 0.9972496329704711, [(1, 38), (2, 43)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24113290251046418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24113290251046418, 0.16658910222537815] ***
*** starting iteration: 2; err: [Inf, 0.24113290251046418, 0.16658910222537815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24113290251046418, 0.16658910222537815, 0.14927236528508364] ***
*** starting iteration: 3; err: [Inf, 0.24113290251046418, 0.16658910222537815, 0.14927236528508364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24113290251046418, 0.16658910222537815, 0.14927236528508364, 0.1460345991877839] ***
*** starting iteration: 4; err: [Inf, 0.24113290251046418, 0.16658910222537815, 0.14927236528508364, 0.1460345991877839] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24113290251046418, 0.16658910222537815, 0.14927236528508364, 0.1460345991877839, 0.145613741023466] ***
*** finished computation of 7 references, err: [Inf, 0.24113290251046418, 0.16658910222537815, 0.14927236528508364, 0.1460345991877839, 0.145613741023466] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [16, 51, 0]]
** centroid: 1, normalized-entropy: 0.7930490047779772, [(1, 16), (2, 51)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 30, 0]]
** centroid: 2, normalized-entropy: 0.9034535552068337, [(1, 64), (2, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [4, 52, 0]]
** centroid: 4, normalized-entropy: 0.3712323266408756, [(1, 4), (2, 52)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 58, 17]]
** centroid: 5, normalized-entropy: 0.7721551435804817, [(2, 58), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21361734121572226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407] ***
*** starting iteration: 2; err: [Inf, 0.21361734121572226, 0.17183703490160407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457] ***
*** starting iteration: 3; err: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013] ***
*** starting iteration: 4; err: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267] ***
*** starting iteration: 5; err: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267, 0.15045291085913778] ***
*** starting iteration: 6; err: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267, 0.15045291085913778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267, 0.15045291085913778, 0.14919668350555002] ***
*** starting iteration: 7; err: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267, 0.15045291085913778, 0.14919668350555002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267, 0.15045291085913778, 0.14919668350555002, 0.14836746619455515] ***
*** finished computation of 7 references, err: [Inf, 0.21361734121572226, 0.17183703490160407, 0.16257181994244457, 0.1568313768832013, 0.1527651101127267, 0.15045291085913778, 0.14919668350555002, 0.14836746619455515] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 38, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 28, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 56), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 34, 0]]
** centroid: 4, normalized-entropy: 0.9763102872004581, [(1, 49), (2, 34)]
*** center 5: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 75, 15]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(2, 75), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20522899876814335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20522899876814335, 0.16041256008669735] ***
*** starting iteration: 2; err: [Inf, 0.20522899876814335, 0.16041256008669735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285] ***
*** starting iteration: 3; err: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285, 0.14902977537596598] ***
*** starting iteration: 4; err: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285, 0.14902977537596598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285, 0.14902977537596598, 0.14725127276964486] ***
*** starting iteration: 5; err: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285, 0.14902977537596598, 0.14725127276964486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285, 0.14902977537596598, 0.14725127276964486, 0.146782326053828] ***
*** finished computation of 7 references, err: [Inf, 0.20522899876814335, 0.16041256008669735, 0.15246182273491285, 0.14902977537596598, 0.14725127276964486, 0.146782326053828] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [58, 11, 0]]
** centroid: 1, normalized-entropy: 0.6329208984823799, [(1, 58), (2, 11)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 40, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [37, 39, 0]]
** centroid: 3, normalized-entropy: 0.9995003941817588, [(1, 37), (2, 39)]
*** center 4: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 51, 20]]
** centroid: 5, normalized-entropy: 0.8577435372751958, [(2, 51), (3, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [73, 25, 0]]
** centroid: 7, normalized-entropy: 0.8192649712314392, [(1, 73), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1609854230489582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1609854230489582, 0.1547512446353212] ***
*** starting iteration: 2; err: [Inf, 0.1609854230489582, 0.1547512446353212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1609854230489582, 0.1547512446353212, 0.15198256520181894] ***
*** starting iteration: 3; err: [Inf, 0.1609854230489582, 0.1547512446353212, 0.15198256520181894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1609854230489582, 0.1547512446353212, 0.15198256520181894, 0.14953001239337027] ***
*** starting iteration: 4; err: [Inf, 0.1609854230489582, 0.1547512446353212, 0.15198256520181894, 0.14953001239337027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1609854230489582, 0.1547512446353212, 0.15198256520181894, 0.14953001239337027, 0.1485968710174784] ***
*** finished computation of 7 references, err: [Inf, 0.1609854230489582, 0.1547512446353212, 0.15198256520181894, 0.14953001239337027, 0.1485968710174784] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 60, 11]]
** centroid: 1, normalized-entropy: 0.6220403090607189, [(2, 60), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 16, 0]]
** centroid: 2, normalized-entropy: 0.7320666900931937, [(1, 62), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 29, 0]]
** centroid: 4, normalized-entropy: 0.9626147059982517, [(1, 46), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 15, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 80), (2, 15)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 63, 4]]
** centroid: 6, normalized-entropy: 0.32625881462949274, [(2, 63), (3, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19964206024073064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964206024073064, 0.15483567662257702] ***
*** starting iteration: 2; err: [Inf, 0.19964206024073064, 0.15483567662257702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964206024073064, 0.15483567662257702, 0.15068152460828424] ***
*** starting iteration: 3; err: [Inf, 0.19964206024073064, 0.15483567662257702, 0.15068152460828424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964206024073064, 0.15483567662257702, 0.15068152460828424, 0.14883428589627146] ***
*** starting iteration: 4; err: [Inf, 0.19964206024073064, 0.15483567662257702, 0.15068152460828424, 0.14883428589627146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19964206024073064, 0.15483567662257702, 0.15068152460828424, 0.14883428589627146, 0.1481535691525787] ***
*** finished computation of 7 references, err: [Inf, 0.19964206024073064, 0.15483567662257702, 0.15068152460828424, 0.14883428589627146, 0.1481535691525787] ***
*** center 1: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 54, 15]]
** centroid: 2, normalized-entropy: 0.7553754125614286, [(2, 54), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 21, 0]]
** centroid: 3, normalized-entropy: 0.8160172973428256, [(1, 62), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 34, 0]]
** centroid: 4, normalized-entropy: 0.9952525494396791, [(1, 40), (2, 34)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 1, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1764334309855476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764334309855476, 0.15360994468815625] ***
*** starting iteration: 2; err: [Inf, 0.1764334309855476, 0.15360994468815625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764334309855476, 0.15360994468815625, 0.14904187780059874] ***
*** starting iteration: 3; err: [Inf, 0.1764334309855476, 0.15360994468815625, 0.14904187780059874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764334309855476, 0.15360994468815625, 0.14904187780059874, 0.14753187314700336] ***
*** starting iteration: 4; err: [Inf, 0.1764334309855476, 0.15360994468815625, 0.14904187780059874, 0.14753187314700336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764334309855476, 0.15360994468815625, 0.14904187780059874, 0.14753187314700336, 0.14670840005762875] ***
*** finished computation of 7 references, err: [Inf, 0.1764334309855476, 0.15360994468815625, 0.14904187780059874, 0.14753187314700336, 0.14670840005762875] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 57, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [43, 19, 0]]
** centroid: 3, normalized-entropy: 0.8890349038123858, [(1, 43), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 9, 0]]
** centroid: 4, normalized-entropy: 0.4725472219330293, [(1, 80), (2, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 43, 15]]
** centroid: 6, normalized-entropy: 0.8246578332945033, [(2, 43), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [36, 54, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 54)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 364,3 => 36,1 => 600), Dict(2 => 362,3 => 28,1 => 610))
[ Info: ===== scores for single classifier: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.9659903994203424,"macro_f1":0.8996827117127869,"accuracy":0.959,"class_f1":{"2":0.9416785206258892,"3":0.7777777777777778,"1":0.9795918367346939},"class_precision":{"2":0.9706744868035191,"3":0.6363636363636364,"1":0.975609756097561},"class_recall":{"2":0.914364640883978,"3":1.0,"1":0.9836065573770492}}
[ Info: ===== scores for 1: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9674117251284174,"macro_f1":0.9497897791381403,"accuracy":0.968,"class_f1":{"2":0.9565217391304347,"3":0.9152542372881356,"1":0.9775933609958506},"class_precision":{"2":0.9411764705882353,"3":0.8709677419354839,"1":0.9899159663865547},"class_recall":{"2":0.9723756906077348,"3":0.9642857142857143,"1":0.9655737704918033}}
[ Info: ===== scores for 5: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9738272068178779,"macro_f1":0.9515331997252566,"accuracy":0.977,"class_f1":{"2":0.9687074829931973,"3":0.8999999999999999,"1":0.9858921161825727},"class_precision":{"2":0.9544235924932976,"3":0.84375,"1":0.9983193277310924},"class_recall":{"2":0.9834254143646409,"3":0.9642857142857143,"1":0.9737704918032787}}
[ Info: ===== scores for 7: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.973452844592234,"macro_f1":0.951512531304242,"accuracy":0.977,"class_f1":{"2":0.9686221009549796,"3":0.8999999999999999,"1":0.9859154929577465},"class_precision":{"2":0.9568733153638814,"3":0.84375,"1":0.9966499162479062},"class_recall":{"2":0.9806629834254144,"3":0.9642857142857143,"1":0.9754098360655737}}
[ Info: ===== scores for 9: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9838903480964888,"macro_f1":0.9518378493571277,"accuracy":0.976,"class_f1":{"2":0.9672131147540983,"3":0.9032258064516129,"1":0.9850746268656717},"class_precision":{"2":0.9567567567567568,"3":0.8235294117647058,"1":0.9966442953020134},"class_recall":{"2":0.9779005524861878,"3":1.0,"1":0.9737704918032787}}
[ Info: ===== scores for 11: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.983515985870845,"macro_f1":0.9473092231726228,"accuracy":0.976,"class_f1":{"2":0.9671232876712328,"3":0.888888888888889,"1":0.9859154929577465},"class_precision":{"2":0.9592391304347826,"3":0.8,"1":0.9966499162479062},"class_recall":{"2":0.9751381215469613,"3":1.0,"1":0.9754098360655737}}
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.981, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.981, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.979, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.981,"k":3,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.9810000000000001,"precision":0.981,"recall":0.981,"macro_recall":0.9763873613932486,"macro_f1":0.9642355539145514,"accuracy":0.981,"class_f1":{"2":0.9740791268758526,"3":0.9310344827586207,"1":0.9875930521091811},"class_precision":{"2":0.9622641509433962,"3":0.9,"1":0.996661101836394},"class_recall":{"2":0.9861878453038674,"3":0.9642857142857143,"1":0.978688524590164}}
Test Summary: | Pass  Total
AKNC          |    8      8
[198, 6, 2, 3, 2, 11, 30, 4, 7, 10, 1, 5, 10, 28, 2, 5, 3, 17, 2, 9, 8, 3, 19, 5, 1, 9, 1, 6, 17, 4, 1, 7, 8, 9, 1, 2, 3, 11, 2, 9, 12, 5, 17, 3, 50, 4, 7, 23, 24, 5, 6, 12, 10, 36, 8, 8, 2, 9, 3, 6, 10, 32, 15, 63, 3, 8, 3, 14, 10, 4, 20, 15, 12, 10, 4, 2, 135, 10, 69, 29, 16, 57, 6, 102, 24, 21, 2, 13, 4, 30, 4, 58, 4, 3, 24, 18, 38, 32, 12, 10, 3, 16, 89, 60, 10, 13, 86, 194, 24, 58, 1, 6, 109, 24, 11, 93, 84, 41, 31, 5, 51, 42, 5, 2, 11, 8, 22, 34, 4, 3, 193, 5, 17, 77, 57, 9, 82, 15, 46, 7, 12, 36, 7, 6, 51, 12, 4, 15, 1, 47, 5, 2, 12, 6, 71, 9, 8, 5, 18, 14, 7, 5, 7, 41, 13, 36, 79, 7, 5, 16, 3, 3, 1005, 2, 15, 58, 371, 8, 26, 6, 40, 11, 74, 25, 9, 8, 5, 2, 9, 50, 5, 18, 31, 56, 91, 15, 10, 60, 33, 11, 10, 5, 35, 34, 8, 32, 39, 91, 70, 45, 11, 209, 18, 33, 12, 13, 6, 3, 83, 8, 125, 29, 9, 19, 9, 18, 11, 27, 17, 31, 11, 8, 8, 21, 51, 3, 10, 90, 18, 4, 29, 26, 22, 18, 4, 47, 9, 101, 27, 5, 5, 7, 17, 155, 25, 58, 7, 1, 12, 6, 67, 67, 8, 489, 35, 91, 42, 7, 51, 24, 11, 102, 44, 21, 19, 1, 30, 88, 33, 17, 16, 32, 15, 284, 102, 37, 23, 53, 10, 150, 37, 26, 23, 36, 3, 53, 7, 8, 3, 28]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6079999999999999, speedup = 0.3776781026674946, eval_ratio = 0.075018)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39331907242063496,"recall":0.38454861111111116,"f1":null,"seconds":0.00013332441449165344,"exhaustive_search_seconds":0.0003266725689172745,"evaluations":490.390625,"distances_sum":1724.5787485180408}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5600198412698415,"recall":0.559027777777778,"f1":0.5594618055555558,"seconds":0.00022170133888721466,"exhaustive_search_seconds":0.0003266725689172745,"evaluations":658.2265625,"distances_sum":1645.5205032181536}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.671006944444444,"recall":0.671006944444444,"f1":0.671006944444444,"seconds":0.00030533038079738617,"exhaustive_search_seconds":0.0003266725689172745,"evaluations":821.4375,"distances_sum":1593.725008784003}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7508680555555551,"recall":0.7508680555555551,"f1":0.7508680555555551,"seconds":0.0005177706480026245,"exhaustive_search_seconds":0.0003266725689172745,"evaluations":947.1796875,"distances_sum":1568.1004188273112}
KCenters.DeloneInvIndex> reached performance {"precision":0.8124999999999991,"recall":0.8124999999999991,"f1":0.8124999999999991,"seconds":0.00043973512947559357,"exhaustive_search_seconds":0.0003266725689172745,"evaluations":1066.9765625,"distances_sum":1548.4230149580055}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7489999999999998, speedup = 0.8912359703113686, eval_ratio = 0.103729)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
