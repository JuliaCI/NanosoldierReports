Julia Version 1.5.0-DEV.868
Commit c3d6a463be (2020-05-06 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ────── v1.0.1
  Installed StaticNumbers ─ v0.3.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [c5e4b96a] + StaticNumbers v0.3.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [ae029012] + Requires v1.0.1
  [c5e4b96a] + StaticNumbers v0.3.2
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [cf7118a7] + UUIDs
    Testing StaticNumbers
Status `/tmp/jl_gTSrPe/Project.toml`
  [fdea26ae] SIMD v2.8.0
  [90137ffa] StaticArrays v0.12.3
  [c5e4b96a] StaticNumbers v0.3.2
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_gTSrPe/Manifest.toml`
  [ae029012] Requires v1.0.1
  [fdea26ae] SIMD v2.8.0
  [90137ffa] StaticArrays v0.12.3
  [c5e4b96a] StaticNumbers v0.3.2
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
Test Summary: | Pass  Total
simple tests  |   15     15
Skipping Base.active_repl
Skipping Base.active_repl_backend
*(::StaticInteger{false}, y::Number) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:174
*(y::Integer, x::Rational) in Base at rational.jl:316

*(x::Number, ::StaticInteger{false}) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:175
*(x::Rational, y::Integer) in Base at rational.jl:312

*(::StaticInteger{false}, y::Real) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:174
*(y::Integer, x::Rational) in Base at rational.jl:316

*(x::Real, ::StaticInteger{false}) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:175
*(x::Rational, y::Integer) in Base at rational.jl:312

Test Summary: | Pass  Total
ambiguities   |    2      2
static math: Error During Test at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:66
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:66 =# @eval ($f)(static($x), $y) ≈ $r
  MethodError: *(::StaticInteger{false}, ::Rational{Int64}) is ambiguous. Candidates:
    *(::StaticInteger{false}, y::Real) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:174
    *(y::Integer, x::Rational) in Base at rational.jl:316
    *(::StaticInteger{false}, y::Number) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:174
  Possible fix, define
    *(::StaticInteger{false}, ::Rational)
  Stacktrace:
   [1] top-level scope at none:1
   [2] eval at ./boot.jl:331 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:66 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:37
  
static math: Error During Test at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:66
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:66 =# @eval ($f)(static($x), $y) ≈ $r
  MethodError: *(::StaticInteger{false}, ::Rational{Int64}) is ambiguous. Candidates:
    *(::StaticInteger{false}, y::Real) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:174
    *(y::Integer, x::Rational) in Base at rational.jl:316
    *(::StaticInteger{false}, y::Number) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:174
  Possible fix, define
    *(::StaticInteger{false}, ::Rational)
  Stacktrace:
   [1] top-level scope at none:1
   [2] eval at ./boot.jl:331 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:66 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:37
  
static math: Error During Test at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:67
  Test threw exception
  Expression: #= /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:67 =# @eval ($f)($x, static($y)) ≈ $r
  MethodError: *(::Rational{Int64}, ::StaticInteger{false}) is ambiguous. Candidates:
    *(x::Rational, y::Integer) in Base at rational.jl:312
    *(x::Real, ::StaticInteger{false}) in StaticNumbers at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/src/StaticNumbers.jl:175
  Possible fix, define
    *(::Rational, ::StaticInteger{false})
  Stacktrace:
   [1] top-level scope at none:1
   [2] eval at ./boot.jl:331 [inlined]
   [3] macro expansion at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:67 [inlined]
   [4] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [5] top-level scope at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:37
  
Test Summary: |  Pass  Error  Total
static math   | 10304      3  10307
ERROR: LoadError: Some tests did not pass: 10304 passed, 0 failed, 3 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/StaticNumbers/uITGR/test/runtests.jl:36
ERROR: Package StaticNumbers errored during testing
Stacktrace:
 [1] pkgerror(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1557
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:314
 [5] #test#61 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:65
 [11] top-level scope at none:16
