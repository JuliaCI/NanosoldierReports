Julia Version 1.5.0-DEV.868
Commit c3d6a463be (2020-05-06 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_2mWtwc/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_2mWtwc/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.03846239060206396 -0.06220976310046397; -0.03846239060206396 0.0 -0.0382596706506247; 0.06220976310046397 0.0382596706506247 0.0])
dAA = so3([0.0 0.09291991957639213 0.01825537612324594; -0.09291991957639213 0.0 0.01859168431568955; -0.01825537612324594 -0.01859168431568955 0.0])
dAA = so3([0.0 0.14261017717876592 0.08801437150752715; -0.14261017717876592 0.0 -0.04387378897476444; -0.08801437150752715 0.04387378897476444 0.0])
dAA = Quaternion(0.9995463369940103, [0.01006199641105121, 0.018657390734397487, 0.021395751939689758])
dAA = SO3([0.9902417965203769 0.06173609060964717 -0.1249393434444646; -0.04901342033944814 0.9935287481605022 0.1024612668536457; 0.13045638754282987 -0.09533772440572966 0.9868595894322618])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9721126312422074 0.22899730858131198 0.05056940618464338; -0.23110827807528325 0.9720740938135886 0.04075438555012444; -0.039824565087764864 -0.05130486135841339 0.9978886787696133]), [0.382596706506247, -0.6220976310046397, -0.38462390602063956])
xj = SE3(SO3([0.9899404096764106 -0.10515709468009064 0.0946571219092505; 0.10997146217854116 0.9928155119085004 -0.04715545376916763; -0.08901832842743089 0.05709067132469954 0.9943924740522131]), [0.4387378897476444, 0.8801437150752714, -1.4261017717876592])
Dx = SE3(SO3([0.9404633773764827 -0.3339460345629279 0.06331415176179095; 0.3381611719126672 0.9380805184253862 -0.07517953685285916; -0.03428786409607465 0.09211398889666336 0.9951579550128082]), [-0.25112845433147307, 1.5265789525538185, -0.9752170221315484])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
