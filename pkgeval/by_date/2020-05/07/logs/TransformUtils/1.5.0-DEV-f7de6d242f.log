Julia Version 1.5.0-DEV.875
Commit f7de6d242f (2020-05-07 14:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ijI1sD/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ijI1sD/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.012761863560785583 -0.03321631387614573; -0.012761863560785583 0.0 0.025586929538083017; 0.03321631387614573 -0.025586929538083017 0.0])
dAA = so3([0.0 0.10299616910784491 -0.0020894007529476573; -0.10299616910784491 0.0 0.021257105729368852; 0.0020894007529476573 -0.021257105729368852 0.0])
dAA = so3([0.0 -0.20432005787557495 -0.011964512073365581; 0.20432005787557495 0.0 0.13386460999812175; 0.011964512073365581 -0.13386460999812175 0.0])
dAA = Quaternion(0.9984704809426296, [-0.012545372639116197, 0.052621290288960405, 0.01141543340678864])
dAA = SO3([0.9210459807373169 -0.3447513070026623 0.1811652220697731; 0.33858805289603777 0.9386927786048856 0.06491531276293236; -0.192438124610754 0.0015503918844780445 0.9813078846525695])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.967026375510626 0.25467096936640576 0.001639032872439066; -0.2543949740378539 0.9656359815416213 0.053201018189778376; 0.01196604575711397 -0.0518637495185676 0.9985824779330017]), [-0.25586929538083014, -0.3321631387614573, -0.12761863560785583])
xj = SE3(SO3([0.9639477828558962 -0.061173933504550214 0.25896413223993553; 0.045448235677905534 0.9967649233804257 0.06628835035041848; -0.2621814825668806 -0.05212904543529586 0.9636095852683478]), [-1.3386460999812175, -0.11964512073365581, 2.0432005787557492])
Dx = SE3(SO3([0.9174638522842311 -0.3133525725407936 0.2450923194101471; 0.3029736826869333 0.9496364579642547 0.0799846566800273; -0.25781200001337456 0.0008734913686849546 0.9661947058755458]), [-1.075161122468952, -0.18312359748533158, 2.177273498390279])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
