Julia Version 1.5.0-DEV.868
Commit c3d6a463be (2020-05-06 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_4YkrZx/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_4YkrZx/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171184253082059
curgen: 20 fitness: 0.21719728544781974
curgen: 30 fitness: 0.21722466841721666
curgen: 40 fitness: 0.21722466841721666
curgen: 50 fitness: 0.21722784851133936
CoordinateCreature{Array{Float64,1}}([0.22218726156796986], -0.21722784851133936) 0.22218726156796986 -0.21722784851133936
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257865632559111
curgen: 100 fitness: 3.258359526527388
curgen: 150 fitness: 3.258359526527388
curgen: 200 fitness: 3.2583797534203147
curgen: 250 fitness: 3.2583797534203147
curgen: 300 fitness: 3.2583996864582336
curgen: 350 fitness: 3.2584105452277905
curgen: 400 fitness: 3.2584105452277905
curgen: 450 fitness: 3.2584423880563875
curgen: 500 fitness: 3.2584631680651355
CoordinateCreature{Array{Float64,1}}([-0.22265118281507457, -0.2226487965275592, 0.22226700712431519, 0.2225194655525169, -0.2224683424492237, -0.22235192081662875, -0.22271113470596007, -0.22263755866874113, -0.2225745939963925, 0.2222587146492374, 0.22203389683433822, -0.22260722958971985, -0.2221528220520294, -0.22277282887477998, -0.22211162707735652], -3.2584631680651355) [-0.22265118281507457, -0.2226487965275592, 0.22226700712431519, 0.2225194655525169, -0.2224683424492237, -0.22235192081662875, -0.22271113470596007, -0.22263755866874113, -0.2225745939963925, 0.2222587146492374, 0.22203389683433822, -0.22260722958971985, -0.2221528220520294, -0.22277282887477998, -0.22211162707735652] -3.2584631680651355
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.001104657186743907
curgen: 100 fitness: -0.0010204039152768019
curgen: 150 fitness: -0.0010204039152768019
curgen: 200 fitness: -0.0009103983372824587
curgen: 250 fitness: -0.000714645432793759
curgen: 300 fitness: -0.00044448584156953075
curgen: 350 fitness: -0.00044294895513985466
curgen: 400 fitness: -0.0003275080269133923
curgen: 450 fitness: -0.0003275080269133923
curgen: 500 fitness: -0.0003275080269133923
CoordinateCreature{Array{Float64,1}}([7.243687361184544e-5, 9.713461053667883e-5, -0.00023301978386663057, -0.00025088716556028, -0.00037142628030448514, -0.00029830679452294085, -5.977585423603664e-5, 0.0002086627460780154, 0.0003990238000534985, 0.0004966059856453804, 2.0730903360832373e-6, -0.000669511495966937, -0.0005014993733364437, -1.7358890784755727e-5, 0.00037274700447704145], 0.0003275080269133923) [7.243687361184544e-5, 9.713461053667883e-5, -0.00023301978386663057, -0.00025088716556028, -0.00037142628030448514, -0.00029830679452294085, -5.977585423603664e-5, 0.0002086627460780154, 0.0003990238000534985, 0.0004966059856453804, 2.0730903360832373e-6, -0.000669511495966937, -0.0005014993733364437, -1.7358890784755727e-5, 0.00037274700447704145] 0.0003275080269133923
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
