Julia Version 1.5.0-DEV.862
Commit b472f88f55 (2020-05-06 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FillArrays ─── v0.8.8
  Installed ArrayLayouts ─ v0.2.6
Updating `~/.julia/environments/v1.5/Project.toml`
  [4c555306] + ArrayLayouts v0.2.6
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [4c555306] + ArrayLayouts v0.2.6
  [1a297f60] + FillArrays v0.8.8
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
    Testing ArrayLayouts
Status `/tmp/jl_5HlBvj/Project.toml`
  [4c555306] ArrayLayouts v0.2.6
  [1a297f60] FillArrays v0.8.8
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_5HlBvj/Manifest.toml`
  [4c555306] ArrayLayouts v0.2.6
  [1a297f60] FillArrays v0.8.8
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
Test Summary: | Pass  Broken  Total
MemoryLayout  |  162       2    164
Test Summary:   | Pass  Total
Matrix * Vector |  178    178
Test Summary:   | Pass  Total
Matrix * Matrix |   88     88
Test Summary: | Pass  Total
adjtrans      |  198    198
adjoint: Error During Test at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:287
  Test threw exception
  Expression: mul(V, b) ≈ V * b ≈ Matrix(V) * b
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s814",var"#s813"} where var"#s813"<:(StridedVecOrMat{T} where T) where var"#s814"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s13",S} where S where var"#s13"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s814",var"#s813"} where var"#s813"<:(StridedVecOrMat{T} where T) where var"#s814"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}) at ./subarray.jl:409
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/ArrayLayouts.jl:84
   [3] gemv!(::Char, ::Float64, ::Transpose{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:626
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:247 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:263 [inlined]
   [6] muladd!(::Float64, ::SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:80
   [7] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:94 [inlined]
   [8] copy(::MulAdd{RowMajor,DenseColumnMajor,ZerosLayout,Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false},Array{Float64,1},Zeros{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:82
   [9] materialize(::MulAdd{RowMajor,DenseColumnMajor,ZerosLayout,Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false},Array{Float64,1},Zeros{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:81
   [10] mul(::SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:407
   [11] macro expansion at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:287 [inlined]
   [12] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [13] macro expansion at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:280 [inlined]
   [14] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [15] top-level scope at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:234
  
adjoint: Error During Test at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:288
  Test threw exception
  Expression: mul(V', b) ≈ V' * b ≈ (Matrix(V))' * b
  MethodError: unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,Array{Float64,2}}) is ambiguous. Candidates:
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s814",var"#s813"} where var"#s813"<:(StridedVecOrMat{T} where T) where var"#s814"<:Real) where T in LinearAlgebra at /opt/julia/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl:208
    unsafe_convert(::Type{Ptr{T}}, A::Adjoint{var"#s13",S} where S where var"#s13"<:Real) where T<:Real in ArrayLayouts at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/ArrayLayouts.jl:83
  Possible fix, define
    unsafe_convert(::Type{Ptr{T}}, ::Adjoint{var"#s814",var"#s813"} where var"#s813"<:(StridedVecOrMat{T} where T) where var"#s814"<:Real) where T<:Real
  Stacktrace:
   [1] unsafe_convert(::Type{Ptr{Float64}}, ::SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}) at ./subarray.jl:409
   [2] unsafe_convert(::Type{Ptr{Float64}}, ::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/ArrayLayouts.jl:83
   [3] gemv!(::Char, ::Float64, ::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl:626
   [4] _gemv! at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:247 [inlined]
   [5] materialize! at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:261 [inlined]
   [6] muladd!(::Float64, ::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}, ::Array{Float64,1}, ::Float64, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:80
   [7] copyto! at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:94 [inlined]
   [8] copy(::MulAdd{ColumnMajor,DenseColumnMajor,ZerosLayout,Float64,Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}},Array{Float64,1},Zeros{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:82
   [9] materialize(::MulAdd{ColumnMajor,DenseColumnMajor,ZerosLayout,Float64,Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}},Array{Float64,1},Zeros{Float64,1,Tuple{Base.OneTo{Int64}}}}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:81
   [10] mul(::Adjoint{Float64,SubArray{Float64,2,Adjoint{Float64,Array{Float64,2}},Tuple{UnitRange{Int64},UnitRange{Int64}},false}}, ::Array{Float64,1}) at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/src/muladd.jl:407
   [11] macro expansion at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:288 [inlined]
   [12] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [13] macro expansion at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:280 [inlined]
   [14] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Test/src/Test.jl:1114 [inlined]
   [15] top-level scope at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:234
  
Test Summary:     | Pass  Error  Total
Mul               |   14      2     16
  Mixed types     |    5             5
  no allocation   |    2             2
  BigFloat        |    2             2
  Scalar * Vector |    1             1
  adjoint         |    4      2      6
ERROR: LoadError: LoadError: Some tests did not pass: 14 passed, 0 failed, 2 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/test_muladd.jl:233
in expression starting at /home/pkgeval/.julia/packages/ArrayLayouts/L5sKF/test/runtests.jl:7
ERROR: Package ArrayLayouts errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/Operations.jl:1515
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:316
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:303
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:297 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:296 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.5/Pkg/src/API.jl:295
 [11] top-level scope at none:16
