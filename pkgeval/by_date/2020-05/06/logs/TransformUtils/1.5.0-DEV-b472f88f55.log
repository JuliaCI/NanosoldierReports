Julia Version 1.5.0-DEV.862
Commit b472f88f55 (2020-05-06 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_uHpe2F/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_uHpe2F/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.08964209343047812 -0.0007965295755895477; -0.08964209343047812 0.0 0.040615906834417854; 0.0007965295755895477 -0.040615906834417854 0.0])
dAA = so3([0.0 0.03034413761608942 0.0010037220177839057; -0.03034413761608942 0.0 -0.06271087383505987; -0.0010037220177839057 0.06271087383505987 0.0])
dAA = so3([0.0 0.0752557002196748 0.048250406372509866; -0.0752557002196748 0.0 -0.024414765060636306; -0.048250406372509866 0.024414765060636306 0.0])
dAA = Quaternion(0.9943857139024983, [0.07775708451705582, -0.05926976095481624, 0.04047200551474139])
dAA = SO3([0.9990292524102421 -0.03721731559015211 0.02356744044006304; 0.03406604852175217 0.9919044726405492 0.12233160463996075; -0.027929503517723418 -0.12141000196004058 0.9922094306432067])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9971267314512381 0.07567352693991942 -0.0034349302531316507; -0.07528111881092618 0.9848713698329457 -0.15608054982589062; -0.008428201228364593 0.15589067388349567 0.9877383576738344]), [-0.40615906834417853, -0.007965295755895477, -0.8964209343047811])
xj = SE3(SO3([0.9368742790832912 -0.22930999406023847 -0.26397634707726514; 0.11401948494065291 0.9140179201266063 -0.3893209456750315; 0.33055429545844894 0.3346463331810555 0.8824656874023161]), [0.24414765060636306, 0.48250406372509863, -0.7525570021967479])
Dx = SE3(SO3([0.9228128951714553 -0.3002798831431394 -0.24134695416520052; 0.23472143919277652 0.9350056274260762 -0.2658389035954698; 0.3054868352131538 0.18867026384969182 0.9333173763786567]), [0.6103026168144146, 0.5546872782726994, 0.06331343850560478])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
