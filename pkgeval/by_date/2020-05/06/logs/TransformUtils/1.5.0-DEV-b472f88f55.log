Julia Version 1.5.0-DEV.862
Commit b472f88f55 (2020-05-06 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_h4j39K/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_h4j39K/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.07213394544664574 -0.14518442689828354; -0.07213394544664574 0.0 -0.027481309496332696; 0.14518442689828354 0.027481309496332696 0.0])
dAA = so3([0.0 0.03637728598536443 0.04831531385421387; -0.03637728598536443 0.0 0.15975107508719272; -0.04831531385421387 -0.15975107508719272 0.0])
dAA = so3([0.0 0.03930984270257357 -0.024811493809704; -0.03930984270257357 0.0 0.11877375315887634; 0.024811493809704 -0.11877375315887634 0.0])
dAA = Quaternion(0.9962521112915196, [0.02553829951420525, -0.04791459348725295, -0.06733288747754557])
dAA = SO3([0.9928019359978534 -0.09403231543196072 0.07417708226547094; 0.08703966816414724 0.9919053665234997 0.09245452951455053; -0.08227035945460147 -0.0853326872680452 0.9929501097430952])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9887424129011475 0.0644484531769835 0.13503643143059932; -0.11195993933070313 0.9173804907883366 0.3819397951327093; -0.09926435873707169 -0.3927587452928895 0.9142686449181516]), [0.27481309496332695, -1.4518442689828353, -0.7213394544664573])
xj = SE3(SO3([0.9156324299671047 0.31681605805186214 -0.24747694549798818; -0.34947394926954445 0.9315449235437308 -0.1004590175238271; 0.1987088623450976 0.1784702798237955 0.9636717009672605]), [-1.1877375315887633, -0.24811493809703997, -0.3930984270257357])
Dx = SE3(SO3([0.9247269924980362 0.1912380226799128 -0.329101820151475; -0.3396341327618084 0.8049036808593383 -0.48659913728059856; 0.1718390095661372 0.5617455680471057 0.8092671200356303]), [-1.6134379334438609, 0.88109914467875, 0.5623549960023427])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
