Julia Version 1.5.0-DEV.868
Commit c3d6a463be (2020-05-06 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_DhoFxZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_DhoFxZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.00898366545496181 0.04911193535046882; 0.00898366545496181 0.0 0.03331491431992218; -0.04911193535046882 -0.03331491431992218 0.0])
dAA = so3([0.0 0.057085441910761384 -0.0501499745731806; -0.057085441910761384 0.0 0.043664932428503576; 0.0501499745731806 -0.043664932428503576 0.0])
dAA = so3([0.0 -0.07986024847364115 0.07445258665173854; 0.07986024847364115 0.0 -0.15359660997425753; -0.07445258665173854 0.15359660997425753 0.0])
dAA = Quaternion(0.9965205057905836, [-0.03688133912966608, 0.03280123578164586, -0.06716194825999977])
dAA = SO3([0.9850664785102624 0.13027195455287496 0.1125755336312695; -0.13730497879562018 0.9888800508119792 0.057127820753395224; -0.10388154654858435 -0.07173188247265957 0.991999577279952])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9820290365722233 0.1483903547038093 -0.11661592498414837; -0.1347587945485899 0.9839226735008244 0.11720170588690668; 0.13213265539162447 -0.09938045684070744 0.9862375404421039]), [-0.3331491431992218, 0.4911193535046882, 0.08983665454961809])
xj = SE3(SO3([0.9309989565361205 0.3177591386552442 0.17963872836816683; -0.34684669556807823 0.92345608646379 0.16409212700945192; -0.11374670413756877 -0.21507669835214258 0.9699503601338482]), [1.5359660997425753, 0.7445258665173854, 0.7986024847364114])
Dx = SE3(SO3([0.9459789968650852 0.15918621649907824 0.28245970680229016; -0.1918148631876825 0.9771361932875163 0.09171650902575977; -0.26140159859958345 -0.14094186122046992 0.954884598265828]), [1.8950277962376678, 0.45625361565135775, 0.5107425417631406])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
