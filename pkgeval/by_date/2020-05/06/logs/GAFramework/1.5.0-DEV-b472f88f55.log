Julia Version 1.5.0-DEV.862
Commit b472f88f55 (2020-05-06 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_rhA9yH/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_rhA9yH/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172023875869642
curgen: 20 fitness: 0.21721852548341888
curgen: 30 fitness: 0.21721852548341888
curgen: 40 fitness: 0.21723183191328668
curgen: 50 fitness: 0.21723183191328668
CoordinateCreature{Array{Float64,1}}([-0.22246612694954826], -0.21723333010180565) -0.22246612694954826 -0.21723333010180565
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257740260688951
curgen: 100 fitness: 3.2579510388475987
curgen: 150 fitness: 3.2580798020382207
curgen: 200 fitness: 3.258234539849688
curgen: 250 fitness: 3.258324029184774
curgen: 300 fitness: 3.2584010795459077
curgen: 350 fitness: 3.2584407271215436
curgen: 400 fitness: 3.2584407271215436
curgen: 450 fitness: 3.2584598516244156
curgen: 500 fitness: 3.2584616155258503
CoordinateCreature{Array{Float64,1}}([-0.2228578441255834, -0.22307661978879603, 0.2226203835814736, -0.2228438254597839, 0.22290166115500168, -0.22261440154092582, 0.222545022669368, -0.22213174111107806, -0.22277572184900676, -0.2225293510211379, 0.22240760737318072, -0.22268285347810246, 0.22226893907953277, -0.22268544306330523, -0.22244647419465124], -3.2584616155258503) [-0.2228578441255834, -0.22307661978879603, 0.2226203835814736, -0.2228438254597839, 0.22290166115500168, -0.22261440154092582, 0.222545022669368, -0.22213174111107806, -0.22277572184900676, -0.2225293510211379, 0.22240760737318072, -0.22268285347810246, 0.22226893907953277, -0.22268544306330523, -0.22244647419465124] -3.2584616155258503
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004121876751440823
curgen: 100 fitness: -0.004121876751440823
curgen: 150 fitness: -0.003707992054131637
curgen: 200 fitness: -0.0024785348850571154
curgen: 250 fitness: -0.0023722949965474527
curgen: 300 fitness: -0.0017035380300569614
curgen: 350 fitness: -0.0016967495238020547
curgen: 400 fitness: -0.0016967495238020547
curgen: 450 fitness: -0.0015312035178283168
curgen: 500 fitness: -0.0015312035178283168
CoordinateCreature{Array{Float64,1}}([-0.000192856754805511, -0.0011472355751329134, 0.00020753156283657723, 0.00033118878655023814, 0.0005893912019531046, -0.0008901456048386327, 0.000631345689758773, 0.000994781535201841, 0.0007218215104959917, 0.0016742934862158105, -1.0320497631659915e-5, -0.0004944427788121214, -4.2293416801959486e-5, 0.0003276149477861837, 7.805983752821313e-5], 0.0015312035178283168) [-0.000192856754805511, -0.0011472355751329134, 0.00020753156283657723, 0.00033118878655023814, 0.0005893912019531046, -0.0008901456048386327, 0.000631345689758773, 0.000994781535201841, 0.0007218215104959917, 0.0016742934862158105, -1.0320497631659915e-5, -0.0004944427788121214, -4.2293416801959486e-5, 0.0003276149477861837, 7.805983752821313e-5] 0.0015312035178283168
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
