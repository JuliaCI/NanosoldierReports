Julia Version 1.5.0-DEV.862
Commit b472f88f55 (2020-05-06 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.3.0
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_4V5dmx/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_4V5dmx/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722259949905318
curgen: 20 fitness: 0.2172326518501739
curgen: 30 fitness: 0.2172329820331278
curgen: 40 fitness: 0.2172329820331278
curgen: 50 fitness: 0.2172329820331278
CoordinateCreature{Array{Float64,1}}([-0.2224273997123222], -0.2172329820331278) -0.2224273997123222 -0.2172329820331278
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257972049385463
curgen: 100 fitness: 3.258174517032841
curgen: 150 fitness: 3.25821597795736
curgen: 200 fitness: 3.2582818261981377
curgen: 250 fitness: 3.258378923070179
curgen: 300 fitness: 3.2584130524249058
curgen: 350 fitness: 3.258454735900828
curgen: 400 fitness: 3.258460336287126
curgen: 450 fitness: 3.258460336287126
curgen: 500 fitness: 3.2584621218959895
CoordinateCreature{Array{Float64,1}}([0.22295576404025214, 0.22257854392482557, 0.22252996353641036, 0.22257711325148724, -0.22270104446591196, 0.2225721509265203, 0.22264830332027657, 0.22190321691069, 0.22255959383334364, 0.2225778678452005, -0.22250861837743197, 0.2225939392626656, 0.22258712745316245, -0.22277139075126914, 0.22201981143901167], -3.2584621218959895) [0.22295576404025214, 0.22257854392482557, 0.22252996353641036, 0.22257711325148724, -0.22270104446591196, 0.2225721509265203, 0.22264830332027657, 0.22190321691069, 0.22255959383334364, 0.2225778678452005, -0.22250861837743197, 0.2225939392626656, 0.22258712745316245, -0.22277139075126914, 0.22201981143901167] -3.2584621218959895
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0024800690156894234
curgen: 100 fitness: -0.0024041099713087988
curgen: 150 fitness: -0.0024041099713087988
curgen: 200 fitness: -0.0023809078699628117
curgen: 250 fitness: -0.002137557631584741
curgen: 300 fitness: -0.002137557631584741
curgen: 350 fitness: -0.002137557631584741
curgen: 400 fitness: -0.002137557631584741
curgen: 450 fitness: -0.0021094500903586777
curgen: 500 fitness: -0.0019391898743492675
CoordinateCreature{Array{Float64,1}}([4.7643114724908384e-5, -2.752431586320426e-5, 0.000376124421630189, 4.252483355298667e-5, -0.0002458917552636485, 0.0008997838541883595, 0.0002341522815502998, 0.00035119549705194984, -8.41856374132297e-5, -0.001277748721854711, -0.0003957824732969176, -5.379917509916366e-5, -0.002431082551803518, 0.0001604420157578848, -0.0009192084740183674], 0.0019391898743492675) [4.7643114724908384e-5, -2.752431586320426e-5, 0.000376124421630189, 4.252483355298667e-5, -0.0002458917552636485, 0.0008997838541883595, 0.0002341522815502998, 0.00035119549705194984, -8.41856374132297e-5, -0.001277748721854711, -0.0003957824732969176, -5.379917509916366e-5, -0.002431082551803518, 0.0001604420157578848, -0.0009192084740183674] 0.0019391898743492675
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
