Julia Version 1.5.0-DEV.868
Commit c3d6a463be (2020-05-06 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_064nCt/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_064nCt/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723315325956674
curgen: 20 fitness: 0.21723315325956674
curgen: 30 fitness: 0.21723315325956674
curgen: 40 fitness: 0.21723315325956674
curgen: 50 fitness: 0.21723315325956674
CoordinateCreature{Array{Float64,1}}([-0.22244462288782962], -0.21723315325956674) -0.22244462288782962 -0.21723315325956674
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580852840685908
curgen: 100 fitness: 3.2582525902756343
curgen: 150 fitness: 3.2582684653881415
curgen: 200 fitness: 3.2583401420943674
curgen: 250 fitness: 3.2584223003532946
curgen: 300 fitness: 3.2584232245712808
curgen: 350 fitness: 3.2584232245712808
curgen: 400 fitness: 3.2584580260488396
curgen: 450 fitness: 3.2584580260488396
curgen: 500 fitness: 3.2584727080895166
CoordinateCreature{Array{Float64,1}}([0.22253338392942268, -0.2223510837764937, -0.22295937492310008, 0.2224486086227565, -0.2226357818685041, -0.22256399543108601, -0.22254773890225696, 0.22248145266149152, 0.22247993641538089, 0.22251968379533105, 0.22233231945111642, -0.22235822919892456, 0.22251368735896973, 0.22317744837200046, -0.22259553264806847], -3.2584727080895166) [0.22253338392942268, -0.2223510837764937, -0.22295937492310008, 0.2224486086227565, -0.2226357818685041, -0.22256399543108601, -0.22254773890225696, 0.22248145266149152, 0.22247993641538089, 0.22251968379533105, 0.22233231945111642, -0.22235822919892456, 0.22251368735896973, 0.22317744837200046, -0.22259553264806847] -3.2584727080895166
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0019125344315682469
curgen: 100 fitness: -0.0017410926833747453
curgen: 150 fitness: -0.001717562546048157
curgen: 200 fitness: -0.001717562546048157
curgen: 250 fitness: -0.001717562546048157
curgen: 300 fitness: -0.001717562546048157
curgen: 350 fitness: -0.0014546247249995758
curgen: 400 fitness: -0.0004924250371800554
curgen: 450 fitness: -0.000470155920339721
curgen: 500 fitness: -0.000470155920339721
CoordinateCreature{Array{Float64,1}}([0.0001575913604533507, 0.0004439862956091358, 0.00013511255226633916, -0.0009556862339104948, -0.00040959326368053637, -0.00032769696557910294, 0.00012037765572376897, -0.0006441761391847919, -0.0002808565634523051, -4.109471310232061e-5, 0.0004248724287293633, 9.646396952374056e-6, 0.00048570149171673754, 3.6343238416005404e-5, 0.00011521378471260059], 0.000470155920339721) [0.0001575913604533507, 0.0004439862956091358, 0.00013511255226633916, -0.0009556862339104948, -0.00040959326368053637, -0.00032769696557910294, 0.00012037765572376897, -0.0006441761391847919, -0.0002808565634523051, -4.109471310232061e-5, 0.0004248724287293633, 9.646396952374056e-6, 0.00048570149171673754, 3.6343238416005404e-5, 0.00011521378471260059] 0.000470155920339721
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
