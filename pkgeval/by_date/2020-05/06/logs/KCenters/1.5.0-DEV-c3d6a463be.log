Julia Version 1.5.0-DEV.868
Commit c3d6a463be (2020-05-06 16:24 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed Reexport ──────────────────── v0.2.0
  Installed Compat ────────────────────── v3.9.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed JSON ──────────────────────── v0.21.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataStructures ────────────── v0.17.15
  Installed Parsers ───────────────────── v1.0.3
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed OrderedCollections ────────── v1.2.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataValueInterfaces ───────── v1.0.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed DataFrames ────────────────── v0.20.2
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.3
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_1jIWT0/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_1jIWT0/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.3
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9364293802777927
[ Info: 0.8321307849884033
[ Info: 0.5561528046429157
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3383602980275949
mean(cdnet.distances) = 0.36497890612731376
mean(crand.distances) = 0.34104316256940365
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.6591796875,"f1":null,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.546875,"distances_sum":1794.3662807698759}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8657686063936071,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.71875,"distances_sum":2244.2790617486903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.537109375,"f1":null,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.3203125,"distances_sum":1422.6394202877095}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8657686063936071,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.71875,"distances_sum":2244.2790617486903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9560528013653017,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.875,"distances_sum":2887.8576354281377}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9585622710622714,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":2870.4690497813503}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9355940934065938,"seconds":5.3998082876205444e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.84375,"distances_sum":2735.1506744906305}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9585622710622714,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":2870.4690497813503}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.971949404761905,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":2965.3294312819025}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755208333333336,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":3005.2625506301542}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9828869047619053,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":3071.079747782575}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723042582417585,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":2983.901665079399}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9828869047619053,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":3071.079747782575}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9828869047619053,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.7974525690078735e-6,"evaluations":8.984375,"distances_sum":3071.079747782575}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8663497960372969,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5546875,"distances_sum":2190.22501325598}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.7017954267954273,"seconds":4.129484295845032e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.546875,"distances_sum":1464.0187413292708}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7840336746586752,"seconds":7.927417755126953e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.765625,"distances_sum":1755.1487286847857}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8663497960372969,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5546875,"distances_sum":2190.22501325598}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9663919413919417,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2953.615841222449}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9593463827838833,"seconds":9.16607677936554e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.796875,"distances_sum":2920.7795533173403}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.95136217948718,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.828125,"distances_sum":2824.886711169294}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.929739531302032,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.5625,"distances_sum":2679.3520494855734}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9663919413919417,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8828125,"distances_sum":2953.615841222449}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9763965201465205,"seconds":9.002164006233215e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":3043.410400367902}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708905677655679,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9296875,"distances_sum":2977.6692321699284}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406597,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9140625,"distances_sum":2952.0101399646405}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9723786630036633,"seconds":8.32974910736084e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.8984375,"distances_sum":2997.1187859822726}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9763965201465205,"seconds":9.002164006233215e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":3043.410400367902}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9763965201465205,"seconds":9.002164006233215e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.9375,"distances_sum":3043.410400367902}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8485465922965931,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.078125,"distances_sum":2173.9642842125404}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.49609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.49609375,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.34375,"distances_sum":1358.10413227003}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8485465922965931,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.078125,"distances_sum":2173.9642842125404}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.928233745421246,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5625,"distances_sum":2692.055877376979}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.928233745421246,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.5625,"distances_sum":2692.055877376979}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969494047619048,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.84375,"distances_sum":2948.9709042938007}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9614239926739931,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.796875,"distances_sum":2897.2947411650625}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969494047619048,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.84375,"distances_sum":2948.9709042938007}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969494047619048,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.84375,"distances_sum":2948.9709042938007}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.576171875,"f1":null,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.1796875,"distances_sum":1546.3465912303063}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.576171875,"f1":null,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.1796875,"distances_sum":1546.3465912303063}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8504880536130544,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.0234375,"distances_sum":2113.9851483634516}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8504880536130544,"seconds":4.7013163566589355e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.0234375,"distances_sum":2113.9851483634516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9022123709623717,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4453125,"distances_sum":2504.206119802096}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8639969405594417,"seconds":4.880130290985107e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2890625,"distances_sum":2234.182881226623}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8555465367965376,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.140625,"distances_sum":2178.808103552797}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9022123709623717,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4453125,"distances_sum":2504.206119802096}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.833984375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9022123709623717,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4453125,"distances_sum":2504.206119802096}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2236328125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.8203125,"distances_sum":598.1055643151112}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2236328125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":6.8203125,"distances_sum":598.1055643151112}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.4375,"distances_sum":531.446619884252}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.251953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.251953125,"f1":null,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.375,"distances_sum":456.8548927405486}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2626953125,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.1497329473495483e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.4375,"distances_sum":531.446619884252}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.8766374250749259,"seconds":8.586794137954712e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.9765625,"distances_sum":1526.8096777677952}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.598630428314209e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.359375,"distances_sum":626.7511295944862}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7099609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7099609375,"f1":0.8216356560106568,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.9296875,"distances_sum":1357.8232049936196}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.79296875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.79296875,"f1":0.8766374250749259,"seconds":8.586794137954712e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.9765625,"distances_sum":1526.8096777677952}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.878131764069265,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.984375,"distances_sum":1538.8332718304898}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8949779387279397,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0,"distances_sum":1606.6225202020837}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453582875457878,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.765625,"distances_sum":1896.7410275325649}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9233922327672335,"seconds":5.31412661075592e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":1792.8023978160109}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9453582875457878,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.765625,"distances_sum":1896.7410275325649}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9453582875457878,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.765625,"distances_sum":1896.7410275325649}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8163190975690984,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.6015625,"distances_sum":1379.034646108782}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.330409526824951e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.90625,"distances_sum":750.5731582228311}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8163190975690984,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.6015625,"distances_sum":1379.034646108782}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9437245046620054,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7421875,"distances_sum":2001.8767755867455}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9368048618048623,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6875,"distances_sum":1974.932036564377}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8193060411810421,"seconds":4.6603381633758545e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.5703125,"distances_sum":1400.2649881857185}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8913237803862812,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1953125,"distances_sum":1652.0864080818974}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9437245046620054,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7421875,"distances_sum":2001.8767755867455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500858516483521,"seconds":5.941838026046753e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7890625,"distances_sum":2037.063029170155}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.955288461538462,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7421875,"distances_sum":2089.204976888458}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9557348901098904,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.796875,"distances_sum":2070.500636918296}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9610920329670336,"seconds":6.712973117828369e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8359375,"distances_sum":2099.072751468504}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616872710622714,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2066.4128837521152}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9478136446886453,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.75,"distances_sum":2029.7425074550574}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616872710622714,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2066.4128837521152}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9616872710622714,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2066.4128837521152}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.67872416973114e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":5.828125,"distances_sum":771.370481112801}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8524735680985688,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":7.9453125,"distances_sum":1622.6591667826729}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8694513819513827,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.046875,"distances_sum":1672.855300565449}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7822265625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7822265625,"f1":0.8694513819513827,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.046875,"distances_sum":1672.855300565449}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9362637362637369,"seconds":5.822628736495972e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8203125,"distances_sum":2055.041285369979}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9404132326007333,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.7578125,"distances_sum":2084.893991004476}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.94413086913087,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.703125,"distances_sum":2149.8191536159416}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532967032967039,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.796875,"distances_sum":2177.0067971732333}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9020037254412262,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.46875,"distances_sum":1866.1304939274944}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9532967032967039,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.796875,"distances_sum":2177.0067971732333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9726419413919418,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.9140625,"distances_sum":2289.709733198328}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9746279761904766,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2285.399968652704}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9726018772893776,"seconds":5.841255187988281e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.90625,"distances_sum":2291.916612657481}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9691277472527475,"seconds":0.0002976898103952408,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.890625,"distances_sum":2277.184452786738}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683836996337001,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.859375,"distances_sum":2267.237996895181}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9677483974358979,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.8984375,"distances_sum":2262.00350594934}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9746279761904766,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2285.399968652704}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9746279761904766,"seconds":6.619840860366821e-6,"exhaustive_search_seconds":1.5236437320709229e-6,"evaluations":8.921875,"distances_sum":2285.399968652704}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.87587932900433,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.2265625,"distances_sum":1645.5573818231308}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.212890625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.212890625,"f1":null,"seconds":3.0566006898880005e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":5.8671875,"distances_sum":431.88335617221446}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4091796875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4091796875,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.546875,"distances_sum":745.31976186996}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.87587932900433,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.2265625,"distances_sum":1645.5573818231308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518315018315022,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.765625,"distances_sum":2117.535414823346}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8986638361638369,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.3515625,"distances_sum":1778.8349946598023}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9518315018315022,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.765625,"distances_sum":2117.535414823346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9740899725274729,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":2210.503100915234}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.974313186813187,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9453125,"distances_sum":2203.9462216714005}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720982142857149,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":2215.58098391873}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740899725274729,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":2210.503100915234}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9740899725274729,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.9296875,"distances_sum":2210.503100915234}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8228198884448893,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5546875,"distances_sum":1491.5851086437194}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.8228198884448893,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.5546875,"distances_sum":1491.5851086437194}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9039065101565108,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.765625,"distances_sum":1861.6753797321903}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9298279845154852,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7578125,"distances_sum":2021.738872369226}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9298279845154852,"seconds":5.345791578292847e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.7578125,"distances_sum":2021.738872369226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9375,"distances_sum":2252.485190475579}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9476851273726279,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":2141.3081452299984}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9375,"distances_sum":2252.485190475579}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.971262591575092,"seconds":5.561858415603638e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9375,"distances_sum":2252.485190475579}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3779296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.1953125,"distances_sum":757.018472708796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.21120023727417e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.125,"distances_sum":447.6781300929829}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3779296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.1953125,"distances_sum":757.018472708796}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8529434107559114,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.4140625,"distances_sum":1714.2200633115297}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8529434107559114,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.4140625,"distances_sum":1714.2200633115297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8660807942057951,"seconds":5.11854887008667e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.515625,"distances_sum":1769.6203232494083}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9568509615384618,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":2237.69202850031}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568509615384618,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":2237.69202850031}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9568509615384618,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.890625,"distances_sum":2237.69202850031}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7727600524475533,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7578125,"distances_sum":1388.9673612768354}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4462890625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.4462890625,"f1":0.606030774780775,"seconds":3.7364661693573e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.0859375,"distances_sum":956.0299452473693}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6474609375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6474609375,"f1":0.7727600524475533,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7578125,"distances_sum":1388.9673612768354}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9232257326007332,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":1990.5892216907662}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8357423826173833,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.03125,"distances_sum":1636.517194822215}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9232257326007332,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.796875,"distances_sum":1990.5892216907662}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541723901098907,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2203.472311623733}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541723901098907,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2203.472311623733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9541723901098907,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2203.472311623733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.777736326173827,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.3359375,"distances_sum":1808.2783001689604}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.777736326173827,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.3359375,"distances_sum":1808.2783001689604}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9427915834165841,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":2737.8645314231658}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8853053196803207,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.3125,"distances_sum":2290.694200535616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8485821470196478,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.84375,"distances_sum":1999.5537848499237}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7765104686979695,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":7.4375,"distances_sum":1742.3910750081952}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9427915834165841,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.71875,"distances_sum":2737.8645314231658}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.966709852647353,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2886.7168922014876}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559237637362642,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.828125,"distances_sum":2786.4213218503724}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9599931318681322,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.796875,"distances_sum":2851.802448440281}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.966709852647353,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2886.7168922014876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.966709852647353,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.4137476682662964e-6,"evaluations":8.875,"distances_sum":2886.7168922014876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7820096570096577,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.34375,"distances_sum":1762.8405830615197}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7820096570096577,"seconds":4.4852495193481445e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.34375,"distances_sum":1762.8405830615197}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9389365842490849,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.703125,"distances_sum":2720.8330060934395}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8555215617715627,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.9921875,"distances_sum":2103.446792861355}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9389365842490849,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.703125,"distances_sum":2720.8330060934395}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9484806859806866,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2902.779727333722}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9589686355311361,"seconds":8.736364543437958e-5,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2927.993413140094}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190482,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":3061.146797061994}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9410287629037636,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.703125,"distances_sum":2811.3198173788624}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190482,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":3061.146797061994}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190482,"seconds":5.239620804786682e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":3061.146797061994}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.29296875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.29296875,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.1015625,"distances_sum":768.9774000771536}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.29296875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.29296875,"f1":null,"seconds":3.207474946975708e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":6.1015625,"distances_sum":768.9774000771536}}, n: 9
mean(cfft.distances) = 0.5801858557506481
mean(cdnet.distances) = 0.40243675524469147
mean(crand.distances) = 0.7380659175213872
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8622222222222223
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8822222222222221
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8155555555555556
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8822222222222224
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.888888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 1, 3, 2, 3, 2, 3, 2, 3, 2, 3, 1]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5525991888840993] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 1, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 4, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 12]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 4), (3, 12)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 11: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
finished with 13 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.24772825453559066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187] ***
*** starting iteration: 2; err: [Inf, 0.24772825453559066, 0.17622336036422187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047] ***
*** starting iteration: 3; err: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365] ***
*** starting iteration: 4; err: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602] ***
*** starting iteration: 5; err: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602, 0.15125191855166029] ***
*** starting iteration: 6; err: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602, 0.15125191855166029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602, 0.15125191855166029, 0.14986829279275896] ***
*** starting iteration: 7; err: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602, 0.15125191855166029, 0.14986829279275896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602, 0.15125191855166029, 0.14986829279275896, 0.14897985956785423] ***
*** finished computation of 7 references, err: [Inf, 0.24772825453559066, 0.17622336036422187, 0.16011491252596047, 0.15577748243196365, 0.15277807268540602, 0.15125191855166029, 0.14986829279275896, 0.14897985956785423] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 91, 24]]
** centroid: 1, normalized-entropy: 0.7389821181149047, [(2, 91), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 40, 0]]
** centroid: 2, normalized-entropy: 0.940285958670631, [(1, 72), (2, 40)]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 42, 0]]
** centroid: 5, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [23, 76, 0]]
** centroid: 6, normalized-entropy: 0.7820392866349247, [(1, 23), (2, 76)]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20184650035804366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20184650035804366, 0.15104230943726035] ***
*** starting iteration: 2; err: [Inf, 0.20184650035804366, 0.15104230943726035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20184650035804366, 0.15104230943726035, 0.14740353314116508] ***
*** starting iteration: 3; err: [Inf, 0.20184650035804366, 0.15104230943726035, 0.14740353314116508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20184650035804366, 0.15104230943726035, 0.14740353314116508, 0.14647532792528742] ***
*** finished computation of 7 references, err: [Inf, 0.20184650035804366, 0.15104230943726035, 0.14740353314116508, 0.14647532792528742] ***
*** center 1: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 86, 24]]
** centroid: 2, normalized-entropy: 0.7568336324184036, [(2, 86), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 7, 0]]
** centroid: 3, normalized-entropy: 0.4280696292293062, [(1, 73), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [88, 30, 0]]
** centroid: 4, normalized-entropy: 0.8179252501386403, [(1, 88), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 54, 0]]
** centroid: 5, normalized-entropy: 0.9864497419502243, [(1, 41), (2, 54)]
*** center 6: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1887934084205345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1887934084205345, 0.15089107364048898] ***
*** starting iteration: 2; err: [Inf, 0.1887934084205345, 0.15089107364048898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1887934084205345, 0.15089107364048898, 0.1492067622453689] ***
*** starting iteration: 3; err: [Inf, 0.1887934084205345, 0.15089107364048898, 0.1492067622453689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1887934084205345, 0.15089107364048898, 0.1492067622453689, 0.1483888260704623] ***
*** finished computation of 7 references, err: [Inf, 0.1887934084205345, 0.15089107364048898, 0.1492067622453689, 0.1483888260704623] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 52, 0]]
** centroid: 2, normalized-entropy: 0.9972943816462351, [(1, 46), (2, 52)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 106, 21]]
** centroid: 4, normalized-entropy: 0.646966308330803, [(2, 106), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [86, 50, 0]]
** centroid: 5, normalized-entropy: 0.9488482942421287, [(1, 86), (2, 50)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 38, 0]]
** centroid: 6, normalized-entropy: 0.9845543528607513, [(1, 51), (2, 38)]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1926114722929973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1926114722929973, 0.1601659558019482] ***
*** starting iteration: 2; err: [Inf, 0.1926114722929973, 0.1601659558019482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965] ***
*** starting iteration: 3; err: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965, 0.15411645481820221] ***
*** starting iteration: 4; err: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965, 0.15411645481820221] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965, 0.15411645481820221, 0.15278195657849736] ***
*** starting iteration: 5; err: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965, 0.15411645481820221, 0.15278195657849736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965, 0.15411645481820221, 0.15278195657849736, 0.15197384715878937] ***
*** finished computation of 7 references, err: [Inf, 0.1926114722929973, 0.1601659558019482, 0.15612519827965965, 0.15411645481820221, 0.15278195657849736, 0.15197384715878937] ***
*** center 1: selecting labels [1] (freq >= 2) [from [131, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [84, 23, 0]]
** centroid: 2, normalized-entropy: 0.7508446639457529, [(1, 84), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 47, 0]]
** centroid: 3, normalized-entropy: 0.9846841570760806, [(1, 63), (2, 47)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 62, 0]]
** centroid: 4, normalized-entropy: 0.2006223243127146, [(1, 2), (2, 62)]
*** center 5: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 71, 4]]
** centroid: 6, normalized-entropy: 0.3003914173647818, [(2, 71), (3, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 50, 19]]
** centroid: 7, normalized-entropy: 0.849054424254048, [(2, 50), (3, 19)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19780207934302055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19780207934302055, 0.15362674607357746] ***
*** starting iteration: 2; err: [Inf, 0.19780207934302055, 0.15362674607357746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19780207934302055, 0.15362674607357746, 0.15012412562245864] ***
*** starting iteration: 3; err: [Inf, 0.19780207934302055, 0.15362674607357746, 0.15012412562245864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19780207934302055, 0.15362674607357746, 0.15012412562245864, 0.14938021175398575] ***
*** finished computation of 7 references, err: [Inf, 0.19780207934302055, 0.15362674607357746, 0.15012412562245864, 0.14938021175398575] ***
*** center 1: selecting labels [1] (freq >= 2) [from [96, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [85, 27, 0]]
** centroid: 2, normalized-entropy: 0.7968174923244049, [(1, 85), (2, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 80, 21]]
** centroid: 3, normalized-entropy: 0.7374895672137457, [(2, 80), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [42, 56, 0]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(1, 42), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 82, 0]]
** centroid: 6, normalized-entropy: 0.3591016256485496, [(1, 6), (2, 82)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19240118829097816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19240118829097816, 0.15376509237068256] ***
*** starting iteration: 2; err: [Inf, 0.19240118829097816, 0.15376509237068256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19240118829097816, 0.15376509237068256, 0.1487506053160361] ***
*** starting iteration: 3; err: [Inf, 0.19240118829097816, 0.15376509237068256, 0.1487506053160361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19240118829097816, 0.15376509237068256, 0.1487506053160361, 0.1473864159313613] ***
*** finished computation of 7 references, err: [Inf, 0.19240118829097816, 0.15376509237068256, 0.1487506053160361, 0.1473864159313613] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 124, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 29, 0]]
** centroid: 3, normalized-entropy: 0.8838226609360483, [(1, 67), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [66, 29, 0]]
** centroid: 4, normalized-entropy: 0.8876297058429742, [(1, 66), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [96, 3, 0]]
** centroid: 5, normalized-entropy: 0.19590927087360496, [(1, 96), (2, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 68, 23]]
** centroid: 7, normalized-entropy: 0.8156034512499668, [(2, 68), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19385791991140927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19385791991140927, 0.1635602025913673] ***
*** starting iteration: 2; err: [Inf, 0.19385791991140927, 0.1635602025913673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19385791991140927, 0.1635602025913673, 0.15541645527017434] ***
*** starting iteration: 3; err: [Inf, 0.19385791991140927, 0.1635602025913673, 0.15541645527017434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19385791991140927, 0.1635602025913673, 0.15541645527017434, 0.15132492121837632] ***
*** finished computation of 7 references, err: [Inf, 0.19385791991140927, 0.1635602025913673, 0.15541645527017434, 0.15132492121837632] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 63, 0]]
** centroid: 1, normalized-entropy: 0.9674756088157442, [(1, 41), (2, 63)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 103, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 63, 24]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 63), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [85, 15, 0]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(1, 85), (2, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 4, 0]]
** centroid: 6, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2004002484030787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004002484030787, 0.1592616935852619] ***
*** starting iteration: 2; err: [Inf, 0.2004002484030787, 0.1592616935852619] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004002484030787, 0.1592616935852619, 0.154740383555677] ***
*** starting iteration: 3; err: [Inf, 0.2004002484030787, 0.1592616935852619, 0.154740383555677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2004002484030787, 0.1592616935852619, 0.154740383555677, 0.15224355696861086] ***
*** finished computation of 7 references, err: [Inf, 0.2004002484030787, 0.1592616935852619, 0.154740383555677, 0.15224355696861086] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [103, 43, 0]]
** centroid: 3, normalized-entropy: 0.8744893619480879, [(1, 103), (2, 43)]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [68, 9, 0]]
** centroid: 5, normalized-entropy: 0.5203346157857599, [(1, 68), (2, 9)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 109, 21]]
** centroid: 6, normalized-entropy: 0.6379773724204627, [(2, 109), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [83, 10, 0]]
** centroid: 7, normalized-entropy: 0.49241092131589825, [(1, 83), (2, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2025246146250924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025246146250924, 0.15695796113089844] ***
*** starting iteration: 2; err: [Inf, 0.2025246146250924, 0.15695796113089844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025246146250924, 0.15695796113089844, 0.15197326820218068] ***
*** starting iteration: 3; err: [Inf, 0.2025246146250924, 0.15695796113089844, 0.15197326820218068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025246146250924, 0.15695796113089844, 0.15197326820218068, 0.14970108017924408] ***
*** finished computation of 7 references, err: [Inf, 0.2025246146250924, 0.15695796113089844, 0.15197326820218068, 0.14970108017924408] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [17, 60, 0]]
** centroid: 1, normalized-entropy: 0.7615877869576693, [(1, 17), (2, 60)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 23]]
** centroid: 2, normalized-entropy: 0.8607781176165941, [(2, 58), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [94, 20, 0]]
** centroid: 3, normalized-entropy: 0.6699960320994334, [(1, 94), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 9, 0]]
** centroid: 4, normalized-entropy: 0.569190343735683, [(1, 58), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 106, 0]]
** centroid: 5, normalized-entropy: 0.3351253992461406, [(1, 7), (2, 106)]
*** center 6: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24086644987970054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24086644987970054, 0.2014572371179154] ***
*** finished computation of 7 references, err: [Inf, 0.24086644987970054, 0.2014572371179154] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 54, 24]]
** centroid: 1, normalized-entropy: 0.8904916402194913, [(2, 54), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [97, 2, 0]]
** centroid: 2, normalized-entropy: 0.14257333025989857, [(1, 97), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [114, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [10, 78, 0]]
** centroid: 4, normalized-entropy: 0.5107878229540133, [(1, 10), (2, 78)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [60, 37, 0]]
** centroid: 5, normalized-entropy: 0.9590550044058676, [(1, 60), (2, 37)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33762030698766726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33762030698766726, 0.2314587581827343] ***
*** finished computation of 7 references, err: [Inf, 0.33762030698766726, 0.2314587581827343] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [132, 49, 0]]
** centroid: 1, normalized-entropy: 0.842493367099995, [(1, 132), (2, 49)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 139, 21]]
** centroid: 2, normalized-entropy: 0.5608563762191029, [(2, 139), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 46, 0]]
** centroid: 6, normalized-entropy: 0.9668100575025925, [(1, 71), (2, 46)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 12, 0]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(1, 30), (2, 12)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3262349705266273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3262349705266273, 0.2131901159044774] ***
*** finished computation of 7 references, err: [Inf, 0.3262349705266273, 0.2131901159044774] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 9, 0]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(1, 31), (2, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [180, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 23]]
** centroid: 3, normalized-entropy: 0.8423074510400833, [(2, 62), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 88, 0]]
** centroid: 4, normalized-entropy: 0.30217361847879526, [(1, 5), (2, 88)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 8, 0]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(1, 64), (2, 8)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [39, 86, 0]]
** centroid: 6, normalized-entropy: 0.8954686411420222, [(1, 39), (2, 86)]
*** center 7: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3718833501783532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3718833501783532, 0.3101863235811348] ***
*** starting iteration: 2; err: [Inf, 0.3718833501783532, 0.3101863235811348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3718833501783532, 0.3101863235811348, 0.3026540584375595] ***
*** starting iteration: 3; err: [Inf, 0.3718833501783532, 0.3101863235811348, 0.3026540584375595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3718833501783532, 0.3101863235811348, 0.3026540584375595, 0.2998520518295109] ***
*** finished computation of 3 references, err: [Inf, 0.3718833501783532, 0.3101863235811348, 0.3026540584375595, 0.2998520518295109] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [71, 158, 24]]
** centroid: 1, normalized-entropy: 0.7955921215910869, [(1, 71), (2, 158), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 91, 0]]
** centroid: 2, normalized-entropy: 0.9929170598659379, [(1, 111), (2, 91)]
*** center 3: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36854062439675545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36854062439675545, 0.30175054102725557] ***
*** starting iteration: 2; err: [Inf, 0.36854062439675545, 0.30175054102725557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36854062439675545, 0.30175054102725557, 0.29570580843551225] ***
*** starting iteration: 3; err: [Inf, 0.36854062439675545, 0.30175054102725557, 0.29570580843551225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36854062439675545, 0.30175054102725557, 0.29570580843551225, 0.29515743771682434] ***
*** finished computation of 3 references, err: [Inf, 0.36854062439675545, 0.30175054102725557, 0.29570580843551225, 0.29515743771682434] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [129, 76, 0]]
** centroid: 1, normalized-entropy: 0.951232260620996, [(1, 129), (2, 76)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [68, 170, 21]]
** centroid: 2, normalized-entropy: 0.7565572420129224, [(1, 68), (2, 170), (3, 21)]
*** center 3: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35624017237756833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35624017237756833, 0.30260025386487704] ***
*** starting iteration: 2; err: [Inf, 0.35624017237756833, 0.30260025386487704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35624017237756833, 0.30260025386487704, 0.29731699807019246] ***
*** starting iteration: 3; err: [Inf, 0.35624017237756833, 0.30260025386487704, 0.29731699807019246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35624017237756833, 0.30260025386487704, 0.29731699807019246, 0.29663293302963967] ***
*** finished computation of 3 references, err: [Inf, 0.35624017237756833, 0.30260025386487704, 0.29731699807019246, 0.29663293302963967] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [147, 54, 0]]
** centroid: 1, normalized-entropy: 0.8395304981054318, [(1, 147), (2, 54)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 188, 23]]
** centroid: 2, normalized-entropy: 0.49690663370857324, [(2, 188), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [244, 11, 0]]
** centroid: 3, normalized-entropy: 0.25649595383786, [(1, 244), (2, 11)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2660222738553342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2660222738553342, 0.203106152643967] ***
*** starting iteration: 2; err: [Inf, 0.2660222738553342, 0.203106152643967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2660222738553342, 0.203106152643967, 0.19872143159847003] ***
*** starting iteration: 3; err: [Inf, 0.2660222738553342, 0.203106152643967, 0.19872143159847003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2660222738553342, 0.203106152643967, 0.19872143159847003, 0.19714177472834327] ***
*** finished computation of 7 references, err: [Inf, 0.2660222738553342, 0.203106152643967, 0.19872143159847003, 0.19714177472834327] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 33, 0]]
** centroid: 1, normalized-entropy: 0.9149263727797277, [(1, 67), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [89, 2, 0]]
** centroid: 2, normalized-entropy: 0.15240699892386778, [(1, 89), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 95, 24]]
** centroid: 3, normalized-entropy: 0.7252767313016596, [(2, 95), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 60, 0]]
** centroid: 6, normalized-entropy: 0.9926410394727402, [(1, 49), (2, 60)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 59, 0]]
** centroid: 7, normalized-entropy: 0.9979288148772633, [(1, 53), (2, 59)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31885348985389134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31885348985389134, 0.20656440534239365] ***
*** starting iteration: 2; err: [Inf, 0.31885348985389134, 0.20656440534239365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31885348985389134, 0.20656440534239365, 0.19833118208813882] ***
*** starting iteration: 3; err: [Inf, 0.31885348985389134, 0.20656440534239365, 0.19833118208813882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31885348985389134, 0.20656440534239365, 0.19833118208813882, 0.19696841456730482] ***
*** finished computation of 7 references, err: [Inf, 0.31885348985389134, 0.20656440534239365, 0.19833118208813882, 0.19696841456730482] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 21]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 77), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 43, 0]]
** centroid: 3, normalized-entropy: 0.8420956603976347, [(1, 116), (2, 43)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [81, 9, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 81), (2, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [10, 51, 0]]
** centroid: 7, normalized-entropy: 0.6436394131461666, [(1, 10), (2, 51)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2852782442847426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852782442847426, 0.21632721302737629] ***
*** starting iteration: 2; err: [Inf, 0.2852782442847426, 0.21632721302737629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852782442847426, 0.21632721302737629, 0.20270336050235818] ***
*** starting iteration: 3; err: [Inf, 0.2852782442847426, 0.21632721302737629, 0.20270336050235818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2852782442847426, 0.21632721302737629, 0.20270336050235818, 0.19670359965209952] ***
*** finished computation of 7 references, err: [Inf, 0.2852782442847426, 0.21632721302737629, 0.20270336050235818, 0.19670359965209952] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [127, 19, 0]]
** centroid: 1, normalized-entropy: 0.557813750828694, [(1, 127), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [86, 3, 0]]
** centroid: 2, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 40, 0]]
** centroid: 3, normalized-entropy: 0.9953251070631713, [(1, 47), (2, 40)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 30, 21]]
** centroid: 4, normalized-entropy: 0.9774178175281716, [(2, 30), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [131, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 78, 1]]
** centroid: 6, normalized-entropy: 0.09794058271817412, [(2, 78), (3, 1)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 83, 1]]
** centroid: 7, normalized-entropy: 0.09317131799548928, [(2, 83), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.387702813288113] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.387702813288113, 0.32083843846164933] ***
*** starting iteration: 2; err: [Inf, 0.387702813288113, 0.32083843846164933] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.387702813288113, 0.32083843846164933, 0.3020479836383717] ***
*** starting iteration: 3; err: [Inf, 0.387702813288113, 0.32083843846164933, 0.3020479836383717] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.387702813288113, 0.32083843846164933, 0.3020479836383717, 0.2989959971596104] ***
*** starting iteration: 4; err: [Inf, 0.387702813288113, 0.32083843846164933, 0.3020479836383717, 0.2989959971596104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.387702813288113, 0.32083843846164933, 0.3020479836383717, 0.2989959971596104, 0.298155725350486] ***
*** finished computation of 3 references, err: [Inf, 0.387702813288113, 0.32083843846164933, 0.3020479836383717, 0.2989959971596104, 0.298155725350486] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [83, 166, 24]]
** centroid: 1, normalized-entropy: 0.7994059805404834, [(1, 83), (2, 166), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [193, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [117, 83, 0]]
** centroid: 3, normalized-entropy: 0.9790514648094594, [(1, 117), (2, 83)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3895905163289904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3895905163289904, 0.30621627232023535] ***
*** starting iteration: 2; err: [Inf, 0.3895905163289904, 0.30621627232023535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3895905163289904, 0.30621627232023535, 0.3032576528097178] ***
*** starting iteration: 3; err: [Inf, 0.3895905163289904, 0.30621627232023535, 0.3032576528097178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3895905163289904, 0.30621627232023535, 0.3032576528097178, 0.30236045777311793] ***
*** finished computation of 3 references, err: [Inf, 0.3895905163289904, 0.30621627232023535, 0.3032576528097178, 0.30236045777311793] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [110, 146, 21]]
** centroid: 1, normalized-entropy: 0.8190788371371441, [(1, 110), (2, 146), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [180, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [110, 100, 0]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(1, 110), (2, 100)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4963419238486602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4963419238486602, 0.3052851265907913] ***
*** starting iteration: 2; err: [Inf, 0.4963419238486602, 0.3052851265907913] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4963419238486602, 0.3052851265907913, 0.2975032526100504] ***
*** starting iteration: 3; err: [Inf, 0.4963419238486602, 0.3052851265907913, 0.2975032526100504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4963419238486602, 0.3052851265907913, 0.2975032526100504, 0.2966772373123416] ***
*** finished computation of 3 references, err: [Inf, 0.4963419238486602, 0.3052851265907913, 0.2975032526100504, 0.2966772373123416] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [247, 11, 0]]
** centroid: 1, normalized-entropy: 0.25424875152237963, [(1, 247), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [144, 57, 0]]
** centroid: 2, normalized-entropy: 0.8602858652332406, [(1, 144), (2, 57)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 185, 23]]
** centroid: 3, normalized-entropy: 0.5016536835986449, [(2, 185), (3, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4511934984699115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4511934984699115, 0.3080154461681272] ***
*** finished computation of 3 references, err: [Inf, 0.4511934984699115, 0.3080154461681272] ***
*** center 1: selecting labels [1] (freq >= 1) [from [183, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [147, 109, 0]]
** centroid: 2, normalized-entropy: 0.9840471637045684, [(1, 147), (2, 109)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [63, 140, 24]]
** centroid: 3, normalized-entropy: 0.8113677390736276, [(1, 63), (2, 140), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41460002398863993] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41460002398863993, 0.3136547608733892] ***
*** finished computation of 3 references, err: [Inf, 0.41460002398863993, 0.3136547608733892] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [195, 69, 0]]
** centroid: 1, normalized-entropy: 0.828797154590015, [(1, 195), (2, 69)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [5, 174, 21]]
** centroid: 2, normalized-entropy: 0.40963355052688455, [(1, 5), (2, 174), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [200, 3, 0]]
** centroid: 3, normalized-entropy: 0.11102002823390317, [(1, 200), (2, 3)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40976666996459377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40976666996459377, 0.338437267802544] ***
*** finished computation of 3 references, err: [Inf, 0.40976666996459377, 0.338437267802544] ***
*** center 1: selecting labels [1] (freq >= 1) [from [159, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [128, 78, 0]]
** centroid: 2, normalized-entropy: 0.9570763860606195, [(1, 128), (2, 78)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [104, 175, 23]]
** centroid: 3, normalized-entropy: 0.8004631501877598, [(1, 104), (2, 175), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4044651225175675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4044651225175675, 0.3071539739297854] ***
*** starting iteration: 2; err: [Inf, 0.4044651225175675, 0.3071539739297854] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4044651225175675, 0.3071539739297854, 0.3057079021161696] ***
*** starting iteration: 3; err: [Inf, 0.4044651225175675, 0.3071539739297854, 0.3057079021161696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4044651225175675, 0.3071539739297854, 0.3057079021161696, 0.3053524290454817] ***
*** finished computation of 3 references, err: [Inf, 0.4044651225175675, 0.3071539739297854, 0.3057079021161696, 0.3053524290454817] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [96, 158, 24]]
** centroid: 1, normalized-entropy: 0.8190120916766291, [(1, 96), (2, 158), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [110, 91, 0]]
** centroid: 2, normalized-entropy: 0.9935448217968694, [(1, 110), (2, 91)]
*** center 3: selecting labels [1] (freq >= 1) [from [187, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42764551120473704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42764551120473704, 0.2966126344561845] ***
*** starting iteration: 2; err: [Inf, 0.42764551120473704, 0.2966126344561845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42764551120473704, 0.2966126344561845, 0.2951814839016015] ***
*** starting iteration: 3; err: [Inf, 0.42764551120473704, 0.2966126344561845, 0.2951814839016015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42764551120473704, 0.2966126344561845, 0.2951814839016015, 0.2951933542033308] ***
*** finished computation of 3 references, err: [Inf, 0.42764551120473704, 0.2966126344561845, 0.2951814839016015, 0.2951933542033308] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [65, 167, 21]]
** centroid: 1, normalized-entropy: 0.7554353459041743, [(1, 65), (2, 167), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [208, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [127, 79, 0]]
** centroid: 3, normalized-entropy: 0.9604731760858582, [(1, 127), (2, 79)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4175049489876465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4175049489876465, 0.29780247211009486] ***
*** starting iteration: 2; err: [Inf, 0.4175049489876465, 0.29780247211009486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4175049489876465, 0.29780247211009486, 0.29693249224390517] ***
*** finished computation of 3 references, err: [Inf, 0.4175049489876465, 0.29780247211009486, 0.29693249224390517] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [257, 13, 0]]
** centroid: 1, normalized-entropy: 0.27847772490764255, [(1, 257), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [134, 52, 0]]
** centroid: 2, normalized-entropy: 0.8548640967818041, [(1, 134), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 188, 23]]
** centroid: 3, normalized-entropy: 0.49690663370857324, [(2, 188), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3376443170810918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3376443170810918, 0.23849185735445927] ***
*** starting iteration: 2; err: [Inf, 0.3376443170810918, 0.23849185735445927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3376443170810918, 0.23849185735445927, 0.23572090215276223] ***
*** starting iteration: 3; err: [Inf, 0.3376443170810918, 0.23849185735445927, 0.23572090215276223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3376443170810918, 0.23849185735445927, 0.23572090215276223, 0.23504015794946803] ***
*** finished computation of 3 references, err: [Inf, 0.3376443170810918, 0.23849185735445927, 0.23572090215276223, 0.23504015794946803] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [242, 9, 0]]
** centroid: 1, normalized-entropy: 0.2229609705506418, [(1, 242), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [151, 51, 0]]
** centroid: 2, normalized-entropy: 0.8151777793922245, [(1, 151), (2, 51)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 189, 24]]
** centroid: 3, normalized-entropy: 0.5079353563991225, [(2, 189), (3, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3657535668783661] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3657535668783661, 0.23886225010775242] ***
*** starting iteration: 2; err: [Inf, 0.3657535668783661, 0.23886225010775242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3657535668783661, 0.23886225010775242, 0.23776856673786465] ***
*** starting iteration: 3; err: [Inf, 0.3657535668783661, 0.23886225010775242, 0.23776856673786465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3657535668783661, 0.23886225010775242, 0.23776856673786465, 0.23781017117576486] ***
*** finished computation of 3 references, err: [Inf, 0.3657535668783661, 0.23886225010775242, 0.23776856673786465, 0.23781017117576486] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [257, 7, 0]]
** centroid: 1, normalized-entropy: 0.17660247694470366, [(1, 257), (2, 7)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 177, 21]]
** centroid: 2, normalized-entropy: 0.48791799258948565, [(2, 177), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [143, 62, 0]]
** centroid: 3, normalized-entropy: 0.8842519414405878, [(1, 143), (2, 62)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30679903283674753] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30679903283674753, 0.24338077401639013] ***
*** starting iteration: 2; err: [Inf, 0.30679903283674753, 0.24338077401639013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30679903283674753, 0.24338077401639013, 0.2367733164964107] ***
*** starting iteration: 3; err: [Inf, 0.30679903283674753, 0.24338077401639013, 0.2367733164964107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30679903283674753, 0.24338077401639013, 0.2367733164964107, 0.23538665468993036] ***
*** starting iteration: 4; err: [Inf, 0.30679903283674753, 0.24338077401639013, 0.2367733164964107, 0.23538665468993036] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30679903283674753, 0.24338077401639013, 0.2367733164964107, 0.23538665468993036, 0.23516854576520746] ***
*** finished computation of 3 references, err: [Inf, 0.30679903283674753, 0.24338077401639013, 0.2367733164964107, 0.23538665468993036, 0.23516854576520746] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [95, 156, 23]]
** centroid: 1, normalized-entropy: 0.8155108706647078, [(1, 95), (2, 156), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [192, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 97, 0]]
** centroid: 3, normalized-entropy: 0.9991249430255706, [(1, 104), (2, 97)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2215738481976226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215738481976226, 0.19179131897088061] ***
*** starting iteration: 2; err: [Inf, 0.2215738481976226, 0.19179131897088061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215738481976226, 0.19179131897088061, 0.19033578414380461] ***
*** starting iteration: 3; err: [Inf, 0.2215738481976226, 0.19179131897088061, 0.19033578414380461] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2215738481976226, 0.19179131897088061, 0.19033578414380461, 0.18968838647248465] ***
*** finished computation of 7 references, err: [Inf, 0.2215738481976226, 0.19179131897088061, 0.19033578414380461, 0.18968838647248465] ***
*** center 1: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 24]]
** centroid: 2, normalized-entropy: 0.8323322690121193, [(2, 67), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [37, 76, 0]]
** centroid: 4, normalized-entropy: 0.9122828071055981, [(1, 37), (2, 76)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [52, 34, 0]]
** centroid: 5, normalized-entropy: 0.9681647320759545, [(1, 52), (2, 34)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 72, 0]]
** centroid: 6, normalized-entropy: 0.34673146824966367, [(1, 5), (2, 72)]
*** center 7: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24397786856367848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24397786856367848, 0.18973821149845754] ***
*** starting iteration: 2; err: [Inf, 0.24397786856367848, 0.18973821149845754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24397786856367848, 0.18973821149845754, 0.1858486115298551] ***
*** starting iteration: 3; err: [Inf, 0.24397786856367848, 0.18973821149845754, 0.1858486115298551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24397786856367848, 0.18973821149845754, 0.1858486115298551, 0.18519186620730377] ***
*** finished computation of 7 references, err: [Inf, 0.24397786856367848, 0.18973821149845754, 0.1858486115298551, 0.18519186620730377] ***
*** center 1: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 81, 21]]
** centroid: 2, normalized-entropy: 0.7335379291086666, [(2, 81), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [81, 4, 0]]
** centroid: 3, normalized-entropy: 0.2737691686829417, [(1, 81), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 16, 0]]
** centroid: 4, normalized-entropy: 0.6157667047517474, [(1, 89), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [26, 75, 0]]
** centroid: 5, normalized-entropy: 0.8228368841492258, [(1, 26), (2, 75)]
*** center 6: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 70, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 7), (2, 70)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22656607490055253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22656607490055253, 0.19373318998263855] ***
*** starting iteration: 2; err: [Inf, 0.22656607490055253, 0.19373318998263855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22656607490055253, 0.19373318998263855, 0.19146868813017764] ***
*** starting iteration: 3; err: [Inf, 0.22656607490055253, 0.19373318998263855, 0.19146868813017764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22656607490055253, 0.19373318998263855, 0.19146868813017764, 0.1908935129586984] ***
*** finished computation of 7 references, err: [Inf, 0.22656607490055253, 0.19373318998263855, 0.19146868813017764, 0.1908935129586984] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [74, 16, 0]]
** centroid: 1, normalized-entropy: 0.6751914401458716, [(1, 74), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [73, 16, 0]]
** centroid: 2, normalized-entropy: 0.6795851972782937, [(1, 73), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 50, 23]]
** centroid: 3, normalized-entropy: 0.8989377852081333, [(2, 50), (3, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [106, 1, 0]]
** centroid: 5, normalized-entropy: 0.07642429309554791, [(1, 106), (2, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 120, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [43, 50, 0]]
** centroid: 7, normalized-entropy: 0.9959094138937685, [(1, 43), (2, 50)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22714203874952532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392] ***
*** starting iteration: 2; err: [Inf, 0.22714203874952532, 0.17504628367586392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479] ***
*** starting iteration: 3; err: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032] ***
*** starting iteration: 4; err: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643] ***
*** starting iteration: 5; err: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643, 0.1491693677310762] ***
*** starting iteration: 6; err: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643, 0.1491693677310762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643, 0.1491693677310762, 0.1480930074448096] ***
*** starting iteration: 7; err: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643, 0.1491693677310762, 0.1480930074448096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643, 0.1491693677310762, 0.1480930074448096, 0.1478180523532479] ***
*** finished computation of 7 references, err: [Inf, 0.22714203874952532, 0.17504628367586392, 0.1625424498498479, 0.1554314423221032, 0.15162676783745643, 0.1491693677310762, 0.1480930074448096, 0.1478180523532479] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [2, 90, 0]]
** centroid: 1, normalized-entropy: 0.1510969705171136, [(1, 2), (2, 90)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 109, 24]]
** centroid: 2, normalized-entropy: 0.6810629511553796, [(2, 109), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 8, 0]]
** centroid: 3, normalized-entropy: 0.48977901368693744, [(1, 67), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 36, 0]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(1, 63), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [99, 6, 0]]
** centroid: 5, normalized-entropy: 0.3159971329784246, [(1, 99), (2, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20594286002676704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20594286002676704, 0.1593769767281154] ***
*** starting iteration: 2; err: [Inf, 0.20594286002676704, 0.1593769767281154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20594286002676704, 0.1593769767281154, 0.15312316223303193] ***
*** starting iteration: 3; err: [Inf, 0.20594286002676704, 0.1593769767281154, 0.15312316223303193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20594286002676704, 0.1593769767281154, 0.15312316223303193, 0.15075733180323997] ***
*** starting iteration: 4; err: [Inf, 0.20594286002676704, 0.1593769767281154, 0.15312316223303193, 0.15075733180323997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20594286002676704, 0.1593769767281154, 0.15312316223303193, 0.15075733180323997, 0.15011720240501494] ***
*** finished computation of 7 references, err: [Inf, 0.20594286002676704, 0.1593769767281154, 0.15312316223303193, 0.15075733180323997, 0.15011720240501494] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [91, 20, 0]]
** centroid: 1, normalized-entropy: 0.680471054135434, [(1, 91), (2, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 29, 0]]
** centroid: 2, normalized-entropy: 0.8687212463394044, [(1, 71), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 76, 19]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 76), (3, 19)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 85, 2]]
** centroid: 4, normalized-entropy: 0.15790637433488164, [(2, 85), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [95, 36, 0]]
** centroid: 7, normalized-entropy: 0.8482811477713184, [(1, 95), (2, 36)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39144073411853036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903] ***
*** starting iteration: 2; err: [Inf, 0.39144073411853036, 0.2221375427786903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212] ***
*** starting iteration: 3; err: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572] ***
*** starting iteration: 4; err: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255] ***
*** starting iteration: 5; err: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255, 0.15315302948549814] ***
*** starting iteration: 6; err: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255, 0.15315302948549814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255, 0.15315302948549814, 0.15207701363524692] ***
*** starting iteration: 7; err: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255, 0.15315302948549814, 0.15207701363524692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255, 0.15315302948549814, 0.15207701363524692, 0.1515739353951709] ***
*** finished computation of 7 references, err: [Inf, 0.39144073411853036, 0.2221375427786903, 0.17100743369396212, 0.1589194489419572, 0.15493184881427255, 0.15315302948549814, 0.15207701363524692, 0.1515739353951709] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 66, 0]]
** centroid: 1, normalized-entropy: 0.11190990870168394, [(1, 1), (2, 66)]
*** center 2: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 104, 23]]
** centroid: 3, normalized-entropy: 0.6824826735754346, [(2, 104), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [121, 30, 0]]
** centroid: 4, normalized-entropy: 0.7192711659576518, [(1, 121), (2, 30)]
*** center 5: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 50, 0]]
** centroid: 6, normalized-entropy: 0.9774178175281716, [(1, 35), (2, 50)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 3, 0]]
** centroid: 7, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2968950998737245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2968950998737245, 0.23807505685234773] ***
*** finished computation of 3 references, err: [Inf, 0.2968950998737245, 0.23807505685234773] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [131, 68, 0]]
** centroid: 1, normalized-entropy: 0.9264442868430002, [(1, 131), (2, 68)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [4, 181, 24]]
** centroid: 2, normalized-entropy: 0.4085250623492949, [(1, 4), (2, 181), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [258, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3163736506987983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3163736506987983, 0.24542729614296932] ***
*** finished computation of 3 references, err: [Inf, 0.3163736506987983, 0.24542729614296932] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [95, 175, 21]]
** centroid: 1, normalized-entropy: 0.7837011144423247, [(1, 95), (2, 175), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [162, 71, 0]]
** centroid: 2, normalized-entropy: 0.8869855182502389, [(1, 162), (2, 71)]
*** center 3: selecting labels [1] (freq >= 1) [from [143, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31412640503695655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31412640503695655, 0.24376166470885008] ***
*** finished computation of 3 references, err: [Inf, 0.31412640503695655, 0.24376166470885008] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [172, 13, 0]]
** centroid: 1, normalized-entropy: 0.3669314381130956, [(1, 172), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [219, 18, 0]]
** centroid: 2, normalized-entropy: 0.3877431810559867, [(1, 219), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 222, 23]]
** centroid: 3, normalized-entropy: 0.4492818274963061, [(2, 222), (3, 23)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9580089071107035, 0.9450048851246455, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9210108311904719, 0.9029598460736185, 0.8729927532322742, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5309814997492833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5309814997492833, 0.3553726942608463] ***
*** finished computation of 3 references, err: [Inf, 0.5309814997492833, 0.3553726942608463] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [85, 109, 1]]
** centroid: 1, normalized-entropy: 0.650016479375171, [(1, 85), (2, 109), (3, 1)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [41, 76, 23]]
** centroid: 2, normalized-entropy: 0.8993253516864752, [(1, 41), (2, 76), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [267, 64, 0]]
** centroid: 3, normalized-entropy: 0.7084341930290396, [(1, 267), (2, 64)]
finished with 8 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3570896715450769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3570896715450769, 0.33500246949580453] ***
*** finished computation of 3 references, err: [Inf, 0.3570896715450769, 0.33500246949580453] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 39, 0]]
** centroid: 1, normalized-entropy: 0.5836753280239112, [(1, 240), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [115, 76, 0]]
** centroid: 2, normalized-entropy: 0.9697123522225778, [(1, 115), (2, 76)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [45, 131, 21]]
** centroid: 3, normalized-entropy: 0.7711874875700631, [(1, 45), (2, 131), (3, 21)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41081460533493286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41081460533493286, 0.32922141980156416] ***
*** finished computation of 3 references, err: [Inf, 0.41081460533493286, 0.32922141980156416] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 105, 0]]
** centroid: 1, normalized-entropy: 0.9798687566511527, [(1, 75), (2, 105)]
*** center 2: selecting labels [1] (freq >= 1) [from [216, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [100, 148, 23]]
** centroid: 3, normalized-entropy: 0.8261122919709644, [(1, 100), (2, 148), (3, 23)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9580089071107035, 0.9450048851246455, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9210108311904719, 0.9029598460736185, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 15
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9580089071107035, 0.9450048851246455, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9210108311904719, 0.9029598460736185, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2059842020373892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935] ***
*** starting iteration: 2; err: [Inf, 0.2059842020373892, 0.17121925857057935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118] ***
*** starting iteration: 3; err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197] ***
*** starting iteration: 4; err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637] ***
*** starting iteration: 5; err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862] ***
*** starting iteration: 6; err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862, 0.1516512674125689] ***
*** starting iteration: 7; err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862, 0.1516512674125689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862, 0.1516512674125689, 0.15007312071590764] ***
*** starting iteration: 8; err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862, 0.1516512674125689, 0.15007312071590764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862, 0.1516512674125689, 0.15007312071590764, 0.14936759594867044] ***
*** finished computation of 7 references, err: [Inf, 0.2059842020373892, 0.17121925857057935, 0.16229483313850118, 0.15770268193362197, 0.15480707647165637, 0.15308890349228862, 0.1516512674125689, 0.15007312071590764, 0.14936759594867044] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 96, 24]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 96), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [10, 56, 0]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(1, 10), (2, 56)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [46, 42, 0]]
** centroid: 4, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
*** center 5: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 55, 0]]
** centroid: 7, normalized-entropy: 1.0, [(1, 55), (2, 55)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25204758130773525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25204758130773525, 0.15948750475362905] ***
*** starting iteration: 2; err: [Inf, 0.25204758130773525, 0.15948750475362905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192] ***
*** starting iteration: 3; err: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192, 0.14825775328258434] ***
*** starting iteration: 4; err: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192, 0.14825775328258434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192, 0.14825775328258434, 0.1463852592066211] ***
*** starting iteration: 5; err: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192, 0.14825775328258434, 0.1463852592066211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192, 0.14825775328258434, 0.1463852592066211, 0.14539590349066248] ***
*** finished computation of 7 references, err: [Inf, 0.25204758130773525, 0.15948750475362905, 0.15138482696808192, 0.14825775328258434, 0.1463852592066211, 0.14539590349066248] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 51, 0]]
** centroid: 1, normalized-entropy: 0.9931536200741918, [(1, 62), (2, 51)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 87, 21]]
** centroid: 2, normalized-entropy: 0.710676853856123, [(2, 87), (3, 21)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [72, 32, 0]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(1, 72), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [91, 5, 0]]
** centroid: 5, normalized-entropy: 0.29518174309075856, [(1, 91), (2, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19966026965523143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966026965523143, 0.16168919331889817] ***
*** starting iteration: 2; err: [Inf, 0.19966026965523143, 0.16168919331889817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104] ***
*** starting iteration: 3; err: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104, 0.15279889810199235] ***
*** starting iteration: 4; err: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104, 0.15279889810199235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104, 0.15279889810199235, 0.15122911835164726] ***
*** starting iteration: 5; err: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104, 0.15279889810199235, 0.15122911835164726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104, 0.15279889810199235, 0.15122911835164726, 0.15032559311690405] ***
*** finished computation of 7 references, err: [Inf, 0.19966026965523143, 0.16168919331889817, 0.1555965213172104, 0.15279889810199235, 0.15122911835164726, 0.15032559311690405] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 113, 23]]
** centroid: 1, normalized-entropy: 0.6556823431457255, [(2, 113), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 44, 0]]
** centroid: 2, normalized-entropy: 0.9643986196033757, [(1, 69), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 71, 0]]
** centroid: 3, normalized-entropy: 0.8687212463394044, [(1, 29), (2, 71)]
*** center 4: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [76, 25, 0]]
** centroid: 6, normalized-entropy: 0.8073313266519867, [(1, 76), (2, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22812887686011088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22812887686011088, 0.19661413749201676] ***
*** starting iteration: 2; err: [Inf, 0.22812887686011088, 0.19661413749201676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22812887686011088, 0.19661413749201676, 0.1921288643407079] ***
*** starting iteration: 3; err: [Inf, 0.22812887686011088, 0.19661413749201676, 0.1921288643407079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22812887686011088, 0.19661413749201676, 0.1921288643407079, 0.19017346343025565] ***
*** starting iteration: 4; err: [Inf, 0.22812887686011088, 0.19661413749201676, 0.1921288643407079, 0.19017346343025565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22812887686011088, 0.19661413749201676, 0.1921288643407079, 0.19017346343025565, 0.18951268636414575] ***
*** finished computation of 7 references, err: [Inf, 0.22812887686011088, 0.19661413749201676, 0.1921288643407079, 0.19017346343025565, 0.18951268636414575] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 30, 0]]
** centroid: 1, normalized-entropy: 0.9219957030944405, [(1, 59), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 52, 0]]
** centroid: 2, normalized-entropy: 0.9997226475394071, [(1, 50), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 84, 24]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 84), (3, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [107, 3, 0]]
** centroid: 6, normalized-entropy: 0.1805246676420577, [(1, 107), (2, 3)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 80, 0]]
** centroid: 7, normalized-entropy: 0.09597040299587173, [(1, 1), (2, 80)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2739839600064028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881] ***
*** starting iteration: 2; err: [Inf, 0.2739839600064028, 0.22949129674580881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061] ***
*** starting iteration: 3; err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545] ***
*** starting iteration: 4; err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057] ***
*** starting iteration: 5; err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375] ***
*** starting iteration: 6; err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375, 0.1900208672003142] ***
*** starting iteration: 7; err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375, 0.1900208672003142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375, 0.1900208672003142, 0.1880795615606535] ***
*** starting iteration: 8; err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375, 0.1900208672003142, 0.1880795615606535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375, 0.1900208672003142, 0.1880795615606535, 0.18725086355266318] ***
*** finished computation of 7 references, err: [Inf, 0.2739839600064028, 0.22949129674580881, 0.20815043407597061, 0.19813941060139545, 0.19459494221760057, 0.19221983540585375, 0.1900208672003142, 0.1880795615606535, 0.18725086355266318] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 78, 21]]
** centroid: 1, normalized-entropy: 0.7455178428108284, [(2, 78), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [94, 3, 0]]
** centroid: 2, normalized-entropy: 0.19902377455969078, [(1, 94), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 3, 0]]
** centroid: 4, normalized-entropy: 0.269828447703074, [(1, 62), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [32, 55, 0]]
** centroid: 5, normalized-entropy: 0.9489804585630239, [(1, 32), (2, 55)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [8, 96, 0]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(1, 8), (2, 96)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [100, 11, 0]]
** centroid: 7, normalized-entropy: 0.4661332827241355, [(1, 100), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24945778947049888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24945778947049888, 0.19999159255094345] ***
*** starting iteration: 2; err: [Inf, 0.24945778947049888, 0.19999159255094345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24945778947049888, 0.19999159255094345, 0.19424398752652677] ***
*** starting iteration: 3; err: [Inf, 0.24945778947049888, 0.19999159255094345, 0.19424398752652677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24945778947049888, 0.19999159255094345, 0.19424398752652677, 0.1922585739966376] ***
*** starting iteration: 4; err: [Inf, 0.24945778947049888, 0.19999159255094345, 0.19424398752652677, 0.1922585739966376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24945778947049888, 0.19999159255094345, 0.19424398752652677, 0.1922585739966376, 0.19200002563338184] ***
*** finished computation of 7 references, err: [Inf, 0.24945778947049888, 0.19999159255094345, 0.19424398752652677, 0.1922585739966376, 0.19200002563338184] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [30, 90, 0]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(1, 30), (2, 90)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 115, 23]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 115), (3, 23)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [94, 7, 0]]
** centroid: 4, normalized-entropy: 0.3633319133250508, [(1, 94), (2, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [59, 35, 0]]
** centroid: 6, normalized-entropy: 0.9524521973646323, [(1, 59), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [72, 6, 0]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
finished with 12 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9580089071107035, 0.9519969070867274, 0.9450048851246455, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9289828750906595, 0.9210108311904719, 0.9029598460736185, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 18
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9580089071107035, 0.9519969070867274, 0.9450048851246455, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9289828750906595, 0.9210108311904719, 0.9029598460736185, 0.8910317503131875, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.304630593752262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826] ***
*** starting iteration: 2; err: [Inf, 0.304630593752262, 0.23605852187037826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246] ***
*** starting iteration: 3; err: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986] ***
*** starting iteration: 4; err: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722] ***
*** starting iteration: 5; err: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722, 0.1989061770018179] ***
*** starting iteration: 6; err: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722, 0.1989061770018179] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722, 0.1989061770018179, 0.19772703278748258] ***
*** starting iteration: 7; err: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722, 0.1989061770018179, 0.19772703278748258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722, 0.1989061770018179, 0.19772703278748258, 0.19732964561703997] ***
*** finished computation of 7 references, err: [Inf, 0.304630593752262, 0.23605852187037826, 0.21615873827031246, 0.20402546636109986, 0.20208722271595722, 0.1989061770018179, 0.19772703278748258, 0.19732964561703997] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [42, 47, 0]]
** centroid: 1, normalized-entropy: 0.9977221075331744, [(1, 42), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 43, 0]]
** centroid: 2, normalized-entropy: 0.9782823907994933, [(1, 61), (2, 43)]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 24, 0]]
** centroid: 4, normalized-entropy: 0.787126586201269, [(1, 78), (2, 24)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 124, 24]]
** centroid: 5, normalized-entropy: 0.6394571324851642, [(2, 124), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [89, 11, 0]]
** centroid: 6, normalized-entropy: 0.49991595816452816, [(1, 89), (2, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26734060923411124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26734060923411124, 0.21410569023044929] ***
*** starting iteration: 2; err: [Inf, 0.26734060923411124, 0.21410569023044929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187] ***
*** starting iteration: 3; err: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515] ***
*** starting iteration: 4; err: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515, 0.19098140187617363] ***
*** starting iteration: 5; err: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515, 0.19098140187617363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515, 0.19098140187617363, 0.1898730886901828] ***
*** starting iteration: 6; err: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515, 0.19098140187617363, 0.1898730886901828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515, 0.19098140187617363, 0.1898730886901828, 0.1888941304605996] ***
*** finished computation of 7 references, err: [Inf, 0.26734060923411124, 0.21410569023044929, 0.19869911641223187, 0.1933838587318515, 0.19098140187617363, 0.1898730886901828, 0.1888941304605996] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 43, 0]]
** centroid: 1, normalized-entropy: 0.9907034651869471, [(1, 54), (2, 43)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 96, 21]]
** centroid: 2, normalized-entropy: 0.6789538995185759, [(2, 96), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [91, 36, 0]]
** centroid: 3, normalized-entropy: 0.8601286843311847, [(1, 91), (2, 36)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 1, 0]]
** centroid: 4, normalized-entropy: 0.08807225904068142, [(1, 89), (2, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 70, 0]]
** centroid: 7, normalized-entropy: 0.18312206830137262, [(1, 2), (2, 70)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.35189676424488425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35189676424488425, 0.2124788319493743] ***
*** starting iteration: 2; err: [Inf, 0.35189676424488425, 0.2124788319493743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35189676424488425, 0.2124788319493743, 0.19612784895800178] ***
*** starting iteration: 3; err: [Inf, 0.35189676424488425, 0.2124788319493743, 0.19612784895800178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35189676424488425, 0.2124788319493743, 0.19612784895800178, 0.1920932194977619] ***
*** starting iteration: 4; err: [Inf, 0.35189676424488425, 0.2124788319493743, 0.19612784895800178, 0.1920932194977619] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.35189676424488425, 0.2124788319493743, 0.19612784895800178, 0.1920932194977619, 0.19141000539212413] ***
*** finished computation of 7 references, err: [Inf, 0.35189676424488425, 0.2124788319493743, 0.19612784895800178, 0.1920932194977619, 0.19141000539212413] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [133, 10, 0]]
** centroid: 1, normalized-entropy: 0.365662631390055, [(1, 133), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [6, 50, 0]]
** centroid: 2, normalized-entropy: 0.4912373418243334, [(1, 6), (2, 50)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 94, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 61, 23]]
** centroid: 5, normalized-entropy: 0.8468781063424823, [(2, 61), (3, 23)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [55, 38, 0]]
** centroid: 6, normalized-entropy: 0.9757606417025202, [(1, 55), (2, 38)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9580089071107035, 0.9519969070867274, 0.9450048851246455, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9289828750906595, 0.9269928611245977, 0.9210108311904719, 0.9029598460736185, 0.8910317503131875, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2369159487937612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2369159487937612, 0.191903714610004] ***
*** starting iteration: 2; err: [Inf, 0.2369159487937612, 0.191903714610004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2369159487937612, 0.191903714610004, 0.18797592368016] ***
*** starting iteration: 3; err: [Inf, 0.2369159487937612, 0.191903714610004, 0.18797592368016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2369159487937612, 0.191903714610004, 0.18797592368016, 0.18655792931778944] ***
*** finished computation of 7 references, err: [Inf, 0.2369159487937612, 0.191903714610004, 0.18797592368016, 0.18655792931778944] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 93, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 42, 0]]
** centroid: 3, normalized-entropy: 0.9932338197397066, [(1, 51), (2, 42)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [93, 2, 0]]
** centroid: 4, normalized-entropy: 0.14731066693045392, [(1, 93), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 25, 0]]
** centroid: 5, normalized-entropy: 0.8783609387702275, [(1, 59), (2, 25)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 84, 21]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 84), (3, 21)]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23586184339172714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23586184339172714, 0.1916302909987892] ***
*** starting iteration: 2; err: [Inf, 0.23586184339172714, 0.1916302909987892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23586184339172714, 0.1916302909987892, 0.1874687418232563] ***
*** starting iteration: 3; err: [Inf, 0.23586184339172714, 0.1916302909987892, 0.1874687418232563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23586184339172714, 0.1916302909987892, 0.1874687418232563, 0.18653880413509794] ***
*** finished computation of 7 references, err: [Inf, 0.23586184339172714, 0.1916302909987892, 0.1874687418232563, 0.18653880413509794] ***
*** center 1: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 49, 24]]
** centroid: 2, normalized-entropy: 0.9136617865655933, [(2, 49), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [102, 11, 0]]
** centroid: 3, normalized-entropy: 0.4605229209452514, [(1, 102), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [90, 3, 0]]
** centroid: 4, normalized-entropy: 0.2055925081850832, [(1, 90), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 101, 0]]
** centroid: 5, normalized-entropy: 0.27425064105029284, [(1, 5), (2, 101)]
*** center 6: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 84, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26171150661633535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26171150661633535, 0.1971192449523971] ***
*** starting iteration: 2; err: [Inf, 0.26171150661633535, 0.1971192449523971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26171150661633535, 0.1971192449523971, 0.19113009496322503] ***
*** starting iteration: 3; err: [Inf, 0.26171150661633535, 0.1971192449523971, 0.19113009496322503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26171150661633535, 0.1971192449523971, 0.19113009496322503, 0.19038436348191176] ***
*** finished computation of 7 references, err: [Inf, 0.26171150661633535, 0.1971192449523971, 0.19113009496322503, 0.19038436348191176] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 13, 0]]
** centroid: 1, normalized-entropy: 0.5610284863400681, [(1, 86), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 6, 0]]
** centroid: 2, normalized-entropy: 0.3398550782221443, [(1, 89), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 74, 23]]
** centroid: 3, normalized-entropy: 0.790206924188637, [(2, 74), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [28, 71, 0]]
** centroid: 5, normalized-entropy: 0.8592759806609698, [(1, 28), (2, 71)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 89, 0]]
** centroid: 6, normalized-entropy: 0.2998025130558691, [(1, 5), (2, 89)]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 20)
[0.9580089071107035, 0.9519969070867274, 0.9450048851246455, 0.9429729130327932, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9289828750906595, 0.9269928611245977, 0.9210108311904719, 0.9029598460736185, 0.8910317503131875, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 21
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.36728918489914897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36728918489914897, 0.24116931543538886] ***
*** starting iteration: 2; err: [Inf, 0.36728918489914897, 0.24116931543538886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36728918489914897, 0.24116931543538886, 0.23925018500860618] ***
*** starting iteration: 3; err: [Inf, 0.36728918489914897, 0.24116931543538886, 0.23925018500860618] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36728918489914897, 0.24116931543538886, 0.23925018500860618, 0.23883243194310697] ***
*** finished computation of 3 references, err: [Inf, 0.36728918489914897, 0.24116931543538886, 0.23925018500860618, 0.23883243194310697] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [103, 154, 21]]
** centroid: 1, normalized-entropy: 0.8102959806301059, [(1, 103), (2, 154), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [107, 92, 0]]
** centroid: 2, normalized-entropy: 0.995897648170946, [(1, 107), (2, 92)]
*** center 3: selecting labels [1] (freq >= 1) [from [190, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31031456259680584] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31031456259680584, 0.2477847552444372] ***
*** starting iteration: 2; err: [Inf, 0.31031456259680584, 0.2477847552444372] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31031456259680584, 0.2477847552444372, 0.24079428874683362] ***
*** starting iteration: 3; err: [Inf, 0.31031456259680584, 0.2477847552444372, 0.24079428874683362] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31031456259680584, 0.2477847552444372, 0.24079428874683362, 0.23938464222324862] ***
*** finished computation of 3 references, err: [Inf, 0.31031456259680584, 0.2477847552444372, 0.24079428874683362, 0.23938464222324862] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [248, 14, 0]]
** centroid: 1, normalized-entropy: 0.3008136355651162, [(1, 248), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 196, 24]]
** centroid: 2, normalized-entropy: 0.4971677614160751, [(2, 196), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [145, 39, 0]]
** centroid: 3, normalized-entropy: 0.7452059528624848, [(1, 145), (2, 39)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3964386841022539] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3964386841022539, 0.23556756466414885] ***
*** starting iteration: 2; err: [Inf, 0.3964386841022539, 0.23556756466414885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3964386841022539, 0.23556756466414885, 0.23545901432934999] ***
*** finished computation of 3 references, err: [Inf, 0.3964386841022539, 0.23556756466414885, 0.23545901432934999] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [91, 151, 21]]
** centroid: 1, normalized-entropy: 0.8079465728591227, [(1, 91), (2, 151), (3, 21)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [115, 102, 2]]
** centroid: 2, normalized-entropy: 0.6708587489289888, [(1, 115), (2, 102), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [185, 0, 0]]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 21)
[0.9580089071107035, 0.9519969070867274, 0.9450048851246455, 0.9429729130327932, 0.9389958821096546, 0.9350068631505758, 0.9329898761036487, 0.9309848770926615, 0.9289828750906595, 0.9269928611245977, 0.9210108311904719, 0.9160088231944519, 0.9029598460736185, 0.8910317503131875, 0.8729927532322742, 0.8600187013360666, 0.8540067013120906, 0.8499727272182361, 0.8449946952940964, 0.8289666912421403, 0.8049996103888319]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :fft, 0.6, 2) => 0.9580089071107035
finished with 23
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.2833953732680585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833953732680585, 0.17686112486413336] ***
*** starting iteration: 2; err: [Inf, 0.2833953732680585, 0.17686112486413336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833953732680585, 0.17686112486413336, 0.16222776500675995] ***
*** starting iteration: 3; err: [Inf, 0.2833953732680585, 0.17686112486413336, 0.16222776500675995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833953732680585, 0.17686112486413336, 0.16222776500675995, 0.159172734743482] ***
*** finished computation of 7 references, err: [Inf, 0.2833953732680585, 0.17686112486413336, 0.16222776500675995, 0.159172734743482] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 50, 0]]
** centroid: 1, normalized-entropy: 0.9987472979361685, [(1, 46), (2, 50)]
*** center 2: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 138, 24]]
** centroid: 3, normalized-entropy: 0.6051865766334207, [(2, 138), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [95, 38, 0]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(1, 95), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 23, 0]]
** centroid: 5, normalized-entropy: 0.8377698690066789, [(1, 63), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18746859346540168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18746859346540168, 0.15551888864666133] ***
*** starting iteration: 2; err: [Inf, 0.18746859346540168, 0.15551888864666133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18746859346540168, 0.15551888864666133, 0.1528369717480059] ***
*** starting iteration: 3; err: [Inf, 0.18746859346540168, 0.15551888864666133, 0.1528369717480059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18746859346540168, 0.15551888864666133, 0.1528369717480059, 0.15138995164594818] ***
*** finished computation of 7 references, err: [Inf, 0.18746859346540168, 0.15551888864666133, 0.1528369717480059, 0.15138995164594818] ***
*** center 1: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [49, 52, 0]]
** centroid: 2, normalized-entropy: 0.999363485672765, [(1, 49), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [95, 39, 0]]
** centroid: 3, normalized-entropy: 0.8700670313005505, [(1, 95), (2, 39)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 106, 21]]
** centroid: 5, normalized-entropy: 0.646966308330803, [(2, 106), (3, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 49, 0]]
** centroid: 7, normalized-entropy: 0.9906649266228326, [(1, 39), (2, 49)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1931652684390232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931652684390232, 0.15204325534080085] ***
*** starting iteration: 2; err: [Inf, 0.1931652684390232, 0.15204325534080085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931652684390232, 0.15204325534080085, 0.14822071591864103] ***
*** starting iteration: 3; err: [Inf, 0.1931652684390232, 0.15204325534080085, 0.14822071591864103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931652684390232, 0.15204325534080085, 0.14822071591864103, 0.14720092953994] ***
*** finished computation of 7 references, err: [Inf, 0.1931652684390232, 0.15204325534080085, 0.14822071591864103, 0.14720092953994] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 89, 23]]
** centroid: 1, normalized-entropy: 0.7325138475458123, [(2, 89), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 50, 0]]
** centroid: 3, normalized-entropy: 0.999926399368686, [(1, 49), (2, 50)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 52, 0]]
** centroid: 4, normalized-entropy: 0.9876925088958032, [(1, 40), (2, 52)]
*** center 5: selecting labels [1] (freq >= 2) [from [109, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3515964482369757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3515964482369757, 0.23472607540744203] ***
*** starting iteration: 2; err: [Inf, 0.3515964482369757, 0.23472607540744203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3515964482369757, 0.23472607540744203, 0.2179476157384547] ***
*** starting iteration: 3; err: [Inf, 0.3515964482369757, 0.23472607540744203, 0.2179476157384547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3515964482369757, 0.23472607540744203, 0.2179476157384547, 0.209301597238784] ***
*** finished computation of 7 references, err: [Inf, 0.3515964482369757, 0.23472607540744203, 0.2179476157384547, 0.209301597238784] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 57, 0]]
** centroid: 1, normalized-entropy: 0.9958873114590912, [(1, 49), (2, 57)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 141, 24]]
** centroid: 2, normalized-entropy: 0.5983474220910422, [(2, 141), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [92, 40, 0]]
** centroid: 4, normalized-entropy: 0.8849636363831529, [(1, 92), (2, 40)]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [83, 11, 0]]
** centroid: 7, normalized-entropy: 0.5207375686265202, [(1, 83), (2, 11)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2699940837780084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2699940837780084, 0.21311969890271773] ***
*** starting iteration: 2; err: [Inf, 0.2699940837780084, 0.21311969890271773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2699940837780084, 0.21311969890271773, 0.19612408246191546] ***
*** starting iteration: 3; err: [Inf, 0.2699940837780084, 0.21311969890271773, 0.19612408246191546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2699940837780084, 0.21311969890271773, 0.19612408246191546, 0.18883425238887142] ***
*** finished computation of 7 references, err: [Inf, 0.2699940837780084, 0.21311969890271773, 0.19612408246191546, 0.18883425238887142] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 45, 0]]
** centroid: 1, normalized-entropy: 0.9133525990767271, [(1, 92), (2, 45)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 102, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 28, 0]]
** centroid: 4, normalized-entropy: 0.9494520153879484, [(1, 48), (2, 28)]
*** center 5: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [79, 3, 0]]
** centroid: 6, normalized-entropy: 0.22641094842107634, [(1, 79), (2, 3)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 68, 21]]
** centroid: 7, normalized-entropy: 0.7882487221644084, [(2, 68), (3, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2774559191946147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774559191946147, 0.23345255036314747] ***
*** starting iteration: 2; err: [Inf, 0.2774559191946147, 0.23345255036314747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774559191946147, 0.23345255036314747, 0.21666599299781014] ***
*** starting iteration: 3; err: [Inf, 0.2774559191946147, 0.23345255036314747, 0.21666599299781014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2774559191946147, 0.23345255036314747, 0.21666599299781014, 0.20844121425059334] ***
*** finished computation of 7 references, err: [Inf, 0.2774559191946147, 0.23345255036314747, 0.21666599299781014, 0.20844121425059334] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [8, 50, 0]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(1, 8), (2, 50)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 92, 23]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 92), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 63, 0]]
** centroid: 4, normalized-entropy: 0.9967916319816367, [(1, 72), (2, 63)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [92, 2, 0]]
** centroid: 5, normalized-entropy: 0.14854949043034832, [(1, 92), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [35, 46, 0]]
** centroid: 6, normalized-entropy: 0.9866554896538049, [(1, 35), (2, 46)]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.18834064212394877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18834064212394877, 0.15680837982567028] ***
*** starting iteration: 2; err: [Inf, 0.18834064212394877, 0.15680837982567028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18834064212394877, 0.15680837982567028, 0.1513533644299023] ***
*** starting iteration: 3; err: [Inf, 0.18834064212394877, 0.15680837982567028, 0.1513533644299023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18834064212394877, 0.15680837982567028, 0.1513533644299023, 0.14964853133819997] ***
*** finished computation of 7 references, err: [Inf, 0.18834064212394877, 0.15680837982567028, 0.1513533644299023, 0.14964853133819997] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [128, 78, 0]]
** centroid: 1, normalized-entropy: 0.9570763860606195, [(1, 128), (2, 78)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [92, 15, 0]]
** centroid: 2, normalized-entropy: 0.5847281182574745, [(1, 92), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [118, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 116, 34]]
** centroid: 4, normalized-entropy: 0.7721551435804817, [(2, 116), (3, 34)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [117, 2, 0]]
** centroid: 5, normalized-entropy: 0.1231146356503104, [(1, 117), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 162, 0]]
** centroid: 6, normalized-entropy: 0.1638605128691586, [(1, 4), (2, 162)]
*** center 7: selecting labels [1] (freq >= 2) [from [133, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18627075664699078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627075664699078, 0.14985671465704217] ***
*** starting iteration: 2; err: [Inf, 0.18627075664699078, 0.14985671465704217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627075664699078, 0.14985671465704217, 0.14703464049613102] ***
*** starting iteration: 3; err: [Inf, 0.18627075664699078, 0.14985671465704217, 0.14703464049613102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18627075664699078, 0.14985671465704217, 0.14703464049613102, 0.14648082806356252] ***
*** finished computation of 7 references, err: [Inf, 0.18627075664699078, 0.14985671465704217, 0.14703464049613102, 0.14648082806356252] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [96, 2, 0]]
** centroid: 1, normalized-entropy: 0.14372616993938164, [(1, 96), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [44, 16, 0]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(1, 44), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 21]]
** centroid: 3, normalized-entropy: 0.9443871950133461, [(2, 37), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 71, 0]]
** centroid: 5, normalized-entropy: 0.5074109636646968, [(1, 9), (2, 71)]
*** center 6: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19095469784084707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19095469784084707, 0.15219369185483084] ***
*** starting iteration: 2; err: [Inf, 0.19095469784084707, 0.15219369185483084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19095469784084707, 0.15219369185483084, 0.14735154162812977] ***
*** starting iteration: 3; err: [Inf, 0.19095469784084707, 0.15219369185483084, 0.14735154162812977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19095469784084707, 0.15219369185483084, 0.14735154162812977, 0.14624946849700063] ***
*** finished computation of 7 references, err: [Inf, 0.19095469784084707, 0.15219369185483084, 0.14735154162812977, 0.14624946849700063] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 67, 0]]
** centroid: 1, normalized-entropy: 0.7778108790853029, [(1, 20), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 6, 0]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(1, 60), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 49, 17]]
** centroid: 4, normalized-entropy: 0.8230660790114689, [(2, 49), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [75, 3, 0]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(1, 75), (2, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19416266567632556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19416266567632556, 0.1545638790410012] ***
*** starting iteration: 2; err: [Inf, 0.19416266567632556, 0.1545638790410012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19416266567632556, 0.1545638790410012, 0.1495565452715382] ***
*** starting iteration: 3; err: [Inf, 0.19416266567632556, 0.1545638790410012, 0.1495565452715382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19416266567632556, 0.1545638790410012, 0.1495565452715382, 0.14802339494414626] ***
*** finished computation of 7 references, err: [Inf, 0.19416266567632556, 0.1545638790410012, 0.1495565452715382, 0.14802339494414626] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 40, 19]]
** centroid: 2, normalized-entropy: 0.9065795484987461, [(2, 40), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 23, 0]]
** centroid: 3, normalized-entropy: 0.9421631690835511, [(1, 41), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [81, 7, 0]]
** centroid: 4, normalized-entropy: 0.40057554263664, [(1, 81), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 50, 0]]
** centroid: 5, normalized-entropy: 0.6807937753703207, [(1, 11), (2, 50)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20952672963868826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20952672963868826, 0.14787655961047858] ***
*** starting iteration: 2; err: [Inf, 0.20952672963868826, 0.14787655961047858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20952672963868826, 0.14787655961047858, 0.14467894534580408] ***
*** starting iteration: 3; err: [Inf, 0.20952672963868826, 0.14787655961047858, 0.14467894534580408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20952672963868826, 0.14787655961047858, 0.14467894534580408, 0.1440142018944025] ***
*** finished computation of 7 references, err: [Inf, 0.20952672963868826, 0.14787655961047858, 0.14467894534580408, 0.1440142018944025] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 50, 12]]
** centroid: 3, normalized-entropy: 0.708835673332196, [(2, 50), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 19, 0]]
** centroid: 5, normalized-entropy: 0.8218127305034848, [(1, 55), (2, 19)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 60, 0]]
** centroid: 7, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21212936409655958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21212936409655958, 0.1482760011749342] ***
*** starting iteration: 2; err: [Inf, 0.21212936409655958, 0.1482760011749342] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21212936409655958, 0.1482760011749342, 0.14490439569670707] ***
*** starting iteration: 3; err: [Inf, 0.21212936409655958, 0.1482760011749342, 0.14490439569670707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21212936409655958, 0.1482760011749342, 0.14490439569670707, 0.14448589356336744] ***
*** finished computation of 7 references, err: [Inf, 0.21212936409655958, 0.1482760011749342, 0.14490439569670707, 0.14448589356336744] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 35, 0]]
** centroid: 1, normalized-entropy: 0.9906174973781801, [(1, 44), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 2, 0]]
** centroid: 2, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 69, 18]]
** centroid: 4, normalized-entropy: 0.7355085815538399, [(2, 69), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 26, 0]]
** centroid: 5, normalized-entropy: 0.9268190639645774, [(1, 50), (2, 26)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18543770186975597] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18543770186975597, 0.15319557851552965] ***
*** starting iteration: 2; err: [Inf, 0.18543770186975597, 0.15319557851552965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18543770186975597, 0.15319557851552965, 0.14843328639306128] ***
*** starting iteration: 3; err: [Inf, 0.18543770186975597, 0.15319557851552965, 0.14843328639306128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18543770186975597, 0.15319557851552965, 0.14843328639306128, 0.1465743084200658] ***
*** finished computation of 7 references, err: [Inf, 0.18543770186975597, 0.15319557851552965, 0.14843328639306128, 0.1465743084200658] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [77, 4, 0]]
** centroid: 1, normalized-entropy: 0.2837689703721877, [(1, 77), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 18]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 36), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [76, 4, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 76), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 5, 0]]
** centroid: 4, normalized-entropy: 0.39993804743902767, [(1, 58), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 75, 0]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(1, 5), (2, 75)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19778591579198837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19778591579198837, 0.15765532274451108] ***
*** starting iteration: 2; err: [Inf, 0.19778591579198837, 0.15765532274451108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19778591579198837, 0.15765532274451108, 0.15083182859327643] ***
*** starting iteration: 3; err: [Inf, 0.19778591579198837, 0.15765532274451108, 0.15083182859327643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19778591579198837, 0.15765532274451108, 0.15083182859327643, 0.14948445987328887] ***
*** finished computation of 7 references, err: [Inf, 0.19778591579198837, 0.15765532274451108, 0.15083182859327643, 0.14948445987328887] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [48, 8, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 48), (2, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 1, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 2, 0]]
** centroid: 6, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 39, 20]]
** centroid: 7, normalized-entropy: 0.9238422284571813, [(2, 39), (3, 20)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19395408389344812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19395408389344812, 0.15496935479156673] ***
*** starting iteration: 2; err: [Inf, 0.19395408389344812, 0.15496935479156673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19395408389344812, 0.15496935479156673, 0.15044032160425558] ***
*** starting iteration: 3; err: [Inf, 0.19395408389344812, 0.15496935479156673, 0.15044032160425558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19395408389344812, 0.15496935479156673, 0.15044032160425558, 0.1478693614071235] ***
*** finished computation of 7 references, err: [Inf, 0.19395408389344812, 0.15496935479156673, 0.15044032160425558, 0.1478693614071235] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [70, 19, 0]]
** centroid: 2, normalized-entropy: 0.748088105780153, [(1, 70), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 45, 17]]
** centroid: 3, normalized-entropy: 0.8474179614176633, [(2, 45), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 42, 0]]
** centroid: 5, normalized-entropy: 0.9967916319816367, [(1, 48), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 61, 0]]
** centroid: 6, normalized-entropy: 0.33352200393097675, [(1, 4), (2, 61)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 5, 0]]
** centroid: 7, normalized-entropy: 0.48890859144051524, [(1, 42), (2, 5)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20158707506395876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20158707506395876, 0.14950235738418996] ***
*** starting iteration: 2; err: [Inf, 0.20158707506395876, 0.14950235738418996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20158707506395876, 0.14950235738418996, 0.14434181886166333] ***
*** starting iteration: 3; err: [Inf, 0.20158707506395876, 0.14950235738418996, 0.14434181886166333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20158707506395876, 0.14950235738418996, 0.14434181886166333, 0.14341766248457133] ***
*** finished computation of 7 references, err: [Inf, 0.20158707506395876, 0.14950235738418996, 0.14434181886166333, 0.14341766248457133] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 21, 0]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(1, 49), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [47, 7, 0]]
** centroid: 2, normalized-entropy: 0.5564215672884282, [(1, 47), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 74, 15]]
** centroid: 4, normalized-entropy: 0.6543524423071835, [(2, 74), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 22, 0]]
** centroid: 5, normalized-entropy: 0.9081783472997053, [(1, 46), (2, 22)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 1, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2028898997809738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028898997809738, 0.15353890715166926] ***
*** starting iteration: 2; err: [Inf, 0.2028898997809738, 0.15353890715166926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028898997809738, 0.15353890715166926, 0.14801111526880414] ***
*** starting iteration: 3; err: [Inf, 0.2028898997809738, 0.15353890715166926, 0.14801111526880414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2028898997809738, 0.15353890715166926, 0.14801111526880414, 0.1466197863407433] ***
*** finished computation of 7 references, err: [Inf, 0.2028898997809738, 0.15353890715166926, 0.14801111526880414, 0.1466197863407433] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 64, 0]]
** centroid: 1, normalized-entropy: 0.6789538995185759, [(1, 14), (2, 64)]
*** center 2: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 29, 0]]
** centroid: 3, normalized-entropy: 0.9520402801398793, [(1, 49), (2, 29)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 34, 0]]
** centroid: 4, normalized-entropy: 0.9901226308935799, [(1, 43), (2, 34)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 52, 15]]
** centroid: 5, normalized-entropy: 0.7671903206448686, [(2, 52), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1848948219968006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1848948219968006, 0.15343470109812915] ***
*** starting iteration: 2; err: [Inf, 0.1848948219968006, 0.15343470109812915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1848948219968006, 0.15343470109812915, 0.14955889769969508] ***
*** starting iteration: 3; err: [Inf, 0.1848948219968006, 0.15343470109812915, 0.14955889769969508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1848948219968006, 0.15343470109812915, 0.14955889769969508, 0.14836450718250124] ***
*** finished computation of 7 references, err: [Inf, 0.1848948219968006, 0.15343470109812915, 0.14955889769969508, 0.14836450718250124] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 94, 14]]
** centroid: 1, normalized-entropy: 0.5564215672884282, [(2, 94), (3, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [38, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 23, 0]]
** centroid: 4, normalized-entropy: 0.8941071841443881, [(1, 51), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 4, 0]]
** centroid: 5, normalized-entropy: 0.29181825659888555, [(1, 74), (2, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 63, 0]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(1, 9), (2, 63)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18934004064183682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18934004064183682, 0.14864633254148066] ***
*** starting iteration: 2; err: [Inf, 0.18934004064183682, 0.14864633254148066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18934004064183682, 0.14864633254148066, 0.14424626166000962] ***
*** starting iteration: 3; err: [Inf, 0.18934004064183682, 0.14864633254148066, 0.14424626166000962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18934004064183682, 0.14864633254148066, 0.14424626166000962, 0.1435055011883378] ***
*** finished computation of 7 references, err: [Inf, 0.18934004064183682, 0.14864633254148066, 0.14424626166000962, 0.1435055011883378] ***
*** center 1: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 23, 0]]
** centroid: 2, normalized-entropy: 0.8377698690066789, [(1, 63), (2, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 46, 14]]
** centroid: 3, normalized-entropy: 0.7837769474847011, [(2, 46), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 62, 0]]
** centroid: 5, normalized-entropy: 0.8296071030882032, [(1, 22), (2, 62)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 56, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [47, 4, 0]]
** centroid: 7, normalized-entropy: 0.3966277727783787, [(1, 47), (2, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20637316614575685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20637316614575685, 0.1515459110578522] ***
*** starting iteration: 2; err: [Inf, 0.20637316614575685, 0.1515459110578522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20637316614575685, 0.1515459110578522, 0.14817400372587144] ***
*** starting iteration: 3; err: [Inf, 0.20637316614575685, 0.1515459110578522, 0.14817400372587144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20637316614575685, 0.1515459110578522, 0.14817400372587144, 0.1480995425339788] ***
*** finished computation of 7 references, err: [Inf, 0.20637316614575685, 0.1515459110578522, 0.14817400372587144, 0.1480995425339788] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 54, 17]]
** centroid: 2, normalized-entropy: 0.7941021417852022, [(2, 54), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [81, 21, 0]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(1, 81), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 2, 0]]
** centroid: 4, normalized-entropy: 0.2580186686648155, [(1, 44), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [37, 48, 0]]
** centroid: 5, normalized-entropy: 0.9878853530449176, [(1, 37), (2, 48)]
*** center 6: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 64, 0]]
** centroid: 7, normalized-entropy: 0.19590927087360496, [(1, 2), (2, 64)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.197812945432961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.197812945432961, 0.1494654726330191] ***
*** starting iteration: 2; err: [Inf, 0.197812945432961, 0.1494654726330191] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.197812945432961, 0.1494654726330191, 0.14534430398978293] ***
*** starting iteration: 3; err: [Inf, 0.197812945432961, 0.1494654726330191, 0.14534430398978293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.197812945432961, 0.1494654726330191, 0.14534430398978293, 0.14463105146214367] ***
*** finished computation of 7 references, err: [Inf, 0.197812945432961, 0.1494654726330191, 0.14534430398978293, 0.14463105146214367] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 61, 14]]
** centroid: 2, normalized-entropy: 0.6944460704939805, [(2, 61), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 18, 0]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(1, 51), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 41, 0]]
** centroid: 4, normalized-entropy: 0.995533068899466, [(1, 48), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [12, 68, 0]]
** centroid: 5, normalized-entropy: 0.6098403047164005, [(1, 12), (2, 68)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19656796067394317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19656796067394317, 0.15270913424994798] ***
*** starting iteration: 2; err: [Inf, 0.19656796067394317, 0.15270913424994798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19656796067394317, 0.15270913424994798, 0.14957735400460662] ***
*** starting iteration: 3; err: [Inf, 0.19656796067394317, 0.15270913424994798, 0.14957735400460662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19656796067394317, 0.15270913424994798, 0.14957735400460662, 0.14932992101926357] ***
*** finished computation of 7 references, err: [Inf, 0.19656796067394317, 0.15270913424994798, 0.14957735400460662, 0.14932992101926357] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [34, 57, 0]]
** centroid: 1, normalized-entropy: 0.9534158774525225, [(1, 34), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 2, 0]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 48, 18]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 48), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [72, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [60, 8, 0]]
** centroid: 6, normalized-entropy: 0.5225593745369407, [(1, 60), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 72, 0]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(1, 4), (2, 72)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1986769385691732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1986769385691732, 0.15679878961481153] ***
*** starting iteration: 2; err: [Inf, 0.1986769385691732, 0.15679878961481153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1986769385691732, 0.15679878961481153, 0.15147623982280492] ***
*** starting iteration: 3; err: [Inf, 0.1986769385691732, 0.15679878961481153, 0.15147623982280492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1986769385691732, 0.15679878961481153, 0.15147623982280492, 0.14946388706192373] ***
*** finished computation of 7 references, err: [Inf, 0.1986769385691732, 0.15679878961481153, 0.15147623982280492, 0.14946388706192373] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 74, 0]]
** centroid: 1, normalized-entropy: 0.17556502585750275, [(1, 2), (2, 74)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 18, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 63), (2, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 25]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(2, 60), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 38, 0]]
** centroid: 5, normalized-entropy: 0.9977724720899819, [(1, 34), (2, 38)]
*** center 6: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19863599183410405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863599183410405, 0.14755141225084661] ***
*** starting iteration: 2; err: [Inf, 0.19863599183410405, 0.14755141225084661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863599183410405, 0.14755141225084661, 0.14330431009922176] ***
*** starting iteration: 3; err: [Inf, 0.19863599183410405, 0.14755141225084661, 0.14330431009922176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19863599183410405, 0.14755141225084661, 0.14330431009922176, 0.14200187952816487] ***
*** finished computation of 7 references, err: [Inf, 0.19863599183410405, 0.14755141225084661, 0.14330431009922176, 0.14200187952816487] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 68, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 3, 0]]
** centroid: 2, normalized-entropy: 0.2447650820208971, [(1, 71), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [72, 9, 0]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(1, 72), (2, 9)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [72, 4, 0]]
** centroid: 6, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 37, 14]]
** centroid: 7, normalized-entropy: 0.8478617451660525, [(2, 37), (3, 14)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21029929647408427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21029929647408427, 0.1572848468180746] ***
*** starting iteration: 2; err: [Inf, 0.21029929647408427, 0.1572848468180746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21029929647408427, 0.1572848468180746, 0.1525737264510244] ***
*** starting iteration: 3; err: [Inf, 0.21029929647408427, 0.1572848468180746, 0.1525737264510244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21029929647408427, 0.1572848468180746, 0.1525737264510244, 0.1510184560175985] ***
*** finished computation of 7 references, err: [Inf, 0.21029929647408427, 0.1572848468180746, 0.1525737264510244, 0.1510184560175985] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [46, 37, 0]]
** centroid: 1, normalized-entropy: 0.9915017866855546, [(1, 46), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 25, 0]]
** centroid: 2, normalized-entropy: 0.8827586787955116, [(1, 58), (2, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 76, 17]]
** centroid: 4, normalized-entropy: 0.6861549474202007, [(2, 76), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [24, 44, 0]]
** centroid: 5, normalized-entropy: 0.9366673818775627, [(1, 24), (2, 44)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1838972922572866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1838972922572866, 0.1514500270187855] ***
*** starting iteration: 2; err: [Inf, 0.1838972922572866, 0.1514500270187855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1838972922572866, 0.1514500270187855, 0.14751371225900947] ***
*** starting iteration: 3; err: [Inf, 0.1838972922572866, 0.1514500270187855, 0.14751371225900947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1838972922572866, 0.1514500270187855, 0.14751371225900947, 0.146918397186324] ***
*** finished computation of 7 references, err: [Inf, 0.1838972922572866, 0.1514500270187855, 0.14751371225900947, 0.146918397186324] ***
*** center 1: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 48, 17]]
** centroid: 2, normalized-entropy: 0.829059069399666, [(2, 48), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 3, 0]]
** centroid: 3, normalized-entropy: 0.39845927409523557, [(1, 35), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [72, 2, 0]]
** centroid: 4, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 65, 0]]
** centroid: 5, normalized-entropy: 0.7169622516889513, [(1, 16), (2, 65)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 72, 0]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(1, 8), (2, 72)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.199559688096866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.199559688096866, 0.1505734266396612] ***
*** starting iteration: 2; err: [Inf, 0.199559688096866, 0.1505734266396612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.199559688096866, 0.1505734266396612, 0.14644169770088047] ***
*** starting iteration: 3; err: [Inf, 0.199559688096866, 0.1505734266396612, 0.14644169770088047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.199559688096866, 0.1505734266396612, 0.14644169770088047, 0.14462856732401996] ***
*** finished computation of 7 references, err: [Inf, 0.199559688096866, 0.1505734266396612, 0.14644169770088047, 0.14462856732401996] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 7, 0]]
** centroid: 1, normalized-entropy: 0.42440514472480345, [(1, 74), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 8, 0]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(1, 68), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 17]]
** centroid: 3, normalized-entropy: 0.9052002969560479, [(2, 36), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 18, 0]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(1, 63), (2, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 57, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19948401679843664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948401679843664, 0.1535797579092905] ***
*** starting iteration: 2; err: [Inf, 0.19948401679843664, 0.1535797579092905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948401679843664, 0.1535797579092905, 0.14926285899057984] ***
*** starting iteration: 3; err: [Inf, 0.19948401679843664, 0.1535797579092905, 0.14926285899057984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19948401679843664, 0.1535797579092905, 0.14926285899057984, 0.14895348976552486] ***
*** finished computation of 7 references, err: [Inf, 0.19948401679843664, 0.1535797579092905, 0.14926285899057984, 0.14895348976552486] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [68, 5, 0]]
** centroid: 1, normalized-entropy: 0.3602750564216625, [(1, 68), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [77, 2, 0]]
** centroid: 2, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 16]]
** centroid: 3, normalized-entropy: 0.8175072881213616, [(2, 47), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 4, 0]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(1, 68), (2, 4)]
*** center 5: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 51, 0]]
** centroid: 6, normalized-entropy: 0.572580465623769, [(1, 8), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 69, 0]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(1, 3), (2, 69)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19399556509032845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19399556509032845, 0.1499626635806635] ***
*** starting iteration: 2; err: [Inf, 0.19399556509032845, 0.1499626635806635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19399556509032845, 0.1499626635806635, 0.14629143747035414] ***
*** starting iteration: 3; err: [Inf, 0.19399556509032845, 0.1499626635806635, 0.14629143747035414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19399556509032845, 0.1499626635806635, 0.14629143747035414, 0.14578979897126557] ***
*** finished computation of 7 references, err: [Inf, 0.19399556509032845, 0.1499626635806635, 0.14629143747035414, 0.14578979897126557] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 71, 0]]
** centroid: 1, normalized-entropy: 0.18116640155354563, [(1, 2), (2, 71)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 19, 0]]
** centroid: 3, normalized-entropy: 0.877437311089633, [(1, 45), (2, 19)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 65, 24]]
** centroid: 4, normalized-entropy: 0.8409805336163159, [(2, 65), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 7, 0]]
** centroid: 5, normalized-entropy: 0.5140912790181233, [(1, 54), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 17, 0]]
** centroid: 6, normalized-entropy: 0.7997594113291759, [(1, 53), (2, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20123786530829965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20123786530829965, 0.14871991499327122] ***
*** starting iteration: 2; err: [Inf, 0.20123786530829965, 0.14871991499327122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20123786530829965, 0.14871991499327122, 0.14510695458110423] ***
*** starting iteration: 3; err: [Inf, 0.20123786530829965, 0.14871991499327122, 0.14510695458110423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20123786530829965, 0.14871991499327122, 0.14510695458110423, 0.14423070823960008] ***
*** finished computation of 7 references, err: [Inf, 0.20123786530829965, 0.14871991499327122, 0.14510695458110423, 0.14423070823960008] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 84, 0]]
** centroid: 1, normalized-entropy: 0.15935006268563429, [(1, 2), (2, 84)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 17, 0]]
** centroid: 2, normalized-entropy: 0.7462343013654809, [(1, 63), (2, 17)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 75, 12]]
** centroid: 4, normalized-entropy: 0.5787946246321198, [(2, 75), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 9, 0]]
** centroid: 5, normalized-entropy: 0.5340042729285396, [(1, 65), (2, 9)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 3, 0]]
** centroid: 7, normalized-entropy: 0.3712323266408756, [(1, 39), (2, 3)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19476939140819013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19476939140819013, 0.14851728493673727] ***
*** starting iteration: 2; err: [Inf, 0.19476939140819013, 0.14851728493673727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19476939140819013, 0.14851728493673727, 0.14501748026022687] ***
*** starting iteration: 3; err: [Inf, 0.19476939140819013, 0.14851728493673727, 0.14501748026022687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19476939140819013, 0.14851728493673727, 0.14501748026022687, 0.14431262442981824] ***
*** finished computation of 7 references, err: [Inf, 0.19476939140819013, 0.14851728493673727, 0.14501748026022687, 0.14431262442981824] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 14, 0]]
** centroid: 1, normalized-entropy: 0.7973265101474423, [(1, 44), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 18, 0]]
** centroid: 2, normalized-entropy: 0.7691928290130138, [(1, 62), (2, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 70, 18]]
** centroid: 4, normalized-entropy: 0.7309263775906009, [(2, 70), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 20, 0]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(1, 55), (2, 20)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 69, 0]]
** centroid: 7, normalized-entropy: 0.24988229283318547, [(1, 3), (2, 69)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19418098608404397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19418098608404397, 0.15668195733521134] ***
*** starting iteration: 2; err: [Inf, 0.19418098608404397, 0.15668195733521134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19418098608404397, 0.15668195733521134, 0.1538875651601702] ***
*** starting iteration: 3; err: [Inf, 0.19418098608404397, 0.15668195733521134, 0.1538875651601702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19418098608404397, 0.15668195733521134, 0.1538875651601702, 0.15251760411262513] ***
*** finished computation of 7 references, err: [Inf, 0.19418098608404397, 0.15668195733521134, 0.1538875651601702, 0.15251760411262513] ***
*** center 1: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 67, 18]]
** centroid: 2, normalized-entropy: 0.7448423974714387, [(2, 67), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 2, 0]]
** centroid: 3, normalized-entropy: 0.2761954276479391, [(1, 40), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 23, 0]]
** centroid: 4, normalized-entropy: 0.8332661971210122, [(1, 64), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [27, 43, 0]]
** centroid: 5, normalized-entropy: 0.9619780596506257, [(1, 27), (2, 43)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 50, 0]]
** centroid: 7, normalized-entropy: 0.3138129641688652, [(1, 3), (2, 50)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18730583348497748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18730583348497748, 0.15817251918278635] ***
*** starting iteration: 2; err: [Inf, 0.18730583348497748, 0.15817251918278635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18730583348497748, 0.15817251918278635, 0.15259530390240253] ***
*** starting iteration: 3; err: [Inf, 0.18730583348497748, 0.15817251918278635, 0.15259530390240253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18730583348497748, 0.15817251918278635, 0.15259530390240253, 0.1504043891360052] ***
*** finished computation of 7 references, err: [Inf, 0.18730583348497748, 0.15817251918278635, 0.15259530390240253, 0.1504043891360052] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 77, 18]]
** centroid: 1, normalized-entropy: 0.7003691487575897, [(2, 77), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 7, 0]]
** centroid: 3, normalized-entropy: 0.5699613760403499, [(1, 45), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 18, 0]]
** centroid: 4, normalized-entropy: 0.8058049113482652, [(1, 55), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 5, 0]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(1, 65), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 79, 0]]
** centroid: 6, normalized-entropy: 0.22641094842107634, [(1, 3), (2, 79)]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20710707531217484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20710707531217484, 0.14954730661027132] ***
*** starting iteration: 2; err: [Inf, 0.20710707531217484, 0.14954730661027132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20710707531217484, 0.14954730661027132, 0.14453866059053688] ***
*** starting iteration: 3; err: [Inf, 0.20710707531217484, 0.14954730661027132, 0.14453866059053688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20710707531217484, 0.14954730661027132, 0.14453866059053688, 0.14305404711700975] ***
*** finished computation of 7 references, err: [Inf, 0.20710707531217484, 0.14954730661027132, 0.14453866059053688, 0.14305404711700975] ***
*** center 1: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 19, 0]]
** centroid: 2, normalized-entropy: 0.8218127305034848, [(1, 55), (2, 19)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 16]]
** centroid: 3, normalized-entropy: 0.6931274153282881, [(2, 70), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 5, 0]]
** centroid: 5, normalized-entropy: 0.43949698692151346, [(1, 50), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 21, 0]]
** centroid: 6, normalized-entropy: 0.8760643678555242, [(1, 50), (2, 21)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1932647295817733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1932647295817733, 0.15168301378167234] ***
*** starting iteration: 2; err: [Inf, 0.1932647295817733, 0.15168301378167234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1932647295817733, 0.15168301378167234, 0.14754390525259078] ***
*** starting iteration: 3; err: [Inf, 0.1932647295817733, 0.15168301378167234, 0.14754390525259078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1932647295817733, 0.15168301378167234, 0.14754390525259078, 0.14711759432777763] ***
*** finished computation of 7 references, err: [Inf, 0.1932647295817733, 0.15168301378167234, 0.14754390525259078, 0.14711759432777763] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 64, 0]]
** centroid: 1, normalized-entropy: 0.8566727035015875, [(1, 25), (2, 64)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 11, 0]]
** centroid: 2, normalized-entropy: 0.6807937753703207, [(1, 50), (2, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 59, 11]]
** centroid: 4, normalized-entropy: 0.6274303352684106, [(2, 59), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19438582783937455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19438582783937455, 0.15053158420696855] ***
*** starting iteration: 2; err: [Inf, 0.19438582783937455, 0.15053158420696855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19438582783937455, 0.15053158420696855, 0.14638110894151032] ***
*** starting iteration: 3; err: [Inf, 0.19438582783937455, 0.15053158420696855, 0.14638110894151032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19438582783937455, 0.15053158420696855, 0.14638110894151032, 0.1452159223780036] ***
*** finished computation of 7 references, err: [Inf, 0.19438582783937455, 0.15053158420696855, 0.14638110894151032, 0.1452159223780036] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 42, 0]]
** centroid: 1, normalized-entropy: 1.0, [(1, 42), (2, 42)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 16]]
** centroid: 4, normalized-entropy: 0.6885521684368613, [(2, 71), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [60, 23, 0]]
** centroid: 5, normalized-entropy: 0.8514808683852091, [(1, 60), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18418135185539722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18418135185539722, 0.15119904890004546] ***
*** starting iteration: 2; err: [Inf, 0.18418135185539722, 0.15119904890004546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18418135185539722, 0.15119904890004546, 0.1436666225232184] ***
*** starting iteration: 3; err: [Inf, 0.18418135185539722, 0.15119904890004546, 0.1436666225232184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18418135185539722, 0.15119904890004546, 0.1436666225232184, 0.140651978536509] ***
*** finished computation of 7 references, err: [Inf, 0.18418135185539722, 0.15119904890004546, 0.1436666225232184, 0.140651978536509] ***
*** center 1: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 48, 18]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 48), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 5, 0]]
** centroid: 3, normalized-entropy: 0.4288109647301171, [(1, 52), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 6, 0]]
** centroid: 4, normalized-entropy: 0.5095157180881823, [(1, 47), (2, 6)]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 64, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [21, 70, 0]]
** centroid: 6, normalized-entropy: 0.7793498372920851, [(1, 21), (2, 70)]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 374,3 => 34,1 => 592), Dict(2 => 367,3 => 41,1 => 592))
[ Info: ===== scores for single classifier: {"micro_f1":0.939,"precision":0.939,"recall":0.939,"macro_recall":0.9353302220609657,"macro_f1":0.8759858525535092,"accuracy":0.939,"class_f1":{"2":0.9137199434229136,"3":0.7428571428571428,"1":0.9713804713804715},"class_precision":{"2":0.95,"3":0.609375,"1":0.9681208053691275},"class_recall":{"2":0.8801089918256131,"3":0.9512195121951219,"1":0.9746621621621622}}
[ Info: ===== scores for 1: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9618877741634769,"macro_f1":0.945205235151518,"accuracy":0.969,"class_f1":{"2":0.9577080491132333,"3":0.8965517241379309,"1":0.9813559322033898},"class_precision":{"2":0.9590163934426229,"3":0.8478260869565217,"1":0.9846938775510204},"class_recall":{"2":0.9564032697547684,"3":0.9512195121951219,"1":0.9780405405405406}}
[ Info: ===== scores for 5: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.983597528045757,"macro_f1":0.9557052629847225,"accuracy":0.977,"class_f1":{"2":0.9687924016282227,"3":0.9111111111111111,"1":0.9872122762148338},"class_precision":{"2":0.9648648648648649,"3":0.8367346938775511,"1":0.9965576592082617},"class_recall":{"2":0.9727520435967303,"3":1.0,"1":0.9780405405405406}}
[ Info: ===== scores for 7: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9812179345558092,"macro_f1":0.9474421279121531,"accuracy":0.974,"class_f1":{"2":0.9646739130434783,"3":0.891304347826087,"1":0.9863481228668941},"class_precision":{"2":0.962059620596206,"3":0.803921568627451,"1":0.996551724137931},"class_recall":{"2":0.9673024523160763,"3":1.0,"1":0.9763513513513513}}
[ Info: ===== scores for 9: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9803096693423669,"macro_f1":0.94377795303229,"accuracy":0.973,"class_f1":{"2":0.963265306122449,"3":0.8817204301075269,"1":0.9863481228668941},"class_precision":{"2":0.9619565217391305,"3":0.7884615384615384,"1":0.996551724137931},"class_recall":{"2":0.9645776566757494,"3":1.0,"1":0.9763513513513513}}
[ Info: ===== scores for 11: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9803096693423669,"macro_f1":0.9466923001084492,"accuracy":0.973,"class_f1":{"2":0.963265306122449,"3":0.891304347826087,"1":0.9855072463768116},"class_precision":{"2":0.9619565217391305,"3":0.803921568627451,"1":0.9948364888123924},"class_recall":{"2":0.9645776566757494,"3":1.0,"1":0.9763513513513513}}
(score = 0.962, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.969, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.977,"k":5,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9681182894198779,"macro_f1":0.9449692985808555,"accuracy":0.977,"class_f1":{"2":0.9687074829931973,"3":0.8764044943820225,"1":0.989795918367347},"class_precision":{"2":0.967391304347826,"3":0.8125,"1":0.9965753424657534},"class_recall":{"2":0.9700272479564033,"3":0.9512195121951219,"1":0.9831081081081081}}
Test Summary: | Pass  Total
AKNC          |    8      8
[140, 1, 7, 1, 3, 1, 6, 3, 1, 6, 8, 4, 8, 5, 8, 1, 11, 2, 10, 10, 6, 16, 10, 4, 9, 6, 3, 4, 8, 2, 3, 12, 41, 12, 8, 12, 2, 4, 5, 4, 8, 1, 6, 1, 15, 8, 4, 22, 21, 14, 3, 11, 3, 4, 6, 3, 10, 5, 64, 46, 5, 39, 27, 38, 17, 6, 23, 5, 211, 13, 31, 5, 10, 9, 5, 10, 22, 5, 42, 92, 18, 5, 8, 20, 57, 33, 37, 50, 8, 3, 7, 17, 14, 40, 3, 7, 60, 15, 100, 2, 93, 13, 2, 13, 37, 3, 126, 21, 8, 194, 13, 37, 55, 3, 124, 6, 7, 7, 94, 17, 49, 28, 45, 29, 5, 7, 15, 14, 3, 41, 11, 6, 7, 53, 214, 33, 14, 5, 5, 167, 192, 4, 4, 31, 41, 11, 3, 12, 24, 3, 4, 22, 12, 15, 18, 6, 78, 6, 154, 5, 58, 53, 9, 5, 124, 50, 5, 68, 30, 28, 31, 89, 11, 28, 18, 7, 475, 6, 37, 11, 17, 16, 22, 5, 17, 64, 13, 101, 107, 4, 16, 19, 7, 22, 301, 11, 56, 20, 15, 33, 30, 49, 19, 4, 58, 56, 65, 53, 8, 45, 12, 4, 82, 4, 6, 17, 127, 72, 7, 5, 16, 6, 22, 20, 106, 33, 14, 55, 69, 26, 2, 26, 26, 43, 5, 15, 11, 7, 3, 2, 3, 20, 91, 35, 3, 75, 4, 11, 24, 78, 41, 41, 340, 147, 92, 19, 43, 2, 171, 54, 32, 7, 19, 2, 1, 19, 22, 13, 15, 10, 26, 6, 29, 46, 6, 20, 20, 62, 15, 49, 20, 613, 25, 34, 31, 4, 40, 8, 25, 3, 32, 8, 13, 7, 6, 56, 20, 6, 7, 40]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6429999999999998, speedup = 0.2935047317360041, eval_ratio = 0.068851)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.415873015873016,"recall":0.40798611111111127,"f1":null,"seconds":0.00014413520693778992,"exhaustive_search_seconds":0.000363718718290329,"evaluations":440.9140625,"distances_sum":1740.6143232471625}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5668402777777776,"recall":0.5668402777777776,"f1":0.5668402777777776,"seconds":0.0002391468733549118,"exhaustive_search_seconds":0.000363718718290329,"evaluations":555.0390625,"distances_sum":1656.9569770517446}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6684027777777775,"recall":0.6684027777777775,"f1":0.6684027777777775,"seconds":0.0005003809928894043,"exhaustive_search_seconds":0.000363718718290329,"evaluations":671.703125,"distances_sum":1593.7547568611583}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7404513888888886,"recall":0.7404513888888886,"f1":0.7404513888888886,"seconds":0.00037932954728603363,"exhaustive_search_seconds":0.000363718718290329,"evaluations":752.3828125,"distances_sum":1567.4228436194621}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7986111111111105,"recall":0.7986111111111105,"f1":0.7986111111111105,"seconds":0.000562526285648346,"exhaustive_search_seconds":0.000363718718290329,"evaluations":853.90625,"distances_sum":1548.5665250897732}
KCenters.DeloneInvIndex> reached performance {"precision":0.8411458333333325,"recall":0.8411458333333325,"f1":0.8411458333333325,"seconds":0.0005865246057510376,"exhaustive_search_seconds":0.000363718718290329,"evaluations":956.65625,"distances_sum":1536.4299028858252}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8250000000000004, speedup = 0.6731345259569398, eval_ratio = 0.096607)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
