Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_B1KAh6/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_B1KAh6/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721051451604914
curgen: 20 fitness: 0.21721051451604914
curgen: 30 fitness: 0.2172336280454
curgen: 40 fitness: 0.2172336280454
curgen: 50 fitness: 0.2172336280454
CoordinateCreature{Array{Float64,1}}([-0.22254622328256837], -0.2172336280454) -0.22254622328256837 -0.2172336280454
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257844642436462
curgen: 100 fitness: 3.258202218867612
curgen: 150 fitness: 3.258264321078672
curgen: 200 fitness: 3.258264321078672
curgen: 250 fitness: 3.258369896903633
curgen: 300 fitness: 3.2583996953142074
curgen: 350 fitness: 3.2583996953142074
curgen: 400 fitness: 3.2584136164682227
curgen: 450 fitness: 3.258431459666414
curgen: 500 fitness: 3.2584351256135804
CoordinateCreature{Array{Float64,1}}([0.22292085094562858, 0.22249994366345194, 0.22266252643994022, -0.2226512668558755, -0.22303761699720231, 0.22249874478504253, 0.221817797978839, -0.22233343815923343, -0.22231886480210603, 0.22257458294358037, 0.22291954455105537, 0.22240685214884293, 0.22195059350561525, 0.2225544333872231, 0.2224597982155714], -3.2584351256135804) [0.22292085094562858, 0.22249994366345194, 0.22266252643994022, -0.2226512668558755, -0.22303761699720231, 0.22249874478504253, 0.221817797978839, -0.22233343815923343, -0.22231886480210603, 0.22257458294358037, 0.22291954455105537, 0.22240685214884293, 0.22195059350561525, 0.2225544333872231, 0.2224597982155714] -3.2584351256135804
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0014731857365291035
curgen: 100 fitness: -0.0013326159364908108
curgen: 150 fitness: -0.0013326159364908108
curgen: 200 fitness: -0.0013326159364908108
curgen: 250 fitness: -0.0013326159364908108
curgen: 300 fitness: -0.0012003699107197008
curgen: 350 fitness: -0.000649560366099422
curgen: 400 fitness: -0.000649560366099422
curgen: 450 fitness: -0.000649560366099422
curgen: 500 fitness: -0.0003650539013051457
CoordinateCreature{Array{Float64,1}}([3.833791492416685e-5, -0.000291250203597899, 0.000498504242514916, 0.0004694764087509306, 0.0002623080893237309, 0.0003955241346033471, -0.0005113574654211678, -0.00010706944827293467, -0.0003460296219903406, 0.0002439674573536106, -0.0003014590585808918, 3.702448898269757e-5, 0.00010294050519880103, 9.348613643288262e-5, 0.0007041425576890197], 0.0003650539013051457) [3.833791492416685e-5, -0.000291250203597899, 0.000498504242514916, 0.0004694764087509306, 0.0002623080893237309, 0.0003955241346033471, -0.0005113574654211678, -0.00010706944827293467, -0.0003460296219903406, 0.0002439674573536106, -0.0003014590585808918, 3.702448898269757e-5, 0.00010294050519880103, 9.348613643288262e-5, 0.0007041425576890197] 0.0003650539013051457
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
