Julia Version 1.5.0-DEV.875
Commit f7de6d242f (2020-05-07 14:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ms8AMS/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ms8AMS/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722383625892175
curgen: 20 fitness: 0.21722383625892175
curgen: 30 fitness: 0.21722383625892175
curgen: 40 fitness: 0.2172331582428348
curgen: 50 fitness: 0.2172331582428348
CoordinateCreature{Array{Float64,1}}([-0.22265121317243994], -0.2172331582428348) -0.22265121317243994 -0.2172331582428348
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257950642648722
curgen: 100 fitness: 3.258146250273642
curgen: 150 fitness: 3.2583537594578393
curgen: 200 fitness: 3.258403722481161
curgen: 250 fitness: 3.258403722481161
curgen: 300 fitness: 3.258407182169855
curgen: 350 fitness: 3.258456079678105
curgen: 400 fitness: 3.258456079678105
curgen: 450 fitness: 3.258459994552037
curgen: 500 fitness: 3.258459994552037
CoordinateCreature{Array{Float64,1}}([0.22251313764766384, 0.2223051341457742, 0.22243883166803466, 0.22253566688106216, -0.22268187552261717, 0.2229550851156077, 0.22274437386703927, -0.2228776130817054, 0.2225752395673471, -0.22239150548722567, -0.22269876809965186, 0.22185448372138783, 0.22262617180876274, -0.22231524975416125, -0.22245071933466407], -3.258459994552037) [0.22251313764766384, 0.2223051341457742, 0.22243883166803466, 0.22253566688106216, -0.22268187552261717, 0.2229550851156077, 0.22274437386703927, -0.2228776130817054, 0.2225752395673471, -0.22239150548722567, -0.22269876809965186, 0.22185448372138783, 0.22262617180876274, -0.22231524975416125, -0.22245071933466407] -3.258459994552037
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004645979927289545
curgen: 100 fitness: -0.004056860687484232
curgen: 150 fitness: -0.004056860687484232
curgen: 200 fitness: -0.00344962365645074
curgen: 250 fitness: -0.002625370380599179
curgen: 300 fitness: -0.002359132022860422
curgen: 350 fitness: -0.002359132022860422
curgen: 400 fitness: -0.0023071300789183624
curgen: 450 fitness: -0.0023071300789183624
curgen: 500 fitness: -0.0013395334859183095
CoordinateCreature{Array{Float64,1}}([-0.0002873202183266745, 6.682796231820498e-5, -0.0012821186552155368, -0.00011135092774488468, -7.529340029201453e-5, -5.6748303369471816e-5, 0.0007106301357169223, 0.00014579439361192895, 0.0007586279663584002, 0.00019295104139694465, -0.0006348105540160263, 0.0007239390047494481, -0.0017079586833117191, -7.755555754034683e-5, 0.00010318453693567437], 0.0013395334859183095) [-0.0002873202183266745, 6.682796231820498e-5, -0.0012821186552155368, -0.00011135092774488468, -7.529340029201453e-5, -5.6748303369471816e-5, 0.0007106301357169223, 0.00014579439361192895, 0.0007586279663584002, 0.00019295104139694465, -0.0006348105540160263, 0.0007239390047494481, -0.0017079586833117191, -7.755555754034683e-5, 0.00010318453693567437] 0.0013395334859183095
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
