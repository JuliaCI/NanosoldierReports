Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed Missings ──────────────────── v0.4.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed OrderedCollections ────────── v1.2.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed Tables ────────────────────── v1.0.4
  Installed JSON ──────────────────────── v0.21.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed InvertedIndices ───────────── v1.0.0
  Installed Parsers ───────────────────── v1.0.3
  Installed DataFrames ────────────────── v0.20.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SimilaritySearch ──────────── v0.3.19
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed Compat ────────────────────── v3.9.0
  Installed DataStructures ────────────── v0.17.15
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.3
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_yBu6QF/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_yBu6QF/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.3
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9370718047022819
[ Info: 0.8321307849884033
[ Info: 0.5538560461501281
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32982491600016756
mean(cdnet.distances) = 0.3940824529280265
mean(crand.distances) = 0.3627770833671093
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8081703019203026,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.0390625,"distances_sum":1904.9661325167963}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6962890625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6962890625,"f1":0.8081703019203026,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.0390625,"distances_sum":1904.9661325167963}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.91982964951715,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.609375,"distances_sum":2525.7734521636467}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8583801615051624,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.375,"distances_sum":2140.4316891047733}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.91982964951715,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.609375,"distances_sum":2525.7734521636467}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9454727564102572,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.78125,"distances_sum":2668.368840070618}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688988095238098,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.875,"distances_sum":2811.552155936388}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9499885531135537,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.7734375,"distances_sum":2713.9108273341226}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688988095238098,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.875,"distances_sum":2811.552155936388}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688988095238098,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.875,"distances_sum":2811.552155936388}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8192521020646027,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.0078125,"distances_sum":1664.3736593693575}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8192521020646027,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.0078125,"distances_sum":1664.3736593693575}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9434924450549457,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9296875,"distances_sum":2298.7492598606923}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9533539377289382,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2392.8255982433916}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9533539377289382,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.9140625,"distances_sum":2392.8255982433916}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025644,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.96875,"distances_sum":2497.7457721547544}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9639365842490846,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8984375,"distances_sum":2495.5392153015823}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9663919413919415,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.8984375,"distances_sum":2503.607060061774}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025644,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.96875,"distances_sum":2497.7457721547544}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9687900641025644,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.601874828338623e-6,"evaluations":8.96875,"distances_sum":2497.7457721547544}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7166638916638924,"seconds":4.559755325317383e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.5234375,"distances_sum":1330.7250286810802}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.5390625,"distances_sum":470.2276478240805}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8601341366966376,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4296875,"distances_sum":1885.1029983479402}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8601341366966376,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4296875,"distances_sum":1885.1029983479402}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9507154304029309,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.78125,"distances_sum":2503.9641330497157}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9507154304029309,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.78125,"distances_sum":2503.9641330497157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9758756868131869,"seconds":7.741153240203857e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2663.821888763572}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9770833333333337,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2669.393964346289}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770833333333337,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2669.393964346289}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770833333333337,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.90625,"distances_sum":2669.393964346289}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1884765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1884765625,"f1":null,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":5.6015625,"distances_sum":505.20276561778854}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1884765625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1884765625,"f1":null,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":5.6015625,"distances_sum":505.20276561778854}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1884765625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1884765625,"f1":null,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.9073486328125e-6,"evaluations":5.6015625,"distances_sum":505.20276561778854}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7931495587745594,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.671875,"distances_sum":1379.2793646952841}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7213527791652796,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.34375,"distances_sum":1162.7112663467167}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6728515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6728515625,"f1":0.7931495587745594,"seconds":5.213543772697449e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.671875,"distances_sum":1379.2793646952841}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.913741987179488,"seconds":6.2640756368637085e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.625,"distances_sum":2007.311237516826}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.944631410256411,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2226.7795056825894}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.944631410256411,"seconds":6.711110472679138e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.84375,"distances_sum":2226.7795056825894}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9729052197802202,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9375,"distances_sum":2387.289056706117}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9457906676656681,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7421875,"distances_sum":2264.3085186259323}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9729052197802202,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9375,"distances_sum":2387.289056706117}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9729052197802202,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9375,"distances_sum":2387.289056706117}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5625,"f1":0.700072150072151,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.484375,"distances_sum":1176.288465968127}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8822437978687987,"seconds":1.3161450624465942e-5,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.4609375,"distances_sum":1853.182576296054}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8822437978687987,"seconds":1.3161450624465942e-5,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.4609375,"distances_sum":1853.182576296054}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.944675116550117,"seconds":1.3628974556922913e-5,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.734375,"distances_sum":2282.487313334343}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9311469780219787,"seconds":8.303672075271606e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.609375,"distances_sum":2186.4158128240974}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.944675116550117,"seconds":1.3628974556922913e-5,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.734375,"distances_sum":2282.487313334343}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598443223443226,"seconds":6.321817636489868e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.859375,"distances_sum":2373.9983519410193}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618418040293043,"seconds":7.815659046173096e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.84375,"distances_sum":2399.1137709409304}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9535802738927744,"seconds":6.776303052902222e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.6953125,"distances_sum":2388.2995754947283}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9654590201465205,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2430.977699685888}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9654590201465205,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2430.977699685888}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9654590201465205,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8125,"distances_sum":2430.977699685888}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8016670829170837,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.3671875,"distances_sum":1532.664928162113}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4052734375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4052734375,"f1":null,"seconds":3.941357135772705e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":7.125,"distances_sum":819.8031507443926}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8706761988011995,"seconds":7.282942533493042e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.546875,"distances_sum":1859.2501112371526}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8706761988011995,"seconds":7.282942533493042e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.546875,"distances_sum":1859.2501112371526}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8950580669330679,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.703125,"distances_sum":1982.5617734838443}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.8203125,"f1":0.8950580669330679,"seconds":6.388872861862183e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.703125,"distances_sum":1982.5617734838443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.947161692474193,"seconds":6.556510925292969e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.7890625,"distances_sum":2356.3349290416313}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9469951923076927,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.703125,"distances_sum":2356.5234975237863}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9629292582417586,"seconds":8.52532684803009e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.890625,"distances_sum":2481.7898773147053}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9028284215784221,"seconds":6.26780092716217e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.640625,"distances_sum":2090.1825627393573}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9629292582417586,"seconds":8.52532684803009e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.890625,"distances_sum":2481.7898773147053}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9629292582417586,"seconds":8.52532684803009e-6,"exhaustive_search_seconds":1.7266720533370972e-6,"evaluations":8.890625,"distances_sum":2481.7898773147053}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.642578125, conf: {"ssize":5,"bsize":4}, perf: {"precision":null,"recall":0.642578125,"f1":null,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.4921875,"distances_sum":1426.903565488426}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.5334378480911255e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":4.8203125,"distances_sum":413.79019132190194}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.7709314990564998,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.5703125,"distances_sum":1409.9497401046422}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6435546875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6435546875,"f1":0.7709314990564998,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.5703125,"distances_sum":1409.9497401046422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7745502761127767,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.4765625,"distances_sum":1456.3155968270462}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.916375291375292,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.453125,"distances_sum":2230.2806040994965}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9007268772893781,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.46875,"distances_sum":2042.1005829083433}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8465269105894113,"seconds":6.370246410369873e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0625,"distances_sum":1749.3195573016408}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8504214535464543,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.1171875,"distances_sum":1747.1515901667387}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.916375291375292,"seconds":6.614252924919128e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.453125,"distances_sum":2230.2806040994965}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9638793498168504,"seconds":7.12275505065918e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2493.7173836085676}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9674507783882788,"seconds":6.953254342079163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2528.2398169019016}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.937248168498169,"seconds":6.843358278274536e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.59375,"distances_sum":2338.0990114133997}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516826923076928,"seconds":7.050111889839172e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":2430.407782300169}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605711996337,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8125,"distances_sum":2490.036290393018}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9461996336996342,"seconds":6.547197699546814e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7734375,"distances_sum":2389.649314256046}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9674507783882788,"seconds":6.953254342079163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2528.2398169019016}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9674507783882788,"seconds":6.953254342079163e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8671875,"distances_sum":2528.2398169019016}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2705078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2705078125,"f1":null,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.203125,"distances_sum":648.9540211557103}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2705078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2705078125,"f1":null,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.203125,"distances_sum":648.9540211557103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":5.90625,"distances_sum":832.4599557043309}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8415501165501175,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":7.8984375,"distances_sum":1715.5805739647533}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8415501165501175,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":7.8984375,"distances_sum":1715.5805739647533}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.959563873626374,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":8.8359375,"distances_sum":2485.782394266222}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.959563873626374,"seconds":6.042420864105225e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":8.8359375,"distances_sum":2485.782394266222}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9602506868131871,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":8.8359375,"distances_sum":2487.8773084558725}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9718037171162175,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":8.890625,"distances_sum":2572.030794113226}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9718037171162175,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":8.890625,"distances_sum":2572.030794113226}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9718037171162175,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.7248094081878662e-6,"evaluations":8.890625,"distances_sum":2572.030794113226}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7215725246975253,"seconds":4.589557647705078e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.8359375,"distances_sum":1233.341890700104}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8520680708180717,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3046875,"distances_sum":1793.7455353809958}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7529296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7529296875,"f1":0.8520680708180717,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3046875,"distances_sum":1793.7455353809958}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641998626373629,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2542.727294641801}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9297192390942399,"seconds":8.288770914077759e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6796875,"distances_sum":2329.9548272602374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590086996337003,"seconds":6.139278411865234e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.90625,"distances_sum":2513.343311860968}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8932234432234442,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6484375,"distances_sum":2030.3512410732221}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9641998626373629,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":2542.727294641801}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9765625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9765625,"f1":0.9870364010989012,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.984375,"distances_sum":2722.3982805457745}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766025641025644,"seconds":6.385147571563721e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9609375,"distances_sum":2646.06015559905}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9647206959706962,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9140625,"distances_sum":2568.0745731088246}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9765625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9870364010989012,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.984375,"distances_sum":2722.3982805457745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9765625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9765625,"f1":0.9870364010989012,"seconds":6.83218240737915e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.984375,"distances_sum":2722.3982805457745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5498046875, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5498046875,"f1":0.6966843919968926,"seconds":4.895031452178955e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.3125,"distances_sum":1143.5288064202957}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.68359375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.68359375,"f1":0.8026509948384958,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.7890625,"distances_sum":1506.1842231539517}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.68359375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.68359375,"f1":0.8026509948384958,"seconds":5.191192030906677e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.7890625,"distances_sum":1506.1842231539517}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.86583988927739,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.21875,"distances_sum":1868.7568720529957}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.818775842213343,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.75,"distances_sum":1603.0633886458388}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9045157967032975,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.7109375,"distances_sum":2152.007947505628}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":7,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9045157967032975,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.7109375,"distances_sum":2152.007947505628}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557577838827844,"seconds":6.5211206674575806e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8828125,"distances_sum":2532.258837113538}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9660001456876458,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.875,"distances_sum":2628.731978747079}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":11,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9302026098901105,"seconds":6.4782798290252686e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.7578125,"distances_sum":2326.2360020829983}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564045329670332,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.90625,"distances_sum":2511.0736988980193}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660001456876458,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.875,"distances_sum":2628.731978747079}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9660001456876458,"seconds":6.707385182380676e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.875,"distances_sum":2628.731978747079}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":4.779547452926636e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":6.859375,"distances_sum":656.1124916550917}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7172263500388507,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.46875,"distances_sum":1203.713173561347}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.7172263500388507,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":7.46875,"distances_sum":1203.713173561347}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8523851148851157,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.1796875,"distances_sum":1787.6421616978946}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9104109432234443,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6796875,"distances_sum":2174.3289205811025}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9104109432234443,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6796875,"distances_sum":2174.3289205811025}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9220014360639366,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6328125,"distances_sum":2304.3091897634818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9272810522810528,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.6953125,"distances_sum":2302.289877000006}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720810439560442,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9375,"distances_sum":2638.4597418198564}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502861721611726,"seconds":3.986060619354248e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.8203125,"distances_sum":2483.2636819913937}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720810439560442,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9375,"distances_sum":2638.4597418198564}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720810439560442,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.7657876014709473e-6,"evaluations":8.9375,"distances_sum":2638.4597418198564}}, n: 9
mean(cfft.distances) = 0.6347367008772002
mean(cdnet.distances) = 0.3928263292341946
mean(crand.distances) = 0.33075343821616787
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8933333333333332
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8488888888888889
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.84
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9511111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777778
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222224
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8733333333333334
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8377777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9088888888888889
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 1, 2, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.5640182656049728] ***
*** center 1: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.1811209268946279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1811209268946279, 0.15424203435266698] ***
*** starting iteration: 2; err: [Inf, 0.1811209268946279, 0.15424203435266698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1811209268946279, 0.15424203435266698, 0.15054291516106139] ***
*** starting iteration: 3; err: [Inf, 0.1811209268946279, 0.15424203435266698, 0.15054291516106139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1811209268946279, 0.15424203435266698, 0.15054291516106139, 0.14963730693831145] ***
*** finished computation of 7 references, err: [Inf, 0.1811209268946279, 0.15424203435266698, 0.15054291516106139, 0.14963730693831145] ***
*** center 1: selecting labels [1] (freq >= 2) [from [113, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 28, 0]]
** centroid: 2, normalized-entropy: 0.8516458330898723, [(1, 73), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [19, 65, 0]]
** centroid: 3, normalized-entropy: 0.7713111060849788, [(1, 19), (2, 65)]
*** center 4: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 35, 0]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(1, 63), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 123, 18]]
** centroid: 7, normalized-entropy: 0.5509844433017146, [(2, 123), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19743330725650485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19743330725650485, 0.14973518393923985] ***
*** finished computation of 7 references, err: [Inf, 0.19743330725650485, 0.14973518393923985] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [7, 104, 0]]
** centroid: 1, normalized-entropy: 0.33948600021427877, [(1, 7), (2, 104)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 13, 0]]
** centroid: 2, normalized-entropy: 0.6084002154765848, [(1, 74), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 104, 18]]
** centroid: 4, normalized-entropy: 0.603652249754401, [(2, 104), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [100, 23, 0]]
** centroid: 5, normalized-entropy: 0.6951360991052256, [(1, 100), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 7, 0]]
** centroid: 7, normalized-entropy: 0.5842388116428561, [(1, 43), (2, 7)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18054381422237722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18054381422237722, 0.15214894341047983] ***
*** starting iteration: 2; err: [Inf, 0.18054381422237722, 0.15214894341047983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18054381422237722, 0.15214894341047983, 0.14982842937156535] ***
*** starting iteration: 3; err: [Inf, 0.18054381422237722, 0.15214894341047983, 0.14982842937156535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18054381422237722, 0.15214894341047983, 0.14982842937156535, 0.14826020271541074] ***
*** starting iteration: 4; err: [Inf, 0.18054381422237722, 0.15214894341047983, 0.14982842937156535, 0.14826020271541074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18054381422237722, 0.15214894341047983, 0.14982842937156535, 0.14826020271541074, 0.14735023027796973] ***
*** finished computation of 7 references, err: [Inf, 0.18054381422237722, 0.15214894341047983, 0.14982842937156535, 0.14826020271541074, 0.14735023027796973] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [82, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [21, 72, 0]]
** centroid: 3, normalized-entropy: 0.7706290693639406, [(1, 21), (2, 72)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [97, 11, 0]]
** centroid: 4, normalized-entropy: 0.4748384883008607, [(1, 97), (2, 11)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [43, 26, 0]]
** centroid: 5, normalized-entropy: 0.9557589912150007, [(1, 43), (2, 26)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 131, 20]]
** centroid: 6, normalized-entropy: 0.5641201360194285, [(2, 131), (3, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2596756624521456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596756624521456, 0.1601920479090362] ***
*** starting iteration: 2; err: [Inf, 0.2596756624521456, 0.1601920479090362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596756624521456, 0.1601920479090362, 0.15097114530627964] ***
*** starting iteration: 3; err: [Inf, 0.2596756624521456, 0.1601920479090362, 0.15097114530627964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596756624521456, 0.1601920479090362, 0.15097114530627964, 0.14865766585552492] ***
*** starting iteration: 4; err: [Inf, 0.2596756624521456, 0.1601920479090362, 0.15097114530627964, 0.14865766585552492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596756624521456, 0.1601920479090362, 0.15097114530627964, 0.14865766585552492, 0.14779129575322225] ***
*** finished computation of 7 references, err: [Inf, 0.2596756624521456, 0.1601920479090362, 0.15097114530627964, 0.14865766585552492, 0.14779129575322225] ***
*** center 1: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 117, 10]]
** centroid: 2, normalized-entropy: 0.39772442582624484, [(2, 117), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 81, 0]]
** centroid: 4, normalized-entropy: 0.43609466429612137, [(1, 8), (2, 81)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [100, 12, 0]]
** centroid: 5, normalized-entropy: 0.4912373418243334, [(1, 100), (2, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 32, 0]]
** centroid: 7, normalized-entropy: 0.9113423759758414, [(1, 66), (2, 32)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22052787526373616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22052787526373616, 0.16805115365213505] ***
*** starting iteration: 2; err: [Inf, 0.22052787526373616, 0.16805115365213505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684] ***
*** starting iteration: 3; err: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684, 0.15113972234833348] ***
*** starting iteration: 4; err: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684, 0.15113972234833348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684, 0.15113972234833348, 0.1488276457088208] ***
*** starting iteration: 5; err: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684, 0.15113972234833348, 0.1488276457088208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684, 0.15113972234833348, 0.1488276457088208, 0.14786799261262557] ***
*** finished computation of 7 references, err: [Inf, 0.22052787526373616, 0.16805115365213505, 0.15711287590996684, 0.15113972234833348, 0.1488276457088208, 0.14786799261262557] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [82, 2, 0]]
** centroid: 1, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 19, 0]]
** centroid: 4, normalized-entropy: 0.7261630586710504, [(1, 75), (2, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 93, 0]]
** centroid: 5, normalized-entropy: 0.39938208242459744, [(1, 8), (2, 93)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [28, 66, 0]]
** centroid: 6, normalized-entropy: 0.8786744932173094, [(1, 28), (2, 66)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 71, 18]]
** centroid: 7, normalized-entropy: 0.7263997735417457, [(2, 71), (3, 18)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18792790428608253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18792790428608253, 0.16029234868481287] ***
*** starting iteration: 2; err: [Inf, 0.18792790428608253, 0.16029234868481287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738] ***
*** starting iteration: 3; err: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233] ***
*** starting iteration: 4; err: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233, 0.1550501818270206] ***
*** starting iteration: 5; err: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233, 0.1550501818270206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233, 0.1550501818270206, 0.15385297016482213] ***
*** starting iteration: 6; err: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233, 0.1550501818270206, 0.15385297016482213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233, 0.1550501818270206, 0.15385297016482213, 0.1530147543682464] ***
*** finished computation of 7 references, err: [Inf, 0.18792790428608253, 0.16029234868481287, 0.15785694050405738, 0.15646263274868233, 0.1550501818270206, 0.15385297016482213, 0.1530147543682464] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [79, 11, 0]]
** centroid: 1, normalized-entropy: 0.5357150195407704, [(1, 79), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [93, 6, 0]]
** centroid: 2, normalized-entropy: 0.32984607020714635, [(1, 93), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 23, 0]]
** centroid: 3, normalized-entropy: 0.7700664782920602, [(1, 79), (2, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 161, 20]]
** centroid: 5, normalized-entropy: 0.5014139573914894, [(2, 161), (3, 20)]
*** center 6: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [43, 40, 0]]
** centroid: 7, normalized-entropy: 0.9990574042663861, [(1, 43), (2, 40)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18628799253195033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18628799253195033, 0.16193650262793344] ***
*** starting iteration: 2; err: [Inf, 0.18628799253195033, 0.16193650262793344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598] ***
*** starting iteration: 3; err: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598, 0.1486477246521965] ***
*** starting iteration: 4; err: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598, 0.1486477246521965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598, 0.1486477246521965, 0.14733010472525945] ***
*** starting iteration: 5; err: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598, 0.1486477246521965, 0.14733010472525945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598, 0.1486477246521965, 0.14733010472525945, 0.14668395487463165] ***
*** finished computation of 7 references, err: [Inf, 0.18628799253195033, 0.16193650262793344, 0.15246005641712598, 0.1486477246521965, 0.14733010472525945, 0.14668395487463165] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [102, 33, 0]]
** centroid: 1, normalized-entropy: 0.80235344282919, [(1, 102), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [98, 7, 0]]
** centroid: 2, normalized-entropy: 0.3533593350214213, [(1, 98), (2, 7)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 11, 0]]
** centroid: 3, normalized-entropy: 0.6220403090607189, [(1, 60), (2, 11)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 102, 10]]
** centroid: 4, normalized-entropy: 0.4340811200043348, [(2, 102), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 89, 0]]
** centroid: 7, normalized-entropy: 0.15240699892386778, [(1, 2), (2, 89)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3086994139354553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3086994139354553, 0.23404010657959426] ***
*** starting iteration: 2; err: [Inf, 0.3086994139354553, 0.23404010657959426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3086994139354553, 0.23404010657959426, 0.23271604545565472] ***
*** starting iteration: 3; err: [Inf, 0.3086994139354553, 0.23404010657959426, 0.23271604545565472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3086994139354553, 0.23404010657959426, 0.23271604545565472, 0.23253335326758995] ***
*** finished computation of 3 references, err: [Inf, 0.3086994139354553, 0.23404010657959426, 0.23271604545565472, 0.23253335326758995] ***
*** center 1: selecting labels [1] (freq >= 1) [from [232, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [151, 41, 0]]
** centroid: 2, normalized-entropy: 0.7481981891199669, [(1, 151), (2, 41)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [14, 210, 18]]
** centroid: 3, normalized-entropy: 0.4380313914910724, [(1, 14), (2, 210), (3, 18)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5281736376057232] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5281736376057232, 0.2798311281683987] ***
*** starting iteration: 2; err: [Inf, 0.5281736376057232, 0.2798311281683987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936] ***
*** starting iteration: 3; err: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936, 0.2387064028785437] ***
*** starting iteration: 4; err: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936, 0.2387064028785437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936, 0.2387064028785437, 0.2371474639994317] ***
*** starting iteration: 5; err: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936, 0.2387064028785437, 0.2371474639994317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936, 0.2387064028785437, 0.2371474639994317, 0.2362286098220426] ***
*** finished computation of 3 references, err: [Inf, 0.5281736376057232, 0.2798311281683987, 0.25150489598104936, 0.2387064028785437, 0.2371474639994317, 0.2362286098220426] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 202, 20]]
** centroid: 1, normalized-entropy: 0.30047929433278525, [(1, 1), (2, 202), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [145, 31, 0]]
** centroid: 2, normalized-entropy: 0.6715514841250323, [(1, 145), (2, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [260, 8, 0]]
** centroid: 3, normalized-entropy: 0.19364280468389852, [(1, 260), (2, 8)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.35289629074888695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35289629074888695, 0.2772622372231808] ***
*** starting iteration: 2; err: [Inf, 0.35289629074888695, 0.2772622372231808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664] ***
*** starting iteration: 3; err: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664, 0.2372348713007863] ***
*** starting iteration: 4; err: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664, 0.2372348713007863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664, 0.2372348713007863, 0.23347929981292814] ***
*** starting iteration: 5; err: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664, 0.2372348713007863, 0.23347929981292814] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664, 0.2372348713007863, 0.23347929981292814, 0.2329601884423022] ***
*** finished computation of 3 references, err: [Inf, 0.35289629074888695, 0.2772622372231808, 0.2593713605537664, 0.2372348713007863, 0.23347929981292814, 0.2329601884423022] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [179, 33, 0]]
** centroid: 1, normalized-entropy: 0.6238259731050348, [(1, 179), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [236, 16, 0]]
** centroid: 2, normalized-entropy: 0.3411538931451763, [(1, 236), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 193, 10]]
** centroid: 3, normalized-entropy: 0.2832497637782149, [(2, 193), (3, 10)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21179991004364174] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21179991004364174, 0.1928718624798743] ***
*** starting iteration: 2; err: [Inf, 0.21179991004364174, 0.1928718624798743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152] ***
*** starting iteration: 3; err: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152, 0.18671101874527843] ***
*** starting iteration: 4; err: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152, 0.18671101874527843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152, 0.18671101874527843, 0.18548474633330675] ***
*** starting iteration: 5; err: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152, 0.18671101874527843, 0.18548474633330675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152, 0.18671101874527843, 0.18548474633330675, 0.1850156068330625] ***
*** finished computation of 7 references, err: [Inf, 0.21179991004364174, 0.1928718624798743, 0.18993852623562152, 0.18671101874527843, 0.18548474633330675, 0.1850156068330625] ***
*** center 1: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 77, 0]]
** centroid: 3, normalized-entropy: 0.8465618461461522, [(1, 29), (2, 77)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 27, 0]]
** centroid: 4, normalized-entropy: 0.9018043446575508, [(1, 58), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 79, 18]]
** centroid: 5, normalized-entropy: 0.6921053253628727, [(2, 79), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 68, 0]]
** centroid: 7, normalized-entropy: 0.7401470427139037, [(1, 18), (2, 68)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22607251116866317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607251116866317, 0.20399875914178106] ***
*** starting iteration: 2; err: [Inf, 0.22607251116866317, 0.20399875914178106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821] ***
*** starting iteration: 3; err: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204] ***
*** starting iteration: 4; err: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204, 0.19881105051142745] ***
*** starting iteration: 5; err: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204, 0.19881105051142745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204, 0.19881105051142745, 0.19759345860562583] ***
*** starting iteration: 6; err: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204, 0.19881105051142745, 0.19759345860562583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204, 0.19881105051142745, 0.19759345860562583, 0.19672568505867266] ***
*** finished computation of 7 references, err: [Inf, 0.22607251116866317, 0.20399875914178106, 0.2028828902711821, 0.20161892025769204, 0.19881105051142745, 0.19759345860562583, 0.19672568505867266] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [13, 69, 0]]
** centroid: 1, normalized-entropy: 0.6307970795750609, [(1, 13), (2, 69)]
*** center 2: selecting labels [1] (freq >= 1) [from [157, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 88, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 38, 20]]
** centroid: 4, normalized-entropy: 0.9293636260137188, [(2, 38), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [109, 9, 0]]
** centroid: 5, normalized-entropy: 0.388902232296877, [(1, 109), (2, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [36, 37, 0]]
** centroid: 7, normalized-entropy: 0.9998646331239297, [(1, 36), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23244736005441807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203] ***
*** starting iteration: 2; err: [Inf, 0.23244736005441807, 0.20724572578736203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565] ***
*** starting iteration: 3; err: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985] ***
*** starting iteration: 4; err: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804] ***
*** starting iteration: 5; err: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804, 0.1885253197207734] ***
*** starting iteration: 6; err: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804, 0.1885253197207734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804, 0.1885253197207734, 0.18699030101723757] ***
*** starting iteration: 7; err: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804, 0.1885253197207734, 0.18699030101723757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804, 0.1885253197207734, 0.18699030101723757, 0.18600091249423698] ***
*** finished computation of 7 references, err: [Inf, 0.23244736005441807, 0.20724572578736203, 0.19995816519017565, 0.1949728200563985, 0.19037809899157804, 0.1885253197207734, 0.18699030101723757, 0.18600091249423698] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 60, 0]]
** centroid: 1, normalized-entropy: 0.9672947789468944, [(1, 39), (2, 60)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 57, 0]]
** centroid: 2, normalized-entropy: 0.9777287741161507, [(1, 40), (2, 57)]
*** center 3: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 86, 10]]
** centroid: 4, normalized-entropy: 0.4820661480830933, [(2, 86), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [98, 1, 0]]
** centroid: 6, normalized-entropy: 0.08146202691505994, [(1, 98), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 38, 0]]
** centroid: 7, normalized-entropy: 0.9824740868386409, [(1, 52), (2, 38)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22405930179067785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22405930179067785, 0.19670051479867348] ***
*** finished computation of 7 references, err: [Inf, 0.22405930179067785, 0.19670051479867348] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 11, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(1, 66), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 125, 18]]
** centroid: 2, normalized-entropy: 0.5460133954586516, [(2, 125), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 61, 0]]
** centroid: 3, normalized-entropy: 0.9409217747114994, [(1, 34), (2, 61)]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 54, 0]]
** centroid: 6, normalized-entropy: 0.9999369937966904, [(1, 53), (2, 54)]
*** center 7: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24823002816726644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24823002816726644, 0.19861675495480088] ***
*** finished computation of 7 references, err: [Inf, 0.24823002816726644, 0.19861675495480088] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 14, 0]]
** centroid: 1, normalized-entropy: 0.7394809367166378, [(1, 53), (2, 14)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 152, 20]]
** centroid: 2, normalized-entropy: 0.5185697317883058, [(2, 152), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [75, 3, 0]]
** centroid: 5, normalized-entropy: 0.23519338181924157, [(1, 75), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 34, 0]]
** centroid: 6, normalized-entropy: 0.8599530497177523, [(1, 86), (2, 34)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 38, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 57), (2, 38)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23612851084445952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23612851084445952, 0.19625686850249377] ***
*** finished computation of 7 references, err: [Inf, 0.23612851084445952, 0.19625686850249377] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 3, 0]]
** centroid: 2, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [115, 16, 0]]
** centroid: 3, normalized-entropy: 0.5354737201740676, [(1, 115), (2, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 21, 0]]
** centroid: 4, normalized-entropy: 0.8554508105601307, [(1, 54), (2, 21)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 125, 10]]
** centroid: 5, normalized-entropy: 0.38094658570539014, [(2, 125), (3, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [61, 3, 0]]
** centroid: 6, normalized-entropy: 0.2729708579140699, [(1, 61), (2, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1979894585309849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1979894585309849, 0.14879119144319772] ***
*** finished computation of 7 references, err: [Inf, 0.1979894585309849, 0.14879119144319772] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 120, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [87, 14, 0]]
** centroid: 2, normalized-entropy: 0.5805970961414402, [(1, 87), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 83, 20]]
** centroid: 4, normalized-entropy: 0.7101234912653349, [(2, 83), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [95, 18, 0]]
** centroid: 5, normalized-entropy: 0.6326131852700402, [(1, 95), (2, 18)]
*** center 6: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 6, 0]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(1, 39), (2, 6)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2033929239813311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2033929239813311, 0.15316897150229614] ***
*** finished computation of 7 references, err: [Inf, 0.2033929239813311, 0.15316897150229614] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [8, 84, 0]]
** centroid: 1, normalized-entropy: 0.42622865699814483, [(1, 8), (2, 84)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 23, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 69), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 109, 10]]
** centroid: 4, normalized-entropy: 0.41623480238728294, [(2, 109), (3, 10)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [109, 24, 0]]
** centroid: 5, normalized-entropy: 0.6810629511553796, [(1, 109), (2, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 2, 0]]
** centroid: 7, normalized-entropy: 0.21357981533827744, [(1, 57), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3631702106524337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184] ***
*** starting iteration: 2; err: [Inf, 0.3631702106524337, 0.33397235401120184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105] ***
*** starting iteration: 3; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928] ***
*** starting iteration: 4; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665] ***
*** starting iteration: 5; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936] ***
*** starting iteration: 6; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276] ***
*** starting iteration: 7; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276, 0.30460567290715695] ***
*** starting iteration: 8; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276, 0.30460567290715695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276, 0.30460567290715695, 0.29325762135186445] ***
*** starting iteration: 9; err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276, 0.30460567290715695, 0.29325762135186445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276, 0.30460567290715695, 0.29325762135186445, 0.29311068996566125] ***
*** finished computation of 3 references, err: [Inf, 0.3631702106524337, 0.33397235401120184, 0.32915988045132105, 0.3258797696325928, 0.32266527867467665, 0.31721253363644936, 0.312906817014276, 0.30460567290715695, 0.29325762135186445, 0.29311068996566125] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [76, 166, 18]]
** centroid: 1, normalized-entropy: 0.7562856548882932, [(1, 76), (2, 166), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [110, 85, 0]]
** centroid: 2, normalized-entropy: 0.98811083652183, [(1, 110), (2, 85)]
*** center 3: selecting labels [1] (freq >= 2) [from [211, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.503954523858772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.503954523858772, 0.3140914458837332] ***
*** starting iteration: 2; err: [Inf, 0.503954523858772, 0.3140914458837332] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.503954523858772, 0.3140914458837332, 0.2955763654104773] ***
*** starting iteration: 3; err: [Inf, 0.503954523858772, 0.3140914458837332, 0.2955763654104773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.503954523858772, 0.3140914458837332, 0.2955763654104773, 0.292646671252987] ***
*** starting iteration: 4; err: [Inf, 0.503954523858772, 0.3140914458837332, 0.2955763654104773, 0.292646671252987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.503954523858772, 0.3140914458837332, 0.2955763654104773, 0.292646671252987, 0.2919854961022891] ***
*** finished computation of 3 references, err: [Inf, 0.503954523858772, 0.3140914458837332, 0.2955763654104773, 0.292646671252987, 0.2919854961022891] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [120, 62, 0]]
** centroid: 1, normalized-entropy: 0.9254482516437047, [(1, 120), (2, 62)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [54, 179, 20]]
** centroid: 2, normalized-entropy: 0.7054738876262824, [(1, 54), (2, 179), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [232, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32122916243188476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32122916243188476, 0.29655110809499624] ***
*** starting iteration: 2; err: [Inf, 0.32122916243188476, 0.29655110809499624] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32122916243188476, 0.29655110809499624, 0.29623718827409945] ***
*** finished computation of 3 references, err: [Inf, 0.32122916243188476, 0.29655110809499624, 0.29623718827409945] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [2, 191, 10]]
** centroid: 1, normalized-entropy: 0.22861103744446634, [(1, 2), (2, 191), (3, 10)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [240, 8, 0]]
** centroid: 2, normalized-entropy: 0.2055925081850832, [(1, 240), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [173, 43, 0]]
** centroid: 3, normalized-entropy: 0.7200723733053964, [(1, 173), (2, 43)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3058272075444997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058272075444997, 0.29502793301914904] ***
*** starting iteration: 2; err: [Inf, 0.3058272075444997, 0.29502793301914904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3058272075444997, 0.29502793301914904, 0.2940295864981753] ***
*** finished computation of 3 references, err: [Inf, 0.3058272075444997, 0.29502793301914904, 0.2940295864981753] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [115, 72, 0]]
** centroid: 1, normalized-entropy: 0.9615150162381733, [(1, 115), (2, 72)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [55, 179, 18]]
** centroid: 2, normalized-entropy: 0.6951195510372326, [(1, 55), (2, 179), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [227, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3496478809102409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3496478809102409, 0.30784075740708045] ***
*** starting iteration: 2; err: [Inf, 0.3496478809102409, 0.30784075740708045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3496478809102409, 0.30784075740708045, 0.2945032496315272] ***
*** starting iteration: 3; err: [Inf, 0.3496478809102409, 0.30784075740708045, 0.2945032496315272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3496478809102409, 0.30784075740708045, 0.2945032496315272, 0.29279232971548946] ***
*** finished computation of 3 references, err: [Inf, 0.3496478809102409, 0.30784075740708045, 0.2945032496315272, 0.29279232971548946] ***
*** center 1: selecting labels [1] (freq >= 1) [from [227, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [63, 178, 20]]
** centroid: 2, normalized-entropy: 0.7290640291319203, [(1, 63), (2, 178), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 63, 0]]
** centroid: 3, normalized-entropy: 0.9358021984078705, [(1, 116), (2, 63)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36781292746605904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36781292746605904, 0.29856304763753466] ***
*** starting iteration: 2; err: [Inf, 0.36781292746605904, 0.29856304763753466] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36781292746605904, 0.29856304763753466, 0.29654093173289225] ***
*** starting iteration: 3; err: [Inf, 0.36781292746605904, 0.29856304763753466, 0.29654093173289225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36781292746605904, 0.29856304763753466, 0.29654093173289225, 0.2962854718621904] ***
*** finished computation of 3 references, err: [Inf, 0.36781292746605904, 0.29856304763753466, 0.29654093173289225, 0.2962854718621904] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [169, 44, 0]]
** centroid: 1, normalized-entropy: 0.7348804373538654, [(1, 169), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [246, 16, 0]]
** centroid: 2, normalized-entropy: 0.3316727407990799, [(1, 246), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 182, 10]]
** centroid: 3, normalized-entropy: 0.29518174309075856, [(2, 182), (3, 10)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29370482796355635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29370482796355635, 0.23581068419121406] ***
*** starting iteration: 2; err: [Inf, 0.29370482796355635, 0.23581068419121406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29370482796355635, 0.23581068419121406, 0.2353621081144244] ***
*** finished computation of 3 references, err: [Inf, 0.29370482796355635, 0.23581068419121406, 0.2353621081144244] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [101, 80, 0]]
** centroid: 1, normalized-entropy: 0.9902679459289498, [(1, 101), (2, 80)]
*** center 2: selecting labels [1] (freq >= 2) [from [212, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [84, 171, 18]]
** centroid: 3, normalized-entropy: 0.7600198436342855, [(1, 84), (2, 171), (3, 18)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31036029976123813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31036029976123813, 0.24350000348436399] ***
*** starting iteration: 2; err: [Inf, 0.31036029976123813, 0.24350000348436399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31036029976123813, 0.24350000348436399, 0.23313692704714398] ***
*** starting iteration: 3; err: [Inf, 0.31036029976123813, 0.24350000348436399, 0.23313692704714398] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31036029976123813, 0.24350000348436399, 0.23313692704714398, 0.23145284800967578] ***
*** starting iteration: 4; err: [Inf, 0.31036029976123813, 0.24350000348436399, 0.23313692704714398, 0.23145284800967578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31036029976123813, 0.24350000348436399, 0.23313692704714398, 0.23145284800967578, 0.23110773958366315] ***
*** finished computation of 3 references, err: [Inf, 0.31036029976123813, 0.24350000348436399, 0.23313692704714398, 0.23145284800967578, 0.23110773958366315] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [64, 185, 20]]
** centroid: 1, normalized-entropy: 0.7211814248641129, [(1, 64), (2, 185), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [224, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [118, 56, 0]]
** centroid: 3, normalized-entropy: 0.9063701886077911, [(1, 118), (2, 56)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.332420539550729] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.332420539550729, 0.2351383648085306] ***
*** starting iteration: 2; err: [Inf, 0.332420539550729, 0.2351383648085306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.332420539550729, 0.2351383648085306, 0.2326514162346609] ***
*** starting iteration: 3; err: [Inf, 0.332420539550729, 0.2351383648085306, 0.2326514162346609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.332420539550729, 0.2351383648085306, 0.2326514162346609, 0.23236061306740122] ***
*** finished computation of 3 references, err: [Inf, 0.332420539550729, 0.2351383648085306, 0.2326514162346609, 0.23236061306740122] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [94, 152, 9]]
** centroid: 1, normalized-entropy: 0.7230070660159994, [(1, 94), (2, 152), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [208, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [113, 90, 1]]
** centroid: 3, normalized-entropy: 0.9907201466305607, [(1, 113), (2, 90)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26430821074760175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26430821074760175, 0.20902737782842987] ***
*** starting iteration: 2; err: [Inf, 0.26430821074760175, 0.20902737782842987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26430821074760175, 0.20902737782842987, 0.19861633620048696] ***
*** starting iteration: 3; err: [Inf, 0.26430821074760175, 0.20902737782842987, 0.19861633620048696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26430821074760175, 0.20902737782842987, 0.19861633620048696, 0.1954668600548495] ***
*** finished computation of 7 references, err: [Inf, 0.26430821074760175, 0.20902737782842987, 0.19861633620048696, 0.1954668600548495] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [5, 112, 0]]
** centroid: 1, normalized-entropy: 0.25469470466982796, [(1, 5), (2, 112)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [106, 16, 0]]
** centroid: 2, normalized-entropy: 0.5605769426145328, [(1, 106), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 68, 18]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 55, 0]]
** centroid: 7, normalized-entropy: 0.98460399620868, [(1, 41), (2, 55)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37471451495482266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37471451495482266, 0.2383472732752785] ***
*** starting iteration: 2; err: [Inf, 0.37471451495482266, 0.2383472732752785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37471451495482266, 0.2383472732752785, 0.21693457111666004] ***
*** starting iteration: 3; err: [Inf, 0.37471451495482266, 0.2383472732752785, 0.21693457111666004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37471451495482266, 0.2383472732752785, 0.21693457111666004, 0.20684003903959197] ***
*** finished computation of 7 references, err: [Inf, 0.37471451495482266, 0.2383472732752785, 0.21693457111666004, 0.20684003903959197] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [23, 77, 19]]
** centroid: 1, normalized-entropy: 0.8121932338255385, [(1, 23), (2, 77), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [84, 3, 0]]
** centroid: 4, normalized-entropy: 0.21639693245126485, [(1, 84), (2, 3)]
*** center 5: selecting labels [1, 2, 3] (freq >= 1) [from [18, 104, 1]]
** centroid: 5, normalized-entropy: 0.42074757818457814, [(1, 18), (2, 104), (3, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [16, 57, 0]]
** centroid: 6, normalized-entropy: 0.7586638628883696, [(1, 16), (2, 57)]
*** center 7: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24937601986926222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24937601986926222, 0.190620895792106] ***
*** starting iteration: 2; err: [Inf, 0.24937601986926222, 0.190620895792106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24937601986926222, 0.190620895792106, 0.18593356822305981] ***
*** starting iteration: 3; err: [Inf, 0.24937601986926222, 0.190620895792106, 0.18593356822305981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24937601986926222, 0.190620895792106, 0.18593356822305981, 0.1849604244665082] ***
*** finished computation of 7 references, err: [Inf, 0.24937601986926222, 0.190620895792106, 0.18593356822305981, 0.1849604244665082] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 42, 0]]
** centroid: 3, normalized-entropy: 0.9996098363678071, [(1, 44), (2, 42)]
*** center 4: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [41, 49, 0]]
** centroid: 5, normalized-entropy: 0.9942929346520455, [(1, 41), (2, 49)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [52, 48, 0]]
** centroid: 6, normalized-entropy: 0.998845535995202, [(1, 52), (2, 48)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 103, 10]]
** centroid: 7, normalized-entropy: 0.43142820800151405, [(2, 103), (3, 10)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 12)
[0.9389958821096546, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.22471241177375745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22471241177375745, 0.1942086725134973] ***
*** starting iteration: 2; err: [Inf, 0.22471241177375745, 0.1942086725134973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22471241177375745, 0.1942086725134973, 0.19195429699680022] ***
*** starting iteration: 3; err: [Inf, 0.22471241177375745, 0.1942086725134973, 0.19195429699680022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22471241177375745, 0.1942086725134973, 0.19195429699680022, 0.1909391549373935] ***
*** starting iteration: 4; err: [Inf, 0.22471241177375745, 0.1942086725134973, 0.19195429699680022, 0.1909391549373935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22471241177375745, 0.1942086725134973, 0.19195429699680022, 0.1909391549373935, 0.19021955085498793] ***
*** finished computation of 7 references, err: [Inf, 0.22471241177375745, 0.1942086725134973, 0.19195429699680022, 0.1909391549373935, 0.19021955085498793] ***
*** center 1: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [87, 26, 0]]
** centroid: 3, normalized-entropy: 0.7781655393133492, [(1, 87), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 20, 0]]
** centroid: 4, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 143, 18]]
** centroid: 5, normalized-entropy: 0.505325255845851, [(2, 143), (3, 18)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [40, 46, 0]]
** centroid: 6, normalized-entropy: 0.996485989886783, [(1, 40), (2, 46)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [79, 16, 0]]
** centroid: 7, normalized-entropy: 0.6540800387941991, [(1, 79), (2, 16)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22386295548353952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22386295548353952, 0.1947486001601641] ***
*** starting iteration: 2; err: [Inf, 0.22386295548353952, 0.1947486001601641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22386295548353952, 0.1947486001601641, 0.18832542711234967] ***
*** starting iteration: 3; err: [Inf, 0.22386295548353952, 0.1947486001601641, 0.18832542711234967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22386295548353952, 0.1947486001601641, 0.18832542711234967, 0.18684964261619538] ***
*** starting iteration: 4; err: [Inf, 0.22386295548353952, 0.1947486001601641, 0.18832542711234967, 0.18684964261619538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22386295548353952, 0.1947486001601641, 0.18832542711234967, 0.18684964261619538, 0.18654985479051261] ***
*** finished computation of 7 references, err: [Inf, 0.22386295548353952, 0.1947486001601641, 0.18832542711234967, 0.18684964261619538, 0.18654985479051261] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 81, 0]]
** centroid: 1, normalized-entropy: 0.2222848306856879, [(1, 3), (2, 81)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [41, 47, 0]]
** centroid: 2, normalized-entropy: 0.99664402524877, [(1, 41), (2, 47)]
*** center 3: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 76, 20]]
** centroid: 4, normalized-entropy: 0.7382848661434506, [(2, 76), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [38, 37, 0]]
** centroid: 6, normalized-entropy: 0.999871756640849, [(1, 38), (2, 37)]
*** center 7: selecting labels [1] (freq >= 2) [from [143, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26164720098577393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657] ***
*** starting iteration: 2; err: [Inf, 0.26164720098577393, 0.21542289329942657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102] ***
*** starting iteration: 3; err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506] ***
*** starting iteration: 4; err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905] ***
*** starting iteration: 5; err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961] ***
*** starting iteration: 6; err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961, 0.19896864120023272] ***
*** starting iteration: 7; err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961, 0.19896864120023272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961, 0.19896864120023272, 0.197700837987295] ***
*** starting iteration: 8; err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961, 0.19896864120023272, 0.197700837987295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961, 0.19896864120023272, 0.197700837987295, 0.19675112297308855] ***
*** finished computation of 7 references, err: [Inf, 0.26164720098577393, 0.21542289329942657, 0.20786491437149102, 0.2032407330868506, 0.20151175924393905, 0.2002926967406961, 0.19896864120023272, 0.197700837987295, 0.19675112297308855] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [97, 14, 0]]
** centroid: 1, normalized-entropy: 0.5467175366117469, [(1, 97), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 44, 0]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(1, 33), (2, 44)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 7]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 49), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 67, 3]]
** centroid: 5, normalized-entropy: 0.25524211319019174, [(2, 67), (3, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [32, 68, 0]]
** centroid: 6, normalized-entropy: 0.9043814577244941, [(1, 32), (2, 68)]
*** center 7: selecting labels [1] (freq >= 2) [from [162, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 13)
[0.9389958821096546, 0.9360018701336067, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.33501032379864193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33501032379864193, 0.22428233929218966] ***
*** starting iteration: 2; err: [Inf, 0.33501032379864193, 0.22428233929218966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33501032379864193, 0.22428233929218966, 0.19602110169061623] ***
*** starting iteration: 3; err: [Inf, 0.33501032379864193, 0.22428233929218966, 0.19602110169061623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33501032379864193, 0.22428233929218966, 0.19602110169061623, 0.18145202300385446] ***
*** finished computation of 7 references, err: [Inf, 0.33501032379864193, 0.22428233929218966, 0.19602110169061623, 0.18145202300385446] ***
*** center 1: selecting labels [1] (freq >= 2) [from [143, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [18, 10, 0]]
** centroid: 2, normalized-entropy: 0.940285958670631, [(1, 18), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [171, 24, 0]]
** centroid: 3, normalized-entropy: 0.5381411852224502, [(1, 171), (2, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 68, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 17), (2, 68)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 149, 18]]
** centroid: 6, normalized-entropy: 0.49319675010983854, [(2, 149), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.213387771351982] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213387771351982, 0.16398265524817954] ***
*** starting iteration: 2; err: [Inf, 0.213387771351982, 0.16398265524817954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213387771351982, 0.16398265524817954, 0.15476154315605134] ***
*** starting iteration: 3; err: [Inf, 0.213387771351982, 0.16398265524817954, 0.15476154315605134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.213387771351982, 0.16398265524817954, 0.15476154315605134, 0.1535122947337321] ***
*** finished computation of 7 references, err: [Inf, 0.213387771351982, 0.16398265524817954, 0.15476154315605134, 0.1535122947337321] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [84, 5, 0]]
** centroid: 2, normalized-entropy: 0.3120895659343452, [(1, 84), (2, 5)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [95, 4, 0]]
** centroid: 3, normalized-entropy: 0.24414164238829597, [(1, 95), (2, 4)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 157, 20]]
** centroid: 4, normalized-entropy: 0.5088822762201008, [(2, 157), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [42, 52, 0]]
** centroid: 5, normalized-entropy: 0.9918207974218425, [(1, 42), (2, 52)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [79, 23, 0]]
** centroid: 7, normalized-entropy: 0.7700664782920602, [(1, 79), (2, 23)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19902206518627266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19902206518627266, 0.15389730937840387] ***
*** starting iteration: 2; err: [Inf, 0.19902206518627266, 0.15389730937840387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19902206518627266, 0.15389730937840387, 0.14997776019955236] ***
*** starting iteration: 3; err: [Inf, 0.19902206518627266, 0.15389730937840387, 0.14997776019955236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19902206518627266, 0.15389730937840387, 0.14997776019955236, 0.14903303441162902] ***
*** finished computation of 7 references, err: [Inf, 0.19902206518627266, 0.15389730937840387, 0.14997776019955236, 0.14903303441162902] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 76, 0]]
** centroid: 1, normalized-entropy: 0.5999108763872215, [(1, 13), (2, 76)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 15, 0]]
** centroid: 2, normalized-entropy: 0.5465060858222177, [(1, 104), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 107, 10]]
** centroid: 3, normalized-entropy: 0.4211660145082221, [(2, 107), (3, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 44, 0]]
** centroid: 6, normalized-entropy: 0.975119064940866, [(1, 64), (2, 44)]
*** center 7: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25968973054242944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25968973054242944, 0.2083090626293452] ***
*** starting iteration: 2; err: [Inf, 0.25968973054242944, 0.2083090626293452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25968973054242944, 0.2083090626293452, 0.19274911198306371] ***
*** starting iteration: 3; err: [Inf, 0.25968973054242944, 0.2083090626293452, 0.19274911198306371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25968973054242944, 0.2083090626293452, 0.19274911198306371, 0.18966983135526738] ***
*** finished computation of 7 references, err: [Inf, 0.25968973054242944, 0.2083090626293452, 0.19274911198306371, 0.18966983135526738] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 28, 0]]
** centroid: 1, normalized-entropy: 0.7610292284611874, [(1, 99), (2, 28)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 111, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [90, 6, 0]]
** centroid: 3, normalized-entropy: 0.3372900666170139, [(1, 90), (2, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 18]]
** centroid: 4, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 5, 0]]
** centroid: 6, normalized-entropy: 0.3750514064240124, [(1, 64), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 33, 0]]
** centroid: 7, normalized-entropy: 0.9895875212220558, [(1, 42), (2, 33)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27748222940223016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27748222940223016, 0.22366005866725494] ***
*** starting iteration: 2; err: [Inf, 0.27748222940223016, 0.22366005866725494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27748222940223016, 0.22366005866725494, 0.2085590753683365] ***
*** starting iteration: 3; err: [Inf, 0.27748222940223016, 0.22366005866725494, 0.2085590753683365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27748222940223016, 0.22366005866725494, 0.2085590753683365, 0.20070445375458368] ***
*** finished computation of 7 references, err: [Inf, 0.27748222940223016, 0.22366005866725494, 0.2085590753683365, 0.20070445375458368] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 96, 20]]
** centroid: 1, normalized-entropy: 0.6631968402398286, [(2, 96), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [87, 2, 0]]
** centroid: 2, normalized-entropy: 0.1551032721030341, [(1, 87), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [53, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [24, 17, 0]]
** centroid: 4, normalized-entropy: 0.9788698505067782, [(1, 24), (2, 17)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 109, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [139, 16, 0]]
** centroid: 7, normalized-entropy: 0.4791385400576728, [(1, 139), (2, 16)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2274643089719999] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2274643089719999, 0.19040343227113474] ***
*** starting iteration: 2; err: [Inf, 0.2274643089719999, 0.19040343227113474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2274643089719999, 0.19040343227113474, 0.18844998267519733] ***
*** starting iteration: 3; err: [Inf, 0.2274643089719999, 0.19040343227113474, 0.18844998267519733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2274643089719999, 0.19040343227113474, 0.18844998267519733, 0.1879310674942343] ***
*** finished computation of 7 references, err: [Inf, 0.2274643089719999, 0.19040343227113474, 0.18844998267519733, 0.1879310674942343] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [97, 4, 0]]
** centroid: 1, normalized-entropy: 0.24047340659188013, [(1, 97), (2, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [29, 72, 0]]
** centroid: 3, normalized-entropy: 0.8649832752018335, [(1, 29), (2, 72)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 23, 0]]
** centroid: 4, normalized-entropy: 0.7546167018169155, [(1, 83), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [2, 76, 0]]
** centroid: 5, normalized-entropy: 0.17203694935311387, [(1, 2), (2, 76)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 67, 10]]
** centroid: 6, normalized-entropy: 0.557081908103416, [(2, 67), (3, 10)]
*** center 7: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9389958821096546, 0.9360018701336067, 0.9259828690966415, 0.9240048431665198, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 15
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9389958821096546, 0.9360018701336067, 0.9259828690966415, 0.9240048431665198, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 15
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9389958821096546, 0.9360018701336067, 0.9259828690966415, 0.9240048431665198, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 17
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.21728656446986325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728656446986325, 0.18646547324709348] ***
*** finished computation of 7 references, err: [Inf, 0.21728656446986325, 0.18646547324709348] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [20, 185, 18]]
** centroid: 1, normalized-entropy: 0.5228452498120554, [(1, 20), (2, 185), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [139, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [57, 62, 0]]
** centroid: 6, normalized-entropy: 0.9987261494308297, [(1, 57), (2, 62)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 4, 0]]
** centroid: 7, normalized-entropy: 0.2623112196143368, [(1, 86), (2, 4)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23158679507683957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23158679507683957, 0.16894620162123505] ***
*** finished computation of 7 references, err: [Inf, 0.23158679507683957, 0.16894620162123505] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [116, 36, 0]]
** centroid: 1, normalized-entropy: 0.7897492536625221, [(1, 116), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 54, 20]]
** centroid: 5, normalized-entropy: 0.8418521897563208, [(2, 54), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 103, 0]]
** centroid: 6, normalized-entropy: 0.2704505135124657, [(1, 5), (2, 103)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 48, 0]]
** centroid: 7, normalized-entropy: 0.9784493292686188, [(1, 68), (2, 48)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19173232006464808] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19173232006464808, 0.16039351107709032] ***
*** finished computation of 7 references, err: [Inf, 0.19173232006464808, 0.16039351107709032] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 5, 0]]
** centroid: 1, normalized-entropy: 0.26144010659136985, [(1, 108), (2, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [23, 22, 0]]
** centroid: 4, normalized-entropy: 0.9996437496778561, [(1, 23), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 1, 0]]
** centroid: 5, normalized-entropy: 0.14372616993938164, [(1, 48), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [42, 79, 0]]
** centroid: 6, normalized-entropy: 0.9314581888225363, [(1, 42), (2, 79)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 135, 10]]
** centroid: 7, normalized-entropy: 0.36205125173399805, [(2, 135), (3, 10)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2289117874075797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2289117874075797, 0.19612655718950694] ***
*** finished computation of 7 references, err: [Inf, 0.2289117874075797, 0.19612655718950694] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 75, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 18]]
** centroid: 2, normalized-entropy: 0.9426831892554921, [(2, 32), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [68, 40, 0]]
** centroid: 4, normalized-entropy: 0.9509560484549724, [(1, 68), (2, 40)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [103, 13, 0]]
** centroid: 5, normalized-entropy: 0.5061252137852816, [(1, 103), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 91, 0]]
** centroid: 6, normalized-entropy: 0.2039058755048202, [(1, 3), (2, 91)]
*** center 7: selecting labels [1] (freq >= 1) [from [128, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2269425725360503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2269425725360503, 0.1947911995989473] ***
*** finished computation of 7 references, err: [Inf, 0.2269425725360503, 0.1947911995989473] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 26, 0]]
** centroid: 3, normalized-entropy: 0.842657877202239, [(1, 70), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [82, 4, 0]]
** centroid: 4, normalized-entropy: 0.2713895875081112, [(1, 82), (2, 4)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 162, 20]]
** centroid: 5, normalized-entropy: 0.49958440742366095, [(2, 162), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [41, 33, 0]]
** centroid: 6, normalized-entropy: 0.9915528503834039, [(1, 41), (2, 33)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [88, 16, 0]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(1, 88), (2, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2232727949036986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2232727949036986, 0.19727162323854416] ***
*** finished computation of 7 references, err: [Inf, 0.2232727949036986, 0.19727162323854416] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 103, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [147, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [16, 48, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 16), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 21, 0]]
** centroid: 5, normalized-entropy: 0.7414827399312738, [(1, 79), (2, 21)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 70, 10]]
** centroid: 6, normalized-entropy: 0.5435644431995963, [(2, 70), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 17)
[0.9389958821096546, 0.9360018701336067, 0.9259828690966415, 0.9240048431665198, 0.9209838581096066, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9129578680476884, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 18
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.26340973723607064] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26340973723607064, 0.2344707123545074] ***
*** starting iteration: 2; err: [Inf, 0.26340973723607064, 0.2344707123545074] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26340973723607064, 0.2344707123545074, 0.23316853289113468] ***
*** starting iteration: 3; err: [Inf, 0.26340973723607064, 0.2344707123545074, 0.23316853289113468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26340973723607064, 0.2344707123545074, 0.23316853289113468, 0.2327580184748469] ***
*** finished computation of 3 references, err: [Inf, 0.26340973723607064, 0.2344707123545074, 0.23316853289113468, 0.2327580184748469] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [189, 31, 0]]
** centroid: 1, normalized-entropy: 0.586614696252951, [(1, 189), (2, 31)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 196, 18]]
** centroid: 2, normalized-entropy: 0.4165054000808552, [(2, 196), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [208, 24, 0]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(1, 208), (2, 24)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27150444940257557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27150444940257557, 0.243454878306438] ***
*** starting iteration: 2; err: [Inf, 0.27150444940257557, 0.243454878306438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27150444940257557, 0.243454878306438, 0.24011686284896516] ***
*** starting iteration: 3; err: [Inf, 0.27150444940257557, 0.243454878306438, 0.24011686284896516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27150444940257557, 0.243454878306438, 0.24011686284896516, 0.23951999402173546] ***
*** finished computation of 3 references, err: [Inf, 0.27150444940257557, 0.243454878306438, 0.24011686284896516, 0.23951999402173546] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [35, 194, 20]]
** centroid: 1, normalized-entropy: 0.6124172159821927, [(1, 35), (2, 194), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [242, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [129, 47, 0]]
** centroid: 3, normalized-entropy: 0.8371930278506566, [(1, 129), (2, 47)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3812131059273653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3812131059273653, 0.24704838343623697] ***
*** starting iteration: 2; err: [Inf, 0.3812131059273653, 0.24704838343623697] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3812131059273653, 0.24704838343623697, 0.23783896422932396] ***
*** starting iteration: 3; err: [Inf, 0.3812131059273653, 0.24704838343623697, 0.23783896422932396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3812131059273653, 0.24704838343623697, 0.23783896422932396, 0.23590830272458763] ***
*** finished computation of 3 references, err: [Inf, 0.3812131059273653, 0.24704838343623697, 0.23783896422932396, 0.23590830272458763] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [154, 69, 0]]
** centroid: 1, normalized-entropy: 0.8924993851906704, [(1, 154), (2, 69)]
*** center 2: selecting labels [1] (freq >= 1) [from [242, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [19, 173, 10]]
** centroid: 3, normalized-entropy: 0.4586363698475741, [(1, 19), (2, 173), (3, 10)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 18)
[0.9389958821096546, 0.9360018701336067, 0.9259828690966415, 0.9240048431665198, 0.9209838581096066, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9129578680476884, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.902003800207393, 0.8959888031744319, 0.8869767971564378, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.2142026857095393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2142026857095393, 0.17610423667664016] ***
*** finished computation of 7 references, err: [Inf, 0.2142026857095393, 0.17610423667664016] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [26, 67, 0]]
** centroid: 1, normalized-entropy: 0.8548640967818041, [(1, 26), (2, 67)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [115, 22, 0]]
** centroid: 3, normalized-entropy: 0.635704699977872, [(1, 115), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [118, 15, 0]]
** centroid: 4, normalized-entropy: 0.5082505651340841, [(1, 118), (2, 15)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 28, 18]]
** centroid: 6, normalized-entropy: 0.9656361333706099, [(2, 28), (3, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [138, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21055435879236978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21055435879236978, 0.16472531488895517] ***
*** finished computation of 7 references, err: [Inf, 0.21055435879236978, 0.16472531488895517] ***
*** center 1: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 98, 18]]
** centroid: 2, normalized-entropy: 0.6226343162547099, [(2, 98), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 13, 0]]
** centroid: 3, normalized-entropy: 0.6601070987550468, [(1, 63), (2, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 59, 1]]
** centroid: 5, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [147, 5, 0]]
** centroid: 6, normalized-entropy: 0.20870728209238568, [(1, 147), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 66, 1]]
** centroid: 7, normalized-entropy: 0.5293608652873645, [(1, 9), (2, 66)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19634579125976098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19634579125976098, 0.15988830040659996] ***
*** finished computation of 7 references, err: [Inf, 0.19634579125976098, 0.15988830040659996] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 54, 0]]
** centroid: 1, normalized-entropy: 0.9999392847706552, [(1, 55), (2, 54)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 68, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 26, 0]]
** centroid: 4, normalized-entropy: 0.8228368841492258, [(1, 75), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [77, 7, 0]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(1, 77), (2, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [133, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 87, 10]]
** centroid: 7, normalized-entropy: 0.478723511385963, [(2, 87), (3, 10)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9389958821096546, 0.9360018701336067, 0.9259828690966415, 0.9240048431665198, 0.9209838581096066, 0.9169918421415427, 0.9169888451325576, 0.9159728590866316, 0.9129578680476884, 0.9119808431185676, 0.9099548650446855, 0.9079888271505038, 0.9049738361115606, 0.903001804199409, 0.902003800207393, 0.8959888031744319, 0.8869767971564378, 0.8769907632183082, 0.8140026253798709]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9389958821096546
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.23739797625085338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739797625085338, 0.20016583708999677] ***
*** starting iteration: 2; err: [Inf, 0.23739797625085338, 0.20016583708999677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726] ***
*** starting iteration: 3; err: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989] ***
*** starting iteration: 4; err: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989, 0.19008915331726894] ***
*** starting iteration: 5; err: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989, 0.19008915331726894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989, 0.19008915331726894, 0.18893402203358708] ***
*** starting iteration: 6; err: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989, 0.19008915331726894, 0.18893402203358708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989, 0.19008915331726894, 0.18893402203358708, 0.18835603415966035] ***
*** finished computation of 7 references, err: [Inf, 0.23739797625085338, 0.20016583708999677, 0.1959068587566726, 0.1929626778298989, 0.19008915331726894, 0.18893402203358708, 0.18835603415966035] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [129, 36, 0]]
** centroid: 1, normalized-entropy: 0.7568336324184036, [(1, 129), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 69, 0]]
** centroid: 2, normalized-entropy: 0.999961566736317, [(1, 68), (2, 69)]
*** center 3: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [70, 68, 0]]
** centroid: 4, normalized-entropy: 0.9998484829291058, [(1, 70), (2, 68)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 190, 24]]
** centroid: 5, normalized-entropy: 0.5063657452787739, [(2, 190), (3, 24)]
*** center 6: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [112, 4, 0]]
** centroid: 7, normalized-entropy: 0.21639693245126485, [(1, 112), (2, 4)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.317642812511418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317642812511418, 0.23469562458619475] ***
*** starting iteration: 2; err: [Inf, 0.317642812511418, 0.23469562458619475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662] ***
*** starting iteration: 3; err: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348] ***
*** starting iteration: 4; err: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348, 0.1930217127185315] ***
*** starting iteration: 5; err: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348, 0.1930217127185315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348, 0.1930217127185315, 0.18735225948225706] ***
*** starting iteration: 6; err: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348, 0.1930217127185315, 0.18735225948225706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348, 0.1930217127185315, 0.18735225948225706, 0.18657192372903228] ***
*** finished computation of 7 references, err: [Inf, 0.317642812511418, 0.23469562458619475, 0.20946032428182662, 0.19917462427355348, 0.1930217127185315, 0.18735225948225706, 0.18657192372903228] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 57, 4]]
** centroid: 1, normalized-entropy: 0.34918437350730797, [(2, 57), (3, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 47, 7]]
** centroid: 4, normalized-entropy: 0.5564215672884282, [(2, 47), (3, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 21, 0]]
** centroid: 5, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [36, 44, 0]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(1, 36), (2, 44)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [37, 16, 0]]
** centroid: 7, normalized-entropy: 0.8835850861052531, [(1, 37), (2, 16)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2500511052571237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906] ***
*** starting iteration: 2; err: [Inf, 0.2500511052571237, 0.21233144863694906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237] ***
*** starting iteration: 3; err: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088] ***
*** starting iteration: 4; err: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648] ***
*** starting iteration: 5; err: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648, 0.18800671416148543] ***
*** starting iteration: 6; err: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648, 0.18800671416148543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648, 0.18800671416148543, 0.18681762369722127] ***
*** starting iteration: 7; err: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648, 0.18800671416148543, 0.18681762369722127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648, 0.18800671416148543, 0.18681762369722127, 0.18599033632315695] ***
*** finished computation of 7 references, err: [Inf, 0.2500511052571237, 0.21233144863694906, 0.1937385550495237, 0.1909643600732088, 0.18943489332869648, 0.18800671416148543, 0.18681762369722127, 0.18599033632315695] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [31, 50, 0]]
** centroid: 1, normalized-entropy: 0.9599377175669783, [(1, 31), (2, 50)]
*** center 2: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 11, 0]]
** centroid: 4, normalized-entropy: 0.5687008669370753, [(1, 71), (2, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 51, 14]]
** centroid: 6, normalized-entropy: 0.7516499461153354, [(2, 51), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 69, 0]]
** centroid: 7, normalized-entropy: 0.306424729870515, [(1, 4), (2, 69)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2407965527912602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2407965527912602, 0.19579930919408797] ***
*** starting iteration: 2; err: [Inf, 0.2407965527912602, 0.19579930919408797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2407965527912602, 0.19579930919408797, 0.18929966694954783] ***
*** starting iteration: 3; err: [Inf, 0.2407965527912602, 0.19579930919408797, 0.18929966694954783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2407965527912602, 0.19579930919408797, 0.18929966694954783, 0.18709570398181677] ***
*** starting iteration: 4; err: [Inf, 0.2407965527912602, 0.19579930919408797, 0.18929966694954783, 0.18709570398181677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2407965527912602, 0.19579930919408797, 0.18929966694954783, 0.18709570398181677, 0.18639714722102507] ***
*** finished computation of 7 references, err: [Inf, 0.2407965527912602, 0.19579930919408797, 0.18929966694954783, 0.18709570398181677, 0.18639714722102507] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 27, 0]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(1, 39), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [94, 18, 0]]
** centroid: 5, normalized-entropy: 0.6360156177392153, [(1, 94), (2, 18)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 87, 10]]
** centroid: 6, normalized-entropy: 0.478723511385963, [(2, 87), (3, 10)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 46, 0]]
** centroid: 7, normalized-entropy: 0.5631028237513912, [(1, 7), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2560640391074121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2560640391074121, 0.19250486768223346] ***
*** starting iteration: 2; err: [Inf, 0.2560640391074121, 0.19250486768223346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2560640391074121, 0.19250486768223346, 0.18837105139624327] ***
*** starting iteration: 3; err: [Inf, 0.2560640391074121, 0.19250486768223346, 0.18837105139624327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2560640391074121, 0.19250486768223346, 0.18837105139624327, 0.18689335718378425] ***
*** starting iteration: 4; err: [Inf, 0.2560640391074121, 0.19250486768223346, 0.18837105139624327, 0.18689335718378425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2560640391074121, 0.19250486768223346, 0.18837105139624327, 0.18689335718378425, 0.1860527594164014] ***
*** finished computation of 7 references, err: [Inf, 0.2560640391074121, 0.19250486768223346, 0.18837105139624327, 0.18689335718378425, 0.1860527594164014] ***
*** center 1: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 1, 0]]
** centroid: 2, normalized-entropy: 0.11190990870168394, [(1, 66), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 91, 13]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 91), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 17, 0]]
** centroid: 5, normalized-entropy: 0.7885131605379784, [(1, 55), (2, 17)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [36, 35, 0]]
** centroid: 6, normalized-entropy: 0.9998568991526107, [(1, 36), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 45, 0]]
** centroid: 7, normalized-entropy: 0.8631205685666311, [(1, 18), (2, 45)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2311786720454693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2311786720454693, 0.19102419677004218] ***
*** starting iteration: 2; err: [Inf, 0.2311786720454693, 0.19102419677004218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2311786720454693, 0.19102419677004218, 0.18870172163285315] ***
*** starting iteration: 3; err: [Inf, 0.2311786720454693, 0.19102419677004218, 0.18870172163285315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2311786720454693, 0.19102419677004218, 0.18870172163285315, 0.1880520325768739] ***
*** finished computation of 7 references, err: [Inf, 0.2311786720454693, 0.19102419677004218, 0.18870172163285315, 0.1880520325768739] ***
*** center 1: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [25, 40, 0]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(1, 25), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 77, 13]]
** centroid: 3, normalized-entropy: 0.5957610966703235, [(2, 77), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [13, 70, 0]]
** centroid: 5, normalized-entropy: 0.6261776539736496, [(1, 13), (2, 70)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 2, 0]]
** centroid: 6, normalized-entropy: 0.19590927087360496, [(1, 64), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24595517470873893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24595517470873893, 0.2055363014265895] ***
*** starting iteration: 2; err: [Inf, 0.24595517470873893, 0.2055363014265895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906] ***
*** starting iteration: 3; err: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906, 0.1870781457554549] ***
*** starting iteration: 4; err: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906, 0.1870781457554549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906, 0.1870781457554549, 0.1846757723186165] ***
*** starting iteration: 5; err: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906, 0.1870781457554549, 0.1846757723186165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906, 0.1870781457554549, 0.1846757723186165, 0.18384009698405862] ***
*** finished computation of 7 references, err: [Inf, 0.24595517470873893, 0.2055363014265895, 0.19495795191451906, 0.1870781457554549, 0.1846757723186165, 0.18384009698405862] ***
*** center 1: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 22, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 66), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [13, 41, 0]]
** centroid: 4, normalized-entropy: 0.7962699368824384, [(1, 13), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 27, 0]]
** centroid: 5, normalized-entropy: 0.9656361333706099, [(1, 42), (2, 27)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 86, 11]]
** centroid: 6, normalized-entropy: 0.5100930822965021, [(2, 86), (3, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25067351849819536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853] ***
*** starting iteration: 2; err: [Inf, 0.25067351849819536, 0.20479868582449853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888] ***
*** starting iteration: 3; err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682] ***
*** starting iteration: 4; err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972] ***
*** starting iteration: 5; err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787] ***
*** starting iteration: 6; err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787, 0.1953646000996232] ***
*** starting iteration: 7; err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787, 0.1953646000996232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787, 0.1953646000996232, 0.1942167785540223] ***
*** starting iteration: 8; err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787, 0.1953646000996232, 0.1942167785540223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787, 0.1953646000996232, 0.1942167785540223, 0.19355303014069797] ***
*** finished computation of 7 references, err: [Inf, 0.25067351849819536, 0.20479868582449853, 0.20145784222520888, 0.1994333206489682, 0.19776682803872972, 0.19660215126536787, 0.1953646000996232, 0.1942167785540223, 0.19355303014069797] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 47, 3]]
** centroid: 1, normalized-entropy: 0.3274449191544762, [(2, 47), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 4, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 72), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 13]]
** centroid: 3, normalized-entropy: 0.842657877202239, [(2, 35), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [110, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 32, 0]]
** centroid: 5, normalized-entropy: 0.9867867202680318, [(1, 42), (2, 32)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [63, 16, 0]]
** centroid: 6, normalized-entropy: 0.7269625813353975, [(1, 63), (2, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [23, 40, 0]]
** centroid: 7, normalized-entropy: 0.9468188316776024, [(1, 23), (2, 40)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2340166321154684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2340166321154684, 0.19876668137311934] ***
*** starting iteration: 2; err: [Inf, 0.2340166321154684, 0.19876668137311934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2340166321154684, 0.19876668137311934, 0.19354959325445817] ***
*** starting iteration: 3; err: [Inf, 0.2340166321154684, 0.19876668137311934, 0.19354959325445817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2340166321154684, 0.19876668137311934, 0.19354959325445817, 0.19110561261326076] ***
*** starting iteration: 4; err: [Inf, 0.2340166321154684, 0.19876668137311934, 0.19354959325445817, 0.19110561261326076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2340166321154684, 0.19876668137311934, 0.19354959325445817, 0.19110561261326076, 0.1906556376181543] ***
*** finished computation of 7 references, err: [Inf, 0.2340166321154684, 0.19876668137311934, 0.19354959325445817, 0.19110561261326076, 0.1906556376181543] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [8, 61, 0]]
** centroid: 1, normalized-entropy: 0.5175827525559071, [(1, 8), (2, 61)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [25, 40, 0]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(1, 25), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 64, 16]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 64), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 28, 0]]
** centroid: 7, normalized-entropy: 0.8904916402194913, [(1, 63), (2, 28)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2542308201259002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717] ***
*** starting iteration: 2; err: [Inf, 0.2542308201259002, 0.2163680288763717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165] ***
*** starting iteration: 3; err: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076] ***
*** starting iteration: 4; err: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654] ***
*** starting iteration: 5; err: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654, 0.1920134845562279] ***
*** starting iteration: 6; err: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654, 0.1920134845562279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654, 0.1920134845562279, 0.18965656114835291] ***
*** starting iteration: 7; err: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654, 0.1920134845562279, 0.18965656114835291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654, 0.1920134845562279, 0.18965656114835291, 0.18921148174535482] ***
*** finished computation of 7 references, err: [Inf, 0.2542308201259002, 0.2163680288763717, 0.20235876232758165, 0.19503511965461076, 0.19331102401553654, 0.1920134845562279, 0.18965656114835291, 0.18921148174535482] ***
*** center 1: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [28, 34, 0]]
** centroid: 2, normalized-entropy: 0.9932338197397066, [(1, 28), (2, 34)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 86, 10]]
** centroid: 4, normalized-entropy: 0.4820661480830933, [(2, 86), (3, 10)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 40, 0]]
** centroid: 5, normalized-entropy: 0.9995708393473225, [(1, 42), (2, 40)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 8, 0]]
** centroid: 6, normalized-entropy: 0.6581912658132184, [(1, 39), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 15, 0]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(1, 55), (2, 15)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27925629465468227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27925629465468227, 0.20928207896091044] ***
*** starting iteration: 2; err: [Inf, 0.27925629465468227, 0.20928207896091044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382] ***
*** starting iteration: 3; err: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614] ***
*** starting iteration: 4; err: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614, 0.1930766318924725] ***
*** starting iteration: 5; err: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614, 0.1930766318924725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614, 0.1930766318924725, 0.1904418705571443] ***
*** starting iteration: 6; err: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614, 0.1930766318924725, 0.1904418705571443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614, 0.1930766318924725, 0.1904418705571443, 0.18967614851891995] ***
*** finished computation of 7 references, err: [Inf, 0.27925629465468227, 0.20928207896091044, 0.20106966270506382, 0.19709250796120614, 0.1930766318924725, 0.1904418705571443, 0.18967614851891995] ***
*** center 1: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 93, 15]]
** centroid: 2, normalized-entropy: 0.581321498763703, [(2, 93), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 19, 0]]
** centroid: 3, normalized-entropy: 0.9357110512652843, [(1, 35), (2, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [45, 23, 0]]
** centroid: 6, normalized-entropy: 0.9231199835423002, [(1, 45), (2, 23)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [43, 39, 0]]
** centroid: 7, normalized-entropy: 0.9982828462300607, [(1, 43), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2559688445418142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2559688445418142, 0.1992195188254118] ***
*** starting iteration: 2; err: [Inf, 0.2559688445418142, 0.1992195188254118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2559688445418142, 0.1992195188254118, 0.18990813624486327] ***
*** starting iteration: 3; err: [Inf, 0.2559688445418142, 0.1992195188254118, 0.18990813624486327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2559688445418142, 0.1992195188254118, 0.18990813624486327, 0.18615224561467766] ***
*** starting iteration: 4; err: [Inf, 0.2559688445418142, 0.1992195188254118, 0.18990813624486327, 0.18615224561467766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2559688445418142, 0.1992195188254118, 0.18990813624486327, 0.18615224561467766, 0.18581731598079204] ***
*** finished computation of 7 references, err: [Inf, 0.2559688445418142, 0.1992195188254118, 0.18990813624486327, 0.18615224561467766, 0.18581731598079204] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 12, 0]]
** centroid: 1, normalized-entropy: 0.678114052360606, [(1, 55), (2, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [6, 69, 0]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(1, 6), (2, 69)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 15, 0]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(1, 54), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 63, 13]]
** centroid: 5, normalized-entropy: 0.6601070987550468, [(2, 63), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 12, 0]]
** centroid: 6, normalized-entropy: 0.7153220528038851, [(1, 49), (2, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3264120324803516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3264120324803516, 0.21517069946229458] ***
*** starting iteration: 2; err: [Inf, 0.3264120324803516, 0.21517069946229458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923] ***
*** starting iteration: 3; err: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923, 0.18657664667256177] ***
*** starting iteration: 4; err: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923, 0.18657664667256177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923, 0.18657664667256177, 0.1829682743716985] ***
*** starting iteration: 5; err: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923, 0.18657664667256177, 0.1829682743716985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923, 0.18657664667256177, 0.1829682743716985, 0.18205262064840644] ***
*** finished computation of 7 references, err: [Inf, 0.3264120324803516, 0.21517069946229458, 0.19346669993083923, 0.18657664667256177, 0.1829682743716985, 0.18205262064840644] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 48, 14]]
** centroid: 1, normalized-entropy: 0.7706290693639406, [(2, 48), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 26, 0]]
** centroid: 3, normalized-entropy: 0.8672816222000259, [(1, 64), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [7, 78, 0]]
** centroid: 4, normalized-entropy: 0.4104161417181887, [(1, 7), (2, 78)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 27, 0]]
** centroid: 5, normalized-entropy: 0.9823166080205502, [(1, 37), (2, 27)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26454115109145643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26454115109145643, 0.19639918440021575] ***
*** starting iteration: 2; err: [Inf, 0.26454115109145643, 0.19639918440021575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26454115109145643, 0.19639918440021575, 0.18782737202756106] ***
*** starting iteration: 3; err: [Inf, 0.26454115109145643, 0.19639918440021575, 0.18782737202756106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26454115109145643, 0.19639918440021575, 0.18782737202756106, 0.18581857485603542] ***
*** starting iteration: 4; err: [Inf, 0.26454115109145643, 0.19639918440021575, 0.18782737202756106, 0.18581857485603542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26454115109145643, 0.19639918440021575, 0.18782737202756106, 0.18581857485603542, 0.18487735496740787] ***
*** finished computation of 7 references, err: [Inf, 0.26454115109145643, 0.19639918440021575, 0.18782737202756106, 0.18581857485603542, 0.18487735496740787] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 25, 0]]
** centroid: 2, normalized-entropy: 0.8397622740178036, [(1, 68), (2, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 69, 0]]
** centroid: 5, normalized-entropy: 0.18512476010054582, [(1, 2), (2, 69)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 32, 0]]
** centroid: 6, normalized-entropy: 0.9985532860835362, [(1, 35), (2, 32)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 52, 12]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 52), (3, 12)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2863042066898197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863042066898197, 0.19904401508811861] ***
*** starting iteration: 2; err: [Inf, 0.2863042066898197, 0.19904401508811861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555] ***
*** starting iteration: 3; err: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258] ***
*** starting iteration: 4; err: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258, 0.18602064138278365] ***
*** starting iteration: 5; err: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258, 0.18602064138278365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258, 0.18602064138278365, 0.18473304987326264] ***
*** starting iteration: 6; err: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258, 0.18602064138278365, 0.18473304987326264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258, 0.18602064138278365, 0.18473304987326264, 0.18394046532269567] ***
*** finished computation of 7 references, err: [Inf, 0.2863042066898197, 0.19904401508811861, 0.18990343882888555, 0.18736229644343258, 0.18602064138278365, 0.18473304987326264, 0.18394046532269567] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 2, 0]]
** centroid: 1, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 14, 0]]
** centroid: 2, normalized-entropy: 0.7394809367166378, [(1, 53), (2, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 79, 0]]
** centroid: 3, normalized-entropy: 0.27866980356389914, [(1, 4), (2, 79)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 14, 0]]
** centroid: 4, normalized-entropy: 0.7455178428108284, [(1, 52), (2, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 62, 11]]
** centroid: 7, normalized-entropy: 0.6115516951951333, [(2, 62), (3, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2661188132837415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2661188132837415, 0.22236027490533888] ***
*** starting iteration: 2; err: [Inf, 0.2661188132837415, 0.22236027490533888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977] ***
*** starting iteration: 3; err: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355] ***
*** starting iteration: 4; err: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355, 0.18853895028308035] ***
*** starting iteration: 5; err: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355, 0.18853895028308035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355, 0.18853895028308035, 0.18610470207594335] ***
*** starting iteration: 6; err: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355, 0.18853895028308035, 0.18610470207594335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355, 0.18853895028308035, 0.18610470207594335, 0.18549200162664056] ***
*** finished computation of 7 references, err: [Inf, 0.2661188132837415, 0.22236027490533888, 0.20332397771812977, 0.19317134797759355, 0.18853895028308035, 0.18610470207594335, 0.18549200162664056] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 2, 0]]
** centroid: 1, normalized-entropy: 0.19364280468389852, [(1, 65), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 25, 0]]
** centroid: 4, normalized-entropy: 0.9652016987500656, [(1, 39), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 31, 0]]
** centroid: 5, normalized-entropy: 0.956652272148091, [(1, 51), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 35, 0]]
** centroid: 6, normalized-entropy: 0.9957274520849256, [(1, 30), (2, 35)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 84, 10]]
** centroid: 7, normalized-entropy: 0.48890859144051524, [(2, 84), (3, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28997752790898085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209] ***
*** starting iteration: 2; err: [Inf, 0.28997752790898085, 0.2222708500698209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353] ***
*** starting iteration: 3; err: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796] ***
*** starting iteration: 4; err: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126] ***
*** starting iteration: 5; err: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126, 0.1914200910925865] ***
*** starting iteration: 6; err: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126, 0.1914200910925865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126, 0.1914200910925865, 0.19031070531159638] ***
*** starting iteration: 7; err: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126, 0.1914200910925865, 0.19031070531159638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126, 0.1914200910925865, 0.19031070531159638, 0.1895317808929831] ***
*** finished computation of 7 references, err: [Inf, 0.28997752790898085, 0.2222708500698209, 0.20457924616709353, 0.19725382274761796, 0.19341005001217126, 0.1914200910925865, 0.19031070531159638, 0.1895317808929831] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 2, 0]]
** centroid: 1, normalized-entropy: 0.18312206830137262, [(1, 70), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 64, 13]]
** centroid: 2, normalized-entropy: 0.6550239908788728, [(2, 64), (3, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 47, 0]]
** centroid: 5, normalized-entropy: 0.9645476589143235, [(1, 30), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 52, 0]]
** centroid: 6, normalized-entropy: 0.22853814395352806, [(1, 2), (2, 52)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [40, 22, 0]]
** centroid: 7, normalized-entropy: 0.9383153522334071, [(1, 40), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26406598988734187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077] ***
*** starting iteration: 2; err: [Inf, 0.26406598988734187, 0.20216682283068077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194] ***
*** starting iteration: 3; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633] ***
*** starting iteration: 4; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762] ***
*** starting iteration: 5; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463] ***
*** starting iteration: 6; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182] ***
*** starting iteration: 7; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182, 0.18799530173651874] ***
*** starting iteration: 8; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182, 0.18799530173651874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182, 0.18799530173651874, 0.18698124289512635] ***
*** starting iteration: 9; err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182, 0.18799530173651874, 0.18698124289512635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182, 0.18799530173651874, 0.18698124289512635, 0.18663333078939467] ***
*** finished computation of 7 references, err: [Inf, 0.26406598988734187, 0.20216682283068077, 0.19834495648369194, 0.19581273825466633, 0.19361147762648762, 0.19140786021668463, 0.18950324837677182, 0.18799530173651874, 0.18698124289512635, 0.18663333078939467] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [7, 65, 0]]
** centroid: 1, normalized-entropy: 0.460127886147135, [(1, 7), (2, 65)]
*** center 2: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 1, 0]]
** centroid: 4, normalized-entropy: 0.098959095355743, [(1, 77), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 78, 11]]
** centroid: 5, normalized-entropy: 0.5396084773004918, [(2, 78), (3, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [25, 19, 0]]
** centroid: 6, normalized-entropy: 0.9865446300055647, [(1, 25), (2, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 29, 0]]
** centroid: 7, normalized-entropy: 0.9556222693531471, [(1, 48), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23845348659157753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272] ***
*** starting iteration: 2; err: [Inf, 0.23845348659157753, 0.20520122028887272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278] ***
*** starting iteration: 3; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924] ***
*** starting iteration: 4; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485] ***
*** starting iteration: 5; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668] ***
*** starting iteration: 6; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754] ***
*** starting iteration: 7; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208] ***
*** starting iteration: 8; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208, 0.185292519422248] ***
*** starting iteration: 9; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208, 0.185292519422248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208, 0.185292519422248, 0.1837318041548133] ***
*** starting iteration: 10; err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208, 0.185292519422248, 0.1837318041548133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208, 0.185292519422248, 0.1837318041548133, 0.18268908294476568] ***
*** finished computation of 7 references, err: [Inf, 0.23845348659157753, 0.20520122028887272, 0.19968265520781278, 0.1970563399232924, 0.19506094320863485, 0.19375158943794668, 0.19208514980226754, 0.18815279283840208, 0.185292519422248, 0.1837318041548133, 0.18268908294476568] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 5, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 66, 14]]
** centroid: 4, normalized-entropy: 0.6690158350565576, [(2, 66), (3, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 36, 0]]
** centroid: 6, normalized-entropy: 0.998845535995202, [(1, 39), (2, 36)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [77, 22, 0]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(1, 77), (2, 22)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26254295240249487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254295240249487, 0.20670225036516784] ***
*** starting iteration: 2; err: [Inf, 0.26254295240249487, 0.20670225036516784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098] ***
*** starting iteration: 3; err: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514] ***
*** starting iteration: 4; err: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514, 0.1900235710470006] ***
*** starting iteration: 5; err: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514, 0.1900235710470006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514, 0.1900235710470006, 0.18814291602000593] ***
*** starting iteration: 6; err: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514, 0.1900235710470006, 0.18814291602000593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514, 0.1900235710470006, 0.18814291602000593, 0.18761017274484038] ***
*** finished computation of 7 references, err: [Inf, 0.26254295240249487, 0.20670225036516784, 0.19889757702127098, 0.19440370704140514, 0.1900235710470006, 0.18814291602000593, 0.18761017274484038] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 62, 13]]
** centroid: 1, normalized-entropy: 0.6652735227649414, [(2, 62), (3, 13)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 11, 0]]
** centroid: 2, normalized-entropy: 0.6014353864290773, [(1, 64), (2, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 12, 0]]
** centroid: 5, normalized-entropy: 0.644694043811662, [(1, 61), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 8, 0]]
** centroid: 6, normalized-entropy: 0.5851569902762294, [(1, 49), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 82, 0]]
** centroid: 7, normalized-entropy: 0.2713895875081112, [(1, 4), (2, 82)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33129269517399373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261] ***
*** starting iteration: 2; err: [Inf, 0.33129269517399373, 0.21343876003660261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753] ***
*** starting iteration: 3; err: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522] ***
*** starting iteration: 4; err: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018] ***
*** starting iteration: 5; err: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018, 0.1894946921374649] ***
*** starting iteration: 6; err: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018, 0.1894946921374649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018, 0.1894946921374649, 0.18794134962186218] ***
*** starting iteration: 7; err: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018, 0.1894946921374649, 0.18794134962186218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018, 0.1894946921374649, 0.18794134962186218, 0.18734204512834549] ***
*** finished computation of 7 references, err: [Inf, 0.33129269517399373, 0.21343876003660261, 0.19655252937413753, 0.1922383218612522, 0.19092797073815018, 0.1894946921374649, 0.18794134962186218, 0.18734204512834549] ***
*** center 1: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 15, 0]]
** centroid: 2, normalized-entropy: 0.6332905746550958, [(1, 79), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 10]]
** centroid: 3, normalized-entropy: 0.6436394131461666, [(2, 51), (3, 10)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 46, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [20, 55, 0]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(1, 20), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [43, 8, 0]]
** centroid: 7, normalized-entropy: 0.6267511370265896, [(1, 43), (2, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24048579578381032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24048579578381032, 0.20640970284142532] ***
*** starting iteration: 2; err: [Inf, 0.24048579578381032, 0.20640970284142532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588] ***
*** starting iteration: 3; err: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492] ***
*** starting iteration: 4; err: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492, 0.18672185160592197] ***
*** starting iteration: 5; err: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492, 0.18672185160592197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492, 0.18672185160592197, 0.18568716632947327] ***
*** starting iteration: 6; err: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492, 0.18672185160592197, 0.18568716632947327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492, 0.18672185160592197, 0.18568716632947327, 0.18550840373337268] ***
*** finished computation of 7 references, err: [Inf, 0.24048579578381032, 0.20640970284142532, 0.19622208118345588, 0.18948131371289492, 0.18672185160592197, 0.18568716632947327, 0.18550840373337268] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [18, 40, 0]]
** centroid: 1, normalized-entropy: 0.8935711016541908, [(1, 18), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [52, 17, 0]]
** centroid: 2, normalized-entropy: 0.8054848387405957, [(1, 52), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 12]]
** centroid: 6, normalized-entropy: 0.5830194167347007, [(2, 74), (3, 12)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 53, 0]]
** centroid: 7, normalized-entropy: 0.36657801255334593, [(1, 4), (2, 53)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3509055132847279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3509055132847279, 0.2347332118768245] ***
*** starting iteration: 2; err: [Inf, 0.3509055132847279, 0.2347332118768245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615] ***
*** starting iteration: 3; err: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615, 0.19228695472329854] ***
*** starting iteration: 4; err: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615, 0.19228695472329854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615, 0.19228695472329854, 0.18925227116793394] ***
*** starting iteration: 5; err: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615, 0.19228695472329854, 0.18925227116793394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615, 0.19228695472329854, 0.18925227116793394, 0.18869692084752024] ***
*** finished computation of 7 references, err: [Inf, 0.3509055132847279, 0.2347332118768245, 0.2068520114682615, 0.19228695472329854, 0.18925227116793394, 0.18869692084752024] ***
*** center 1: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 54, 0]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(1, 3), (2, 54)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 82, 14]]
** centroid: 4, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [65, 21, 0]]
** centroid: 5, normalized-entropy: 0.8019325020834525, [(1, 65), (2, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [29, 34, 0]]
** centroid: 7, normalized-entropy: 0.9954515828457716, [(1, 29), (2, 34)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20377350219339133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20377350219339133, 0.18677411116007717] ***
*** starting iteration: 2; err: [Inf, 0.20377350219339133, 0.18677411116007717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20377350219339133, 0.18677411116007717, 0.18392242556065322] ***
*** starting iteration: 3; err: [Inf, 0.20377350219339133, 0.18677411116007717, 0.18392242556065322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20377350219339133, 0.18677411116007717, 0.18392242556065322, 0.1826759746838361] ***
*** starting iteration: 4; err: [Inf, 0.20377350219339133, 0.18677411116007717, 0.18392242556065322, 0.1826759746838361] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20377350219339133, 0.18677411116007717, 0.18392242556065322, 0.1826759746838361, 0.18213306647725402] ***
*** finished computation of 7 references, err: [Inf, 0.20377350219339133, 0.18677411116007717, 0.18392242556065322, 0.1826759746838361, 0.18213306647725402] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 68, 7]]
** centroid: 1, normalized-entropy: 0.44749925503686355, [(2, 68), (3, 7)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [29, 33, 0]]
** centroid: 3, normalized-entropy: 0.9969954265557693, [(1, 29), (2, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 25, 0]]
** centroid: 7, normalized-entropy: 0.9315627684809641, [(1, 47), (2, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24837205065600573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464] ***
*** starting iteration: 2; err: [Inf, 0.24837205065600573, 0.20680639282241464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278] ***
*** starting iteration: 3; err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552] ***
*** starting iteration: 4; err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796] ***
*** starting iteration: 5; err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603] ***
*** starting iteration: 6; err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603, 0.19137985183671116] ***
*** starting iteration: 7; err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603, 0.19137985183671116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603, 0.19137985183671116, 0.18952906550094487] ***
*** starting iteration: 8; err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603, 0.19137985183671116, 0.18952906550094487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603, 0.19137985183671116, 0.18952906550094487, 0.18905130853317678] ***
*** finished computation of 7 references, err: [Inf, 0.24837205065600573, 0.20680639282241464, 0.19740858082473278, 0.19504872203804552, 0.19388721863459796, 0.19284210082888603, 0.19137985183671116, 0.18952906550094487, 0.18905130853317678] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 28, 0]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(1, 35), (2, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 39, 0]]
** centroid: 3, normalized-entropy: 0.9514122535330207, [(1, 23), (2, 39)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [29, 38, 0]]
** centroid: 4, normalized-entropy: 0.9869444983748495, [(1, 29), (2, 38)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 80, 13]]
** centroid: 6, normalized-entropy: 0.5836753280239112, [(2, 80), (3, 13)]
*** center 7: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23234407119639217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23234407119639217, 0.19541097495146095] ***
*** starting iteration: 2; err: [Inf, 0.23234407119639217, 0.19541097495146095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23234407119639217, 0.19541097495146095, 0.1896117828176357] ***
*** starting iteration: 3; err: [Inf, 0.23234407119639217, 0.19541097495146095, 0.1896117828176357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23234407119639217, 0.19541097495146095, 0.1896117828176357, 0.18704210589732975] ***
*** starting iteration: 4; err: [Inf, 0.23234407119639217, 0.19541097495146095, 0.1896117828176357, 0.18704210589732975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23234407119639217, 0.19541097495146095, 0.1896117828176357, 0.18704210589732975, 0.18618226154893636] ***
*** finished computation of 7 references, err: [Inf, 0.23234407119639217, 0.19541097495146095, 0.1896117828176357, 0.18704210589732975, 0.18618226154893636] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 55, 0]]
** centroid: 3, normalized-entropy: 0.8749315876677922, [(1, 23), (2, 55)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [13, 39, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 13), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 57, 9]]
** centroid: 6, normalized-entropy: 0.5746356978376794, [(2, 57), (3, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [70, 5, 0]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3060041553713381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3060041553713381, 0.22453018526919186] ***
*** starting iteration: 2; err: [Inf, 0.3060041553713381, 0.22453018526919186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175] ***
*** starting iteration: 3; err: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823] ***
*** starting iteration: 4; err: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823, 0.19548722123447806] ***
*** starting iteration: 5; err: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823, 0.19548722123447806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823, 0.19548722123447806, 0.19338093158602715] ***
*** starting iteration: 6; err: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823, 0.19548722123447806, 0.19338093158602715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823, 0.19548722123447806, 0.19338093158602715, 0.19293525589071214] ***
*** finished computation of 7 references, err: [Inf, 0.3060041553713381, 0.22453018526919186, 0.20763799099461175, 0.2012328982995823, 0.19548722123447806, 0.19338093158602715, 0.19293525589071214] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 53, 11]]
** centroid: 1, normalized-entropy: 0.6619760641115651, [(2, 53), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [94, 24, 0]]
** centroid: 3, normalized-entropy: 0.7286561673702678, [(1, 94), (2, 24)]
*** center 4: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 26, 0]]
** centroid: 5, normalized-entropy: 0.9587118829771317, [(1, 16), (2, 26)]
*** center 6: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 84, 0]]
** centroid: 7, normalized-entropy: 0.15935006268563429, [(1, 2), (2, 84)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22926821521949023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22926821521949023, 0.19630970508418977] ***
*** starting iteration: 2; err: [Inf, 0.22926821521949023, 0.19630970508418977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177] ***
*** starting iteration: 3; err: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604] ***
*** starting iteration: 4; err: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604, 0.1867725777197629] ***
*** starting iteration: 5; err: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604, 0.1867725777197629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604, 0.1867725777197629, 0.18557616549916564] ***
*** starting iteration: 6; err: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604, 0.1867725777197629, 0.18557616549916564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604, 0.1867725777197629, 0.18557616549916564, 0.18515046261996032] ***
*** finished computation of 7 references, err: [Inf, 0.22926821521949023, 0.19630970508418977, 0.19179111028835177, 0.18849833732284604, 0.1867725777197629, 0.18557616549916564, 0.18515046261996032] ***
*** center 1: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [6, 59, 0]]
** centroid: 2, normalized-entropy: 0.4441260450795996, [(1, 6), (2, 59)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 32, 0]]
** centroid: 3, normalized-entropy: 0.9738354819891416, [(1, 47), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [10, 47, 0]]
** centroid: 4, normalized-entropy: 0.6699960320994334, [(1, 10), (2, 47)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 54, 10]]
** centroid: 5, normalized-entropy: 0.625262405223423, [(2, 54), (3, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24700238087167964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700238087167964, 0.20355737098678947] ***
*** starting iteration: 2; err: [Inf, 0.24700238087167964, 0.20355737098678947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748] ***
*** starting iteration: 3; err: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455] ***
*** starting iteration: 4; err: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455, 0.18938608826696873] ***
*** starting iteration: 5; err: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455, 0.18938608826696873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455, 0.18938608826696873, 0.18789229440130292] ***
*** starting iteration: 6; err: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455, 0.18938608826696873, 0.18789229440130292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455, 0.18938608826696873, 0.18789229440130292, 0.1869567834790796] ***
*** finished computation of 7 references, err: [Inf, 0.24700238087167964, 0.20355737098678947, 0.19475913063436748, 0.19126419617794455, 0.18938608826696873, 0.18789229440130292, 0.1869567834790796] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 48, 12]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 48), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 15, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 45), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 86, 0]]
** centroid: 3, normalized-entropy: 0.09054385326964301, [(1, 1), (2, 86)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 5, 0]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [42, 18, 0]]
** centroid: 7, normalized-entropy: 0.8812908992306927, [(1, 42), (2, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26032190044410525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26032190044410525, 0.18673758808942512] ***
*** starting iteration: 2; err: [Inf, 0.26032190044410525, 0.18673758808942512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26032190044410525, 0.18673758808942512, 0.18249802766367793] ***
*** starting iteration: 3; err: [Inf, 0.26032190044410525, 0.18673758808942512, 0.18249802766367793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26032190044410525, 0.18673758808942512, 0.18249802766367793, 0.1815589082185179] ***
*** finished computation of 7 references, err: [Inf, 0.26032190044410525, 0.18673758808942512, 0.18249802766367793, 0.1815589082185179] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 12]]
** centroid: 1, normalized-entropy: 0.5705411428522262, [(2, 77), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [47, 13, 0]]
** centroid: 4, normalized-entropy: 0.7540340561971327, [(1, 47), (2, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 20, 0]]
** centroid: 5, normalized-entropy: 0.7300166301457938, [(1, 78), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [18, 66, 0]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(1, 18), (2, 66)]
*** center 7: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26039751894026997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003] ***
*** starting iteration: 2; err: [Inf, 0.26039751894026997, 0.20328231000714003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182] ***
*** starting iteration: 3; err: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687] ***
*** starting iteration: 4; err: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514] ***
*** starting iteration: 5; err: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514, 0.18732077965559438] ***
*** starting iteration: 6; err: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514, 0.18732077965559438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514, 0.18732077965559438, 0.1858106179535389] ***
*** starting iteration: 7; err: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514, 0.18732077965559438, 0.1858106179535389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514, 0.18732077965559438, 0.1858106179535389, 0.18584756809670944] ***
*** finished computation of 7 references, err: [Inf, 0.26039751894026997, 0.20328231000714003, 0.19616297370754182, 0.19185026395879687, 0.18867658239230514, 0.18732077965559438, 0.1858106179535389, 0.18584756809670944] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [8, 53, 0]]
** centroid: 2, normalized-entropy: 0.5605769426145328, [(1, 8), (2, 53)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 52, 13]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 52), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [76, 3, 0]]
** centroid: 5, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 17, 0]]
** centroid: 7, normalized-entropy: 0.7885131605379784, [(1, 55), (2, 17)]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 367,3 => 24,1 => 609), Dict(2 => 365,3 => 40,1 => 595))
[ Info: ===== scores for single classifier: {"micro_f1":0.9469999999999998,"precision":0.947,"recall":0.947,"macro_recall":0.95795249606692,"macro_f1":0.8797458796185621,"accuracy":0.947,"class_f1":{"2":0.9256661991584854,"3":0.7339449541284404,"1":0.9796264855687605},"class_precision":{"2":0.9482758620689655,"3":0.5797101449275363,"1":0.9897084048027445},"class_recall":{"2":0.9041095890410958,"3":1.0,"1":0.9697478991596639}}
[ Info: ===== scores for 1: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9496277963240091,"macro_f1":0.9071544208921551,"accuracy":0.958,"class_f1":{"2":0.940677966101695,"3":0.8,"1":0.9807852965747703},"class_precision":{"2":0.9708454810495627,"3":0.6909090909090909,"1":0.9750830564784053},"class_recall":{"2":0.9123287671232877,"3":0.95,"1":0.9865546218487395}}
[ Info: ===== scores for 5: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9619671156133687,"macro_f1":0.9200970478648052,"accuracy":0.963,"class_f1":{"2":0.9481065918653577,"3":0.8297872340425532,"1":0.9823973176865047},"class_precision":{"2":0.9712643678160919,"3":0.7222222222222222,"1":0.979933110367893},"class_recall":{"2":0.9260273972602739,"3":0.975,"1":0.984873949579832}}
[ Info: ===== scores for 7: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9581069414066996,"macro_f1":0.9137027644504236,"accuracy":0.958,"class_f1":{"2":0.9410112359550562,"3":0.8210526315789474,"1":0.9790444258172675},"class_precision":{"2":0.9654178674351584,"3":0.7090909090909091,"1":0.9765886287625418},"class_recall":{"2":0.9178082191780822,"3":0.975,"1":0.9815126050420168}}
[ Info: ===== scores for 9: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9690341890180729,"macro_f1":0.9211913112869731,"accuracy":0.963,"class_f1":{"2":0.9478138222849083,"3":0.8333333333333333,"1":0.9824267782426778},"class_precision":{"2":0.9767441860465116,"3":0.7142857142857143,"1":0.9783333333333334},"class_recall":{"2":0.9205479452054794,"3":1.0,"1":0.9865546218487395}}
[ Info: ===== scores for 11: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.976132918920993,"macro_f1":0.9292601228810423,"accuracy":0.97,"class_f1":{"2":0.9583333333333334,"3":0.8421052631578948,"1":0.9873417721518987},"class_precision":{"2":0.971830985915493,"3":0.7272727272727273,"1":0.9915254237288136},"class_recall":{"2":0.9452054794520548,"3":1.0,"1":0.9831932773109243}}
(score = 0.958, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.966,"k":3,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.966,"precision":0.966,"recall":0.966,"macro_recall":0.9714208971259737,"macro_f1":0.9158663418996197,"accuracy":0.966,"class_f1":{"2":0.9521126760563381,"3":0.8080808080808081,"1":0.9874055415617129},"class_precision":{"2":0.9797101449275363,"3":0.6779661016949152,"1":0.9865771812080537},"class_recall":{"2":0.9260273972602739,"3":1.0,"1":0.9882352941176471}}
Test Summary: | Pass  Total
AKNC          |    8      8
[73, 2, 2, 1, 2, 10, 2, 5, 1, 7, 1, 11, 9, 9, 15, 13, 7, 24, 7, 14, 55, 3, 3, 9, 1, 13, 13, 6, 1, 35, 1, 4, 66, 6, 11, 33, 3, 12, 18, 14, 11, 2, 32, 7, 61, 4, 59, 5, 1, 7, 10, 2, 3, 5, 6, 2, 10, 43, 19, 5, 4, 32, 17, 10, 7, 2, 55, 12, 21, 7, 6, 7, 2, 10, 7, 29, 5, 39, 24, 13, 4, 2, 108, 3, 7, 23, 7, 10, 7, 10, 3, 30, 4, 6, 21, 12, 3, 58, 14, 5, 6, 33, 6, 26, 1085, 2, 8, 12, 2, 16, 44, 28, 7, 47, 3, 45, 12, 3, 1, 27, 7, 93, 15, 8, 7, 38, 14, 1, 53, 15, 7, 5, 16, 31, 75, 103, 120, 90, 2, 6, 31, 104, 40, 17, 36, 20, 43, 21, 9, 45, 39, 13, 11, 11, 42, 12, 23, 45, 9, 26, 12, 9, 2, 10, 10, 6, 6, 1, 88, 4, 9, 19, 28, 32, 13, 11, 14, 124, 24, 24, 72, 5, 30, 24, 16, 1, 46, 12, 45, 17, 81, 16, 5, 4, 138, 6, 11, 3, 15, 57, 76, 23, 8, 3, 12, 16, 259, 24, 180, 7, 252, 10, 52, 21, 182, 7, 7, 6, 111, 197, 53, 41, 233, 13, 6, 3, 11, 8, 89, 412, 50, 6, 54, 24, 16, 58, 35, 41, 6, 15, 24, 8, 11, 9, 4, 6, 17, 59, 8, 37, 5, 8, 13, 20, 73, 42, 2, 64, 26, 34, 111, 12, 15, 25, 237, 11, 70, 6, 21, 4, 38, 11, 13, 24, 22, 13, 7, 275, 23, 10, 7, 12, 15, 15, 16, 44, 88, 12, 24, 35, 214, 14, 11, 96, 12, 11, 16, 47, 32, 6]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6559999999999999, speedup = 0.27711030211052795, eval_ratio = 0.08178300000000001)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.36343005952380975,"recall":0.3593750000000002,"f1":null,"seconds":0.00035085901618003845,"exhaustive_search_seconds":0.00037656351923942566,"evaluations":479.4140625,"distances_sum":1774.4183066054643}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5355902777777778,"recall":0.5355902777777778,"f1":null,"seconds":0.0006146077066659927,"exhaustive_search_seconds":0.00037656351923942566,"evaluations":623.3125,"distances_sum":1696.1417227200511}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6371527777777772,"recall":0.6371527777777772,"f1":0.6371527777777772,"seconds":0.0004727952182292938,"exhaustive_search_seconds":0.00037656351923942566,"evaluations":772.5859375,"distances_sum":1642.1037983683348}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.716145833333333,"recall":0.716145833333333,"f1":0.716145833333333,"seconds":0.0007295217365026474,"exhaustive_search_seconds":0.00037656351923942566,"evaluations":901.4296875,"distances_sum":1613.783966714558}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7682291666666659,"recall":0.7682291666666659,"f1":0.7682291666666659,"seconds":0.0005575977265834808,"exhaustive_search_seconds":0.00037656351923942566,"evaluations":1005.328125,"distances_sum":1597.7144504532155}
KCenters.DeloneInvIndex> reached performance {"precision":0.8194444444444435,"recall":0.8194444444444435,"f1":0.8194444444444435,"seconds":0.0007303152233362198,"exhaustive_search_seconds":0.00037656351923942566,"evaluations":1116.75,"distances_sum":1584.1768154474057}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8359999999999996, speedup = 0.5733711312907899, eval_ratio = 0.11426900000000001)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
