Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_I91ST9/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_I91ST9/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.09242422136356733 0.0372925860517181; -0.09242422136356733 0.0 0.25902788553269296; -0.0372925860517181 -0.25902788553269296 0.0])
dAA = so3([0.0 0.08078837183632864 0.059114499426169975; -0.08078837183632864 0.0 0.06908416342278774; -0.059114499426169975 -0.06908416342278774 0.0])
dAA = so3([0.0 -0.1182448226027073 0.06232980371758471; 0.1182448226027073 0.0 -0.07568439278120075; -0.06232980371758471 0.07568439278120075 0.0])
dAA = Quaternion(0.9967484924131499, [-0.005268693976970324, 0.06135955354744636, -0.05195853081398672])
dAA = SO3([0.9750075319146561 0.1415438294043601 -0.17124735638029792; -0.13142626067379015 0.988914726024368 0.06909994687012713; 0.17912970360885522 -0.04486656895394203 0.982801882515141])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9689240404530771 0.18620877034839642 0.16282658774727762; -0.21153693064315277 0.9649606656117192 0.15525154039899833; -0.12821205405950614 -0.18487078640911875 0.9743636187411331]), [-2.5902788553269294, 0.37292586051718096, -0.9242422136356733])
xj = SE3(SO3([0.9199484879898947 0.24946811579351175 0.3024242692766928; -0.26226734291868126 0.9649936187924735 0.0017766620897600707; -0.29139426947605107 -0.0809504471404657 0.9531717604001271]), [0.7568439278120074, 0.6232980371758471, 1.182448226027073])
Dx = SE3(SO3([0.9841996925515147 0.04796268961419167 0.170442206000969; -0.027904905305414632 0.9925994086071157 -0.11818515258990828; -0.1748493106689296 0.11156161722463862 0.9782544270898157]), [2.920041660626023, 0.47539740159158134, 2.6365537680061353])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
