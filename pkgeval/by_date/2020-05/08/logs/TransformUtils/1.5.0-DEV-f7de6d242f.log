Julia Version 1.5.0-DEV.875
Commit f7de6d242f (2020-05-07 14:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_mbbrva/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_mbbrva/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04108373449918937 -0.2146401539353; -0.04108373449918937 0.0 0.04568330037862627; 0.2146401539353 -0.04568330037862627 0.0])
dAA = so3([0.0 0.01431879834491732 -0.07019393139880468; -0.01431879834491732 0.0 0.07483849551662745; 0.07019393139880468 -0.07483849551662745 0.0])
dAA = so3([0.0 -0.18457243644818702 -0.07545510459611786; 0.18457243644818702 0.0 0.04563936351831008; 0.07545510459611786 -0.04563936351831008 0.0])
dAA = Quaternion(0.9989976792516904, [0.022639916920006393, -0.038174854945987595, 0.0058096007991099066])
dAA = SO3([0.9966537820879232 0.07405619967463689 -0.034596501840350034; -0.07296573190552577 0.9968277764136276 0.031786571657762885; 0.036840746698865535 -0.02915584778416615 0.9988957382643381])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9840512799999406 0.0517228294077318 -0.17019937499455562; -0.019073405786451714 0.9819579823543023 0.18813486142226027; 0.17685950221060792 -0.18188806945131503 0.9672835399556273]), [-0.4568330037862627, -2.146401539353, -0.4108373449918936])
xj = SE3(SO3([0.9814291851766271 -0.035278872383823226 -0.18855279273155157; 0.013851135029201114 0.9934100538029993 -0.11377438666732026; 0.19132407203994056 0.10904983340862094 0.9754502720752133]), [-0.4563936351831007, -0.7545510459611785, 1.8457243644818702])
Dx = SE3(SO3([0.9993499377252342 -0.03437743334198279 -0.010857902439612072; 0.029563960824342143 0.9538273453121848 -0.298896917941766; 0.020631873132301054 0.29838161372900907 0.954223631230921]), [0.37297941262684636, 0.9563197746832397, 2.444515817901228])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
