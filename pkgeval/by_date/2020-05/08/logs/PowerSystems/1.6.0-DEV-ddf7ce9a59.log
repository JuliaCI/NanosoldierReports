Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Crayons ───────────────────── v4.0.1
  Installed DataAPI ───────────────────── v1.3.0
  Installed HDF5 ──────────────────────── v0.13.2
  Installed TimeSeries ────────────────── v0.18.0
  Installed InfrastructureSystems ─────── v0.6.5
  Installed PrettyTables ──────────────── v0.8.4
  Installed PowerSystems ──────────────── v0.17.2
  Installed Zstd_jll ──────────────────── v1.4.4+1
  Installed TableTraits ───────────────── v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Blosc_jll ─────────────────── v1.14.3+1
  Installed PooledArrays ──────────────── v0.5.3
  Installed JSON2 ─────────────────────── v0.3.1
  Installed WeakRefStrings ────────────── v0.6.2
  Installed DocStringExtensions ───────── v0.8.1
  Installed DataFrames ────────────────── v0.20.2
  Installed Formatting ────────────────── v0.4.1
  Installed FilePathsBase ─────────────── v0.7.0
  Installed Zlib_jll ──────────────────── v1.2.11+9
  Installed Mustache ──────────────────── v1.0.2
  Installed UnPack ────────────────────── v1.0.0
  Installed OrderedCollections ────────── v1.2.0
  Installed Tables ────────────────────── v1.0.4
  Installed Parameters ────────────────── v0.12.1
  Installed JSON ──────────────────────── v0.21.0
  Installed Parsers ───────────────────── v1.0.3
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed Lz4_jll ───────────────────── v1.9.2+0
  Installed InvertedIndices ───────────── v1.0.0
  Installed RecipesBase ───────────────── v1.0.1
  Installed HDF5_jll ──────────────────── v1.10.5+5
  Installed YAML ──────────────────────── v0.4.0
  Installed Compat ────────────────────── v3.9.0
  Installed DataStructures ────────────── v0.17.15
  Installed Blosc ─────────────────────── v0.7.0
  Installed CSV ───────────────────────── v0.6.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [bcd98974] + PowerSystems v0.17.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [a74b3585] + Blosc v0.7.0
  [0b7ba130] + Blosc_jll v1.14.3+1
  [336ed68f] + CSV v0.6.1
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [a8cc5b0e] + Crayons v4.0.1
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [ffbed154] + DocStringExtensions v0.8.1
  [48062228] + FilePathsBase v0.7.0
  [59287772] + Formatting v0.4.1
  [f67ccb44] + HDF5 v0.13.2
  [0234f1f7] + HDF5_jll v1.10.5+5
  [2cd47ed4] + InfrastructureSystems v0.6.5
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [2535ab7d] + JSON2 v0.3.1
  [5ced341a] + Lz4_jll v1.9.2+0
  [e1d29d7a] + Missings v0.4.3
  [ffc61752] + Mustache v1.0.2
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.3
  [2dfb63ee] + PooledArrays v0.5.3
  [bcd98974] + PowerSystems v0.17.2
  [08abe8d2] + PrettyTables v0.8.4
  [3cdcf5f2] + RecipesBase v1.0.1
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [9e3dc215] + TimeSeries v0.18.0
  [3a884ed6] + UnPack v1.0.0
  [ea10d353] + WeakRefStrings v0.6.2
  [ddb6d928] + YAML v0.4.0
  [83775a58] + Zlib_jll v1.2.11+9
  [3161d3a3] + Zstd_jll v1.4.4+1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building HDF5 → `~/.julia/packages/HDF5/pAi1D/deps/build.log`
    Testing PowerSystems
Status `/tmp/jl_hiHSt9/Project.toml`
  [4c88cf16] Aqua v0.4.1
  [336ed68f] CSV v0.6.1
  [a93c6f00] DataFrames v0.20.2
  [ffbed154] DocStringExtensions v0.8.1
  [2cd47ed4] InfrastructureSystems v0.6.5
  [682c06a0] JSON v0.21.0
  [2535ab7d] JSON2 v0.3.1
  [2774e3e8] NLsolve v4.3.0
  [bcd98974] PowerSystems v0.17.2
  [9e3dc215] TimeSeries v0.18.0
  [ddb6d928] YAML v0.4.0
  [ade2ca70] Dates
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
Status `/tmp/jl_hiHSt9/Manifest.toml`
  [4c88cf16] Aqua v0.4.1
  [4fba245c] ArrayInterface v2.8.7
  [a74b3585] Blosc v0.7.0
  [0b7ba130] Blosc_jll v1.14.3+1
  [336ed68f] CSV v0.6.1
  [324d7699] CategoricalArrays v0.7.7
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.9.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [a8cc5b0e] Crayons v4.0.1
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [ffbed154] DocStringExtensions v0.8.1
  [48062228] FilePathsBase v0.7.0
  [6a86dc24] FiniteDiff v2.3.1
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [f67ccb44] HDF5 v0.13.2
  [0234f1f7] HDF5_jll v1.10.5+5
  [2cd47ed4] InfrastructureSystems v0.6.5
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2535ab7d] JSON2 v0.3.1
  [d3d80556] LineSearches v7.0.1
  [5ced341a] Lz4_jll v1.9.2+0
  [e1d29d7a] Missings v0.4.3
  [ffc61752] Mustache v1.0.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.3
  [2dfb63ee] PooledArrays v0.5.3
  [bcd98974] PowerSystems v0.17.2
  [08abe8d2] PrettyTables v0.8.4
  [3cdcf5f2] RecipesBase v1.0.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [9e3dc215] TimeSeries v0.18.0
  [3a884ed6] UnPack v1.0.0
  [ea10d353] WeakRefStrings v0.6.2
  [ddb6d928] YAML v0.4.0
  [83775a58] Zlib_jll v1.2.11+9
  [3161d3a3] Zstd_jll v1.4.4+1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode

test_base_checks: 
test_branchchecks_testing: 
test_busnumberchecks: 
test_constructors: 
test_cost_functions: 
test_data: 
test_dynamic_generator: 
test_dynamic_inverter: 
test_generate_structs: diff --strip-trailing-cr tmp-test-generated-structs/AGC.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AGC.jl
94,114d93
< 
< 
< InfrastructureSystems.set_name(value::AGC, val) = value.name = val
< """Set AGC available."""
< set_available(value::AGC, val) = value.available = val
< """Set AGC bias."""
< set_bias(value::AGC, val) = value.bias = val
< """Set AGC K_p."""
< set_K_p(value::AGC, val) = value.K_p = val
< """Set AGC K_i."""
< set_K_i(value::AGC, val) = value.K_i = val
< """Set AGC K_d."""
< set_K_d(value::AGC, val) = value.K_d = val
< """Set AGC delta_t."""
< set_delta_t(value::AGC, val) = value.delta_t = val
< """Set AGC area."""
< set_area(value::AGC, val) = value.area = val
< """Set AGC ext."""
< set_ext(value::AGC, val) = value.ext = val
< """Set AGC internal."""
< set_internal(value::AGC, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/AVRFixed.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AVRFixed.jl
60,70d59
< 
< """Set AVRFixed Emf."""
< set_Emf(value::AVRFixed, val) = value.Emf = val
< """Set AVRFixed ext."""
< set_ext(value::AVRFixed, val) = value.ext = val
< """Set AVRFixed states."""
< set_states(value::AVRFixed, val) = value.states = val
< """Set AVRFixed n_states."""
< set_n_states(value::AVRFixed, val) = value.n_states = val
< """Set AVRFixed internal."""
< set_internal(value::AVRFixed, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/AVRSimple.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AVRSimple.jl
60,70d59
< 
< """Set AVRSimple Kv."""
< set_Kv(value::AVRSimple, val) = value.Kv = val
< """Set AVRSimple ext."""
< set_ext(value::AVRSimple, val) = value.ext = val
< """Set AVRSimple states."""
< set_states(value::AVRSimple, val) = value.states = val
< """Set AVRSimple n_states."""
< set_n_states(value::AVRSimple, val) = value.n_states = val
< """Set AVRSimple internal."""
< set_internal(value::AVRSimple, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/AVRTypeI.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AVRTypeI.jl
128,158d127
< 
< """Set AVRTypeI Ka."""
< set_Ka(value::AVRTypeI, val) = value.Ka = val
< """Set AVRTypeI Ke."""
< set_Ke(value::AVRTypeI, val) = value.Ke = val
< """Set AVRTypeI Kf."""
< set_Kf(value::AVRTypeI, val) = value.Kf = val
< """Set AVRTypeI Ta."""
< set_Ta(value::AVRTypeI, val) = value.Ta = val
< """Set AVRTypeI Te."""
< set_Te(value::AVRTypeI, val) = value.Te = val
< """Set AVRTypeI Tf."""
< set_Tf(value::AVRTypeI, val) = value.Tf = val
< """Set AVRTypeI Tr."""
< set_Tr(value::AVRTypeI, val) = value.Tr = val
< """Set AVRTypeI Vr_max."""
< set_Vr_max(value::AVRTypeI, val) = value.Vr_max = val
< """Set AVRTypeI Vr_min."""
< set_Vr_min(value::AVRTypeI, val) = value.Vr_min = val
< """Set AVRTypeI Ae."""
< set_Ae(value::AVRTypeI, val) = value.Ae = val
< """Set AVRTypeI Be."""
< set_Be(value::AVRTypeI, val) = value.Be = val
< """Set AVRTypeI ext."""
< set_ext(value::AVRTypeI, val) = value.ext = val
< """Set AVRTypeI states."""
< set_states(value::AVRTypeI, val) = value.states = val
< """Set AVRTypeI n_states."""
< set_n_states(value::AVRTypeI, val) = value.n_states = val
< """Set AVRTypeI internal."""
< set_internal(value::AVRTypeI, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/AVRTypeII.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AVRTypeII.jl
128,158d127
< 
< """Set AVRTypeII K0."""
< set_K0(value::AVRTypeII, val) = value.K0 = val
< """Set AVRTypeII T1."""
< set_T1(value::AVRTypeII, val) = value.T1 = val
< """Set AVRTypeII T2."""
< set_T2(value::AVRTypeII, val) = value.T2 = val
< """Set AVRTypeII T3."""
< set_T3(value::AVRTypeII, val) = value.T3 = val
< """Set AVRTypeII T4."""
< set_T4(value::AVRTypeII, val) = value.T4 = val
< """Set AVRTypeII Te."""
< set_Te(value::AVRTypeII, val) = value.Te = val
< """Set AVRTypeII Tr."""
< set_Tr(value::AVRTypeII, val) = value.Tr = val
< """Set AVRTypeII Vr_max."""
< set_Vr_max(value::AVRTypeII, val) = value.Vr_max = val
< """Set AVRTypeII Vr_min."""
< set_Vr_min(value::AVRTypeII, val) = value.Vr_min = val
< """Set AVRTypeII Ae."""
< set_Ae(value::AVRTypeII, val) = value.Ae = val
< """Set AVRTypeII Be."""
< set_Be(value::AVRTypeII, val) = value.Be = val
< """Set AVRTypeII ext."""
< set_ext(value::AVRTypeII, val) = value.ext = val
< """Set AVRTypeII states."""
< set_states(value::AVRTypeII, val) = value.states = val
< """Set AVRTypeII n_states."""
< set_n_states(value::AVRTypeII, val) = value.n_states = val
< """Set AVRTypeII internal."""
< set_internal(value::AVRTypeII, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/AndersonFouadMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AndersonFouadMachine.jl
135,167d134
< 
< """Set AndersonFouadMachine R."""
< set_R(value::AndersonFouadMachine, val) = value.R = val
< """Set AndersonFouadMachine Xd."""
< set_Xd(value::AndersonFouadMachine, val) = value.Xd = val
< """Set AndersonFouadMachine Xq."""
< set_Xq(value::AndersonFouadMachine, val) = value.Xq = val
< """Set AndersonFouadMachine Xd_p."""
< set_Xd_p(value::AndersonFouadMachine, val) = value.Xd_p = val
< """Set AndersonFouadMachine Xq_p."""
< set_Xq_p(value::AndersonFouadMachine, val) = value.Xq_p = val
< """Set AndersonFouadMachine Xd_pp."""
< set_Xd_pp(value::AndersonFouadMachine, val) = value.Xd_pp = val
< """Set AndersonFouadMachine Xq_pp."""
< set_Xq_pp(value::AndersonFouadMachine, val) = value.Xq_pp = val
< """Set AndersonFouadMachine Td0_p."""
< set_Td0_p(value::AndersonFouadMachine, val) = value.Td0_p = val
< """Set AndersonFouadMachine Tq0_p."""
< set_Tq0_p(value::AndersonFouadMachine, val) = value.Tq0_p = val
< """Set AndersonFouadMachine Td0_pp."""
< set_Td0_pp(value::AndersonFouadMachine, val) = value.Td0_pp = val
< """Set AndersonFouadMachine Tq0_pp."""
< set_Tq0_pp(value::AndersonFouadMachine, val) = value.Tq0_pp = val
< """Set AndersonFouadMachine MVABase."""
< set_MVABase(value::AndersonFouadMachine, val) = value.MVABase = val
< """Set AndersonFouadMachine ext."""
< set_ext(value::AndersonFouadMachine, val) = value.ext = val
< """Set AndersonFouadMachine states."""
< set_states(value::AndersonFouadMachine, val) = value.states = val
< """Set AndersonFouadMachine n_states."""
< set_n_states(value::AndersonFouadMachine, val) = value.n_states = val
< """Set AndersonFouadMachine internal."""
< set_internal(value::AndersonFouadMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/Arc.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Arc.jl
49,55d48
< 
< """Set Arc from."""
< set_from(value::Arc, val) = value.from = val
< """Set Arc to."""
< set_to(value::Arc, val) = value.to = val
< """Set Arc internal."""
< set_internal(value::Arc, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/Area.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Area.jl
60,70d59
< 
< 
< InfrastructureSystems.set_name(value::Area, val) = value.name = val
< """Set Area maxactivepower."""
< set_maxactivepower(value::Area, val) = value.maxactivepower = val
< """Set Area maxreactivepower."""
< set_maxreactivepower(value::Area, val) = value.maxreactivepower = val
< 
< InfrastructureSystems.set_forecasts(value::Area, val) = value.forecasts = val
< """Set Area internal."""
< set_internal(value::Area, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/AverageConverter.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/AverageConverter.jl
59,69d58
< 
< """Set AverageConverter v_rated."""
< set_v_rated(value::AverageConverter, val) = value.v_rated = val
< """Set AverageConverter s_rated."""
< set_s_rated(value::AverageConverter, val) = value.s_rated = val
< """Set AverageConverter ext."""
< set_ext(value::AverageConverter, val) = value.ext = val
< """Set AverageConverter states."""
< set_states(value::AverageConverter, val) = value.states = val
< """Set AverageConverter n_states."""
< set_n_states(value::AverageConverter, val) = value.n_states = val
diff --strip-trailing-cr tmp-test-generated-structs/BaseMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/BaseMachine.jl
79,95d78
< 
< """Set BaseMachine R."""
< set_R(value::BaseMachine, val) = value.R = val
< """Set BaseMachine Xd_p."""
< set_Xd_p(value::BaseMachine, val) = value.Xd_p = val
< """Set BaseMachine eq_p."""
< set_eq_p(value::BaseMachine, val) = value.eq_p = val
< """Set BaseMachine MVABase."""
< set_MVABase(value::BaseMachine, val) = value.MVABase = val
< """Set BaseMachine ext."""
< set_ext(value::BaseMachine, val) = value.ext = val
< """Set BaseMachine states."""
< set_states(value::BaseMachine, val) = value.states = val
< """Set BaseMachine n_states."""
< set_n_states(value::BaseMachine, val) = value.n_states = val
< """Set BaseMachine internal."""
< set_internal(value::BaseMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/Bus.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Bus.jl
121,143d120
< 
< """Set Bus number."""
< set_number(value::Bus, val) = value.number = val
< 
< InfrastructureSystems.set_name(value::Bus, val) = value.name = val
< """Set Bus bustype."""
< set_bustype(value::Bus, val) = value.bustype = val
< """Set Bus angle."""
< set_angle(value::Bus, val) = value.angle = val
< """Set Bus voltage."""
< set_voltage(value::Bus, val) = value.voltage = val
< """Set Bus voltagelimits."""
< set_voltagelimits(value::Bus, val) = value.voltagelimits = val
< """Set Bus basevoltage."""
< set_basevoltage(value::Bus, val) = value.basevoltage = val
< """Set Bus area."""
< set_area(value::Bus, val) = value.area = val
< """Set Bus load_zone."""
< set_load_zone(value::Bus, val) = value.load_zone = val
< """Set Bus ext."""
< set_ext(value::Bus, val) = value.ext = val
< """Set Bus internal."""
< set_internal(value::Bus, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/CurrentControl.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/CurrentControl.jl
115,141d114
< 
< """Set CurrentControl kpv."""
< set_kpv(value::CurrentControl, val) = value.kpv = val
< """Set CurrentControl kiv."""
< set_kiv(value::CurrentControl, val) = value.kiv = val
< """Set CurrentControl kffv."""
< set_kffv(value::CurrentControl, val) = value.kffv = val
< """Set CurrentControl rv."""
< set_rv(value::CurrentControl, val) = value.rv = val
< """Set CurrentControl lv."""
< set_lv(value::CurrentControl, val) = value.lv = val
< """Set CurrentControl kpc."""
< set_kpc(value::CurrentControl, val) = value.kpc = val
< """Set CurrentControl kic."""
< set_kic(value::CurrentControl, val) = value.kic = val
< """Set CurrentControl kffi."""
< set_kffi(value::CurrentControl, val) = value.kffi = val
< """Set CurrentControl ωad."""
< set_ωad(value::CurrentControl, val) = value.ωad = val
< """Set CurrentControl kad."""
< set_kad(value::CurrentControl, val) = value.kad = val
< """Set CurrentControl ext."""
< set_ext(value::CurrentControl, val) = value.ext = val
< """Set CurrentControl states."""
< set_states(value::CurrentControl, val) = value.states = val
< """Set CurrentControl n_states."""
< set_n_states(value::CurrentControl, val) = value.n_states = val
diff --strip-trailing-cr tmp-test-generated-structs/FiveMassShaft.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/FiveMassShaft.jl
179,223d178
< 
< """Set FiveMassShaft H."""
< set_H(value::FiveMassShaft, val) = value.H = val
< """Set FiveMassShaft H_hp."""
< set_H_hp(value::FiveMassShaft, val) = value.H_hp = val
< """Set FiveMassShaft H_ip."""
< set_H_ip(value::FiveMassShaft, val) = value.H_ip = val
< """Set FiveMassShaft H_lp."""
< set_H_lp(value::FiveMassShaft, val) = value.H_lp = val
< """Set FiveMassShaft H_ex."""
< set_H_ex(value::FiveMassShaft, val) = value.H_ex = val
< """Set FiveMassShaft D."""
< set_D(value::FiveMassShaft, val) = value.D = val
< """Set FiveMassShaft D_hp."""
< set_D_hp(value::FiveMassShaft, val) = value.D_hp = val
< """Set FiveMassShaft D_ip."""
< set_D_ip(value::FiveMassShaft, val) = value.D_ip = val
< """Set FiveMassShaft D_lp."""
< set_D_lp(value::FiveMassShaft, val) = value.D_lp = val
< """Set FiveMassShaft D_ex."""
< set_D_ex(value::FiveMassShaft, val) = value.D_ex = val
< """Set FiveMassShaft D_12."""
< set_D_12(value::FiveMassShaft, val) = value.D_12 = val
< """Set FiveMassShaft D_23."""
< set_D_23(value::FiveMassShaft, val) = value.D_23 = val
< """Set FiveMassShaft D_34."""
< set_D_34(value::FiveMassShaft, val) = value.D_34 = val
< """Set FiveMassShaft D_45."""
< set_D_45(value::FiveMassShaft, val) = value.D_45 = val
< """Set FiveMassShaft K_hp."""
< set_K_hp(value::FiveMassShaft, val) = value.K_hp = val
< """Set FiveMassShaft K_ip."""
< set_K_ip(value::FiveMassShaft, val) = value.K_ip = val
< """Set FiveMassShaft K_lp."""
< set_K_lp(value::FiveMassShaft, val) = value.K_lp = val
< """Set FiveMassShaft K_ex."""
< set_K_ex(value::FiveMassShaft, val) = value.K_ex = val
< """Set FiveMassShaft ext."""
< set_ext(value::FiveMassShaft, val) = value.ext = val
< """Set FiveMassShaft states."""
< set_states(value::FiveMassShaft, val) = value.states = val
< """Set FiveMassShaft n_states."""
< set_n_states(value::FiveMassShaft, val) = value.n_states = val
< """Set FiveMassShaft internal."""
< set_internal(value::FiveMassShaft, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/FixedAdmittance.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/FixedAdmittance.jl
80,96d79
< 
< 
< InfrastructureSystems.set_name(value::FixedAdmittance, val) = value.name = val
< """Set FixedAdmittance available."""
< set_available(value::FixedAdmittance, val) = value.available = val
< """Set FixedAdmittance bus."""
< set_bus(value::FixedAdmittance, val) = value.bus = val
< """Set FixedAdmittance Y."""
< set_Y(value::FixedAdmittance, val) = value.Y = val
< """Set FixedAdmittance services."""
< set_services(value::FixedAdmittance, val) = value.services = val
< """Set FixedAdmittance ext."""
< set_ext(value::FixedAdmittance, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::FixedAdmittance, val) = value.forecasts = val
< """Set FixedAdmittance internal."""
< set_internal(value::FixedAdmittance, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/FixedDCSource.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/FixedDCSource.jl
58,68d57
< 
< """Set FixedDCSource voltage."""
< set_voltage(value::FixedDCSource, val) = value.voltage = val
< """Set FixedDCSource ext."""
< set_ext(value::FixedDCSource, val) = value.ext = val
< """Set FixedDCSource states."""
< set_states(value::FixedDCSource, val) = value.states = val
< """Set FixedDCSource n_states."""
< set_n_states(value::FixedDCSource, val) = value.n_states = val
< """Set FixedDCSource internal."""
< set_internal(value::FixedDCSource, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/FullMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/FullMachine.jl
157,195d156
< 
< """Set FullMachine R."""
< set_R(value::FullMachine, val) = value.R = val
< """Set FullMachine R_f."""
< set_R_f(value::FullMachine, val) = value.R_f = val
< """Set FullMachine R_1d."""
< set_R_1d(value::FullMachine, val) = value.R_1d = val
< """Set FullMachine R_1q."""
< set_R_1q(value::FullMachine, val) = value.R_1q = val
< """Set FullMachine L_d."""
< set_L_d(value::FullMachine, val) = value.L_d = val
< """Set FullMachine L_q."""
< set_L_q(value::FullMachine, val) = value.L_q = val
< """Set FullMachine L_ad."""
< set_L_ad(value::FullMachine, val) = value.L_ad = val
< """Set FullMachine L_aq."""
< set_L_aq(value::FullMachine, val) = value.L_aq = val
< """Set FullMachine L_f1d."""
< set_L_f1d(value::FullMachine, val) = value.L_f1d = val
< """Set FullMachine L_ff."""
< set_L_ff(value::FullMachine, val) = value.L_ff = val
< """Set FullMachine L_1d."""
< set_L_1d(value::FullMachine, val) = value.L_1d = val
< """Set FullMachine L_1q."""
< set_L_1q(value::FullMachine, val) = value.L_1q = val
< """Set FullMachine MVABase."""
< set_MVABase(value::FullMachine, val) = value.MVABase = val
< """Set FullMachine ext."""
< set_ext(value::FullMachine, val) = value.ext = val
< """Set FullMachine inv_d_fluxlink."""
< set_inv_d_fluxlink(value::FullMachine, val) = value.inv_d_fluxlink = val
< """Set FullMachine inv_q_fluxlink."""
< set_inv_q_fluxlink(value::FullMachine, val) = value.inv_q_fluxlink = val
< """Set FullMachine states."""
< set_states(value::FullMachine, val) = value.states = val
< """Set FullMachine n_states."""
< set_n_states(value::FullMachine, val) = value.n_states = val
< """Set FullMachine internal."""
< set_internal(value::FullMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/GenericBattery.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/GenericBattery.jl
136,170d135
< 
< 
< InfrastructureSystems.set_name(value::GenericBattery, val) = value.name = val
< """Set GenericBattery available."""
< set_available(value::GenericBattery, val) = value.available = val
< """Set GenericBattery bus."""
< set_bus(value::GenericBattery, val) = value.bus = val
< """Set GenericBattery primemover."""
< set_primemover(value::GenericBattery, val) = value.primemover = val
< """Set GenericBattery energy."""
< set_energy(value::GenericBattery, val) = value.energy = val
< """Set GenericBattery capacity."""
< set_capacity(value::GenericBattery, val) = value.capacity = val
< """Set GenericBattery rating."""
< set_rating(value::GenericBattery, val) = value.rating = val
< """Set GenericBattery activepower."""
< set_activepower(value::GenericBattery, val) = value.activepower = val
< """Set GenericBattery inputactivepowerlimits."""
< set_inputactivepowerlimits(value::GenericBattery, val) = value.inputactivepowerlimits = val
< """Set GenericBattery outputactivepowerlimits."""
< set_outputactivepowerlimits(value::GenericBattery, val) = value.outputactivepowerlimits = val
< """Set GenericBattery efficiency."""
< set_efficiency(value::GenericBattery, val) = value.efficiency = val
< """Set GenericBattery reactivepower."""
< set_reactivepower(value::GenericBattery, val) = value.reactivepower = val
< """Set GenericBattery reactivepowerlimits."""
< set_reactivepowerlimits(value::GenericBattery, val) = value.reactivepowerlimits = val
< """Set GenericBattery services."""
< set_services(value::GenericBattery, val) = value.services = val
< """Set GenericBattery ext."""
< set_ext(value::GenericBattery, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::GenericBattery, val) = value.forecasts = val
< """Set GenericBattery internal."""
< set_internal(value::GenericBattery, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/HVDCLine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/HVDCLine.jl
109,135d108
< 
< 
< InfrastructureSystems.set_name(value::HVDCLine, val) = value.name = val
< """Set HVDCLine available."""
< set_available(value::HVDCLine, val) = value.available = val
< """Set HVDCLine activepower_flow."""
< set_activepower_flow(value::HVDCLine, val) = value.activepower_flow = val
< """Set HVDCLine arc."""
< set_arc(value::HVDCLine, val) = value.arc = val
< """Set HVDCLine activepowerlimits_from."""
< set_activepowerlimits_from(value::HVDCLine, val) = value.activepowerlimits_from = val
< """Set HVDCLine activepowerlimits_to."""
< set_activepowerlimits_to(value::HVDCLine, val) = value.activepowerlimits_to = val
< """Set HVDCLine reactivepowerlimits_from."""
< set_reactivepowerlimits_from(value::HVDCLine, val) = value.reactivepowerlimits_from = val
< """Set HVDCLine reactivepowerlimits_to."""
< set_reactivepowerlimits_to(value::HVDCLine, val) = value.reactivepowerlimits_to = val
< """Set HVDCLine loss."""
< set_loss(value::HVDCLine, val) = value.loss = val
< """Set HVDCLine services."""
< set_services(value::HVDCLine, val) = value.services = val
< """Set HVDCLine ext."""
< set_ext(value::HVDCLine, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::HVDCLine, val) = value.forecasts = val
< """Set HVDCLine internal."""
< set_internal(value::HVDCLine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/HydroDispatch.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/HydroDispatch.jl
125,155d124
< 
< 
< InfrastructureSystems.set_name(value::HydroDispatch, val) = value.name = val
< """Set HydroDispatch available."""
< set_available(value::HydroDispatch, val) = value.available = val
< """Set HydroDispatch bus."""
< set_bus(value::HydroDispatch, val) = value.bus = val
< """Set HydroDispatch activepower."""
< set_activepower(value::HydroDispatch, val) = value.activepower = val
< """Set HydroDispatch reactivepower."""
< set_reactivepower(value::HydroDispatch, val) = value.reactivepower = val
< """Set HydroDispatch rating."""
< set_rating(value::HydroDispatch, val) = value.rating = val
< """Set HydroDispatch primemover."""
< set_primemover(value::HydroDispatch, val) = value.primemover = val
< """Set HydroDispatch activepowerlimits."""
< set_activepowerlimits(value::HydroDispatch, val) = value.activepowerlimits = val
< """Set HydroDispatch reactivepowerlimits."""
< set_reactivepowerlimits(value::HydroDispatch, val) = value.reactivepowerlimits = val
< """Set HydroDispatch ramplimits."""
< set_ramplimits(value::HydroDispatch, val) = value.ramplimits = val
< """Set HydroDispatch timelimits."""
< set_timelimits(value::HydroDispatch, val) = value.timelimits = val
< """Set HydroDispatch services."""
< set_services(value::HydroDispatch, val) = value.services = val
< """Set HydroDispatch ext."""
< set_ext(value::HydroDispatch, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::HydroDispatch, val) = value.forecasts = val
< """Set HydroDispatch internal."""
< set_internal(value::HydroDispatch, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/HydroEnergyReservoir.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/HydroEnergyReservoir.jl
150,188d149
< 
< 
< InfrastructureSystems.set_name(value::HydroEnergyReservoir, val) = value.name = val
< """Set HydroEnergyReservoir available."""
< set_available(value::HydroEnergyReservoir, val) = value.available = val
< """Set HydroEnergyReservoir bus."""
< set_bus(value::HydroEnergyReservoir, val) = value.bus = val
< """Set HydroEnergyReservoir activepower."""
< set_activepower(value::HydroEnergyReservoir, val) = value.activepower = val
< """Set HydroEnergyReservoir reactivepower."""
< set_reactivepower(value::HydroEnergyReservoir, val) = value.reactivepower = val
< """Set HydroEnergyReservoir rating."""
< set_rating(value::HydroEnergyReservoir, val) = value.rating = val
< """Set HydroEnergyReservoir primemover."""
< set_primemover(value::HydroEnergyReservoir, val) = value.primemover = val
< """Set HydroEnergyReservoir activepowerlimits."""
< set_activepowerlimits(value::HydroEnergyReservoir, val) = value.activepowerlimits = val
< """Set HydroEnergyReservoir reactivepowerlimits."""
< set_reactivepowerlimits(value::HydroEnergyReservoir, val) = value.reactivepowerlimits = val
< """Set HydroEnergyReservoir ramplimits."""
< set_ramplimits(value::HydroEnergyReservoir, val) = value.ramplimits = val
< """Set HydroEnergyReservoir timelimits."""
< set_timelimits(value::HydroEnergyReservoir, val) = value.timelimits = val
< """Set HydroEnergyReservoir op_cost."""
< set_op_cost(value::HydroEnergyReservoir, val) = value.op_cost = val
< """Set HydroEnergyReservoir storage_capacity."""
< set_storage_capacity(value::HydroEnergyReservoir, val) = value.storage_capacity = val
< """Set HydroEnergyReservoir inflow."""
< set_inflow(value::HydroEnergyReservoir, val) = value.inflow = val
< """Set HydroEnergyReservoir initial_storage."""
< set_initial_storage(value::HydroEnergyReservoir, val) = value.initial_storage = val
< """Set HydroEnergyReservoir services."""
< set_services(value::HydroEnergyReservoir, val) = value.services = val
< """Set HydroEnergyReservoir ext."""
< set_ext(value::HydroEnergyReservoir, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::HydroEnergyReservoir, val) = value.forecasts = val
< """Set HydroEnergyReservoir internal."""
< set_internal(value::HydroEnergyReservoir, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/InterruptibleLoad.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/InterruptibleLoad.jl
110,136d109
< 
< 
< InfrastructureSystems.set_name(value::InterruptibleLoad, val) = value.name = val
< """Set InterruptibleLoad available."""
< set_available(value::InterruptibleLoad, val) = value.available = val
< """Set InterruptibleLoad bus."""
< set_bus(value::InterruptibleLoad, val) = value.bus = val
< """Set InterruptibleLoad model."""
< set_model(value::InterruptibleLoad, val) = value.model = val
< """Set InterruptibleLoad activepower."""
< set_activepower(value::InterruptibleLoad, val) = value.activepower = val
< """Set InterruptibleLoad reactivepower."""
< set_reactivepower(value::InterruptibleLoad, val) = value.reactivepower = val
< """Set InterruptibleLoad maxactivepower."""
< set_maxactivepower(value::InterruptibleLoad, val) = value.maxactivepower = val
< """Set InterruptibleLoad maxreactivepower."""
< set_maxreactivepower(value::InterruptibleLoad, val) = value.maxreactivepower = val
< """Set InterruptibleLoad op_cost."""
< set_op_cost(value::InterruptibleLoad, val) = value.op_cost = val
< """Set InterruptibleLoad services."""
< set_services(value::InterruptibleLoad, val) = value.services = val
< """Set InterruptibleLoad ext."""
< set_ext(value::InterruptibleLoad, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::InterruptibleLoad, val) = value.forecasts = val
< """Set InterruptibleLoad internal."""
< set_internal(value::InterruptibleLoad, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/KauraPLL.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/KauraPLL.jl
66,78d65
< 
< """Set KauraPLL ω_lp."""
< set_ω_lp(value::KauraPLL, val) = value.ω_lp = val
< """Set KauraPLL kp_pll."""
< set_kp_pll(value::KauraPLL, val) = value.kp_pll = val
< """Set KauraPLL ki_pll."""
< set_ki_pll(value::KauraPLL, val) = value.ki_pll = val
< """Set KauraPLL ext."""
< set_ext(value::KauraPLL, val) = value.ext = val
< """Set KauraPLL states."""
< set_states(value::KauraPLL, val) = value.states = val
< """Set KauraPLL n_states."""
< set_n_states(value::KauraPLL, val) = value.n_states = val
diff --strip-trailing-cr tmp-test-generated-structs/LCFilter.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/LCFilter.jl
66,78d65
< 
< """Set LCFilter lf."""
< set_lf(value::LCFilter, val) = value.lf = val
< """Set LCFilter rf."""
< set_rf(value::LCFilter, val) = value.rf = val
< """Set LCFilter cf."""
< set_cf(value::LCFilter, val) = value.cf = val
< """Set LCFilter ext."""
< set_ext(value::LCFilter, val) = value.ext = val
< """Set LCFilter states."""
< set_states(value::LCFilter, val) = value.states = val
< """Set LCFilter n_states."""
< set_n_states(value::LCFilter, val) = value.n_states = val
diff --strip-trailing-cr tmp-test-generated-structs/LCLFilter.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/LCLFilter.jl
80,96d79
< 
< """Set LCLFilter lf."""
< set_lf(value::LCLFilter, val) = value.lf = val
< """Set LCLFilter rf."""
< set_rf(value::LCLFilter, val) = value.rf = val
< """Set LCLFilter cf."""
< set_cf(value::LCLFilter, val) = value.cf = val
< """Set LCLFilter lg."""
< set_lg(value::LCLFilter, val) = value.lg = val
< """Set LCLFilter rg."""
< set_rg(value::LCLFilter, val) = value.rg = val
< """Set LCLFilter ext."""
< set_ext(value::LCLFilter, val) = value.ext = val
< """Set LCLFilter states."""
< set_states(value::LCLFilter, val) = value.states = val
< """Set LCLFilter n_states."""
< set_n_states(value::LCLFilter, val) = value.n_states = val
diff --strip-trailing-cr tmp-test-generated-structs/Line.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Line.jl
118,146d117
< 
< 
< InfrastructureSystems.set_name(value::Line, val) = value.name = val
< """Set Line available."""
< set_available(value::Line, val) = value.available = val
< """Set Line activepower_flow."""
< set_activepower_flow(value::Line, val) = value.activepower_flow = val
< """Set Line reactivepower_flow."""
< set_reactivepower_flow(value::Line, val) = value.reactivepower_flow = val
< """Set Line arc."""
< set_arc(value::Line, val) = value.arc = val
< """Set Line r."""
< set_r(value::Line, val) = value.r = val
< """Set Line x."""
< set_x(value::Line, val) = value.x = val
< """Set Line b."""
< set_b(value::Line, val) = value.b = val
< """Set Line rate."""
< set_rate(value::Line, val) = value.rate = val
< """Set Line anglelimits."""
< set_anglelimits(value::Line, val) = value.anglelimits = val
< """Set Line services."""
< set_services(value::Line, val) = value.services = val
< """Set Line ext."""
< set_ext(value::Line, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::Line, val) = value.forecasts = val
< """Set Line internal."""
< set_internal(value::Line, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/LoadZone.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/LoadZone.jl
60,70d59
< 
< 
< InfrastructureSystems.set_name(value::LoadZone, val) = value.name = val
< """Set LoadZone maxactivepower."""
< set_maxactivepower(value::LoadZone, val) = value.maxactivepower = val
< """Set LoadZone maxreactivepower."""
< set_maxreactivepower(value::LoadZone, val) = value.maxreactivepower = val
< 
< InfrastructureSystems.set_forecasts(value::LoadZone, val) = value.forecasts = val
< """Set LoadZone internal."""
< set_internal(value::LoadZone, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/MarconatoMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/MarconatoMachine.jl
152,190d151
< 
< """Set MarconatoMachine R."""
< set_R(value::MarconatoMachine, val) = value.R = val
< """Set MarconatoMachine Xd."""
< set_Xd(value::MarconatoMachine, val) = value.Xd = val
< """Set MarconatoMachine Xq."""
< set_Xq(value::MarconatoMachine, val) = value.Xq = val
< """Set MarconatoMachine Xd_p."""
< set_Xd_p(value::MarconatoMachine, val) = value.Xd_p = val
< """Set MarconatoMachine Xq_p."""
< set_Xq_p(value::MarconatoMachine, val) = value.Xq_p = val
< """Set MarconatoMachine Xd_pp."""
< set_Xd_pp(value::MarconatoMachine, val) = value.Xd_pp = val
< """Set MarconatoMachine Xq_pp."""
< set_Xq_pp(value::MarconatoMachine, val) = value.Xq_pp = val
< """Set MarconatoMachine Td0_p."""
< set_Td0_p(value::MarconatoMachine, val) = value.Td0_p = val
< """Set MarconatoMachine Tq0_p."""
< set_Tq0_p(value::MarconatoMachine, val) = value.Tq0_p = val
< """Set MarconatoMachine Td0_pp."""
< set_Td0_pp(value::MarconatoMachine, val) = value.Td0_pp = val
< """Set MarconatoMachine Tq0_pp."""
< set_Tq0_pp(value::MarconatoMachine, val) = value.Tq0_pp = val
< """Set MarconatoMachine T_AA."""
< set_T_AA(value::MarconatoMachine, val) = value.T_AA = val
< """Set MarconatoMachine MVABase."""
< set_MVABase(value::MarconatoMachine, val) = value.MVABase = val
< """Set MarconatoMachine ext."""
< set_ext(value::MarconatoMachine, val) = value.ext = val
< """Set MarconatoMachine γd."""
< set_γd(value::MarconatoMachine, val) = value.γd = val
< """Set MarconatoMachine γq."""
< set_γq(value::MarconatoMachine, val) = value.γq = val
< """Set MarconatoMachine states."""
< set_states(value::MarconatoMachine, val) = value.states = val
< """Set MarconatoMachine n_states."""
< set_n_states(value::MarconatoMachine, val) = value.n_states = val
< """Set MarconatoMachine internal."""
< set_internal(value::MarconatoMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/MonitoredLine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/MonitoredLine.jl
126,156d125
< 
< 
< InfrastructureSystems.set_name(value::MonitoredLine, val) = value.name = val
< """Set MonitoredLine available."""
< set_available(value::MonitoredLine, val) = value.available = val
< """Set MonitoredLine activepower_flow."""
< set_activepower_flow(value::MonitoredLine, val) = value.activepower_flow = val
< """Set MonitoredLine reactivepower_flow."""
< set_reactivepower_flow(value::MonitoredLine, val) = value.reactivepower_flow = val
< """Set MonitoredLine arc."""
< set_arc(value::MonitoredLine, val) = value.arc = val
< """Set MonitoredLine r."""
< set_r(value::MonitoredLine, val) = value.r = val
< """Set MonitoredLine x."""
< set_x(value::MonitoredLine, val) = value.x = val
< """Set MonitoredLine b."""
< set_b(value::MonitoredLine, val) = value.b = val
< """Set MonitoredLine flowlimits."""
< set_flowlimits(value::MonitoredLine, val) = value.flowlimits = val
< """Set MonitoredLine rate."""
< set_rate(value::MonitoredLine, val) = value.rate = val
< """Set MonitoredLine anglelimits."""
< set_anglelimits(value::MonitoredLine, val) = value.anglelimits = val
< """Set MonitoredLine services."""
< set_services(value::MonitoredLine, val) = value.services = val
< """Set MonitoredLine ext."""
< set_ext(value::MonitoredLine, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::MonitoredLine, val) = value.forecasts = val
< """Set MonitoredLine internal."""
< set_internal(value::MonitoredLine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/OneDOneQMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/OneDOneQMachine.jl
110,134d109
< 
< """Set OneDOneQMachine R."""
< set_R(value::OneDOneQMachine, val) = value.R = val
< """Set OneDOneQMachine Xd."""
< set_Xd(value::OneDOneQMachine, val) = value.Xd = val
< """Set OneDOneQMachine Xq."""
< set_Xq(value::OneDOneQMachine, val) = value.Xq = val
< """Set OneDOneQMachine Xd_p."""
< set_Xd_p(value::OneDOneQMachine, val) = value.Xd_p = val
< """Set OneDOneQMachine Xq_p."""
< set_Xq_p(value::OneDOneQMachine, val) = value.Xq_p = val
< """Set OneDOneQMachine Td0_p."""
< set_Td0_p(value::OneDOneQMachine, val) = value.Td0_p = val
< """Set OneDOneQMachine Tq0_p."""
< set_Tq0_p(value::OneDOneQMachine, val) = value.Tq0_p = val
< """Set OneDOneQMachine MVABase."""
< set_MVABase(value::OneDOneQMachine, val) = value.MVABase = val
< """Set OneDOneQMachine ext."""
< set_ext(value::OneDOneQMachine, val) = value.ext = val
< """Set OneDOneQMachine states."""
< set_states(value::OneDOneQMachine, val) = value.states = val
< """Set OneDOneQMachine n_states."""
< set_n_states(value::OneDOneQMachine, val) = value.n_states = val
< """Set OneDOneQMachine internal."""
< set_internal(value::OneDOneQMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/PSSFixed.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/PSSFixed.jl
58,68d57
< 
< """Set PSSFixed V_pss."""
< set_V_pss(value::PSSFixed, val) = value.V_pss = val
< """Set PSSFixed ext."""
< set_ext(value::PSSFixed, val) = value.ext = val
< """Set PSSFixed states."""
< set_states(value::PSSFixed, val) = value.states = val
< """Set PSSFixed n_states."""
< set_n_states(value::PSSFixed, val) = value.n_states = val
< """Set PSSFixed internal."""
< set_internal(value::PSSFixed, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/PSSSimple.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/PSSSimple.jl
65,77d64
< 
< """Set PSSSimple K_ω."""
< set_K_ω(value::PSSSimple, val) = value.K_ω = val
< """Set PSSSimple K_p."""
< set_K_p(value::PSSSimple, val) = value.K_p = val
< """Set PSSSimple ext."""
< set_ext(value::PSSSimple, val) = value.ext = val
< """Set PSSSimple states."""
< set_states(value::PSSSimple, val) = value.states = val
< """Set PSSSimple n_states."""
< set_n_states(value::PSSSimple, val) = value.n_states = val
< """Set PSSSimple internal."""
< set_internal(value::PSSSimple, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/PhaseShiftingTransformer.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/PhaseShiftingTransformer.jl
123,153d122
< 
< 
< InfrastructureSystems.set_name(value::PhaseShiftingTransformer, val) = value.name = val
< """Set PhaseShiftingTransformer available."""
< set_available(value::PhaseShiftingTransformer, val) = value.available = val
< """Set PhaseShiftingTransformer activepower_flow."""
< set_activepower_flow(value::PhaseShiftingTransformer, val) = value.activepower_flow = val
< """Set PhaseShiftingTransformer reactivepower_flow."""
< set_reactivepower_flow(value::PhaseShiftingTransformer, val) = value.reactivepower_flow = val
< """Set PhaseShiftingTransformer arc."""
< set_arc(value::PhaseShiftingTransformer, val) = value.arc = val
< """Set PhaseShiftingTransformer r."""
< set_r(value::PhaseShiftingTransformer, val) = value.r = val
< """Set PhaseShiftingTransformer x."""
< set_x(value::PhaseShiftingTransformer, val) = value.x = val
< """Set PhaseShiftingTransformer primaryshunt."""
< set_primaryshunt(value::PhaseShiftingTransformer, val) = value.primaryshunt = val
< """Set PhaseShiftingTransformer tap."""
< set_tap(value::PhaseShiftingTransformer, val) = value.tap = val
< """Set PhaseShiftingTransformer α."""
< set_α(value::PhaseShiftingTransformer, val) = value.α = val
< """Set PhaseShiftingTransformer rate."""
< set_rate(value::PhaseShiftingTransformer, val) = value.rate = val
< """Set PhaseShiftingTransformer services."""
< set_services(value::PhaseShiftingTransformer, val) = value.services = val
< """Set PhaseShiftingTransformer ext."""
< set_ext(value::PhaseShiftingTransformer, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::PhaseShiftingTransformer, val) = value.forecasts = val
< """Set PhaseShiftingTransformer internal."""
< set_internal(value::PhaseShiftingTransformer, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/PowerLoad.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/PowerLoad.jl
103,127d102
< 
< 
< InfrastructureSystems.set_name(value::PowerLoad, val) = value.name = val
< """Set PowerLoad available."""
< set_available(value::PowerLoad, val) = value.available = val
< """Set PowerLoad bus."""
< set_bus(value::PowerLoad, val) = value.bus = val
< """Set PowerLoad model."""
< set_model(value::PowerLoad, val) = value.model = val
< """Set PowerLoad activepower."""
< set_activepower(value::PowerLoad, val) = value.activepower = val
< """Set PowerLoad reactivepower."""
< set_reactivepower(value::PowerLoad, val) = value.reactivepower = val
< """Set PowerLoad maxactivepower."""
< set_maxactivepower(value::PowerLoad, val) = value.maxactivepower = val
< """Set PowerLoad maxreactivepower."""
< set_maxreactivepower(value::PowerLoad, val) = value.maxreactivepower = val
< """Set PowerLoad services."""
< set_services(value::PowerLoad, val) = value.services = val
< """Set PowerLoad ext."""
< set_ext(value::PowerLoad, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::PowerLoad, val) = value.forecasts = val
< """Set PowerLoad internal."""
< set_internal(value::PowerLoad, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/ReactivePowerDroop.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/ReactivePowerDroop.jl
59,69d58
< 
< """Set ReactivePowerDroop kq."""
< set_kq(value::ReactivePowerDroop, val) = value.kq = val
< """Set ReactivePowerDroop ωf."""
< set_ωf(value::ReactivePowerDroop, val) = value.ωf = val
< """Set ReactivePowerDroop ext."""
< set_ext(value::ReactivePowerDroop, val) = value.ext = val
< """Set ReactivePowerDroop states."""
< set_states(value::ReactivePowerDroop, val) = value.states = val
< """Set ReactivePowerDroop n_states."""
< set_n_states(value::ReactivePowerDroop, val) = value.n_states = val
diff --strip-trailing-cr tmp-test-generated-structs/RenewableDispatch.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/RenewableDispatch.jl
118,146d117
< 
< 
< InfrastructureSystems.set_name(value::RenewableDispatch, val) = value.name = val
< """Set RenewableDispatch available."""
< set_available(value::RenewableDispatch, val) = value.available = val
< """Set RenewableDispatch bus."""
< set_bus(value::RenewableDispatch, val) = value.bus = val
< """Set RenewableDispatch activepower."""
< set_activepower(value::RenewableDispatch, val) = value.activepower = val
< """Set RenewableDispatch reactivepower."""
< set_reactivepower(value::RenewableDispatch, val) = value.reactivepower = val
< """Set RenewableDispatch rating."""
< set_rating(value::RenewableDispatch, val) = value.rating = val
< """Set RenewableDispatch primemover."""
< set_primemover(value::RenewableDispatch, val) = value.primemover = val
< """Set RenewableDispatch reactivepowerlimits."""
< set_reactivepowerlimits(value::RenewableDispatch, val) = value.reactivepowerlimits = val
< """Set RenewableDispatch powerfactor."""
< set_powerfactor(value::RenewableDispatch, val) = value.powerfactor = val
< """Set RenewableDispatch op_cost."""
< set_op_cost(value::RenewableDispatch, val) = value.op_cost = val
< """Set RenewableDispatch services."""
< set_services(value::RenewableDispatch, val) = value.services = val
< """Set RenewableDispatch ext."""
< set_ext(value::RenewableDispatch, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::RenewableDispatch, val) = value.forecasts = val
< """Set RenewableDispatch internal."""
< set_internal(value::RenewableDispatch, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/RenewableFix.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/RenewableFix.jl
105,129d104
< 
< 
< InfrastructureSystems.set_name(value::RenewableFix, val) = value.name = val
< """Set RenewableFix available."""
< set_available(value::RenewableFix, val) = value.available = val
< """Set RenewableFix bus."""
< set_bus(value::RenewableFix, val) = value.bus = val
< """Set RenewableFix activepower."""
< set_activepower(value::RenewableFix, val) = value.activepower = val
< """Set RenewableFix reactivepower."""
< set_reactivepower(value::RenewableFix, val) = value.reactivepower = val
< """Set RenewableFix rating."""
< set_rating(value::RenewableFix, val) = value.rating = val
< """Set RenewableFix primemover."""
< set_primemover(value::RenewableFix, val) = value.primemover = val
< """Set RenewableFix powerfactor."""
< set_powerfactor(value::RenewableFix, val) = value.powerfactor = val
< """Set RenewableFix services."""
< set_services(value::RenewableFix, val) = value.services = val
< """Set RenewableFix ext."""
< set_ext(value::RenewableFix, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::RenewableFix, val) = value.forecasts = val
< """Set RenewableFix internal."""
< set_internal(value::RenewableFix, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/ReserveDemandCurve.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/ReserveDemandCurve.jl
67,79d66
< 
< 
< InfrastructureSystems.set_name(value::ReserveDemandCurve, val) = value.name = val
< """Set ReserveDemandCurve available."""
< set_available(value::ReserveDemandCurve, val) = value.available = val
< """Set ReserveDemandCurve timeframe."""
< set_timeframe(value::ReserveDemandCurve, val) = value.timeframe = val
< """Set ReserveDemandCurve op_cost."""
< set_op_cost(value::ReserveDemandCurve, val) = value.op_cost = val
< """Set ReserveDemandCurve ext."""
< set_ext(value::ReserveDemandCurve, val) = value.ext = val
< """Set ReserveDemandCurve internal."""
< set_internal(value::ReserveDemandCurve, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/SimpleAFMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/SimpleAFMachine.jl
139,171d138
< 
< """Set SimpleAFMachine R."""
< set_R(value::SimpleAFMachine, val) = value.R = val
< """Set SimpleAFMachine Xd."""
< set_Xd(value::SimpleAFMachine, val) = value.Xd = val
< """Set SimpleAFMachine Xq."""
< set_Xq(value::SimpleAFMachine, val) = value.Xq = val
< """Set SimpleAFMachine Xd_p."""
< set_Xd_p(value::SimpleAFMachine, val) = value.Xd_p = val
< """Set SimpleAFMachine Xq_p."""
< set_Xq_p(value::SimpleAFMachine, val) = value.Xq_p = val
< """Set SimpleAFMachine Xd_pp."""
< set_Xd_pp(value::SimpleAFMachine, val) = value.Xd_pp = val
< """Set SimpleAFMachine Xq_pp."""
< set_Xq_pp(value::SimpleAFMachine, val) = value.Xq_pp = val
< """Set SimpleAFMachine Td0_p."""
< set_Td0_p(value::SimpleAFMachine, val) = value.Td0_p = val
< """Set SimpleAFMachine Tq0_p."""
< set_Tq0_p(value::SimpleAFMachine, val) = value.Tq0_p = val
< """Set SimpleAFMachine Td0_pp."""
< set_Td0_pp(value::SimpleAFMachine, val) = value.Td0_pp = val
< """Set SimpleAFMachine Tq0_pp."""
< set_Tq0_pp(value::SimpleAFMachine, val) = value.Tq0_pp = val
< """Set SimpleAFMachine MVABase."""
< set_MVABase(value::SimpleAFMachine, val) = value.MVABase = val
< """Set SimpleAFMachine ext."""
< set_ext(value::SimpleAFMachine, val) = value.ext = val
< """Set SimpleAFMachine states."""
< set_states(value::SimpleAFMachine, val) = value.states = val
< """Set SimpleAFMachine n_states."""
< set_n_states(value::SimpleAFMachine, val) = value.n_states = val
< """Set SimpleAFMachine internal."""
< set_internal(value::SimpleAFMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/SimpleFullMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/SimpleFullMachine.jl
159,197d158
< 
< """Set SimpleFullMachine R."""
< set_R(value::SimpleFullMachine, val) = value.R = val
< """Set SimpleFullMachine R_f."""
< set_R_f(value::SimpleFullMachine, val) = value.R_f = val
< """Set SimpleFullMachine R_1d."""
< set_R_1d(value::SimpleFullMachine, val) = value.R_1d = val
< """Set SimpleFullMachine R_1q."""
< set_R_1q(value::SimpleFullMachine, val) = value.R_1q = val
< """Set SimpleFullMachine L_d."""
< set_L_d(value::SimpleFullMachine, val) = value.L_d = val
< """Set SimpleFullMachine L_q."""
< set_L_q(value::SimpleFullMachine, val) = value.L_q = val
< """Set SimpleFullMachine L_ad."""
< set_L_ad(value::SimpleFullMachine, val) = value.L_ad = val
< """Set SimpleFullMachine L_aq."""
< set_L_aq(value::SimpleFullMachine, val) = value.L_aq = val
< """Set SimpleFullMachine L_f1d."""
< set_L_f1d(value::SimpleFullMachine, val) = value.L_f1d = val
< """Set SimpleFullMachine L_ff."""
< set_L_ff(value::SimpleFullMachine, val) = value.L_ff = val
< """Set SimpleFullMachine L_1d."""
< set_L_1d(value::SimpleFullMachine, val) = value.L_1d = val
< """Set SimpleFullMachine L_1q."""
< set_L_1q(value::SimpleFullMachine, val) = value.L_1q = val
< """Set SimpleFullMachine MVABase."""
< set_MVABase(value::SimpleFullMachine, val) = value.MVABase = val
< """Set SimpleFullMachine ext."""
< set_ext(value::SimpleFullMachine, val) = value.ext = val
< """Set SimpleFullMachine inv_d_fluxlink."""
< set_inv_d_fluxlink(value::SimpleFullMachine, val) = value.inv_d_fluxlink = val
< """Set SimpleFullMachine inv_q_fluxlink."""
< set_inv_q_fluxlink(value::SimpleFullMachine, val) = value.inv_q_fluxlink = val
< """Set SimpleFullMachine states."""
< set_states(value::SimpleFullMachine, val) = value.states = val
< """Set SimpleFullMachine n_states."""
< set_n_states(value::SimpleFullMachine, val) = value.n_states = val
< """Set SimpleFullMachine internal."""
< set_internal(value::SimpleFullMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/SimpleMarconatoMachine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/SimpleMarconatoMachine.jl
155,193d154
< 
< """Set SimpleMarconatoMachine R."""
< set_R(value::SimpleMarconatoMachine, val) = value.R = val
< """Set SimpleMarconatoMachine Xd."""
< set_Xd(value::SimpleMarconatoMachine, val) = value.Xd = val
< """Set SimpleMarconatoMachine Xq."""
< set_Xq(value::SimpleMarconatoMachine, val) = value.Xq = val
< """Set SimpleMarconatoMachine Xd_p."""
< set_Xd_p(value::SimpleMarconatoMachine, val) = value.Xd_p = val
< """Set SimpleMarconatoMachine Xq_p."""
< set_Xq_p(value::SimpleMarconatoMachine, val) = value.Xq_p = val
< """Set SimpleMarconatoMachine Xd_pp."""
< set_Xd_pp(value::SimpleMarconatoMachine, val) = value.Xd_pp = val
< """Set SimpleMarconatoMachine Xq_pp."""
< set_Xq_pp(value::SimpleMarconatoMachine, val) = value.Xq_pp = val
< """Set SimpleMarconatoMachine Td0_p."""
< set_Td0_p(value::SimpleMarconatoMachine, val) = value.Td0_p = val
< """Set SimpleMarconatoMachine Tq0_p."""
< set_Tq0_p(value::SimpleMarconatoMachine, val) = value.Tq0_p = val
< """Set SimpleMarconatoMachine Td0_pp."""
< set_Td0_pp(value::SimpleMarconatoMachine, val) = value.Td0_pp = val
< """Set SimpleMarconatoMachine Tq0_pp."""
< set_Tq0_pp(value::SimpleMarconatoMachine, val) = value.Tq0_pp = val
< """Set SimpleMarconatoMachine T_AA."""
< set_T_AA(value::SimpleMarconatoMachine, val) = value.T_AA = val
< """Set SimpleMarconatoMachine MVABase."""
< set_MVABase(value::SimpleMarconatoMachine, val) = value.MVABase = val
< """Set SimpleMarconatoMachine ext."""
< set_ext(value::SimpleMarconatoMachine, val) = value.ext = val
< """Set SimpleMarconatoMachine γd."""
< set_γd(value::SimpleMarconatoMachine, val) = value.γd = val
< """Set SimpleMarconatoMachine γq."""
< set_γq(value::SimpleMarconatoMachine, val) = value.γq = val
< """Set SimpleMarconatoMachine states."""
< set_states(value::SimpleMarconatoMachine, val) = value.states = val
< """Set SimpleMarconatoMachine n_states."""
< set_n_states(value::SimpleMarconatoMachine, val) = value.n_states = val
< """Set SimpleMarconatoMachine internal."""
< set_internal(value::SimpleMarconatoMachine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/SingleMass.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/SingleMass.jl
65,77d64
< 
< """Set SingleMass H."""
< set_H(value::SingleMass, val) = value.H = val
< """Set SingleMass D."""
< set_D(value::SingleMass, val) = value.D = val
< """Set SingleMass ext."""
< set_ext(value::SingleMass, val) = value.ext = val
< """Set SingleMass states."""
< set_states(value::SingleMass, val) = value.states = val
< """Set SingleMass n_states."""
< set_n_states(value::SingleMass, val) = value.n_states = val
< """Set SingleMass internal."""
< set_internal(value::SingleMass, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/Source.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Source.jl
85,103d84
< 
< 
< InfrastructureSystems.set_name(value::Source, val) = value.name = val
< """Set Source available."""
< set_available(value::Source, val) = value.available = val
< """Set Source bus."""
< set_bus(value::Source, val) = value.bus = val
< """Set Source activepower."""
< set_activepower(value::Source, val) = value.activepower = val
< """Set Source reactivepower."""
< set_reactivepower(value::Source, val) = value.reactivepower = val
< """Set Source X_th."""
< set_X_th(value::Source, val) = value.X_th = val
< """Set Source services."""
< set_services(value::Source, val) = value.services = val
< """Set Source ext."""
< set_ext(value::Source, val) = value.ext = val
< """Set Source internal."""
< set_internal(value::Source, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/StaticReserve.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/StaticReserve.jl
67,79d66
< 
< 
< InfrastructureSystems.set_name(value::StaticReserve, val) = value.name = val
< """Set StaticReserve available."""
< set_available(value::StaticReserve, val) = value.available = val
< """Set StaticReserve timeframe."""
< set_timeframe(value::StaticReserve, val) = value.timeframe = val
< """Set StaticReserve requirement."""
< set_requirement(value::StaticReserve, val) = value.requirement = val
< """Set StaticReserve ext."""
< set_ext(value::StaticReserve, val) = value.ext = val
< """Set StaticReserve internal."""
< set_internal(value::StaticReserve, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/TGFixed.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/TGFixed.jl
59,69d58
< 
< """Set TGFixed efficiency."""
< set_efficiency(value::TGFixed, val) = value.efficiency = val
< """Set TGFixed ext."""
< set_ext(value::TGFixed, val) = value.ext = val
< """Set TGFixed states."""
< set_states(value::TGFixed, val) = value.states = val
< """Set TGFixed n_states."""
< set_n_states(value::TGFixed, val) = value.n_states = val
< """Set TGFixed internal."""
< set_internal(value::TGFixed, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/TGTypeI.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/TGTypeI.jl
107,131d106
< 
< """Set TGTypeI R."""
< set_R(value::TGTypeI, val) = value.R = val
< """Set TGTypeI Ts."""
< set_Ts(value::TGTypeI, val) = value.Ts = val
< """Set TGTypeI Tc."""
< set_Tc(value::TGTypeI, val) = value.Tc = val
< """Set TGTypeI T3."""
< set_T3(value::TGTypeI, val) = value.T3 = val
< """Set TGTypeI T4."""
< set_T4(value::TGTypeI, val) = value.T4 = val
< """Set TGTypeI T5."""
< set_T5(value::TGTypeI, val) = value.T5 = val
< """Set TGTypeI P_min."""
< set_P_min(value::TGTypeI, val) = value.P_min = val
< """Set TGTypeI P_max."""
< set_P_max(value::TGTypeI, val) = value.P_max = val
< """Set TGTypeI ext."""
< set_ext(value::TGTypeI, val) = value.ext = val
< """Set TGTypeI states."""
< set_states(value::TGTypeI, val) = value.states = val
< """Set TGTypeI n_states."""
< set_n_states(value::TGTypeI, val) = value.n_states = val
< """Set TGTypeI internal."""
< set_internal(value::TGTypeI, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/TGTypeII.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/TGTypeII.jl
86,104d85
< 
< """Set TGTypeII R."""
< set_R(value::TGTypeII, val) = value.R = val
< """Set TGTypeII T1."""
< set_T1(value::TGTypeII, val) = value.T1 = val
< """Set TGTypeII T2."""
< set_T2(value::TGTypeII, val) = value.T2 = val
< """Set TGTypeII τ_min."""
< set_τ_min(value::TGTypeII, val) = value.τ_min = val
< """Set TGTypeII τ_max."""
< set_τ_max(value::TGTypeII, val) = value.τ_max = val
< """Set TGTypeII ext."""
< set_ext(value::TGTypeII, val) = value.ext = val
< """Set TGTypeII states."""
< set_states(value::TGTypeII, val) = value.states = val
< """Set TGTypeII n_states."""
< set_n_states(value::TGTypeII, val) = value.n_states = val
< """Set TGTypeII internal."""
< set_internal(value::TGTypeII, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/TapTransformer.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/TapTransformer.jl
118,146d117
< 
< 
< InfrastructureSystems.set_name(value::TapTransformer, val) = value.name = val
< """Set TapTransformer available."""
< set_available(value::TapTransformer, val) = value.available = val
< """Set TapTransformer activepower_flow."""
< set_activepower_flow(value::TapTransformer, val) = value.activepower_flow = val
< """Set TapTransformer reactivepower_flow."""
< set_reactivepower_flow(value::TapTransformer, val) = value.reactivepower_flow = val
< """Set TapTransformer arc."""
< set_arc(value::TapTransformer, val) = value.arc = val
< """Set TapTransformer r."""
< set_r(value::TapTransformer, val) = value.r = val
< """Set TapTransformer x."""
< set_x(value::TapTransformer, val) = value.x = val
< """Set TapTransformer primaryshunt."""
< set_primaryshunt(value::TapTransformer, val) = value.primaryshunt = val
< """Set TapTransformer tap."""
< set_tap(value::TapTransformer, val) = value.tap = val
< """Set TapTransformer rate."""
< set_rate(value::TapTransformer, val) = value.rate = val
< """Set TapTransformer services."""
< set_services(value::TapTransformer, val) = value.services = val
< """Set TapTransformer ext."""
< set_ext(value::TapTransformer, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::TapTransformer, val) = value.forecasts = val
< """Set TapTransformer internal."""
< set_internal(value::TapTransformer, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/ThermalStandard.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/ThermalStandard.jl
156,196d155
< 
< 
< InfrastructureSystems.set_name(value::ThermalStandard, val) = value.name = val
< """Set ThermalStandard available."""
< set_available(value::ThermalStandard, val) = value.available = val
< """Set ThermalStandard status."""
< set_status(value::ThermalStandard, val) = value.status = val
< """Set ThermalStandard bus."""
< set_bus(value::ThermalStandard, val) = value.bus = val
< """Set ThermalStandard activepower."""
< set_activepower(value::ThermalStandard, val) = value.activepower = val
< """Set ThermalStandard reactivepower."""
< set_reactivepower(value::ThermalStandard, val) = value.reactivepower = val
< """Set ThermalStandard rating."""
< set_rating(value::ThermalStandard, val) = value.rating = val
< """Set ThermalStandard primemover."""
< set_primemover(value::ThermalStandard, val) = value.primemover = val
< """Set ThermalStandard fuel."""
< set_fuel(value::ThermalStandard, val) = value.fuel = val
< """Set ThermalStandard activepowerlimits."""
< set_activepowerlimits(value::ThermalStandard, val) = value.activepowerlimits = val
< """Set ThermalStandard reactivepowerlimits."""
< set_reactivepowerlimits(value::ThermalStandard, val) = value.reactivepowerlimits = val
< """Set ThermalStandard ramplimits."""
< set_ramplimits(value::ThermalStandard, val) = value.ramplimits = val
< """Set ThermalStandard timelimits."""
< set_timelimits(value::ThermalStandard, val) = value.timelimits = val
< """Set ThermalStandard op_cost."""
< set_op_cost(value::ThermalStandard, val) = value.op_cost = val
< """Set ThermalStandard services."""
< set_services(value::ThermalStandard, val) = value.services = val
< """Set ThermalStandard participation_factor."""
< set_participation_factor(value::ThermalStandard, val) = value.participation_factor = val
< """Set ThermalStandard time_at_status."""
< set_time_at_status(value::ThermalStandard, val) = value.time_at_status = val
< """Set ThermalStandard ext."""
< set_ext(value::ThermalStandard, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::ThermalStandard, val) = value.forecasts = val
< """Set ThermalStandard internal."""
< set_internal(value::ThermalStandard, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/ThreePartCost.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/ThreePartCost.jl
70,82d69
< 
< """Set ThreePartCost variable."""
< set_variable(value::ThreePartCost, val) = value.variable = val
< """Set ThreePartCost fixed."""
< set_fixed(value::ThreePartCost, val) = value.fixed = val
< """Set ThreePartCost startup."""
< set_startup(value::ThreePartCost, val) = value.startup = val
< """Set ThreePartCost shutdn."""
< set_shutdn(value::ThreePartCost, val) = value.shutdn = val
< 
< InfrastructureSystems.set_forecasts(value::ThreePartCost, val) = value.forecasts = val
< """Set ThreePartCost internal."""
< set_internal(value::ThreePartCost, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/Transfer.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Transfer.jl
66,78d65
< 
< 
< InfrastructureSystems.set_name(value::Transfer, val) = value.name = val
< """Set Transfer available."""
< set_available(value::Transfer, val) = value.available = val
< """Set Transfer requirement."""
< set_requirement(value::Transfer, val) = value.requirement = val
< """Set Transfer ext."""
< set_ext(value::Transfer, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::Transfer, val) = value.forecasts = val
< """Set Transfer internal."""
< set_internal(value::Transfer, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/Transformer2W.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/Transformer2W.jl
112,138d111
< 
< 
< InfrastructureSystems.set_name(value::Transformer2W, val) = value.name = val
< """Set Transformer2W available."""
< set_available(value::Transformer2W, val) = value.available = val
< """Set Transformer2W activepower_flow."""
< set_activepower_flow(value::Transformer2W, val) = value.activepower_flow = val
< """Set Transformer2W reactivepower_flow."""
< set_reactivepower_flow(value::Transformer2W, val) = value.reactivepower_flow = val
< """Set Transformer2W arc."""
< set_arc(value::Transformer2W, val) = value.arc = val
< """Set Transformer2W r."""
< set_r(value::Transformer2W, val) = value.r = val
< """Set Transformer2W x."""
< set_x(value::Transformer2W, val) = value.x = val
< """Set Transformer2W primaryshunt."""
< set_primaryshunt(value::Transformer2W, val) = value.primaryshunt = val
< """Set Transformer2W rate."""
< set_rate(value::Transformer2W, val) = value.rate = val
< """Set Transformer2W services."""
< set_services(value::Transformer2W, val) = value.services = val
< """Set Transformer2W ext."""
< set_ext(value::Transformer2W, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::Transformer2W, val) = value.forecasts = val
< """Set Transformer2W internal."""
< set_internal(value::Transformer2W, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/TwoPartCost.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/TwoPartCost.jl
56,64d55
< 
< """Set TwoPartCost variable."""
< set_variable(value::TwoPartCost, val) = value.variable = val
< """Set TwoPartCost fixed."""
< set_fixed(value::TwoPartCost, val) = value.fixed = val
< 
< InfrastructureSystems.set_forecasts(value::TwoPartCost, val) = value.forecasts = val
< """Set TwoPartCost internal."""
< set_internal(value::TwoPartCost, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/VSCDCLine.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/VSCDCLine.jl
115,143d114
< 
< 
< InfrastructureSystems.set_name(value::VSCDCLine, val) = value.name = val
< """Set VSCDCLine available."""
< set_available(value::VSCDCLine, val) = value.available = val
< """Set VSCDCLine activepower_flow."""
< set_activepower_flow(value::VSCDCLine, val) = value.activepower_flow = val
< """Set VSCDCLine arc."""
< set_arc(value::VSCDCLine, val) = value.arc = val
< """Set VSCDCLine rectifier_taplimits."""
< set_rectifier_taplimits(value::VSCDCLine, val) = value.rectifier_taplimits = val
< """Set VSCDCLine rectifier_xrc."""
< set_rectifier_xrc(value::VSCDCLine, val) = value.rectifier_xrc = val
< """Set VSCDCLine rectifier_firing_angle."""
< set_rectifier_firing_angle(value::VSCDCLine, val) = value.rectifier_firing_angle = val
< """Set VSCDCLine inverter_taplimits."""
< set_inverter_taplimits(value::VSCDCLine, val) = value.inverter_taplimits = val
< """Set VSCDCLine inverter_xrc."""
< set_inverter_xrc(value::VSCDCLine, val) = value.inverter_xrc = val
< """Set VSCDCLine inverter_firing_angle."""
< set_inverter_firing_angle(value::VSCDCLine, val) = value.inverter_firing_angle = val
< """Set VSCDCLine services."""
< set_services(value::VSCDCLine, val) = value.services = val
< """Set VSCDCLine ext."""
< set_ext(value::VSCDCLine, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::VSCDCLine, val) = value.forecasts = val
< """Set VSCDCLine internal."""
< set_internal(value::VSCDCLine, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/VariableReserve.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/VariableReserve.jl
74,88d73
< 
< 
< InfrastructureSystems.set_name(value::VariableReserve, val) = value.name = val
< """Set VariableReserve available."""
< set_available(value::VariableReserve, val) = value.available = val
< """Set VariableReserve timeframe."""
< set_timeframe(value::VariableReserve, val) = value.timeframe = val
< """Set VariableReserve requirement."""
< set_requirement(value::VariableReserve, val) = value.requirement = val
< """Set VariableReserve ext."""
< set_ext(value::VariableReserve, val) = value.ext = val
< 
< InfrastructureSystems.set_forecasts(value::VariableReserve, val) = value.forecasts = val
< """Set VariableReserve internal."""
< set_internal(value::VariableReserve, val) = value.internal = val
diff --strip-trailing-cr tmp-test-generated-structs/VirtualInertia.jl /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated/VirtualInertia.jl
73,87d72
< 
< """Set VirtualInertia Ta."""
< set_Ta(value::VirtualInertia, val) = value.Ta = val
< """Set VirtualInertia kd."""
< set_kd(value::VirtualInertia, val) = value.kd = val
< """Set VirtualInertia kω."""
< set_kω(value::VirtualInertia, val) = value.kω = val
< """Set VirtualInertia ωb."""
< set_ωb(value::VirtualInertia, val) = value.ωb = val
< """Set VirtualInertia ext."""
< set_ext(value::VirtualInertia, val) = value.ext = val
< """Set VirtualInertia states."""
< set_states(value::VirtualInertia, val) = value.states = val
< """Set VirtualInertia n_states."""
< set_n_states(value::VirtualInertia, val) = value.n_states = val
┌ Error: Generated structs do not match the descriptor file.
│   err =
│    failed process: Process(`diff --strip-trailing-cr tmp-test-generated-structs /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/../src/models/generated`, ProcessExited(1)) [1]
│    
└ @ InfrastructureSystems ~/.julia/packages/InfrastructureSystems/yly1C/src/utils/generate_structs.jl:237
Test generated structs: Test Failed at /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/test_generate_structs.jl:5
  Expression: IS.test_generated_structs(descriptor_file, existing_dir)
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/test_generate_structs.jl:5
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/test_generate_structs.jl:2

test_internal: 
test_network_matrices: 
test_parse_matpower: 
test_parse_psse: 
test_parse_tamu: 
test_power_system_table_data: 
test_powerflow: 
test_powersystemconstructors: 
test_printing: 
test_readforecastdata: 
test_readnetworkdata: 
test_serialization: 
test_services: 
test_system: 
test_topology: 
test_validation: 
Test Summary:                                                   |  Pass  Fail  Total
Begin PowerSystems tests                                        | 12682     1  12683
  Test base checks                                              |     1            1
  Time resolution                                               |     4            4
  Angle limits                                                  |     7            7
  Check bus index                                               |     3            3
  Test unique bus numbers                                       |     1            1
  Bus Constructors                                              |     2            2
  Generation Constructors                                       |     8            8
  Source Constructors                                           |     1            1
  Storage Constructors                                          |     1            1
  Load Constructors                                             |     5            5
  Branch Constructors                                           |     7            7
  Service Constructors                                          |     2            2
  Forecast Constructors                                         |     6            6
  TestData                                                      |     1            1
  Dynamic Machines                                              |     6            6
  Dynamic Shaft                                                 |     2            2
  Dynamic PSS                                                   |     1            1
  Dynamic Turbine Governor Constructors                         |     3            3
  Dynamic AVR Constructors                                      |     4            4
  Dynamic Generators                                            |     5            5
  Inverter Components                                           |     8            8
  Dynamic Inverter                                              |     2            2
  Test generated structs                                        |           1      1
  Test internal values                                          |     1            1
  PTDF matrices                                                 |  8793         8793
  LODF matrices                                                 |    40           40
  Ybus Matrix                                                   |    73           73
  Parse Matpower data files                                     |   266          266
  Parse PowerModel Matpower data files                          |   194          194
  PSSE Parsing                                                  |     1            1
  PSSE PowerModel Parsing                                       |              No tests
  TAMU Parsing                                                  |     1            1
  PowerSystemTableData parsing                                  |   378          378
  PowerSystemTableData parsing invalid directory                |     1            1
  consistency between PowerSystemTableData and standardfiles    |   799          799
  Test reserve direction                                        |     6            6
  test set                                                      |     3            3
  Test System constructors from .jl files                       |              No tests
  Test System constructor from Matpower                         |              No tests
  Test accessor functions of PowerSystems auto-generated types  |   575          575
  Test component conversion                                     |     4            4
  Test read_time_series_metadata                                |   566          566
  Test forecast normalization                                   |     3            3
  Test single forecast addition                                 |     3            3
  Forecast data matpower                                        |     4            4
  read_data                                                     |              No tests
  Test JSON serialization of CDM data                           |     2            2
  Test JSON serialization of matpower data                      |     1            1
  Test JSON serialization of ACTIVSg2000 data                   |              No tests
  Test JSON serialization of dynamic inverter                   |     1            1
  Test add/remove services                                      |    10           10
  Test add_component Service                                    |     2            2
  Test add_service errors                                       |     2            2
  Test remove service from device                               |     2            2
  Test has service                                              |     4            4
  Test remove device with service                               |     2            2
  Test clear_services                                           |     2            2
  Test add device with service                                  |     2            2
  Test get_contributing_devices                                 |    11           11
  Test get_component combinations                               |    10           10
  Test struct type collections                                  |     1            1
  Test functionality of System                                  |    29           29
  Test handling of bus_numbers                                  |     7            7
  Test System iterators                                         |     2            2
  Test remove_component                                         |     7            7
  Test missing Arc bus                                          |     1            1
  Test frequency set                                            |     1            1
  Test exported names                                           |     1            1
  Test system ext                                               |     2            2
  Test system checks                                            |     1            1
  Test topology mappings                                        |    50           50
  Test PM areas and load zones                                  |    50           50
  Test get_components_in_aggregation_topology                   |    26           26
  Test reading in config data                                   |     4            4
  Test adding custom validation YAML file to System             |     2            2
  Test extracting struct info from validation_descriptor vector |     4            4
  Test extracting field info from struct descriptor dictionary  |     3            3
  Test retrieving validation action                             |     3            3
  Test field validation                                         |     5            5
  Test field validation                                         |     2            2
  Test field validation after deserialization                   |     2            2
ERROR: LoadError: Some tests did not pass: 12682 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/PowerSystems/LmBm3/test/runtests.jl:115
ERROR: Package PowerSystems errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1557
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
