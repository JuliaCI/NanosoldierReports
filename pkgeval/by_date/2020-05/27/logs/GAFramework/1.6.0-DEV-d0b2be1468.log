Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_TSrsgT/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_TSrsgT/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720434925809573
curgen: 20 fitness: 0.21721923180772193
curgen: 30 fitness: 0.21721923180772193
curgen: 40 fitness: 0.21722643524693527
curgen: 50 fitness: 0.21722643524693527
CoordinateCreature{Array{Float64,1}}([0.22214559868834036], -0.21722643524693527) 0.22214559868834036 -0.21722643524693527
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2572183748569548
curgen: 100 fitness: 3.258153301727432
curgen: 150 fitness: 3.2583282661753548
curgen: 200 fitness: 3.2583313296903524
curgen: 250 fitness: 3.2583908625700406
curgen: 300 fitness: 3.258439527274491
curgen: 350 fitness: 3.2584545852580167
curgen: 400 fitness: 3.258477568970714
curgen: 450 fitness: 3.258477568970714
curgen: 500 fitness: 3.2584835124293114
CoordinateCreature{Array{Float64,1}}([-0.22252328290526, -0.22265903332192483, -0.2223431704660418, -0.2223426590502113, 0.22252640561593606, 0.22259592209763365, -0.22204662075541762, 0.22255244468554783, 0.22259710690128423, -0.22250018183912992, 0.2225478217630758, -0.22267982996664198, -0.22262047250436698, -0.2222686541243648, -0.22242812575786727], -3.2584835124293114) [-0.22252328290526, -0.22265903332192483, -0.2223431704660418, -0.2223426590502113, 0.22252640561593606, 0.22259592209763365, -0.22204662075541762, 0.22255244468554783, 0.22259710690128423, -0.22250018183912992, 0.2225478217630758, -0.22267982996664198, -0.22262047250436698, -0.2222686541243648, -0.22242812575786727] -3.2584835124293114
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0012671625163420686
curgen: 100 fitness: -0.0010003794208159889
curgen: 150 fitness: -0.0008752755520617939
curgen: 200 fitness: -0.0008752755520617939
curgen: 250 fitness: -0.0008752755520617939
curgen: 300 fitness: -0.0007492620942457506
curgen: 350 fitness: -0.0007464226750357739
curgen: 400 fitness: -0.0007464226750357739
curgen: 450 fitness: -0.0007406874013895504
curgen: 500 fitness: -0.0007406874013895504
CoordinateCreature{Array{Float64,1}}([0.00014260601040244037, -0.0007230507542760643, 0.00024289402506657296, -5.598511312405324e-5, 0.0015671079301504205, -0.00018216198503186035, 0.00028988387780409797, -0.0003159150581865974, 0.000146805301737875, 1.0155958839952356e-5, -0.0005211622776859917, 3.640682463922681e-5, -3.801346594975799e-5, -8.210010683153586e-5, 0.0003906167332977], 0.0007406874013895504) [0.00014260601040244037, -0.0007230507542760643, 0.00024289402506657296, -5.598511312405324e-5, 0.0015671079301504205, -0.00018216198503186035, 0.00028988387780409797, -0.0003159150581865974, 0.000146805301737875, 1.0155958839952356e-5, -0.0005211622776859917, 3.640682463922681e-5, -3.801346594975799e-5, -8.210010683153586e-5, 0.0003906167332977] 0.0007406874013895504
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
