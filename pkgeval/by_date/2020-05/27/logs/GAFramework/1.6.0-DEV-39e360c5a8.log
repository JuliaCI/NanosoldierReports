Julia Version 1.6.0-DEV.106
Commit 39e360c5a8 (2020-05-26 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_iSjYEH/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_iSjYEH/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723311100228396
curgen: 20 fitness: 0.21723311100228396
curgen: 30 fitness: 0.21723311100228396
curgen: 40 fitness: 0.21723311100228396
curgen: 50 fitness: 0.21723311100228396
CoordinateCreature{Array{Float64,1}}([0.22265627026788593], -0.21723311100228396) 0.22265627026788593 -0.21723311100228396
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577612863079346
curgen: 100 fitness: 3.258165724165004
curgen: 150 fitness: 3.2582797205107132
curgen: 200 fitness: 3.2583114990306146
curgen: 250 fitness: 3.258316879337979
curgen: 300 fitness: 3.2583596222309317
curgen: 350 fitness: 3.2584268519591624
curgen: 400 fitness: 3.258440633771643
curgen: 450 fitness: 3.258440633771643
curgen: 500 fitness: 3.258440633771643
CoordinateCreature{Array{Float64,1}}([-0.2226829909469145, -0.22252934354829781, 0.22259928985539812, -0.22232847960422525, -0.22253928847576515, -0.22262204978620434, -0.22302961057805945, -0.2231890194077956, 0.22310538128987098, 0.22244369859643537, 0.2223090875743676, -0.22204129416356014, 0.22266269766444396, 0.22256294890630626, -0.22227138221760437], -3.258440633771643) [-0.2226829909469145, -0.22252934354829781, 0.22259928985539812, -0.22232847960422525, -0.22253928847576515, -0.22262204978620434, -0.22302961057805945, -0.2231890194077956, 0.22310538128987098, 0.22244369859643537, 0.2223090875743676, -0.22204129416356014, 0.22266269766444396, 0.22256294890630626, -0.22227138221760437] -3.258440633771643
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0008262338083397935
curgen: 100 fitness: -0.0008028135883080267
curgen: 150 fitness: -0.0008028135883080267
curgen: 200 fitness: -0.0007960100198545206
curgen: 250 fitness: -0.0007960100198545206
curgen: 300 fitness: -0.0006861886615183721
curgen: 350 fitness: -0.0006861886615183721
curgen: 400 fitness: -0.0006861886615183721
curgen: 450 fitness: -0.0005369196990727687
curgen: 500 fitness: -0.0005369196990727687
CoordinateCreature{Array{Float64,1}}([0.00046093668488856416, 0.00010439963934793855, -0.0004090268132760296, 0.0001227758930137015, -0.0007211441929894724, -0.0006886162126140147, 1.6400806302159282e-5, 0.00038158676382439257, 2.5729568381329656e-5, 0.00017168284708100673, 0.00016057459378583314, -0.00031560358463900905, 0.0009239095833025665, 7.566300660195187e-5, 0.000381631687231072], 0.0005369196990727687) [0.00046093668488856416, 0.00010439963934793855, -0.0004090268132760296, 0.0001227758930137015, -0.0007211441929894724, -0.0006886162126140147, 1.6400806302159282e-5, 0.00038158676382439257, 2.5729568381329656e-5, 0.00017168284708100673, 0.00016057459378583314, -0.00031560358463900905, 0.0009239095833025665, 7.566300660195187e-5, 0.000381631687231072] 0.0005369196990727687
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
