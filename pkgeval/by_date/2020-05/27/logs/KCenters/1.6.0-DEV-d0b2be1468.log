Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed OrderedCollections ────────── v1.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed JSON ──────────────────────── v0.21.0
  Installed DataStructures ────────────── v0.17.17
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed TableTraits ───────────────── v1.0.0
  Installed Compat ────────────────────── v3.10.0
  Installed Tables ────────────────────── v1.0.4
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataPattern ─────────────── v0.5.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLDataUtils ───────────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_kzg72v/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_kzg72v/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9360659371813138
[ Info: 0.8321307849884033
[ Info: 0.5539093809823196
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.33237196477750935
mean(cdnet.distances) = 0.3459446530789137
mean(crand.distances) = 0.346686072871089
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6064453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.6064453125,"f1":0.7433112026862034,"seconds":4.3120235204696655e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":7.3046875,"distances_sum":1745.9209021880379}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8404512154512163,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.2421875,"distances_sum":2256.6023969197104}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.736328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.736328125,"f1":0.8404512154512163,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.2421875,"distances_sum":2256.6023969197104}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9012482309357318,"seconds":6.310641765594482e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.4375,"distances_sum":2631.5412039057137}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9579670329670333,"seconds":7.251277565956116e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8203125,"distances_sum":3157.9595074508743}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9019662629037637,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.5625,"distances_sum":2619.893902095991}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9274496336996342,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.75,"distances_sum":2821.474187769027}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9579670329670333,"seconds":7.251277565956116e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.8203125,"distances_sum":3157.9595074508743}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743303571428575,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.90625,"distances_sum":3279.8156744471776}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9682692307692312,"seconds":6.2659382820129395e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.921875,"distances_sum":3231.421550889392}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627117673992677,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.9296875,"distances_sum":3155.8587006284206}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743303571428575,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.90625,"distances_sum":3279.8156744471776}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9743303571428575,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.5795230865478516e-6,"evaluations":8.90625,"distances_sum":3279.8156744471776}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6869587010212017,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.4375,"distances_sum":1345.6634882425835}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":4.045665264129639e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.9765625,"distances_sum":973.9106975246557}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":6.3359375,"distances_sum":606.976187580755}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.541015625,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.541015625,"f1":0.6869587010212017,"seconds":4.725530743598938e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.4375,"distances_sum":1345.6634882425835}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.939389256576757,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":2724.169077656074}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.8719239094239102,"seconds":3.7886202335357666e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6015625,"distances_sum":2184.1664584641844}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7969525266400275,"seconds":4.839152097702026e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.9609375,"distances_sum":1787.425335554852}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8587225274725283,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.5,"distances_sum":2139.6437688634487}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9088859057609064,"seconds":3.997236490249634e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.828125,"distances_sum":2462.047619444463}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":3.840774297714233e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.59375,"distances_sum":1458.5478166754438}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8725706585081594,"seconds":3.917142748832703e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6015625,"distances_sum":2204.148774389929}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6920392107892114,"seconds":3.6265701055526733e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.5078125,"distances_sum":1381.3807051792294}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.939389256576757,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.875,"distances_sum":2724.169077656074}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683436355311358,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9609375,"distances_sum":2912.568537033484}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667467948717954,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":2929.293842207059}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9716174450549455,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9765625,"distances_sum":2952.8101602702563}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602163461538467,"seconds":4.149973392486572e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9765625,"distances_sum":2850.8372678612513}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590086996337002,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":2857.103874599412}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9566678113553118,"seconds":6.116926670074463e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8125,"distances_sum":2874.7281813851973}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9716174450549455,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9765625,"distances_sum":2952.8101602702563}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9716174450549455,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.9765625,"distances_sum":2952.8101602702563}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8514511530136538,"seconds":8.501112461090088e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.046875,"distances_sum":2118.720367721067}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8514511530136538,"seconds":8.501112461090088e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.046875,"distances_sum":2118.720367721067}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8919476356976364,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.34375,"distances_sum":2386.222813496312}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8154296875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8154296875,"f1":0.8919476356976364,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.34375,"distances_sum":2386.222813496312}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494136072261075,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2908.0480080775533}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.919539835164836,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.421875,"distances_sum":2616.284143356132}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9220352564102571,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.4375,"distances_sum":2646.4046627353378}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9494136072261075,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2908.0480080775533}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9494136072261075,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.65625,"distances_sum":2908.0480080775533}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8491883116883123,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9609375,"distances_sum":2181.5270292582804}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8491883116883123,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":7.9609375,"distances_sum":2181.5270292582804}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9631238553113558,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":2983.1919210428555}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9074748168498176,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.578125,"distances_sum":2533.3942895585874}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9631238553113558,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.84375,"distances_sum":2983.1919210428555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682692307692311,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.8828125,"distances_sum":3041.3118889796406}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":3,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9787946428571431,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9140625,"distances_sum":3138.720079726412}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9799507783882786,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":3142.6262148934784}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179491,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.9140625,"distances_sum":3120.890587173087}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9799507783882786,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":3142.6262148934784}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9799507783882786,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.953125,"distances_sum":3142.6262148934784}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8149843212343221,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.53125,"distances_sum":1501.9409012136232}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.146484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.146484375,"f1":null,"seconds":2.9280781745910645e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":3.796875,"distances_sum":313.46884494246547}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.818788503163504,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.5859375,"distances_sum":1472.5977812265012}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8210357350982358,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.578125,"distances_sum":1538.7976160197554}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.8210357350982358,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.578125,"distances_sum":1538.7976160197554}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455471611721618,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6640625,"distances_sum":2233.287522403419}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8532748501498509,"seconds":4.695728421211243e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.890625,"distances_sum":1705.8340130255806}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8649444305694314,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.984375,"distances_sum":1766.1736232243773}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9062161796536804,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3984375,"distances_sum":2022.6111543950199}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9418784340659346,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6953125,"distances_sum":2183.766935556326}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8690538628038637,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.03125,"distances_sum":1747.3057359877287}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9455471611721618,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6640625,"distances_sum":2233.287522403419}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9576121794871799,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7734375,"distances_sum":2278.877310732006}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9708733974358975,"seconds":6.59748911857605e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.890625,"distances_sum":2355.150924416577}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9598614926739932,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.828125,"distances_sum":2298.2507231418726}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680631868131873,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8828125,"distances_sum":2342.9910903640584}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9455903471528476,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.640625,"distances_sum":2232.5879867034473}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660370879120883,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8515625,"distances_sum":2332.8761071385097}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989016,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8125,"distances_sum":2393.248448733436}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9565190018315024,"seconds":5.519017577171326e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.734375,"distances_sum":2288.1111727381285}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989016,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8125,"distances_sum":2393.248448733436}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989016,"seconds":4.86522912979126e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8125,"distances_sum":2393.248448733436}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.8322724150849159,"seconds":3.80445271730423e-5,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.921875,"distances_sum":1560.8463277409614}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7255859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7255859375,"f1":0.8322724150849159,"seconds":3.80445271730423e-5,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":7.921875,"distances_sum":1560.8463277409614}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9257955586080593,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":2118.586829782853}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8464049839049849,"seconds":4.205852746963501e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.0,"distances_sum":1622.643319753393}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9257955586080593,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":2118.586829782853}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9257955586080593,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":2118.586829782853}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8720703125,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9257955586080593,"seconds":6.817281246185303e-6,"exhaustive_search_seconds":1.5478581190109253e-6,"evaluations":8.71875,"distances_sum":2118.586829782853}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.857712599900101,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0078125,"distances_sum":1684.8160493566318}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.803928363303364,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.5859375,"distances_sum":1447.5157301016652}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2041015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2041015625,"f1":null,"seconds":3.030523657798767e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":4.4296875,"distances_sum":489.8327742042961}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.857712599900101,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0078125,"distances_sum":1684.8160493566318}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8841002747252756,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.34375,"distances_sum":1833.8500843128}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9564961080586085,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.78125,"distances_sum":2330.5224388146794}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9288461538461547,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.78125,"distances_sum":2112.218474367622}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.925460997335998,"seconds":5.649402737617493e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6640625,"distances_sum":2127.5077727335893}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9564961080586085,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.78125,"distances_sum":2330.5224388146794}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":8,"bsize":13}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047621,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2452.9959688298386}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9626373626373632,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.859375,"distances_sum":2333.3053664311765}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669471153846158,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.875,"distances_sum":2372.364203632451}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047621,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2452.9959688298386}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":8,"bsize":13},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047621,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9453125,"distances_sum":2452.9959688298386}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.568359375,"f1":null,"seconds":3.0137598514556885e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":7.09375,"distances_sum":1201.2901248478784}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8175848457098465,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":7.765625,"distances_sum":1577.190572006732}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7021484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7021484375,"f1":0.8175848457098465,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":7.765625,"distances_sum":1577.190572006732}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8354858682983691,"seconds":3.0510127544403076e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.2109375,"distances_sum":1688.1836053048348}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611836080586084,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.8828125,"distances_sum":2503.727048948162}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9286191239316247,"seconds":3.4049153327941895e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.84375,"distances_sum":2263.1969547686335}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8398336038961046,"seconds":3.073364496231079e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.140625,"distances_sum":1745.2562143307025}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9611836080586084,"seconds":3.470107913017273e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.8828125,"distances_sum":2503.727048948162}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638450091575097,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.9296875,"distances_sum":2479.1776227080586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9797619047619051,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.9609375,"distances_sum":2618.098825664798}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713541666666669,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.90625,"distances_sum":2570.823028294369}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797619047619051,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.9609375,"distances_sum":2618.098825664798}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9797619047619051,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.0300427675247192e-6,"evaluations":8.9609375,"distances_sum":2618.098825664798}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.537109375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.537109375,"f1":null,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.609375,"distances_sum":1156.1497147401763}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.537109375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.537109375,"f1":null,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.609375,"distances_sum":1156.1497147401763}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8586314726939737,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0546875,"distances_sum":1857.8854962253297}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8586314726939737,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0546875,"distances_sum":1857.8854962253297}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.933899954212455,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2305.5684188945015}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8833593489843499,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.109375,"distances_sum":1989.2411351150959}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8680959665334672,"seconds":3.812834620475769e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.9453125,"distances_sum":1895.4129190607125}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.933899954212455,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2305.5684188945015}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.884765625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.933899954212455,"seconds":5.276873707771301e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2305.5684188945015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7978046259296269,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":7.8671875,"distances_sum":1471.2356907241074}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7978046259296269,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":7.8671875,"distances_sum":1471.2356907241074}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611726,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":8.8984375,"distances_sum":2414.398213838172}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8378356018981027,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":8.3125,"distances_sum":1704.8568230005592}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611726,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":8.8984375,"distances_sum":2414.398213838172}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611726,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":8.8984375,"distances_sum":2414.398213838172}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9565361721611726,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.0952353477478027e-6,"evaluations":8.8984375,"distances_sum":2414.398213838172}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.359375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.359375,"f1":null,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":5.3828125,"distances_sum":782.9651514230038}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.359375,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.359375,"f1":null,"seconds":2.9709190130233765e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":5.3828125,"distances_sum":782.9651514230038}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8424882409257418,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":7.8046875,"distances_sum":1749.395225872698}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8424882409257418,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":7.8046875,"distances_sum":1749.395225872698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8424882409257418,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":7.8046875,"distances_sum":1749.395225872698}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7412109375,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8424882409257418,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":9.071081876754761e-7,"evaluations":7.8046875,"distances_sum":1749.395225872698}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8497949966699975,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.25,"distances_sum":1753.6898726150484}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.365234375, conf: {"ssize":3,"bsize":2}, perf: {"precision":1.0,"recall":0.365234375,"f1":0.5121010933510931,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":5.6875,"distances_sum":735.0846790212611}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5087890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5087890625,"f1":null,"seconds":4.244968295097351e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":7.2109375,"distances_sum":1156.5704403331695}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8497949966699975,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.25,"distances_sum":1753.6898726150484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9502060439560444,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8359375,"distances_sum":2413.925748217578}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9230972152847158,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.703125,"distances_sum":2229.5996338988352}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9502060439560444,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8359375,"distances_sum":2413.925748217578}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047623,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.921875,"distances_sum":2561.135253596623}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537431318681322,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.8984375,"distances_sum":2404.3889761494747}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047623,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.921875,"distances_sum":2561.135253596623}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9728422619047623,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.1567026376724243e-6,"evaluations":8.921875,"distances_sum":2561.135253596623}}, n: 9
mean(cfft.distances) = 0.3381360900453569
mean(cdnet.distances) = 0.44125553657419214
mean(crand.distances) = 0.3489160504900853
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8644444444444445
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8955555555555557
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9066666666666666
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8777777777777779
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8622222222222221
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.928888888888889
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9022222222222224
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 10, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 11, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 1, 3, 2, 3, 3, 3, 2, 3, 3, 2]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.554153057038784] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 18]]
** centroid: 1, normalized-entropy: 0.9927744539878083, [(2, 22), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 11: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
finished with 14 centroids; started with 12
acc = 0.9133333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.23811304121342552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678] ***
*** starting iteration: 2; err: [Inf, 0.23811304121342552, 0.1676621468256678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995] ***
*** starting iteration: 3; err: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867] ***
*** starting iteration: 4; err: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583] ***
*** starting iteration: 5; err: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583, 0.14933525076186335] ***
*** starting iteration: 6; err: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583, 0.14933525076186335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583, 0.14933525076186335, 0.14810111728257727] ***
*** starting iteration: 7; err: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583, 0.14933525076186335, 0.14810111728257727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583, 0.14933525076186335, 0.14810111728257727, 0.14733800283205267] ***
*** finished computation of 7 references, err: [Inf, 0.23811304121342552, 0.1676621468256678, 0.15727868283414995, 0.15448583839754867, 0.1519032823517583, 0.14933525076186335, 0.14810111728257727, 0.14733800283205267] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 4, 0]]
** centroid: 1, normalized-entropy: 0.33352200393097675, [(1, 61), (2, 4)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 108, 20]]
** centroid: 2, normalized-entropy: 0.625262405223423, [(2, 108), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 44, 0]]
** centroid: 3, normalized-entropy: 0.9771340293867935, [(1, 63), (2, 44)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 97, 0]]
** centroid: 6, normalized-entropy: 0.447907858914932, [(1, 10), (2, 97)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [96, 3, 0]]
** centroid: 7, normalized-entropy: 0.19590927087360496, [(1, 96), (2, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20199187534248297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20199187534248297, 0.16096294917741502] ***
*** starting iteration: 2; err: [Inf, 0.20199187534248297, 0.16096294917741502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20199187534248297, 0.16096294917741502, 0.15378087070788712] ***
*** starting iteration: 3; err: [Inf, 0.20199187534248297, 0.16096294917741502, 0.15378087070788712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20199187534248297, 0.16096294917741502, 0.15378087070788712, 0.15157544680534565] ***
*** starting iteration: 4; err: [Inf, 0.20199187534248297, 0.16096294917741502, 0.15378087070788712, 0.15157544680534565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20199187534248297, 0.16096294917741502, 0.15378087070788712, 0.15157544680534565, 0.15059601749199955] ***
*** finished computation of 7 references, err: [Inf, 0.20199187534248297, 0.16096294917741502, 0.15378087070788712, 0.15157544680534565, 0.15059601749199955] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 85, 25]]
** centroid: 1, normalized-entropy: 0.7732266742876346, [(2, 85), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 85, 0]]
** centroid: 2, normalized-entropy: 0.2645173683629748, [(1, 4), (2, 85)]
*** center 3: selecting labels [1] (freq >= 2) [from [123, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [120, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 49, 0]]
** centroid: 5, normalized-entropy: 0.9679884922470298, [(1, 32), (2, 49)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 25, 0]]
** centroid: 7, normalized-entropy: 0.9690632527820694, [(1, 38), (2, 25)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17233188282642542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17233188282642542, 0.15403401311500922] ***
*** starting iteration: 2; err: [Inf, 0.17233188282642542, 0.15403401311500922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17233188282642542, 0.15403401311500922, 0.15182597604349837] ***
*** starting iteration: 3; err: [Inf, 0.17233188282642542, 0.15403401311500922, 0.15182597604349837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17233188282642542, 0.15403401311500922, 0.15182597604349837, 0.15073589788194092] ***
*** starting iteration: 4; err: [Inf, 0.17233188282642542, 0.15403401311500922, 0.15182597604349837, 0.15073589788194092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17233188282642542, 0.15403401311500922, 0.15182597604349837, 0.15073589788194092, 0.1500598599497547] ***
*** finished computation of 7 references, err: [Inf, 0.17233188282642542, 0.15403401311500922, 0.15182597604349837, 0.15073589788194092, 0.1500598599497547] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [83, 16, 0]]
** centroid: 1, normalized-entropy: 0.638161945314006, [(1, 83), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 55, 0]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(1, 45), (2, 55)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 71, 21]]
** centroid: 3, normalized-entropy: 0.7749672673267259, [(2, 71), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [39, 48, 0]]
** centroid: 4, normalized-entropy: 0.9922666387194963, [(1, 39), (2, 48)]
*** center 5: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 55, 4]]
** centroid: 6, normalized-entropy: 0.3576467062456333, [(2, 55), (3, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4277269255073445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4277269255073445, 0.25361783908244484] ***
*** starting iteration: 2; err: [Inf, 0.4277269255073445, 0.25361783908244484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923] ***
*** starting iteration: 3; err: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923, 0.2316244371660479] ***
*** starting iteration: 4; err: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923, 0.2316244371660479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923, 0.2316244371660479, 0.23058430839738286] ***
*** starting iteration: 5; err: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923, 0.2316244371660479, 0.23058430839738286] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923, 0.2316244371660479, 0.23058430839738286, 0.2301425502213227] ***
*** finished computation of 3 references, err: [Inf, 0.4277269255073445, 0.25361783908244484, 0.23632803360802923, 0.2316244371660479, 0.23058430839738286, 0.2301425502213227] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [149, 46, 0]]
** centroid: 1, normalized-entropy: 0.7881510341214842, [(1, 149), (2, 46)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [241, 15, 0]]
** centroid: 2, normalized-entropy: 0.32183715247832606, [(1, 241), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 195, 20]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(2, 195), (3, 20)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31001576919505175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31001576919505175, 0.24049375228433015] ***
*** starting iteration: 2; err: [Inf, 0.31001576919505175, 0.24049375228433015] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31001576919505175, 0.24049375228433015, 0.23178944280831845] ***
*** starting iteration: 3; err: [Inf, 0.31001576919505175, 0.24049375228433015, 0.23178944280831845] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31001576919505175, 0.24049375228433015, 0.23178944280831845, 0.2296045386878916] ***
*** starting iteration: 4; err: [Inf, 0.31001576919505175, 0.24049375228433015, 0.23178944280831845, 0.2296045386878916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31001576919505175, 0.24049375228433015, 0.23178944280831845, 0.2296045386878916, 0.22898138566724566] ***
*** finished computation of 3 references, err: [Inf, 0.31001576919505175, 0.24049375228433015, 0.23178944280831845, 0.2296045386878916, 0.22898138566724566] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [137, 60, 0]]
** centroid: 1, normalized-entropy: 0.8868039458416388, [(1, 137), (2, 60)]
*** center 2: selecting labels [1] (freq >= 2) [from [242, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [18, 185, 25]]
** centroid: 3, normalized-entropy: 0.5574272626463972, [(1, 18), (2, 185), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3575215705096543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3575215705096543, 0.25291550128037915] ***
*** starting iteration: 2; err: [Inf, 0.3575215705096543, 0.25291550128037915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397] ***
*** starting iteration: 3; err: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397, 0.23248026486852022] ***
*** starting iteration: 4; err: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397, 0.23248026486852022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397, 0.23248026486852022, 0.23137799504937706] ***
*** starting iteration: 5; err: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397, 0.23248026486852022, 0.23137799504937706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397, 0.23248026486852022, 0.23137799504937706, 0.2311465797060612] ***
*** finished computation of 3 references, err: [Inf, 0.3575215705096543, 0.25291550128037915, 0.2365018704646397, 0.23248026486852022, 0.23137799504937706, 0.2311465797060612] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [215, 7, 0]]
** centroid: 1, normalized-entropy: 0.2020152036648033, [(1, 215), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [182, 47, 0]]
** centroid: 2, normalized-entropy: 0.7322854451056267, [(1, 182), (2, 47)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 191, 25]]
** centroid: 3, normalized-entropy: 0.51699254429682, [(2, 191), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3281122821116488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3281122821116488, 0.24215280111443468] ***
*** starting iteration: 2; err: [Inf, 0.3281122821116488, 0.24215280111443468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3281122821116488, 0.24215280111443468, 0.2360629934745644] ***
*** starting iteration: 3; err: [Inf, 0.3281122821116488, 0.24215280111443468, 0.2360629934745644] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3281122821116488, 0.24215280111443468, 0.2360629934745644, 0.23424182610092] ***
*** finished computation of 3 references, err: [Inf, 0.3281122821116488, 0.24215280111443468, 0.2360629934745644, 0.23424182610092] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [233, 28, 0]]
** centroid: 1, normalized-entropy: 0.49165576851601395, [(1, 233), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [164, 45, 0]]
** centroid: 2, normalized-entropy: 0.7515126340320738, [(1, 164), (2, 45)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 172, 25]]
** centroid: 3, normalized-entropy: 0.5488845983745034, [(2, 172), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3633331491093876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3633331491093876, 0.24572527826927054] ***
*** starting iteration: 2; err: [Inf, 0.3633331491093876, 0.24572527826927054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3633331491093876, 0.24572527826927054, 0.24358205066929603] ***
*** starting iteration: 3; err: [Inf, 0.3633331491093876, 0.24572527826927054, 0.24358205066929603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3633331491093876, 0.24572527826927054, 0.24358205066929603, 0.24262513119917267] ***
*** finished computation of 3 references, err: [Inf, 0.3633331491093876, 0.24572527826927054, 0.24358205066929603, 0.24262513119917267] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [78, 158, 25]]
** centroid: 1, normalized-entropy: 0.8096407974281081, [(1, 78), (2, 158), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [115, 87, 0]]
** centroid: 2, normalized-entropy: 0.9860954431604952, [(1, 115), (2, 87)]
*** center 3: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3675376213737414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3675376213737414, 0.26819662347173057] ***
*** starting iteration: 2; err: [Inf, 0.3675376213737414, 0.26819662347173057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3675376213737414, 0.26819662347173057, 0.26746438196426753] ***
*** finished computation of 3 references, err: [Inf, 0.3675376213737414, 0.26819662347173057, 0.26746438196426753] ***
*** center 1: selecting labels [1] (freq >= 1) [from [242, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 128, 0]]
** centroid: 2, normalized-entropy: 0.9862632103630311, [(1, 97), (2, 128)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [51, 128, 20]]
** centroid: 3, normalized-entropy: 0.7861449571003764, [(1, 51), (2, 128), (3, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.336298463193803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.336298463193803, 0.23076730318691419] ***
*** starting iteration: 2; err: [Inf, 0.336298463193803, 0.23076730318691419] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.336298463193803, 0.23076730318691419, 0.22927076822758347] ***
*** starting iteration: 3; err: [Inf, 0.336298463193803, 0.23076730318691419, 0.22927076822758347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.336298463193803, 0.23076730318691419, 0.22927076822758347, 0.22916248905566008] ***
*** finished computation of 3 references, err: [Inf, 0.336298463193803, 0.23076730318691419, 0.22927076822758347, 0.22916248905566008] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 180, 25]]
** centroid: 1, normalized-entropy: 0.5349436990971067, [(2, 180), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [179, 42, 0]]
** centroid: 2, normalized-entropy: 0.7015661074140116, [(1, 179), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [218, 23, 0]]
** centroid: 3, normalized-entropy: 0.45435776863377375, [(1, 218), (2, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4048264403457473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048264403457473, 0.2852767498122118] ***
*** starting iteration: 2; err: [Inf, 0.4048264403457473, 0.2852767498122118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207] ***
*** starting iteration: 3; err: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392] ***
*** starting iteration: 4; err: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392, 0.24266963106520037] ***
*** starting iteration: 5; err: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392, 0.24266963106520037] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392, 0.24266963106520037, 0.24076055553273998] ***
*** starting iteration: 6; err: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392, 0.24266963106520037, 0.24076055553273998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392, 0.24266963106520037, 0.24076055553273998, 0.24006525520863628] ***
*** finished computation of 3 references, err: [Inf, 0.4048264403457473, 0.2852767498122118, 0.2571015791029207, 0.24632759676126392, 0.24266963106520037, 0.24076055553273998, 0.24006525520863628] ***
*** center 1: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [126, 77, 0]]
** centroid: 2, normalized-entropy: 0.9575534837147484, [(1, 126), (2, 77)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [58, 168, 25]]
** centroid: 3, normalized-entropy: 0.7618635199404804, [(1, 58), (2, 168), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36863721031471863] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36863721031471863, 0.3072583385751591] ***
*** finished computation of 3 references, err: [Inf, 0.36863721031471863, 0.3072583385751591] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [143, 44, 0]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(1, 143), (2, 44)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [36, 212, 20]]
** centroid: 2, normalized-entropy: 0.5905241286759663, [(1, 36), (2, 212), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3870283299121542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3870283299121542, 0.30470819758443995] ***
*** finished computation of 3 references, err: [Inf, 0.3870283299121542, 0.30470819758443995] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [75, 180, 25]]
** centroid: 1, normalized-entropy: 0.776061355027518, [(1, 75), (2, 180), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [119, 65, 0]]
** centroid: 2, normalized-entropy: 0.9369466208369326, [(1, 119), (2, 65)]
*** center 3: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.406053206341612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.406053206341612, 0.3450614563824757] ***
*** finished computation of 3 references, err: [Inf, 0.406053206341612, 0.3450614563824757] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [195, 16, 0]]
** centroid: 1, normalized-entropy: 0.3873105101234216, [(1, 195), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [133, 96, 0]]
** centroid: 2, normalized-entropy: 0.9810860414118381, [(1, 133), (2, 96)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [69, 133, 25]]
** centroid: 3, normalized-entropy: 0.8357438668246382, [(1, 69), (2, 133), (3, 25)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4487683479772047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4487683479772047, 0.29695671288626596] ***
*** finished computation of 3 references, err: [Inf, 0.4487683479772047, 0.29695671288626596] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [65, 202, 20]]
** centroid: 1, normalized-entropy: 0.7001277958121297, [(1, 65), (2, 202), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [201, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [124, 54, 0]]
** centroid: 3, normalized-entropy: 0.8853723770068483, [(1, 124), (2, 54)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40475187101575927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40475187101575927, 0.32795510150497775] ***
*** finished computation of 3 references, err: [Inf, 0.40475187101575927, 0.32795510150497775] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [278, 76, 0]]
** centroid: 1, normalized-entropy: 0.7503510042105468, [(1, 278), (2, 76)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [119, 43, 0]]
** centroid: 2, normalized-entropy: 0.8348333467992206, [(1, 119), (2, 43)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 126, 25]]
** centroid: 3, normalized-entropy: 0.6474532485611214, [(2, 126), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40758593839549945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40758593839549945, 0.2941280941952249] ***
*** finished computation of 3 references, err: [Inf, 0.40758593839549945, 0.2941280941952249] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [258, 10, 0]]
** centroid: 1, normalized-entropy: 0.2298357843082457, [(1, 258), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [138, 55, 0]]
** centroid: 2, normalized-entropy: 0.8621401498108598, [(1, 138), (2, 55)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 180, 25]]
** centroid: 3, normalized-entropy: 0.3638233346520616, [(1, 1), (2, 180), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47457951630043377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47457951630043377, 0.27343865091613195] ***
*** starting iteration: 2; err: [Inf, 0.47457951630043377, 0.27343865091613195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797] ***
*** starting iteration: 3; err: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797, 0.2378759985487606] ***
*** starting iteration: 4; err: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797, 0.2378759985487606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797, 0.2378759985487606, 0.23591356474330072] ***
*** starting iteration: 5; err: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797, 0.2378759985487606, 0.23591356474330072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797, 0.2378759985487606, 0.23591356474330072, 0.23553226915448233] ***
*** finished computation of 3 references, err: [Inf, 0.47457951630043377, 0.27343865091613195, 0.24816072455050797, 0.2378759985487606, 0.23591356474330072, 0.23553226915448233] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [63, 178, 20]]
** centroid: 1, normalized-entropy: 0.7290640291319203, [(1, 63), (2, 178), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [119, 78, 0]]
** centroid: 2, normalized-entropy: 0.9685254899898754, [(1, 119), (2, 78)]
*** center 3: selecting labels [1] (freq >= 1) [from [208, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.26189810438137473] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26189810438137473, 0.23840544235821384] ***
*** starting iteration: 2; err: [Inf, 0.26189810438137473, 0.23840544235821384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26189810438137473, 0.23840544235821384, 0.23659590145536716] ***
*** starting iteration: 3; err: [Inf, 0.26189810438137473, 0.23840544235821384, 0.23659590145536716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26189810438137473, 0.23840544235821384, 0.23659590145536716, 0.23557591867790945] ***
*** starting iteration: 4; err: [Inf, 0.26189810438137473, 0.23840544235821384, 0.23659590145536716, 0.23557591867790945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.26189810438137473, 0.23840544235821384, 0.23659590145536716, 0.23557591867790945, 0.23479836113329255] ***
*** finished computation of 3 references, err: [Inf, 0.26189810438137473, 0.23840544235821384, 0.23659590145536716, 0.23557591867790945, 0.23479836113329255] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 184, 25]]
** centroid: 1, normalized-entropy: 0.5282595882585934, [(2, 184), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [232, 12, 0]]
** centroid: 2, normalized-entropy: 0.28290479297989196, [(1, 232), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [165, 49, 0]]
** centroid: 3, normalized-entropy: 0.7762148942880405, [(1, 165), (2, 49)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3702484947856868] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3702484947856868, 0.263773785929183] ***
*** starting iteration: 2; err: [Inf, 0.3702484947856868, 0.263773785929183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535] ***
*** starting iteration: 3; err: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535, 0.23282392380020484] ***
*** starting iteration: 4; err: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535, 0.23282392380020484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535, 0.23282392380020484, 0.23105523743453077] ***
*** starting iteration: 5; err: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535, 0.23282392380020484, 0.23105523743453077] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535, 0.23282392380020484, 0.23105523743453077, 0.23066498784730952] ***
*** finished computation of 3 references, err: [Inf, 0.3702484947856868, 0.263773785929183, 0.23999363152279535, 0.23282392380020484, 0.23105523743453077, 0.23066498784730952] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 191, 25]]
** centroid: 1, normalized-entropy: 0.51699254429682, [(2, 191), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [216, 12, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 216), (2, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [181, 42, 0]]
** centroid: 3, normalized-entropy: 0.6979876249482505, [(1, 181), (2, 42)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.19769602837254274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19769602837254274, 0.1506552334592395] ***
*** starting iteration: 2; err: [Inf, 0.19769602837254274, 0.1506552334592395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19769602837254274, 0.1506552334592395, 0.14618154683509735] ***
*** starting iteration: 3; err: [Inf, 0.19769602837254274, 0.1506552334592395, 0.14618154683509735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19769602837254274, 0.1506552334592395, 0.14618154683509735, 0.14546562869426188] ***
*** finished computation of 7 references, err: [Inf, 0.19769602837254274, 0.1506552334592395, 0.14618154683509735, 0.14546562869426188] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [9, 105, 0]]
** centroid: 1, normalized-entropy: 0.39845927409523557, [(1, 9), (2, 105)]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 42, 0]]
** centroid: 3, normalized-entropy: 0.9918207974218425, [(1, 52), (2, 42)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 18, 0]]
** centroid: 4, normalized-entropy: 0.7448423974714387, [(1, 67), (2, 18)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 90, 20]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 90), (3, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [92, 1, 0]]
** centroid: 6, normalized-entropy: 0.0857426825355026, [(1, 92), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19213756797360493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19213756797360493, 0.15147363792300628] ***
*** starting iteration: 2; err: [Inf, 0.19213756797360493, 0.15147363792300628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19213756797360493, 0.15147363792300628, 0.148492819880941] ***
*** starting iteration: 3; err: [Inf, 0.19213756797360493, 0.15147363792300628, 0.148492819880941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19213756797360493, 0.15147363792300628, 0.148492819880941, 0.14816934887649327] ***
*** finished computation of 7 references, err: [Inf, 0.19213756797360493, 0.15147363792300628, 0.148492819880941, 0.14816934887649327] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [119, 2, 0]]
** centroid: 1, normalized-entropy: 0.12148047831884834, [(1, 119), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 22, 0]]
** centroid: 2, normalized-entropy: 0.8249658680139929, [(1, 63), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 62, 25]]
** centroid: 3, normalized-entropy: 0.8652817028791377, [(2, 62), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [18, 70, 0]]
** centroid: 5, normalized-entropy: 0.7309263775906009, [(1, 18), (2, 70)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 89, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1918227048716445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918227048716445, 0.15058477953875038] ***
*** starting iteration: 2; err: [Inf, 0.1918227048716445, 0.15058477953875038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918227048716445, 0.15058477953875038, 0.14659593015493103] ***
*** starting iteration: 3; err: [Inf, 0.1918227048716445, 0.15058477953875038, 0.14659593015493103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1918227048716445, 0.15058477953875038, 0.14659593015493103, 0.145722061482913] ***
*** finished computation of 7 references, err: [Inf, 0.1918227048716445, 0.15058477953875038, 0.14659593015493103, 0.145722061482913] ***
*** center 1: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [86, 16, 0]]
** centroid: 2, normalized-entropy: 0.6267511370265896, [(1, 86), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 83, 25]]
** centroid: 3, normalized-entropy: 0.7805849322915901, [(2, 83), (3, 25)]
*** center 4: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 65, 0]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(1, 30), (2, 65)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 81, 0]]
** centroid: 6, normalized-entropy: 0.36205125173399805, [(1, 6), (2, 81)]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4036609618351221] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4036609618351221, 0.33262989669758547] ***
*** finished computation of 3 references, err: [Inf, 0.4036609618351221, 0.33262989669758547] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [63, 163, 20]]
** centroid: 1, normalized-entropy: 0.7514955105237396, [(1, 63), (2, 163), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [200, 15, 0]]
** centroid: 2, normalized-entropy: 0.3650551896402848, [(1, 200), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [127, 78, 0]]
** centroid: 3, normalized-entropy: 0.9583858151575415, [(1, 127), (2, 78)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3807636814902647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3807636814902647, 0.2998363741476653] ***
*** finished computation of 3 references, err: [Inf, 0.3807636814902647, 0.2998363741476653] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [133, 96, 0]]
** centroid: 1, normalized-entropy: 0.9810860414118381, [(1, 133), (2, 96)]
*** center 2: selecting labels [1] (freq >= 1) [from [217, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [47, 149, 25]]
** centroid: 3, normalized-entropy: 0.7659894751962628, [(1, 47), (2, 149), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42902445660783967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42902445660783967, 0.3280081249175892] ***
*** finished computation of 3 references, err: [Inf, 0.42902445660783967, 0.3280081249175892] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [113, 216, 25]]
** centroid: 1, normalized-entropy: 0.7765427029013625, [(1, 113), (2, 216), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [147, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [137, 29, 0]]
** centroid: 3, normalized-entropy: 0.668341574574083, [(1, 137), (2, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31411783220721884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31411783220721884, 0.24269254073324437] ***
*** starting iteration: 2; err: [Inf, 0.31411783220721884, 0.24269254073324437] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31411783220721884, 0.24269254073324437, 0.23540485681100348] ***
*** starting iteration: 3; err: [Inf, 0.31411783220721884, 0.24269254073324437, 0.23540485681100348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31411783220721884, 0.24269254073324437, 0.23540485681100348, 0.23342115563891447] ***
*** finished computation of 3 references, err: [Inf, 0.31411783220721884, 0.24269254073324437, 0.23540485681100348, 0.23342115563891447] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [62, 185, 20]]
** centroid: 1, normalized-entropy: 0.7167114128435942, [(1, 62), (2, 185), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 71, 0]]
** centroid: 3, normalized-entropy: 0.95345898033896, [(1, 119), (2, 71)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 11)
[0.9520178861496227, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8480306653959349, 0.8210006413599228]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 12
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3439209184779956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3439209184779956, 0.3033457319531869] ***
*** starting iteration: 2; err: [Inf, 0.3439209184779956, 0.3033457319531869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3439209184779956, 0.3033457319531869, 0.2935753979583134] ***
*** starting iteration: 3; err: [Inf, 0.3439209184779956, 0.3033457319531869, 0.2935753979583134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3439209184779956, 0.3033457319531869, 0.2935753979583134, 0.2910328008169476] ***
*** starting iteration: 4; err: [Inf, 0.3439209184779956, 0.3033457319531869, 0.2935753979583134, 0.2910328008169476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3439209184779956, 0.3033457319531869, 0.2935753979583134, 0.2910328008169476, 0.2902873112490071] ***
*** finished computation of 3 references, err: [Inf, 0.3439209184779956, 0.3033457319531869, 0.2935753979583134, 0.2910328008169476, 0.2902873112490071] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [143, 47, 0]]
** centroid: 1, normalized-entropy: 0.8070804652353762, [(1, 143), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 6, 0]]
** centroid: 2, normalized-entropy: 0.16283411148082497, [(1, 245), (2, 6)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 203, 20]]
** centroid: 3, normalized-entropy: 0.31854666000210774, [(1, 2), (2, 203), (3, 20)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4469152385260033] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4469152385260033, 0.3140104986766334] ***
*** starting iteration: 2; err: [Inf, 0.4469152385260033, 0.3140104986766334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4469152385260033, 0.3140104986766334, 0.29360075957369414] ***
*** starting iteration: 3; err: [Inf, 0.4469152385260033, 0.3140104986766334, 0.29360075957369414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4469152385260033, 0.3140104986766334, 0.29360075957369414, 0.28997330466631627] ***
*** starting iteration: 4; err: [Inf, 0.4469152385260033, 0.3140104986766334, 0.29360075957369414, 0.28997330466631627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4469152385260033, 0.3140104986766334, 0.29360075957369414, 0.28997330466631627, 0.2894465848084433] ***
*** finished computation of 3 references, err: [Inf, 0.4469152385260033, 0.3140104986766334, 0.29360075957369414, 0.28997330466631627, 0.2894465848084433] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [4, 183, 25]]
** centroid: 1, normalized-entropy: 0.4132282195054429, [(1, 4), (2, 183), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [148, 57, 0]]
** centroid: 2, normalized-entropy: 0.8527784950153248, [(1, 148), (2, 57)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [245, 5, 0]]
** centroid: 3, normalized-entropy: 0.14144054254182067, [(1, 245), (2, 5)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42650856989585256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42650856989585256, 0.31567683413267317] ***
*** starting iteration: 2; err: [Inf, 0.42650856989585256, 0.31567683413267317] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066] ***
*** starting iteration: 3; err: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066, 0.2942383883819766] ***
*** starting iteration: 4; err: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066, 0.2942383883819766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066, 0.2942383883819766, 0.2930280950180125] ***
*** starting iteration: 5; err: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066, 0.2942383883819766, 0.2930280950180125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066, 0.2942383883819766, 0.2930280950180125, 0.2926535938588576] ***
*** finished computation of 3 references, err: [Inf, 0.42650856989585256, 0.31567683413267317, 0.2984199999738066, 0.2942383883819766, 0.2930280950180125, 0.2926535938588576] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [139, 58, 0]]
** centroid: 1, normalized-entropy: 0.8743578761773574, [(1, 139), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [257, 11, 0]]
** centroid: 2, normalized-entropy: 0.24706211229420189, [(1, 257), (2, 11)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 176, 25]]
** centroid: 3, normalized-entropy: 0.3685702650385634, [(1, 1), (2, 176), (3, 25)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 12)
[0.9520178861496227, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 13
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.2983465807683005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2983465807683005, 0.2345406352752098] ***
*** finished computation of 3 references, err: [Inf, 0.2983465807683005, 0.2345406352752098] ***
*** center 1: selecting labels [1] (freq >= 1) [from [193, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [57, 176, 20]]
** centroid: 2, normalized-entropy: 0.718023288805142, [(1, 57), (2, 176), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [140, 80, 0]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(1, 140), (2, 80)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27268790267268267] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.27268790267268267, 0.24411938291160332] ***
*** finished computation of 3 references, err: [Inf, 0.27268790267268267, 0.24411938291160332] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 135, 25]]
** centroid: 1, normalized-entropy: 0.625262405223423, [(2, 135), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [152, 64, 0]]
** centroid: 2, normalized-entropy: 0.876716288999464, [(1, 152), (2, 64)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [245, 46, 0]]
** centroid: 3, normalized-entropy: 0.629685841072365, [(1, 245), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.48340134105939736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.48340134105939736, 0.26236365797805195] ***
*** finished computation of 3 references, err: [Inf, 0.48340134105939736, 0.26236365797805195] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [174, 74, 0]]
** centroid: 1, normalized-entropy: 0.8793103533940488, [(1, 174), (2, 74)]
*** center 2: selecting labels [1] (freq >= 1) [from [151, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [72, 171, 25]]
** centroid: 3, normalized-entropy: 0.7837845355997946, [(1, 72), (2, 171), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.9520178861496227, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228, 0.8009296721871572]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 14
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2532320565365076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532320565365076, 0.20604386597077498] ***
*** starting iteration: 2; err: [Inf, 0.2532320565365076, 0.20604386597077498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941] ***
*** starting iteration: 3; err: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922] ***
*** starting iteration: 4; err: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922, 0.19490957426172248] ***
*** starting iteration: 5; err: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922, 0.19490957426172248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922, 0.19490957426172248, 0.19377659426795113] ***
*** starting iteration: 6; err: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922, 0.19490957426172248, 0.19377659426795113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922, 0.19490957426172248, 0.19377659426795113, 0.19286639625961716] ***
*** finished computation of 7 references, err: [Inf, 0.2532320565365076, 0.20604386597077498, 0.1998620886612941, 0.19785289059381922, 0.19490957426172248, 0.19377659426795113, 0.19286639625961716] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 2, 0]]
** centroid: 1, normalized-entropy: 0.1403272709905931, [(1, 99), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 30, 0]]
** centroid: 2, normalized-entropy: 0.9474351361840305, [(1, 52), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 62, 20]]
** centroid: 3, normalized-entropy: 0.8014698931335286, [(2, 62), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [5, 69, 0]]
** centroid: 4, normalized-entropy: 0.35678001438394347, [(1, 5), (2, 69)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [115, 4, 0]]
** centroid: 7, normalized-entropy: 0.21220132752136248, [(1, 115), (2, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28687611272812696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28687611272812696, 0.20921724357934057] ***
*** starting iteration: 2; err: [Inf, 0.28687611272812696, 0.20921724357934057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28687611272812696, 0.20921724357934057, 0.19715241621341975] ***
*** starting iteration: 3; err: [Inf, 0.28687611272812696, 0.20921724357934057, 0.19715241621341975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28687611272812696, 0.20921724357934057, 0.19715241621341975, 0.19394520361875667] ***
*** starting iteration: 4; err: [Inf, 0.28687611272812696, 0.20921724357934057, 0.19715241621341975, 0.19394520361875667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28687611272812696, 0.20921724357934057, 0.19715241621341975, 0.19394520361875667, 0.19310541590431363] ***
*** finished computation of 7 references, err: [Inf, 0.28687611272812696, 0.20921724357934057, 0.19715241621341975, 0.19394520361875667, 0.19310541590431363] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 35, 0]]
** centroid: 1, normalized-entropy: 0.8677584893617495, [(1, 86), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [107, 11, 0]]
** centroid: 2, normalized-entropy: 0.44712851249800223, [(1, 107), (2, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 87, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [78, 17, 0]]
** centroid: 5, normalized-entropy: 0.6777688570413568, [(1, 78), (2, 17)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 95, 25]]
** centroid: 6, normalized-entropy: 0.7382848661434506, [(2, 95), (3, 25)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2599866651110295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089] ***
*** starting iteration: 2; err: [Inf, 0.2599866651110295, 0.2100907258394089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852] ***
*** starting iteration: 3; err: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258] ***
*** starting iteration: 4; err: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929] ***
*** starting iteration: 5; err: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929, 0.19249957839147128] ***
*** starting iteration: 6; err: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929, 0.19249957839147128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929, 0.19249957839147128, 0.19134040742643413] ***
*** starting iteration: 7; err: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929, 0.19249957839147128, 0.19134040742643413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929, 0.19249957839147128, 0.19134040742643413, 0.1904115756195893] ***
*** finished computation of 7 references, err: [Inf, 0.2599866651110295, 0.2100907258394089, 0.2002500188194852, 0.19644695173703258, 0.1942383444754929, 0.19249957839147128, 0.19134040742643413, 0.1904115756195893] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 40, 0]]
** centroid: 1, normalized-entropy: 0.9910760598382222, [(1, 50), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [97, 28, 0]]
** centroid: 2, normalized-entropy: 0.7674044165839727, [(1, 97), (2, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 82, 3]]
** centroid: 3, normalized-entropy: 0.22028326695127437, [(2, 82), (3, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 53, 22]]
** centroid: 6, normalized-entropy: 0.8729882944709463, [(2, 53), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 42, 0]]
** centroid: 7, normalized-entropy: 0.9985090989176322, [(1, 46), (2, 42)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9520178861496227, 0.9319948691206176, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228, 0.8009296721871572]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 15
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.3435458538874805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3435458538874805, 0.2960602430677092] ***
*** starting iteration: 2; err: [Inf, 0.3435458538874805, 0.2960602430677092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3435458538874805, 0.2960602430677092, 0.29478573713692147] ***
*** starting iteration: 3; err: [Inf, 0.3435458538874805, 0.2960602430677092, 0.29478573713692147] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3435458538874805, 0.2960602430677092, 0.29478573713692147, 0.29505688419101295] ***
*** finished computation of 3 references, err: [Inf, 0.3435458538874805, 0.2960602430677092, 0.29478573713692147, 0.29505688419101295] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [42, 190, 20]]
** centroid: 1, normalized-entropy: 0.6486711013686537, [(1, 42), (2, 190), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [135, 66, 0]]
** centroid: 2, normalized-entropy: 0.9132401614300725, [(1, 135), (2, 66)]
*** center 3: selecting labels [1] (freq >= 1) [from [213, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36575153558563883] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36575153558563883, 0.2958364361552228] ***
*** starting iteration: 2; err: [Inf, 0.36575153558563883, 0.2958364361552228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36575153558563883, 0.2958364361552228, 0.2915382765015696] ***
*** starting iteration: 3; err: [Inf, 0.36575153558563883, 0.2958364361552228, 0.2915382765015696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36575153558563883, 0.2958364361552228, 0.2915382765015696, 0.29017699039310796] ***
*** starting iteration: 4; err: [Inf, 0.36575153558563883, 0.2958364361552228, 0.2915382765015696, 0.29017699039310796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36575153558563883, 0.2958364361552228, 0.2915382765015696, 0.29017699039310796, 0.28939502076783413] ***
*** finished computation of 3 references, err: [Inf, 0.36575153558563883, 0.2958364361552228, 0.2915382765015696, 0.29017699039310796, 0.28939502076783413] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 187, 25]]
** centroid: 1, normalized-entropy: 0.5233654133209532, [(2, 187), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [165, 44, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 165), (2, 44)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [232, 14, 0]]
** centroid: 3, normalized-entropy: 0.3150569452644301, [(1, 232), (2, 14)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5596397484916596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106] ***
*** starting iteration: 2; err: [Inf, 0.5596397484916596, 0.3358270996854106] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365] ***
*** starting iteration: 3; err: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176] ***
*** starting iteration: 4; err: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695] ***
*** starting iteration: 5; err: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695, 0.30270953000155926] ***
*** starting iteration: 6; err: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695, 0.30270953000155926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695, 0.30270953000155926, 0.29167565497439885] ***
*** starting iteration: 7; err: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695, 0.30270953000155926, 0.29167565497439885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695, 0.30270953000155926, 0.29167565497439885, 0.2907570154731465] ***
*** finished computation of 3 references, err: [Inf, 0.5596397484916596, 0.3358270996854106, 0.3317255557876365, 0.32623734829788176, 0.3166735824511695, 0.30270953000155926, 0.29167565497439885, 0.2907570154731465] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [167, 30, 0]]
** centroid: 1, normalized-entropy: 0.6155272777740297, [(1, 167), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [230, 34, 0]]
** centroid: 2, normalized-entropy: 0.5541045423898253, [(1, 230), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 181, 25]]
** centroid: 3, normalized-entropy: 0.5332553315209451, [(2, 181), (3, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9520178861496227, 0.9319948691206176, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8790047532562503, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228, 0.8009296721871572]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 17
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.2039544228142737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2039544228142737, 0.14993608609686518] ***
*** starting iteration: 2; err: [Inf, 0.2039544228142737, 0.14993608609686518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2039544228142737, 0.14993608609686518, 0.14813896752376524] ***
*** starting iteration: 3; err: [Inf, 0.2039544228142737, 0.14993608609686518, 0.14813896752376524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2039544228142737, 0.14993608609686518, 0.14813896752376524, 0.1472853350092296] ***
*** finished computation of 7 references, err: [Inf, 0.2039544228142737, 0.14993608609686518, 0.14813896752376524, 0.1472853350092296] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 85, 0]]
** centroid: 1, normalized-entropy: 0.5646695797525669, [(1, 13), (2, 85)]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 40, 0]]
** centroid: 3, normalized-entropy: 0.9456603046006401, [(1, 70), (2, 40)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 114, 20]]
** centroid: 4, normalized-entropy: 0.6079696120060726, [(2, 114), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 11, 0]]
** centroid: 5, normalized-entropy: 0.49991595816452816, [(1, 89), (2, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 6, 0]]
** centroid: 7, normalized-entropy: 0.43949698692151346, [(1, 60), (2, 6)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19449956720482664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19449956720482664, 0.16245702160257047] ***
*** starting iteration: 2; err: [Inf, 0.19449956720482664, 0.16245702160257047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19449956720482664, 0.16245702160257047, 0.15804303315174215] ***
*** starting iteration: 3; err: [Inf, 0.19449956720482664, 0.16245702160257047, 0.15804303315174215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19449956720482664, 0.16245702160257047, 0.15804303315174215, 0.1564850679433289] ***
*** finished computation of 7 references, err: [Inf, 0.19449956720482664, 0.16245702160257047, 0.15804303315174215, 0.1564850679433289] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [91, 2, 0]]
** centroid: 1, normalized-entropy: 0.14981136747274781, [(1, 91), (2, 2)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 68, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 81, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 31, 25]]
** centroid: 4, normalized-entropy: 0.9917033083725819, [(2, 31), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [44, 45, 0]]
** centroid: 5, normalized-entropy: 0.9999089303498087, [(1, 44), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [118, 18, 0]]
** centroid: 6, normalized-entropy: 0.5638560041131417, [(1, 118), (2, 18)]
*** center 7: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20280523029870928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20280523029870928, 0.1629985076063934] ***
*** starting iteration: 2; err: [Inf, 0.20280523029870928, 0.1629985076063934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20280523029870928, 0.1629985076063934, 0.15608461290273978] ***
*** starting iteration: 3; err: [Inf, 0.20280523029870928, 0.1629985076063934, 0.15608461290273978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20280523029870928, 0.1629985076063934, 0.15608461290273978, 0.15339087353980188] ***
*** finished computation of 7 references, err: [Inf, 0.20280523029870928, 0.1629985076063934, 0.15608461290273978, 0.15339087353980188] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 4, 0]]
** centroid: 1, normalized-entropy: 0.3912435636292556, [(1, 48), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 24, 0]]
** centroid: 2, normalized-entropy: 0.8997437586982626, [(1, 52), (2, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 101, 25]]
** centroid: 3, normalized-entropy: 0.7187421099896039, [(2, 101), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [114, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [120, 42, 0]]
** centroid: 6, normalized-entropy: 0.8256265261578954, [(1, 120), (2, 42)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 74, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.284287414446406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284287414446406, 0.20779216177824483] ***
*** starting iteration: 2; err: [Inf, 0.284287414446406, 0.20779216177824483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284287414446406, 0.20779216177824483, 0.19591096929252125] ***
*** starting iteration: 3; err: [Inf, 0.284287414446406, 0.20779216177824483, 0.19591096929252125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284287414446406, 0.20779216177824483, 0.19591096929252125, 0.19159082551109227] ***
*** finished computation of 7 references, err: [Inf, 0.284287414446406, 0.20779216177824483, 0.19591096929252125, 0.19159082551109227] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [83, 8, 0]]
** centroid: 1, normalized-entropy: 0.4294619720471057, [(1, 83), (2, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 88, 20]]
** centroid: 2, normalized-entropy: 0.6912898694057888, [(2, 88), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [120, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [50, 24, 0]]
** centroid: 4, normalized-entropy: 0.9090221560878149, [(1, 50), (2, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 98, 0]]
** centroid: 5, normalized-entropy: 0.3182152976832332, [(1, 6), (2, 98)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [45, 38, 0]]
** centroid: 6, normalized-entropy: 0.9948631079048572, [(1, 45), (2, 38)]
*** center 7: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2659550264318553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2659550264318553, 0.2170710482605282] ***
*** starting iteration: 2; err: [Inf, 0.2659550264318553, 0.2170710482605282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2659550264318553, 0.2170710482605282, 0.20320100250697207] ***
*** starting iteration: 3; err: [Inf, 0.2659550264318553, 0.2170710482605282, 0.20320100250697207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2659550264318553, 0.2170710482605282, 0.20320100250697207, 0.1987668913195672] ***
*** finished computation of 7 references, err: [Inf, 0.2659550264318553, 0.2170710482605282, 0.20320100250697207, 0.1987668913195672] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [94, 41, 0]]
** centroid: 1, normalized-entropy: 0.8857712692949838, [(1, 94), (2, 41)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 25]]
** centroid: 3, normalized-entropy: 0.9271587399898307, [(2, 48), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [101, 3, 0]]
** centroid: 4, normalized-entropy: 0.18857195602479668, [(1, 101), (2, 3)]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 118, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 35, 0]]
** centroid: 6, normalized-entropy: 0.9722794620968822, [(1, 52), (2, 35)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22193965310931787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22193965310931787, 0.19319350025414125] ***
*** starting iteration: 2; err: [Inf, 0.22193965310931787, 0.19319350025414125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22193965310931787, 0.19319350025414125, 0.18663750642999963] ***
*** starting iteration: 3; err: [Inf, 0.22193965310931787, 0.19319350025414125, 0.18663750642999963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22193965310931787, 0.19319350025414125, 0.18663750642999963, 0.1858727933191087] ***
*** finished computation of 7 references, err: [Inf, 0.22193965310931787, 0.19319350025414125, 0.18663750642999963, 0.1858727933191087] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 33, 0]]
** centroid: 1, normalized-entropy: 0.9014296082981941, [(1, 71), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 26, 0]]
** centroid: 2, normalized-entropy: 0.8306836355350677, [(1, 73), (2, 26)]
*** center 3: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [8, 90, 0]]
** centroid: 4, normalized-entropy: 0.4079059801389762, [(1, 8), (2, 90)]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 96, 25]]
** centroid: 7, normalized-entropy: 0.7349557594762549, [(2, 96), (3, 25)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9520178861496227, 0.9319948691206176, 0.9270078461695229, 0.913011814209419, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8790047532562503, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228, 0.8009296721871572]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 17
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9520178861496227, 0.9319948691206176, 0.9270078461695229, 0.913011814209419, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8790047532562503, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228, 0.8009296721871572]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 17
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9520178861496227, 0.9319948691206176, 0.9270078461695229, 0.913011814209419, 0.9080187972403541, 0.9029898161634687, 0.9000167832503162, 0.8800117482752213, 0.8790047532562503, 0.8770087452722183, 0.8760077442712172, 0.8710357063650477, 0.8690007372642103, 0.8649817482152811, 0.8480306653959349, 0.8210006413599228, 0.8009296721871572]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9520178861496227
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.20253202356956898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20253202356956898, 0.1558490244941786] ***
*** starting iteration: 2; err: [Inf, 0.20253202356956898, 0.1558490244941786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20253202356956898, 0.1558490244941786, 0.15253311008168385] ***
*** starting iteration: 3; err: [Inf, 0.20253202356956898, 0.1558490244941786, 0.15253311008168385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20253202356956898, 0.1558490244941786, 0.15253311008168385, 0.1514717746246606] ***
*** starting iteration: 4; err: [Inf, 0.20253202356956898, 0.1558490244941786, 0.15253311008168385, 0.1514717746246606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20253202356956898, 0.1558490244941786, 0.15253311008168385, 0.1514717746246606, 0.15095917819626628] ***
*** finished computation of 7 references, err: [Inf, 0.20253202356956898, 0.1558490244941786, 0.15253311008168385, 0.1514717746246606, 0.15095917819626628] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 63, 0]]
** centroid: 1, normalized-entropy: 0.9511226848117167, [(1, 107), (2, 63)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 140, 35]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 140), (3, 35)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 120, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [133, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [145, 14, 0]]
** centroid: 6, normalized-entropy: 0.42992832030968897, [(1, 145), (2, 14)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [88, 36, 0]]
** centroid: 7, normalized-entropy: 0.8691375806126381, [(1, 88), (2, 36)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18974099520407617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18974099520407617, 0.1540095519637689] ***
*** starting iteration: 2; err: [Inf, 0.18974099520407617, 0.1540095519637689] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18974099520407617, 0.1540095519637689, 0.1519366262629628] ***
*** starting iteration: 3; err: [Inf, 0.18974099520407617, 0.1540095519637689, 0.1519366262629628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18974099520407617, 0.1540095519637689, 0.1519366262629628, 0.15101165352761745] ***
*** finished computation of 7 references, err: [Inf, 0.18974099520407617, 0.1540095519637689, 0.1519366262629628, 0.15101165352761745] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 47, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 74, 17]]
** centroid: 2, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 8, 0]]
** centroid: 3, normalized-entropy: 0.446481346896803, [(1, 78), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 24, 0]]
** centroid: 4, normalized-entropy: 0.9136617865655933, [(1, 49), (2, 24)]
*** center 5: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [30, 32, 0]]
** centroid: 6, normalized-entropy: 0.9992492479956566, [(1, 30), (2, 32)]
*** center 7: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21530889612622559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367] ***
*** starting iteration: 2; err: [Inf, 0.21530889612622559, 0.17847156395204367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966] ***
*** starting iteration: 3; err: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256] ***
*** starting iteration: 4; err: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463] ***
*** starting iteration: 5; err: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463, 0.1483961738012731] ***
*** starting iteration: 6; err: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463, 0.1483961738012731] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463, 0.1483961738012731, 0.1469949122518301] ***
*** starting iteration: 7; err: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463, 0.1483961738012731, 0.1469949122518301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463, 0.1483961738012731, 0.1469949122518301, 0.1464905049968511] ***
*** finished computation of 7 references, err: [Inf, 0.21530889612622559, 0.17847156395204367, 0.16934488010033966, 0.16057111126743256, 0.1521576617816463, 0.1483961738012731, 0.1469949122518301, 0.1464905049968511] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [41, 29, 0]]
** centroid: 2, normalized-entropy: 0.9786961448300948, [(1, 41), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 73, 17]]
** centroid: 3, normalized-entropy: 0.6991413063352633, [(2, 73), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 54, 0]]
** centroid: 4, normalized-entropy: 0.2222848306856879, [(1, 2), (2, 54)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 30, 0]]
** centroid: 5, normalized-entropy: 0.8667256130949592, [(1, 74), (2, 30)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21218054405786096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21218054405786096, 0.1617048928095028] ***
*** starting iteration: 2; err: [Inf, 0.21218054405786096, 0.1617048928095028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894] ***
*** starting iteration: 3; err: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894, 0.1536111027551815] ***
*** starting iteration: 4; err: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894, 0.1536111027551815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894, 0.1536111027551815, 0.15120847300300375] ***
*** starting iteration: 5; err: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894, 0.1536111027551815, 0.15120847300300375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894, 0.1536111027551815, 0.15120847300300375, 0.150344262520317] ***
*** finished computation of 7 references, err: [Inf, 0.21218054405786096, 0.1617048928095028, 0.15649319606646894, 0.1536111027551815, 0.15120847300300375, 0.150344262520317] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 37, 0]]
** centroid: 1, normalized-entropy: 0.9590550044058676, [(1, 60), (2, 37)]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [45, 22, 0]]
** centroid: 3, normalized-entropy: 0.9132401614300725, [(1, 45), (2, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 88, 21]]
** centroid: 5, normalized-entropy: 0.70700406497476, [(2, 88), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 46, 0]]
** centroid: 6, normalized-entropy: 0.3322866302216152, [(1, 3), (2, 46)]
*** center 7: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1917917515458539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147] ***
*** starting iteration: 2; err: [Inf, 0.1917917515458539, 0.16263881861884147] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082] ***
*** starting iteration: 3; err: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095] ***
*** starting iteration: 4; err: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264] ***
*** starting iteration: 5; err: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264, 0.14802385336346924] ***
*** starting iteration: 6; err: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264, 0.14802385336346924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264, 0.14802385336346924, 0.14698560147173703] ***
*** starting iteration: 7; err: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264, 0.14802385336346924, 0.14698560147173703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264, 0.14802385336346924, 0.14698560147173703, 0.14689262919593601] ***
*** finished computation of 7 references, err: [Inf, 0.1917917515458539, 0.16263881861884147, 0.15614151971694082, 0.1521258473955095, 0.14961484622210264, 0.14802385336346924, 0.14698560147173703, 0.14689262919593601] ***
*** center 1: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [24, 40, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 24), (2, 40)]
*** center 3: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 25, 0]]
** centroid: 4, normalized-entropy: 0.8273744775003173, [(1, 71), (2, 25)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 74, 19]]
** centroid: 5, normalized-entropy: 0.7304472862481346, [(2, 74), (3, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 47, 0]]
** centroid: 7, normalized-entropy: 0.3274449191544762, [(1, 3), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1927914795000106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294] ***
*** starting iteration: 2; err: [Inf, 0.1927914795000106, 0.1745711403405294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695] ***
*** starting iteration: 3; err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259] ***
*** starting iteration: 4; err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506] ***
*** starting iteration: 5; err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796] ***
*** starting iteration: 6; err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796, 0.1479580753482878] ***
*** starting iteration: 7; err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796, 0.1479580753482878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796, 0.1479580753482878, 0.14683547752676532] ***
*** starting iteration: 8; err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796, 0.1479580753482878, 0.14683547752676532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796, 0.1479580753482878, 0.14683547752676532, 0.14599971188791097] ***
*** finished computation of 7 references, err: [Inf, 0.1927914795000106, 0.1745711403405294, 0.16347312655858695, 0.1540707571618259, 0.15075441913865506, 0.14899701664596796, 0.1479580753482878, 0.14683547752676532, 0.14599971188791097] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [90, 19, 0]]
** centroid: 1, normalized-entropy: 0.6674742199595056, [(1, 90), (2, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [45, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 49, 0]]
** centroid: 5, normalized-entropy: 0.3860189005698936, [(1, 4), (2, 49)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 55, 0]]
** centroid: 6, normalized-entropy: 0.3576467062456333, [(1, 4), (2, 55)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 59, 17]]
** centroid: 7, normalized-entropy: 0.7668379316856329, [(2, 59), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22472810940816998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472810940816998, 0.16735765900090338] ***
*** starting iteration: 2; err: [Inf, 0.22472810940816998, 0.16735765900090338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516] ***
*** starting iteration: 3; err: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889] ***
*** starting iteration: 4; err: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889, 0.14874664250761271] ***
*** starting iteration: 5; err: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889, 0.14874664250761271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889, 0.14874664250761271, 0.14735146008618177] ***
*** starting iteration: 6; err: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889, 0.14874664250761271, 0.14735146008618177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889, 0.14874664250761271, 0.14735146008618177, 0.14661052017100154] ***
*** finished computation of 7 references, err: [Inf, 0.22472810940816998, 0.16735765900090338, 0.15473968085390516, 0.15131465329974889, 0.14874664250761271, 0.14735146008618177, 0.14661052017100154] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 77, 22]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 77), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [8, 58, 0]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(1, 8), (2, 58)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 32, 0]]
** centroid: 6, normalized-entropy: 0.9998182469603427, [(1, 31), (2, 32)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [59, 9, 0]]
** centroid: 7, normalized-entropy: 0.5638560041131417, [(1, 59), (2, 9)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2882785189694259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2882785189694259, 0.20950495990924536] ***
*** starting iteration: 2; err: [Inf, 0.2882785189694259, 0.20950495990924536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551] ***
*** starting iteration: 3; err: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242] ***
*** starting iteration: 4; err: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242, 0.14923779979534446] ***
*** starting iteration: 5; err: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242, 0.14923779979534446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242, 0.14923779979534446, 0.14595543881878256] ***
*** starting iteration: 6; err: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242, 0.14923779979534446, 0.14595543881878256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242, 0.14923779979534446, 0.14595543881878256, 0.14504655908048153] ***
*** finished computation of 7 references, err: [Inf, 0.2882785189694259, 0.20950495990924536, 0.1676612535044551, 0.15477259340137242, 0.14923779979534446, 0.14595543881878256, 0.14504655908048153] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [45, 13, 0]]
** centroid: 1, normalized-entropy: 0.7676515870125797, [(1, 45), (2, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 48, 21]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(2, 48), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [18, 55, 0]]
** centroid: 6, normalized-entropy: 0.8058049113482652, [(1, 18), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 76, 0]]
** centroid: 7, normalized-entropy: 0.17203694935311387, [(1, 2), (2, 76)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21103696491383017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21103696491383017, 0.16497471827454865] ***
*** starting iteration: 2; err: [Inf, 0.21103696491383017, 0.16497471827454865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681] ***
*** starting iteration: 3; err: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138] ***
*** starting iteration: 4; err: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138, 0.15282004519365727] ***
*** starting iteration: 5; err: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138, 0.15282004519365727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138, 0.15282004519365727, 0.15134145233221352] ***
*** starting iteration: 6; err: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138, 0.15282004519365727, 0.15134145233221352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138, 0.15282004519365727, 0.15134145233221352, 0.15086548853944987] ***
*** finished computation of 7 references, err: [Inf, 0.21103696491383017, 0.16497471827454865, 0.1569635044168681, 0.1544127890393138, 0.15282004519365727, 0.15134145233221352, 0.15086548853944987] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [61, 9, 0]]
** centroid: 1, normalized-entropy: 0.5535072654547254, [(1, 61), (2, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 44, 0]]
** centroid: 4, normalized-entropy: 0.9666186325481027, [(1, 68), (2, 44)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 74, 15]]
** centroid: 5, normalized-entropy: 0.6543524423071835, [(2, 74), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 2, 0]]
** centroid: 7, normalized-entropy: 0.22853814395352806, [(1, 52), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18242100536078215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18242100536078215, 0.1583541767206043] ***
*** starting iteration: 2; err: [Inf, 0.18242100536078215, 0.1583541767206043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823] ***
*** starting iteration: 3; err: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823, 0.15075208303984255] ***
*** starting iteration: 4; err: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823, 0.15075208303984255] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823, 0.15075208303984255, 0.14856941355857997] ***
*** starting iteration: 5; err: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823, 0.15075208303984255, 0.14856941355857997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823, 0.15075208303984255, 0.14856941355857997, 0.1477248431313783] ***
*** finished computation of 7 references, err: [Inf, 0.18242100536078215, 0.1583541767206043, 0.15431521345907823, 0.15075208303984255, 0.14856941355857997, 0.1477248431313783] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 67, 18]]
** centroid: 1, normalized-entropy: 0.7448423974714387, [(2, 67), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 29, 0]]
** centroid: 2, normalized-entropy: 0.8687212463394044, [(1, 71), (2, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 54, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [23, 45, 0]]
** centroid: 7, normalized-entropy: 0.9231199835423002, [(1, 23), (2, 45)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20350541385635734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350541385635734, 0.15999567970260978] ***
*** starting iteration: 2; err: [Inf, 0.20350541385635734, 0.15999567970260978] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438] ***
*** starting iteration: 3; err: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438, 0.1517604003585875] ***
*** starting iteration: 4; err: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438, 0.1517604003585875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438, 0.1517604003585875, 0.15052699573617428] ***
*** starting iteration: 5; err: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438, 0.1517604003585875, 0.15052699573617428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438, 0.1517604003585875, 0.15052699573617428, 0.14973323090188206] ***
*** finished computation of 7 references, err: [Inf, 0.20350541385635734, 0.15999567970260978, 0.1538770122360438, 0.1517604003585875, 0.15052699573617428, 0.14973323090188206] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 40, 0]]
** centroid: 1, normalized-entropy: 0.7522121733341471, [(1, 11), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [5, 52, 0]]
** centroid: 2, normalized-entropy: 0.4288109647301171, [(1, 5), (2, 52)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 55, 18]]
** centroid: 3, normalized-entropy: 0.8058049113482652, [(2, 55), (3, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 32, 0]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(1, 40), (2, 32)]
*** center 5: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17784312963485718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287] ***
*** starting iteration: 2; err: [Inf, 0.17784312963485718, 0.1506894048494287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869] ***
*** starting iteration: 3; err: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478] ***
*** starting iteration: 4; err: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229] ***
*** starting iteration: 5; err: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229, 0.14335345711745323] ***
*** starting iteration: 6; err: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229, 0.14335345711745323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229, 0.14335345711745323, 0.14232853791490196] ***
*** starting iteration: 7; err: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229, 0.14335345711745323, 0.14232853791490196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229, 0.14335345711745323, 0.14232853791490196, 0.14193755633570254] ***
*** finished computation of 7 references, err: [Inf, 0.17784312963485718, 0.1506894048494287, 0.1485711369481869, 0.14732392978854478, 0.1456483486071229, 0.14335345711745323, 0.14232853791490196, 0.14193755633570254] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 5, 0]]
** centroid: 1, normalized-entropy: 0.32001486274754665, [(1, 81), (2, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 5, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 55), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [13, 66, 0]]
** centroid: 5, normalized-entropy: 0.6451006442088483, [(1, 13), (2, 66)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 59, 17]]
** centroid: 7, normalized-entropy: 0.7668379316856329, [(2, 59), (3, 17)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24598715845122934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813] ***
*** starting iteration: 2; err: [Inf, 0.24598715845122934, 0.19178502899035813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136] ***
*** starting iteration: 3; err: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312] ***
*** starting iteration: 4; err: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648] ***
*** starting iteration: 5; err: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648, 0.148317854615394] ***
*** starting iteration: 6; err: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648, 0.148317854615394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648, 0.148317854615394, 0.14595618604402988] ***
*** starting iteration: 7; err: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648, 0.148317854615394, 0.14595618604402988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648, 0.148317854615394, 0.14595618604402988, 0.14508053588867187] ***
*** finished computation of 7 references, err: [Inf, 0.24598715845122934, 0.19178502899035813, 0.17128808576241136, 0.16247493124101312, 0.15302970331115648, 0.148317854615394, 0.14595618604402988, 0.14508053588867187] ***
*** center 1: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 65, 0]]
** centroid: 2, normalized-entropy: 0.19364280468389852, [(1, 2), (2, 65)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 74, 19]]
** centroid: 3, normalized-entropy: 0.7304472862481346, [(2, 74), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 25, 0]]
** centroid: 4, normalized-entropy: 0.9690632527820694, [(1, 38), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 23, 0]]
** centroid: 5, normalized-entropy: 0.828797154590015, [(1, 65), (2, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19444691990688442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19444691990688442, 0.16265151860378682] ***
*** starting iteration: 2; err: [Inf, 0.19444691990688442, 0.16265151860378682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19444691990688442, 0.16265151860378682, 0.14944582790881394] ***
*** starting iteration: 3; err: [Inf, 0.19444691990688442, 0.16265151860378682, 0.14944582790881394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19444691990688442, 0.16265151860378682, 0.14944582790881394, 0.14688039548695087] ***
*** starting iteration: 4; err: [Inf, 0.19444691990688442, 0.16265151860378682, 0.14944582790881394, 0.14688039548695087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19444691990688442, 0.16265151860378682, 0.14944582790881394, 0.14688039548695087, 0.14629529697075486] ***
*** finished computation of 7 references, err: [Inf, 0.19444691990688442, 0.16265151860378682, 0.14944582790881394, 0.14688039548695087, 0.14629529697075486] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 11, 0]]
** centroid: 1, normalized-entropy: 0.5869185834047994, [(1, 67), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 3, 0]]
** centroid: 2, normalized-entropy: 0.3013786435930858, [(1, 53), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 66, 19]]
** centroid: 3, normalized-entropy: 0.7665599404543365, [(2, 66), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 70, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 24, 0]]
** centroid: 7, normalized-entropy: 0.8154224977821039, [(1, 71), (2, 24)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27458899569138884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156] ***
*** starting iteration: 2; err: [Inf, 0.27458899569138884, 0.18602928646840156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318] ***
*** starting iteration: 3; err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985] ***
*** starting iteration: 4; err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529] ***
*** starting iteration: 5; err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674] ***
*** starting iteration: 6; err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674, 0.15493949094600976] ***
*** starting iteration: 7; err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674, 0.15493949094600976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674, 0.15493949094600976, 0.1533495689565316] ***
*** starting iteration: 8; err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674, 0.15493949094600976, 0.1533495689565316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674, 0.15493949094600976, 0.1533495689565316, 0.1527491141408682] ***
*** finished computation of 7 references, err: [Inf, 0.27458899569138884, 0.18602928646840156, 0.1790304271951318, 0.17290595436654985, 0.1651797282807529, 0.15840607201773674, 0.15493949094600976, 0.1533495689565316, 0.1527491141408682] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 28, 0]]
** centroid: 1, normalized-entropy: 0.8403586716091169, [(1, 76), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 92, 19]]
** centroid: 2, normalized-entropy: 0.6603769229926888, [(2, 92), (3, 19)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 48, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 19, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 38), (2, 19)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 2, 0]]
** centroid: 7, normalized-entropy: 0.2623112196143368, [(1, 43), (2, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1944192931300495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944192931300495, 0.1625022749863565] ***
*** starting iteration: 2; err: [Inf, 0.1944192931300495, 0.1625022749863565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536] ***
*** starting iteration: 3; err: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663] ***
*** starting iteration: 4; err: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663, 0.1481043573655188] ***
*** starting iteration: 5; err: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663, 0.1481043573655188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663, 0.1481043573655188, 0.14692073468118905] ***
*** starting iteration: 6; err: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663, 0.1481043573655188, 0.14692073468118905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663, 0.1481043573655188, 0.14692073468118905, 0.14623318441957237] ***
*** finished computation of 7 references, err: [Inf, 0.1944192931300495, 0.1625022749863565, 0.1537626765910536, 0.14980478803254663, 0.1481043573655188, 0.14692073468118905, 0.14623318441957237] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [84, 10, 0]]
** centroid: 1, normalized-entropy: 0.48890859144051524, [(1, 84), (2, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 21]]
** centroid: 3, normalized-entropy: 0.8812908992306927, [(2, 49), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [2, 79, 0]]
** centroid: 4, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 52, 0]]
** centroid: 5, normalized-entropy: 0.3712323266408756, [(1, 4), (2, 52)]
*** center 6: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17527368151582778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17527368151582778, 0.1556116547929123] ***
*** starting iteration: 2; err: [Inf, 0.17527368151582778, 0.1556116547929123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17527368151582778, 0.1556116547929123, 0.15259932802803813] ***
*** starting iteration: 3; err: [Inf, 0.17527368151582778, 0.1556116547929123, 0.15259932802803813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17527368151582778, 0.1556116547929123, 0.15259932802803813, 0.15167195283062757] ***
*** finished computation of 7 references, err: [Inf, 0.17527368151582778, 0.1556116547929123, 0.15259932802803813, 0.15167195283062757] ***
*** center 1: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [28, 37, 0]]
** centroid: 2, normalized-entropy: 0.9861260846302384, [(1, 28), (2, 37)]
*** center 3: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 70, 19]]
** centroid: 4, normalized-entropy: 0.748088105780153, [(2, 70), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 69, 0]]
** centroid: 5, normalized-entropy: 0.4021791902022729, [(1, 6), (2, 69)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [63, 12, 0]]
** centroid: 6, normalized-entropy: 0.634309554640566, [(1, 63), (2, 12)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [31, 17, 0]]
** centroid: 7, normalized-entropy: 0.9377342939868042, [(1, 31), (2, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2732510112710297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2732510112710297, 0.1776668879967183] ***
*** starting iteration: 2; err: [Inf, 0.2732510112710297, 0.1776668879967183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528] ***
*** starting iteration: 3; err: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096] ***
*** starting iteration: 4; err: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096, 0.15403875285526739] ***
*** starting iteration: 5; err: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096, 0.15403875285526739] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096, 0.15403875285526739, 0.1523895698543638] ***
*** starting iteration: 6; err: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096, 0.15403875285526739, 0.1523895698543638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096, 0.15403875285526739, 0.1523895698543638, 0.15149352891370654] ***
*** finished computation of 7 references, err: [Inf, 0.2732510112710297, 0.1776668879967183, 0.1645186790395528, 0.1564589948845096, 0.15403875285526739, 0.1523895698543638, 0.15149352891370654] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [24, 45, 0]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(1, 24), (2, 45)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 68, 19]]
** centroid: 4, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 37, 0]]
** centroid: 5, normalized-entropy: 0.6751914401458716, [(1, 8), (2, 37)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 38, 0]]
** centroid: 6, normalized-entropy: 0.9442529341277702, [(1, 67), (2, 38)]
*** center 7: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21180476945079862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21180476945079862, 0.16689989906642586] ***
*** starting iteration: 2; err: [Inf, 0.21180476945079862, 0.16689989906642586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863] ***
*** starting iteration: 3; err: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413] ***
*** starting iteration: 4; err: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413, 0.15351287136785685] ***
*** starting iteration: 5; err: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413, 0.15351287136785685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413, 0.15351287136785685, 0.1520571061614901] ***
*** starting iteration: 6; err: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413, 0.15351287136785685, 0.1520571061614901] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413, 0.15351287136785685, 0.1520571061614901, 0.1514605600805953] ***
*** finished computation of 7 references, err: [Inf, 0.21180476945079862, 0.16689989906642586, 0.1595896772313863, 0.15566661464050413, 0.15351287136785685, 0.1520571061614901, 0.1514605600805953] ***
*** center 1: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 19, 0]]
** centroid: 2, normalized-entropy: 0.7304472862481346, [(1, 74), (2, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [18, 37, 0]]
** centroid: 4, normalized-entropy: 0.9121156307204275, [(1, 18), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 48, 0]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(1, 16), (2, 48)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 36, 23]]
** centroid: 6, normalized-entropy: 0.9646900825612559, [(2, 36), (3, 23)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 45, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31408781390823426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196] ***
*** starting iteration: 2; err: [Inf, 0.31408781390823426, 0.20528102101106196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954] ***
*** starting iteration: 3; err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835] ***
*** starting iteration: 4; err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098] ***
*** starting iteration: 5; err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557] ***
*** starting iteration: 6; err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557, 0.15334392046183348] ***
*** starting iteration: 7; err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557, 0.15334392046183348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557, 0.15334392046183348, 0.15228731925413014] ***
*** starting iteration: 8; err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557, 0.15334392046183348, 0.15228731925413014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557, 0.15334392046183348, 0.15228731925413014, 0.15138331173872574] ***
*** finished computation of 7 references, err: [Inf, 0.31408781390823426, 0.20528102101106196, 0.18210692428424954, 0.16641924234246835, 0.15794563974440098, 0.15505644137761557, 0.15334392046183348, 0.15228731925413014, 0.15138331173872574] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [88, 14, 0]]
** centroid: 1, normalized-entropy: 0.577004250315725, [(1, 88), (2, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 16]]
** centroid: 3, normalized-entropy: 0.9321115676166747, [(2, 30), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [28, 34, 0]]
** centroid: 4, normalized-entropy: 0.9932338197397066, [(1, 28), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 4, 0]]
** centroid: 5, normalized-entropy: 0.2559300438391133, [(1, 89), (2, 4)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 47, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2310092955417931] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159] ***
*** starting iteration: 2; err: [Inf, 0.2310092955417931, 0.1812807286179159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394] ***
*** starting iteration: 3; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217] ***
*** starting iteration: 4; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768] ***
*** starting iteration: 5; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173] ***
*** starting iteration: 6; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712] ***
*** starting iteration: 7; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458] ***
*** starting iteration: 8; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458, 0.1467572284922935] ***
*** starting iteration: 9; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458, 0.1467572284922935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458, 0.1467572284922935, 0.14574956774618478] ***
*** starting iteration: 10; err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458, 0.1467572284922935, 0.14574956774618478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458, 0.1467572284922935, 0.14574956774618478, 0.14531356804911047] ***
*** finished computation of 7 references, err: [Inf, 0.2310092955417931, 0.1812807286179159, 0.16000508953258394, 0.15567142248526217, 0.15352718421071768, 0.15209929211065173, 0.15062346425093712, 0.14885000025108458, 0.1467572284922935, 0.14574956774618478, 0.14531356804911047] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [56, 12, 0]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(1, 56), (2, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [20, 55, 0]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(1, 20), (2, 55)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 84, 14]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 84), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [39, 36, 0]]
** centroid: 5, normalized-entropy: 0.998845535995202, [(1, 39), (2, 36)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24190002725459636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24190002725459636, 0.18396646314207465] ***
*** starting iteration: 2; err: [Inf, 0.24190002725459636, 0.18396646314207465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095] ***
*** starting iteration: 3; err: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768] ***
*** starting iteration: 4; err: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768, 0.15491332874260844] ***
*** starting iteration: 5; err: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768, 0.15491332874260844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768, 0.15491332874260844, 0.15334559520910263] ***
*** starting iteration: 6; err: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768, 0.15491332874260844, 0.15334559520910263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768, 0.15491332874260844, 0.15334559520910263, 0.15261963771283626] ***
*** finished computation of 7 references, err: [Inf, 0.24190002725459636, 0.18396646314207465, 0.16559657705482095, 0.15798243044316768, 0.15491332874260844, 0.15334559520910263, 0.15261963771283626] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [27, 35, 0]]
** centroid: 1, normalized-entropy: 0.9879565014919159, [(1, 27), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 85, 14]]
** centroid: 2, normalized-entropy: 0.5879303728017198, [(2, 85), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 39, 0]]
** centroid: 3, normalized-entropy: 0.9352691398683568, [(1, 72), (2, 39)]
*** center 4: selecting labels [1] (freq >= 2) [from [55, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 32, 0]]
** centroid: 5, normalized-entropy: 0.9998182469603427, [(1, 31), (2, 32)]
*** center 6: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23613430704176425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23613430704176425, 0.17672070616669952] ***
*** starting iteration: 2; err: [Inf, 0.23613430704176425, 0.17672070616669952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185] ***
*** starting iteration: 3; err: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263] ***
*** starting iteration: 4; err: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263, 0.15627599954232574] ***
*** starting iteration: 5; err: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263, 0.15627599954232574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263, 0.15627599954232574, 0.1546841102130711] ***
*** starting iteration: 6; err: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263, 0.15627599954232574, 0.1546841102130711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263, 0.15627599954232574, 0.1546841102130711, 0.15388654929958284] ***
*** finished computation of 7 references, err: [Inf, 0.23613430704176425, 0.17672070616669952, 0.16511142012663185, 0.1596355360802263, 0.15627599954232574, 0.1546841102130711, 0.15388654929958284] ***
*** center 1: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 4, 0]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 1, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 14]]
** centroid: 4, normalized-entropy: 0.7973265101474423, [(2, 44), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 11, 0]]
** centroid: 5, normalized-entropy: 0.7522121733341471, [(1, 40), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [14, 61, 0]]
** centroid: 6, normalized-entropy: 0.6944460704939805, [(1, 14), (2, 61)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 64, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23269339797273278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23269339797273278, 0.15825691404845565] ***
*** starting iteration: 2; err: [Inf, 0.23269339797273278, 0.15825691404845565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493] ***
*** starting iteration: 3; err: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493, 0.14969602604582904] ***
*** starting iteration: 4; err: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493, 0.14969602604582904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493, 0.14969602604582904, 0.14830695392703638] ***
*** starting iteration: 5; err: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493, 0.14969602604582904, 0.14830695392703638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493, 0.14969602604582904, 0.14830695392703638, 0.14733053842233493] ***
*** finished computation of 7 references, err: [Inf, 0.23269339797273278, 0.15825691404845565, 0.1526156628150493, 0.14969602604582904, 0.14830695392703638, 0.14733053842233493] ***
*** center 1: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 3, 0]]
** centroid: 2, normalized-entropy: 0.2899860470332091, [(1, 56), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 37, 0]]
** centroid: 3, normalized-entropy: 0.9994433330902989, [(1, 35), (2, 37)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 83, 19]]
** centroid: 5, normalized-entropy: 0.6936126404300949, [(2, 83), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [69, 7, 0]]
** centroid: 6, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 64, 0]]
** centroid: 7, normalized-entropy: 0.4645149440905521, [(1, 7), (2, 64)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3037064969893545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697] ***
*** starting iteration: 2; err: [Inf, 0.3037064969893545, 0.17970473882369697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753] ***
*** starting iteration: 3; err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151] ***
*** starting iteration: 4; err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754] ***
*** starting iteration: 5; err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297] ***
*** starting iteration: 6; err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297, 0.1514166135173291] ***
*** starting iteration: 7; err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297, 0.1514166135173291] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297, 0.1514166135173291, 0.15030101278051733] ***
*** starting iteration: 8; err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297, 0.1514166135173291, 0.15030101278051733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297, 0.1514166135173291, 0.15030101278051733, 0.14949120324477552] ***
*** finished computation of 7 references, err: [Inf, 0.3037064969893545, 0.17970473882369697, 0.16212942561879753, 0.1573732668273151, 0.15532498800195754, 0.15315632857382297, 0.1514166135173291, 0.15030101278051733, 0.14949120324477552] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 84, 19]]
** centroid: 1, normalized-entropy: 0.6897501750585195, [(2, 84), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 28, 0]]
** centroid: 2, normalized-entropy: 0.995148095654003, [(1, 33), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [32, 45, 0]]
** centroid: 4, normalized-entropy: 0.9793399259567798, [(1, 32), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [51, 22, 0]]
** centroid: 5, normalized-entropy: 0.8829589691462253, [(1, 51), (2, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1934571325108409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1934571325108409, 0.15487633437104523] ***
*** starting iteration: 2; err: [Inf, 0.1934571325108409, 0.15487633437104523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1934571325108409, 0.15487633437104523, 0.14936482964269818] ***
*** starting iteration: 3; err: [Inf, 0.1934571325108409, 0.15487633437104523, 0.14936482964269818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1934571325108409, 0.15487633437104523, 0.14936482964269818, 0.1470930174123496] ***
*** starting iteration: 4; err: [Inf, 0.1934571325108409, 0.15487633437104523, 0.14936482964269818, 0.1470930174123496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1934571325108409, 0.15487633437104523, 0.14936482964269818, 0.1470930174123496, 0.14617377984616906] ***
*** finished computation of 7 references, err: [Inf, 0.1934571325108409, 0.15487633437104523, 0.14936482964269818, 0.1470930174123496, 0.14617377984616906] ***
*** center 1: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [11, 53, 0]]
** centroid: 2, normalized-entropy: 0.6619760641115651, [(1, 11), (2, 53)]
*** center 3: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [21, 56, 0]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(1, 21), (2, 56)]
*** center 5: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 74, 17]]
** centroid: 6, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2363838978856802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004] ***
*** starting iteration: 2; err: [Inf, 0.2363838978856802, 0.17568663845025004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193] ***
*** starting iteration: 3; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215] ***
*** starting iteration: 4; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072] ***
*** starting iteration: 5; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765] ***
*** starting iteration: 6; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843] ***
*** starting iteration: 7; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843, 0.15353064823523163] ***
*** starting iteration: 8; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843, 0.15353064823523163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843, 0.15353064823523163, 0.15251959471590817] ***
*** starting iteration: 9; err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843, 0.15353064823523163, 0.15251959471590817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843, 0.15353064823523163, 0.15251959471590817, 0.15208687696978448] ***
*** finished computation of 7 references, err: [Inf, 0.2363838978856802, 0.17568663845025004, 0.16745702219568193, 0.1625273866141215, 0.16002343651466072, 0.1576399585250765, 0.15528950440324843, 0.15353064823523163, 0.15251959471590817, 0.15208687696978448] ***
*** center 1: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [96, 24, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 96), (2, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 54, 14]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(2, 54), (3, 14)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 41, 4]]
** centroid: 4, normalized-entropy: 0.43275015878875417, [(2, 41), (3, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [50, 10, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 50), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 58, 0]]
** centroid: 7, normalized-entropy: 0.569190343735683, [(1, 9), (2, 58)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21382606197148563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21382606197148563, 0.16978203610051423] ***
*** starting iteration: 2; err: [Inf, 0.21382606197148563, 0.16978203610051423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262] ***
*** starting iteration: 3; err: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262, 0.14824382976815104] ***
*** starting iteration: 4; err: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262, 0.14824382976815104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262, 0.14824382976815104, 0.1467173829227686] ***
*** starting iteration: 5; err: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262, 0.14824382976815104, 0.1467173829227686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262, 0.14824382976815104, 0.1467173829227686, 0.14633474275516345] ***
*** finished computation of 7 references, err: [Inf, 0.21382606197148563, 0.16978203610051423, 0.1547860288033262, 0.14824382976815104, 0.1467173829227686, 0.14633474275516345] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 58, 0]]
** centroid: 1, normalized-entropy: 0.6868088934028034, [(1, 13), (2, 58)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 53, 24]]
** centroid: 3, normalized-entropy: 0.8951127210954559, [(2, 53), (3, 24)]
*** center 4: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 12, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 54), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [76, 2, 0]]
** centroid: 6, normalized-entropy: 0.17203694935311387, [(1, 76), (2, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2141235545091331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2141235545091331, 0.1742222559954971] ***
*** starting iteration: 2; err: [Inf, 0.2141235545091331, 0.1742222559954971] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696] ***
*** starting iteration: 3; err: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327] ***
*** starting iteration: 4; err: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327, 0.1506555477399379] ***
*** starting iteration: 5; err: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327, 0.1506555477399379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327, 0.1506555477399379, 0.14809800034947693] ***
*** starting iteration: 6; err: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327, 0.1506555477399379, 0.14809800034947693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327, 0.1506555477399379, 0.14809800034947693, 0.14717041540611536] ***
*** finished computation of 7 references, err: [Inf, 0.2141235545091331, 0.1742222559954971, 0.16336974920518696, 0.15547564679803327, 0.1506555477399379, 0.14809800034947693, 0.14717041540611536] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 77, 19]]
** centroid: 1, normalized-entropy: 0.7177418091697444, [(2, 77), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 36, 0]]
** centroid: 2, normalized-entropy: 0.9629004147713269, [(1, 57), (2, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [12, 66, 0]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(1, 12), (2, 66)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 6, 0]]
** centroid: 5, normalized-entropy: 0.46899559358928133, [(1, 54), (2, 6)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22415877059474587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22415877059474587, 0.1640497999591753] ***
*** starting iteration: 2; err: [Inf, 0.22415877059474587, 0.1640497999591753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189] ***
*** starting iteration: 3; err: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227] ***
*** starting iteration: 4; err: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227, 0.1539494410166517] ***
*** starting iteration: 5; err: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227, 0.1539494410166517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227, 0.1539494410166517, 0.15268835530616343] ***
*** starting iteration: 6; err: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227, 0.1539494410166517, 0.15268835530616343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227, 0.1539494410166517, 0.15268835530616343, 0.152050128582865] ***
*** finished computation of 7 references, err: [Inf, 0.22415877059474587, 0.1640497999591753, 0.1575946213370189, 0.15537869316153227, 0.1539494410166517, 0.15268835530616343, 0.152050128582865] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [63, 12, 0]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(1, 63), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 32, 0]]
** centroid: 2, normalized-entropy: 0.9555111232924128, [(1, 53), (2, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [22, 56, 0]]
** centroid: 4, normalized-entropy: 0.8582307926411409, [(1, 22), (2, 56)]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 53, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 35, 23]]
** centroid: 7, normalized-entropy: 0.9688977092243805, [(2, 35), (3, 23)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22384725656919183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22384725656919183, 0.17379698466137053] ***
*** starting iteration: 2; err: [Inf, 0.22384725656919183, 0.17379698466137053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738] ***
*** starting iteration: 3; err: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969] ***
*** starting iteration: 4; err: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969, 0.15154299824871123] ***
*** starting iteration: 5; err: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969, 0.15154299824871123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969, 0.15154299824871123, 0.14923555637709796] ***
*** starting iteration: 6; err: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969, 0.15154299824871123, 0.14923555637709796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969, 0.15154299824871123, 0.14923555637709796, 0.14861192514374852] ***
*** finished computation of 7 references, err: [Inf, 0.22384725656919183, 0.17379698466137053, 0.16359683630801738, 0.15755448583140969, 0.15154299824871123, 0.14923555637709796, 0.14861192514374852] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 7, 0]]
** centroid: 1, normalized-entropy: 0.40057554263664, [(1, 81), (2, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [8, 51, 0]]
** centroid: 3, normalized-entropy: 0.572580465623769, [(1, 8), (2, 51)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [20, 45, 0]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(1, 20), (2, 45)]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 55, 17]]
** centroid: 6, normalized-entropy: 0.7885131605379784, [(2, 55), (3, 17)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 42, 0]]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 373,3 => 35,1 => 592), Dict(2 => 382,3 => 33,1 => 585))
[ Info: ===== scores for single classifier: {"micro_f1":0.924,"precision":0.924,"recall":0.924,"macro_recall":0.9433719664086156,"macro_f1":0.8576916264682942,"accuracy":0.924,"class_f1":{"2":0.898936170212766,"3":0.717391304347826,"1":0.9567474048442908},"class_precision":{"2":0.9135135135135135,"3":0.559322033898305,"1":0.968476357267951},"class_recall":{"2":0.8848167539267016,"3":1.0,"1":0.9452991452991453}}
[ Info: ===== scores for 1: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9771169881117525,"macro_f1":0.9697036913873598,"accuracy":0.971,"class_f1":{"2":0.9613848202396804,"3":0.9705882352941176,"1":0.9771380186282811},"class_precision":{"2":0.978319783197832,"3":0.9428571428571428,"1":0.9681208053691275},"class_recall":{"2":0.9450261780104712,"3":1.0,"1":0.9863247863247864}}
[ Info: ===== scores for 5: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9641669751617395,"macro_f1":0.9437608423386247,"accuracy":0.965,"class_f1":{"2":0.9537648612945838,"3":0.9014084507042254,"1":0.9761092150170648},"class_precision":{"2":0.9626666666666667,"3":0.8421052631578947,"1":0.9744463373083475},"class_recall":{"2":0.9450261780104712,"3":0.9696969696969697,"1":0.9777777777777777}}
[ Info: ===== scores for 7: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9644697749409792,"macro_f1":0.9437878399299097,"accuracy":0.965,"class_f1":{"2":0.9538866930171278,"3":0.9014084507042254,"1":0.976068376068376},"class_precision":{"2":0.9602122015915119,"3":0.8421052631578947,"1":0.976068376068376},"class_recall":{"2":0.9476439790575916,"3":0.9696969696969697,"1":0.976068376068376}}
[ Info: ===== scores for 9: {"micro_f1":0.966,"precision":0.966,"recall":0.966,"macro_recall":0.9656451750692588,"macro_f1":0.9406570033519966,"accuracy":0.966,"class_f1":{"2":0.9553805774278215,"3":0.8888888888888888,"1":0.9777015437392794},"class_precision":{"2":0.9578947368421052,"3":0.8205128205128205,"1":0.9810671256454389},"class_recall":{"2":0.9528795811518325,"3":0.9696969696969697,"1":0.9743589743589743}}
[ Info: ===== scores for 11: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.978666785996629,"macro_f1":0.9483781966656254,"accuracy":0.97,"class_f1":{"2":0.9608355091383812,"3":0.9041095890410958,"1":0.9801894918173988},"class_precision":{"2":0.9583333333333334,"3":0.825,"1":0.9878472222222222},"class_recall":{"2":0.9633507853403142,"3":1.0,"1":0.9726495726495726}}
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.965, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.973,"k":3,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9708449781748212,"macro_f1":0.9664414761224291,"accuracy":0.973,"class_f1":{"2":0.9646133682830931,"3":0.955223880597015,"1":0.9794871794871794},"class_precision":{"2":0.9658792650918635,"3":0.9411764705882353,"1":0.9794871794871794},"class_recall":{"2":0.9633507853403142,"3":0.9696969696969697,"1":0.9794871794871794}}
Test Summary: | Pass  Total
AKNC          |    8      8
[175, 7, 2, 2, 4, 5, 19, 3, 8, 3, 4, 6, 5, 4, 1, 4, 1, 19, 7, 17, 14, 5, 12, 5, 26, 2, 6, 7, 25, 15, 7, 2, 10, 7, 5, 5, 2, 26, 1, 38, 1, 2, 3, 4, 26, 7, 6, 6, 26, 11, 8, 13, 3, 7, 6, 9, 4, 2, 12, 8, 28, 1, 4, 12, 4, 18, 42, 30, 4, 8, 1, 11, 8, 20, 21, 314, 10, 82, 14, 2, 12, 4, 3, 1, 6, 20, 31, 4, 14, 33, 2, 17, 12, 57, 55, 10, 13, 99, 18, 56, 55, 28, 4, 104, 23, 10, 29, 14, 650, 9, 3, 6, 13, 11, 4, 8, 62, 2, 1, 2, 14, 16, 77, 104, 53, 97, 31, 21, 8, 26, 21, 8, 5, 10, 140, 21, 23, 16, 3, 15, 13, 43, 117, 12, 3, 7, 156, 86, 21, 15, 6, 37, 32, 6, 23, 3, 131, 124, 13, 20, 19, 117, 19, 18, 145, 125, 11, 79, 35, 12, 20, 4, 54, 5, 15, 151, 47, 10, 16, 7, 7, 10, 6, 8, 5, 3, 36, 123, 29, 26, 1, 45, 7, 67, 19, 7, 7, 45, 6, 74, 27, 3, 10, 65, 14, 36, 168, 11, 50, 46, 16, 15, 10, 33, 17, 24, 288, 4, 127, 2, 1, 20, 63, 62, 16, 29, 11, 3, 47, 4, 12, 51, 35, 119, 17, 12, 8, 16, 57, 109, 5, 7, 3, 25, 26, 29, 8, 47, 49, 46, 21, 11, 3, 49, 39, 42, 58, 138, 51, 17, 1, 31, 171, 11, 61, 64, 14, 25, 6, 1, 3, 15, 10, 5, 31, 30, 29, 8, 31, 24, 10, 216, 11, 237, 24, 14, 4, 1, 27, 31, 8, 319, 1, 87, 3, 2, 2, 87, 168, 9]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6619999999999999, speedup = 0.2558910886777169, eval_ratio = 0.069233)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3695901537698411,"recall":0.3602430555555554,"f1":null,"seconds":0.00012419745326042175,"exhaustive_search_seconds":0.00035586580634117126,"evaluations":415.4921875,"distances_sum":1754.388818508306}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5737847222222219,"recall":0.5737847222222219,"f1":null,"seconds":0.00024815648794174194,"exhaustive_search_seconds":0.00035586580634117126,"evaluations":553.3984375,"distances_sum":1647.8705345288545}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6631944444444439,"recall":0.6631944444444439,"f1":0.6631944444444439,"seconds":0.00046735629439353943,"exhaustive_search_seconds":0.00035586580634117126,"evaluations":636.9296875,"distances_sum":1601.283558991628}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7430555555555548,"recall":0.7430555555555548,"f1":0.7430555555555548,"seconds":0.000322975218296051,"exhaustive_search_seconds":0.00035586580634117126,"evaluations":744.875,"distances_sum":1574.8626018355826}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7890624999999993,"recall":0.7890624999999993,"f1":0.7890624999999993,"seconds":0.00041255727410316467,"exhaustive_search_seconds":0.00035586580634117126,"evaluations":842.109375,"distances_sum":1563.2371554993847}
KCenters.DeloneInvIndex> reached performance {"precision":0.830729166666666,"recall":0.830729166666666,"f1":0.830729166666666,"seconds":0.0005750562995672226,"exhaustive_search_seconds":0.00035586580634117126,"evaluations":943.515625,"distances_sum":1552.1569631712314}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8460000000000001, speedup = 0.6326168502017667, eval_ratio = 0.096381)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
