Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rotations ──── v1.0.1
  Installed StaticArrays ─ v0.12.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [6038ab10] + Rotations v1.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [6038ab10] + Rotations v1.0.1
  [90137ffa] + StaticArrays v0.12.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing Rotations
Status `/tmp/jl_3i7lrp/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [f6369f11] ForwardDiff v0.10.10
  [6038ab10] Rotations v1.0.1
  [90137ffa] StaticArrays v0.12.3
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_3i7lrp/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [f6369f11] ForwardDiff v0.10.10
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [69de0a69] Parsers v1.0.4
  [6038ab10] Rotations v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 200933  200933
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:         | Pass  Total
Principal Value (MRP) | 2000   2000
Test Summary:                    | Pass  Total
Principal Value (UnitQuaternion) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                     | Pass  Total
Principal Value (Rotation Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
Test Summary:    | Pass  Total
Unit Quaternions |   70     70
Test Summary:              | Pass  Total
RodriguesParam basic tests |   23     23
Test Summary:   | Pass  Total
MRP basic tests |   23     23
Test Summary: | Pass  Total
kinematics    |    9      9
Test Summary:   | Pass  Total
Quaternion Maps |   35     35
Test Summary:  | Pass  Total
Rotation Error |   24     24
Test Summary: | Pass  Total
Deprecations  |    3      3
WARNING: using BenchmarkTools.params in module Main conflicts with an existing identifier.
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.9108177 seconds)
done (took 3.45425606 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.332219751 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.593214967 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.366749628 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.395210818 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.333008223 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.318045903 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.141626744 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.177113226 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.311681474 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.334405833 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.175113077 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.198790603 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.996382727 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.072984762 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.136440911 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.062074398 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.982655508 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.552912936 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.747614268 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.313475822 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.149713351 seconds)
done (took 27.449186469 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.301710372 seconds)
  (2/20) tuning "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 0.978149949 seconds)
  (3/20) tuning "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 1.253636987 seconds)
  (4/20) tuning "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 0.97635057 seconds)
  (5/20) tuning "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.892865957 seconds)
  (6/20) tuning "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.943416902 seconds)
  (7/20) tuning "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 0.985737007 seconds)
  (8/20) tuning "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 1.121570133 seconds)
  (9/20) tuning "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.007626991 seconds)
  (10/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.038926297 seconds)
  (11/20) tuning "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 1.070501619 seconds)
  (12/20) tuning "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.050902153 seconds)
  (13/20) tuning "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.072492977 seconds)
  (14/20) tuning "MRP{Float64} -> RotationVec{Float64}"...
  done (took 1.252418122 seconds)
  (15/20) tuning "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.269949382 seconds)
  (16/20) tuning "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.190873586 seconds)
  (17/20) tuning "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.246766512 seconds)
  (18/20) tuning "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.174936072 seconds)
  (19/20) tuning "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.293176153 seconds)
  (20/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.196888211 seconds)
done (took 22.977102416 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.067451694 seconds)
done (took 1.982795161 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.968619327 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.166777605 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.574493578 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.889097463 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.681288256 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.248418518 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.148192647 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.483554639 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.9948157 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.847401852 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.469597771 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.964249926 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.705997242 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.740607767 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.134827084 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.395386446 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.764316872 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.112469061 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.058117649 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.355016051 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.992929116 seconds)
done (took 39.49395034 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.31539862 seconds)
  (2/20) benchmarking "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.786928696 seconds)
  (3/20) benchmarking "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 2.033577244 seconds)
  (4/20) benchmarking "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.656881885 seconds)
  (5/20) benchmarking "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 1.231794572 seconds)
  (6/20) benchmarking "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.00772757 seconds)
  (7/20) benchmarking "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.764474007 seconds)
  (8/20) benchmarking "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 2.450558078 seconds)
  (9/20) benchmarking "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.304694153 seconds)
  (10/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.395229931 seconds)
  (11/20) benchmarking "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 0.864534221 seconds)
  (12/20) benchmarking "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.459982094 seconds)
  (13/20) benchmarking "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.519981287 seconds)
  (14/20) benchmarking "MRP{Float64} -> RotationVec{Float64}"...
  done (took 2.44510076 seconds)
  (15/20) benchmarking "RotationVec{Float64} -> MRP{Float64}"...
  done (took 2.518646649 seconds)
  (16/20) benchmarking "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 2.138230325 seconds)
  (17/20) benchmarking "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.430203471 seconds)
  (18/20) benchmarking "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.944724994 seconds)
  (19/20) benchmarking "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.798461169 seconds)
  (20/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 2.067573563 seconds)
done (took 35.010756227 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 9.743 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 67.475 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 65.843 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  36.884 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 64.393 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  43.390 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 67.178 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 66.325 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   20.768 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 65.324 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 66.094 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  41.704 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 49.939 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  38.344 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  25.203 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 65.617 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   20.070 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  40.872 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 50.549 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 64.519 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   20.414 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 64.055 ns

Group: Non-Euler conversions
UnitQuaternion{Float64} -> RotMatrix{3,Float64,9} 13.537 ns
UnitQuaternion{Float64} -> RotationVec{Float64}   42.138 ns
RotMatrix{3,Float64,9} -> RotationVec{Float64}    64.047 ns
UnitQuaternion{Float64} -> MRP{Float64}           2.769 ns
MRP{Float64} -> UnitQuaternion{Float64}           5.803 ns
UnitQuaternion{Float64} -> AngleAxis{Float64}     34.444 ns
RotMatrix{3,Float64,9} -> MRP{Float64}            40.277 ns
MRP{Float64} -> AngleAxis{Float64}                101.916 ns
MRP{Float64} -> RotMatrix{3,Float64,9}            35.128 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}      28.522 ns
AngleAxis{Float64} -> RotationVec{Float64}        2.911 ns
AngleAxis{Float64} -> UnitQuaternion{Float64}     17.988 ns
RotMatrix{3,Float64,9} -> UnitQuaternion{Float64} 36.418 ns
MRP{Float64} -> RotationVec{Float64}              105.555 ns
RotationVec{Float64} -> MRP{Float64}              106.542 ns
AngleAxis{Float64} -> MRP{Float64}                62.963 ns
RotationVec{Float64} -> RotMatrix{3,Float64,9}    86.360 ns
RotationVec{Float64} -> AngleAxis{Float64}        12.273 ns
RotationVec{Float64} -> UnitQuaternion{Float64}   57.581 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}      81.306 ns

    Testing Rotations tests passed 
