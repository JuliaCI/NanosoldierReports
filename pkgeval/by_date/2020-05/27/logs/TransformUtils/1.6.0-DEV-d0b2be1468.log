Julia Version 1.6.0-DEV.113
Commit d0b2be1468 (2020-05-27 16:33 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_2p04x3/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_2p04x3/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07011832342606887 -0.010491490800795403; 0.07011832342606887 0.0 0.21200196778936134; 0.010491490800795403 -0.21200196778936134 0.0])
dAA = so3([0.0 0.17534715332306938 0.008306640212672294; -0.17534715332306938 0.0 -0.04862200571996688; -0.008306640212672294 0.04862200571996688 0.0])
dAA = so3([0.0 0.10261666731496939 0.02683221593702402; -0.10261666731496939 0.0 -0.03477490180365158; -0.02683221593702402 0.03477490180365158 0.0])
dAA = Quaternion(0.9966176372525345, [-0.04942844085371122, 0.024081066312081182, 0.06107549915653417])
dAA = SO3([0.9986433936400678 -0.034710335324583876 0.03881449420904526; 0.024600196111859846 0.971482641175988 0.2358311010977664; -0.04589338394918269 -0.23455632695662215 0.9710186027024978])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9053538629958577 0.42461372246008644 -0.006129392879099272; -0.422132760039234 0.8983047677973525 -0.12187073912224794; -0.04624192535066179 0.11292356198390657 0.9925270542855397]), [-2.1200196778936133, -0.10491490800795403, 0.7011832342606887])
xj = SE3(SO3([0.9467425690234419 -0.3073292697795292 0.09605846103115923; 0.27538015339522404 0.9274243639708176 0.2530806595323859; -0.16686605141524818 -0.2131496400421683 0.9626645063753924]), [0.34774901803651576, 0.2683221593702402, -1.026166673149694])
Dx = SE3(SO3([0.7486062654083459 -0.659881498353875 -0.06438219879450122; 0.6305320822961656 0.6785438860752374 0.37683880886285687; -0.20498281046622213 -0.3226989352324551 0.9240386596962317]), [2.1565243139122297, 1.1880705849565474, -1.7750541164637257])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
