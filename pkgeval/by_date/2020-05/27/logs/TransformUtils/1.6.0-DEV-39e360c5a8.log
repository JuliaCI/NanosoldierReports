Julia Version 1.6.0-DEV.106
Commit 39e360c5a8 (2020-05-26 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Rix31v/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Rix31v/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07795159980131056 -0.028474256899327567; 0.07795159980131056 0.0 0.032907659303928936; 0.028474256899327567 -0.032907659303928936 0.0])
dAA = so3([0.0 0.10062453672793377 -0.059705623003434974; -0.10062453672793377 0.0 -0.06833199381717321; 0.059705623003434974 0.06833199381717321 0.0])
dAA = so3([0.0 0.025396671692126754 -0.05872180451784814; -0.025396671692126754 0.0 -0.06134276241595911; 0.05872180451784814 0.06134276241595911 0.0])
dAA = Quaternion(0.995709931163972, [-0.02442017797555741, 0.07853009157638587, -0.04240769512817863])
dAA = SO3([0.9971419879351278 -0.06226628557239436 0.04278744649775773; 0.05939024051447643 0.9960845228121189 0.06548605000903696; -0.046697486317938866 -0.06275773334952817 0.9969357109043768])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9576260870520111 0.23414999356476054 -0.16770825236426656; -0.2594058778585469 0.9542074030390473 -0.14898598094422816; 0.1251433894773934 0.18617736838590201 0.974513786239584]), [-0.3290765930392893, -0.28474256899327566, 0.7795159980131054])
xj = SE3(SO3([0.9017843027720928 0.18897523978956865 0.3886816563980419; -0.24220826423898303 0.9658168414960016 0.09237415989889339; -0.35793886071253767 -0.17744347671628394 0.9167298318275937]), [0.6134276241595911, -0.5872180451784814, -0.25396671692126754])
Dx = SE3(SO3([0.8816087383828299 -0.09177682430636792 0.4629719720752789; -0.08660424525369591 0.9328021717836187 0.3498282621798907; -0.46396738798225085 -0.34850699108626604 0.814418283226086]), [0.8516970120635018, -0.2603480743606057, -1.1201442831252106])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
