Julia Version 1.6.0-DEV.120
Commit 39fc4eec54 (2020-05-28 16:58 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_8z0lU2/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_8z0lU2/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.001375673056292979 -0.07743523376500903; -0.001375673056292979 0.0 0.05688149270828348; 0.07743523376500903 -0.05688149270828348 0.0])
dAA = so3([0.0 0.16003183242196678 -0.009409777461168993; -0.16003183242196678 0.0 0.07165818449803457; 0.009409777461168993 -0.07165818449803457 0.0])
dAA = so3([0.0 0.09073538979519927 0.14488193401207758; -0.09073538979519927 0.0 0.08282026016538878; -0.14488193401207758 -0.08282026016538878 0.0])
dAA = Quaternion(0.9990739619153, [0.013954979227124109, 0.017360174938520812, 0.03681170335287867])
dAA = SO3([0.9880939840579258 0.05899469904858672 0.14209118252974842; -0.04505598895755981 0.9940276993879534 -0.09939260892314264; -0.14710620832443425 0.0918071801857524 0.9848508542610647])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9209728978643466 0.38942645551416505 0.01248828030683246; -0.38527940311744296 0.9054546790758268 0.17807752714241773; 0.05804052836436729 -0.16881605339944902 0.983937212011935]), [-0.5688149270828348, -0.7743523376500903, -0.013756730562929788])
xj = SE3(SO3([0.9793567441615376 -0.18087413772964275 0.0902491770924855; 0.18699089824582707 0.9802340500650547 -0.06461896831642092; -0.0767774162011937 0.08016079711191812 0.9938206452714949]), [-0.8282026016538877, 1.4488193401207756, -0.9073538979519926])
Dx = SE3(SO3([0.8254610752461279 -0.5395915934795573 0.1656952790507286; 0.5636604697172889 0.8035879034648282 -0.19113700919258664; -0.030014798543250037 0.25117203994711246 0.9674769858850463]), [-1.1472961270993232, 2.062822322441768, -0.4865858967402418])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
