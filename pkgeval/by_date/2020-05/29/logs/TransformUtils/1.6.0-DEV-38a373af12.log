Julia Version 1.6.0-DEV.129
Commit 38a373af12 (2020-05-29 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_jnKQXm/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_jnKQXm/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0016382198487537797 0.03532980537454509; 0.0016382198487537797 0.0 -0.09730720934073728; -0.03532980537454509 0.09730720934073728 0.0])
dAA = so3([0.0 0.08776531442992638 -0.02044332158330894; -0.08776531442992638 0.0 -0.08364122450271949; 0.02044332158330894 0.08364122450271949 0.0])
dAA = so3([0.0 0.12518907113316452 -0.017447058465744018; -0.12518907113316452 0.0 0.07430476166421142; 0.017447058465744018 -0.07430476166421142 0.0])
dAA = Quaternion(0.9964726063186202, [0.03871573164880728, 0.01565021255845211, 0.07279084988066209])
dAA = SO3([0.9930880627090044 0.09590580951121308 -0.06766221550374754; -0.0901457604287122 0.9924147361624773 0.08358668150064157; 0.07516542810099527 -0.07690947373087 0.9942007298673818])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9748220464650216 0.210673089608311 -0.07306727749571523; -0.22127611688654708 0.954427363412146 -0.20026304717982943; 0.027547374128189507 0.21138887691888614 0.9770137588046617]), [0.9730720934073728, 0.35329805374545087, 0.016382198487537795])
xj = SE3(SO3([0.9315902010727839 -0.35005818539394 0.097974303283422; 0.3625762070466628 0.9141194342315379 -0.18145014203320073; -0.026042107227055914 0.2045603255739372 0.9785074766460701]), [-0.7430476166421142, -0.17447058465744017, -1.251890711331645])
Dx = SE3(SO3([0.8271878194349239 -0.5378821356244651 0.1626134052117492; 0.5368086274370252 0.8419545394830251 0.05430516506837896; -0.1661228728612436 0.04237170777761384 0.9851943105257639]), [-1.591066321152545, -1.1333558575296583, -1.0080353320100006])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
