Julia Version 1.6.0-DEV.129
Commit 38a373af12 (2020-05-29 17:04 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_6mLbfT/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_6mLbfT/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172333169680898
curgen: 20 fitness: 0.2172333169680898
curgen: 30 fitness: 0.2172333169680898
curgen: 40 fitness: 0.2172333169680898
curgen: 50 fitness: 0.2172333169680898
CoordinateCreature{Array{Float64,1}}([0.22263201914826533], -0.2172333169680898) 0.22263201914826533 -0.2172333169680898
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2571931700544487
curgen: 100 fitness: 3.2579856841724713
curgen: 150 fitness: 3.258031910188245
curgen: 200 fitness: 3.258200110249791
curgen: 250 fitness: 3.2583844283464103
curgen: 300 fitness: 3.2583930924634097
curgen: 350 fitness: 3.2583930924634097
curgen: 400 fitness: 3.2583930924634097
curgen: 450 fitness: 3.25840150996159
curgen: 500 fitness: 3.2584522910539433
CoordinateCreature{Array{Float64,1}}([-0.22233553193284786, -0.22265747354228546, -0.22245302067491604, -0.22248273107220215, -0.22239256514358366, -0.2226324306245623, 0.2228899267487404, 0.22203324214334352, 0.22241582263701798, 0.22212530124751673, 0.22262270951460894, -0.22191875148418969, -0.22229264093057635, -0.22255891108215137, 0.22271392147011845], -3.2584522910539433) [-0.22233553193284786, -0.22265747354228546, -0.22245302067491604, -0.22248273107220215, -0.22239256514358366, -0.2226324306245623, 0.2228899267487404, 0.22203324214334352, 0.22241582263701798, 0.22212530124751673, 0.22262270951460894, -0.22191875148418969, -0.22229264093057635, -0.22255891108215137, 0.22271392147011845] -3.2584522910539433
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0021691423898744233
curgen: 100 fitness: -0.00163995933115757
curgen: 150 fitness: -0.0016123953876672203
curgen: 200 fitness: -0.001564950496685924
curgen: 250 fitness: -0.001564950496685924
curgen: 300 fitness: -0.0013799818952691112
curgen: 350 fitness: -0.0009494895091677336
curgen: 400 fitness: -0.0009494895091677336
curgen: 450 fitness: -0.0009494895091677336
curgen: 500 fitness: -0.0009494895091677336
CoordinateCreature{Array{Float64,1}}([0.00014476179763589308, 0.0013734216297246866, 0.00023810590941732157, 0.0005283949816814876, 0.0002663086051971908, -7.965649770718156e-5, -1.9900996991626574e-5, 0.0007149351848929279, 0.0001303896907437832, -0.0005181901373415799, -0.00032363370367478623, 0.0009149594011435624, 0.0007982979817015728, -2.5537125614749796e-5, -0.00029776629246875764], 0.0009494895091677336) [0.00014476179763589308, 0.0013734216297246866, 0.00023810590941732157, 0.0005283949816814876, 0.0002663086051971908, -7.965649770718156e-5, -1.9900996991626574e-5, 0.0007149351848929279, 0.0001303896907437832, -0.0005181901373415799, -0.00032363370367478623, 0.0009149594011435624, 0.0007982979817015728, -2.5537125614749796e-5, -0.00029776629246875764] 0.0009494895091677336
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
