Julia Version 1.5.0-DEV.773
Commit e3f91bd494 (2020-05-01 17:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed LearnBase ─────────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed Parsers ───────────────────── v1.0.2
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Compat ────────────────────── v3.9.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataUtils ───────────────── v0.5.1
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataStructures ────────────── v0.17.15
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataFrames ────────────────── v0.20.2
  Installed JSON ──────────────────────── v0.21.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed MLDataPattern ─────────────── v0.5.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_2uCmHI/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_2uCmHI/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9316620069742203
[ Info: 0.8321307849884033
[ Info: 0.5547140726943811
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3276126202692588
mean(cdnet.distances) = 0.4231369428833326
mean(crand.distances) = 0.3261836222062508
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.52734375,"f1":null,"seconds":4.559755325317383e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.6328125,"distances_sum":1475.1674079933941}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3603515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3603515625,"f1":null,"seconds":3.647059202194214e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":5.7109375,"distances_sum":985.3193989929576}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5185546875, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5185546875,"f1":null,"seconds":4.298985004425049e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.453125,"distances_sum":1457.9588121336865}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.52734375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.52734375,"f1":null,"seconds":4.559755325317383e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.6328125,"distances_sum":1475.1674079933941}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8016556360306368,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.65625,"distances_sum":1889.5409355196978}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9244567932067936,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6171875,"distances_sum":2527.4919930745787}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7961561008436017,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.71875,"distances_sum":1901.2367047146024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.8783721486846493,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.34375,"distances_sum":2245.2312029074}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9244567932067936,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6171875,"distances_sum":2527.4919930745787}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157516,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8671875,"distances_sum":2863.5698159729654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9472527472527479,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7109375,"distances_sum":2737.8069672217825}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9531478937728942,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":2773.543413736408}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.948986950549451,"seconds":6.543472409248352e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":2741.848541312786}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9346840659340668,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6328125,"distances_sum":2633.1418579740575}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157516,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8671875,"distances_sum":2863.5698159729654}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681032509157516,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8671875,"distances_sum":2863.5698159729654}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":2.6132911443710327e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":4.25,"distances_sum":466.24873612086867}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1650390625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1650390625,"f1":null,"seconds":2.6132911443710327e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":4.25,"distances_sum":466.24873612086867}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1650390625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1650390625,"f1":null,"seconds":2.6132911443710327e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":4.25,"distances_sum":466.24873612086867}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.0137598514556885e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.53125,"distances_sum":668.7366955576105}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4482421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4482421875,"f1":null,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.390625,"distances_sum":984.9778332325124}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4482421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4482421875,"f1":null,"seconds":3.553926944732666e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":6.390625,"distances_sum":984.9778332325124}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5712890625,"f1":null,"seconds":4.017725586891174e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.0234375,"distances_sum":1263.0750805833525}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8690970487845495,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.0234375,"distances_sum":1896.2738055749837}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8690970487845495,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.0234375,"distances_sum":1896.2738055749837}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8951636904761913,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.53125,"distances_sum":2048.364078800708}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8708274364524372,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.09375,"distances_sum":1933.2790110849855}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8232421875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8951636904761913,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.53125,"distances_sum":2048.364078800708}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8232421875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8232421875,"f1":0.8951636904761913,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.53125,"distances_sum":2048.364078800708}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.685858412420913,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.796875,"distances_sum":1145.238343733556}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":5.5703125,"distances_sum":788.872744178563}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5390625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5390625,"f1":0.685858412420913,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.796875,"distances_sum":1145.238343733556}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7246189574314581,"seconds":4.108995199203491e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.984375,"distances_sum":1259.5566819954802}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9307577838827845,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.578125,"distances_sum":2133.4509892102415}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9192682317682322,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.515625,"distances_sum":2097.1949208296455}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8655511155511164,"seconds":4.820525646209717e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.7890625,"distances_sum":1754.221753404992}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9307577838827845,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.578125,"distances_sum":2133.4509892102415}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524038461538465,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7734375,"distances_sum":2346.8473888698877}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728823260073262,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2463.774786891621}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9562385531135538,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.78125,"distances_sum":2340.67275539418}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630093864468868,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8359375,"distances_sum":2407.5749985742023}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9330471611721619,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.609375,"distances_sum":2146.3551636684037}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728823260073262,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2463.774786891621}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9728823260073262,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2463.774786891621}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.80608297952048,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.5078125,"distances_sum":1505.152240226776}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8706335331335339,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.84375,"distances_sum":1772.7451872715906}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8706335331335339,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":7.84375,"distances_sum":1772.7451872715906}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8861352189477196,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.1328125,"distances_sum":1920.904741347662}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9201293498168505,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.390625,"distances_sum":2110.4185285644344}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9208078379953386,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.46875,"distances_sum":2128.403694461135}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.865234375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.865234375,"f1":0.9208078379953386,"seconds":5.392357707023621e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.46875,"distances_sum":2128.403694461135}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9506925366300372,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6953125,"distances_sum":2290.5175345377147}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9653331043956048,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8359375,"distances_sum":2389.278918657625}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9289007867132874,"seconds":5.541369318962097e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.515625,"distances_sum":2221.455126783002}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9448031135531144,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6953125,"distances_sum":2255.4126349068288}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9486893315018321,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.65625,"distances_sum":2289.369494834245}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9653331043956048,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8359375,"distances_sum":2389.278918657625}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9653331043956048,"seconds":5.8282166719436646e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8359375,"distances_sum":2389.278918657625}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8585570679320687,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9765625,"distances_sum":1701.2597671439655}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.421875,"distances_sum":551.1562430494047}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":5.390625,"distances_sum":545.3963552746976}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8585570679320687,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.9765625,"distances_sum":1701.2597671439655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9423420329670336,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.6953125,"distances_sum":2195.1276368543367}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9505437271062276,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7421875,"distances_sum":2267.7900780319096}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9505437271062276,"seconds":6.029382348060608e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.7421875,"distances_sum":2267.7900780319096}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9685096153846157,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8515625,"distances_sum":2389.651050130023}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960419788544789,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.8046875,"distances_sum":2338.50917900989}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9698520229770233,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":2395.5591040415075}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9698520229770233,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":2395.5591040415075}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9698520229770233,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.859375,"distances_sum":2395.5591040415075}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8032353063603074,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.9609375,"distances_sum":1478.577959822774}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7907618423243431,"seconds":4.891306161880493e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.8671875,"distances_sum":1444.7296353043164}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.685546875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.685546875,"f1":0.8032353063603074,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.9609375,"distances_sum":1478.577959822774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8861815268065275,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6640625,"distances_sum":1782.8453173804558}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8927832584082591,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6953125,"distances_sum":1862.7031006727937}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.938083791208792,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8515625,"distances_sum":2114.412898813774}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.875582230269731,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.1640625,"distances_sum":1775.1723429206495}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8916015625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8916015625,"f1":0.938083791208792,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8515625,"distances_sum":2114.412898813774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9412831959706965,"seconds":6.020069122314453e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.78125,"distances_sum":2188.6546007033207}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450434981684985,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.796875,"distances_sum":2181.784154835189}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633705,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2307.8202138153492}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665922619047622,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":2353.2725350332394}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633705,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2307.8202138153492}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9668383699633705,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.9296875,"distances_sum":2307.8202138153492}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8653133325008333,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9140625,"distances_sum":1734.4377317480369}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8127362221112229,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.65625,"distances_sum":1531.8295040069381}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8653133325008333,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9140625,"distances_sum":1734.4377317480369}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8873980186480196,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":1873.4127233618378}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8873980186480196,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":1873.4127233618378}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548420329670335,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2315.8683470088317}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9038352272727278,"seconds":5.070120096206665e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3359375,"distances_sum":1989.2825058691624}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9429060522810532,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6796875,"distances_sum":2223.5111730093913}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8914236804861813,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":1890.3723893366514}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8999432858807865,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2734375,"distances_sum":1932.8889928556341}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9548420329670335,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2315.8683470088317}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9548420329670335,"seconds":5.723908543586731e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.765625,"distances_sum":2315.8683470088317}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.38628888130188e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.828125,"distances_sum":845.7230437327756}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8179305069930077,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.9296875,"distances_sum":1648.772724529635}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7109375,"f1":0.8179305069930077,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.9296875,"distances_sum":1648.772724529635}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9059529012654022,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2079.6013250807464}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9059529012654022,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2079.6013250807464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9296188186813196,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.71875,"distances_sum":2190.611016732591}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9638221153846158,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2473.5528728086133}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9582303113553118,"seconds":5.237758159637451e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.765625,"distances_sum":2442.452911867132}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519605394605397,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8046875,"distances_sum":2388.512250194307}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638221153846158,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2473.5528728086133}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9638221153846158,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2473.5528728086133}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6064453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9855468749999999,"recall":0.6064453125,"f1":0.7419463349150854,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.078125,"distances_sum":1652.8564124181426}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.197265625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.197265625,"f1":null,"seconds":2.7101486921310425e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":4.421875,"distances_sum":621.4493620433128}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.490234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.97734375,"recall":0.490234375,"f1":null,"seconds":3.6191195249557495e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.1640625,"distances_sum":1297.315129945124}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6064453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9855468749999999,"recall":0.6064453125,"f1":0.7419463349150854,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.078125,"distances_sum":1652.8564124181426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.985630580357143,"recall":0.8984375,"f1":0.935653474130037,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7265625,"distances_sum":2797.588594035183}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9847656250000001,"recall":0.8173828125,"f1":0.888839545870796,"seconds":5.083158612251282e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5390625,"distances_sum":2356.916897601531}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.985649181547619,"recall":0.7236328125,"f1":0.8247499245546125,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.7890625,"distances_sum":2111.520710214503}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6162109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":0.9809895833333331,"recall":0.6162109375,"f1":0.7452693140193146,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.1953125,"distances_sum":1680.0640024224433}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":0.985630580357143,"recall":0.8984375,"f1":0.935653474130037,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7265625,"distances_sum":2797.588594035183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":10}, perf: {"precision":0.981742931547619,"recall":0.9296875,"f1":0.9518665579212456,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8984375,"distances_sum":2879.4929682492466}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.985537574404762,"recall":0.9150390625,"f1":0.9445265021436905,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.75,"distances_sum":2821.287556393279}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9861607142857144,"recall":0.9345703125,"f1":0.9574862637362639,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2920.2723370530525}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9861607142857144,"recall":0.9345703125,"f1":0.9574862637362639,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2920.2723370530525}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9861607142857144,"recall":0.9345703125,"f1":0.9574862637362639,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2920.2723370530525}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4599609375, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4599609375,"f1":0.6021475052725056,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9140625,"distances_sum":1113.1878100420383}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5078125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5078125,"f1":0.6584009740259745,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.1875,"distances_sum":1156.4129671159185}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4443359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4443359375,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.953125,"distances_sum":1069.1310710925113}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5078125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5078125,"f1":0.6584009740259745,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.1875,"distances_sum":1156.4129671159185}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9076184232434238,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5078125,"distances_sum":2368.78008591414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8831106393606402,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4296875,"distances_sum":2173.223931250176}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6964556277056283,"seconds":3.725290298461914e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.484375,"distances_sum":1284.8985285386248}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.864855457042958,"seconds":4.766508936882019e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.765625,"distances_sum":2071.439930854153}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7068193958818966,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5859375,"distances_sum":1365.6657321917771}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9076184232434238,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5078125,"distances_sum":2368.78008591414}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9549908424908429,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":2794.850737491596}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9543211996337001,"seconds":6.534159183502197e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2774.1258162341014}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.948391712454213,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.78125,"distances_sum":2707.764458642006}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596783424908429,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.84375,"distances_sum":2771.5975166658986}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596783424908429,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.84375,"distances_sum":2771.5975166658986}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596783424908429,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.84375,"distances_sum":2771.5975166658986}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5712890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5712890625,"f1":0.7093992812742818,"seconds":4.077330231666565e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":6.4296875,"distances_sum":1286.0419310156497}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7861076423576433,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3125,"distances_sum":1577.9980002592781}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.662109375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.662109375,"f1":0.7861076423576433,"seconds":4.338100552558899e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.3125,"distances_sum":1577.9980002592781}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8584998334998343,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.9609375,"distances_sum":1924.5041101326137}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8985696595071603,"seconds":5.073845386505127e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.234375,"distances_sum":2164.8867606237964}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9250145687645694,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.40625,"distances_sum":2375.1042062775896}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9250145687645694,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.40625,"distances_sum":2375.1042062775896}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9482772435897441,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.6953125,"distances_sum":2546.844538192813}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9512908966033969,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.765625,"distances_sum":2509.4273830892553}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644803113553118,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8203125,"distances_sum":2648.0612324536896}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671932234432239,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2662.3274097263475}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9612408424908427,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.78125,"distances_sum":2618.062860977238}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671932234432239,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2662.3274097263475}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9671932234432239,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2662.3274097263475}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.84375,"distances_sum":1312.6424401705035}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.302734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.302734375,"f1":null,"seconds":3.3080577850341797e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.328125,"distances_sum":744.7252965346669}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5673828125,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.5673828125,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.84375,"distances_sum":1312.6424401705035}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9248688811188818,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5390625,"distances_sum":2281.0697925857517}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9248688811188818,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.5390625,"distances_sum":2281.0697925857517}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615384615384619,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.875,"distances_sum":2557.8879166787533}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9782394688644691,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2716.405797899645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612580128205133,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8046875,"distances_sum":2564.7750000895353}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9782394688644691,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2716.405797899645}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9782394688644691,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":2716.405797899645}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6989016192141198,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.625,"distances_sum":1296.787758353063}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.6989016192141198,"seconds":3.874301910400391e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.625,"distances_sum":1296.787758353063}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.623046875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.623046875,"f1":0.7567666708291716,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.4921875,"distances_sum":1496.4370627673627}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.623046875,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.623046875,"f1":0.7567666708291716,"seconds":4.509463906288147e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.4921875,"distances_sum":1496.4370627673627}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":8,"bsize":4}, perf: {"precision":1.0,"recall":0.630859375,"f1":0.760768051393052,"seconds":4.53554093837738e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.46875,"distances_sum":1516.3435107828595}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.789066142191143,"seconds":4.291534423828125e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.640625,"distances_sum":1623.0378946649398}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9379006410256417,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.65625,"distances_sum":2493.430596945443}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9379006410256417,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.65625,"distances_sum":2493.430596945443}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9379006410256417,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.65625,"distances_sum":2493.430596945443}}, n: 9
mean(cfft.distances) = 0.7887269766766142
mean(cdnet.distances) = 0.36612463343862317
mean(crand.distances) = 0.33233862829886174
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8866666666666667
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8555555555555555
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8355555555555556
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8822222222222221
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.831111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9155555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9266666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8955555555555557
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.851111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8888888888888888
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9111111111111111
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.9266666666666666
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 1, 3, 1, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5783995875716209] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 8, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2813068509882165] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2813068509882165, 0.22312113731070324] ***
*** starting iteration: 2; err: [Inf, 0.2813068509882165, 0.22312113731070324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2813068509882165, 0.22312113731070324, 0.21369368407327133] ***
*** starting iteration: 3; err: [Inf, 0.2813068509882165, 0.22312113731070324, 0.21369368407327133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2813068509882165, 0.22312113731070324, 0.21369368407327133, 0.20182009935574802] ***
*** finished computation of 7 references, err: [Inf, 0.2813068509882165, 0.22312113731070324, 0.21369368407327133, 0.20182009935574802] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [75, 1, 0]]
** centroid: 1, normalized-entropy: 0.10106696361212422, [(1, 75), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [23, 37, 0]]
** centroid: 4, normalized-entropy: 0.9603622703154779, [(1, 23), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 63, 0]]
** centroid: 5, normalized-entropy: 0.9975025463691153, [(1, 56), (2, 63)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [85, 28, 0]]
** centroid: 6, normalized-entropy: 0.8077527023327313, [(1, 85), (2, 28)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 109, 24]]
** centroid: 7, normalized-entropy: 0.6810629511553796, [(2, 109), (3, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23837024041882965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23837024041882965, 0.2060044005169705] ***
*** starting iteration: 2; err: [Inf, 0.23837024041882965, 0.2060044005169705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23837024041882965, 0.2060044005169705, 0.19748544916468694] ***
*** starting iteration: 3; err: [Inf, 0.23837024041882965, 0.2060044005169705, 0.19748544916468694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23837024041882965, 0.2060044005169705, 0.19748544916468694, 0.19355804474418353] ***
*** finished computation of 7 references, err: [Inf, 0.23837024041882965, 0.2060044005169705, 0.19748544916468694, 0.19355804474418353] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [47, 18, 0]]
** centroid: 1, normalized-entropy: 0.8512243352621381, [(1, 47), (2, 18)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 100, 33]]
** centroid: 2, normalized-entropy: 0.8082852556793744, [(2, 100), (3, 33)]
*** center 3: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 37, 0]]
** centroid: 4, normalized-entropy: 0.90626268051371, [(1, 78), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 36, 0]]
** centroid: 5, normalized-entropy: 0.9927744539878083, [(1, 44), (2, 36)]
*** center 6: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [62, 32, 0]]
** centroid: 7, normalized-entropy: 0.9252253278054431, [(1, 62), (2, 32)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2863548802870928] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863548802870928, 0.21262870559460487] ***
*** starting iteration: 2; err: [Inf, 0.2863548802870928, 0.21262870559460487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863548802870928, 0.21262870559460487, 0.19979882767951784] ***
*** starting iteration: 3; err: [Inf, 0.2863548802870928, 0.21262870559460487, 0.19979882767951784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2863548802870928, 0.21262870559460487, 0.19979882767951784, 0.1972306527412389] ***
*** finished computation of 7 references, err: [Inf, 0.2863548802870928, 0.21262870559460487, 0.19979882767951784, 0.1972306527412389] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 34, 0]]
** centroid: 1, normalized-entropy: 0.9409217747114994, [(1, 61), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 67, 0]]
** centroid: 2, normalized-entropy: 0.9999604195271729, [(1, 68), (2, 67)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 19, 0]]
** centroid: 3, normalized-entropy: 0.748088105780153, [(1, 70), (2, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 119, 27]]
** centroid: 6, normalized-entropy: 0.6907473233179698, [(2, 119), (3, 27)]
*** center 7: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3277130682110876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3277130682110876, 0.2465617434581736] ***
*** finished computation of 3 references, err: [Inf, 0.3277130682110876, 0.2465617434581736] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [127, 85, 0]]
** centroid: 1, normalized-entropy: 0.9714997715831533, [(1, 127), (2, 85)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [277, 46, 0]]
** centroid: 2, normalized-entropy: 0.5905283423897523, [(1, 277), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 107, 24]]
** centroid: 3, normalized-entropy: 0.6870408064059199, [(2, 107), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31304988795835553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31304988795835553, 0.2630499787907908] ***
*** finished computation of 3 references, err: [Inf, 0.31304988795835553, 0.2630499787907908] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [13, 129, 33]]
** centroid: 1, normalized-entropy: 0.6667770418623992, [(1, 13), (2, 129), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [222, 94, 0]]
** centroid: 2, normalized-entropy: 0.8781741836599465, [(1, 222), (2, 94)]
*** center 3: selecting labels [1] (freq >= 2) [from [176, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3074810693146608] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3074810693146608, 0.2501074427974758] ***
*** finished computation of 3 references, err: [Inf, 0.3074810693146608, 0.2501074427974758] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [92, 111, 5]]
** centroid: 1, normalized-entropy: 0.7150556209153962, [(1, 92), (2, 111), (3, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [233, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [76, 128, 22]]
** centroid: 3, normalized-entropy: 0.8330798109760224, [(1, 76), (2, 128), (3, 22)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3918767563786145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544] ***
*** starting iteration: 2; err: [Inf, 0.3918767563786145, 0.23908519015756544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428] ***
*** starting iteration: 3; err: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706] ***
*** starting iteration: 4; err: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757] ***
*** starting iteration: 5; err: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757, 0.1975866565823432] ***
*** starting iteration: 6; err: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757, 0.1975866565823432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757, 0.1975866565823432, 0.19624602144119796] ***
*** starting iteration: 7; err: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757, 0.1975866565823432, 0.19624602144119796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757, 0.1975866565823432, 0.19624602144119796, 0.1954504591279996] ***
*** finished computation of 7 references, err: [Inf, 0.3918767563786145, 0.23908519015756544, 0.2093419196355428, 0.20248202289742706, 0.1989356583996757, 0.1975866565823432, 0.19624602144119796, 0.1954504591279996] ***
*** center 1: selecting labels [1] (freq >= 1) [from [139, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [23, 55, 0]]
** centroid: 3, normalized-entropy: 0.8749315876677922, [(1, 23), (2, 55)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 74, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 69, 24]]
** centroid: 5, normalized-entropy: 0.8238116333123173, [(2, 69), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [61, 10, 0]]
** centroid: 6, normalized-entropy: 0.5864477034453907, [(1, 61), (2, 10)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [96, 30, 0]]
** centroid: 7, normalized-entropy: 0.7918583525674836, [(1, 96), (2, 30)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25799334894815484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25799334894815484, 0.20320019915119103] ***
*** starting iteration: 2; err: [Inf, 0.25799334894815484, 0.20320019915119103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25799334894815484, 0.20320019915119103, 0.19573427243311814] ***
*** starting iteration: 3; err: [Inf, 0.25799334894815484, 0.20320019915119103, 0.19573427243311814] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25799334894815484, 0.20320019915119103, 0.19573427243311814, 0.19261453544087093] ***
*** starting iteration: 4; err: [Inf, 0.25799334894815484, 0.20320019915119103, 0.19573427243311814, 0.19261453544087093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25799334894815484, 0.20320019915119103, 0.19573427243311814, 0.19261453544087093, 0.19167811071396856] ***
*** finished computation of 7 references, err: [Inf, 0.25799334894815484, 0.20320019915119103, 0.19573427243311814, 0.19261453544087093, 0.19167811071396856] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 85, 0]]
** centroid: 2, normalized-entropy: 0.7024665512903904, [(1, 20), (2, 85)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 70, 33]]
** centroid: 3, normalized-entropy: 0.904803273542669, [(2, 70), (3, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [66, 16, 0]]
** centroid: 5, normalized-entropy: 0.7120640548905481, [(1, 66), (2, 16)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [87, 8, 0]]
** centroid: 6, normalized-entropy: 0.4168441963431652, [(1, 87), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [48, 44, 0]]
** centroid: 7, normalized-entropy: 0.9986359641585719, [(1, 48), (2, 44)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23729047923302768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23729047923302768, 0.20894883737677353] ***
*** starting iteration: 2; err: [Inf, 0.23729047923302768, 0.20894883737677353] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935] ***
*** starting iteration: 3; err: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935, 0.19874467661344575] ***
*** starting iteration: 4; err: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935, 0.19874467661344575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935, 0.19874467661344575, 0.19753534092171315] ***
*** starting iteration: 5; err: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935, 0.19874467661344575, 0.19753534092171315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935, 0.19874467661344575, 0.19753534092171315, 0.19662232450007097] ***
*** finished computation of 7 references, err: [Inf, 0.23729047923302768, 0.20894883737677353, 0.20162506277827935, 0.19874467661344575, 0.19753534092171315, 0.19662232450007097] ***
*** center 1: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [83, 29, 0]]
** centroid: 2, normalized-entropy: 0.8251252643746189, [(1, 83), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [41, 22, 0]]
** centroid: 3, normalized-entropy: 0.9333572600179806, [(1, 41), (2, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 33, 0]]
** centroid: 5, normalized-entropy: 0.9723594643683989, [(1, 49), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [38, 50, 0]]
** centroid: 6, normalized-entropy: 0.9865446300055647, [(1, 38), (2, 50)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 105, 27]]
** centroid: 7, normalized-entropy: 0.7309263775906009, [(2, 105), (3, 27)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1882528651326716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1882528651326716, 0.15774122545601907] ***
*** finished computation of 7 references, err: [Inf, 0.1882528651326716, 0.15774122545601907] ***
*** center 1: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 90, 24]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 90), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [1, 111, 0]]
** centroid: 3, normalized-entropy: 0.07360348308562395, [(1, 1), (2, 111)]
*** center 4: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [96, 34, 0]]
** centroid: 5, normalized-entropy: 0.829059069399666, [(1, 96), (2, 34)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 2, 0]]
** centroid: 6, normalized-entropy: 0.22536363912739493, [(1, 53), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [85, 1, 0]]
** centroid: 7, normalized-entropy: 0.09140162014739266, [(1, 85), (2, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2739006589687635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2739006589687635, 0.17431369606151373] ***
*** finished computation of 7 references, err: [Inf, 0.2739006589687635, 0.17431369606151373] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [104, 9, 0]]
** centroid: 1, normalized-entropy: 0.40093068188727266, [(1, 104), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [111, 40, 0]]
** centroid: 2, normalized-entropy: 0.8340518587929184, [(1, 111), (2, 40)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 163, 33]]
** centroid: 3, normalized-entropy: 0.6539562977963581, [(2, 163), (3, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [53, 11, 0]]
** centroid: 4, normalized-entropy: 0.6619760641115651, [(1, 53), (2, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2575812395634144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2575812395634144, 0.17034232803806104] ***
*** finished computation of 7 references, err: [Inf, 0.2575812395634144, 0.17034232803806104] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 40, 0]]
** centroid: 1, normalized-entropy: 0.9839393951635759, [(1, 54), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 28, 0]]
** centroid: 2, normalized-entropy: 0.9981341775041118, [(1, 31), (2, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [129, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 42, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 70, 27]]
** centroid: 6, normalized-entropy: 0.8531935252328874, [(2, 70), (3, 27)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [96, 59, 0]]
** centroid: 7, normalized-entropy: 0.9584964053930787, [(1, 96), (2, 59)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4390055664672374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4390055664672374, 0.3384409992055067] ***
*** starting iteration: 2; err: [Inf, 0.4390055664672374, 0.3384409992055067] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4390055664672374, 0.3384409992055067, 0.33771394818528994] ***
*** finished computation of 3 references, err: [Inf, 0.4390055664672374, 0.3384409992055067, 0.33771394818528994] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [74, 146, 24]]
** centroid: 1, normalized-entropy: 0.8167098010187233, [(1, 74), (2, 146), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [139, 87, 0]]
** centroid: 2, normalized-entropy: 0.9614670453912634, [(1, 139), (2, 87)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [191, 5, 0]]
** centroid: 3, normalized-entropy: 0.17134991233324484, [(1, 191), (2, 5)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3803044542435674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3803044542435674, 0.3350355535985782] ***
*** starting iteration: 2; err: [Inf, 0.3803044542435674, 0.3350355535985782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3803044542435674, 0.3350355535985782, 0.29377812416484017] ***
*** starting iteration: 3; err: [Inf, 0.3803044542435674, 0.3350355535985782, 0.29377812416484017] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3803044542435674, 0.3350355535985782, 0.29377812416484017, 0.28950747718540265] ***
*** starting iteration: 4; err: [Inf, 0.3803044542435674, 0.3350355535985782, 0.29377812416484017, 0.28950747718540265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3803044542435674, 0.3350355535985782, 0.29377812416484017, 0.28950747718540265, 0.2891292827346291] ***
*** finished computation of 3 references, err: [Inf, 0.3803044542435674, 0.3350355535985782, 0.29377812416484017, 0.28950747718540265, 0.2891292827346291] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [242, 30, 0]]
** centroid: 1, normalized-entropy: 0.5008024688653857, [(1, 242), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 158, 33]]
** centroid: 2, normalized-entropy: 0.6640133089215537, [(2, 158), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [169, 35, 0]]
** centroid: 3, normalized-entropy: 0.6612805854775594, [(1, 169), (2, 35)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40880525199559586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40880525199559586, 0.3245799545355063] ***
*** starting iteration: 2; err: [Inf, 0.40880525199559586, 0.3245799545355063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208] ***
*** starting iteration: 3; err: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208, 0.3033066524284846] ***
*** starting iteration: 4; err: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208, 0.3033066524284846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208, 0.3033066524284846, 0.30192286822235564] ***
*** starting iteration: 5; err: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208, 0.3033066524284846, 0.30192286822235564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208, 0.3033066524284846, 0.30192286822235564, 0.301599646260825] ***
*** finished computation of 3 references, err: [Inf, 0.40880525199559586, 0.3245799545355063, 0.3078209952782208, 0.3033066524284846, 0.30192286822235564, 0.301599646260825] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [3, 185, 27]]
** centroid: 1, normalized-entropy: 0.40913312589841133, [(1, 3), (2, 185), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [171, 45, 0]]
** centroid: 2, normalized-entropy: 0.7382848661434506, [(1, 171), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [227, 9, 0]]
** centroid: 3, normalized-entropy: 0.23367766110752564, [(1, 227), (2, 9)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2504278756538266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2504278756538266, 0.2340972467071122] ***
*** starting iteration: 2; err: [Inf, 0.2504278756538266, 0.2340972467071122] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2504278756538266, 0.2340972467071122, 0.23294035682046377] ***
*** starting iteration: 3; err: [Inf, 0.2504278756538266, 0.2340972467071122, 0.23294035682046377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2504278756538266, 0.2340972467071122, 0.23294035682046377, 0.23275596938898657] ***
*** finished computation of 3 references, err: [Inf, 0.2504278756538266, 0.2340972467071122, 0.23294035682046377, 0.23275596938898657] ***
*** center 1: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [91, 157, 24]]
** centroid: 2, normalized-entropy: 0.8171607855085363, [(1, 91), (2, 157), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [109, 81, 0]]
** centroid: 3, normalized-entropy: 0.9842769681502134, [(1, 109), (2, 81)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31080973032454234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31080973032454234, 0.2738806788001148] ***
*** starting iteration: 2; err: [Inf, 0.31080973032454234, 0.2738806788001148] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31080973032454234, 0.2738806788001148, 0.26930088900389904] ***
*** starting iteration: 3; err: [Inf, 0.31080973032454234, 0.2738806788001148, 0.26930088900389904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31080973032454234, 0.2738806788001148, 0.26930088900389904, 0.25277275719709213] ***
*** finished computation of 3 references, err: [Inf, 0.31080973032454234, 0.2738806788001148, 0.26930088900389904, 0.25277275719709213] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [158, 73, 0]]
** centroid: 1, normalized-entropy: 0.8999977383414969, [(1, 158), (2, 73)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [13, 150, 33]]
** centroid: 2, normalized-entropy: 0.6231706167948429, [(1, 13), (2, 150), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [240, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2538524443057479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2538524443057479, 0.24300451301082945] ***
*** starting iteration: 2; err: [Inf, 0.2538524443057479, 0.24300451301082945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2538524443057479, 0.24300451301082945, 0.24115085785976728] ***
*** starting iteration: 3; err: [Inf, 0.2538524443057479, 0.24300451301082945, 0.24115085785976728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2538524443057479, 0.24300451301082945, 0.24115085785976728, 0.24051606035449247] ***
*** finished computation of 3 references, err: [Inf, 0.2538524443057479, 0.24300451301082945, 0.24115085785976728, 0.24051606035449247] ***
*** center 1: selecting labels [1] (freq >= 2) [from [195, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 91, 1]]
** centroid: 2, normalized-entropy: 0.9863305454318128, [(1, 120), (2, 91)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [86, 148, 26]]
** centroid: 3, normalized-entropy: 0.8346383626930498, [(1, 86), (2, 148), (3, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43358178916401247] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43358178916401247, 0.302835730175759] ***
*** starting iteration: 2; err: [Inf, 0.43358178916401247, 0.302835730175759] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43358178916401247, 0.302835730175759, 0.29427598433585855] ***
*** starting iteration: 3; err: [Inf, 0.43358178916401247, 0.302835730175759, 0.29427598433585855] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43358178916401247, 0.302835730175759, 0.29427598433585855, 0.29250651931910365] ***
*** finished computation of 3 references, err: [Inf, 0.43358178916401247, 0.302835730175759, 0.29427598433585855, 0.29250651931910365] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [130, 60, 0]]
** centroid: 1, normalized-entropy: 0.8997437586982626, [(1, 130), (2, 60)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [3, 169, 24]]
** centroid: 2, normalized-entropy: 0.40862525118540793, [(1, 3), (2, 169), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [271, 9, 0]]
** centroid: 3, normalized-entropy: 0.2050268911596807, [(1, 271), (2, 9)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33387934801628116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33387934801628116, 0.29862513138097185] ***
*** starting iteration: 2; err: [Inf, 0.33387934801628116, 0.29862513138097185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33387934801628116, 0.29862513138097185, 0.2934355831173049] ***
*** starting iteration: 3; err: [Inf, 0.33387934801628116, 0.29862513138097185, 0.2934355831173049] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33387934801628116, 0.29862513138097185, 0.2934355831173049, 0.2925697355384546] ***
*** finished computation of 3 references, err: [Inf, 0.33387934801628116, 0.29862513138097185, 0.2934355831173049, 0.2925697355384546] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [150, 55, 0]]
** centroid: 1, normalized-entropy: 0.8390040613676978, [(1, 150), (2, 55)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [42, 168, 33]]
** centroid: 2, normalized-entropy: 0.755240502266786, [(1, 42), (2, 168), (3, 33)]
*** center 3: selecting labels [1] (freq >= 2) [from [219, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4014124010998136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4014124010998136, 0.3003635936077388] ***
*** starting iteration: 2; err: [Inf, 0.4014124010998136, 0.3003635936077388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4014124010998136, 0.3003635936077388, 0.29768170833565305] ***
*** starting iteration: 3; err: [Inf, 0.4014124010998136, 0.3003635936077388, 0.29768170833565305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4014124010998136, 0.3003635936077388, 0.29768170833565305, 0.2972650393184604] ***
*** finished computation of 3 references, err: [Inf, 0.4014124010998136, 0.3003635936077388, 0.29768170833565305, 0.2972650393184604] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [150, 54, 0]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(1, 150), (2, 54)]
*** center 2: selecting labels [1] (freq >= 2) [from [245, 1, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [6, 184, 27]]
** centroid: 3, normalized-entropy: 0.4536573333782383, [(1, 6), (2, 184), (3, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32457440399478105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32457440399478105, 0.27246030672962357] ***
*** starting iteration: 2; err: [Inf, 0.32457440399478105, 0.27246030672962357] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32457440399478105, 0.27246030672962357, 0.25938090148267223] ***
*** starting iteration: 3; err: [Inf, 0.32457440399478105, 0.27246030672962357, 0.25938090148267223] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32457440399478105, 0.27246030672962357, 0.25938090148267223, 0.2411876017725593] ***
*** finished computation of 3 references, err: [Inf, 0.32457440399478105, 0.27246030672962357, 0.25938090148267223, 0.2411876017725593] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [51, 191, 24]]
** centroid: 1, normalized-entropy: 0.7022851317333693, [(1, 51), (2, 191), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [213, 2, 0]]
** centroid: 2, normalized-entropy: 0.07613169094711808, [(1, 213), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [140, 45, 0]]
** centroid: 3, normalized-entropy: 0.8003922080453356, [(1, 140), (2, 45)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2740766079132927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2740766079132927, 0.23214454569950185] ***
*** starting iteration: 2; err: [Inf, 0.2740766079132927, 0.23214454569950185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2740766079132927, 0.23214454569950185, 0.22922440844195627] ***
*** starting iteration: 3; err: [Inf, 0.2740766079132927, 0.23214454569950185, 0.22922440844195627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2740766079132927, 0.23214454569950185, 0.22922440844195627, 0.22889716664086218] ***
*** finished computation of 3 references, err: [Inf, 0.2740766079132927, 0.23214454569950185, 0.22922440844195627, 0.22889716664086218] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 30, 0]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(1, 240), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [171, 32, 0]]
** centroid: 2, normalized-entropy: 0.6286227149906515, [(1, 171), (2, 32)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 161, 33]]
** centroid: 3, normalized-entropy: 0.6579405570568067, [(2, 161), (3, 33)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4181168671038331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4181168671038331, 0.262389080308523] ***
*** starting iteration: 2; err: [Inf, 0.4181168671038331, 0.262389080308523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4181168671038331, 0.262389080308523, 0.24095921486482091] ***
*** starting iteration: 3; err: [Inf, 0.4181168671038331, 0.262389080308523, 0.24095921486482091] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4181168671038331, 0.262389080308523, 0.24095921486482091, 0.2375560572518893] ***
*** finished computation of 3 references, err: [Inf, 0.4181168671038331, 0.262389080308523, 0.24095921486482091, 0.2375560572518893] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [221, 22, 0]]
** centroid: 1, normalized-entropy: 0.43825299234846865, [(1, 221), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 186, 27]]
** centroid: 2, normalized-entropy: 0.5484866088431741, [(2, 186), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [180, 31, 0]]
** centroid: 3, normalized-entropy: 0.6020771841510971, [(1, 180), (2, 31)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22440918830262535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440918830262535, 0.19285769088755925] ***
*** starting iteration: 2; err: [Inf, 0.22440918830262535, 0.19285769088755925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440918830262535, 0.19285769088755925, 0.18712501114866398] ***
*** starting iteration: 3; err: [Inf, 0.22440918830262535, 0.19285769088755925, 0.18712501114866398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22440918830262535, 0.19285769088755925, 0.18712501114866398, 0.18449086352117225] ***
*** finished computation of 7 references, err: [Inf, 0.22440918830262535, 0.19285769088755925, 0.18712501114866398, 0.18449086352117225] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [102, 8, 0]]
** centroid: 1, normalized-entropy: 0.37601985096927276, [(1, 102), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [92, 20, 0]]
** centroid: 2, normalized-entropy: 0.6769418697808861, [(1, 92), (2, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 61, 0]]
** centroid: 5, normalized-entropy: 0.9067816913292788, [(1, 29), (2, 61)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 72, 24]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 72), (3, 24)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2254904566005967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254904566005967, 0.19642236357417958] ***
*** starting iteration: 2; err: [Inf, 0.2254904566005967, 0.19642236357417958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254904566005967, 0.19642236357417958, 0.19302511006604875] ***
*** starting iteration: 3; err: [Inf, 0.2254904566005967, 0.19642236357417958, 0.19302511006604875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2254904566005967, 0.19642236357417958, 0.19302511006604875, 0.1912924610748552] ***
*** finished computation of 7 references, err: [Inf, 0.2254904566005967, 0.19642236357417958, 0.19302511006604875, 0.1912924610748552] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 38, 0]]
** centroid: 1, normalized-entropy: 0.9036488915053315, [(1, 81), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [112, 2, 0]]
** centroid: 2, normalized-entropy: 0.1274185117923586, [(1, 112), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 101, 0]]
** centroid: 5, normalized-entropy: 0.18857195602479668, [(1, 3), (2, 101)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [84, 20, 0]]
** centroid: 6, normalized-entropy: 0.7062740891876008, [(1, 84), (2, 20)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 62, 33]]
** centroid: 7, normalized-entropy: 0.9316958485118404, [(2, 62), (3, 33)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3641972543749919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3641972543749919, 0.23991502670088094] ***
*** starting iteration: 2; err: [Inf, 0.3641972543749919, 0.23991502670088094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3641972543749919, 0.23991502670088094, 0.20603770131421187] ***
*** starting iteration: 3; err: [Inf, 0.3641972543749919, 0.23991502670088094, 0.20603770131421187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3641972543749919, 0.23991502670088094, 0.20603770131421187, 0.20064428731634365] ***
*** finished computation of 7 references, err: [Inf, 0.3641972543749919, 0.23991502670088094, 0.20603770131421187, 0.20064428731634365] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 103, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [64, 8, 0]]
** centroid: 3, normalized-entropy: 0.5032583347756457, [(1, 64), (2, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [90, 47, 0]]
** centroid: 5, normalized-entropy: 0.927722194650164, [(1, 90), (2, 47)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 21, 0]]
** centroid: 6, normalized-entropy: 0.8918107543797084, [(1, 47), (2, 21)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 60, 27]]
** centroid: 7, normalized-entropy: 0.8935711016541908, [(2, 60), (3, 27)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4106053939919818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4106053939919818, 0.23560704381342182] ***
*** starting iteration: 2; err: [Inf, 0.4106053939919818, 0.23560704381342182] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4106053939919818, 0.23560704381342182, 0.2351962904024215] ***
*** finished computation of 3 references, err: [Inf, 0.4106053939919818, 0.23560704381342182, 0.2351962904024215] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [93, 128, 22]]
** centroid: 1, normalized-entropy: 0.8398899837297475, [(1, 93), (2, 128), (3, 22)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [121, 110, 2]]
** centroid: 2, normalized-entropy: 0.6694444988974737, [(1, 121), (2, 110), (3, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [190, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3403750237920831] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3403750237920831, 0.25173593428952135] ***
*** starting iteration: 2; err: [Inf, 0.3403750237920831, 0.25173593428952135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3403750237920831, 0.25173593428952135, 0.23527604178071715] ***
*** starting iteration: 3; err: [Inf, 0.3403750237920831, 0.25173593428952135, 0.23527604178071715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3403750237920831, 0.25173593428952135, 0.23527604178071715, 0.23145338705415536] ***
*** finished computation of 3 references, err: [Inf, 0.3403750237920831, 0.25173593428952135, 0.23527604178071715, 0.23145338705415536] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [21, 169, 33]]
** centroid: 1, normalized-entropy: 0.651154535396135, [(1, 21), (2, 169), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [158, 54, 0]]
** centroid: 2, normalized-entropy: 0.8186691181065503, [(1, 158), (2, 54)]
*** center 3: selecting labels [1] (freq >= 2) [from [232, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41666649120637794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41666649120637794, 0.2375525984552869] ***
*** starting iteration: 2; err: [Inf, 0.41666649120637794, 0.2375525984552869] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41666649120637794, 0.2375525984552869, 0.23573941292556777] ***
*** starting iteration: 3; err: [Inf, 0.41666649120637794, 0.2375525984552869, 0.23573941292556777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41666649120637794, 0.2375525984552869, 0.23573941292556777, 0.23564630649939203] ***
*** finished computation of 3 references, err: [Inf, 0.41666649120637794, 0.2375525984552869, 0.23573941292556777, 0.23564630649939203] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [150, 54, 0]]
** centroid: 1, normalized-entropy: 0.8337649072106652, [(1, 150), (2, 54)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [5, 184, 27]]
** centroid: 2, normalized-entropy: 0.4402741665852796, [(1, 5), (2, 184), (3, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [246, 1, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38709149465759146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38709149465759146, 0.30128085341405225] ***
*** finished computation of 3 references, err: [Inf, 0.38709149465759146, 0.30128085341405225] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [187, 37, 0]]
** centroid: 1, normalized-entropy: 0.646555642918054, [(1, 187), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [217, 29, 0]]
** centroid: 2, normalized-entropy: 0.5232540732288675, [(1, 217), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 172, 24]]
** centroid: 3, normalized-entropy: 0.5363596511250623, [(2, 172), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40024855661777026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40024855661777026, 0.29766989644404607] ***
*** finished computation of 3 references, err: [Inf, 0.40024855661777026, 0.29766989644404607] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [243, 29, 0]]
** centroid: 1, normalized-entropy: 0.4896286970043675, [(1, 243), (2, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 129, 33]]
** centroid: 2, normalized-entropy: 0.7292739418449411, [(2, 129), (3, 33)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [168, 65, 0]]
** centroid: 3, normalized-entropy: 0.8540435057114422, [(1, 168), (2, 65)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41192289790895387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41192289790895387, 0.35953802509007154] ***
*** finished computation of 3 references, err: [Inf, 0.41192289790895387, 0.35953802509007154] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [136, 169, 27]]
** centroid: 1, normalized-entropy: 0.8313973399050881, [(1, 136), (2, 169), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [184, 10, 0]]
** centroid: 2, normalized-entropy: 0.29292995113885967, [(1, 184), (2, 10)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [81, 60, 0]]
** centroid: 3, normalized-entropy: 0.9839393951635759, [(1, 81), (2, 60)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33997879408904025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33997879408904025, 0.2349736980363928] ***
*** starting iteration: 2; err: [Inf, 0.33997879408904025, 0.2349736980363928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33997879408904025, 0.2349736980363928, 0.23285567393811704] ***
*** starting iteration: 3; err: [Inf, 0.33997879408904025, 0.2349736980363928, 0.23285567393811704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33997879408904025, 0.2349736980363928, 0.23285567393811704, 0.23282400522011895] ***
*** finished computation of 3 references, err: [Inf, 0.33997879408904025, 0.2349736980363928, 0.23285567393811704, 0.23282400522011895] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [84, 164, 24]]
** centroid: 1, normalized-entropy: 0.8029453294137634, [(1, 84), (2, 164), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [205, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [115, 74, 0]]
** centroid: 3, normalized-entropy: 0.9657826098552238, [(1, 115), (2, 74)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3276203860943464] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3276203860943464, 0.24582059960951957] ***
*** starting iteration: 2; err: [Inf, 0.3276203860943464, 0.24582059960951957] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3276203860943464, 0.24582059960951957, 0.2416599987275798] ***
*** starting iteration: 3; err: [Inf, 0.3276203860943464, 0.24582059960951957, 0.2416599987275798] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3276203860943464, 0.24582059960951957, 0.2416599987275798, 0.2409989530740046] ***
*** finished computation of 3 references, err: [Inf, 0.3276203860943464, 0.24582059960951957, 0.2416599987275798, 0.2409989530740046] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [108, 124, 31]]
** centroid: 1, normalized-entropy: 0.8847588288647082, [(1, 108), (2, 124), (3, 31)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [113, 99, 2]]
** centroid: 2, normalized-entropy: 0.6712839231667612, [(1, 113), (2, 99), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [190, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3065374627181593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3065374627181593, 0.25142925008405365] ***
*** starting iteration: 2; err: [Inf, 0.3065374627181593, 0.25142925008405365] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3065374627181593, 0.25142925008405365, 0.24139132202956184] ***
*** starting iteration: 3; err: [Inf, 0.3065374627181593, 0.25142925008405365, 0.24139132202956184] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3065374627181593, 0.25142925008405365, 0.24139132202956184, 0.2395004893135073] ***
*** starting iteration: 4; err: [Inf, 0.3065374627181593, 0.25142925008405365, 0.24139132202956184, 0.2395004893135073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3065374627181593, 0.25142925008405365, 0.24139132202956184, 0.2395004893135073, 0.23931353594521354] ***
*** finished computation of 3 references, err: [Inf, 0.3065374627181593, 0.25142925008405365, 0.24139132202956184, 0.2395004893135073, 0.23931353594521354] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [84, 165, 27]]
** centroid: 1, normalized-entropy: 0.8164892999362834, [(1, 84), (2, 165), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [129, 74, 0]]
** centroid: 2, normalized-entropy: 0.9463809171549198, [(1, 129), (2, 74)]
*** center 3: selecting labels [1] (freq >= 1) [from [188, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 14)
[0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9349888810966656
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.2642205783100267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2642205783100267, 0.20297792688286206] ***
*** starting iteration: 2; err: [Inf, 0.2642205783100267, 0.20297792688286206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896] ***
*** starting iteration: 3; err: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322] ***
*** starting iteration: 4; err: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322, 0.19356101160860611] ***
*** starting iteration: 5; err: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322, 0.19356101160860611] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322, 0.19356101160860611, 0.19249596805577432] ***
*** starting iteration: 6; err: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322, 0.19356101160860611, 0.19249596805577432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322, 0.19356101160860611, 0.19249596805577432, 0.19161988816478545] ***
*** finished computation of 7 references, err: [Inf, 0.2642205783100267, 0.20297792688286206, 0.19675875979114896, 0.19467855622298322, 0.19356101160860611, 0.19249596805577432, 0.19161988816478545] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 93, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 62, 23]]
** centroid: 2, normalized-entropy: 0.8423074510400833, [(2, 62), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [107, 36, 0]]
** centroid: 4, normalized-entropy: 0.8140372976396064, [(1, 107), (2, 36)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [31, 44, 0]]
** centroid: 6, normalized-entropy: 0.9782176659354249, [(1, 31), (2, 44)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [100, 3, 0]]
** centroid: 7, normalized-entropy: 0.18999075553626757, [(1, 100), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3156529035645424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157] ***
*** starting iteration: 2; err: [Inf, 0.3156529035645424, 0.2405635984740157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384] ***
*** starting iteration: 3; err: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818] ***
*** starting iteration: 4; err: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202] ***
*** starting iteration: 5; err: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202, 0.19378786753706712] ***
*** starting iteration: 6; err: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202, 0.19378786753706712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202, 0.19378786753706712, 0.19131778670241706] ***
*** starting iteration: 7; err: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202, 0.19378786753706712, 0.19131778670241706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202, 0.19378786753706712, 0.19131778670241706, 0.1904144397974461] ***
*** finished computation of 7 references, err: [Inf, 0.3156529035645424, 0.2405635984740157, 0.2259688879233384, 0.20385037969959818, 0.19765685217991202, 0.19378786753706712, 0.19131778670241706, 0.1904144397974461] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 57, 33]]
** centroid: 2, normalized-entropy: 0.9480782435939054, [(2, 57), (3, 33)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [134, 10, 0]]
** centroid: 4, normalized-entropy: 0.3638469981769295, [(1, 134), (2, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [118, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 53, 0]]
** centroid: 6, normalized-entropy: 0.6619760641115651, [(1, 11), (2, 53)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 34, 0]]
** centroid: 7, normalized-entropy: 0.9503376699710269, [(1, 58), (2, 34)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23282705823788935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23282705823788935, 0.1979314875761061] ***
*** starting iteration: 2; err: [Inf, 0.23282705823788935, 0.1979314875761061] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23282705823788935, 0.1979314875761061, 0.19590372501731454] ***
*** starting iteration: 3; err: [Inf, 0.23282705823788935, 0.1979314875761061, 0.19590372501731454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23282705823788935, 0.1979314875761061, 0.19590372501731454, 0.19540853430887034] ***
*** finished computation of 7 references, err: [Inf, 0.23282705823788935, 0.1979314875761061, 0.19590372501731454, 0.19540853430887034] ***
*** center 1: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 48, 0]]
** centroid: 3, normalized-entropy: 0.9940302114769566, [(1, 40), (2, 48)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [58, 26, 0]]
** centroid: 4, normalized-entropy: 0.8926230133850988, [(1, 58), (2, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [90, 6, 0]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(1, 90), (2, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 83, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 76, 27]]
** centroid: 7, normalized-entropy: 0.829952434172285, [(2, 76), (3, 27)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22821980390303373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363] ***
*** starting iteration: 2; err: [Inf, 0.22821980390303373, 0.18144617299479363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187] ***
*** starting iteration: 3; err: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032] ***
*** starting iteration: 4; err: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933] ***
*** starting iteration: 5; err: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933, 0.14950926078751953] ***
*** starting iteration: 6; err: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933, 0.14950926078751953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933, 0.14950926078751953, 0.14807144399346397] ***
*** starting iteration: 7; err: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933, 0.14950926078751953, 0.14807144399346397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933, 0.14950926078751953, 0.14807144399346397, 0.14745577108031055] ***
*** finished computation of 7 references, err: [Inf, 0.22821980390303373, 0.18144617299479363, 0.15761827304190187, 0.15315967275273032, 0.15170166395410933, 0.14950926078751953, 0.14807144399346397, 0.14745577108031055] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [12, 75, 0]]
** centroid: 1, normalized-entropy: 0.5787946246321198, [(1, 12), (2, 75)]
*** center 2: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [22, 79, 0]]
** centroid: 4, normalized-entropy: 0.756170148929897, [(1, 22), (2, 79)]
*** center 5: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [93, 19, 0]]
** centroid: 6, normalized-entropy: 0.6568871346605055, [(1, 93), (2, 19)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 65, 24]]
** centroid: 7, normalized-entropy: 0.8409805336163159, [(2, 65), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18736891086022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18736891086022, 0.15998605924771578] ***
*** starting iteration: 2; err: [Inf, 0.18736891086022, 0.15998605924771578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943] ***
*** starting iteration: 3; err: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943, 0.14962389412499416] ***
*** starting iteration: 4; err: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943, 0.14962389412499416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943, 0.14962389412499416, 0.1480727350518018] ***
*** starting iteration: 5; err: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943, 0.14962389412499416, 0.1480727350518018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943, 0.14962389412499416, 0.1480727350518018, 0.1472842409338305] ***
*** finished computation of 7 references, err: [Inf, 0.18736891086022, 0.15998605924771578, 0.15256935854845943, 0.14962389412499416, 0.1480727350518018, 0.1472842409338305] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [29, 67, 0]]
** centroid: 1, normalized-entropy: 0.8838226609360483, [(1, 29), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [82, 21, 0]]
** centroid: 2, normalized-entropy: 0.7296274178915987, [(1, 82), (2, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 43, 33]]
** centroid: 4, normalized-entropy: 0.9874750082985965, [(2, 43), (3, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [114, 7, 0]]
** centroid: 5, normalized-entropy: 0.3188554185210095, [(1, 114), (2, 7)]
*** center 6: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 84, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2199838067631124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199838067631124, 0.16836236726221765] ***
*** starting iteration: 2; err: [Inf, 0.2199838067631124, 0.16836236726221765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075] ***
*** starting iteration: 3; err: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075, 0.15305210458536422] ***
*** starting iteration: 4; err: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075, 0.15305210458536422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075, 0.15305210458536422, 0.15196128350346053] ***
*** starting iteration: 5; err: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075, 0.15305210458536422, 0.15196128350346053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075, 0.15305210458536422, 0.15196128350346053, 0.15142144056000764] ***
*** finished computation of 7 references, err: [Inf, 0.2199838067631124, 0.16836236726221765, 0.15548490261941075, 0.15305210458536422, 0.15196128350346053, 0.15142144056000764] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 43, 27]]
** centroid: 1, normalized-entropy: 0.9619780596506257, [(2, 43), (3, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [92, 8, 0]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(1, 92), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 22, 0]]
** centroid: 3, normalized-entropy: 0.6681273338436138, [(1, 104), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [6, 90, 0]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(1, 6), (2, 90)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [71, 9, 0]]
** centroid: 6, normalized-entropy: 0.5074109636646968, [(1, 71), (2, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9470098841356327, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 16
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9470098841356327, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.2256287466860502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786] ***
*** starting iteration: 2; err: [Inf, 0.2256287466860502, 0.1813928553982786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887] ***
*** starting iteration: 3; err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954] ***
*** starting iteration: 4; err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897] ***
*** starting iteration: 5; err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118] ***
*** starting iteration: 6; err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118, 0.14981038977046618] ***
*** starting iteration: 7; err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118, 0.14981038977046618] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118, 0.14981038977046618, 0.14816493041768888] ***
*** starting iteration: 8; err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118, 0.14981038977046618, 0.14816493041768888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118, 0.14981038977046618, 0.14816493041768888, 0.14721879121279707] ***
*** finished computation of 7 references, err: [Inf, 0.2256287466860502, 0.1813928553982786, 0.1675548176511887, 0.16002593142771954, 0.15601329026287897, 0.1520681818150118, 0.14981038977046618, 0.14816493041768888, 0.14721879121279707] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 27, 0]]
** centroid: 1, normalized-entropy: 0.826165427834159, [(1, 77), (2, 27)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 50, 0]]
** centroid: 4, normalized-entropy: 0.9970590569034106, [(1, 44), (2, 50)]
*** center 5: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [49, 57, 0]]
** centroid: 6, normalized-entropy: 0.9958873114590912, [(1, 49), (2, 57)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 104, 24]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(2, 104), (3, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20296245340447777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296245340447777, 0.1592651311506418] ***
*** starting iteration: 2; err: [Inf, 0.20296245340447777, 0.1592651311506418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214] ***
*** starting iteration: 3; err: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214, 0.1485034534505204] ***
*** starting iteration: 4; err: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214, 0.1485034534505204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214, 0.1485034534505204, 0.14659410322607233] ***
*** starting iteration: 5; err: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214, 0.1485034534505204, 0.14659410322607233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214, 0.1485034534505204, 0.14659410322607233, 0.14587163690804342] ***
*** finished computation of 7 references, err: [Inf, 0.20296245340447777, 0.1592651311506418, 0.15208695675323214, 0.1485034534505204, 0.14659410322607233, 0.14587163690804342] ***
*** center 1: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 96, 0]]
** centroid: 2, normalized-entropy: 0.0828365528136124, [(1, 1), (2, 96)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [77, 20, 0]]
** centroid: 3, normalized-entropy: 0.7341280428958428, [(1, 77), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 32, 0]]
** centroid: 4, normalized-entropy: 0.8939563962625153, [(1, 71), (2, 32)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 12, 0]]
** centroid: 6, normalized-entropy: 0.6051865766334207, [(1, 69), (2, 12)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 63, 33]]
** centroid: 7, normalized-entropy: 0.9283620723948678, [(2, 63), (3, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23197399334901053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127] ***
*** starting iteration: 2; err: [Inf, 0.23197399334901053, 0.16981812726533127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286] ***
*** starting iteration: 3; err: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574] ***
*** starting iteration: 4; err: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884] ***
*** starting iteration: 5; err: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884, 0.14939202125584972] ***
*** starting iteration: 6; err: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884, 0.14939202125584972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884, 0.14939202125584972, 0.1483226810097471] ***
*** starting iteration: 7; err: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884, 0.14939202125584972, 0.1483226810097471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884, 0.14939202125584972, 0.1483226810097471, 0.14767330986164187] ***
*** finished computation of 7 references, err: [Inf, 0.23197399334901053, 0.16981812726533127, 0.15749449642009286, 0.15290718743887574, 0.15080058271542884, 0.14939202125584972, 0.1483226810097471, 0.14767330986164187] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [109, 11, 0]]
** centroid: 1, normalized-entropy: 0.44200860222772487, [(1, 109), (2, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 41, 0]]
** centroid: 3, normalized-entropy: 0.9995910341890979, [(1, 43), (2, 41)]
*** center 4: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 75, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [74, 33, 0]]
** centroid: 6, normalized-entropy: 0.891330958407023, [(1, 74), (2, 33)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 79, 27]]
** centroid: 7, normalized-entropy: 0.8186691181065503, [(2, 79), (3, 27)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 17)
[0.9470098841356327, 0.9459699220178263, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.2069765020545723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2069765020545723, 0.17122667737433817] ***
*** starting iteration: 2; err: [Inf, 0.2069765020545723, 0.17122667737433817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2069765020545723, 0.17122667737433817, 0.15670418458383856] ***
*** starting iteration: 3; err: [Inf, 0.2069765020545723, 0.17122667737433817, 0.15670418458383856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2069765020545723, 0.17122667737433817, 0.15670418458383856, 0.15323631420826633] ***
*** finished computation of 7 references, err: [Inf, 0.2069765020545723, 0.17122667737433817, 0.15670418458383856, 0.15323631420826633] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 88, 0]]
** centroid: 1, normalized-entropy: 0.70700406497476, [(1, 21), (2, 88)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 81, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [86, 2, 0]]
** centroid: 3, normalized-entropy: 0.1564910629057016, [(1, 86), (2, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 37, 0]]
** centroid: 6, normalized-entropy: 0.8942376044259772, [(1, 82), (2, 37)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 30, 24]]
** centroid: 7, normalized-entropy: 0.9910760598382222, [(2, 30), (3, 24)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22017924090801297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017924090801297, 0.17445641726177225] ***
*** starting iteration: 2; err: [Inf, 0.22017924090801297, 0.17445641726177225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017924090801297, 0.17445641726177225, 0.1630963266895584] ***
*** starting iteration: 3; err: [Inf, 0.22017924090801297, 0.17445641726177225, 0.1630963266895584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017924090801297, 0.17445641726177225, 0.1630963266895584, 0.15914480618342222] ***
*** finished computation of 7 references, err: [Inf, 0.22017924090801297, 0.17445641726177225, 0.1630963266895584, 0.15914480618342222] ***
*** center 1: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 125, 33]]
** centroid: 3, normalized-entropy: 0.7392994727240026, [(2, 125), (3, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 45, 0]]
** centroid: 4, normalized-entropy: 0.9927744539878083, [(1, 55), (2, 45)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 39, 0]]
** centroid: 5, normalized-entropy: 0.8841151220488478, [(1, 90), (2, 39)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 14, 0]]
** centroid: 6, normalized-entropy: 0.577004250315725, [(1, 88), (2, 14)]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26334812439143146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26334812439143146, 0.18075458089523633] ***
*** starting iteration: 2; err: [Inf, 0.26334812439143146, 0.18075458089523633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26334812439143146, 0.18075458089523633, 0.15676994858284493] ***
*** starting iteration: 3; err: [Inf, 0.26334812439143146, 0.18075458089523633, 0.15676994858284493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26334812439143146, 0.18075458089523633, 0.15676994858284493, 0.15087303022590132] ***
*** finished computation of 7 references, err: [Inf, 0.26334812439143146, 0.18075458089523633, 0.15676994858284493, 0.15087303022590132] ***
*** center 1: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 6, 0]]
** centroid: 2, normalized-entropy: 0.39481484603049416, [(1, 71), (2, 6)]
*** center 3: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [93, 41, 0]]
** centroid: 4, normalized-entropy: 0.8884667902906952, [(1, 93), (2, 41)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 106, 27]]
** centroid: 5, normalized-entropy: 0.7279025051093644, [(2, 106), (3, 27)]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [29, 86, 0]]
** centroid: 7, normalized-entropy: 0.814705548656723, [(1, 29), (2, 86)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9470098841356327, 0.9459699220178263, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9189818561076045, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 18
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9470098841356327, 0.9459699220178263, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9189818561076045, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 18
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9470098841356327, 0.9459699220178263, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9189818561076045, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 18
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9470098841356327, 0.9459699220178263, 0.9410098721475967, 0.9349888810966656, 0.9330078581575587, 0.9309938681196166, 0.9189818561076045, 0.9040117962273652, 0.8999868131604659, 0.8980117842393293, 0.8950387513261765, 0.8870157582732433, 0.881992771214328, 0.855058651465837, 0.8299706892521264, 0.8260715805625986, 0.7789915664167161, 0.765163366959774]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9470098841356327
finished with 18
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2163192702375818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2163192702375818, 0.16984888204815798] ***
*** starting iteration: 2; err: [Inf, 0.2163192702375818, 0.16984888204815798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749] ***
*** starting iteration: 3; err: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248] ***
*** starting iteration: 4; err: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248, 0.15181087416200897] ***
*** starting iteration: 5; err: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248, 0.15181087416200897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248, 0.15181087416200897, 0.15077915358450264] ***
*** starting iteration: 6; err: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248, 0.15181087416200897, 0.15077915358450264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248, 0.15181087416200897, 0.15077915358450264, 0.15015581227326766] ***
*** finished computation of 7 references, err: [Inf, 0.2163192702375818, 0.16984888204815798, 0.1594936376651749, 0.15451295167580248, 0.15181087416200897, 0.15077915358450264, 0.15015581227326766] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [59, 73, 0]]
** centroid: 1, normalized-entropy: 0.9918703867024693, [(1, 59), (2, 73)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 84, 0]]
** centroid: 2, normalized-entropy: 0.7508446639457529, [(1, 23), (2, 84)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 70, 42]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 70), (3, 42)]
*** center 4: selecting labels [1] (freq >= 2) [from [164, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 97, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [146, 26, 0]]
** centroid: 7, normalized-entropy: 0.6127425554686624, [(1, 146), (2, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18272557723335922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18272557723335922, 0.16082075287774206] ***
*** starting iteration: 2; err: [Inf, 0.18272557723335922, 0.16082075287774206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996] ***
*** starting iteration: 3; err: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996, 0.15362900891155004] ***
*** starting iteration: 4; err: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996, 0.15362900891155004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996, 0.15362900891155004, 0.15258861880935728] ***
*** starting iteration: 5; err: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996, 0.15362900891155004, 0.15258861880935728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996, 0.15362900891155004, 0.15258861880935728, 0.1521358417327283] ***
*** finished computation of 7 references, err: [Inf, 0.18272557723335922, 0.16082075287774206, 0.15535761526226996, 0.15362900891155004, 0.15258861880935728, 0.1521358417327283] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [27, 57, 0]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(1, 27), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 34, 0]]
** centroid: 2, normalized-entropy: 0.9998393017810486, [(1, 33), (2, 34)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 50, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 23, 26]]
** centroid: 7, normalized-entropy: 0.9972943816462351, [(2, 23), (3, 26)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19928978888317941] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19928978888317941, 0.1609567905906588] ***
*** starting iteration: 2; err: [Inf, 0.19928978888317941, 0.1609567905906588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523] ***
*** starting iteration: 3; err: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775] ***
*** starting iteration: 4; err: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775, 0.15049577045440674] ***
*** starting iteration: 5; err: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775, 0.15049577045440674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775, 0.15049577045440674, 0.1494075329490006] ***
*** starting iteration: 6; err: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775, 0.15049577045440674, 0.1494075329490006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775, 0.15049577045440674, 0.1494075329490006, 0.1488383393343538] ***
*** finished computation of 7 references, err: [Inf, 0.19928978888317941, 0.1609567905906588, 0.1556311402786523, 0.15246968630328775, 0.15049577045440674, 0.1494075329490006, 0.1488383393343538] ***
*** center 1: selecting labels [1] (freq >= 2) [from [69, 1, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 8, 0]]
** centroid: 4, normalized-entropy: 0.446481346896803, [(1, 78), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 29, 21]]
** centroid: 5, normalized-entropy: 0.9814538950336533, [(2, 29), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 13, 0]]
** centroid: 6, normalized-entropy: 0.7039260680195971, [(1, 55), (2, 13)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 58, 0]]
** centroid: 7, normalized-entropy: 0.44886448872302936, [(1, 6), (2, 58)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2611721336208284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2611721336208284, 0.1795091756861657] ***
*** starting iteration: 2; err: [Inf, 0.2611721336208284, 0.1795091756861657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296] ***
*** starting iteration: 3; err: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296, 0.1489645158611238] ***
*** starting iteration: 4; err: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296, 0.1489645158611238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296, 0.1489645158611238, 0.14626303825620562] ***
*** starting iteration: 5; err: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296, 0.1489645158611238, 0.14626303825620562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296, 0.1489645158611238, 0.14626303825620562, 0.14546624500676988] ***
*** finished computation of 7 references, err: [Inf, 0.2611721336208284, 0.1795091756861657, 0.1549778110529296, 0.1489645158611238, 0.14626303825620562, 0.14546624500676988] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 90, 21]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(2, 90), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [18, 53, 0]]
** centroid: 3, normalized-entropy: 0.8168114277045246, [(1, 18), (2, 53)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 3, 0]]
** centroid: 4, normalized-entropy: 0.26377743669413856, [(1, 64), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 31, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 62), (2, 31)]
*** center 6: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20876143284142018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20876143284142018, 0.16700798468478023] ***
*** starting iteration: 2; err: [Inf, 0.20876143284142018, 0.16700798468478023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20876143284142018, 0.16700798468478023, 0.16050543688051402] ***
*** starting iteration: 3; err: [Inf, 0.20876143284142018, 0.16700798468478023, 0.16050543688051402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20876143284142018, 0.16700798468478023, 0.16050543688051402, 0.15847759488783777] ***
*** starting iteration: 4; err: [Inf, 0.20876143284142018, 0.16700798468478023, 0.16050543688051402, 0.15847759488783777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20876143284142018, 0.16700798468478023, 0.16050543688051402, 0.15847759488783777, 0.15777957140561194] ***
*** finished computation of 7 references, err: [Inf, 0.20876143284142018, 0.16700798468478023, 0.16050543688051402, 0.15847759488783777, 0.15777957140561194] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [29, 28, 0]]
** centroid: 1, normalized-entropy: 0.9997779672118906, [(1, 29), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 87, 18]]
** centroid: 2, normalized-entropy: 0.6609623351442084, [(2, 87), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 15, 0]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(1, 65), (2, 15)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 4, 0]]
** centroid: 5, normalized-entropy: 0.4021791902022729, [(1, 46), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 15, 0]]
** centroid: 6, normalized-entropy: 0.8739810481273581, [(1, 36), (2, 15)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [41, 31, 0]]
** centroid: 7, normalized-entropy: 0.9860400318404435, [(1, 41), (2, 31)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1764786024391651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764786024391651, 0.15055724755534902] ***
*** starting iteration: 2; err: [Inf, 0.1764786024391651, 0.15055724755534902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764786024391651, 0.15055724755534902, 0.1469809439443052] ***
*** starting iteration: 3; err: [Inf, 0.1764786024391651, 0.15055724755534902, 0.1469809439443052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764786024391651, 0.15055724755534902, 0.1469809439443052, 0.14561277422495186] ***
*** starting iteration: 4; err: [Inf, 0.1764786024391651, 0.15055724755534902, 0.1469809439443052, 0.14561277422495186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1764786024391651, 0.15055724755534902, 0.1469809439443052, 0.14561277422495186, 0.1449588470328599] ***
*** finished computation of 7 references, err: [Inf, 0.1764786024391651, 0.15055724755534902, 0.1469809439443052, 0.14561277422495186, 0.1449588470328599] ***
*** center 1: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [12, 67, 0]]
** centroid: 3, normalized-entropy: 0.6145715612236268, [(1, 12), (2, 67)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [55, 6, 0]]
** centroid: 4, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 46, 23]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 46), (3, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 51, 0]]
** centroid: 7, normalized-entropy: 0.23181305002459035, [(1, 2), (2, 51)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1881125118434429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1881125118434429, 0.14854294754751027] ***
*** starting iteration: 2; err: [Inf, 0.1881125118434429, 0.14854294754751027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1881125118434429, 0.14854294754751027, 0.1464567806813866] ***
*** starting iteration: 3; err: [Inf, 0.1881125118434429, 0.14854294754751027, 0.1464567806813866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1881125118434429, 0.14854294754751027, 0.1464567806813866, 0.14567816185299307] ***
*** finished computation of 7 references, err: [Inf, 0.1881125118434429, 0.14854294754751027, 0.1464567806813866, 0.14567816185299307] ***
*** center 1: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 44, 0]]
** centroid: 2, normalized-entropy: 0.8366407419411671, [(1, 16), (2, 44)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [70, 20, 0]]
** centroid: 4, normalized-entropy: 0.7642045065086204, [(1, 70), (2, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 61, 20]]
** centroid: 6, normalized-entropy: 0.8063495153650776, [(2, 61), (3, 20)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 42, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19197544332779945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19197544332779945, 0.15215563672594726] ***
*** starting iteration: 2; err: [Inf, 0.19197544332779945, 0.15215563672594726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19197544332779945, 0.15215563672594726, 0.14779959901422263] ***
*** starting iteration: 3; err: [Inf, 0.19197544332779945, 0.15215563672594726, 0.14779959901422263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19197544332779945, 0.15215563672594726, 0.14779959901422263, 0.14684809847828] ***
*** finished computation of 7 references, err: [Inf, 0.19197544332779945, 0.15215563672594726, 0.14779959901422263, 0.14684809847828] ***
*** center 1: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [73, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 15, 0]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(1, 54), (2, 15)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 69, 20]]
** centroid: 4, normalized-entropy: 0.7686913027030167, [(2, 69), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 22, 0]]
** centroid: 5, normalized-entropy: 0.7892712724536985, [(1, 71), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 72, 0]]
** centroid: 6, normalized-entropy: 0.24229218908241482, [(1, 3), (2, 72)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22691177478432656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564] ***
*** starting iteration: 2; err: [Inf, 0.22691177478432656, 0.1732411984675564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732] ***
*** starting iteration: 3; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915] ***
*** starting iteration: 4; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986] ***
*** starting iteration: 5; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898] ***
*** starting iteration: 6; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695] ***
*** starting iteration: 7; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695, 0.148568954016082] ***
*** starting iteration: 8; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695, 0.148568954016082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695, 0.148568954016082, 0.1469553440120071] ***
*** starting iteration: 9; err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695, 0.148568954016082, 0.1469553440120071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695, 0.148568954016082, 0.1469553440120071, 0.14608593711815773] ***
*** finished computation of 7 references, err: [Inf, 0.22691177478432656, 0.1732411984675564, 0.1639754602147732, 0.15987114806938915, 0.15557322338595986, 0.15284458139631898, 0.15037502865772695, 0.148568954016082, 0.1469553440120071, 0.14608593711815773] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 2, 0]]
** centroid: 1, normalized-entropy: 0.23519338181924157, [(1, 50), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [4, 61, 0]]
** centroid: 3, normalized-entropy: 0.33352200393097675, [(1, 4), (2, 61)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 56, 0]]
** centroid: 4, normalized-entropy: 0.8165187119538281, [(1, 19), (2, 56)]
*** center 5: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 53, 28]]
** centroid: 6, normalized-entropy: 0.9301497323974339, [(2, 53), (3, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2036567875444889] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543] ***
*** starting iteration: 2; err: [Inf, 0.2036567875444889, 0.17862168367905543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528] ***
*** starting iteration: 3; err: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757] ***
*** starting iteration: 4; err: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956] ***
*** starting iteration: 5; err: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956, 0.15090635329671204] ***
*** starting iteration: 6; err: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956, 0.15090635329671204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956, 0.15090635329671204, 0.14862447334267198] ***
*** starting iteration: 7; err: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956, 0.15090635329671204, 0.14862447334267198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956, 0.15090635329671204, 0.14862447334267198, 0.14817319441679866] ***
*** finished computation of 7 references, err: [Inf, 0.2036567875444889, 0.17862168367905543, 0.16378181803971528, 0.15756352426856757, 0.1540977976731956, 0.15090635329671204, 0.14862447334267198, 0.14817319441679866] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 51, 0]]
** centroid: 1, normalized-entropy: 0.6436394131461666, [(1, 10), (2, 51)]
*** center 2: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 20, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 40), (2, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [88, 1, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 35, 27]]
** centroid: 6, normalized-entropy: 0.9879565014919159, [(2, 35), (3, 27)]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2034946223516017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2034946223516017, 0.15665354927908628] ***
*** starting iteration: 2; err: [Inf, 0.2034946223516017, 0.15665354927908628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705] ***
*** starting iteration: 3; err: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705, 0.1476708768364042] ***
*** starting iteration: 4; err: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705, 0.1476708768364042] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705, 0.1476708768364042, 0.14657726867916063] ***
*** starting iteration: 5; err: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705, 0.1476708768364042, 0.14657726867916063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705, 0.1476708768364042, 0.14657726867916063, 0.14576161052286624] ***
*** finished computation of 7 references, err: [Inf, 0.2034946223516017, 0.15665354927908628, 0.1496200852887705, 0.1476708768364042, 0.14657726867916063, 0.14576161052286624] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 34, 0]]
** centroid: 1, normalized-entropy: 0.9624127354629922, [(1, 54), (2, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [27, 34, 0]]
** centroid: 3, normalized-entropy: 0.9904799742690307, [(1, 27), (2, 34)]
*** center 4: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [15, 61, 0]]
** centroid: 5, normalized-entropy: 0.7166336117927455, [(1, 15), (2, 61)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 55, 20]]
** centroid: 6, normalized-entropy: 0.8366407419411671, [(2, 55), (3, 20)]
*** center 7: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2966768846390769] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078] ***
*** starting iteration: 2; err: [Inf, 0.2966768846390769, 0.1879633573112078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283] ***
*** starting iteration: 3; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344] ***
*** starting iteration: 4; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468] ***
*** starting iteration: 5; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427] ***
*** starting iteration: 6; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367] ***
*** starting iteration: 7; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934] ***
*** starting iteration: 8; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934, 0.14934754299931227] ***
*** starting iteration: 9; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934, 0.14934754299931227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934, 0.14934754299931227, 0.14795558918640017] ***
*** starting iteration: 10; err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934, 0.14934754299931227, 0.14795558918640017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934, 0.14934754299931227, 0.14795558918640017, 0.14708675257582218] ***
*** finished computation of 7 references, err: [Inf, 0.2966768846390769, 0.1879633573112078, 0.17407122900197283, 0.16805758930463344, 0.16243289978988468, 0.15765216113254427, 0.15406292846426367, 0.1510163079313934, 0.14934754299931227, 0.14795558918640017, 0.14708675257582218] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 1, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 19]]
** centroid: 3, normalized-entropy: 0.9299429352091801, [(2, 36), (3, 19)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 55, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 54, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [27, 40, 0]]
** centroid: 7, normalized-entropy: 0.9726699911457106, [(1, 27), (2, 40)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22258782747201622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768] ***
*** starting iteration: 2; err: [Inf, 0.22258782747201622, 0.16745840926747768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253] ***
*** starting iteration: 3; err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784] ***
*** starting iteration: 4; err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402] ***
*** starting iteration: 5; err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705] ***
*** starting iteration: 6; err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705, 0.15124754460528492] ***
*** starting iteration: 7; err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705, 0.15124754460528492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705, 0.15124754460528492, 0.14937559575028717] ***
*** starting iteration: 8; err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705, 0.15124754460528492, 0.14937559575028717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705, 0.15124754460528492, 0.14937559575028717, 0.14865907580778004] ***
*** finished computation of 7 references, err: [Inf, 0.22258782747201622, 0.16745840926747768, 0.16011112771183253, 0.15798316530510784, 0.1562516871234402, 0.15374342199228705, 0.15124754460528492, 0.14937559575028717, 0.14865907580778004] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [59, 2, 0]]
** centroid: 1, normalized-entropy: 0.20818094555717087, [(1, 59), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 3, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [79, 22, 0]]
** centroid: 4, normalized-entropy: 0.756170148929897, [(1, 79), (2, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 55, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 54, 19]]
** centroid: 7, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21766476333513857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854] ***
*** starting iteration: 2; err: [Inf, 0.21766476333513857, 0.16871070367097854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008] ***
*** starting iteration: 3; err: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501] ***
*** starting iteration: 4; err: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715] ***
*** starting iteration: 5; err: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715, 0.1511479269983247] ***
*** starting iteration: 6; err: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715, 0.1511479269983247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715, 0.1511479269983247, 0.1497497179666534] ***
*** starting iteration: 7; err: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715, 0.1511479269983247, 0.1497497179666534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715, 0.1511479269983247, 0.1497497179666534, 0.14898613060638308] ***
*** finished computation of 7 references, err: [Inf, 0.21766476333513857, 0.16871070367097854, 0.1618237962462008, 0.1564842583043501, 0.15243789731757715, 0.1511479269983247, 0.1497497179666534, 0.14898613060638308] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [10, 62, 0]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(1, 10), (2, 62)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 55, 23]]
** centroid: 2, normalized-entropy: 0.8749315876677922, [(2, 55), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [29, 55, 0]]
** centroid: 3, normalized-entropy: 0.9297432191769048, [(1, 29), (2, 55)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [63, 4, 0]]
** centroid: 7, normalized-entropy: 0.32625881462949274, [(1, 63), (2, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18624516317248344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18624516317248344, 0.15419512986391784] ***
*** starting iteration: 2; err: [Inf, 0.18624516317248344, 0.15419512986391784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18624516317248344, 0.15419512986391784, 0.15055917810229585] ***
*** starting iteration: 3; err: [Inf, 0.18624516317248344, 0.15419512986391784, 0.15055917810229585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18624516317248344, 0.15419512986391784, 0.15055917810229585, 0.1491815842082724] ***
*** starting iteration: 4; err: [Inf, 0.18624516317248344, 0.15419512986391784, 0.15055917810229585, 0.1491815842082724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18624516317248344, 0.15419512986391784, 0.15055917810229585, 0.1491815842082724, 0.14851615953212605] ***
*** finished computation of 7 references, err: [Inf, 0.18624516317248344, 0.15419512986391784, 0.15055917810229585, 0.1491815842082724, 0.14851615953212605] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 31, 0]]
** centroid: 1, normalized-entropy: 0.9992954443621548, [(1, 33), (2, 31)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 14, 0]]
** centroid: 2, normalized-entropy: 0.6409441847875289, [(1, 72), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 23]]
** centroid: 3, normalized-entropy: 0.828797154590015, [(2, 65), (3, 23)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 4, 0]]
** centroid: 7, normalized-entropy: 0.3372900666170139, [(1, 60), (2, 4)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21199265700858086] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222] ***
*** starting iteration: 2; err: [Inf, 0.21199265700858086, 0.1671099139340222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193] ***
*** starting iteration: 3; err: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973] ***
*** starting iteration: 4; err: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112] ***
*** starting iteration: 5; err: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112, 0.1494867756748572] ***
*** starting iteration: 6; err: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112, 0.1494867756748572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112, 0.1494867756748572, 0.1484618741911836] ***
*** starting iteration: 7; err: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112, 0.1494867756748572, 0.1484618741911836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112, 0.1494867756748572, 0.1484618741911836, 0.14816336943954228] ***
*** finished computation of 7 references, err: [Inf, 0.21199265700858086, 0.1671099139340222, 0.1560655652792193, 0.1523859599865973, 0.15082980448380112, 0.1494867756748572, 0.1484618741911836, 0.14816336943954228] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 22]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 33), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [53, 13, 0]]
** centroid: 3, normalized-entropy: 0.7158259310602146, [(1, 53), (2, 13)]
*** center 4: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [66, 2, 0]]
** centroid: 6, normalized-entropy: 0.1914332548141934, [(1, 66), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [13, 59, 0]]
** centroid: 7, normalized-entropy: 0.6812908868842175, [(1, 13), (2, 59)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17964324666373432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497] ***
*** starting iteration: 2; err: [Inf, 0.17964324666373432, 0.1599299552971497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744] ***
*** starting iteration: 3; err: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089] ***
*** starting iteration: 4; err: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069] ***
*** starting iteration: 5; err: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069, 0.1510593653805554] ***
*** starting iteration: 6; err: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069, 0.1510593653805554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069, 0.1510593653805554, 0.14882833177037538] ***
*** starting iteration: 7; err: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069, 0.1510593653805554, 0.14882833177037538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069, 0.1510593653805554, 0.14882833177037538, 0.14820396596658975] ***
*** finished computation of 7 references, err: [Inf, 0.17964324666373432, 0.1599299552971497, 0.15718340889550744, 0.1557795584537089, 0.1538282938376069, 0.1510593653805554, 0.14882833177037538, 0.14820396596658975] ***
*** center 1: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 21, 27]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(2, 21), (3, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 19, 0]]
** centroid: 3, normalized-entropy: 0.8948692308065576, [(1, 42), (2, 19)]
*** center 4: selecting labels [2] (freq >= 2) [from [1, 66, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [92, 12, 0]]
** centroid: 6, normalized-entropy: 0.5159469300074472, [(1, 92), (2, 12)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 71, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1863692241832614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863692241832614, 0.1581266314908862] ***
*** starting iteration: 2; err: [Inf, 0.1863692241832614, 0.1581266314908862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863692241832614, 0.1581266314908862, 0.15106858983729035] ***
*** starting iteration: 3; err: [Inf, 0.1863692241832614, 0.1581266314908862, 0.15106858983729035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1863692241832614, 0.1581266314908862, 0.15106858983729035, 0.15045604174956678] ***
*** finished computation of 7 references, err: [Inf, 0.1863692241832614, 0.1581266314908862, 0.15106858983729035, 0.15045604174956678] ***
*** center 1: selecting labels [1] (freq >= 2) [from [108, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [15, 54, 0]]
** centroid: 2, normalized-entropy: 0.7553754125614286, [(1, 15), (2, 54)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 49, 17]]
** centroid: 3, normalized-entropy: 0.8230660790114689, [(2, 49), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 14, 0]]
** centroid: 4, normalized-entropy: 0.6235702082127973, [(1, 76), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 55, 0]]
** centroid: 5, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 6: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 7, 0]]
** centroid: 7, normalized-entropy: 0.4830306801456181, [(1, 60), (2, 7)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20471010032109915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20471010032109915, 0.15846580677479505] ***
*** starting iteration: 2; err: [Inf, 0.20471010032109915, 0.15846580677479505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20471010032109915, 0.15846580677479505, 0.1550039548035711] ***
*** starting iteration: 3; err: [Inf, 0.20471010032109915, 0.15846580677479505, 0.1550039548035711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20471010032109915, 0.15846580677479505, 0.1550039548035711, 0.15355633450113237] ***
*** starting iteration: 4; err: [Inf, 0.20471010032109915, 0.15846580677479505, 0.1550039548035711, 0.15355633450113237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20471010032109915, 0.15846580677479505, 0.1550039548035711, 0.15355633450113237, 0.15268030697666107] ***
*** finished computation of 7 references, err: [Inf, 0.20471010032109915, 0.15846580677479505, 0.1550039548035711, 0.15355633450113237, 0.15268030697666107] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 48, 3]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(2, 48), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [82, 10, 0]]
** centroid: 3, normalized-entropy: 0.49596907206183377, [(1, 82), (2, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [19, 36, 0]]
** centroid: 5, normalized-entropy: 0.9299429352091801, [(1, 19), (2, 36)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 51, 18]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(2, 51), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [34, 36, 0]]
** centroid: 7, normalized-entropy: 0.9994110647387552, [(1, 34), (2, 36)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16913011969253422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16913011969253422, 0.15348196824605112] ***
*** starting iteration: 2; err: [Inf, 0.16913011969253422, 0.15348196824605112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16913011969253422, 0.15348196824605112, 0.15130861672200263] ***
*** starting iteration: 3; err: [Inf, 0.16913011969253422, 0.15348196824605112, 0.15130861672200263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16913011969253422, 0.15348196824605112, 0.15130861672200263, 0.1499454967158381] ***
*** starting iteration: 4; err: [Inf, 0.16913011969253422, 0.15348196824605112, 0.15130861672200263, 0.1499454967158381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16913011969253422, 0.15348196824605112, 0.15130861672200263, 0.1499454967158381, 0.1492686957269907] ***
*** finished computation of 7 references, err: [Inf, 0.16913011969253422, 0.15348196824605112, 0.15130861672200263, 0.1499454967158381, 0.1492686957269907] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 53, 16]]
** centroid: 1, normalized-entropy: 0.7812812090702043, [(2, 53), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 2, 0]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(1, 56), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 16, 0]]
** centroid: 4, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 72, 1]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [55, 25, 0]]
** centroid: 6, normalized-entropy: 0.8960382325345574, [(1, 55), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 6, 0]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(1, 51), (2, 6)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.16462553378846495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16462553378846495, 0.14983281281031668] ***
*** starting iteration: 2; err: [Inf, 0.16462553378846495, 0.14983281281031668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.16462553378846495, 0.14983281281031668, 0.14915763978473842] ***
*** finished computation of 7 references, err: [Inf, 0.16462553378846495, 0.14983281281031668, 0.14915763978473842] ***
*** center 1: selecting labels [1] (freq >= 2) [from [42, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [36, 28, 0]]
** centroid: 2, normalized-entropy: 0.9886994082884974, [(1, 36), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [34, 31, 0]]
** centroid: 3, normalized-entropy: 0.9984628557283827, [(1, 34), (2, 31)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 71, 23]]
** centroid: 4, normalized-entropy: 0.8027381019527042, [(2, 71), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [30, 45, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 30), (2, 45)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25902157921390606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25902157921390606, 0.17217836616560817] ***
*** starting iteration: 2; err: [Inf, 0.25902157921390606, 0.17217836616560817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25902157921390606, 0.17217836616560817, 0.15332217321172356] ***
*** starting iteration: 3; err: [Inf, 0.25902157921390606, 0.17217836616560817, 0.15332217321172356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25902157921390606, 0.17217836616560817, 0.15332217321172356, 0.1478526977961883] ***
*** starting iteration: 4; err: [Inf, 0.25902157921390606, 0.17217836616560817, 0.15332217321172356, 0.1478526977961883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25902157921390606, 0.17217836616560817, 0.15332217321172356, 0.1478526977961883, 0.1472582328179851] ***
*** finished computation of 7 references, err: [Inf, 0.25902157921390606, 0.17217836616560817, 0.15332217321172356, 0.1478526977961883, 0.1472582328179851] ***
*** center 1: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 34, 0]]
** centroid: 2, normalized-entropy: 0.9409217747114994, [(1, 61), (2, 34)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 69, 0]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(1, 3), (2, 69)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [67, 8, 0]]
** centroid: 4, normalized-entropy: 0.48977901368693744, [(1, 67), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 5, 0]]
** centroid: 5, normalized-entropy: 0.4507913883546652, [(1, 48), (2, 5)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 68, 19]]
** centroid: 6, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19723358701355756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19723358701355756, 0.1591958609893918] ***
*** starting iteration: 2; err: [Inf, 0.19723358701355756, 0.1591958609893918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19723358701355756, 0.1591958609893918, 0.15500189107377083] ***
*** starting iteration: 3; err: [Inf, 0.19723358701355756, 0.1591958609893918, 0.15500189107377083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19723358701355756, 0.1591958609893918, 0.15500189107377083, 0.15385453797131776] ***
*** starting iteration: 4; err: [Inf, 0.19723358701355756, 0.1591958609893918, 0.15500189107377083, 0.15385453797131776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19723358701355756, 0.1591958609893918, 0.15500189107377083, 0.15385453797131776, 0.1536231580488384] ***
*** finished computation of 7 references, err: [Inf, 0.19723358701355756, 0.1591958609893918, 0.15500189107377083, 0.15385453797131776, 0.1536231580488384] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 48, 23]]
** centroid: 1, normalized-entropy: 0.9086185980409245, [(2, 48), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 23, 0]]
** centroid: 2, normalized-entropy: 0.7943466904341503, [(1, 73), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [30, 33, 0]]
** centroid: 4, normalized-entropy: 0.998363672593813, [(1, 30), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 17, 0]]
** centroid: 5, normalized-entropy: 0.7997594113291759, [(1, 53), (2, 17)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 54, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18158497655857356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18158497655857356, 0.15846847509220244] ***
*** starting iteration: 2; err: [Inf, 0.18158497655857356, 0.15846847509220244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18158497655857356, 0.15846847509220244, 0.15137698525283486] ***
*** starting iteration: 3; err: [Inf, 0.18158497655857356, 0.15846847509220244, 0.15137698525283486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18158497655857356, 0.15846847509220244, 0.15137698525283486, 0.14924446769058705] ***
*** starting iteration: 4; err: [Inf, 0.18158497655857356, 0.15846847509220244, 0.15137698525283486, 0.14924446769058705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18158497655857356, 0.15846847509220244, 0.15137698525283486, 0.14924446769058705, 0.1484295024704188] ***
*** finished computation of 7 references, err: [Inf, 0.18158497655857356, 0.15846847509220244, 0.15137698525283486, 0.14924446769058705, 0.1484295024704188] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 70, 22]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 70), (3, 22)]
*** center 2: selecting labels [2] (freq >= 2) [from [1, 66, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [50, 6, 0]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(1, 50), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 2, 0]]
** centroid: 4, normalized-entropy: 0.17556502585750275, [(1, 74), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [60, 3, 0]]
** centroid: 5, normalized-entropy: 0.2761954276479391, [(1, 60), (2, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [51, 36, 0]]
** centroid: 7, normalized-entropy: 0.9784493292686188, [(1, 51), (2, 36)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17189018499292433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17189018499292433, 0.1514865596741438] ***
*** starting iteration: 2; err: [Inf, 0.17189018499292433, 0.1514865596741438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17189018499292433, 0.1514865596741438, 0.14910284977033733] ***
*** starting iteration: 3; err: [Inf, 0.17189018499292433, 0.1514865596741438, 0.14910284977033733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17189018499292433, 0.1514865596741438, 0.14910284977033733, 0.14807905779965222] ***
*** starting iteration: 4; err: [Inf, 0.17189018499292433, 0.1514865596741438, 0.14910284977033733, 0.14807905779965222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17189018499292433, 0.1514865596741438, 0.14910284977033733, 0.14807905779965222, 0.14778874960169197] ***
*** finished computation of 7 references, err: [Inf, 0.17189018499292433, 0.1514865596741438, 0.14910284977033733, 0.14807905779965222, 0.14778874960169197] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [13, 54, 0]]
** centroid: 1, normalized-entropy: 0.709825885194168, [(1, 13), (2, 54)]
*** center 2: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 9, 0]]
** centroid: 3, normalized-entropy: 0.5074109636646968, [(1, 71), (2, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [61, 34, 0]]
** centroid: 6, normalized-entropy: 0.9409217747114994, [(1, 61), (2, 34)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 80, 18]]
** centroid: 7, normalized-entropy: 0.6880476235340797, [(2, 80), (3, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19693518258072437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733] ***
*** starting iteration: 2; err: [Inf, 0.19693518258072437, 0.16023031125962733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017] ***
*** starting iteration: 3; err: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845] ***
*** starting iteration: 4; err: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627] ***
*** starting iteration: 5; err: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627, 0.14625474971346558] ***
*** starting iteration: 6; err: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627, 0.14625474971346558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627, 0.14625474971346558, 0.14448729424364865] ***
*** starting iteration: 7; err: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627, 0.14625474971346558, 0.14448729424364865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627, 0.14625474971346558, 0.14448729424364865, 0.1438783039136324] ***
*** finished computation of 7 references, err: [Inf, 0.19693518258072437, 0.16023031125962733, 0.15379678423563017, 0.15222639977838845, 0.14890287956036627, 0.14625474971346558, 0.14448729424364865, 0.1438783039136324] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [38, 24, 0]]
** centroid: 1, normalized-entropy: 0.9629004147713269, [(1, 38), (2, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 99, 23]]
** centroid: 3, normalized-entropy: 0.6983747934875366, [(2, 99), (3, 23)]
*** center 4: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [40, 32, 0]]
** centroid: 6, normalized-entropy: 0.9910760598382222, [(1, 40), (2, 32)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [50, 19, 0]]
** centroid: 7, normalized-entropy: 0.849054424254048, [(1, 50), (2, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19139391399687156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19139391399687156, 0.15074460222385824] ***
*** starting iteration: 2; err: [Inf, 0.19139391399687156, 0.15074460222385824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19139391399687156, 0.15074460222385824, 0.14354261219128966] ***
*** starting iteration: 3; err: [Inf, 0.19139391399687156, 0.15074460222385824, 0.14354261219128966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19139391399687156, 0.15074460222385824, 0.14354261219128966, 0.14274603912048042] ***
*** finished computation of 7 references, err: [Inf, 0.19139391399687156, 0.15074460222385824, 0.14354261219128966, 0.14274603912048042] ***
*** center 1: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 30, 0]]
** centroid: 2, normalized-entropy: 0.9256859869821296, [(1, 58), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [8, 63, 0]]
** centroid: 3, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 69, 19]]
** centroid: 4, normalized-entropy: 0.7526269564427315, [(2, 69), (3, 19)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [64, 7, 0]]
** centroid: 6, normalized-entropy: 0.4645149440905521, [(1, 64), (2, 7)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21300679768063127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21300679768063127, 0.1695858685495332] ***
*** starting iteration: 2; err: [Inf, 0.21300679768063127, 0.1695858685495332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905] ***
*** starting iteration: 3; err: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683] ***
*** starting iteration: 4; err: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683, 0.15216767517663538] ***
*** starting iteration: 5; err: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683, 0.15216767517663538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683, 0.15216767517663538, 0.15111244959570466] ***
*** starting iteration: 6; err: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683, 0.15216767517663538, 0.15111244959570466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683, 0.15216767517663538, 0.15111244959570466, 0.15037389986030758] ***
*** finished computation of 7 references, err: [Inf, 0.21300679768063127, 0.1695858685495332, 0.15758282772637905, 0.1538035616725683, 0.15216767517663538, 0.15111244959570466, 0.15037389986030758] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 23, 0]]
** centroid: 1, normalized-entropy: 0.937456170782005, [(1, 42), (2, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 63, 0]]
** centroid: 2, normalized-entropy: 0.32625881462949274, [(1, 4), (2, 63)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 16, 25]]
** centroid: 3, normalized-entropy: 0.9649567669505686, [(2, 16), (3, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 5, 0]]
** centroid: 4, normalized-entropy: 0.3372900666170139, [(1, 75), (2, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 51, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [94, 8, 0]]
** centroid: 7, normalized-entropy: 0.3966277727783787, [(1, 94), (2, 8)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3005694728344679] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3005694728344679, 0.1610641137789935] ***
*** starting iteration: 2; err: [Inf, 0.3005694728344679, 0.1610641137789935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3005694728344679, 0.1610641137789935, 0.15459830276854336] ***
*** starting iteration: 3; err: [Inf, 0.3005694728344679, 0.1610641137789935, 0.15459830276854336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3005694728344679, 0.1610641137789935, 0.15459830276854336, 0.1539093773001805] ***
*** finished computation of 7 references, err: [Inf, 0.3005694728344679, 0.1610641137789935, 0.15459830276854336, 0.1539093773001805] ***
*** center 1: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [4, 58, 0]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(1, 4), (2, 58)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 71, 21]]
** centroid: 3, normalized-entropy: 0.7749672673267259, [(2, 71), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [84, 32, 0]]
** centroid: 4, normalized-entropy: 0.8497511372532974, [(1, 84), (2, 32)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [60, 14, 0]]
** centroid: 7, normalized-entropy: 0.699772221773307, [(1, 60), (2, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2132521395906806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444] ***
*** starting iteration: 2; err: [Inf, 0.2132521395906806, 0.1858414808800444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727] ***
*** starting iteration: 3; err: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037] ***
*** starting iteration: 4; err: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057] ***
*** starting iteration: 5; err: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057, 0.14774778178334236] ***
*** starting iteration: 6; err: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057, 0.14774778178334236] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057, 0.14774778178334236, 0.14549796432815493] ***
*** starting iteration: 7; err: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057, 0.14774778178334236, 0.14549796432815493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057, 0.14774778178334236, 0.14549796432815493, 0.14484687767922877] ***
*** finished computation of 7 references, err: [Inf, 0.2132521395906806, 0.1858414808800444, 0.1669814838608727, 0.15517112185806037, 0.1501858749818057, 0.14774778178334236, 0.14549796432815493, 0.14484687767922877] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 65, 20]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(2, 65), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 56, 0]]
** centroid: 2, normalized-entropy: 0.8701883352082787, [(1, 23), (2, 56)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [10, 51, 0]]
** centroid: 5, normalized-entropy: 0.6436394131461666, [(1, 10), (2, 51)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [54, 16, 0]]
** centroid: 6, normalized-entropy: 0.775512658133148, [(1, 54), (2, 16)]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17569472863152624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17569472863152624, 0.15582717921119182] ***
*** starting iteration: 2; err: [Inf, 0.17569472863152624, 0.15582717921119182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884] ***
*** starting iteration: 3; err: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884, 0.14929644113779067] ***
*** starting iteration: 4; err: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884, 0.14929644113779067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884, 0.14929644113779067, 0.14822382101416587] ***
*** starting iteration: 5; err: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884, 0.14929644113779067, 0.14822382101416587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884, 0.14929644113779067, 0.14822382101416587, 0.14755033095926046] ***
*** finished computation of 7 references, err: [Inf, 0.17569472863152624, 0.15582717921119182, 0.15157424470502884, 0.14929644113779067, 0.14822382101416587, 0.14755033095926046] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 20, 0]]
** centroid: 1, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 44, 18]]
** centroid: 2, normalized-entropy: 0.8691375806126381, [(2, 44), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 16, 0]]
** centroid: 3, normalized-entropy: 0.6623570516079519, [(1, 77), (2, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 60, 3]]
** centroid: 6, normalized-entropy: 0.2761954276479391, [(2, 60), (3, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [65, 25, 0]]
** centroid: 7, normalized-entropy: 0.8524051786494784, [(1, 65), (2, 25)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 350,3 => 42,1 => 608), Dict(2 => 370,3 => 43,1 => 587))
[ Info: ===== scores for single classifier: {"micro_f1":0.909,"precision":0.909,"recall":0.909,"macro_recall":0.9251547335933851,"macro_f1":0.8973416447100657,"accuracy":0.909,"class_f1":{"2":0.8761904761904762,"3":0.8842105263157894,"1":0.9316239316239315},"class_precision":{"2":0.8821917808219178,"3":0.8076923076923077,"1":0.934819897084048},"class_recall":{"2":0.8702702702702703,"3":0.9767441860465116,"1":0.9284497444633731}}
[ Info: ===== scores for 1: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9514422230954857,"macro_f1":0.9416707523153414,"accuracy":0.963,"class_f1":{"2":0.9500674763832658,"3":0.898876404494382,"1":0.976068376068376},"class_precision":{"2":0.9487870619946092,"3":0.8695652173913043,"1":0.9794168096054888},"class_recall":{"2":0.9513513513513514,"3":0.9302325581395349,"1":0.9727427597955707}}
[ Info: ===== scores for 5: {"micro_f1":0.957,"precision":0.957,"recall":0.957,"macro_recall":0.9610710587771719,"macro_f1":0.9416388732213751,"accuracy":0.957,"class_f1":{"2":0.9418132611637349,"3":0.9130434782608695,"1":0.9700598802395208},"class_precision":{"2":0.943089430894309,"3":0.8571428571428571,"1":0.9742268041237113},"class_recall":{"2":0.9405405405405406,"3":0.9767441860465116,"1":0.9659284497444633}}
[ Info: ===== scores for 7: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9665515600779656,"macro_f1":0.9430867262604977,"accuracy":0.954,"class_f1":{"2":0.9380053908355795,"3":0.924731182795699,"1":0.9665236051502146},"class_precision":{"2":0.9354838709677419,"3":0.86,"1":0.9740484429065744},"class_recall":{"2":0.9405405405405406,"3":1.0,"1":0.959114139693356}}
[ Info: ===== scores for 9: {"micro_f1":0.956,"precision":0.956,"recall":0.956,"macro_recall":0.969019445339718,"macro_f1":0.9416606682359858,"accuracy":0.956,"class_f1":{"2":0.9411764705882354,"3":0.9148936170212766,"1":0.9689119170984456},"class_precision":{"2":0.9312169312169312,"3":0.8431372549019608,"1":0.9824868651488616},"class_recall":{"2":0.9513513513513514,"3":1.0,"1":0.9557069846678024}}
[ Info: ===== scores for 11: {"micro_f1":0.96,"precision":0.96,"recall":0.96,"macro_recall":0.971956965483371,"macro_f1":0.9416645969260156,"accuracy":0.96,"class_f1":{"2":0.946524064171123,"3":0.9052631578947368,"1":0.9732065687121867},"class_precision":{"2":0.9365079365079365,"3":0.8269230769230769,"1":0.987719298245614},"class_recall":{"2":0.9567567567567568,"3":1.0,"1":0.959114139693356}}
(score = 0.961, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.96, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.956, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.956, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.963,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9514422230954857,"macro_f1":0.9416707523153414,"accuracy":0.963,"class_f1":{"2":0.9500674763832658,"3":0.898876404494382,"1":0.976068376068376},"class_precision":{"2":0.9487870619946092,"3":0.8695652173913043,"1":0.9794168096054888},"class_recall":{"2":0.9513513513513514,"3":0.9302325581395349,"1":0.9727427597955707}}
Test Summary: | Pass  Total
AKNC          |    8      8
[522, 1, 1, 1, 1, 2, 2, 3, 16, 1, 1, 6, 6, 1, 11, 19, 3, 11, 3, 2, 9, 3, 5, 12, 7, 27, 44, 11, 34, 2, 2, 7, 5, 5, 1, 7, 4, 3, 13, 11, 8, 10, 4, 5, 6, 3, 9, 3, 10, 5, 4, 2, 8, 15, 2, 6, 40, 19, 7, 3, 4, 35, 3, 34, 2, 6, 13, 4, 12, 6, 37, 101, 4, 43, 25, 8, 6, 24, 8, 13, 3, 105, 12, 21, 6, 2, 6, 5, 39, 2, 10, 10, 8, 16, 7, 40, 12, 2, 90, 33, 22, 11, 159, 32, 68, 3, 6, 31, 21, 3, 12, 8, 87, 9, 134, 6, 46, 8, 24, 31, 120, 51, 46, 21, 27, 34, 33, 17, 17, 7, 18, 85, 20, 2, 6, 38, 1, 30, 24, 24, 52, 16, 14, 1, 95, 56, 53, 39, 38, 22, 1, 33, 21, 15, 4, 11, 19, 29, 45, 2, 27, 25, 65, 7, 119, 19, 71, 12, 11, 28, 45, 6, 9, 4, 2, 27, 29, 79, 5, 20, 19, 21, 193, 2, 7, 14, 16, 2, 13, 15, 3, 4, 11, 6, 655, 9, 152, 23, 13, 15, 19, 16, 19, 6, 114, 19, 64, 115, 17, 6, 44, 13, 2, 125, 19, 33, 23, 23, 242, 4, 20, 2, 18, 38, 27, 37, 2, 13, 11, 22, 27, 52, 36, 32, 4, 28, 19, 20, 76, 26, 1, 26, 33, 23, 76, 6, 62, 6, 306, 105, 31, 3, 3, 20, 89, 86, 24, 36, 37, 4, 12, 27, 20, 4, 2, 31, 16, 149, 18, 3, 30, 261, 53, 20, 47, 22, 13, 11, 90, 9, 89, 8, 9, 57, 32, 46, 12, 4, 185, 74, 137, 35, 18, 29, 207, 56, 4, 74, 123, 31]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.632, speedup = 0.34565566000755477, eval_ratio = 0.070352)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3978453621031746,"recall":0.3862847222222223,"f1":null,"seconds":0.0001482311636209488,"exhaustive_search_seconds":0.0003519915044307709,"evaluations":448.4921875,"distances_sum":1687.669556368972}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5529513888888888,"recall":0.5529513888888888,"f1":null,"seconds":0.00024350173771381378,"exhaustive_search_seconds":0.0003519915044307709,"evaluations":570.5859375,"distances_sum":1659.3613342894578}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6536458333333334,"recall":0.6536458333333334,"f1":0.6536458333333334,"seconds":0.0003293287009000778,"exhaustive_search_seconds":0.0003519915044307709,"evaluations":670.40625,"distances_sum":1598.5782966799002}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7248263888888885,"recall":0.7248263888888885,"f1":0.7248263888888885,"seconds":0.000393599271774292,"exhaustive_search_seconds":0.0003519915044307709,"evaluations":765.6171875,"distances_sum":1572.8060156183622}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7864583333333325,"recall":0.7864583333333325,"f1":0.7864583333333325,"seconds":0.00044323503971099854,"exhaustive_search_seconds":0.0003519915044307709,"evaluations":842.4609375,"distances_sum":1555.1588649986195}
KCenters.DeloneInvIndex> reached performance {"precision":0.828124999999999,"recall":0.828124999999999,"f1":0.828124999999999,"seconds":0.0006886720657348633,"exhaustive_search_seconds":0.0003519915044307709,"evaluations":952.2890625,"distances_sum":1544.4723691683303}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.796, speedup = 1.0483735689828104, eval_ratio = 0.099656)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
