Julia Version 1.5.0-DEV.784
Commit 40cc4ad6cf (2020-05-02 14:31 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_BXBE9Z/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_BXBE9Z/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.20759639144760614 0.1579600520490868; -0.20759639144760614 0.0 0.03554745784060411; -0.1579600520490868 -0.03554745784060411 0.0])
dAA = so3([0.0 0.01160568924772778 -0.05142439211952804; -0.01160568924772778 0.0 -0.07451859042139893; 0.05142439211952804 0.07451859042139893 0.0])
dAA = so3([0.0 0.007627579012741245 0.0688432535709228; -0.007627579012741245 0.0 0.0217529487587253; -0.0688432535709228 -0.0217529487587253 0.0])
dAA = Quaternion(0.9968334272646652, [0.0553498142919485, 0.020265063843738777, -0.05337455885567392])
dAA = SO3([0.9852731914028159 0.1623925372351897 -0.053529451269632; -0.16555226162401787 0.9843071479165151 -0.0610891744225507; 0.04276899547666649 0.06905144756465002 0.9966958967584565])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9913527487940536 0.01683970298586392 -0.13013897134149358; -0.04068640357000387 0.9823028990266314 -0.18282677902433891; 0.12475714016846079 0.18654071664712657 0.9744938260501005]), [-0.3554745784060411, 1.579600520490868, -2.0759639144760613])
xj = SE3(SO3([0.9597124755346136 0.26997718625525535 0.07787350772193946; -0.23896177993404438 0.9300081697692348 -0.279252702571043; -0.14781485728429716 0.24939351046924466 0.9570546718457884]), [-0.217529487587253, 0.688432535709228, -0.07627579012741245])
Dx = SE3(SO3([0.9426951372201899 0.2609175591299158 0.20796130793754466; -0.24614506555485016 0.9646181010823441 -0.09446970819945835; -0.22525204763643292 0.037867484759080194 0.9735643628613442]), [0.42248603686591474, -0.5000506848262339, 2.093661071209936])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
