Julia Version 1.5.0-DEV.773
Commit e3f91bd494 (2020-05-01 17:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_JtlNGW/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_JtlNGW/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.128992132689322 -0.013793366308304862; -0.128992132689322 0.0 0.07576458044711891; 0.013793366308304862 -0.07576458044711891 0.0])
dAA = so3([0.0 0.10475279669865248 -0.05001486186061519; -0.10475279669865248 0.0 0.13765215990320162; 0.05001486186061519 -0.13765215990320162 0.0])
dAA = so3([0.0 -0.17005312426340663 -0.17078333757418498; 0.17005312426340663 0.0 0.0936768533994033; 0.17078333757418498 -0.0936768533994033 0.0])
dAA = Quaternion(0.9997056449339057, [-0.002143347029499873, -0.016304514754942226, -0.017837946894212153])
dAA = SO3([0.9975787239619655 0.028141237040425336 -0.06359842982536186; -0.007137384513195214 0.9510741490230833 0.3088802693639214; 0.06917909540264085 -0.3076784585209898 0.948972190805094])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9585980558168973 0.2742801278566822 -0.07655180498843055; -0.23197277711488676 0.908064405297268 0.34872290792221594; 0.16516173304271098 -0.31652716675672754 0.9340942964408289]), [-0.757645804471189, -0.1379336630830486, -1.28992132689322])
xj = SE3(SO3([0.9927057342513436 0.08921522402559329 -0.08109234850812932; -0.08845921293486089 0.9959965831494073 0.01287532530270865; 0.08191637706494129 -0.005608043934281689 0.9966234278862731]), [-0.936768533994033, -1.7078333757418498, 1.7005312426340662])
Dx = SE3(SO3([0.985655366938146 -0.14644878734506914 0.08388235995241833; 0.16602403438441965 0.930674106265745 -0.32600878505521524; -0.030323549145002793 0.3352587964716439 0.9416379462169288]), [0.6863756248292656, -2.421259333260277, 2.259616864287059])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
