Julia Version 1.5.0-DEV.773
Commit e3f91bd494 (2020-05-01 17:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ZFKMvB/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ZFKMvB/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21710731179419193
curgen: 20 fitness: 0.21721825016660498
curgen: 30 fitness: 0.2172328201612695
curgen: 40 fitness: 0.2172328201612695
curgen: 50 fitness: 0.2172328201612695
CoordinateCreature{Array{Float64,1}}([-0.22241312449285638], -0.2172328201612695) -0.22241312449285638 -0.2172328201612695
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2576655181829315
curgen: 100 fitness: 3.257952239789088
curgen: 150 fitness: 3.2583434714594985
curgen: 200 fitness: 3.258351126185474
curgen: 250 fitness: 3.2584254359385567
curgen: 300 fitness: 3.258444762966754
curgen: 350 fitness: 3.258444762966754
curgen: 400 fitness: 3.258462044620171
curgen: 450 fitness: 3.258462044620171
curgen: 500 fitness: 3.258462044620171
CoordinateCreature{Array{Float64,1}}([-0.22265866160460054, -0.22263417794763407, -0.22240370951178812, 0.22278022867601183, -0.2226358756354157, 0.2223691347806109, -0.22238728774973804, 0.22288940487765138, -0.22258110681617688, -0.2224366735317606, 0.22212755742075743, -0.2224129807425069, 0.2231308394930437, -0.222893672529247, -0.22242864532223988], -3.258462044620171) [-0.22265866160460054, -0.22263417794763407, -0.22240370951178812, 0.22278022867601183, -0.2226358756354157, 0.2223691347806109, -0.22238728774973804, 0.22288940487765138, -0.22258110681617688, -0.2224366735317606, 0.22212755742075743, -0.2224129807425069, 0.2231308394930437, -0.222893672529247, -0.22242864532223988] -3.258462044620171
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004666001514266327
curgen: 100 fitness: -0.0028607092370123155
curgen: 150 fitness: -0.0020231677917479374
curgen: 200 fitness: -0.001661944634321344
curgen: 250 fitness: -0.001661944634321344
curgen: 300 fitness: -0.0008503428928179346
curgen: 350 fitness: -0.0006350200140161633
curgen: 400 fitness: -0.0006350200140161633
curgen: 450 fitness: -0.0005822754614257519
curgen: 500 fitness: -0.00038463695668156106
CoordinateCreature{Array{Float64,1}}([0.00016307936558710573, 7.979342968426548e-5, 0.00016291607678813492, -1.1493329110542238e-5, -0.0004218986297659696, 0.0005127141806078181, -8.343535817165896e-7, 8.801420007412562e-5, -0.0004639362262844564, -0.0003872850749081077, -0.00018050109623988814, 4.511391992921196e-5, -0.00023390611123410253, -0.0008209276416616671, 0.0005495818341574327], 0.00038463695668156106) [0.00016307936558710573, 7.979342968426548e-5, 0.00016291607678813492, -1.1493329110542238e-5, -0.0004218986297659696, 0.0005127141806078181, -8.343535817165896e-7, 8.801420007412562e-5, -0.0004639362262844564, -0.0003872850749081077, -0.00018050109623988814, 4.511391992921196e-5, -0.00023390611123410253, -0.0008209276416616671, 0.0005495818341574327] 0.00038463695668156106
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
