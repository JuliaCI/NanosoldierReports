Julia Version 1.6.0-DEV.106
Commit 39e360c5a8 (2020-05-26 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_fQJjEM/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_fQJjEM/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.055984388400314146 0.04698055460638383; -0.055984388400314146 0.0 0.024491679148679852; -0.04698055460638383 -0.024491679148679852 0.0])
dAA = so3([0.0 0.008896408137424155 -0.06358118385767163; -0.008896408137424155 0.0 0.1590938879710942; 0.06358118385767163 -0.1590938879710942 0.0])
dAA = so3([0.0 0.09735377261037095 -0.047080629442777966; -0.09735377261037095 0.0 -0.0316060457259357; 0.047080629442777966 0.0316060457259357 0.0])
dAA = Quaternion(0.9972292781948026, [-0.0007978223417586547, -0.0008657582843434091, -0.07437997481296578])
dAA = SO3([0.9774933936117641 0.10912026768994465 -0.1805531296450768; -0.1017474780761797 0.9935713737615425 0.04963240823029654; 0.1848083227305914 -0.030144525554008934 0.9823121659781219])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9873158890307557 0.052694322711415734 -0.14976863363666534; 0.009563565305644162 0.9218650791594051 0.38739297108371556; 0.15847988353747985 -0.3839115577583058 0.9096680946001887]), [-0.2449167914867985, 0.4698055460638383, -0.5598438840031414])
xj = SE3(SO3([0.9315044739521502 0.36370964735525146 -0.003835026446655723; -0.36369297385913557 0.9315083871772216 0.004421016171571734; 0.005180325532820484 -0.0027234241700212227 0.9999828734474226]), [0.316060457259357, -0.4708062944277796, -0.9735377261037095])
Dx = SE3(SO3([0.9170319437166154 0.36757324717584927 0.15473306745465978; -0.28817964162380955 0.8789360406293215 -0.38003148637504275; -0.27568987713896737 0.30391009269758323 0.911939552382529]), [0.47930399639176346, -0.6787350452580392, -0.8247273006619922])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
