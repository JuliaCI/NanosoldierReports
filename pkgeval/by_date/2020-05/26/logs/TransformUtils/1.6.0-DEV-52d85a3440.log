Julia Version 1.6.0-DEV.92
Commit 52d85a3440 (2020-05-25 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_szbKXV/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_szbKXV/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0135834914419919 0.06586610891819177; 0.0135834914419919 0.0 0.01420400644917953; -0.06586610891819177 -0.01420400644917953 0.0])
dAA = so3([0.0 0.028531267006514812 -0.11786977243449559; -0.028531267006514812 0.0 0.030203963171638756; 0.11786977243449559 -0.030203963171638756 0.0])
dAA = so3([0.0 0.06099971520108033 -0.1979488673363745; -0.06099971520108033 0.0 -0.12415892587969145; 0.1979488673363745 0.12415892587969145 0.0])
dAA = Quaternion(0.9938560990460232, [-0.023243289383527193, 0.0648659164026045, 0.0866153380002943])
dAA = SO3([0.9959932287978697 -0.06871733909325924 0.05723124580801076; 0.07048788012041764 0.9970759566385898 -0.02951263203055594; -0.0550358696208623 0.03342849086009405 0.9979246409693934])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9544123185542454 0.08120848640812012 -0.28723214988439566; -0.059138074399175365 0.9946490178127748 0.08471138955559582; 0.2925744594941044 -0.0638632374640096 0.9541077887494411]), [-0.1420400644917953, 0.6586610891819176, 0.135834914419919])
xj = SE3(SO3([0.856189952796221 -0.4217908183410781 0.2983810823325911; 0.39311639952520955 0.9065829111310134 0.15351521641046828; -0.33525849900508214 -0.014139689118957155 0.9420200677461593]), [1.2415892587969144, -1.979488673363745, -0.6099971520108033])
Dx = SE3(SO3([0.6958220169512167 -0.46031283242668125 0.5513109984657178; 0.481953423952054 0.8683818145078587 0.11676438400869887; -0.5324965895354001 0.18445899418397907 0.8260885313317226]), [1.2583565536838712, -2.4640393766981425, -1.3325083410929583])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
