Julia Version 1.6.0-DEV.92
Commit 52d85a3440 (2020-05-25 14:54 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_nwFSNr/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_nwFSNr/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722787866649002
curgen: 20 fitness: 0.21722787866649002
curgen: 30 fitness: 0.21722787866649002
curgen: 40 fitness: 0.2172302583904791
curgen: 50 fitness: 0.2172302583904791
CoordinateCreature{Array{Float64,1}}([-0.22282425588362587], -0.2172302583904791) -0.22282425588362587 -0.2172302583904791
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581079392058823
curgen: 100 fitness: 3.258208763143338
curgen: 150 fitness: 3.258236842618138
curgen: 200 fitness: 3.2582924074365893
curgen: 250 fitness: 3.2583868656397863
curgen: 300 fitness: 3.258419883964122
curgen: 350 fitness: 3.258419883964122
curgen: 400 fitness: 3.2584266997994495
curgen: 450 fitness: 3.2584458589078387
curgen: 500 fitness: 3.258470749828432
CoordinateCreature{Array{Float64,1}}([-0.22236037020872676, 0.22254671249142222, 0.22270542389888429, -0.22262180046846455, 0.2231225631230742, -0.22229889262202035, -0.22268625674364922, 0.22237414589912263, 0.2223922361989639, -0.22263624801732668, 0.2226079350558036, -0.22253003422377818, 0.22270325895521184, 0.22229983136047698, -0.22291305442688616], -3.258470749828432) [-0.22236037020872676, 0.22254671249142222, 0.22270542389888429, -0.22262180046846455, 0.2231225631230742, -0.22229889262202035, -0.22268625674364922, 0.22237414589912263, 0.2223922361989639, -0.22263624801732668, 0.2226079350558036, -0.22253003422377818, 0.22270325895521184, 0.22229983136047698, -0.22291305442688616] -3.258470749828432
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0032674309027527215
curgen: 100 fitness: -0.002034779654763952
curgen: 150 fitness: -0.002034779654763952
curgen: 200 fitness: -0.002034779654763952
curgen: 250 fitness: -0.0016296854996369348
curgen: 300 fitness: -0.0016296854996369348
curgen: 350 fitness: -0.001215032603539612
curgen: 400 fitness: -0.0009553978362077942
curgen: 450 fitness: -0.0009553978362077942
curgen: 500 fitness: -0.0009553978362077942
CoordinateCreature{Array{Float64,1}}([0.00023683981931386288, -0.0002442339245469271, 0.0005316754603496013, 0.0004784184078186403, 8.834422004268066e-5, -0.0006138427778202532, -0.00027177013454553634, -2.04897881266096e-5, -0.0006738534019130116, 0.0009621856261089224, 0.0004451632285886998, -9.547713317734276e-5, -0.0006511763736966273, 0.0012766084093085116, -0.0002976591093324939], 0.0009553978362077942) [0.00023683981931386288, -0.0002442339245469271, 0.0005316754603496013, 0.0004784184078186403, 8.834422004268066e-5, -0.0006138427778202532, -0.00027177013454553634, -2.04897881266096e-5, -0.0006738534019130116, 0.0009621856261089224, 0.0004451632285886998, -9.547713317734276e-5, -0.0006511763736966273, 0.0012766084093085116, -0.0002976591093324939] 0.0009553978362077942
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
