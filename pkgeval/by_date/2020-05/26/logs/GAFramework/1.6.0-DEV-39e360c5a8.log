Julia Version 1.6.0-DEV.106
Commit 39e360c5a8 (2020-05-26 17:21 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_eclqyQ/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_eclqyQ/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721884237274
curgen: 20 fitness: 0.21721884237274
curgen: 30 fitness: 0.21721884237274
curgen: 40 fitness: 0.21721884237274
curgen: 50 fitness: 0.21721884237274
CoordinateCreature{Array{Float64,1}}([0.22197129462389031], -0.21721884237274) 0.22197129462389031 -0.21721884237274
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2567812022389258
curgen: 100 fitness: 3.2581648729025705
curgen: 150 fitness: 3.2582630601118328
curgen: 200 fitness: 3.258279609161952
curgen: 250 fitness: 3.2583041837913687
curgen: 300 fitness: 3.258400700702527
curgen: 350 fitness: 3.258420055472582
curgen: 400 fitness: 3.258420055472582
curgen: 450 fitness: 3.258438629466138
curgen: 500 fitness: 3.258438629466138
CoordinateCreature{Array{Float64,1}}([0.22208651663051476, -0.2220842457576787, 0.2227995013791927, 0.2229458850728513, -0.2231429534075153, 0.22277557547926558, -0.22272835833789154, -0.22262931607948794, -0.2224107236119902, 0.2223427692366335, 0.22300897623659294, 0.22271431926111251, -0.22249122235427674, 0.2228330729577914, 0.2226348797879628], -3.258438629466138) [0.22208651663051476, -0.2220842457576787, 0.2227995013791927, 0.2229458850728513, -0.2231429534075153, 0.22277557547926558, -0.22272835833789154, -0.22262931607948794, -0.2224107236119902, 0.2223427692366335, 0.22300897623659294, 0.22271431926111251, -0.22249122235427674, 0.2228330729577914, 0.2226348797879628] -3.258438629466138
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00788122560132365
curgen: 100 fitness: -0.007025972113325452
curgen: 150 fitness: -0.0013112088987270454
curgen: 200 fitness: -0.000578325194254603
curgen: 250 fitness: -0.000578325194254603
curgen: 300 fitness: -0.0005441538873185436
curgen: 350 fitness: -0.0004387455337564461
curgen: 400 fitness: -0.0004387455337564461
curgen: 450 fitness: -0.00043597935632533336
curgen: 500 fitness: -0.00043597935632533336
CoordinateCreature{Array{Float64,1}}([-8.568816828639239e-5, -0.0003261967204002184, -4.260648610311755e-5, -2.6062164015795183e-5, 0.0008844419774554297, -9.467623677565525e-5, 4.432339079730985e-5, 0.0005101453793793444, 0.0006633431692399632, -0.00017881961105193148, 8.724535711385233e-5, -0.0002204868287864856, -0.0006790255746726872, -0.00011049180234580568, 0.00016248530908961325], 0.00043597935632533336) [-8.568816828639239e-5, -0.0003261967204002184, -4.260648610311755e-5, -2.6062164015795183e-5, 0.0008844419774554297, -9.467623677565525e-5, 4.432339079730985e-5, 0.0005101453793793444, 0.0006633431692399632, -0.00017881961105193148, 8.724535711385233e-5, -0.0002204868287864856, -0.0006790255746726872, -0.00011049180234580568, 0.00016248530908961325] 0.00043597935632533336
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
