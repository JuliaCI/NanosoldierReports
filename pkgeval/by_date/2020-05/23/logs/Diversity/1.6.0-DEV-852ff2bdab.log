Julia Version 1.6.0-DEV.82
Commit 852ff2bdab (2020-05-23 14:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed RangeArrays ───────────────── v0.3.2
  Installed Diversity ─────────────────── v0.5.1
  Installed TableTraits ───────────────── v1.0.0
  Installed Parsers ───────────────────── v1.0.4
  Installed OrderedCollections ────────── v1.2.0
  Installed JSON ──────────────────────── v0.21.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed EcoBase ───────────────────── v0.1.3
  Installed IterTools ─────────────────── v1.3.0
  Installed Compat ────────────────────── v3.10.0
  Installed IntervalSets ──────────────── v0.5.1
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Missings ──────────────────── v0.4.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed AxisArrays ────────────────── v0.4.3
  Installed EllipsisNotation ──────────── v0.4.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Requires ──────────────────── v1.0.1
  Installed RecipesBase ───────────────── v1.0.1
  Installed DataStructures ────────────── v0.17.17
  Installed Tables ────────────────────── v1.0.4
  Installed DataFrames ────────────────── v0.20.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [d3d5718d] + Diversity v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [39de3d68] + AxisArrays v0.4.3
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [d3d5718d] + Diversity v0.5.1
  [a58aae7d] + EcoBase v0.1.3
  [da5c29d0] + EllipsisNotation v0.4.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.1
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing Diversity
Status `/tmp/jl_OSvmxd/Project.toml`
  [39de3d68] AxisArrays v0.4.3
  [a93c6f00] DataFrames v0.20.2
  [b4f34e82] Distances v0.8.2
  [d3d5718d] Diversity v0.5.1
  [a58aae7d] EcoBase v0.1.3
  [e1d29d7a] Missings v0.4.3
  [aea672f4] Phylo v0.4.2
  [6f49c342] RCall v0.13.6
  [3cdcf5f2] RecipesBase v1.0.1
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.33.0
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_OSvmxd/Manifest.toml`
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [39de3d68] AxisArrays v0.4.3
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [8f4d0f93] Conda v1.4.1
  [187b0558] ConstructionBase v1.0.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [d3d5718d] Diversity v0.5.1
  [a58aae7d] EcoBase v0.1.3
  [da5c29d0] EllipsisNotation v0.4.0
  [1a297f60] FillArrays v0.8.9
  [d25df0c9] Inflate v0.1.2
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [1c8ee90f] IterableTables v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [093fc24a] LightGraphs v1.3.3
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [90014a1f] PDMats v0.9.12
  [69de0a69] Parsers v1.0.4
  [aea672f4] Phylo v0.4.2
  [2dfb63ee] PooledArrays v0.5.3
  [1fd47b50] QuadGK v2.3.1
  [6f49c342] RCall v0.13.6
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.1
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [1277b4bf] ShiftedArrays v1.0.0
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [3eaba693] StatsModels v0.6.11
  [3783bdb8] TableTraits v1.0.0
  [382cd787] TableTraitsUtils v1.0.1
  [bd369af6] Tables v1.0.4
  [0796e94c] Tokenize v0.5.8
  [1986cc42] Unitful v1.2.0
  [81def892] VersionParsing v1.2.0
  [1b915085] WinReg v0.3.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode

[ Info: Running tests for files:
    = API.jl
    = Diversity.jl
    = DiversityMeasure.jl
    = Ecology.jl
    = EffectiveNumbers.jl
    = GeneralisedDiversities.jl
    = Hill.jl
    = Interface.jl
    = Iterators.jl
    = Jost.jl
    = Metacommunity.jl
    = Phylogenetics.jl

Test Summary:    | Pass  Total
* Testing API.jl |    2      2
Test Summary:          |
* Testing Diversity.jl | No tests
Test Summary:                 | Pass  Total
* Testing DiversityMeasure.jl |   67     67
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  Test threw exception
  Expression: (richness(communities))[!, :diversity] ≈ (subdiv(ᾱ(eco), 0))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:845
   [5] generalisedrichness(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:46
   [6] richness(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:63
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:21
  Test threw exception
  Expression: (richness(Metacommunity(communities)))[!, :diversity] == (richness(communities))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:845
   [5] generalisedrichness(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:46
   [6] richness(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:63
   [7] richness(::Diversity.Metacommunity{Float64,Array{Float64,2},Array{Float64,2},Diversity.UniqueTypes,Diversity.Subcommunities}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:70
   [8] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:21
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [10] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:26
  Test threw exception
  Expression: (shannon(communities))[!, :diversity] ≈ log.((subdiv(ᾱ(eco), 1))[!, :diversity])
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:845
   [5] generalisedshannon(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:111
   [6] shannon(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:129
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:26
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:27
  Test threw exception
  Expression: (shannon(Metacommunity(communities)))[!, :diversity] == (shannon(communities))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:845
   [5] generalisedshannon(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:111
   [6] shannon at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:129 [inlined]
   [7] shannon(::Diversity.Metacommunity{Float64,Array{Float64,2},Array{Float64,2},Diversity.UniqueTypes,Diversity.Subcommunities}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:134
   [8] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:27
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [10] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:32
  Test threw exception
  Expression: (simpson(communities))[!, :diversity] ≈ (subdiv(ᾱ(eco), 2))[!, :diversity] .^ -1
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:845
   [5] generalisedsimpson(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:175
   [6] simpson(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:195
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:32
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:33
  Test threw exception
  Expression: (simpson(Metacommunity(communities)))[!, :diversity] == (simpson(communities))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:845
   [5] generalisedsimpson(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:175
   [6] simpson at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:195 [inlined]
   [7] simpson(::Diversity.Metacommunity{Float64,Array{Float64,2},Array{Float64,2},Diversity.UniqueTypes,Diversity.Subcommunities}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:200
   [8] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:33
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [10] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:38
  Test threw exception
  Expression: (jaccard(([1 0 0; 0 1 1])' / 3))[!, :diversity] .+ 1.0 ≈ [1.0]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:845
   [5] generalisedjaccard(::Array{Float64,2}, ::Int64, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:246
   [6] jaccard(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:267
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:38
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:39
  Test threw exception
  Expression: (jaccard(Metacommunity(([1 0 1; 0 1 1])' / 4)))[!, :diversity] == (jaccard(([1 0 1; 0 1 1])' / 4))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:845
   [5] generalisedjaccard(::Array{Float64,2}, ::Int64, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:246
   [6] jaccard(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:267
   [7] jaccard(::Diversity.Metacommunity{Float64,Array{Float64,2},Array{Float64,2},Diversity.UniqueTypes,Diversity.Subcommunities}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:272
   [8] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:39
   [9] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [10] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Standard ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:43
  Test threw exception
  Expression: (jaccard(([1 0 1; 0 1 1])' / 4))[!, :diversity] ≈ [1.0 / 3.0]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:845
   [5] generalisedjaccard(::Array{Float64,2}, ::Int64, ::Diversity.UniqueTypes) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:246
   [6] jaccard(::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:267
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:43
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:20
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  Test threw exception
  Expression: (generalisedrichness(metacommunityDiversity, communities, Z1))[!, :diversity] ≈ [1]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:845
   [5] generalisedrichness(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:46
   [6] generalisedrichness(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:33
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:51
  Test threw exception
  Expression: (generalisedrichness(subcommunityDiversity, communities))[!, :diversity] ≈ (richness(communities))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},Nothing,typeof(identity),Tuple{Base.RefValue{String}}}) at ./broadcast.jl:845
   [5] generalisedrichness(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:46
   [6] generalisedrichness at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:33 [inlined] (repeats 2 times)
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:51
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:58
  Test threw exception
  Expression: (generalisedshannon(metacommunityDiversity, communities, Z1))[!, :diversity] .+ 1.0 ≈ [1.0]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:845
   [5] generalisedshannon(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:111
   [6] generalisedshannon(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:97
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:58
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:60
  Test threw exception
  Expression: (generalisedshannon(subcommunityDiversity, communities))[!, :diversity] ≈ (shannon(communities))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(log),Tuple{Array{Float64,1}}}) at ./broadcast.jl:845
   [5] generalisedshannon(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:111
   [6] generalisedshannon at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:97 [inlined] (repeats 2 times)
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:60
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:66
  Test threw exception
  Expression: (generalisedsimpson(metacommunityDiversity, communities, Z1))[!, :diversity] ≈ [1.0]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:845
   [5] generalisedsimpson(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:175
   [6] generalisedsimpson(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:161
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:66
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:68
  Test threw exception
  Expression: (generalisedsimpson(subcommunityDiversity, communities))[!, :diversity] ≈ (simpson(communities))[!, :diversity]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(Base.literal_pow),Tuple{Base.RefValue{typeof(^)},Array{Float64,1},Base.RefValue{Val{-1}}}}) at ./broadcast.jl:845
   [5] generalisedsimpson(::Diversity.DiversityLevel, ::Array{Float64,2}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:175
   [6] generalisedsimpson at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:161 [inlined] (repeats 2 times)
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:68
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:74
  Test threw exception
  Expression: (generalisedjaccard(([1 0 1; 0 1 1])' / 4, [0, Inf]))[!, :diversity] ≈ [1.0 / 3.0, 1.0]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:845
   [5] generalisedjaccard(::Array{Float64,2}, ::Array{Float64,1}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:246
   [6] generalisedjaccard(::Array{Float64,2}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:233 (repeats 2 times)
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:74
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Generalised ecological diversities: Error During Test at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:75
  Test threw exception
  Expression: (generalisedjaccard(([1 1 1; 1 1 1])' / 6, [0, 1]))[!, :diversity] ≈ [1.0, 1.0]
  MethodError: no method matching ndims(::Type{DataFrames.LazyNewColDataFrame{Symbol}})
  Closest candidates are:
    ndims(!Matched::Base.Generator) at generator.jl:53
    ndims(!Matched::Number) at number.jl:67
    ndims(!Matched::Type{var"#s92"} where var"#s92"<:Number) at number.jl:68
    ...
  Stacktrace:
   [1] Base.Broadcast.BroadcastStyle(::Type{DataFrames.LazyNewColDataFrame{Symbol}}) at ./broadcast.jl:103
   [2] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}) at ./broadcast.jl:420
   [3] combine_styles(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:421
   [4] materialize!(::DataFrames.LazyNewColDataFrame{Symbol}, ::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(-),Tuple{Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Nothing,typeof(/),Tuple{Array{Float64,1},Array{Float64,1}}},Int64}}) at ./broadcast.jl:845
   [5] generalisedjaccard(::Array{Float64,2}, ::Array{Int64,1}, ::Diversity.GeneralTypes{Float64,Array{Float64,2}}) at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:246
   [6] generalisedjaccard at /home/pkgeval/.julia/packages/Diversity/VrF4L/src/Ecology.jl:233 [inlined] (repeats 2 times)
   [7] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:75
   [8] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
   [9] top-level scope at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/test_Ecology.jl:49
  
Test Summary:                        | Pass  Error  Total
* Testing Ecology.jl                 |    9     17     26
  Standard ecological diversities    |    6      9     15
  Generalised ecological diversities |    3      8     11
Test Summary:                        | Pass  Error  Total
* Testing Ecology.jl                 |    9     17     26
  Standard ecological diversities    |    6      9     15
  Generalised ecological diversities |    3      8     11
ERROR: LoadError: Some tests did not pass: 9 passed, 0 failed, 17 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Diversity/VrF4L/test/runtests.jl:19
caused by [exception 1]
Some tests did not pass: 9 passed, 0 failed, 17 errored, 0 broken.
ERROR: Package Diversity errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1557
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
