Julia Version 1.6.0-DEV.82
Commit 852ff2bdab (2020-05-23 14:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed KCenters ──────────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.4
  Installed OrderedCollections ────────── v1.2.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed JSON ──────────────────────── v0.21.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed TableTraits ───────────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed Missings ──────────────────── v0.4.3
  Installed Compat ────────────────────── v3.10.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed InvertedIndices ───────────── v1.0.0
  Installed DataStructures ────────────── v0.17.17
  Installed MLDataPattern ─────────────── v0.5.3
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed StatsBase ─────────────────── v0.32.2
  Installed DataFrames ────────────────── v0.20.2
  Installed Tables ────────────────────── v1.0.4
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_O5ugLr/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_O5ugLr/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9323044313987097
[ Info: 0.8326150393486023
[ Info: 0.5563809144993623
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3219924190888802
mean(cdnet.distances) = 0.4363485466192166
mean(crand.distances) = 0.344069517031312
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":6.640625,"distances_sum":655.8825414277015}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.8002617174492181,"seconds":5.306676030158997e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.2109375,"distances_sum":2065.5466745917147}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8554096944721953,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.546875,"distances_sum":2401.511482082875}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8554096944721953,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.546875,"distances_sum":2401.511482082875}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.900761738261739,"seconds":5.81890344619751e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.625,"distances_sum":2721.3908305446184}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9548248626373631,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.890625,"distances_sum":3206.9353660475176}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9304976273726283,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.8984375,"distances_sum":2937.0570119134977}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9548248626373631,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.890625,"distances_sum":3206.9353660475176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.976917353479854,"seconds":8.33161175251007e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.984375,"distances_sum":3398.720650343042}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763049450549455,"seconds":6.813555955886841e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.953125,"distances_sum":3387.496638330008}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9720467032967037,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.9140625,"distances_sum":3370.7546039216704}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976917353479854,"seconds":8.33161175251007e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.984375,"distances_sum":3398.720650343042}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.976917353479854,"seconds":8.33161175251007e-6,"exhaustive_search_seconds":2.954155206680298e-6,"evaluations":8.984375,"distances_sum":3398.720650343042}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":4.351139068603516e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":6.0859375,"distances_sum":1105.2113343929918}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":5.484375,"distances_sum":485.57962688775615}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8603511072261081,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.0078125,"distances_sum":2220.271623161743}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8603511072261081,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.0078125,"distances_sum":2220.271623161743}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9005041833166841,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.1484375,"distances_sum":2549.7365731271198}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8599612193362199,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.03125,"distances_sum":2255.2680825975294}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8669278638028647,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.1484375,"distances_sum":2243.3822422293724}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9005041833166841,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.1484375,"distances_sum":2549.7365731271198}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572802197802204,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7578125,"distances_sum":2993.3844589967784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9400812728937735,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.5,"distances_sum":2830.083995987367}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485576923076927,"seconds":6.0498714447021484e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.6796875,"distances_sum":2963.3520200316225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.96229967948718,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.8203125,"distances_sum":3024.55784047034}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9623569139194144,"seconds":7.39656388759613e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7890625,"distances_sum":3024.0013332450408}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9141483516483524,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.1953125,"distances_sum":2618.2830410957235}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9601018772893779,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.78125,"distances_sum":3011.670268320061}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9623569139194144,"seconds":7.39656388759613e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7890625,"distances_sum":3024.0013332450408}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9623569139194144,"seconds":7.39656388759613e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7890625,"distances_sum":3024.0013332450408}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.205078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.205078125,"f1":null,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":6.1484375,"distances_sum":558.8100105614371}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.205078125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.205078125,"f1":null,"seconds":3.2708048820495605e-6,"exhaustive_search_seconds":1.6242265701293945e-6,"evaluations":6.1484375,"distances_sum":558.8100105614371}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7750528984903992,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7890625,"distances_sum":1246.2187197739925}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7750528984903992,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7890625,"distances_sum":1246.2187197739925}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7750528984903992,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7890625,"distances_sum":1246.2187197739925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6513671875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7750528984903992,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7890625,"distances_sum":1246.2187197739925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.375,"f1":null,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.578125,"distances_sum":683.1411694103962}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6931991619491624,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.5859375,"distances_sum":978.6212783870718}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":6.7265625,"distances_sum":722.644541156069}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5439453125,"f1":0.6931991619491624,"seconds":4.453584551811218e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.5859375,"distances_sum":978.6212783870718}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9185814185814193,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.46875,"distances_sum":1764.449792260383}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950251831501832,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.6328125,"distances_sum":1976.3198230352398}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.552734375,"f1":null,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":7.703125,"distances_sum":1022.498251452292}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.950251831501832,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.6328125,"distances_sum":1976.3198230352398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9741128663003666,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8984375,"distances_sum":2146.4185523202555}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9713942307692311,"seconds":6.4838677644729614e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.90625,"distances_sum":2118.7338679562213}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9741128663003666,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8984375,"distances_sum":2146.4185523202555}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9741128663003666,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.6316771507263184e-6,"evaluations":8.8984375,"distances_sum":2146.4185523202555}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8218219280719289,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.1875,"distances_sum":1446.7578280877317}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.993511199951172e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":6.5078125,"distances_sum":402.049196691051}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.8218219280719289,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.1875,"distances_sum":1446.7578280877317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8729083416583425,"seconds":6.943941116333008e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.3828125,"distances_sum":1615.996961574185}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9243990384615391,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.5078125,"distances_sum":1885.4107643908867}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9477022977022982,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7890625,"distances_sum":2037.1270858748667}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8714336011211019,"seconds":6.815418601036072e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.328125,"distances_sum":1640.0913831219864}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9477022977022982,"seconds":6.791204214096069e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7890625,"distances_sum":2037.1270858748667}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9481799450549455,"seconds":6.8303197622299194e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":2032.5777623734114}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322346,"seconds":8.014962077140808e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2200.08950620806}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675251831501834,"seconds":6.750226020812988e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2148.833862622608}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560897435897441,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":2087.627542012589}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9498626373626378,"seconds":6.580725312232971e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":2006.7107237640553}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567593864468871,"seconds":6.973743438720703e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7890625,"distances_sum":2089.811049762974}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322346,"seconds":8.014962077140808e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2200.08950620806}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9734947344322346,"seconds":8.014962077140808e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8984375,"distances_sum":2200.08950620806}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":4.433095455169678e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.578125,"distances_sum":730.0517942167916}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.57421875, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.57421875,"f1":0.7181762681762687,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.5390625,"distances_sum":1087.2965446315432}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.57421875,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.57421875,"f1":0.7181762681762687,"seconds":5.125999450683594e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.5390625,"distances_sum":1087.2965446315432}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7138037309912316,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.5234375,"distances_sum":1119.545222292013}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.8037727897102905,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.09375,"distances_sum":1440.3325141396306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9489271145521148,"seconds":6.604939699172974e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.703125,"distances_sum":2125.4169714395157}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8066147394272402,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.109375,"distances_sum":1449.5125574062533}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8745223526473535,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.265625,"distances_sum":1664.6716343630376}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":6,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7267340298590306,"seconds":5.071982741355896e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.5625,"distances_sum":1172.5327770881695}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9489271145521148,"seconds":6.604939699172974e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.703125,"distances_sum":2125.4169714395157}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":11,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704269688644691,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8828125,"distances_sum":2270.62076111531}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9643086080586083,"seconds":6.573274731636047e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.859375,"distances_sum":2236.7744170002175}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.951940247252748,"seconds":6.642192602157593e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.78125,"distances_sum":2157.6126311526186}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558321886446891,"seconds":6.8694353103637695e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7890625,"distances_sum":2191.573179729371}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704269688644691,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8828125,"distances_sum":2270.62076111531}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":11,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704269688644691,"seconds":6.787478923797607e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8828125,"distances_sum":2270.62076111531}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7123119935619943,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.7421875,"distances_sum":1180.6257790117515}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":3.7439167499542236e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.3984375,"distances_sum":752.7648719998066}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5703125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5703125,"f1":0.7123119935619943,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.7421875,"distances_sum":1180.6257790117515}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9435554029304033,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.578125,"distances_sum":2149.621904751386}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9435554029304033,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.578125,"distances_sum":2149.621904751386}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9612408424908429,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8828125,"distances_sum":2218.5868014699427}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969310897435898,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8984375,"distances_sum":2274.633606594706}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969310897435898,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8984375,"distances_sum":2274.633606594706}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.969310897435898,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8984375,"distances_sum":2274.633606594706}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.796875,"distances_sum":376.54592113041787}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.16796875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.796875,"distances_sum":376.54592113041787}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.16796875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":3.1962990760803223e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.796875,"distances_sum":376.54592113041787}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8642227564102574,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.09375,"distances_sum":1598.1400143737374}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8642227564102574,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.09375,"distances_sum":1598.1400143737374}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8642227564102574,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.09375,"distances_sum":1598.1400143737374}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7724609375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8642227564102574,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.09375,"distances_sum":1598.1400143737374}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1591796875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1591796875,"f1":null,"seconds":2.5480985641479492e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.359375,"distances_sum":337.30984348387125}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.173828125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.173828125,"f1":null,"seconds":2.728775143623352e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.609375,"distances_sum":399.1509704862914}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.173828125,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.173828125,"f1":null,"seconds":2.728775143623352e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.609375,"distances_sum":399.1509704862914}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2890625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.2890625,"f1":null,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":4.6796875,"distances_sum":586.4373817563434}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8076171875,"f1":0.8849931318681327,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.4296875,"distances_sum":1651.7120366283516}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8076171875,"f1":0.8849931318681327,"seconds":5.066394805908203e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.4296875,"distances_sum":1651.7120366283516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9043711496836504,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.390625,"distances_sum":1776.5581627638132}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.940670787545788,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.625,"distances_sum":1947.6746383067552}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9019116300366308,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.34375,"distances_sum":1766.4573009009764}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.940670787545788,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.625,"distances_sum":1947.6746383067552}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.940670787545788,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.625,"distances_sum":1947.6746383067552}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.64453125,"f1":0.7700445387945395,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.2734375,"distances_sum":1297.519178630581}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":3.034248948097229e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.0546875,"distances_sum":428.69908287070626}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.64453125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.64453125,"f1":0.7700445387945395,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.2734375,"distances_sum":1297.519178630581}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9346096611721617,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.65625,"distances_sum":1878.6828838252181}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.943481518481519,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.6875,"distances_sum":1952.4509515884306}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.943481518481519,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.6875,"distances_sum":1952.4509515884306}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764880952380955,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.921875,"distances_sum":2109.4826866894596}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9499713827838834,"seconds":6.340444087982178e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.734375,"distances_sum":1947.3852984962655}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380955,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.921875,"distances_sum":2109.4826866894596}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764880952380955,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.921875,"distances_sum":2109.4826866894596}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2626953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3515625,"distances_sum":555.1272862388367}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2626953125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2626953125,"f1":null,"seconds":3.4086406230926514e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.3515625,"distances_sum":555.1272862388367}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6650390625, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6650390625,"f1":0.790409070096571,"seconds":4.61190938949585e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.9296875,"distances_sum":1352.1050161426047}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8422176781551789,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2265625,"distances_sum":1555.372739448261}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.8422176781551789,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.2265625,"distances_sum":1555.372739448261}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9008418664668673,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.5546875,"distances_sum":1781.3228379431894}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632268772893777,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2140.1283672095406}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.855718240093241,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3828125,"distances_sum":1571.4194215078167}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405422702297708,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.703125,"distances_sum":1996.5416359600842}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9632268772893777,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2140.1283672095406}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9632268772893777,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8984375,"distances_sum":2140.1283672095406}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8613443847818856,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.046875,"distances_sum":1562.870128175208}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4033203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4033203125,"f1":null,"seconds":3.559514880180359e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.0859375,"distances_sum":729.8190648183374}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8613443847818856,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.046875,"distances_sum":1562.870128175208}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9445970695970702,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6875,"distances_sum":1956.5365489633282}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9445970695970702,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6875,"distances_sum":1956.5365489633282}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9468234890109897,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6875,"distances_sum":1986.3837591324439}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.875,"distances_sum":2084.651715399549}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.875,"distances_sum":2084.651715399549}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9682119963369966,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.875,"distances_sum":2084.651715399549}}, n: 9
mean(cfft.distances) = 0.6263421343642389
mean(cdnet.distances) = 0.43731815881380715
mean(crand.distances) = 0.33512105302221573
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8688888888888889
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9266666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9088888888888889
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8511111111111113
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8755555555555555
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8711111111111111
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9155555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8844444444444445
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8577777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8777777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8866666666666666
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8933333333333332
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 4, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
*** center 8: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 2, 10]]
** centroid: 11, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 11]]
finished with 14 centroids; started with 12
nc.class_map = [2, 1, 3, 2, 3, 1, 2, 3, 1, 3, 2, 2, 3, 3]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.6005882999300957] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 8, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.2076291757380252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2076291757380252, 0.15260186605923426] ***
*** finished computation of 7 references, err: [Inf, 0.2076291757380252, 0.15260186605923426] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [73, 61, 0]]
** centroid: 1, normalized-entropy: 0.9942073218788374, [(1, 73), (2, 61)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [88, 6, 0]]
** centroid: 2, normalized-entropy: 0.3424637724817958, [(1, 88), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 69, 14]]
** centroid: 4, normalized-entropy: 0.6546640527143932, [(2, 69), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 31, 0]]
** centroid: 5, normalized-entropy: 0.8510340662036064, [(1, 81), (2, 31)]
*** center 6: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 60, 0]]
** centroid: 7, normalized-entropy: 0.2055925081850832, [(1, 2), (2, 60)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18621962993354096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18621962993354096, 0.15134182035911833] ***
*** finished computation of 7 references, err: [Inf, 0.18621962993354096, 0.15134182035911833] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 47, 0]]
** centroid: 1, normalized-entropy: 0.9484880760741908, [(1, 81), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 6, 0]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(1, 78), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 50, 19]]
** centroid: 4, normalized-entropy: 0.849054424254048, [(2, 50), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 104, 0]]
** centroid: 5, normalized-entropy: 0.2685937636658219, [(1, 5), (2, 104)]
*** center 6: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 13, 0]]
** centroid: 7, normalized-entropy: 0.6451006442088483, [(1, 66), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28350055471898894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628] ***
*** starting iteration: 2; err: [Inf, 0.28350055471898894, 0.23419430838721628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667] ***
*** starting iteration: 3; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237] ***
*** starting iteration: 4; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241] ***
*** starting iteration: 5; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238] ***
*** starting iteration: 6; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985] ***
*** starting iteration: 7; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985, 0.1465246755330524] ***
*** starting iteration: 8; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985, 0.1465246755330524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985, 0.1465246755330524, 0.14542608210179317] ***
*** starting iteration: 9; err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985, 0.1465246755330524, 0.14542608210179317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985, 0.1465246755330524, 0.14542608210179317, 0.14503122388955778] ***
*** finished computation of 7 references, err: [Inf, 0.28350055471898894, 0.23419430838721628, 0.19184356640923667, 0.16512366422793237, 0.155028210466241, 0.1502275194381238, 0.14807392447744985, 0.1465246755330524, 0.14542608210179317, 0.14503122388955778] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [65, 27, 0]]
** centroid: 1, normalized-entropy: 0.8731720603476306, [(1, 65), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [89, 14, 0]]
** centroid: 2, normalized-entropy: 0.5734593207286953, [(1, 89), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 109, 23]]
** centroid: 4, normalized-entropy: 0.6673182376160576, [(2, 109), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [59, 27, 0]]
** centroid: 5, normalized-entropy: 0.8976844934141643, [(1, 59), (2, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [52, 48, 0]]
** centroid: 7, normalized-entropy: 0.998845535995202, [(1, 52), (2, 48)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22786368672998492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957] ***
*** starting iteration: 2; err: [Inf, 0.22786368672998492, 0.15840367751748957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587] ***
*** starting iteration: 3; err: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554] ***
*** starting iteration: 4; err: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558] ***
*** starting iteration: 5; err: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558, 0.1444983710018245] ***
*** starting iteration: 6; err: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558, 0.1444983710018245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558, 0.1444983710018245, 0.1433029935420861] ***
*** starting iteration: 7; err: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558, 0.1444983710018245, 0.1433029935420861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558, 0.1444983710018245, 0.1433029935420861, 0.1427558818901854] ***
*** finished computation of 7 references, err: [Inf, 0.22786368672998492, 0.15840367751748957, 0.14867732412184587, 0.14723102285804554, 0.14619828135227558, 0.1444983710018245, 0.1433029935420861, 0.1427558818901854] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [98, 14, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 98), (2, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 28, 0]]
** centroid: 3, normalized-entropy: 0.8478617451660525, [(1, 74), (2, 28)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [76, 6, 0]]
** centroid: 4, normalized-entropy: 0.3776463213737003, [(1, 76), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 97, 0]]
** centroid: 5, normalized-entropy: 0.19439185783157603, [(1, 3), (2, 97)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 82, 14]]
** centroid: 7, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1888907002871563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888907002871563, 0.15745085219935007] ***
*** starting iteration: 2; err: [Inf, 0.1888907002871563, 0.15745085219935007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672] ***
*** starting iteration: 3; err: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706] ***
*** starting iteration: 4; err: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706, 0.14419707588745334] ***
*** starting iteration: 5; err: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706, 0.14419707588745334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706, 0.14419707588745334, 0.1425728951685544] ***
*** starting iteration: 6; err: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706, 0.14419707588745334, 0.1425728951685544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706, 0.14419707588745334, 0.1425728951685544, 0.14201806929951039] ***
*** finished computation of 7 references, err: [Inf, 0.1888907002871563, 0.15745085219935007, 0.1508439769486672, 0.14671036986720706, 0.14419707588745334, 0.1425728951685544, 0.14201806929951039] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 52, 19]]
** centroid: 1, normalized-entropy: 0.8380078505079931, [(2, 52), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [124, 3, 0]]
** centroid: 2, normalized-entropy: 0.16132067110180368, [(1, 124), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 82, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [117, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [22, 60, 0]]
** centroid: 6, normalized-entropy: 0.8390040613676978, [(1, 22), (2, 60)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [70, 23, 0]]
** centroid: 7, normalized-entropy: 0.8069896049203007, [(1, 70), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20726703075631228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20726703075631228, 0.16421932152083688] ***
*** starting iteration: 2; err: [Inf, 0.20726703075631228, 0.16421932152083688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20726703075631228, 0.16421932152083688, 0.15472495394574293] ***
*** starting iteration: 3; err: [Inf, 0.20726703075631228, 0.16421932152083688, 0.15472495394574293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20726703075631228, 0.16421932152083688, 0.15472495394574293, 0.1511702588577573] ***
*** finished computation of 7 references, err: [Inf, 0.20726703075631228, 0.16421932152083688, 0.15472495394574293, 0.1511702588577573] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 68, 14]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(2, 68), (3, 14)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 47, 9]]
** centroid: 2, normalized-entropy: 0.6360156177392153, [(2, 47), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 38, 0]]
** centroid: 3, normalized-entropy: 0.8745562649663736, [(1, 91), (2, 38)]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 22, 0]]
** centroid: 5, normalized-entropy: 0.7682814090975241, [(1, 76), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [58, 50, 0]]
** centroid: 6, normalized-entropy: 0.9960383613659186, [(1, 58), (2, 50)]
*** center 7: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21595956276504621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21595956276504621, 0.1605735534859327] ***
*** starting iteration: 2; err: [Inf, 0.21595956276504621, 0.1605735534859327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21595956276504621, 0.1605735534859327, 0.15614010352603644] ***
*** starting iteration: 3; err: [Inf, 0.21595956276504621, 0.1605735534859327, 0.15614010352603644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21595956276504621, 0.1605735534859327, 0.15614010352603644, 0.15388740223554567] ***
*** finished computation of 7 references, err: [Inf, 0.21595956276504621, 0.1605735534859327, 0.15614010352603644, 0.15388740223554567] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [120, 35, 0]]
** centroid: 2, normalized-entropy: 0.7706290693639406, [(1, 120), (2, 35)]
*** center 3: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 22, 14]]
** centroid: 5, normalized-entropy: 0.9640787648082293, [(2, 22), (3, 14)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 101, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [97, 11, 0]]
** centroid: 7, normalized-entropy: 0.4748384883008607, [(1, 97), (2, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23015794519131175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23015794519131175, 0.1719450435909754] ***
*** starting iteration: 2; err: [Inf, 0.23015794519131175, 0.1719450435909754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23015794519131175, 0.1719450435909754, 0.1600790661634009] ***
*** starting iteration: 3; err: [Inf, 0.23015794519131175, 0.1719450435909754, 0.1600790661634009] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23015794519131175, 0.1719450435909754, 0.1600790661634009, 0.15285713718910848] ***
*** finished computation of 7 references, err: [Inf, 0.23015794519131175, 0.1719450435909754, 0.1600790661634009, 0.15285713718910848] ***
*** center 1: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [134, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [81, 14, 0]]
** centroid: 3, normalized-entropy: 0.6032154068313579, [(1, 81), (2, 14)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 99, 19]]
** centroid: 4, normalized-entropy: 0.6367368786558286, [(2, 99), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 50, 0]]
** centroid: 5, normalized-entropy: 0.9996995428565171, [(1, 48), (2, 50)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 57, 0]]
** centroid: 6, normalized-entropy: 0.9629004147713269, [(1, 36), (2, 57)]
*** center 7: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3716035136930622] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3716035136930622, 0.25739413026339925] ***
*** starting iteration: 2; err: [Inf, 0.3716035136930622, 0.25739413026339925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3716035136930622, 0.25739413026339925, 0.24331117362516733] ***
*** starting iteration: 3; err: [Inf, 0.3716035136930622, 0.25739413026339925, 0.24331117362516733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3716035136930622, 0.25739413026339925, 0.24331117362516733, 0.24076342205419107] ***
*** finished computation of 3 references, err: [Inf, 0.3716035136930622, 0.25739413026339925, 0.24331117362516733, 0.24076342205419107] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [124, 101, 1]]
** centroid: 1, normalized-entropy: 0.6492455417494767, [(1, 124), (2, 101), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [95, 124, 22]]
** centroid: 3, normalized-entropy: 0.844142670352658, [(1, 95), (2, 124), (3, 22)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4047584912280316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4047584912280316, 0.25644924523199963] ***
*** starting iteration: 2; err: [Inf, 0.4047584912280316, 0.25644924523199963] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4047584912280316, 0.25644924523199963, 0.23938504416241438] ***
*** starting iteration: 3; err: [Inf, 0.4047584912280316, 0.25644924523199963, 0.23938504416241438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4047584912280316, 0.25644924523199963, 0.23938504416241438, 0.23505525086410176] ***
*** finished computation of 3 references, err: [Inf, 0.4047584912280316, 0.25644924523199963, 0.23938504416241438, 0.23505525086410176] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [116, 134, 14]]
** centroid: 1, normalized-entropy: 0.7839668596891802, [(1, 116), (2, 134), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [189, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 93, 0]]
** centroid: 3, normalized-entropy: 0.9876154857316478, [(1, 121), (2, 93)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29792066603044476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29792066603044476, 0.25287326119806636] ***
*** starting iteration: 2; err: [Inf, 0.29792066603044476, 0.25287326119806636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29792066603044476, 0.25287326119806636, 0.24167048037638594] ***
*** starting iteration: 3; err: [Inf, 0.29792066603044476, 0.25287326119806636, 0.24167048037638594] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29792066603044476, 0.25287326119806636, 0.24167048037638594, 0.23725329609964785] ***
*** finished computation of 3 references, err: [Inf, 0.29792066603044476, 0.25287326119806636, 0.24167048037638594, 0.23725329609964785] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [127, 122, 10]]
** centroid: 1, normalized-entropy: 0.7552184209518795, [(1, 127), (2, 122), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [97, 98, 9]]
** centroid: 3, normalized-entropy: 0.7676693477186127, [(1, 97), (2, 98), (3, 9)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33074823493702904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33074823493702904, 0.2538961666432005] ***
*** starting iteration: 2; err: [Inf, 0.33074823493702904, 0.2538961666432005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33074823493702904, 0.2538961666432005, 0.24151151702674972] ***
*** starting iteration: 3; err: [Inf, 0.33074823493702904, 0.2538961666432005, 0.24151151702674972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33074823493702904, 0.2538961666432005, 0.24151151702674972, 0.24030115965518867] ***
*** finished computation of 3 references, err: [Inf, 0.33074823493702904, 0.2538961666432005, 0.24151151702674972, 0.24030115965518867] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [251, 2, 0]]
** centroid: 1, normalized-entropy: 0.06656103698030312, [(1, 251), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [6, 179, 23]]
** centroid: 2, normalized-entropy: 0.432358983209846, [(1, 6), (2, 179), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [161, 44, 0]]
** centroid: 3, normalized-entropy: 0.7502478624493758, [(1, 161), (2, 44)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3005095258609265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3005095258609265, 0.2366462210430645] ***
*** starting iteration: 2; err: [Inf, 0.3005095258609265, 0.2366462210430645] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3005095258609265, 0.2366462210430645, 0.23214228694484956] ***
*** starting iteration: 3; err: [Inf, 0.3005095258609265, 0.2366462210430645, 0.23214228694484956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3005095258609265, 0.2366462210430645, 0.23214228694484956, 0.23190612030931856] ***
*** finished computation of 3 references, err: [Inf, 0.3005095258609265, 0.2366462210430645, 0.23214228694484956, 0.23190612030931856] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [191, 43, 0]]
** centroid: 1, normalized-entropy: 0.6882352725448654, [(1, 191), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [235, 16, 0]]
** centroid: 2, normalized-entropy: 0.34213525736601147, [(1, 235), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 168, 14]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 168), (3, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29123911942108194] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29123911942108194, 0.23600158107647118] ***
*** starting iteration: 2; err: [Inf, 0.29123911942108194, 0.23600158107647118] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29123911942108194, 0.23600158107647118, 0.2318083078222073] ***
*** starting iteration: 3; err: [Inf, 0.29123911942108194, 0.23600158107647118, 0.2318083078222073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29123911942108194, 0.23600158107647118, 0.2318083078222073, 0.23169211785810284] ***
*** finished computation of 3 references, err: [Inf, 0.29123911942108194, 0.23600158107647118, 0.2318083078222073, 0.23169211785810284] ***
*** center 1: selecting labels [1] (freq >= 1) [from [244, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [159, 49, 0]]
** centroid: 2, normalized-entropy: 0.78760715923793, [(1, 159), (2, 49)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [25, 171, 19]]
** centroid: 3, normalized-entropy: 0.5886769899006873, [(1, 25), (2, 171), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.264572037680371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.264572037680371, 0.2123142108628834] ***
*** starting iteration: 2; err: [Inf, 0.264572037680371, 0.2123142108628834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.264572037680371, 0.2123142108628834, 0.2051431549235468] ***
*** starting iteration: 3; err: [Inf, 0.264572037680371, 0.2123142108628834, 0.2051431549235468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.264572037680371, 0.2123142108628834, 0.2051431549235468, 0.20071989733218173] ***
*** finished computation of 7 references, err: [Inf, 0.264572037680371, 0.2123142108628834, 0.2051431549235468, 0.20071989733218173] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [105, 18, 0]]
** centroid: 1, normalized-entropy: 0.6006085754131871, [(1, 105), (2, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [7, 70, 0]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(1, 7), (2, 70)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 44, 0]]
** centroid: 4, normalized-entropy: 0.9880162151534644, [(1, 57), (2, 44)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 56, 1]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 32, 22]]
** centroid: 6, normalized-entropy: 0.975119064940866, [(2, 32), (3, 22)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [122, 5, 0]]
** centroid: 7, normalized-entropy: 0.2393965319917804, [(1, 122), (2, 5)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2381475626475651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381475626475651, 0.18608171267035617] ***
*** starting iteration: 2; err: [Inf, 0.2381475626475651, 0.18608171267035617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381475626475651, 0.18608171267035617, 0.17876668671925164] ***
*** starting iteration: 3; err: [Inf, 0.2381475626475651, 0.18608171267035617, 0.17876668671925164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2381475626475651, 0.18608171267035617, 0.17876668671925164, 0.17836340141484047] ***
*** finished computation of 7 references, err: [Inf, 0.2381475626475651, 0.18608171267035617, 0.17876668671925164, 0.17836340141484047] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 68, 14]]
** centroid: 1, normalized-entropy: 0.6593758812786991, [(2, 68), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 34, 0]]
** centroid: 2, normalized-entropy: 0.9248187049730301, [(1, 66), (2, 34)]
*** center 3: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [82, 9, 0]]
** centroid: 4, normalized-entropy: 0.4655024490815131, [(1, 82), (2, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 16, 0]]
** centroid: 5, normalized-entropy: 0.6751914401458716, [(1, 74), (2, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 100, 0]]
** centroid: 6, normalized-entropy: 0.18999075553626757, [(1, 3), (2, 100)]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26668659703334097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26668659703334097, 0.20435093815830804] ***
*** starting iteration: 2; err: [Inf, 0.26668659703334097, 0.20435093815830804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26668659703334097, 0.20435093815830804, 0.19980461289757107] ***
*** starting iteration: 3; err: [Inf, 0.26668659703334097, 0.20435093815830804, 0.19980461289757107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26668659703334097, 0.20435093815830804, 0.19980461289757107, 0.19777773416948796] ***
*** finished computation of 7 references, err: [Inf, 0.26668659703334097, 0.20435093815830804, 0.19980461289757107, 0.19777773416948796] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 6, 0]]
** centroid: 2, normalized-entropy: 0.4178642624458583, [(1, 65), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [35, 53, 0]]
** centroid: 3, normalized-entropy: 0.9696055994904408, [(1, 35), (2, 53)]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [128, 31, 0]]
** centroid: 5, normalized-entropy: 0.7117503413095558, [(1, 128), (2, 31)]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 38, 19]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 38), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21171504973473065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21171504973473065, 0.15748750664120367] ***
*** starting iteration: 2; err: [Inf, 0.21171504973473065, 0.15748750664120367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21171504973473065, 0.15748750664120367, 0.15152849404556626] ***
*** starting iteration: 3; err: [Inf, 0.21171504973473065, 0.15748750664120367, 0.15152849404556626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21171504973473065, 0.15748750664120367, 0.15152849404556626, 0.14952646384600204] ***
*** starting iteration: 4; err: [Inf, 0.21171504973473065, 0.15748750664120367, 0.15152849404556626, 0.14952646384600204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21171504973473065, 0.15748750664120367, 0.15152849404556626, 0.14952646384600204, 0.14867606238785758] ***
*** finished computation of 7 references, err: [Inf, 0.21171504973473065, 0.15748750664120367, 0.15152849404556626, 0.14952646384600204, 0.14867606238785758] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [111, 2, 0]]
** centroid: 1, normalized-entropy: 0.12831912909782706, [(1, 111), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [122, 8, 0]]
** centroid: 2, normalized-entropy: 0.33352200393097675, [(1, 122), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 23]]
** centroid: 3, normalized-entropy: 0.9134601452569628, [(2, 47), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 17, 0]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(1, 68), (2, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 68, 0]]
** centroid: 6, normalized-entropy: 0.18717625687320805, [(1, 2), (2, 68)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 83, 0]]
** centroid: 7, normalized-entropy: 0.35620480393132253, [(1, 6), (2, 83)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20388412988022797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20388412988022797, 0.1475844822197069] ***
*** starting iteration: 2; err: [Inf, 0.20388412988022797, 0.1475844822197069] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20388412988022797, 0.1475844822197069, 0.1436220011474897] ***
*** starting iteration: 3; err: [Inf, 0.20388412988022797, 0.1475844822197069, 0.1436220011474897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20388412988022797, 0.1475844822197069, 0.1436220011474897, 0.14308687168867446] ***
*** finished computation of 7 references, err: [Inf, 0.20388412988022797, 0.1475844822197069, 0.1436220011474897, 0.14308687168867446] ***
*** center 1: selecting labels [1] (freq >= 2) [from [128, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 22, 0]]
** centroid: 2, normalized-entropy: 0.7849920887641585, [(1, 72), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 73, 14]]
** centroid: 3, normalized-entropy: 0.6365048555378351, [(2, 73), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [45, 39, 0]]
** centroid: 5, normalized-entropy: 0.9963165195589622, [(1, 45), (2, 39)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 93, 0]]
** centroid: 6, normalized-entropy: 0.14731066693045392, [(1, 2), (2, 93)]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18118253346348273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18118253346348273, 0.1487655605223013] ***
*** starting iteration: 2; err: [Inf, 0.18118253346348273, 0.1487655605223013] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18118253346348273, 0.1487655605223013, 0.14335108854328987] ***
*** starting iteration: 3; err: [Inf, 0.18118253346348273, 0.1487655605223013, 0.14335108854328987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18118253346348273, 0.1487655605223013, 0.14335108854328987, 0.14186402048491153] ***
*** starting iteration: 4; err: [Inf, 0.18118253346348273, 0.1487655605223013, 0.14335108854328987, 0.14186402048491153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18118253346348273, 0.1487655605223013, 0.14335108854328987, 0.14186402048491153, 0.14118306201392564] ***
*** finished computation of 7 references, err: [Inf, 0.18118253346348273, 0.1487655605223013, 0.14335108854328987, 0.14186402048491153, 0.14118306201392564] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [89, 41, 0]]
** centroid: 1, normalized-entropy: 0.8992916011411405, [(1, 89), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 24, 0]]
** centroid: 2, normalized-entropy: 0.8238116333123173, [(1, 69), (2, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 72, 19]]
** centroid: 3, normalized-entropy: 0.7391658175693049, [(2, 72), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 83, 0]]
** centroid: 5, normalized-entropy: 0.5954670513561874, [(1, 14), (2, 83)]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.32229808369768903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32229808369768903, 0.2554288173021676] ***
*** starting iteration: 2; err: [Inf, 0.32229808369768903, 0.2554288173021676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32229808369768903, 0.2554288173021676, 0.23934539350158013] ***
*** starting iteration: 3; err: [Inf, 0.32229808369768903, 0.2554288173021676, 0.23934539350158013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32229808369768903, 0.2554288173021676, 0.23934539350158013, 0.23859844631767152] ***
*** finished computation of 3 references, err: [Inf, 0.32229808369768903, 0.2554288173021676, 0.23934539350158013, 0.23859844631767152] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [180, 35, 0]]
** centroid: 1, normalized-entropy: 0.6409441847875289, [(1, 180), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [238, 35, 0]]
** centroid: 2, normalized-entropy: 0.552495114325111, [(1, 238), (2, 35)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 155, 23]]
** centroid: 3, normalized-entropy: 0.5552772073325881, [(2, 155), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2369718797074846] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2369718797074846, 0.2321747853148399] ***
*** starting iteration: 2; err: [Inf, 0.2369718797074846, 0.2321747853148399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2369718797074846, 0.2321747853148399, 0.23201106581976566] ***
*** finished computation of 3 references, err: [Inf, 0.2369718797074846, 0.2321747853148399, 0.23201106581976566] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [195, 42, 0]]
** centroid: 1, normalized-entropy: 0.6739468651941155, [(1, 195), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [231, 25, 0]]
** centroid: 2, normalized-entropy: 0.4615217448770414, [(1, 231), (2, 25)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 160, 14]]
** centroid: 3, normalized-entropy: 0.40379715049939235, [(2, 160), (3, 14)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.278248978227187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.278248978227187, 0.240943215500474] ***
*** starting iteration: 2; err: [Inf, 0.278248978227187, 0.240943215500474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.278248978227187, 0.240943215500474, 0.23598404212071486] ***
*** starting iteration: 3; err: [Inf, 0.278248978227187, 0.240943215500474, 0.23598404212071486] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.278248978227187, 0.240943215500474, 0.23598404212071486, 0.23519421190636391] ***
*** finished computation of 3 references, err: [Inf, 0.278248978227187, 0.240943215500474, 0.23598404212071486, 0.23519421190636391] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [122, 92, 0]]
** centroid: 1, normalized-entropy: 0.9857770091118137, [(1, 122), (2, 92)]
*** center 2: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [108, 128, 19]]
** centroid: 3, normalized-entropy: 0.8222416427152309, [(1, 108), (2, 128), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22797327458176078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22797327458176078, 0.1968233552985117] ***
*** starting iteration: 2; err: [Inf, 0.22797327458176078, 0.1968233552985117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22797327458176078, 0.1968233552985117, 0.1929907901848837] ***
*** starting iteration: 3; err: [Inf, 0.22797327458176078, 0.1968233552985117, 0.1929907901848837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22797327458176078, 0.1968233552985117, 0.1929907901848837, 0.19084646414011694] ***
*** finished computation of 7 references, err: [Inf, 0.22797327458176078, 0.1968233552985117, 0.1929907901848837, 0.19084646414011694] ***
*** center 1: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [98, 27, 0]]
** centroid: 2, normalized-entropy: 0.7527960664084546, [(1, 98), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [14, 65, 0]]
** centroid: 3, normalized-entropy: 0.6739468651941155, [(1, 14), (2, 65)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 30, 0]]
** centroid: 4, normalized-entropy: 0.9219957030944405, [(1, 59), (2, 30)]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 1, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 102, 23]]
** centroid: 7, normalized-entropy: 0.6887498056988564, [(2, 102), (3, 23)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22711827575802981] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22711827575802981, 0.20350369539340843] ***
*** starting iteration: 2; err: [Inf, 0.22711827575802981, 0.20350369539340843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22711827575802981, 0.20350369539340843, 0.19899389915576002] ***
*** starting iteration: 3; err: [Inf, 0.22711827575802981, 0.20350369539340843, 0.19899389915576002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22711827575802981, 0.20350369539340843, 0.19899389915576002, 0.19667482297906633] ***
*** finished computation of 7 references, err: [Inf, 0.22711827575802981, 0.20350369539340843, 0.19899389915576002, 0.19667482297906633] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [39, 23, 0]]
** centroid: 4, normalized-entropy: 0.9514122535330207, [(1, 39), (2, 23)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 78, 14]]
** centroid: 5, normalized-entropy: 0.6152538910563409, [(2, 78), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 88, 0]]
** centroid: 6, normalized-entropy: 0.5032583347756457, [(1, 11), (2, 88)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [122, 38, 0]]
** centroid: 7, normalized-entropy: 0.79085809055281, [(1, 122), (2, 38)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2589061209782567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2589061209782567, 0.20580924233642298] ***
*** starting iteration: 2; err: [Inf, 0.2589061209782567, 0.20580924233642298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2589061209782567, 0.20580924233642298, 0.1963677751877788] ***
*** starting iteration: 3; err: [Inf, 0.2589061209782567, 0.20580924233642298, 0.1963677751877788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2589061209782567, 0.20580924233642298, 0.1963677751877788, 0.19261383507163382] ***
*** finished computation of 7 references, err: [Inf, 0.2589061209782567, 0.20580924233642298, 0.1963677751877788, 0.19261383507163382] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [93, 13, 0]]
** centroid: 1, normalized-entropy: 0.5369064378756415, [(1, 93), (2, 13)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [99, 2, 0]]
** centroid: 2, normalized-entropy: 0.1403272709905931, [(1, 99), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [75, 45, 0]]
** centroid: 4, normalized-entropy: 0.954434002924965, [(1, 75), (2, 45)]
*** center 5: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 116, 19]]
** centroid: 6, normalized-entropy: 0.5861754623084124, [(2, 116), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 44, 0]]
** centroid: 7, normalized-entropy: 0.9517626756348312, [(1, 26), (2, 44)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3111783703621309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111783703621309, 0.2291618172490449] ***
*** starting iteration: 2; err: [Inf, 0.3111783703621309, 0.2291618172490449] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963] ***
*** starting iteration: 3; err: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024] ***
*** starting iteration: 4; err: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024, 0.19794052852703645] ***
*** starting iteration: 5; err: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024, 0.19794052852703645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024, 0.19794052852703645, 0.19590950300413612] ***
*** starting iteration: 6; err: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024, 0.19794052852703645, 0.19590950300413612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024, 0.19794052852703645, 0.19590950300413612, 0.19494148070907202] ***
*** finished computation of 7 references, err: [Inf, 0.3111783703621309, 0.2291618172490449, 0.20584065619472963, 0.2004561519639024, 0.19794052852703645, 0.19590950300413612, 0.19494148070907202] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [140, 13, 0]]
** centroid: 1, normalized-entropy: 0.41944445244343925, [(1, 140), (2, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [73, 19, 0]]
** centroid: 3, normalized-entropy: 0.7347813522127804, [(1, 73), (2, 19)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 19, 23]]
** centroid: 4, normalized-entropy: 0.9934472383802028, [(2, 19), (3, 23)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 49, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [79, 33, 0]]
** centroid: 6, normalized-entropy: 0.8746434484431391, [(1, 79), (2, 33)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 92, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23364238047168062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23364238047168062, 0.2045923762932431] ***
*** starting iteration: 2; err: [Inf, 0.23364238047168062, 0.2045923762932431] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274] ***
*** starting iteration: 3; err: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012] ***
*** starting iteration: 4; err: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012, 0.19108735419763742] ***
*** starting iteration: 5; err: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012, 0.19108735419763742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012, 0.19108735419763742, 0.1885606914380289] ***
*** starting iteration: 6; err: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012, 0.19108735419763742, 0.1885606914380289] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012, 0.19108735419763742, 0.1885606914380289, 0.18802727237232086] ***
*** finished computation of 7 references, err: [Inf, 0.23364238047168062, 0.2045923762932431, 0.1997436367965274, 0.19552814295743012, 0.19108735419763742, 0.1885606914380289, 0.18802727237232086] ***
*** center 1: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 37, 0]]
** centroid: 2, normalized-entropy: 0.9617779752980338, [(1, 59), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [92, 18, 0]]
** centroid: 3, normalized-entropy: 0.6429383500409613, [(1, 92), (2, 18)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 51, 13]]
** centroid: 4, normalized-entropy: 0.7281342378690551, [(2, 51), (3, 13)]
*** center 5: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [38, 55, 0]]
** centroid: 6, normalized-entropy: 0.9757606417025202, [(1, 38), (2, 55)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 66, 1]]
** centroid: 7, normalized-entropy: 0.11190990870168394, [(2, 66), (3, 1)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2582076013903657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063] ***
*** starting iteration: 2; err: [Inf, 0.2582076013903657, 0.22514359623674063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425] ***
*** starting iteration: 3; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384] ***
*** starting iteration: 4; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874] ***
*** starting iteration: 5; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582] ***
*** starting iteration: 6; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377] ***
*** starting iteration: 7; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802] ***
*** starting iteration: 8; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802, 0.19304052858670678] ***
*** starting iteration: 9; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802, 0.19304052858670678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802, 0.19304052858670678, 0.1919599166279589] ***
*** starting iteration: 10; err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802, 0.19304052858670678, 0.1919599166279589] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802, 0.19304052858670678, 0.1919599166279589, 0.1910781370757938] ***
*** finished computation of 7 references, err: [Inf, 0.2582076013903657, 0.22514359623674063, 0.21423723072098425, 0.2015510582933384, 0.19928893136946874, 0.19757174837334582, 0.1957178262210377, 0.19439589416236802, 0.19304052858670678, 0.1919599166279589, 0.1910781370757938] ***
*** center 1: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 80, 19]]
** centroid: 2, normalized-entropy: 0.7054690408228712, [(2, 80), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [87, 45, 0]]
** centroid: 3, normalized-entropy: 0.9256859869821296, [(1, 87), (2, 45)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [17, 74, 0]]
** centroid: 5, normalized-entropy: 0.6947570868163001, [(1, 17), (2, 74)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [91, 21, 0]]
** centroid: 7, normalized-entropy: 0.6962122601251459, [(1, 91), (2, 21)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19140733573543797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19140733573543797, 0.1548275661818381] ***
*** starting iteration: 2; err: [Inf, 0.19140733573543797, 0.1548275661818381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19140733573543797, 0.1548275661818381, 0.15310592796407393] ***
*** starting iteration: 3; err: [Inf, 0.19140733573543797, 0.1548275661818381, 0.15310592796407393] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19140733573543797, 0.1548275661818381, 0.15310592796407393, 0.1521655658879471] ***
*** finished computation of 7 references, err: [Inf, 0.19140733573543797, 0.1548275661818381, 0.15310592796407393, 0.1521655658879471] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 62, 0]]
** centroid: 1, normalized-entropy: 0.8160172973428256, [(1, 21), (2, 62)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 48, 1]]
** centroid: 2, normalized-entropy: 0.14372616993938164, [(2, 48), (3, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [89, 32, 0]]
** centroid: 3, normalized-entropy: 0.8334064161505499, [(1, 89), (2, 32)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [108, 5, 0]]
** centroid: 4, normalized-entropy: 0.26144010659136985, [(1, 108), (2, 5)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 22]]
** centroid: 5, normalized-entropy: 0.8485481782946159, [(2, 58), (3, 22)]
*** center 6: selecting labels [1] (freq >= 1) [from [129, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 20, 0]]
** centroid: 7, normalized-entropy: 0.7597659876428757, [(1, 71), (2, 20)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2433079887639502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694] ***
*** starting iteration: 2; err: [Inf, 0.2433079887639502, 0.1801361944428694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585] ***
*** starting iteration: 3; err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835] ***
*** starting iteration: 4; err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671] ***
*** starting iteration: 5; err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197] ***
*** starting iteration: 6; err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197, 0.14361527804676247] ***
*** starting iteration: 7; err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197, 0.14361527804676247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197, 0.14361527804676247, 0.14208343003721519] ***
*** starting iteration: 8; err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197, 0.14361527804676247, 0.14208343003721519] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197, 0.14361527804676247, 0.14208343003721519, 0.14134199441322634] ***
*** finished computation of 7 references, err: [Inf, 0.2433079887639502, 0.1801361944428694, 0.16142408631747585, 0.15477674331437835, 0.1506781665764671, 0.14685953285362197, 0.14361527804676247, 0.14208343003721519, 0.14134199441322634] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [89, 22, 0]]
** centroid: 3, normalized-entropy: 0.7183098216110975, [(1, 89), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [3, 93, 0]]
** centroid: 4, normalized-entropy: 0.2006223243127146, [(1, 3), (2, 93)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [79, 7, 0]]
** centroid: 5, normalized-entropy: 0.40707680632541937, [(1, 79), (2, 7)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 34, 0]]
** centroid: 6, normalized-entropy: 0.9313043685793762, [(1, 64), (2, 34)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 71, 14]]
** centroid: 7, normalized-entropy: 0.6454495903301855, [(2, 71), (3, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23920851375633986] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651] ***
*** starting iteration: 2; err: [Inf, 0.23920851375633986, 0.18021199797912651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532] ***
*** starting iteration: 3; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756] ***
*** starting iteration: 4; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006] ***
*** starting iteration: 5; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943] ***
*** starting iteration: 6; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315] ***
*** starting iteration: 7; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315, 0.14767791600088062] ***
*** starting iteration: 8; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315, 0.14767791600088062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315, 0.14767791600088062, 0.14632911268744556] ***
*** starting iteration: 9; err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315, 0.14767791600088062, 0.14632911268744556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315, 0.14767791600088062, 0.14632911268744556, 0.14551942154759545] ***
*** finished computation of 7 references, err: [Inf, 0.23920851375633986, 0.18021199797912651, 0.16569269690320532, 0.1595082919181756, 0.15537348040973006, 0.15173112461517943, 0.1495867952672315, 0.14767791600088062, 0.14632911268744556, 0.14551942154759545] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 74, 0]]
** centroid: 1, normalized-entropy: 0.837602456861142, [(1, 27), (2, 74)]
*** center 2: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [11, 73, 0]]
** centroid: 4, normalized-entropy: 0.5600443203590992, [(1, 11), (2, 73)]
*** center 5: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 67, 19]]
** centroid: 6, normalized-entropy: 0.7618624463753669, [(2, 67), (3, 19)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [67, 6, 0]]
** centroid: 7, normalized-entropy: 0.4098553703184051, [(1, 67), (2, 6)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26968048691998486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26968048691998486, 0.2185671672954954] ***
*** starting iteration: 2; err: [Inf, 0.26968048691998486, 0.2185671672954954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26968048691998486, 0.2185671672954954, 0.2123696545248029] ***
*** starting iteration: 3; err: [Inf, 0.26968048691998486, 0.2185671672954954, 0.2123696545248029] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26968048691998486, 0.2185671672954954, 0.2123696545248029, 0.205847037558978] ***
*** finished computation of 7 references, err: [Inf, 0.26968048691998486, 0.2185671672954954, 0.2123696545248029, 0.205847037558978] ***
*** center 1: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 2, 0]]
** centroid: 2, normalized-entropy: 0.19823496409776642, [(1, 63), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 66, 0]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(1, 42), (2, 66)]
*** center 4: selecting labels [1] (freq >= 2) [from [130, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [42, 62, 0]]
** centroid: 5, normalized-entropy: 0.9731560354421095, [(1, 42), (2, 62)]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 95, 23]]
** centroid: 7, normalized-entropy: 0.7116412885080164, [(2, 95), (3, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2833038918091741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833038918091741, 0.2192247215758959] ***
*** starting iteration: 2; err: [Inf, 0.2833038918091741, 0.2192247215758959] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833038918091741, 0.2192247215758959, 0.1943780711329803] ***
*** starting iteration: 3; err: [Inf, 0.2833038918091741, 0.2192247215758959, 0.1943780711329803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2833038918091741, 0.2192247215758959, 0.1943780711329803, 0.19134875535727597] ***
*** finished computation of 7 references, err: [Inf, 0.2833038918091741, 0.2192247215758959, 0.1943780711329803, 0.19134875535727597] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [115, 7, 0]]
** centroid: 1, normalized-entropy: 0.3169435645054571, [(1, 115), (2, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 89, 14]]
** centroid: 3, normalized-entropy: 0.5734593207286953, [(2, 89), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 13, 0]]
** centroid: 5, normalized-entropy: 0.6550239908788728, [(1, 64), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 84, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 6), (2, 84)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [82, 34, 0]]
** centroid: 7, normalized-entropy: 0.8726965039103788, [(1, 82), (2, 34)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24700569162547387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700569162547387, 0.2068376958543348] ***
*** starting iteration: 2; err: [Inf, 0.24700569162547387, 0.2068376958543348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700569162547387, 0.2068376958543348, 0.20092720615592363] ***
*** starting iteration: 3; err: [Inf, 0.24700569162547387, 0.2068376958543348, 0.20092720615592363] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24700569162547387, 0.2068376958543348, 0.20092720615592363, 0.1975979885237216] ***
*** finished computation of 7 references, err: [Inf, 0.24700569162547387, 0.2068376958543348, 0.20092720615592363, 0.1975979885237216] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 32, 0]]
** centroid: 1, normalized-entropy: 0.9890934397021431, [(1, 25), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [132, 18, 0]]
** centroid: 2, normalized-entropy: 0.5293608652873645, [(1, 132), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 42, 0]]
** centroid: 3, normalized-entropy: 0.9886994082884974, [(1, 54), (2, 42)]
*** center 4: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 55, 2]]
** centroid: 6, normalized-entropy: 0.2192973081321754, [(2, 55), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 73, 17]]
** centroid: 7, normalized-entropy: 0.6991413063352633, [(2, 73), (3, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1936984161214271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1936984161214271, 0.1581744349531217] ***
*** finished computation of 7 references, err: [Inf, 0.1936984161214271, 0.1581744349531217] ***
*** center 1: selecting labels [1] (freq >= 2) [from [142, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 58, 23]]
** centroid: 2, normalized-entropy: 0.8607781176165941, [(2, 58), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 23, 0]]
** centroid: 3, normalized-entropy: 0.8561146277685725, [(1, 59), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [86, 4, 0]]
** centroid: 4, normalized-entropy: 0.2623112196143368, [(1, 86), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 81, 0]]
** centroid: 5, normalized-entropy: 0.8510340662036064, [(1, 31), (2, 81)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 59, 0]]
** centroid: 6, normalized-entropy: 0.4441260450795996, [(1, 6), (2, 59)]
*** center 7: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9199738660816505, 0.9119868371365377, 0.9019948091804378, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 14
iteration 2 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9199738660816505, 0.9119868371365377, 0.9019948091804378, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.24216824754871227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24216824754871227, 0.2025751128796958] ***
*** starting iteration: 2; err: [Inf, 0.24216824754871227, 0.2025751128796958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24216824754871227, 0.2025751128796958, 0.19790912108906955] ***
*** starting iteration: 3; err: [Inf, 0.24216824754871227, 0.2025751128796958, 0.19790912108906955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24216824754871227, 0.2025751128796958, 0.19790912108906955, 0.1948980549497211] ***
*** finished computation of 7 references, err: [Inf, 0.24216824754871227, 0.2025751128796958, 0.19790912108906955, 0.1948980549497211] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 3, 0]]
** centroid: 1, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 128, 23]]
** centroid: 2, normalized-entropy: 0.6156105340978519, [(2, 128), (3, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [69, 37, 0]]
** centroid: 4, normalized-entropy: 0.9332226994125877, [(1, 69), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [89, 22, 0]]
** centroid: 5, normalized-entropy: 0.7183098216110975, [(1, 89), (2, 22)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 35, 0]]
** centroid: 6, normalized-entropy: 0.9340680553754911, [(1, 65), (2, 35)]
*** center 7: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2706150033174717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706150033174717, 0.2038641270840711] ***
*** starting iteration: 2; err: [Inf, 0.2706150033174717, 0.2038641270840711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706150033174717, 0.2038641270840711, 0.19263864915002546] ***
*** starting iteration: 3; err: [Inf, 0.2706150033174717, 0.2038641270840711, 0.19263864915002546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2706150033174717, 0.2038641270840711, 0.19263864915002546, 0.18765766316214283] ***
*** finished computation of 7 references, err: [Inf, 0.2706150033174717, 0.2038641270840711, 0.19263864915002546, 0.18765766316214283] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 97, 14]]
** centroid: 1, normalized-entropy: 0.5467175366117469, [(2, 97), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 42, 0]]
** centroid: 2, normalized-entropy: 0.9903070204513952, [(1, 53), (2, 42)]
*** center 3: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 35, 0]]
** centroid: 4, normalized-entropy: 0.8928667618459025, [(1, 78), (2, 35)]
*** center 5: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [72, 25, 0]]
** centroid: 6, normalized-entropy: 0.8233045447828534, [(1, 72), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 28, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 42), (2, 28)]
finished with 11 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2883130584527896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2883130584527896, 0.2035836068490266] ***
*** starting iteration: 2; err: [Inf, 0.2883130584527896, 0.2035836068490266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2883130584527896, 0.2035836068490266, 0.19047750180483847] ***
*** starting iteration: 3; err: [Inf, 0.2883130584527896, 0.2035836068490266, 0.19047750180483847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2883130584527896, 0.2035836068490266, 0.19047750180483847, 0.1855253336268353] ***
*** finished computation of 7 references, err: [Inf, 0.2883130584527896, 0.2035836068490266, 0.19047750180483847, 0.1855253336268353] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 29, 0]]
** centroid: 1, normalized-entropy: 0.9297432191769048, [(1, 55), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [80, 29, 0]]
** centroid: 2, normalized-entropy: 0.8357467426696918, [(1, 80), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 46, 19]]
** centroid: 3, normalized-entropy: 0.871683617119982, [(2, 46), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [96, 22, 0]]
** centroid: 5, normalized-entropy: 0.693965967334286, [(1, 96), (2, 22)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 94, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 15)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9269958581335827, 0.9199738660816505, 0.9119868371365377, 0.9019948091804378, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.37241883066625475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816] ***
*** starting iteration: 2; err: [Inf, 0.37241883066625475, 0.23957858288341816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156] ***
*** starting iteration: 3; err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792] ***
*** starting iteration: 4; err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873] ***
*** starting iteration: 5; err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096] ***
*** starting iteration: 6; err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096, 0.20720065454602823] ***
*** starting iteration: 7; err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096, 0.20720065454602823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096, 0.20720065454602823, 0.20562436645039478] ***
*** starting iteration: 8; err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096, 0.20720065454602823, 0.20562436645039478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096, 0.20720065454602823, 0.20562436645039478, 0.20541356250017254] ***
*** finished computation of 7 references, err: [Inf, 0.37241883066625475, 0.23957858288341816, 0.22529396992708156, 0.21623065357876792, 0.2119339444050873, 0.20881672593130096, 0.20720065454602823, 0.20562436645039478, 0.20541356250017254] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 71, 0]]
** centroid: 1, normalized-entropy: 0.2447650820208971, [(1, 3), (2, 71)]
*** center 2: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [4, 56, 0]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(1, 4), (2, 56)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [55, 20, 0]]
** centroid: 4, normalized-entropy: 0.8366407419411671, [(1, 55), (2, 20)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 45, 23]]
** centroid: 5, normalized-entropy: 0.9231199835423002, [(2, 45), (3, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [110, 33, 0]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(1, 110), (2, 33)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24074386433604686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544] ***
*** starting iteration: 2; err: [Inf, 0.24074386433604686, 0.1981799328836544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837] ***
*** starting iteration: 3; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523] ***
*** starting iteration: 4; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713] ***
*** starting iteration: 5; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903] ***
*** starting iteration: 6; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637] ***
*** starting iteration: 7; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637, 0.18199412593467237] ***
*** starting iteration: 8; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637, 0.18199412593467237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637, 0.18199412593467237, 0.18042887441920064] ***
*** starting iteration: 9; err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637, 0.18199412593467237, 0.18042887441920064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637, 0.18199412593467237, 0.18042887441920064, 0.17974802956258742] ***
*** finished computation of 7 references, err: [Inf, 0.24074386433604686, 0.1981799328836544, 0.19222870567391837, 0.18979548598392523, 0.187768056914713, 0.18601186795863903, 0.184181680151637, 0.18199412593467237, 0.18042887441920064, 0.17974802956258742] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [72, 21, 0]]
** centroid: 1, normalized-entropy: 0.7706290693639406, [(1, 72), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [87, 28, 0]]
** centroid: 2, normalized-entropy: 0.8007768165404425, [(1, 87), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [8, 92, 0]]
** centroid: 3, normalized-entropy: 0.4021791902022729, [(1, 8), (2, 92)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [83, 9, 0]]
** centroid: 6, normalized-entropy: 0.4620663276355394, [(1, 83), (2, 9)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 77, 14]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(2, 77), (3, 14)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22314713317398233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314713317398233, 0.19190061500895003] ***
*** starting iteration: 2; err: [Inf, 0.22314713317398233, 0.19190061500895003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314713317398233, 0.19190061500895003, 0.1847523966785995] ***
*** starting iteration: 3; err: [Inf, 0.22314713317398233, 0.19190061500895003, 0.1847523966785995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314713317398233, 0.19190061500895003, 0.1847523966785995, 0.18200567903938233] ***
*** starting iteration: 4; err: [Inf, 0.22314713317398233, 0.19190061500895003, 0.1847523966785995, 0.18200567903938233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22314713317398233, 0.19190061500895003, 0.1847523966785995, 0.18200567903938233, 0.18126247965938774] ***
*** finished computation of 7 references, err: [Inf, 0.22314713317398233, 0.19190061500895003, 0.1847523966785995, 0.18200567903938233, 0.18126247965938774] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [10, 90, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 10), (2, 90)]
*** center 4: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 25, 0]]
** centroid: 5, normalized-entropy: 0.8233045447828534, [(1, 72), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 41, 0]]
** centroid: 6, normalized-entropy: 0.9450087651303387, [(1, 72), (2, 41)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 64, 19]]
** centroid: 7, normalized-entropy: 0.776116265618875, [(2, 64), (3, 19)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9269958581335827, 0.9199738660816505, 0.9119868371365377, 0.9019948091804378, 0.8999988011964061, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 16
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9269958581335827, 0.9199738660816505, 0.9119868371365377, 0.9019948091804378, 0.8999988011964061, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 16
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 16)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9269958581335827, 0.9199738660816505, 0.9119868371365377, 0.9019948091804378, 0.8999988011964061, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 17
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.21074931382330264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21074931382330264, 0.1648833968092103] ***
*** starting iteration: 2; err: [Inf, 0.21074931382330264, 0.1648833968092103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487] ***
*** starting iteration: 3; err: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487, 0.1543207519796786] ***
*** starting iteration: 4; err: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487, 0.1543207519796786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487, 0.1543207519796786, 0.15329524945305498] ***
*** starting iteration: 5; err: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487, 0.1543207519796786, 0.15329524945305498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487, 0.1543207519796786, 0.15329524945305498, 0.15263821319089615] ***
*** finished computation of 7 references, err: [Inf, 0.21074931382330264, 0.1648833968092103, 0.15744049434393487, 0.1543207519796786, 0.15329524945305498, 0.15263821319089615] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [106, 3, 0]]
** centroid: 1, normalized-entropy: 0.18181317169561842, [(1, 106), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 60, 0]]
** centroid: 2, normalized-entropy: 0.12068101401352371, [(1, 1), (2, 60)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 78, 23]]
** centroid: 3, normalized-entropy: 0.7740204128451942, [(2, 78), (3, 23)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 30, 0]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(1, 60), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [46, 54, 0]]
** centroid: 5, normalized-entropy: 0.9953784388202258, [(1, 46), (2, 54)]
*** center 6: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.27659679735791515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392] ***
*** starting iteration: 2; err: [Inf, 0.27659679735791515, 0.18235217352227392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528] ***
*** starting iteration: 3; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997] ***
*** starting iteration: 4; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847] ***
*** starting iteration: 5; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365] ***
*** starting iteration: 6; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213] ***
*** starting iteration: 7; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213, 0.15021786933438083] ***
*** starting iteration: 8; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213, 0.15021786933438083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213, 0.15021786933438083, 0.1490859032875259] ***
*** starting iteration: 9; err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213, 0.15021786933438083, 0.1490859032875259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213, 0.15021786933438083, 0.1490859032875259, 0.1481688990421046] ***
*** finished computation of 7 references, err: [Inf, 0.27659679735791515, 0.18235217352227392, 0.16780171417135528, 0.1618138781791997, 0.15745000491711847, 0.15434102313467365, 0.15173644378971213, 0.15021786933438083, 0.1490859032875259, 0.1481688990421046] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [97, 12, 0]]
** centroid: 1, normalized-entropy: 0.5001926210998139, [(1, 97), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 29, 0]]
** centroid: 2, normalized-entropy: 0.8762441668050731, [(1, 69), (2, 29)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 47, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [122, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 55, 14]]
** centroid: 6, normalized-entropy: 0.7276874545656657, [(2, 55), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [12, 84, 0]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(1, 12), (2, 84)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21266384162511426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21266384162511426, 0.162109752426502] ***
*** starting iteration: 2; err: [Inf, 0.21266384162511426, 0.162109752426502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124] ***
*** starting iteration: 3; err: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124, 0.1443358741542171] ***
*** starting iteration: 4; err: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124, 0.1443358741542171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124, 0.1443358741542171, 0.14267670520130304] ***
*** starting iteration: 5; err: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124, 0.1443358741542171, 0.14267670520130304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124, 0.1443358741542171, 0.14267670520130304, 0.14233758038285466] ***
*** finished computation of 7 references, err: [Inf, 0.21266384162511426, 0.162109752426502, 0.14844742248315124, 0.1443358741542171, 0.14267670520130304, 0.14233758038285466] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [2, 94, 0]]
** centroid: 1, normalized-entropy: 0.14609425012013613, [(1, 2), (2, 94)]
*** center 2: selecting labels [1] (freq >= 1) [from [99, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 72, 19]]
** centroid: 3, normalized-entropy: 0.7391658175693049, [(2, 72), (3, 19)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 16, 0]]
** centroid: 4, normalized-entropy: 0.6623570516079519, [(1, 77), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 26, 0]]
** centroid: 6, normalized-entropy: 0.846701711600821, [(1, 69), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [102, 12, 0]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(1, 102), (2, 12)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 17)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9269958581335827, 0.9199738660816505, 0.9119868371365377, 0.9039458620296944, 0.9019948091804378, 0.8999988011964061, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 17
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9559859260458063, 0.9519969070867275, 0.9489939040837244, 0.9379858900816984, 0.9319828810846774, 0.9269958581335827, 0.9199738660816505, 0.9119868371365377, 0.9039458620296944, 0.9019948091804378, 0.8999988011964061, 0.89398680117243, 0.8709967452482422, 0.8669537801274328, 0.8430226633819449, 0.780978583373793, 0.6970413527299755]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 1, 1.0, :fft, 0.6, 2) => 0.9559859260458063
finished with 17
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2025006646369584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2025006646369584, 0.15383622218109666] ***
*** finished computation of 7 references, err: [Inf, 0.2025006646369584, 0.15383622218109666] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [118, 55, 0]]
** centroid: 1, normalized-entropy: 0.9021041578762996, [(1, 118), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [142, 7, 0]]
** centroid: 2, normalized-entropy: 0.2734264035221073, [(1, 142), (2, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [152, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 94, 28]]
** centroid: 4, normalized-entropy: 0.7771529943226336, [(2, 94), (3, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [108, 59, 0]]
** centroid: 5, normalized-entropy: 0.9369750101626557, [(1, 108), (2, 59)]
*** center 6: selecting labels [1] (freq >= 2) [from [116, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 121, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1802850391473621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1802850391473621, 0.15144606850575656] ***
*** finished computation of 7 references, err: [Inf, 0.1802850391473621, 0.15144606850575656] ***
*** center 1: selecting labels [1] (freq >= 2) [from [120, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 9, 0]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(1, 48), (2, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 22, 14]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(2, 22), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 58, 0]]
** centroid: 5, normalized-entropy: 0.28290479297989196, [(1, 3), (2, 58)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 72, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18646901060268284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18646901060268284, 0.14865291730873287] ***
*** finished computation of 7 references, err: [Inf, 0.18646901060268284, 0.14865291730873287] ***
*** center 1: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 40, 12]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 40), (3, 12)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 14, 0]]
** centroid: 3, normalized-entropy: 0.7276874545656657, [(1, 55), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [19, 53, 0]]
** centroid: 4, normalized-entropy: 0.8325582396745668, [(1, 19), (2, 53)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 62, 0]]
** centroid: 5, normalized-entropy: 0.8160172973428256, [(1, 21), (2, 62)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1782422285815701] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1782422285815701, 0.1519506716951728] ***
*** finished computation of 7 references, err: [Inf, 0.1782422285815701, 0.1519506716951728] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 44, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 66), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 5, 0]]
** centroid: 2, normalized-entropy: 0.4090731390438265, [(1, 56), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 44, 12]]
** centroid: 4, normalized-entropy: 0.7495952572594798, [(2, 44), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 81, 0]]
** centroid: 5, normalized-entropy: 0.32001486274754665, [(1, 5), (2, 81)]
*** center 6: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19686498529091478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19686498529091478, 0.15378408566489815] ***
*** finished computation of 7 references, err: [Inf, 0.19686498529091478, 0.15378408566489815] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 14]]
** centroid: 3, normalized-entropy: 0.8403586716091169, [(2, 38), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 30, 0]]
** centroid: 5, normalized-entropy: 0.9826154285526119, [(1, 41), (2, 30)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [6, 68, 0]]
** centroid: 6, normalized-entropy: 0.40597703847557104, [(1, 6), (2, 68)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 38, 0]]
** centroid: 7, normalized-entropy: 0.7382848661434506, [(1, 10), (2, 38)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17697748398408295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17697748398408295, 0.14829496162943542] ***
*** finished computation of 7 references, err: [Inf, 0.17697748398408295, 0.14829496162943542] ***
*** center 1: selecting labels [1] (freq >= 2) [from [108, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [47, 11, 0]]
** centroid: 2, normalized-entropy: 0.7007495497162061, [(1, 47), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 14]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(2, 32), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [16, 57, 0]]
** centroid: 5, normalized-entropy: 0.7586638628883696, [(1, 16), (2, 57)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 65, 0]]
** centroid: 6, normalized-entropy: 0.3712323266408756, [(1, 5), (2, 65)]
*** center 7: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19478390949219465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19478390949219465, 0.15770902813971044] ***
*** finished computation of 7 references, err: [Inf, 0.19478390949219465, 0.15770902813971044] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [87, 12, 0]]
** centroid: 1, normalized-entropy: 0.5328350630342235, [(1, 87), (2, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 15, 0]]
** centroid: 2, normalized-entropy: 0.743898745288434, [(1, 56), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 11]]
** centroid: 3, normalized-entropy: 0.7601675029619658, [(2, 39), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 60, 0]]
** centroid: 5, normalized-entropy: 0.7615877869576693, [(1, 17), (2, 60)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20774897431209682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20774897431209682, 0.15421748433820903] ***
*** finished computation of 7 references, err: [Inf, 0.20774897431209682, 0.15421748433820903] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 77, 0]]
** centroid: 1, normalized-entropy: 0.6415410585827175, [(1, 15), (2, 77)]
*** center 2: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [49, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [89, 5, 0]]
** centroid: 4, normalized-entropy: 0.2998025130558691, [(1, 89), (2, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 5, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [84, 6, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 84), (2, 6)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 46, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1795462583769113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1795462583769113, 0.14771170743438417] ***
*** finished computation of 7 references, err: [Inf, 0.1795462583769113, 0.14771170743438417] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 15]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(2, 35), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 9, 0]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(1, 69), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 5, 0]]
** centroid: 4, normalized-entropy: 0.5185697317883058, [(1, 38), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 49, 0]]
** centroid: 5, normalized-entropy: 0.9884374283487116, [(1, 38), (2, 49)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 82, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 2, 0]]
** centroid: 7, normalized-entropy: 0.18116640155354563, [(1, 71), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18700899140071123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18700899140071123, 0.14983755008189473] ***
*** finished computation of 7 references, err: [Inf, 0.18700899140071123, 0.14983755008189473] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 99, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 26, 0]]
** centroid: 3, normalized-entropy: 0.943601631299382, [(1, 46), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [57, 16, 0]]
** centroid: 4, normalized-entropy: 0.7586638628883696, [(1, 57), (2, 16)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 34, 12]]
** centroid: 5, normalized-entropy: 0.828055725379504, [(2, 34), (3, 12)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 3, 0]]
** centroid: 7, normalized-entropy: 0.22853814395352806, [(1, 78), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1956691817538813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1956691817538813, 0.15379124513268472] ***
*** finished computation of 7 references, err: [Inf, 0.1956691817538813, 0.15379124513268472] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 53, 14]]
** centroid: 3, normalized-entropy: 0.7394809367166378, [(2, 53), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 59, 0]]
** centroid: 5, normalized-entropy: 0.9290083681703216, [(1, 31), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [56, 25, 0]]
** centroid: 6, normalized-entropy: 0.8915996278279094, [(1, 56), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [13, 29, 0]]
** centroid: 7, normalized-entropy: 0.8926230133850988, [(1, 13), (2, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18568843488767744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18568843488767744, 0.14994031029380858] ***
*** finished computation of 7 references, err: [Inf, 0.18568843488767744, 0.14994031029380858] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [70, 26, 0]]
** centroid: 1, normalized-entropy: 0.842657877202239, [(1, 70), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 18, 0]]
** centroid: 2, normalized-entropy: 0.8168114277045246, [(1, 53), (2, 18)]
*** center 3: selecting labels [1] (freq >= 2) [from [41, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 35, 16]]
** centroid: 4, normalized-entropy: 0.8974271930876951, [(2, 35), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [81, 24, 0]]
** centroid: 5, normalized-entropy: 0.775512658133148, [(1, 81), (2, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 74, 1]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18176056778803468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18176056778803468, 0.14481076372135432] ***
*** finished computation of 7 references, err: [Inf, 0.18176056778803468, 0.14481076372135432] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 21, 0]]
** centroid: 1, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [46, 5, 0]]
** centroid: 2, normalized-entropy: 0.462749058578174, [(1, 46), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 17]]
** centroid: 3, normalized-entropy: 0.8856128713989709, [(2, 39), (3, 17)]
*** center 4: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 86, 0]]
** centroid: 5, normalized-entropy: 0.21265863988163503, [(1, 3), (2, 86)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [51, 17, 0]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(1, 51), (2, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1928530657812953] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1928530657812953, 0.15752182827703654] ***
*** finished computation of 7 references, err: [Inf, 0.1928530657812953, 0.15752182827703654] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [55, 48, 0]]
** centroid: 1, normalized-entropy: 0.9966657283631041, [(1, 55), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 2, 0]]
** centroid: 2, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 37, 14]]
** centroid: 4, normalized-entropy: 0.8478617451660525, [(2, 37), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [94, 10, 0]]
** centroid: 5, normalized-entropy: 0.45668363153944286, [(1, 94), (2, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19947183928173035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19947183928173035, 0.1597953668050468] ***
*** finished computation of 7 references, err: [Inf, 0.19947183928173035, 0.1597953668050468] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 63, 0]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(1, 3), (2, 63)]
*** center 2: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [66, 4, 0]]
** centroid: 3, normalized-entropy: 0.3159971329784246, [(1, 66), (2, 4)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [93, 5, 0]]
** centroid: 4, normalized-entropy: 0.290715865467415, [(1, 93), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [86, 8, 0]]
** centroid: 5, normalized-entropy: 0.4199210973757179, [(1, 86), (2, 8)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 22, 16]]
** centroid: 7, normalized-entropy: 0.9819407868640977, [(2, 22), (3, 16)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18641471258364617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18641471258364617, 0.1502523873373866] ***
*** finished computation of 7 references, err: [Inf, 0.18641471258364617, 0.1502523873373866] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 28, 13]]
** centroid: 2, normalized-entropy: 0.9011701959974223, [(2, 28), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 6, 0]]
** centroid: 3, normalized-entropy: 0.5159469300074472, [(1, 46), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [74, 15, 0]]
** centroid: 4, normalized-entropy: 0.6543524423071835, [(1, 74), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [25, 49, 0]]
** centroid: 5, normalized-entropy: 0.9227346209530939, [(1, 25), (2, 49)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19262763468455524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19262763468455524, 0.16028416830580683] ***
*** finished computation of 7 references, err: [Inf, 0.19262763468455524, 0.16028416830580683] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 3, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 99), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 5, 0]]
** centroid: 2, normalized-entropy: 0.378958787501346, [(1, 63), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 16]]
** centroid: 3, normalized-entropy: 0.9389320105807949, [(2, 29), (3, 16)]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 72, 0]]
** centroid: 5, normalized-entropy: 0.7706290693639406, [(1, 21), (2, 72)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 55, 0]]
** centroid: 6, normalized-entropy: 0.29367630985136944, [(1, 3), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1815136792594567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1815136792594567, 0.1517802863214165] ***
*** finished computation of 7 references, err: [Inf, 0.1815136792594567, 0.1517802863214165] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [106, 2, 0]]
** centroid: 1, normalized-entropy: 0.13303964861069897, [(1, 106), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 22, 18]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(2, 22), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 2, 0]]
** centroid: 3, normalized-entropy: 0.19364280468389852, [(1, 65), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 6, 0]]
** centroid: 4, normalized-entropy: 0.4971677614160751, [(1, 49), (2, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 71, 0]]
** centroid: 6, normalized-entropy: 0.6216297820565386, [(1, 13), (2, 71)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 54, 0]]
** centroid: 7, normalized-entropy: 0.2222848306856879, [(1, 2), (2, 54)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19485475800279528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19485475800279528, 0.15510232396796345] ***
*** finished computation of 7 references, err: [Inf, 0.19485475800279528, 0.15510232396796345] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [99, 18, 0]]
** centroid: 1, normalized-entropy: 0.6193821946787638, [(1, 99), (2, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 14, 0]]
** centroid: 2, normalized-entropy: 0.6840384356390419, [(1, 63), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 41, 11]]
** centroid: 3, normalized-entropy: 0.7444131797881749, [(2, 41), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [23, 48, 0]]
** centroid: 5, normalized-entropy: 0.9086185980409245, [(1, 23), (2, 48)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19790282703749834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19790282703749834, 0.15584015729650855] ***
*** finished computation of 7 references, err: [Inf, 0.19790282703749834, 0.15584015729650855] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [98, 2, 0]]
** centroid: 1, normalized-entropy: 0.14144054254182067, [(1, 98), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 34, 19]]
** centroid: 2, normalized-entropy: 0.9414231081869789, [(2, 34), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 5, 0]]
** centroid: 3, normalized-entropy: 0.32840071392894665, [(1, 78), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 6, 0]]
** centroid: 4, normalized-entropy: 0.4441260450795996, [(1, 59), (2, 6)]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 61, 0]]
** centroid: 6, normalized-entropy: 0.2729708579140699, [(1, 3), (2, 61)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 70, 0]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(1, 10), (2, 70)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18522411362454294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18522411362454294, 0.15079244179092346] ***
*** finished computation of 7 references, err: [Inf, 0.18522411362454294, 0.15079244179092346] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 82, 16]]
** centroid: 1, normalized-entropy: 0.6420642892306891, [(2, 82), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [53, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [68, 22, 0]]
** centroid: 4, normalized-entropy: 0.80235344282919, [(1, 68), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 15, 0]]
** centroid: 5, normalized-entropy: 0.7062740891876008, [(1, 63), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 44, 1]]
** centroid: 6, normalized-entropy: 0.2580186686648155, [(1, 2), (2, 44)]
*** center 7: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1956444262228906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1956444262228906, 0.14470572353247554] ***
*** finished computation of 7 references, err: [Inf, 0.1956444262228906, 0.14470572353247554] ***
*** center 1: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 42, 11]]
** centroid: 2, normalized-entropy: 0.7367680100024784, [(2, 42), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 14, 0]]
** centroid: 3, normalized-entropy: 0.7837769474847011, [(1, 46), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [91, 5, 0]]
** centroid: 4, normalized-entropy: 0.29518174309075856, [(1, 91), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [27, 39, 0]]
** centroid: 5, normalized-entropy: 0.976020648236615, [(1, 27), (2, 39)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 69, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21216330739017575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21216330739017575, 0.14686775208637118] ***
*** finished computation of 7 references, err: [Inf, 0.21216330739017575, 0.14686775208637118] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 71, 13]]
** centroid: 1, normalized-entropy: 0.6216297820565386, [(2, 71), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 17, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 51), (2, 17)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [60, 25, 0]]
** centroid: 4, normalized-entropy: 0.8739810481273581, [(1, 60), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [26, 54, 0]]
** centroid: 5, normalized-entropy: 0.9097361225311661, [(1, 26), (2, 54)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19194482194911688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19194482194911688, 0.1489568163137883] ***
*** finished computation of 7 references, err: [Inf, 0.19194482194911688, 0.1489568163137883] ***
*** center 1: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 13, 0]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(1, 54), (2, 13)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 48, 12]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 48), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [38, 46, 0]]
** centroid: 5, normalized-entropy: 0.9934472383802028, [(1, 38), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [21, 56, 0]]
** centroid: 6, normalized-entropy: 0.8453509366224364, [(1, 21), (2, 56)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1961838443907909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1961838443907909, 0.1534750463794917] ***
*** finished computation of 7 references, err: [Inf, 0.1961838443907909, 0.1534750463794917] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [52, 33, 0]]
** centroid: 1, normalized-entropy: 0.9636512739945752, [(1, 52), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [63, 6, 0]]
** centroid: 2, normalized-entropy: 0.42622865699814483, [(1, 63), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 34, 18]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 34), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [70, 25, 0]]
** centroid: 5, normalized-entropy: 0.8314743880097292, [(1, 70), (2, 25)]
*** center 6: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19299384274054318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19299384274054318, 0.15328031406551598] ***
*** finished computation of 7 references, err: [Inf, 0.19299384274054318, 0.15328031406551598] ***
*** center 1: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [52, 18, 0]]
** centroid: 2, normalized-entropy: 0.8224042259549892, [(1, 52), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 44, 12]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 44), (3, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 60, 0]]
** centroid: 5, normalized-entropy: 0.9254482516437047, [(1, 31), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [34, 55, 0]]
** centroid: 6, normalized-entropy: 0.9594579158386692, [(1, 34), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21574851495027542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21574851495027542, 0.1535397268887609] ***
*** finished computation of 7 references, err: [Inf, 0.21574851495027542, 0.1535397268887609] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [72, 31, 0]]
** centroid: 1, normalized-entropy: 0.8824744521750667, [(1, 72), (2, 31)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 16]]
** centroid: 2, normalized-entropy: 0.7812812090702043, [(2, 53), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [48, 8, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 48), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [59, 22, 0]]
** centroid: 4, normalized-entropy: 0.8437582063121657, [(1, 59), (2, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 59, 0]]
** centroid: 6, normalized-entropy: 0.3955378064564774, [(1, 5), (2, 59)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19554043942131102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19554043942131102, 0.15035554189421235] ***
*** finished computation of 7 references, err: [Inf, 0.19554043942131102, 0.15035554189421235] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 40, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 48), (2, 40)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 6, 0]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(1, 51), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 46, 9]]
** centroid: 4, normalized-entropy: 0.6429383500409613, [(2, 46), (3, 9)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 17, 0]]
** centroid: 5, normalized-entropy: 0.7462343013654809, [(1, 63), (2, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [3, 72, 0]]
** centroid: 7, normalized-entropy: 0.24229218908241482, [(1, 3), (2, 72)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1959287616275251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1959287616275251, 0.14863908958993852] ***
*** finished computation of 7 references, err: [Inf, 0.1959287616275251, 0.14863908958993852] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [9, 75, 0]]
** centroid: 1, normalized-entropy: 0.4912373418243334, [(1, 9), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 5, 0]]
** centroid: 2, normalized-entropy: 0.4044483864864384, [(1, 57), (2, 5)]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 33, 18]]
** centroid: 4, normalized-entropy: 0.9366673818775627, [(2, 33), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 3, 0]]
** centroid: 5, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [4, 51, 0]]
** centroid: 6, normalized-entropy: 0.37601985096927276, [(1, 4), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [85, 6, 0]]
** centroid: 7, normalized-entropy: 0.35056382068186565, [(1, 85), (2, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20480785655695946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20480785655695946, 0.16366134368628263] ***
*** finished computation of 7 references, err: [Inf, 0.20480785655695946, 0.16366134368628263] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 64, 11]]
** centroid: 1, normalized-entropy: 0.6014353864290773, [(2, 64), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 10, 0]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(1, 60), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [99, 14, 0]]
** centroid: 4, normalized-entropy: 0.5404508712940567, [(1, 99), (2, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 27, 0]]
** centroid: 5, normalized-entropy: 0.9692040949598235, [(1, 41), (2, 27)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 57, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1931826208177954] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1931826208177954, 0.1526742774453014] ***
*** finished computation of 7 references, err: [Inf, 0.1931826208177954, 0.1526742774453014] ***
*** center 1: selecting labels [1] (freq >= 2) [from [70, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 44, 14]]
** centroid: 2, normalized-entropy: 0.7973265101474423, [(2, 44), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 2, 0]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(1, 56), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [53, 38, 0]]
** centroid: 4, normalized-entropy: 0.9803107984107206, [(1, 53), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 76, 0]]
** centroid: 5, normalized-entropy: 0.7537153483720096, [(1, 21), (2, 76)]
*** center 6: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 336,3 => 28,1 => 636), Dict(2 => 389,3 => 34,1 => 577))
[ Info: ===== scores for single classifier: {"micro_f1":0.933,"precision":0.933,"recall":0.933,"macro_recall":0.9425751214084471,"macro_f1":0.8854883354444373,"accuracy":0.933,"class_f1":{"2":0.9137709137709137,"3":0.7857142857142857,"1":0.9569798068481125},"class_precision":{"2":0.9149484536082474,"3":0.66,"1":0.9697508896797153},"class_recall":{"2":0.9125964010282777,"3":0.9705882352941176,"1":0.9445407279029463}}
[ Info: ===== scores for 1: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9519770635417538,"macro_f1":0.966069380630735,"accuracy":0.973,"class_f1":{"2":0.9649805447470817,"3":0.9538461538461539,"1":0.9793814432989691},"class_precision":{"2":0.9738219895287958,"3":1.0,"1":0.9710391822827938},"class_recall":{"2":0.9562982005141388,"3":0.9117647058823529,"1":0.9878682842287695}}
[ Info: ===== scores for 5: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9583147806043154,"macro_f1":0.9675177068478709,"accuracy":0.968,"class_f1":{"2":0.9587628865979382,"3":0.9696969696969697,"1":0.9740932642487047},"class_precision":{"2":0.9612403100775194,"3":1.0,"1":0.9707401032702238},"class_recall":{"2":0.9562982005141388,"3":0.9411764705882353,"1":0.9774696707105719}}
[ Info: ===== scores for 7: {"micro_f1":0.968,"precision":0.968,"recall":0.968,"macro_recall":0.9585939778824389,"macro_f1":0.9675381024016955,"accuracy":0.968,"class_f1":{"2":0.9588688946015425,"3":0.9696969696969697,"1":0.9740484429065744},"class_precision":{"2":0.9588688946015425,"3":1.0,"1":0.9723661485319517},"class_recall":{"2":0.9588688946015425,"3":0.9411764705882353,"1":0.975736568457539}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9738184849039971,"macro_f1":0.9728962637204216,"accuracy":0.975,"class_f1":{"2":0.9681528662420381,"3":0.9705882352941176,"1":0.9799476896251089},"class_precision":{"2":0.9595959595959596,"3":0.9705882352941176,"1":0.9859649122807017},"class_recall":{"2":0.9768637532133676,"3":0.9705882352941176,"1":0.9740034662045061}}
[ Info: ===== scores for 11: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.972682389596739,"macro_f1":0.9634817659831696,"accuracy":0.974,"class_f1":{"2":0.9667519181585679,"3":0.9428571428571428,"1":0.980836236933798},"class_precision":{"2":0.9618320610687023,"3":0.9166666666666666,"1":0.9859894921190894},"class_recall":{"2":0.9717223650385605,"3":0.9705882352941176,"1":0.975736568457539}}
(score = 0.976, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.968, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.976,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9634947811686502,"macro_f1":0.9732253374802847,"accuracy":0.976,"class_f1":{"2":0.9689119170984456,"3":0.9696969696969697,"1":0.981067125645439},"class_precision":{"2":0.9765013054830287,"3":1.0,"1":0.9743589743589743},"class_recall":{"2":0.961439588688946,"3":0.9411764705882353,"1":0.9878682842287695}}
Test Summary: | Pass  Total
AKNC          |    8      8
[322, 5, 2, 4, 2, 3, 5, 1, 1, 2, 2, 2, 2, 2, 3, 13, 6, 6, 3, 15, 7, 10, 39, 1, 3, 4, 1, 5, 26, 9, 12, 48, 20, 5, 13, 25, 1, 3, 18, 7, 5, 3, 3, 1, 14, 18, 4, 80, 142, 22, 4, 3, 8, 19, 8, 9, 10, 36, 11, 2, 38, 13, 11, 7, 21, 3, 22, 17, 20, 12, 4, 4, 5, 3, 57, 3, 6, 61, 31, 6, 11, 7, 7, 2, 10, 27, 3, 17, 18, 75, 3, 19, 12, 23, 3, 63, 68, 20, 65, 7, 60, 12, 5, 9, 18, 12, 4, 2, 18, 17, 1, 4, 41, 19, 3, 40, 38, 800, 50, 36, 27, 40, 6, 5, 20, 4, 11, 22, 5, 22, 58, 26, 25, 13, 50, 17, 12, 25, 14, 13, 11, 4, 5, 52, 22, 12, 16, 40, 34, 8, 10, 3, 10, 8, 7, 7, 3, 26, 3, 31, 10, 341, 1, 7, 10, 65, 12, 41, 14, 84, 15, 4, 13, 18, 3, 71, 4, 222, 7, 46, 10, 70, 3, 21, 10, 29, 11, 1, 22, 14, 3, 7, 4, 25, 6, 157, 47, 13, 9, 3, 4, 7, 15, 36, 108, 53, 108, 18, 148, 361, 38, 27, 31, 20, 93, 88, 31, 46, 33, 3, 6, 53, 4, 48, 28, 14, 12, 13, 112, 31, 14, 12, 27, 62, 29, 89, 46, 45, 25, 12, 35, 35, 28, 70, 3, 16, 45, 6, 17, 98, 11, 30, 41, 65, 4, 2, 16, 3, 97, 3, 32, 70, 30, 8, 91, 32, 20, 31, 111, 35, 19, 26, 14, 65, 36, 7, 49, 81, 116, 167, 41, 35, 21, 6, 28, 41, 24, 437, 145, 15, 5, 37, 114, 26, 34, 10, 47, 39, 3, 44]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.67, speedup = 0.3556444406620995, eval_ratio = 0.071809)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.40863715277777785,"recall":0.39843750000000006,"f1":null,"seconds":0.00016009621322155,"exhaustive_search_seconds":0.0003437194973230362,"evaluations":472.5078125,"distances_sum":1714.3724538016163}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5763888888888886,"recall":0.5763888888888886,"f1":null,"seconds":0.0002721864730119705,"exhaustive_search_seconds":0.0003437194973230362,"evaluations":600.40625,"distances_sum":1637.7460755031648}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6857638888888885,"recall":0.6857638888888885,"f1":null,"seconds":0.0003645028918981552,"exhaustive_search_seconds":0.0003437194973230362,"evaluations":738.6875,"distances_sum":1583.5918063748647}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7673611111111105,"recall":0.7673611111111105,"f1":0.7673611111111105,"seconds":0.0004500448703765869,"exhaustive_search_seconds":0.0003437194973230362,"evaluations":841.765625,"distances_sum":1552.4032863636635}
KCenters.DeloneInvIndex> reached performance {"precision":0.8098958333333326,"recall":0.8098958333333326,"f1":0.8098958333333326,"seconds":0.0008651837706565857,"exhaustive_search_seconds":0.0003437194973230362,"evaluations":936.3671875,"distances_sum":1538.240597952548}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8009999999999997, speedup = 0.9228815664768075, eval_ratio = 0.095444)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
