Julia Version 1.6.0-DEV.82
Commit 852ff2bdab (2020-05-23 14:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_7eG6pa/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_7eG6pa/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171859068211435
curgen: 20 fitness: 0.2171859068211435
curgen: 30 fitness: 0.2171859068211435
curgen: 40 fitness: 0.2171859068211435
curgen: 50 fitness: 0.2171859068211435
CoordinateCreature{Array{Float64,1}}([-0.22358955250492427], -0.2171859068211435) -0.22358955250492427 -0.2171859068211435
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2575283115860336
curgen: 100 fitness: 3.258346340442145
curgen: 150 fitness: 3.258356232239754
curgen: 200 fitness: 3.2584153517510854
curgen: 250 fitness: 3.258445847017527
curgen: 300 fitness: 3.258453612443668
curgen: 350 fitness: 3.2584700198686183
curgen: 400 fitness: 3.2584768430541002
curgen: 450 fitness: 3.2584768430541002
curgen: 500 fitness: 3.258480976020953
CoordinateCreature{Array{Float64,1}}([0.22264647853692415, -0.22264257756208647, -0.22227965785678597, 0.2228566258513929, -0.22270738052779146, 0.22260432556325924, -0.22235811019227786, -0.22244344502528565, 0.22271408783880056, -0.2225515436566253, 0.22258700689025288, -0.22243060009359933, -0.22284780283817182, -0.2221822608006349, 0.22250937635522322], -3.258480976020953) [0.22264647853692415, -0.22264257756208647, -0.22227965785678597, 0.2228566258513929, -0.22270738052779146, 0.22260432556325924, -0.22235811019227786, -0.22244344502528565, 0.22271408783880056, -0.2225515436566253, 0.22258700689025288, -0.22243060009359933, -0.22284780283817182, -0.2221822608006349, 0.22250937635522322] -3.258480976020953
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0032282502993723483
curgen: 100 fitness: -0.003154518733737177
curgen: 150 fitness: -0.0026309393674068815
curgen: 200 fitness: -0.001977013753190704
curgen: 250 fitness: -0.0019322194444555407
curgen: 300 fitness: -0.0018856885575928573
curgen: 350 fitness: -0.001747733708469923
curgen: 400 fitness: -0.001747733708469923
curgen: 450 fitness: -0.001747733708469923
curgen: 500 fitness: -0.001686129166188266
CoordinateCreature{Array{Float64,1}}([0.00010786464950340857, 0.00046843398873923, 0.00036596121729885766, -9.034964113974425e-5, -0.0001323808378617449, 0.0003576850198742033, -0.0005141903452760791, -1.0819284869084951e-5, -0.00015255213708044877, -0.0027658213527793946, 0.000177007841697638, -3.2904427269457935e-5, -7.983967608541338e-5, -6.196877437692643e-5, 1.9212503548086805e-5], 0.001686129166188266) [0.00010786464950340857, 0.00046843398873923, 0.00036596121729885766, -9.034964113974425e-5, -0.0001323808378617449, 0.0003576850198742033, -0.0005141903452760791, -1.0819284869084951e-5, -0.00015255213708044877, -0.0027658213527793946, 0.000177007841697638, -3.2904427269457935e-5, -7.983967608541338e-5, -6.196877437692643e-5, 1.9212503548086805e-5] 0.001686129166188266
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
