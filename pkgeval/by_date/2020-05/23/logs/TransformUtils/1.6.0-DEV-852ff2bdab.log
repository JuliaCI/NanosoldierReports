Julia Version 1.6.0-DEV.82
Commit 852ff2bdab (2020-05-23 14:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_2gArf7/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_2gArf7/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0912586521953985 -0.11351205068337239; 0.0912586521953985 0.0 -0.10370099967942653; 0.11351205068337239 0.10370099967942653 0.0])
dAA = so3([0.0 0.3267275406431216 -0.02315305595522454; -0.3267275406431216 0.0 -0.08548861118229806; 0.02315305595522454 0.08548861118229806 0.0])
dAA = so3([0.0 0.11829523965068263 0.019573296053601863; -0.11829523965068263 0.0 0.012159177847759927; -0.019573296053601863 -0.012159177847759927 0.0])
dAA = Quaternion(0.9921319434900875, [0.023492761415643396, 0.12023078206475156, 0.02582355342991816])
dAA = SO3([0.9971568131959614 0.0032008143865423933 -0.0752864176604126; -0.009770191647465627 0.9961557761283522 -0.08705293241064772; 0.07471835953798085 0.08754098739095824 0.9933547917408814])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.6842673094885436 0.7169229823036576 -0.13341546615793518; -0.7285728027228385 0.6643374193121828 -0.1668456305517673; -0.03098258055581271 0.2113698908228382 0.9769149650587016]), [1.0370099967942652, -1.1351205068337238, 0.9125865219539849])
xj = SE3(SO3([0.8160432511134696 -0.09753814062736613 0.5697014335905386; 0.176353310784953 0.9806752467758056 -0.08470873707238485; -0.5504297612659989 0.16959472717089055 0.8174745906928769]), [-0.12159177847759926, 0.19573296053601863, -1.1829523965068263])
Dx = SE3(SO3([0.4469592283763935 -0.7864899564603762 0.42621707680023146; 0.585853986106641 0.617419146925692 0.5249463819977332; -0.6760196410845905 0.015071343553449607 0.7367294615198683]), [-1.6974917569198573, -0.38942631444520215, -2.1146350193032957])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
