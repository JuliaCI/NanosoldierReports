Julia Version 1.6.0-DEV.8
Commit b828bbc426 (2020-05-08 23:24 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_L3J276/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_L3J276/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.0017381824654017855 -0.06583703561334137; 0.0017381824654017855 0.0 -0.06152578557846192; 0.06583703561334137 0.06152578557846192 0.0])
dAA = so3([0.0 -0.05022443819878795 -0.0340051643401279; 0.05022443819878795 0.0 -0.12672394519359076; 0.0340051643401279 0.12672394519359076 0.0])
dAA = so3([0.0 0.06356590309946468 0.05910633799357972; -0.06356590309946468 0.0 -0.08528258984301851; -0.05910633799357972 0.08528258984301851 0.0])
dAA = Quaternion(0.9948433647367122, [-0.0630795323176477, -0.05588016877247244, 0.0564363267752602])
dAA = SO3([0.9986434560149267 -0.03524108474805533 0.038331627989745855; 0.03699906264491498 0.9982484778755407 -0.04616325142972986; -0.03663764623937436 0.0475188632539456 0.9981981970095377])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9886213073619763 -0.13632400493051755 -0.06358990729353947; 0.10966681364524826 0.9425274471040871 -0.31561875964579594; 0.10296164632908267 0.30505372827611293 0.9467529362246775]), [0.6152578557846191, -0.6583703561334137, 0.017381824654017854])
xj = SE3(SO3([0.9225815773663611 -0.24506849971196146 -0.2979675545309006; 0.3297580814743492 0.901800811857681 0.27931148103002107; 0.2002569369748607 -0.3559448358689246 0.912798133768738]), [0.852825898430185, 0.5910633799357972, -0.6356590309946467])
Dx = SE3(SO3([0.9688661071528194 -0.18003098530274708 -0.1699626745537488; 0.24612515242959926 0.7747984371172167 0.5823313414047238; 0.02684912944674378 -0.6060331890017578 0.7949860992975357]), [0.3046480839855342, 0.9460268148338394, -1.0277200034055651])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
