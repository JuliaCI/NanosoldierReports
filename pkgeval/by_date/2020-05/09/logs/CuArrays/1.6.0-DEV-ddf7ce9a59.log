Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Requires ─────────── v1.0.1
  Installed AbstractFFTs ─────── v0.5.0
  Installed Cthulhu ──────────── v1.0.2
  Installed ExprTools ────────── v0.1.1
  Installed BinaryProvider ───── v0.5.9
  Installed LLVM ─────────────── v1.4.1
  Installed CUDAnative ───────── v3.1.0
  Installed CuArrays ─────────── v2.2.0
  Installed CEnum ────────────── v0.3.0
  Installed CodeTracking ─────── v0.5.11
  Installed GPUCompiler ──────── v0.2.0
  Installed MacroTools ───────── v0.5.5
  Installed OrderedCollections ─ v1.2.0
  Installed Reexport ─────────── v0.2.0
  Installed DataStructures ───── v0.17.15
  Installed TimerOutputs ─────── v0.5.5
  Installed GPUArrays ────────── v3.3.0
  Installed CUDAdrv ──────────── v6.3.0
  Installed CUDAapi ──────────── v4.0.0
  Installed Adapt ────────────── v1.0.1
  Installed NNlib ────────────── v0.6.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [3a865a2d] + CuArrays v2.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.1
  [b99e7846] + BinaryProvider v0.5.9
  [fa961155] + CEnum v0.3.0
  [3895d2a7] + CUDAapi v4.0.0
  [c5f51814] + CUDAdrv v6.3.0
  [be33ccc6] + CUDAnative v3.1.0
  [da1fd8a2] + CodeTracking v0.5.11
  [f68482b8] + Cthulhu v1.0.2
  [3a865a2d] + CuArrays v2.2.0
  [864edb3b] + DataStructures v0.17.15
  [e2ba6199] + ExprTools v0.1.1
  [0c68f7d7] + GPUArrays v3.3.0
  [61eb1bfa] + GPUCompiler v0.2.0
  [929cbde3] + LLVM v1.4.1
  [1914dd2f] + MacroTools v0.5.5
  [872c559c] + NNlib v0.6.6
  [bac558e1] + OrderedCollections v1.2.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [a759f4b9] + TimerOutputs v0.5.5
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib → `~/.julia/packages/NNlib/FAI3o/deps/build.log`
    Testing CuArrays
Status `/tmp/jl_wvs12M/Project.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [fa961155] CEnum v0.3.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.3.0
  [be33ccc6] CUDAnative v3.1.0
  [3a865a2d] CuArrays v2.2.0
  [864edb3b] DataStructures v0.17.15
  [7a1cc6ca] FFTW v1.2.1
  [1a297f60] FillArrays v0.8.8
  [f6369f11] ForwardDiff v0.10.10
  [0c68f7d7] GPUArrays v3.3.0
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.6.6
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [a759f4b9] TimerOutputs v0.5.5
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [de0858da] Printf
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_wvs12M/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [79e6a3ab] Adapt v1.0.1
  [b99e7846] BinaryProvider v0.5.9
  [fa961155] CEnum v0.3.0
  [3895d2a7] CUDAapi v4.0.0
  [c5f51814] CUDAdrv v6.3.0
  [be33ccc6] CUDAnative v3.1.0
  [da1fd8a2] CodeTracking v0.5.11
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [f68482b8] Cthulhu v1.0.2
  [3a865a2d] CuArrays v2.2.0
  [864edb3b] DataStructures v0.17.15
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [e2ba6199] ExprTools v0.1.1
  [7a1cc6ca] FFTW v1.2.1
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.8
  [f6369f11] ForwardDiff v0.10.10
  [0c68f7d7] GPUArrays v3.3.0
  [61eb1bfa] GPUCompiler v0.2.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [929cbde3] LLVM v1.4.1
  [856f044c] MKL_jll v2019.0.117+2
  [1914dd2f] MacroTools v0.5.5
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [276daf66] SpecialFunctions v0.10.0
  [90137ffa] StaticArrays v0.12.3
  [a759f4b9] TimerOutputs v0.5.5
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: Testing using device Tesla T4 (compute capability 7.5.0, 14.527 GiB available memory) on CUDA driver 10.2.0 and toolkit 10.2.89
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}) at abstractarray.jl:141
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}) at abstractarray.jl:142
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}) at abstractarray.jl:141
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}) at abstractarray.jl:142
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}) at abstractarray.jl:141
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}) at abstractarray.jl:142
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto! at abstractarray.jl:141 [inlined]
└ @ Core ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto! at abstractarray.jl:142 [inlined]
└ @ Core ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Int64,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::CuArray{Int64,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}) at abstractarray.jl:141
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Int64,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}, ::CuArray{Int64,2,Nothing}, ::CartesianIndices{2,Tuple{UnitRange{Int64},UnitRange{Int64}}}) at abstractarray.jl:142
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Complex{Float32},2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}) at abstractarray.jl:141
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto!(::CuArray{Complex{Float32},2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}, ::CuArray{Float32,2,Nothing}, ::CartesianIndices{2,Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}}) at abstractarray.jl:142
└ @ GPUArrays ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
SubArray: Test Failed at /home/pkgeval/.julia/packages/CuArrays/l0gXB/test/base.jl:198
  Expression: testf(((x, y)->begin
            copyto!(y, selectdim(x, 2, 1))
        end), ones(2, 2, 2), zeros(3, 3))
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/CuArrays/l0gXB/test/base.jl:198
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope at /home/pkgeval/.julia/packages/CuArrays/l0gXB/test/base.jl:138
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto! at abstractarray.jl:141 [inlined]
└ @ Core ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:141
┌ Warning: `one(I::Type{CartesianIndex{N}}) where N` is deprecated, use `oneunit(I)` instead.
│   caller = copyto! at abstractarray.jl:142 [inlined]
└ @ Core ~/.julia/packages/GPUArrays/OXvxB/src/host/abstractarray.jl:142
[ Info: Testing CUDNN 7.6.5
[ Info: Testing CUTENSOR 1.0.1
