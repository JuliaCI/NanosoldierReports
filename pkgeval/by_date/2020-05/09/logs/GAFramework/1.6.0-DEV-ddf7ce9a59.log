Julia Version 1.6.0-DEV.0
Commit ddf7ce9a59 (2020-05-07 23:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_CWrjCc/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_CWrjCc/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722727055866692
curgen: 20 fitness: 0.21722727055866692
curgen: 30 fitness: 0.21722727055866692
curgen: 40 fitness: 0.21722727055866692
curgen: 50 fitness: 0.21722727055866692
CoordinateCreature{Array{Float64,1}}([-0.2221696670266371], -0.21722727055866692) -0.2221696670266371 -0.21722727055866692
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2577941180016916
curgen: 100 fitness: 3.2582303084109396
curgen: 150 fitness: 3.2582839473341667
curgen: 200 fitness: 3.258419601816655
curgen: 250 fitness: 3.2584365472937216
curgen: 300 fitness: 3.2584365472937216
curgen: 350 fitness: 3.2584393175645303
curgen: 400 fitness: 3.2584551581527883
curgen: 450 fitness: 3.258456523554927
curgen: 500 fitness: 3.2584764992355155
CoordinateCreature{Array{Float64,1}}([0.22299315922174426, 0.2227675824684655, -0.22297986789960672, -0.22264567443085195, 0.22277695760107855, 0.22247741057747525, -0.22269742885700666, 0.22254245252093613, -0.22254361908076242, -0.222497733004724, -0.22250020363695172, -0.2226420524174027, 0.22273077144275516, 0.2223972109718118, 0.22264296266160677], -3.258477885230713) [0.22299315922174426, 0.2227675824684655, -0.22297986789960672, -0.22264567443085195, 0.22277695760107855, 0.22247741057747525, -0.22269742885700666, 0.22254245252093613, -0.22254361908076242, -0.222497733004724, -0.22250020363695172, -0.2226420524174027, 0.22273077144275516, 0.2223972109718118, 0.22264296266160677] -3.258477885230713
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.003756514856263493
curgen: 100 fitness: -0.003430528835366431
curgen: 150 fitness: -0.003430528835366431
curgen: 200 fitness: -0.0024048420295059714
curgen: 250 fitness: -0.0024048420295059714
curgen: 300 fitness: -0.0024048420295059714
curgen: 350 fitness: -0.0010039485142669946
curgen: 400 fitness: -0.0010039485142669946
curgen: 450 fitness: -0.0010039485142669946
curgen: 500 fitness: -0.0009466425687776336
CoordinateCreature{Array{Float64,1}}([-0.00034840781220840027, -2.6313158871089492e-5, 2.2594179519452168e-5, -0.0012898335777089445, -0.0010006545942278858, 0.0008663867665710803, -0.00012880630646268148, -0.0005427341041917097, -0.0007341685557007323, 0.0005327505218947097, 0.00013172793280544388, -0.00010284470445710209, 0.00010694126900586288, 9.535987130649326e-5, -0.00022573341949318237], 0.0009466425687776336) [-0.00034840781220840027, -2.6313158871089492e-5, 2.2594179519452168e-5, -0.0012898335777089445, -0.0010006545942278858, 0.0008663867665710803, -0.00012880630646268148, -0.0005427341041917097, -0.0007341685557007323, 0.0005327505218947097, 0.00013172793280544388, -0.00010284470445710209, 0.00010694126900586288, 9.535987130649326e-5, -0.00022573341949318237] 0.0009466425687776336
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
