Julia Version 1.6.0-DEV.85
Commit 0413ef0e4d (2020-05-24 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Egh4mi/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Egh4mi/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.17209190144365447 -0.07997653300483104; -0.17209190144365447 0.0 -0.05751631446322526; 0.07997653300483104 0.05751631446322526 0.0])
dAA = so3([0.0 -0.026427872785186008 0.04786122779047658; 0.026427872785186008 0.0 -0.12225313971812919; -0.04786122779047658 0.12225313971812919 0.0])
dAA = so3([0.0 -0.10138364768503437 -0.09127756496639056; 0.10138364768503437 0.0 0.1736798169416867; 0.09127756496639056 -0.1736798169416867 0.0])
dAA = Quaternion(0.9972641027298516, [-0.0702661895268487, 0.01748798221073218, 0.014870860566837656])
dAA = SO3([0.9967682522448674 0.04104239319987255 0.06905485701338848; -0.045327529507131946 0.9970664195881377 0.06167633256340475; -0.0663209347453167 -0.06460709628298329 0.9957045027137262])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9907459003974997 -0.04672746209750919 0.1274327474845985; 0.08295704040090528 0.9515666482666992 -0.2960389220261457; -0.10742760489497184 0.30387079193697714 0.9466371276862767]), [0.5751631446322526, -0.7997653300483103, -1.7209190144365445])
xj = SE3(SO3([0.993484976807422 -0.08254587274682554 0.07857340358175369; 0.050513110729169294 0.9369934231228266 0.3456757883755099; -0.10215687202738219 -0.339454715561638 0.9350585380501846]), [-1.7367981694168668, -0.9127756496639055, 1.0138364768503436])
Dx = SE3(SO3([0.9994560541314572 0.032415023301822436 0.006071418641457382; -0.029398929732898423 0.7923184769845564 0.6093989940584358; 0.014943185421376182 -0.609246007203343 0.7928404656147708]), [-2.593729427824174, 0.8315075505083211, 2.3276569540655414])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
