Julia Version 1.6.0-DEV.82
Commit 852ff2bdab (2020-05-23 14:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ePqWJo/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ePqWJo/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.22564999798388874 0.10843254349681397; -0.22564999798388874 0.0 0.08378188385901858; -0.10843254349681397 -0.08378188385901858 0.0])
dAA = so3([0.0 -0.04899136762484058 -0.04270447820024845; 0.04899136762484058 0.0 0.1073174064979668; 0.04270447820024845 -0.1073174064979668 0.0])
dAA = so3([0.0 0.0005963417554412742 -0.024386409830048476; -0.0005963417554412742 0.0 0.14500445057531788; 0.024386409830048476 -0.14500445057531788 0.0])
dAA = Quaternion(0.9861948689525804, [-0.020687046878763472, -0.1518375955779576, -0.06274608443674703])
dAA = SO3([0.989241356816183 -0.018217384537858435 -0.1451539350657697; 0.031276613105830395 0.9956115748895583 0.08820071098671636; 0.1429101516236901 -0.0917917144764922 0.985469923293634])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.986908401667772 -0.10627539162309575 -0.12131507677498742; 0.13468466849330712 0.9568642022158301 0.2574314250255995; 0.08872342864436329 -0.2704005171097506 0.9586509863116858]), [-0.8378188385901857, 1.0843254349681397, -2.256499979838887])
xj = SE3(SO3([0.6771568136640427 0.29534622897070867 -0.6739653216161369; -0.2540350222609307 0.9534332070198743 0.1625771423561319; 0.690597463920372 0.06112057578736686 0.7206520783583236]), [-1.4500445057531788, -0.24386409830048475, -0.005963417554412742])
Dx = SE3(SO3([0.6953493007048359 0.4253153372346412 -0.579306666561226; -0.5017800358317309 0.8643910335539363 0.03232548146996303; 0.514496011306213 0.26820701896956667 0.8144684458746428]), [-0.5834221015290029, -1.8143787458191625, 1.8898335747265906])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
