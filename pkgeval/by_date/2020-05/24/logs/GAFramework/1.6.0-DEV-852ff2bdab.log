Julia Version 1.6.0-DEV.82
Commit 852ff2bdab (2020-05-23 14:33 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_AukuLf/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_AukuLf/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723338713571572
curgen: 20 fitness: 0.21723338713571572
curgen: 30 fitness: 0.21723338713571572
curgen: 40 fitness: 0.21723338713571572
curgen: 50 fitness: 0.21723338713571572
CoordinateCreature{Array{Float64,1}}([-0.22262196111335172], -0.21723338713571572) -0.22262196111335172 -0.21723338713571572
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25797223321606
curgen: 100 fitness: 3.258170572300754
curgen: 150 fitness: 3.2583739260284212
curgen: 200 fitness: 3.2584127756280603
curgen: 250 fitness: 3.258449218523069
curgen: 300 fitness: 3.2584523826967073
curgen: 350 fitness: 3.2584523826967073
curgen: 400 fitness: 3.258481166937331
curgen: 450 fitness: 3.258493278420371
curgen: 500 fitness: 3.2584936273704606
CoordinateCreature{Array{Float64,1}}([0.22260509735805886, 0.22249742870920095, -0.222390970397915, -0.2223727295723469, 0.22243696429577606, -0.2225062856379786, -0.22245043584503008, 0.22256363627540693, -0.22264319979779484, 0.22255564868308444, 0.22216651140405733, -0.22249920275556737, 0.22255094766999714, -0.2225258939971186, -0.22257190473989175], -3.2584936273704606) [0.22260509735805886, 0.22249742870920095, -0.222390970397915, -0.2223727295723469, 0.22243696429577606, -0.2225062856379786, -0.22245043584503008, 0.22256363627540693, -0.22264319979779484, 0.22255564868308444, 0.22216651140405733, -0.22249920275556737, 0.22255094766999714, -0.2225258939971186, -0.22257190473989175] -3.2584936273704606
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0012667567516757572
curgen: 100 fitness: -0.0012521783330043945
curgen: 150 fitness: -0.0010078185774773374
curgen: 200 fitness: -0.0008604522527946301
curgen: 250 fitness: -0.0008604522527946301
curgen: 300 fitness: -0.0008517848669100658
curgen: 350 fitness: -0.0008517848669100658
curgen: 400 fitness: -0.0007761546377764716
curgen: 450 fitness: -0.0005740909087137425
curgen: 500 fitness: -0.0005740909087137425
CoordinateCreature{Array{Float64,1}}([0.00011482326220855522, 9.910143486399625e-5, 0.0003950978879507388, -0.001331359353214513, 0.0002430329417808109, 0.00021053550487981908, -0.000375682824025503, -1.642209282326241e-5, -0.00029212800666355426, -0.0003400696190442779, -0.000145075177724642, -3.988221730987746e-5, 7.563601884565356e-5, -4.7080670070507344e-5, 0.0006824559026542111], 0.0005740909087137425) [0.00011482326220855522, 9.910143486399625e-5, 0.0003950978879507388, -0.001331359353214513, 0.0002430329417808109, 0.00021053550487981908, -0.000375682824025503, -1.642209282326241e-5, -0.00029212800666355426, -0.0003400696190442779, -0.000145075177724642, -3.988221730987746e-5, 7.563601884565356e-5, -4.7080670070507344e-5, 0.0006824559026542111] 0.0005740909087137425
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
