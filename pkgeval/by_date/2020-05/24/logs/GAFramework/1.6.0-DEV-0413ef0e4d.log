Julia Version 1.6.0-DEV.85
Commit 0413ef0e4d (2020-05-24 02:53 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_jaXac7/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_jaXac7/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.217233623383078
curgen: 20 fitness: 0.217233623383078
curgen: 30 fitness: 0.217233623383078
curgen: 40 fitness: 0.217233623383078
curgen: 50 fitness: 0.217233623383078
CoordinateCreature{Array{Float64,1}}([-0.22253771663083652], -0.217233623383078) -0.22253771663083652 -0.217233623383078
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579976833502884
curgen: 100 fitness: 3.258107393257543
curgen: 150 fitness: 3.258118320754558
curgen: 200 fitness: 3.2584171798903347
curgen: 250 fitness: 3.2584327078322572
curgen: 300 fitness: 3.2584351721914673
curgen: 350 fitness: 3.2584559527726955
curgen: 400 fitness: 3.258462069194595
curgen: 450 fitness: 3.258462069194595
curgen: 500 fitness: 3.2584626642698824
CoordinateCreature{Array{Float64,1}}([0.22241009158114167, 0.22294834377411768, -0.22267530071147984, 0.22252080090727647, -0.2224585853140502, 0.22215696771244445, -0.2221809413564283, -0.2225971265681939, 0.22248118258998664, -0.22281467364787957, 0.22238677369446175, -0.22262588559814692, -0.2222153937583083, 0.22248914313121923, 0.22302468116015836], -3.2584626642698824) [0.22241009158114167, 0.22294834377411768, -0.22267530071147984, 0.22252080090727647, -0.2224585853140502, 0.22215696771244445, -0.2221809413564283, -0.2225971265681939, 0.22248118258998664, -0.22281467364787957, 0.22238677369446175, -0.22262588559814692, -0.2222153937583083, 0.22248914313121923, 0.22302468116015836] -3.2584626642698824
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0028936121665879
curgen: 100 fitness: -0.0024222155276731883
curgen: 150 fitness: -0.002308724179130195
curgen: 200 fitness: -0.0016179994820504362
curgen: 250 fitness: -0.0016179994820504362
curgen: 300 fitness: -0.0010387536993050617
curgen: 350 fitness: -0.0009118603434785655
curgen: 400 fitness: -0.0009101453984783348
curgen: 450 fitness: -0.0008557431407609783
curgen: 500 fitness: -0.0008557431407609783
CoordinateCreature{Array{Float64,1}}([0.001148507511777178, -0.00010101216010381148, -0.00011339143738242337, 7.877990832512384e-5, 0.0009783885238332894, 7.096774153546445e-5, -0.0008462992259860435, -0.0006964968404562844, 1.5160288517912968e-5, -2.25613354370303e-5, 0.0005175377498743653, 9.383833074142679e-5, -0.00032503157390139975, -0.00041218791956314585, -0.0004985212019228734], 0.0008557431407609783) [0.001148507511777178, -0.00010101216010381148, -0.00011339143738242337, 7.877990832512384e-5, 0.0009783885238332894, 7.096774153546445e-5, -0.0008462992259860435, -0.0006964968404562844, 1.5160288517912968e-5, -2.25613354370303e-5, 0.0005175377498743653, 9.383833074142679e-5, -0.00032503157390139975, -0.00041218791956314585, -0.0004985212019228734] 0.0008557431407609783
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
