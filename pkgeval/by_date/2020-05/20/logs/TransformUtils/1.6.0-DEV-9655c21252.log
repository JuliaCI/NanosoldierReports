Julia Version 1.6.0-DEV.63
Commit 9655c21252 (2020-05-20 01:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_czTi76/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_czTi76/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.038584666876926944 -0.019175611693472077; -0.038584666876926944 0.0 0.04974372303755619; 0.019175611693472077 -0.04974372303755619 0.0])
dAA = so3([0.0 -0.054841429079809656 0.023284596494855377; 0.054841429079809656 0.0 0.0921187609607193; -0.023284596494855377 -0.0921187609607193 0.0])
dAA = so3([0.0 0.0794524294013563 -0.09073614596859059; -0.0794524294013563 0.0 -0.04004413170351225; 0.09073614596859059 0.04004413170351225 0.0])
dAA = Quaternion(0.9975676312334021, [-0.05850100091419468, 0.010723549025350644, -0.03635188445895727])
dAA = SO3([0.9993722660729768 0.03522699058816327 0.0037593800373892945; -0.0353404879546583 0.9987146230301472 0.03633389129832166; -0.002474614170070985 -0.03644394160698126 0.9993326350144164])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9889763791472328 -0.14205219456983764 0.04179587906387297; 0.12873009377588635 0.9643075575338225 0.23138603553284143; -0.07317297619531689 -0.2234549361751645 0.9719637889621572]), [-0.49743723037556187, -0.19175611693472075, -0.38584666876926943])
xj = SE3(SO3([0.9822169166492035 0.17465209137309942 0.06889539626951996; -0.18714337895030242 0.9402120171259681 0.28456759929229747; -0.015075953143836373 -0.2924004272071445 0.9561771309782954]), [0.4004413170351225, -0.9073614596859059, -0.794524294013563])
Dx = SE3(SO3([0.9484014974035955 0.3151561835700295 0.03480200684143865; -0.3166210470702956 0.9471821597320934 0.050961444616068025; -0.016903025608669554 -0.05935095823001324 0.9980940594365102]), [0.8257648899968696, -0.7262882256782334, -0.5252733131801941])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
