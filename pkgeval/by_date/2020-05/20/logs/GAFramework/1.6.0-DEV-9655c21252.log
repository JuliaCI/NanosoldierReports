Julia Version 1.6.0-DEV.63
Commit 9655c21252 (2020-05-20 01:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_kMaORy/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_kMaORy/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172327633573139
curgen: 20 fitness: 0.2172327633573139
curgen: 30 fitness: 0.2172327633573139
curgen: 40 fitness: 0.21723361929280455
curgen: 50 fitness: 0.21723361929280455
CoordinateCreature{Array{Float64,1}}([0.22256235104147803], -0.21723361929280455) 0.22256235104147803 -0.21723361929280455
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258287852859788
curgen: 100 fitness: 3.258309389316216
curgen: 150 fitness: 3.258374155444679
curgen: 200 fitness: 3.258374155444679
curgen: 250 fitness: 3.2584325973517436
curgen: 300 fitness: 3.258434039402467
curgen: 350 fitness: 3.2584396308306696
curgen: 400 fitness: 3.2584398458098414
curgen: 450 fitness: 3.2584490639042625
curgen: 500 fitness: 3.2584490639042625
CoordinateCreature{Array{Float64,1}}([-0.22275540972327895, -0.22251516525820014, 0.22246145132070627, -0.22225235496783813, 0.22264687755065868, 0.2227397480093942, -0.2224817934994044, -0.221960404766039, -0.22209808386547772, 0.2223147634544891, -0.22206130739116198, 0.2225598291773466, 0.22213408843811003, 0.2226184591105435, 0.22234518519242996], -3.2584490639042625) [-0.22275540972327895, -0.22251516525820014, 0.22246145132070627, -0.22225235496783813, 0.22264687755065868, 0.2227397480093942, -0.2224817934994044, -0.221960404766039, -0.22209808386547772, 0.2223147634544891, -0.22206130739116198, 0.2225598291773466, 0.22213408843811003, 0.2226184591105435, 0.22234518519242996] -3.2584490639042625
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0038555368311392613
curgen: 100 fitness: -0.0018320927579793533
curgen: 150 fitness: -0.0018320927579793533
curgen: 200 fitness: -0.0018200547040407855
curgen: 250 fitness: -0.0016784699365643974
curgen: 300 fitness: -0.0016784699365643974
curgen: 350 fitness: -0.0016784699365643974
curgen: 400 fitness: -0.001545853710638312
curgen: 450 fitness: -0.0008812792038952466
curgen: 500 fitness: -0.0008812792038952466
CoordinateCreature{Array{Float64,1}}([-8.887278487163322e-5, 0.0005832397881031096, 0.00018521385461435416, 0.0002588873157552485, 0.00016773514802486205, 0.00040636875038645853, -0.0007681763633713705, 7.038259207674952e-5, 0.0009706415643025885, -0.0005946675575446207, -0.0002485245839321571, -0.0012336271568520636, 0.0005693995049728265, 1.4673458947240983e-5, 2.454178157330813e-5], 0.0008812792038952466) [-8.887278487163322e-5, 0.0005832397881031096, 0.00018521385461435416, 0.0002588873157552485, 0.00016773514802486205, 0.00040636875038645853, -0.0007681763633713705, 7.038259207674952e-5, 0.0009706415643025885, -0.0005946675575446207, -0.0002485245839321571, -0.0012336271568520636, 0.0005693995049728265, 1.4673458947240983e-5, 2.454178157330813e-5] 0.0008812792038952466
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
