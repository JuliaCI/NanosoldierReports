Julia Version 1.5.0-DEV.740
Commit 3637c9e6f6 (2020-04-30 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.5/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_ISpqfH/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_ISpqfH/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08808223730266808 -0.023314234814241726; 0.08808223730266808 0.0 0.06554830612084055; 0.023314234814241726 -0.06554830612084055 0.0])
dAA = so3([0.0 0.03566977908401737 0.23814713309718114; -0.03566977908401737 0.0 -0.0032978095924506992; -0.23814713309718114 0.0032978095924506992 0.0])
dAA = so3([0.0 -0.09689102731916299 -0.06801262784122862; 0.09689102731916299 0.0 -0.09891952114220277; 0.06801262784122862 0.09891952114220277 0.0])
dAA = Quaternion(0.9941808033698836, [0.004607008361605891, 0.10699404186097237, 0.011643912187126243])
dAA = SO3([0.998917393406788 0.030859565028157288 0.03480988933711095; -0.03292791822882568 0.9976249296617085 0.060500015856093665; -0.03286020922795148 -0.06158073532968527 0.9975610355691281])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8242005371236242 0.08626489830627243 0.5596890582505056; -0.08150286530392309 0.9961096492201542 -0.03350894921885596; -0.5604023175829842 -0.0179981679820412 0.8280249443083887]), [-0.6554830612084055, -0.23314234814241724, 0.8808223730266808])
xj = SE3(SO3([0.8581161672200834 -0.0510123591279101 0.5109152403008927; 0.06659793919298328 0.9977048171663996 -0.01223978342164518; -0.5091182161843765 0.04452905814371337 0.8595439517151362]), [0.9891952114220277, -0.6801262784122862, 0.9689102731916298])
Dx = SE3(SO3([0.9871429113431334 -0.14831440250327943 -0.059596229705394244; 0.1495273489261201 0.9886213780117957 0.016411668446099086; 0.056484019935989116 -0.025111928403720146 0.9980876447205012]), [1.3426105233559047, -0.30495242287751917, 1.0084253739829778])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
