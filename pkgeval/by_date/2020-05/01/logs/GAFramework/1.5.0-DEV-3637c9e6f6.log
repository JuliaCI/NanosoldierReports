Julia Version 1.5.0-DEV.740
Commit 3637c9e6f6 (2020-04-30 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_OtaTa0/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_OtaTa0/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722751197547827
curgen: 20 fitness: 0.21722751197547827
curgen: 30 fitness: 0.21722751197547827
curgen: 40 fitness: 0.21722751197547827
curgen: 50 fitness: 0.21723131666496248
CoordinateCreature{Array{Float64,1}}([-0.2223198331986395], -0.21723131666496248) -0.2223198331986395 -0.21723131666496248
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257923909158702
curgen: 100 fitness: 3.2579964883409755
curgen: 150 fitness: 3.2582550686946443
curgen: 200 fitness: 3.2584116744976646
curgen: 250 fitness: 3.2584167667483106
curgen: 300 fitness: 3.2584261623584103
curgen: 350 fitness: 3.2584261623584103
curgen: 400 fitness: 3.2584369611609523
curgen: 450 fitness: 3.2584369611609523
curgen: 500 fitness: 3.258443437624841
CoordinateCreature{Array{Float64,1}}([0.22269505950553986, 0.22258410884748417, 0.22241235534807655, 0.2224714758129167, -0.22289607089323996, -0.2226619257019608, 0.22282063219655618, -0.2226978296341475, 0.22259411539926938, -0.22229721270497563, 0.22234540080158394, -0.22220484933975496, 0.22238656627078468, 0.2222069455740773, -0.2216944036186205], -3.258443437624841) [0.22269505950553986, 0.22258410884748417, 0.22241235534807655, 0.2224714758129167, -0.22289607089323996, -0.2226619257019608, 0.22282063219655618, -0.2226978296341475, 0.22259411539926938, -0.22229721270497563, 0.22234540080158394, -0.22220484933975496, 0.22238656627078468, 0.2222069455740773, -0.2216944036186205] -3.258443437624841
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002561242268342312
curgen: 100 fitness: -0.002561242268342312
curgen: 150 fitness: -0.002561242268342312
curgen: 200 fitness: -0.0025023212821793095
curgen: 250 fitness: -0.0012375399673487664
curgen: 300 fitness: -0.0005764160632395487
curgen: 350 fitness: -0.00036702598788451724
curgen: 400 fitness: -0.00032073318638481396
curgen: 450 fitness: -0.00032073318638481396
curgen: 500 fitness: -0.00032073318638481396
CoordinateCreature{Array{Float64,1}}([-0.00028862911454112354, 0.00018458288500299534, -0.0004630166901327268, -5.016602689709948e-6, -0.00015318431966711732, -3.214430800650009e-6, 0.0001933189030702702, -0.00010651239723661997, -7.75090662949962e-5, -3.2333822456486776e-5, 0.00031821691583725983, 0.0002213907191111128, 9.229025933251561e-6, -0.0008840255032547817, 0.0005232306597256035], 0.00032073318638481396) [-0.00028862911454112354, 0.00018458288500299534, -0.0004630166901327268, -5.016602689709948e-6, -0.00015318431966711732, -3.214430800650009e-6, 0.0001933189030702702, -0.00010651239723661997, -7.75090662949962e-5, -3.2333822456486776e-5, 0.00031821691583725983, 0.0002213907191111128, 9.229025933251561e-6, -0.0008840255032547817, 0.0005232306597256035] 0.00032073318638481396
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
