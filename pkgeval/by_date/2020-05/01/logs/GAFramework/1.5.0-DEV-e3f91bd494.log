Julia Version 1.5.0-DEV.773
Commit e3f91bd494 (2020-05-01 17:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.5/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_Bi0gku/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_Bi0gku/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171914761756657
curgen: 20 fitness: 0.2171914761756657
curgen: 30 fitness: 0.21721852907149683
curgen: 40 fitness: 0.21721852907149683
curgen: 50 fitness: 0.21721852907149683
CoordinateCreature{Array{Float64,1}}([0.22313313433762577], -0.21721852907149683) 0.22313313433762577 -0.21721852907149683
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257642763799162
curgen: 100 fitness: 3.25784955406741
curgen: 150 fitness: 3.2583175086799963
curgen: 200 fitness: 3.2583817969813147
curgen: 250 fitness: 3.2583817969813147
curgen: 300 fitness: 3.2584071746812264
curgen: 350 fitness: 3.2584087498426535
curgen: 400 fitness: 3.2584179010737695
curgen: 450 fitness: 3.2584237351206733
curgen: 500 fitness: 3.2584352520003987
CoordinateCreature{Array{Float64,1}}([-0.22252112221760428, 0.22267089903087414, -0.22265723119387748, -0.22254131851023845, 0.22216763246002844, 0.22257828630448742, 0.22280887640869834, -0.22217233951122686, 0.22238903022690942, 0.22268009153550938, 0.22277478109517135, -0.22265128436716003, -0.2232419478965867, -0.2228199742331383, -0.22327167633670783], -3.2584352520003987) [-0.22252112221760428, 0.22267089903087414, -0.22265723119387748, -0.22254131851023845, 0.22216763246002844, 0.22257828630448742, 0.22280887640869834, -0.22217233951122686, 0.22238903022690942, 0.22268009153550938, 0.22277478109517135, -0.22265128436716003, -0.2232419478965867, -0.2228199742331383, -0.22327167633670783] -3.2584352520003987
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0013410702364069493
curgen: 100 fitness: -0.0012166298758700123
curgen: 150 fitness: -0.0011010893763625518
curgen: 200 fitness: -0.0008374895436702445
curgen: 250 fitness: -0.0007232957267433449
curgen: 300 fitness: -0.0007151919645025373
curgen: 350 fitness: -0.0007151919645025373
curgen: 400 fitness: -0.0007151919645025373
curgen: 450 fitness: -0.0007151919645025373
curgen: 500 fitness: -0.0007084349950616797
CoordinateCreature{Array{Float64,1}}([-0.0007133207521707548, 0.0007799153121822453, -0.0004034699897326776, -5.304327384417237e-5, 0.00011342314875599849, 5.5595271987683066e-5, 0.0002454555874213174, 0.00011853654934409694, 0.0004472543009428351, -6.266972374535536e-5, 0.0005058683389319685, 0.0005094244758475051, -0.00023056404729641326, 0.00032687430571947903, -0.0011482831461104908], 0.0007084349950616797) [-0.0007133207521707548, 0.0007799153121822453, -0.0004034699897326776, -5.304327384417237e-5, 0.00011342314875599849, 5.5595271987683066e-5, 0.0002454555874213174, 0.00011853654934409694, 0.0004472543009428351, -6.266972374535536e-5, 0.0005058683389319685, 0.0005094244758475051, -0.00023056404729641326, 0.00032687430571947903, -0.0011482831461104908] 0.0007084349950616797
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
