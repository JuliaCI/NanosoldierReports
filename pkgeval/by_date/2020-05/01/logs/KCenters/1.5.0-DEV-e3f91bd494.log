Julia Version 1.5.0-DEV.773
Commit e3f91bd494 (2020-05-01 17:06 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataAPI ───────────────────── v1.3.0
  Installed OrderedCollections ────────── v1.1.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed StatsBase ─────────────────── v0.32.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed Parsers ───────────────────── v1.0.2
  Installed TableTraits ───────────────── v1.0.0
  Installed Compat ────────────────────── v3.9.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Reexport ──────────────────── v0.2.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataStructures ────────────── v0.17.15
  Installed DataValueInterfaces ───────── v1.0.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed JSON ──────────────────────── v0.21.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed DataFrames ────────────────── v0.20.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed MLDataPattern ─────────────── v0.5.3
Updating `~/.julia/environments/v1.5/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.5/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.9.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.15
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v1.0.2
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_l90L3H/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_l90L3H/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.9.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.15
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v1.0.2
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9370718047022819
[ Info: 0.8307796732584636
[ Info: 0.5571489485601584
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3317879082510869
mean(cdnet.distances) = 0.4591830491522948
mean(crand.distances) = 0.3410463157047828
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.177734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.177734375,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.6015625,"distances_sum":492.2389200801337}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.177734375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.177734375,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.6015625,"distances_sum":492.2389200801337}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.177734375,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.177734375,"f1":null,"seconds":4.0102750062942505e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":5.6015625,"distances_sum":492.2389200801337}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8572214244089251,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.546875,"distances_sum":2044.833583564388}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7941860223110231,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.3984375,"distances_sum":1741.9150762068746}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8572214244089251,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.546875,"distances_sum":2044.833583564388}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527186355311361,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.96875,"distances_sum":2600.4738691842163}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.965813873626374,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.96875,"distances_sum":2702.491689256043}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9657967032967036,"seconds":6.496906280517578e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9609375,"distances_sum":2685.4455922946727}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9158456127206136,"seconds":4.721805453300476e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.65625,"distances_sum":2346.738309671925}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8682983682983693,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.6953125,"distances_sum":2077.4708881826887}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.965813873626374,"seconds":4.7460198402404785e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.96875,"distances_sum":2702.491689256043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9744619963369965,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9375,"distances_sum":2777.1977442778884}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9741472069597075,"seconds":6.748363375663757e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9765625,"distances_sum":2744.0700491138755}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9829613095238098,"seconds":6.761401891708374e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9921875,"distances_sum":2815.272325846501}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9816964285714287,"seconds":6.573274731636047e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9921875,"distances_sum":2826.5285396967065}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238098,"seconds":6.761401891708374e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9921875,"distances_sum":2815.272325846501}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9829613095238098,"seconds":6.761401891708374e-6,"exhaustive_search_seconds":1.734122633934021e-6,"evaluations":8.9921875,"distances_sum":2815.272325846501}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5146484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5146484375,"f1":null,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.875,"distances_sum":1328.9483072922849}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.349609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.349609375,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":5.546875,"distances_sum":912.5767329946206}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5146484375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5146484375,"f1":null,"seconds":4.822388291358948e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":6.875,"distances_sum":1328.9483072922849}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9172249625374633,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.796875,"distances_sum":2369.5870498699305}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7884910228660238,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.0625,"distances_sum":1775.029966080162}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8812555500055508,"seconds":5.776062607765198e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.5234375,"distances_sum":2164.313480809459}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.9172249625374633,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.796875,"distances_sum":2369.5870498699305}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.939314331501832,"seconds":6.413087248802185e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7890625,"distances_sum":2572.3193845714914}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.865234375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.865234375,"f1":0.9213630119880126,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.7265625,"distances_sum":2402.946867050295}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.951774267399268,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2615.8695310543185}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.951774267399268,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2615.8695310543185}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.951774267399268,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.477077603340149e-6,"evaluations":8.859375,"distances_sum":2615.8695310543185}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5419921875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5419921875,"f1":null,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.9375,"distances_sum":1319.3050614248275}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.1875,"distances_sum":965.8684780410549}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.1953125,"distances_sum":983.661711826575}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8698405760905769,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6796875,"distances_sum":2054.48547575816}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.8698405760905769,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6796875,"distances_sum":2054.48547575816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9561984890109896,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8828125,"distances_sum":2618.2283399752005}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9553628663003669,"seconds":6.120651960372925e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.921875,"distances_sum":2605.505483104987}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384589368964376,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9140625,"distances_sum":2471.7864052683562}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.909914044289045,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6171875,"distances_sum":2289.932937838067}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9561984890109896,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8828125,"distances_sum":2618.2283399752005}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9808779761904766,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2790.4029022968552}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772722069597072,"seconds":6.401911377906799e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.953125,"distances_sum":2779.6259450250454}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9706101190476191,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.96875,"distances_sum":2716.303401874658}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683092948717954,"seconds":6.230548024177551e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.90625,"distances_sum":2711.816715908421}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9808779761904766,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2790.4029022968552}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9808779761904766,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9765625,"distances_sum":2790.4029022968552}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.5234375,"distances_sum":1112.5963397270318}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8524824134199143,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.515625,"distances_sum":2011.927408354928}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8524824134199143,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.515625,"distances_sum":2011.927408354928}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538003663003669,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2606.6435887976986}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9538003663003669,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9140625,"distances_sum":2606.6435887976986}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9805460164835167,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2795.5549135352003}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9609375,"distances_sum":2774.7456731187663}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9805460164835167,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2795.5549135352003}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9805460164835167,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.984375,"distances_sum":2795.5549135352003}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8037535381285389,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5078125,"distances_sum":1698.9776714018574}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8037535381285389,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5078125,"distances_sum":1698.9776714018574}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8709649725274734,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5703125,"distances_sum":1972.3131222667143}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9204930486180491,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6796875,"distances_sum":2236.8509876117864}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8117257742257752,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4765625,"distances_sum":1709.871243851714}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.9204930486180491,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6796875,"distances_sum":2236.8509876117864}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9493017399267402,"seconds":6.122514605522156e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2510.515793395784}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9605711996337002,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2600.2884475324686}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431662087912093,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2458.4569874494605}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9605711996337002,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2600.2884475324686}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9605711996337002,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.859375,"distances_sum":2600.2884475324686}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8611216908091917,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.5078125,"distances_sum":2030.5339346460644}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8611216908091917,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.5078125,"distances_sum":2030.5339346460644}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519803113553119,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.8203125,"distances_sum":2624.9797584163675}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519803113553119,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.8203125,"distances_sum":2624.9797584163675}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9583733974358979,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.84375,"distances_sum":2665.8245427366733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.953891941391942,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.8828125,"distances_sum":2640.36855844181}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9583733974358979,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.84375,"distances_sum":2665.8245427366733}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9583733974358979,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.5925616025924683e-6,"evaluations":8.84375,"distances_sum":2665.8245427366733}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":3.9655715227127075e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.4296875,"distances_sum":1003.9536404450917}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6841007950382956,"seconds":4.429370164871216e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.5703125,"distances_sum":1340.8509864249654}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.5818666219711304e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":6.3203125,"distances_sum":495.7270811327167}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8625775266400274,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.28125,"distances_sum":2069.5513045607463}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8625775266400274,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.28125,"distances_sum":2069.5513045607463}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9342719780219786,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2451.029606824425}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9327323717948726,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.78125,"distances_sum":2475.9757325255896}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9038492757242765,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.5703125,"distances_sum":2279.0904148303616}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9269662629037635,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.765625,"distances_sum":2454.968916040931}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.8984947344322352,"seconds":5.817040801048279e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.34375,"distances_sum":2240.70876238145}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8837890625,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8837890625,"f1":0.9342719780219786,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2451.029606824425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9650183150183153,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2685.4289200578646}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9667467948717952,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2721.6785125416854}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9672275641025645,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2712.916580036382}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641769688644695,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.90625,"distances_sum":2696.548634086724}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630208333333337,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.890625,"distances_sum":2694.827180051112}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519033050283054,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8359375,"distances_sum":2616.450180355754}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9667467948717952,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2721.6785125416854}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9667467948717952,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5702098608016968e-6,"evaluations":8.8984375,"distances_sum":2721.6785125416854}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8432468573093583,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1328125,"distances_sum":1722.5022286454066}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.740234375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.740234375,"f1":0.8432468573093583,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.1328125,"distances_sum":1722.5022286454066}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9199321511821519,"seconds":7.383525371551514e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3671875,"distances_sum":2250.943437109344}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.859375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.859375,"f1":0.9199321511821519,"seconds":7.383525371551514e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3671875,"distances_sum":2250.943437109344}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596211080586083,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2580.637699734327}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9477767024642033,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.703125,"distances_sum":2546.310886074237}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9348099816849823,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.609375,"distances_sum":2410.750343435061}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.928840430402931,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.625,"distances_sum":2343.9388928542558}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596211080586083,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2580.637699734327}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9596211080586083,"seconds":5.7462602853775024e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":2580.637699734327}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8524303821178829,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7421875,"distances_sum":1832.9446370467688}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":2.902001142501831e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.609375,"distances_sum":426.79320495608664}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8524303821178829,"seconds":4.639849066734314e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.7421875,"distances_sum":1832.9446370467688}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558836996336998,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2572.726808025258}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9000171703296711,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0546875,"distances_sum":2143.1987429028463}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558836996336998,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.734375,"distances_sum":2572.726808025258}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676911630036636,"seconds":5.5655837059021e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8828125,"distances_sum":2647.672964364707}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9667639652014655,"seconds":5.535781383514404e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8359375,"distances_sum":2654.2348758026865}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9800251831501834,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2715.5848711676717}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9586538461538462,"seconds":5.252659320831299e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7421875,"distances_sum":2640.1597989949114}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9800251831501834,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2715.5848711676717}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9800251831501834,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2715.5848711676717}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7837391774891782,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.015625,"distances_sum":1485.323174795924}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7837391774891782,"seconds":4.414469003677368e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.015625,"distances_sum":1485.323174795924}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7990004786879795,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.2890625,"distances_sum":1557.0862780429104}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7990004786879795,"seconds":4.542991518974304e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.2890625,"distances_sum":1557.0862780429104}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.926634303196804,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.640625,"distances_sum":2288.438110056539}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8346242299367308,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.03125,"distances_sum":1747.751469584596}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.926634303196804,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.640625,"distances_sum":2288.438110056539}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.926634303196804,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.640625,"distances_sum":2288.438110056539}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2841796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2841796875,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.4609375,"distances_sum":684.677056779219}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2841796875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2841796875,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":6.4609375,"distances_sum":684.677056779219}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7147189615939622,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.953125,"distances_sum":1267.8188795268156}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.578125,"f1":0.7147189615939622,"seconds":4.157423973083496e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.953125,"distances_sum":1267.8188795268156}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.587890625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.587890625,"f1":0.7234087093462099,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.03125,"distances_sum":1290.5347271846454}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.587890625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.587890625,"f1":0.7234087093462099,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.03125,"distances_sum":1290.5347271846454}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.587890625,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.587890625,"f1":0.7234087093462099,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.03125,"distances_sum":1290.5347271846454}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8291645854145863,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8671875,"distances_sum":1612.5506882655366}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7216796875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.7216796875,"f1":0.8291645854145863,"seconds":4.556030035018921e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8671875,"distances_sum":1612.5506882655366}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9210482226107233,"seconds":5.261972546577454e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.453125,"distances_sum":2047.3778419956002}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9450580669330672,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7421875,"distances_sum":2284.793684886125}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9450580669330672,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7421875,"distances_sum":2284.793684886125}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179493,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9140625,"distances_sum":2454.754850495246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9574633699633706,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2349.8347804293694}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728079212454216,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.890625,"distances_sum":2444.0773997124675}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179493,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9140625,"distances_sum":2454.754850495246}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9768429487179493,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9140625,"distances_sum":2454.754850495246}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.5276094675064087e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.1640625,"distances_sum":455.318271506735}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1806640625,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1806640625,"f1":null,"seconds":2.5276094675064087e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.1640625,"distances_sum":455.318271506735}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6591796875, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6591796875,"f1":0.7827511030636038,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4765625,"distances_sum":1580.7948042055666}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7827511030636038,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4765625,"distances_sum":1580.7948042055666}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6591796875,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7827511030636038,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4765625,"distances_sum":1580.7948042055666}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6591796875,"state":{"ssize":6,"bsize":4},"perf":{"precision":1.0,"recall":0.6591796875,"f1":0.7827511030636038,"seconds":4.468485713005066e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4765625,"distances_sum":1580.7948042055666}}, n: 9
mean(cfft.distances) = 0.33682982019416063
mean(cdnet.distances) = 0.4131182403002414
mean(crand.distances) = 0.5651030429487197
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8711111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8799999999999999
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8577777777777778
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8977777777777778
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.94
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.88
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.931111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8688888888888888
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9066666666666667
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9066666666666666
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8666666666666667
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8466666666666667
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.6121674924095472] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 1, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 8, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 10, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
finished with 15 centroids; started with 12
acc = 0.9733333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.38110255671094534] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38110255671094534, 0.31076785196849444] ***
*** starting iteration: 2; err: [Inf, 0.38110255671094534, 0.31076785196849444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38110255671094534, 0.31076785196849444, 0.30073902836382704] ***
*** starting iteration: 3; err: [Inf, 0.38110255671094534, 0.31076785196849444, 0.30073902836382704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38110255671094534, 0.31076785196849444, 0.30073902836382704, 0.29751349010088063] ***
*** finished computation of 3 references, err: [Inf, 0.38110255671094534, 0.31076785196849444, 0.30073902836382704, 0.29751349010088063] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [236, 33, 0]]
** centroid: 1, normalized-entropy: 0.5370059849052358, [(1, 236), (2, 33)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 179, 22]]
** centroid: 2, normalized-entropy: 0.49826303575443887, [(2, 179), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [167, 29, 0]]
** centroid: 3, normalized-entropy: 0.6047095089016045, [(1, 167), (2, 29)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25833296815531925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25833296815531925, 0.19123238669715364] ***
*** finished computation of 7 references, err: [Inf, 0.25833296815531925, 0.19123238669715364] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 70, 22]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 70), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 3, 0]]
** centroid: 3, normalized-entropy: 0.2795055456366802, [(1, 59), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [85, 48, 0]]
** centroid: 4, normalized-entropy: 0.9434295813183314, [(1, 85), (2, 48)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 39, 0]]
** centroid: 5, normalized-entropy: 0.9622623958249239, [(1, 62), (2, 39)]
*** center 6: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 81, 0]]
** centroid: 7, normalized-entropy: 0.2222848306856879, [(1, 3), (2, 81)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23817289690033294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23817289690033294, 0.19377369164437547] ***
*** finished computation of 7 references, err: [Inf, 0.23817289690033294, 0.19377369164437547] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [10, 101, 0]]
** centroid: 1, normalized-entropy: 0.436770454577089, [(1, 10), (2, 101)]
*** center 2: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [60, 47, 0]]
** centroid: 3, normalized-entropy: 0.9893257549491837, [(1, 60), (2, 47)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 72, 21]]
** centroid: 4, normalized-entropy: 0.7706290693639406, [(2, 72), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 16, 0]]
** centroid: 5, normalized-entropy: 0.6581912658132184, [(1, 78), (2, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [98, 3, 0]]
** centroid: 7, normalized-entropy: 0.192900074578984, [(1, 98), (2, 3)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2423214386182389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2423214386182389, 0.19336010229730535] ***
*** finished computation of 7 references, err: [Inf, 0.2423214386182389, 0.19336010229730535] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 42, 0]]
** centroid: 1, normalized-entropy: 0.9814538950336533, [(1, 58), (2, 42)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 37, 0]]
** centroid: 2, normalized-entropy: 0.9562940061600327, [(1, 61), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 86, 15]]
** centroid: 4, normalized-entropy: 0.6061112071230008, [(2, 86), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 81, 0]]
** centroid: 5, normalized-entropy: 0.9522656254366643, [(1, 48), (2, 81)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18514874803920364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18514874803920364, 0.15345757374086896] ***
*** finished computation of 7 references, err: [Inf, 0.18514874803920364, 0.15345757374086896] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [66, 78, 0]]
** centroid: 1, normalized-entropy: 0.9949848281859699, [(1, 66), (2, 78)]
*** center 2: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 22]]
** centroid: 4, normalized-entropy: 0.8067955503968327, [(2, 67), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [118, 17, 0]]
** centroid: 5, normalized-entropy: 0.5461582035252529, [(1, 118), (2, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 79, 0]]
** centroid: 7, normalized-entropy: 0.40707680632541937, [(1, 7), (2, 79)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19177494261894135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19177494261894135, 0.15098232801408804] ***
*** finished computation of 7 references, err: [Inf, 0.19177494261894135, 0.15098232801408804] ***
*** center 1: selecting labels [1] (freq >= 2) [from [104, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [87, 3, 0]]
** centroid: 2, normalized-entropy: 0.2108423003185322, [(1, 87), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 50, 21]]
** centroid: 3, normalized-entropy: 0.8760643678555242, [(2, 50), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [129, 10, 0]]
** centroid: 5, normalized-entropy: 0.37313102309420226, [(1, 129), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 87, 0]]
** centroid: 6, normalized-entropy: 0.2108423003185322, [(1, 3), (2, 87)]
*** center 7: selecting labels [2] (freq >= 2) [from [1, 88, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1995795437475496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1995795437475496, 0.15550482382570607] ***
*** finished computation of 7 references, err: [Inf, 0.1995795437475496, 0.15550482382570607] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [31, 79, 0]]
** centroid: 1, normalized-entropy: 0.8579163978157118, [(1, 31), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [61, 28, 0]]
** centroid: 2, normalized-entropy: 0.898419774686072, [(1, 61), (2, 28)]
*** center 3: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 103, 15]]
** centroid: 4, normalized-entropy: 0.5494827677177795, [(2, 103), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [78, 36, 0]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(1, 78), (2, 36)]
*** center 6: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3438798300698176] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3438798300698176, 0.22951985121069773] ***
*** finished computation of 3 references, err: [Inf, 0.3438798300698176, 0.22951985121069773] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [61, 193, 22]]
** centroid: 1, normalized-entropy: 0.7148847153824183, [(1, 61), (2, 193), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [131, 48, 0]]
** centroid: 3, normalized-entropy: 0.8388067647725163, [(1, 131), (2, 48)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3430209685105836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3430209685105836, 0.2314048563053404] ***
*** finished computation of 3 references, err: [Inf, 0.3430209685105836, 0.2314048563053404] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [239, 11, 0]]
** centroid: 1, normalized-entropy: 0.2603406250124503, [(1, 239), (2, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [4, 186, 21]]
** centroid: 2, normalized-entropy: 0.37864673272063193, [(1, 4), (2, 186), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [164, 42, 0]]
** centroid: 3, normalized-entropy: 0.7296274178915987, [(1, 164), (2, 42)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3342127519501918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3342127519501918, 0.23670882897275589] ***
*** finished computation of 3 references, err: [Inf, 0.3342127519501918, 0.23670882897275589] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [263, 15, 0]]
** centroid: 1, normalized-entropy: 0.3029732557522725, [(1, 263), (2, 15)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [5, 180, 15]]
** centroid: 2, normalized-entropy: 0.3470892250036761, [(1, 5), (2, 180), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [138, 51, 0]]
** centroid: 3, normalized-entropy: 0.8412367762002599, [(1, 138), (2, 51)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37556089571042284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37556089571042284, 0.29937756388495723] ***
*** starting iteration: 2; err: [Inf, 0.37556089571042284, 0.29937756388495723] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37556089571042284, 0.29937756388495723, 0.29595767702717146] ***
*** starting iteration: 3; err: [Inf, 0.37556089571042284, 0.29937756388495723, 0.29595767702717146] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37556089571042284, 0.29937756388495723, 0.29595767702717146, 0.2949451482966654] ***
*** finished computation of 3 references, err: [Inf, 0.37556089571042284, 0.29937756388495723, 0.29595767702717146, 0.2949451482966654] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [248, 9, 0]]
** centroid: 1, normalized-entropy: 0.21897081382840794, [(1, 248), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [153, 51, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 153), (2, 51)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 181, 22]]
** centroid: 3, normalized-entropy: 0.35921083513649676, [(1, 2), (2, 181), (3, 22)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4240355446293805] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4240355446293805, 0.3052695702057684] ***
*** starting iteration: 2; err: [Inf, 0.4240355446293805, 0.3052695702057684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4240355446293805, 0.3052695702057684, 0.29793139378577915] ***
*** starting iteration: 3; err: [Inf, 0.4240355446293805, 0.3052695702057684, 0.29793139378577915] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4240355446293805, 0.3052695702057684, 0.29793139378577915, 0.2960109617198068] ***
*** finished computation of 3 references, err: [Inf, 0.4240355446293805, 0.3052695702057684, 0.29793139378577915, 0.2960109617198068] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [72, 153, 21]]
** centroid: 1, normalized-entropy: 0.787392541755245, [(1, 72), (2, 153), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [136, 86, 0]]
** centroid: 2, normalized-entropy: 0.9630928243932294, [(1, 136), (2, 86)]
*** center 3: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3711460040047251] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3711460040047251, 0.30667155381219496] ***
*** starting iteration: 2; err: [Inf, 0.3711460040047251, 0.30667155381219496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3711460040047251, 0.30667155381219496, 0.2979513635353438] ***
*** starting iteration: 3; err: [Inf, 0.3711460040047251, 0.30667155381219496, 0.2979513635353438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3711460040047251, 0.30667155381219496, 0.2979513635353438, 0.29376644484497705] ***
*** finished computation of 3 references, err: [Inf, 0.3711460040047251, 0.30667155381219496, 0.2979513635353438, 0.29376644484497705] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [81, 157, 15]]
** centroid: 1, normalized-entropy: 0.7539004754232544, [(1, 81), (2, 157), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [139, 89, 0]]
** centroid: 2, normalized-entropy: 0.9650256086183517, [(1, 139), (2, 89)]
*** center 3: selecting labels [1] (freq >= 1) [from [186, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3752384981855393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3752384981855393, 0.29245229952897445] ***
*** starting iteration: 2; err: [Inf, 0.3752384981855393, 0.29245229952897445] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3752384981855393, 0.29245229952897445, 0.28963939850030096] ***
*** starting iteration: 3; err: [Inf, 0.3752384981855393, 0.29245229952897445, 0.28963939850030096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3752384981855393, 0.29245229952897445, 0.28963939850030096, 0.2893395200790628] ***
*** finished computation of 3 references, err: [Inf, 0.3752384981855393, 0.29245229952897445, 0.28963939850030096, 0.2893395200790628] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [217, 21, 0]]
** centroid: 1, normalized-entropy: 0.43055186701043935, [(1, 217), (2, 21)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 185, 21]]
** centroid: 2, normalized-entropy: 0.47512074041685076, [(2, 185), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [190, 33, 0]]
** centroid: 3, normalized-entropy: 0.6047672921996365, [(1, 190), (2, 33)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3413708902409543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3413708902409543, 0.3111827330331484] ***
*** starting iteration: 2; err: [Inf, 0.3413708902409543, 0.3111827330331484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3413708902409543, 0.3111827330331484, 0.3009532043651707] ***
*** starting iteration: 3; err: [Inf, 0.3413708902409543, 0.3111827330331484, 0.3009532043651707] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3413708902409543, 0.3111827330331484, 0.3009532043651707, 0.29924268511681074] ***
*** finished computation of 3 references, err: [Inf, 0.3413708902409543, 0.3111827330331484, 0.3009532043651707, 0.29924268511681074] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [264, 8, 0]]
** centroid: 1, normalized-entropy: 0.1914332548141934, [(1, 264), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [140, 64, 0]]
** centroid: 2, normalized-entropy: 0.8974271930876951, [(1, 140), (2, 64)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [2, 174, 15]]
** centroid: 3, normalized-entropy: 0.30262621256737743, [(1, 2), (2, 174), (3, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2675454393085148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2675454393085148, 0.21195315076569626] ***
*** starting iteration: 2; err: [Inf, 0.2675454393085148, 0.21195315076569626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875] ***
*** starting iteration: 3; err: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875, 0.19447643929035277] ***
*** starting iteration: 4; err: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875, 0.19447643929035277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875, 0.19447643929035277, 0.19208617823886442] ***
*** starting iteration: 5; err: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875, 0.19447643929035277, 0.19208617823886442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875, 0.19447643929035277, 0.19208617823886442, 0.19190507192114317] ***
*** finished computation of 7 references, err: [Inf, 0.2675454393085148, 0.21195315076569626, 0.19921786995050875, 0.19447643929035277, 0.19208617823886442, 0.19190507192114317] ***
*** center 1: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 34, 0]]
** centroid: 2, normalized-entropy: 0.9653168212008997, [(1, 53), (2, 34)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 85, 0]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(1, 25), (2, 85)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [75, 31, 0]]
** centroid: 4, normalized-entropy: 0.8718686865520275, [(1, 75), (2, 31)]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 91, 22]]
** centroid: 6, normalized-entropy: 0.7111806626974718, [(2, 91), (3, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.317560031133211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863] ***
*** starting iteration: 2; err: [Inf, 0.317560031133211, 0.22938591117287863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645] ***
*** starting iteration: 3; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706] ***
*** starting iteration: 4; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607] ***
*** starting iteration: 5; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973] ***
*** starting iteration: 6; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694] ***
*** starting iteration: 7; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875] ***
*** starting iteration: 8; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875, 0.19236479772986478] ***
*** starting iteration: 9; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875, 0.19236479772986478] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875, 0.19236479772986478, 0.1913065224972074] ***
*** starting iteration: 10; err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875, 0.19236479772986478, 0.1913065224972074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875, 0.19236479772986478, 0.1913065224972074, 0.19069539930677037] ***
*** finished computation of 7 references, err: [Inf, 0.317560031133211, 0.22938591117287863, 0.21661360621259645, 0.20832933040511706, 0.20359464308157607, 0.19782426541777973, 0.19535749108562694, 0.19387647570103875, 0.19236479772986478, 0.1913065224972074, 0.19069539930677037] ***
*** center 1: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [121, 3, 0]]
** centroid: 2, normalized-entropy: 0.1643790586740573, [(1, 121), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 125, 21]]
** centroid: 3, normalized-entropy: 0.5941964666806003, [(2, 125), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 42, 0]]
** centroid: 4, normalized-entropy: 0.9774178175281716, [(1, 60), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [53, 24, 0]]
** centroid: 5, normalized-entropy: 0.8951127210954559, [(1, 53), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [61, 45, 0]]
** centroid: 6, normalized-entropy: 0.9835018986559216, [(1, 61), (2, 45)]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2679991206416729] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679991206416729, 0.20678959105923392] ***
*** starting iteration: 2; err: [Inf, 0.2679991206416729, 0.20678959105923392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679991206416729, 0.20678959105923392, 0.20123159089523635] ***
*** starting iteration: 3; err: [Inf, 0.2679991206416729, 0.20678959105923392, 0.20123159089523635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679991206416729, 0.20678959105923392, 0.20123159089523635, 0.19896665233643962] ***
*** starting iteration: 4; err: [Inf, 0.2679991206416729, 0.20678959105923392, 0.20123159089523635, 0.19896665233643962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679991206416729, 0.20678959105923392, 0.20123159089523635, 0.19896665233643962, 0.1980898825038431] ***
*** finished computation of 7 references, err: [Inf, 0.2679991206416729, 0.20678959105923392, 0.20123159089523635, 0.19896665233643962, 0.1980898825038431] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [25, 57, 0]]
** centroid: 1, normalized-entropy: 0.8871723027673716, [(1, 25), (2, 57)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [138, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [9, 96, 0]]
** centroid: 4, normalized-entropy: 0.4220005168831531, [(1, 9), (2, 96)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [39, 35, 0]]
** centroid: 5, normalized-entropy: 0.9978913098356861, [(1, 39), (2, 35)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 56, 15]]
** centroid: 6, normalized-entropy: 0.743898745288434, [(2, 56), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [121, 2, 0]]
** centroid: 7, normalized-entropy: 0.11989294671951675, [(1, 121), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.331957084388268] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.331957084388268, 0.30280535325111524] ***
*** finished computation of 3 references, err: [Inf, 0.331957084388268, 0.30280535325111524] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [33, 128, 22]]
** centroid: 1, normalized-entropy: 0.7405686883936505, [(1, 33), (2, 128), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [249, 8, 0]]
** centroid: 2, normalized-entropy: 0.20001956442752727, [(1, 249), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 105, 0]]
** centroid: 3, normalized-entropy: 0.9963814798259452, [(1, 121), (2, 105)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5891686762156694] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5891686762156694, 0.36211776879449925] ***
*** finished computation of 3 references, err: [Inf, 0.5891686762156694, 0.36211776879449925] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [49, 49, 16]]
** centroid: 1, normalized-entropy: 0.9115711648861482, [(1, 49), (2, 49), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [318, 58, 0]]
** centroid: 2, normalized-entropy: 0.6203875817366156, [(1, 318), (2, 58)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [40, 132, 5]]
** centroid: 3, normalized-entropy: 0.5967789673088568, [(1, 40), (2, 132), (3, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33761390995351537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33761390995351537, 0.3204706252937944] ***
*** finished computation of 3 references, err: [Inf, 0.33761390995351537, 0.3204706252937944] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [33, 157, 5]]
** centroid: 1, normalized-entropy: 0.518007263761851, [(1, 33), (2, 157), (3, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [301, 5, 0]]
** centroid: 2, normalized-entropy: 0.12036443361060233, [(1, 301), (2, 5)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [72, 84, 10]]
** centroid: 3, normalized-entropy: 0.7975864312170089, [(1, 72), (2, 84), (3, 10)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24845951724680024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453] ***
*** starting iteration: 2; err: [Inf, 0.24845951724680024, 0.17846423911361453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758] ***
*** starting iteration: 3; err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617] ***
*** starting iteration: 4; err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203] ***
*** starting iteration: 5; err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306] ***
*** starting iteration: 6; err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306, 0.1472460961265786] ***
*** starting iteration: 7; err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306, 0.1472460961265786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306, 0.1472460961265786, 0.1456742690465002] ***
*** starting iteration: 8; err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306, 0.1472460961265786, 0.1456742690465002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306, 0.1472460961265786, 0.1456742690465002, 0.1447604670463404] ***
*** finished computation of 7 references, err: [Inf, 0.24845951724680024, 0.17846423911361453, 0.16615908017784758, 0.15676705393934617, 0.15233742637705203, 0.1495006203584306, 0.1472460961265786, 0.1456742690465002, 0.1447604670463404] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [42, 67, 0]]
** centroid: 1, normalized-entropy: 0.9617136136083148, [(1, 42), (2, 67)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [59, 36, 0]]
** centroid: 2, normalized-entropy: 0.9572951876544017, [(1, 59), (2, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 90, 22]]
** centroid: 4, normalized-entropy: 0.7147274731317893, [(2, 90), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [58, 48, 0]]
** centroid: 5, normalized-entropy: 0.9935704757706079, [(1, 58), (2, 48)]
*** center 6: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22738581008349043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22738581008349043, 0.17967028756984796] ***
*** starting iteration: 2; err: [Inf, 0.22738581008349043, 0.17967028756984796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22738581008349043, 0.17967028756984796, 0.1552848149959495] ***
*** starting iteration: 3; err: [Inf, 0.22738581008349043, 0.17967028756984796, 0.1552848149959495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22738581008349043, 0.17967028756984796, 0.1552848149959495, 0.15093149414154766] ***
*** starting iteration: 4; err: [Inf, 0.22738581008349043, 0.17967028756984796, 0.1552848149959495, 0.15093149414154766] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22738581008349043, 0.17967028756984796, 0.1552848149959495, 0.15093149414154766, 0.15007244559728178] ***
*** finished computation of 7 references, err: [Inf, 0.22738581008349043, 0.17967028756984796, 0.1552848149959495, 0.15093149414154766, 0.15007244559728178] ***
*** center 1: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 128, 21]]
** centroid: 2, normalized-entropy: 0.5866942528222021, [(2, 128), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [57, 55, 0]]
** centroid: 3, normalized-entropy: 0.9997699662429026, [(1, 57), (2, 55)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [70, 12, 0]]
** centroid: 4, normalized-entropy: 0.6006085754131871, [(1, 70), (2, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [66, 44, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 66), (2, 44)]
*** center 7: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26889004228033425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26889004228033425, 0.1748087799212877] ***
*** starting iteration: 2; err: [Inf, 0.26889004228033425, 0.1748087799212877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199] ***
*** starting iteration: 3; err: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026] ***
*** starting iteration: 4; err: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026, 0.15363890225014676] ***
*** starting iteration: 5; err: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026, 0.15363890225014676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026, 0.15363890225014676, 0.15244323969993187] ***
*** starting iteration: 6; err: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026, 0.15363890225014676, 0.15244323969993187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026, 0.15363890225014676, 0.15244323969993187, 0.15195514381523878] ***
*** finished computation of 7 references, err: [Inf, 0.26889004228033425, 0.1748087799212877, 0.1622822232177199, 0.15700178461867026, 0.15363890225014676, 0.15244323969993187, 0.15195514381523878] ***
*** center 1: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [31, 32, 0]]
** centroid: 2, normalized-entropy: 0.9998182469603427, [(1, 31), (2, 32)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [93, 10, 0]]
** centroid: 3, normalized-entropy: 0.4596942127956402, [(1, 93), (2, 10)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [88, 42, 0]]
** centroid: 4, normalized-entropy: 0.9076961653608385, [(1, 88), (2, 42)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 73, 15]]
** centroid: 5, normalized-entropy: 0.6587435307694671, [(2, 73), (3, 15)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 89, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3077253005171947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3077253005171947, 0.24192651158741288] ***
*** finished computation of 3 references, err: [Inf, 0.3077253005171947, 0.24192651158741288] ***
*** center 1: selecting labels [1] (freq >= 2) [from [170, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [108, 75, 1]]
** centroid: 2, normalized-entropy: 0.9764143081154868, [(1, 108), (2, 75)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [125, 166, 21]]
** centroid: 3, normalized-entropy: 0.8044905313809821, [(1, 125), (2, 166), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32905476678978246] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32905476678978246, 0.25934009813644954] ***
*** finished computation of 3 references, err: [Inf, 0.32905476678978246, 0.25934009813644954] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [49, 179, 21]]
** centroid: 1, normalized-entropy: 0.6970076315311727, [(1, 49), (2, 179), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [103, 37, 0]]
** centroid: 2, normalized-entropy: 0.8331449538868049, [(1, 103), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [255, 23, 0]]
** centroid: 3, normalized-entropy: 0.41173944902451426, [(1, 255), (2, 23)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.307702743321255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.307702743321255, 0.24033756684400198] ***
*** finished computation of 3 references, err: [Inf, 0.307702743321255, 0.24033756684400198] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [186, 78, 0]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(1, 186), (2, 78)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 150, 15]]
** centroid: 2, normalized-entropy: 0.37266841119151833, [(1, 4), (2, 150), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [216, 18, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 216), (2, 18)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4406628210206625] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4406628210206625, 0.2654874453928696] ***
*** starting iteration: 2; err: [Inf, 0.4406628210206625, 0.2654874453928696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4406628210206625, 0.2654874453928696, 0.2603618840759693] ***
*** starting iteration: 3; err: [Inf, 0.4406628210206625, 0.2654874453928696, 0.2603618840759693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4406628210206625, 0.2654874453928696, 0.2603618840759693, 0.2466052563814866] ***
*** finished computation of 3 references, err: [Inf, 0.4406628210206625, 0.2654874453928696, 0.2603618840759693, 0.2466052563814866] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [91, 115, 13]]
** centroid: 1, normalized-entropy: 0.7926436226054885, [(1, 91), (2, 115), (3, 13)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [90, 126, 9]]
** centroid: 2, normalized-entropy: 0.7463685701896878, [(1, 90), (2, 126), (3, 9)]
*** center 3: selecting labels [1] (freq >= 1) [from [222, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2766504495445153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2766504495445153, 0.2513854975841459] ***
*** starting iteration: 2; err: [Inf, 0.2766504495445153, 0.2513854975841459] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2766504495445153, 0.2513854975841459, 0.2387727133683983] ***
*** starting iteration: 3; err: [Inf, 0.2766504495445153, 0.2513854975841459, 0.2387727133683983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2766504495445153, 0.2513854975841459, 0.2387727133683983, 0.23583466567188457] ***
*** finished computation of 3 references, err: [Inf, 0.2766504495445153, 0.2513854975841459, 0.2387727133683983, 0.23583466567188457] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [115, 91, 1]]
** centroid: 1, normalized-entropy: 0.6495562997591775, [(1, 115), (2, 91), (3, 1)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [88, 148, 20]]
** centroid: 2, normalized-entropy: 0.8037758124223566, [(1, 88), (2, 148), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [204, 0, 0]]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3199403405418505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3199403405418505, 0.23165949065422548] ***
*** starting iteration: 2; err: [Inf, 0.3199403405418505, 0.23165949065422548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3199403405418505, 0.23165949065422548, 0.2308877746478935] ***
*** finished computation of 3 references, err: [Inf, 0.3199403405418505, 0.23165949065422548, 0.2308877746478935] ***
*** center 1: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [133, 87, 0]]
** centroid: 2, normalized-entropy: 0.9682294950678525, [(1, 133), (2, 87)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [78, 159, 15]]
** centroid: 3, normalized-entropy: 0.7477554578628248, [(1, 78), (2, 159), (3, 15)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3214455757348857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3214455757348857, 0.24070032134333308] ***
*** finished computation of 3 references, err: [Inf, 0.3214455757348857, 0.24070032134333308] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [292, 32, 0]]
** centroid: 1, normalized-entropy: 0.46506984488164627, [(1, 292), (2, 32)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 146, 22]]
** centroid: 2, normalized-entropy: 0.5600443203590992, [(2, 146), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [111, 63, 0]]
** centroid: 3, normalized-entropy: 0.9443871950133461, [(1, 111), (2, 63)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3085045849560932] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3085045849560932, 0.2351873001080939] ***
*** finished computation of 3 references, err: [Inf, 0.3085045849560932, 0.2351873001080939] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [286, 30, 0]]
** centroid: 1, normalized-entropy: 0.45273669695281504, [(1, 286), (2, 30)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 159, 21]]
** centroid: 2, normalized-entropy: 0.5197027865043053, [(2, 159), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 50, 0]]
** centroid: 3, normalized-entropy: 0.8717983558276394, [(1, 121), (2, 50)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35376547874165126] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35376547874165126, 0.23847554399453194] ***
*** finished computation of 3 references, err: [Inf, 0.35376547874165126, 0.23847554399453194] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [231, 46, 0]]
** centroid: 1, normalized-entropy: 0.6486234709382428, [(1, 231), (2, 46)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [175, 42, 0]]
** centroid: 2, normalized-entropy: 0.708835673332196, [(1, 175), (2, 42)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 158, 15]]
** centroid: 3, normalized-entropy: 0.4253755273701927, [(2, 158), (3, 15)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8830237423051793, 0.86396875917834, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9370148591705477
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.1993541009954873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993541009954873, 0.1620080973603413] ***
*** starting iteration: 2; err: [Inf, 0.1993541009954873, 0.1620080973603413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333] ***
*** starting iteration: 3; err: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365] ***
*** starting iteration: 4; err: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365, 0.14960790464134366] ***
*** starting iteration: 5; err: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365, 0.14960790464134366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365, 0.14960790464134366, 0.14819884964323662] ***
*** starting iteration: 6; err: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365, 0.14960790464134366, 0.14819884964323662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365, 0.14960790464134366, 0.14819884964323662, 0.14737032350941418] ***
*** finished computation of 7 references, err: [Inf, 0.1993541009954873, 0.1620080973603413, 0.15517957614159333, 0.15162432787369365, 0.14960790464134366, 0.14819884964323662, 0.14737032350941418] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [91, 17, 0]]
** centroid: 1, normalized-entropy: 0.6280710155029396, [(1, 91), (2, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 19]]
** centroid: 3, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 81, 3]]
** centroid: 4, normalized-entropy: 0.2222848306856879, [(2, 81), (3, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 59, 0]]
** centroid: 5, normalized-entropy: 0.9961812375892514, [(1, 51), (2, 59)]
*** center 6: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [52, 23, 0]]
** centroid: 7, normalized-entropy: 0.8892881527272397, [(1, 52), (2, 23)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20169188968161458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20169188968161458, 0.16230960445257944] ***
*** starting iteration: 2; err: [Inf, 0.20169188968161458, 0.16230960445257944] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942] ***
*** starting iteration: 3; err: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942, 0.14935132469933038] ***
*** starting iteration: 4; err: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942, 0.14935132469933038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942, 0.14935132469933038, 0.14791735893358354] ***
*** starting iteration: 5; err: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942, 0.14935132469933038, 0.14791735893358354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942, 0.14935132469933038, 0.14791735893358354, 0.14742449761230103] ***
*** finished computation of 7 references, err: [Inf, 0.20169188968161458, 0.16230960445257944, 0.15165791770434942, 0.14935132469933038, 0.14791735893358354, 0.14742449761230103] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 57, 0]]
** centroid: 1, normalized-entropy: 0.9968960371182977, [(1, 65), (2, 57)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 50, 0]]
** centroid: 3, normalized-entropy: 0.9418285354475157, [(1, 28), (2, 50)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 96, 21]]
** centroid: 4, normalized-entropy: 0.6789538995185759, [(2, 96), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 36, 0]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(1, 60), (2, 36)]
*** center 7: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17717159844828823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628] ***
*** starting iteration: 2; err: [Inf, 0.17717159844828823, 0.16419993015215628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228] ***
*** starting iteration: 3; err: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172] ***
*** starting iteration: 4; err: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903] ***
*** starting iteration: 5; err: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903, 0.15105410910042552] ***
*** starting iteration: 6; err: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903, 0.15105410910042552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903, 0.15105410910042552, 0.14995398390842699] ***
*** starting iteration: 7; err: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903, 0.15105410910042552, 0.14995398390842699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903, 0.15105410910042552, 0.14995398390842699, 0.1495300756552364] ***
*** finished computation of 7 references, err: [Inf, 0.17717159844828823, 0.16419993015215628, 0.16136008461817228, 0.15833071128338172, 0.15402109903175903, 0.15105410910042552, 0.14995398390842699, 0.1495300756552364] ***
*** center 1: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 84, 0]]
** centroid: 3, normalized-entropy: 0.15935006268563429, [(1, 2), (2, 84)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 108, 15]]
** centroid: 4, normalized-entropy: 0.5349436990971067, [(2, 108), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 4, 0]]
** centroid: 5, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 35, 0]]
** centroid: 6, normalized-entropy: 0.9494520153879484, [(1, 60), (2, 35)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [116, 15, 0]]
** centroid: 7, normalized-entropy: 0.5133531208586248, [(1, 116), (2, 15)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8830237423051793, 0.86396875917834, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.3360740443902767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360740443902767, 0.2406838462875412] ***
*** starting iteration: 2; err: [Inf, 0.3360740443902767, 0.2406838462875412] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360740443902767, 0.2406838462875412, 0.23805679615821923] ***
*** starting iteration: 3; err: [Inf, 0.3360740443902767, 0.2406838462875412, 0.23805679615821923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3360740443902767, 0.2406838462875412, 0.23805679615821923, 0.23728742012222698] ***
*** finished computation of 3 references, err: [Inf, 0.3360740443902767, 0.2406838462875412, 0.23805679615821923, 0.23728742012222698] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [266, 11, 0]]
** centroid: 1, normalized-entropy: 0.24096644168699802, [(1, 266), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [137, 67, 0]]
** centroid: 2, normalized-entropy: 0.9133156795878539, [(1, 137), (2, 67)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 163, 22]]
** centroid: 3, normalized-entropy: 0.5262453267342249, [(2, 163), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4005387288021172] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4005387288021172, 0.235261716057492] ***
*** starting iteration: 2; err: [Inf, 0.4005387288021172, 0.235261716057492] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4005387288021172, 0.235261716057492, 0.233952216170812] ***
*** starting iteration: 3; err: [Inf, 0.4005387288021172, 0.235261716057492, 0.233952216170812] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4005387288021172, 0.235261716057492, 0.233952216170812, 0.23385646137251132] ***
*** finished computation of 3 references, err: [Inf, 0.4005387288021172, 0.235261716057492, 0.233952216170812, 0.23385646137251132] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [68, 157, 21]]
** centroid: 1, normalized-entropy: 0.7756254691119584, [(1, 68), (2, 157), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [220, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [119, 82, 0]]
** centroid: 3, normalized-entropy: 0.9754169737046592, [(1, 119), (2, 82)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30151735419949244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30151735419949244, 0.24662809787845907] ***
*** starting iteration: 2; err: [Inf, 0.30151735419949244, 0.24662809787845907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30151735419949244, 0.24662809787845907, 0.23429120261769468] ***
*** starting iteration: 3; err: [Inf, 0.30151735419949244, 0.24662809787845907, 0.23429120261769468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30151735419949244, 0.24662809787845907, 0.23429120261769468, 0.23102420839624874] ***
*** finished computation of 3 references, err: [Inf, 0.30151735419949244, 0.24662809787845907, 0.23429120261769468, 0.23102420839624874] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [83, 162, 15]]
** centroid: 1, normalized-entropy: 0.7499044178879719, [(1, 83), (2, 162), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [137, 84, 0]]
** centroid: 2, normalized-entropy: 0.958105912880083, [(1, 137), (2, 84)]
*** center 3: selecting labels [1] (freq >= 1) [from [186, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8830237423051793, 0.8789538041035048, 0.86396875917834, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.36330891832116397] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36330891832116397, 0.29168970520152254] ***
*** finished computation of 3 references, err: [Inf, 0.36330891832116397, 0.29168970520152254] ***
*** center 1: selecting labels [1] (freq >= 2) [from [201, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [57, 173, 22]]
** centroid: 2, normalized-entropy: 0.73483695107671, [(1, 57), (2, 173), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 68, 0]]
** centroid: 3, normalized-entropy: 0.9035627129150938, [(1, 145), (2, 68)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.35313435550360217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.35313435550360217, 0.2978065088893967] ***
*** finished computation of 3 references, err: [Inf, 0.35313435550360217, 0.2978065088893967] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [216, 5, 0]]
** centroid: 1, normalized-entropy: 0.1559326908767437, [(1, 216), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [6, 213, 21]]
** centroid: 2, normalized-entropy: 0.37438360237351204, [(1, 6), (2, 213), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [185, 21, 0]]
** centroid: 3, normalized-entropy: 0.47512074041685076, [(1, 185), (2, 21)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39994617047226766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39994617047226766, 0.30319472742329784] ***
*** finished computation of 3 references, err: [Inf, 0.39994617047226766, 0.30319472742329784] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [185, 72, 0]]
** centroid: 1, normalized-entropy: 0.8556627970562741, [(1, 185), (2, 72)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [39, 174, 15]]
** centroid: 2, normalized-entropy: 0.6256518310432518, [(1, 39), (2, 174), (3, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [182, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2715897824022326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2715897824022326, 0.2362174064671906] ***
*** finished computation of 3 references, err: [Inf, 0.2715897824022326, 0.2362174064671906] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [27, 193, 22]]
** centroid: 1, normalized-entropy: 0.585386107714483, [(1, 27), (2, 193), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [249, 9, 0]]
** centroid: 2, normalized-entropy: 0.21832103023746746, [(1, 249), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [127, 39, 0]]
** centroid: 3, normalized-entropy: 0.7865235171560045, [(1, 127), (2, 39)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32521471412045355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32521471412045355, 0.24529504361583376] ***
*** finished computation of 3 references, err: [Inf, 0.32521471412045355, 0.24529504361583376] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 158, 21]]
** centroid: 1, normalized-entropy: 0.5216033521785791, [(2, 158), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [271, 50, 0]]
** centroid: 2, normalized-entropy: 0.6240768400954014, [(1, 271), (2, 50)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [136, 31, 0]]
** centroid: 3, normalized-entropy: 0.6922370347971702, [(1, 136), (2, 31)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.24856120768887013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24856120768887013, 0.2327952005033349] ***
*** finished computation of 3 references, err: [Inf, 0.24856120768887013, 0.2327952005033349] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [162, 117, 2]]
** centroid: 1, normalized-entropy: 0.6531255105161314, [(1, 162), (2, 117), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [166, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [78, 129, 13]]
** centroid: 3, normalized-entropy: 0.7716951476377142, [(1, 78), (2, 129), (3, 13)]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8860057662452873, 0.8830237423051793, 0.8789538041035048, 0.86396875917834, 0.8569677461893029, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.4052087682342666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4052087682342666, 0.2963384425165495] ***
*** finished computation of 3 references, err: [Inf, 0.4052087682342666, 0.2963384425165495] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [265, 16, 0]]
** centroid: 1, normalized-entropy: 0.31517412945794104, [(1, 265), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [136, 50, 0]]
** centroid: 2, normalized-entropy: 0.8397622740178036, [(1, 136), (2, 50)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 175, 22]]
** centroid: 3, normalized-entropy: 0.3665697407592918, [(1, 2), (2, 175), (3, 22)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37158253449231743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37158253449231743, 0.30250071179236226] ***
*** finished computation of 3 references, err: [Inf, 0.37158253449231743, 0.30250071179236226] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [246, 47, 0]]
** centroid: 1, normalized-entropy: 0.6352884436976679, [(1, 246), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [161, 36, 0]]
** centroid: 2, normalized-entropy: 0.686037010175277, [(1, 161), (2, 36)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 156, 21]]
** centroid: 3, normalized-entropy: 0.5254506799086205, [(2, 156), (3, 21)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3916174258500606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3916174258500606, 0.32264458613031766] ***
*** finished computation of 3 references, err: [Inf, 0.3916174258500606, 0.32264458613031766] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [254, 43, 0]]
** centroid: 1, normalized-entropy: 0.5966245252037276, [(1, 254), (2, 43)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [31, 161, 15]]
** centroid: 2, normalized-entropy: 0.609870532311532, [(1, 31), (2, 161), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [121, 42, 0]]
** centroid: 3, normalized-entropy: 0.8232080102621581, [(1, 121), (2, 42)]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 18)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8860057662452873, 0.8830237423051793, 0.8789538041035048, 0.86396875917834, 0.8600127073180964, 0.8569677461893029, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 18
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8860057662452873, 0.8830237423051793, 0.8789538041035048, 0.86396875917834, 0.8600127073180964, 0.8569677461893029, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 18
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.8860057662452873, 0.8830237423051793, 0.8789538041035048, 0.86396875917834, 0.8600127073180964, 0.8569677461893029, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.2744089401167658] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2744089401167658, 0.23143487050709827] ***
*** starting iteration: 2; err: [Inf, 0.2744089401167658, 0.23143487050709827] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2744089401167658, 0.23143487050709827, 0.22679867082157987] ***
*** starting iteration: 3; err: [Inf, 0.2744089401167658, 0.23143487050709827, 0.22679867082157987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2744089401167658, 0.23143487050709827, 0.22679867082157987, 0.2258647735630562] ***
*** finished computation of 3 references, err: [Inf, 0.2744089401167658, 0.23143487050709827, 0.22679867082157987, 0.2258647735630562] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [54, 164, 22]]
** centroid: 1, normalized-entropy: 0.741720475335788, [(1, 54), (2, 164), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [233, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [116, 77, 0]]
** centroid: 3, normalized-entropy: 0.9703411871732319, [(1, 116), (2, 77)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3856676753437233] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3856676753437233, 0.2529119644334995] ***
*** starting iteration: 2; err: [Inf, 0.3856676753437233, 0.2529119644334995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3856676753437233, 0.2529119644334995, 0.23655609872521668] ***
*** starting iteration: 3; err: [Inf, 0.3856676753437233, 0.2529119644334995, 0.23655609872521668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3856676753437233, 0.2529119644334995, 0.23655609872521668, 0.23391925232593846] ***
*** finished computation of 3 references, err: [Inf, 0.3856676753437233, 0.2529119644334995, 0.23655609872521668, 0.23391925232593846] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [57, 166, 21]]
** centroid: 1, normalized-entropy: 0.7398684846213371, [(1, 57), (2, 166), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [227, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [123, 73, 0]]
** centroid: 3, normalized-entropy: 0.9525339412837401, [(1, 123), (2, 73)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.29228235752778364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29228235752778364, 0.23605600486172998] ***
*** starting iteration: 2; err: [Inf, 0.29228235752778364, 0.23605600486172998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29228235752778364, 0.23605600486172998, 0.23203559497837675] ***
*** starting iteration: 3; err: [Inf, 0.29228235752778364, 0.23605600486172998, 0.23203559497837675] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.29228235752778364, 0.23605600486172998, 0.23203559497837675, 0.23147886295312795] ***
*** finished computation of 3 references, err: [Inf, 0.29228235752778364, 0.23605600486172998, 0.23203559497837675, 0.23147886295312795] ***
*** center 1: selecting labels [1] (freq >= 2) [from [201, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [80, 153, 13]]
** centroid: 2, normalized-entropy: 0.7427999196023093, [(1, 80), (2, 153), (3, 13)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [125, 93, 2]]
** centroid: 3, normalized-entropy: 0.6625747005901257, [(1, 125), (2, 93), (3, 2)]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 19)
[0.9400058741376106, 0.9370148591705477, 0.9289828750906596, 0.9270018521515527, 0.9269718820617024, 0.9049888211564858, 0.903013792235349, 0.8860057662452873, 0.8830237423051793, 0.8789538041035048, 0.86396875917834, 0.8600127073180964, 0.8569677461893029, 0.8460196723669777, 0.8419347491203778, 0.8340556124987263, 0.8110355864846883, 0.7930085774397151, 0.7350614087141033]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.3, 1) => 0.9400058741376106
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.22467356757586823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22467356757586823, 0.1609877484026365] ***
*** starting iteration: 2; err: [Inf, 0.22467356757586823, 0.1609877484026365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22467356757586823, 0.1609877484026365, 0.15101772448862902] ***
*** starting iteration: 3; err: [Inf, 0.22467356757586823, 0.1609877484026365, 0.15101772448862902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22467356757586823, 0.1609877484026365, 0.15101772448862902, 0.14843371719215065] ***
*** starting iteration: 4; err: [Inf, 0.22467356757586823, 0.1609877484026365, 0.15101772448862902, 0.14843371719215065] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22467356757586823, 0.1609877484026365, 0.15101772448862902, 0.14843371719215065, 0.14765126335667447] ***
*** finished computation of 7 references, err: [Inf, 0.22467356757586823, 0.1609877484026365, 0.15101772448862902, 0.14843371719215065, 0.14765126335667447] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [8, 127, 0]]
** centroid: 1, normalized-entropy: 0.32449741023553424, [(1, 8), (2, 127)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 116, 29]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 116), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [101, 74, 0]]
** centroid: 3, normalized-entropy: 0.9827602043210514, [(1, 101), (2, 74)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [86, 8, 0]]
** centroid: 4, normalized-entropy: 0.4199210973757179, [(1, 86), (2, 8)]
*** center 5: selecting labels [1] (freq >= 1) [from [164, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [100, 38, 0]]
** centroid: 6, normalized-entropy: 0.849054424254048, [(1, 100), (2, 38)]
*** center 7: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2007336404621601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2007336404621601, 0.16488362929411232] ***
*** starting iteration: 2; err: [Inf, 0.2007336404621601, 0.16488362929411232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225] ***
*** starting iteration: 3; err: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225, 0.14963140035420655] ***
*** starting iteration: 4; err: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225, 0.14963140035420655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225, 0.14963140035420655, 0.14843816478922964] ***
*** starting iteration: 5; err: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225, 0.14963140035420655, 0.14843816478922964] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225, 0.14963140035420655, 0.14843816478922964, 0.14778763892687857] ***
*** finished computation of 7 references, err: [Inf, 0.2007336404621601, 0.16488362929411232, 0.15539068360999225, 0.14963140035420655, 0.14843816478922964, 0.14778763892687857] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [71, 1, 0]]
** centroid: 1, normalized-entropy: 0.1055910363751953, [(1, 71), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [3, 77, 0]]
** centroid: 2, normalized-entropy: 0.2307099556914763, [(1, 3), (2, 77)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [53, 37, 0]]
** centroid: 3, normalized-entropy: 0.9770802227727781, [(1, 53), (2, 37)]
*** center 4: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [52, 10, 0]]
** centroid: 6, normalized-entropy: 0.6373874992221911, [(1, 52), (2, 10)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 66, 14]]
** centroid: 7, normalized-entropy: 0.6690158350565576, [(2, 66), (3, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23310167793929576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104] ***
*** starting iteration: 2; err: [Inf, 0.23310167793929576, 0.17609886044450104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403] ***
*** starting iteration: 3; err: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144] ***
*** starting iteration: 4; err: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696] ***
*** starting iteration: 5; err: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696, 0.1505286263981834] ***
*** starting iteration: 6; err: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696, 0.1505286263981834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696, 0.1505286263981834, 0.14938021284528077] ***
*** starting iteration: 7; err: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696, 0.1505286263981834, 0.14938021284528077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696, 0.1505286263981834, 0.14938021284528077, 0.14843215794675052] ***
*** finished computation of 7 references, err: [Inf, 0.23310167793929576, 0.17609886044450104, 0.1606909249825403, 0.15547947457712144, 0.15218976161442696, 0.1505286263981834, 0.14938021284528077, 0.14843215794675052] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [62, 2, 0]]
** centroid: 1, normalized-entropy: 0.2006223243127146, [(1, 62), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 43, 0]]
** centroid: 3, normalized-entropy: 0.9901226308935799, [(1, 34), (2, 43)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [19, 69, 0]]
** centroid: 4, normalized-entropy: 0.7526269564427315, [(1, 19), (2, 69)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 70, 15]]
** centroid: 5, normalized-entropy: 0.6722948170756378, [(2, 70), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 1, 0]]
** centroid: 6, normalized-entropy: 0.10802319526362848, [(1, 69), (2, 1)]
*** center 7: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2175439518224448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175439518224448, 0.15899721890687943] ***
*** starting iteration: 2; err: [Inf, 0.2175439518224448, 0.15899721890687943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175439518224448, 0.15899721890687943, 0.14974065267667175] ***
*** starting iteration: 3; err: [Inf, 0.2175439518224448, 0.15899721890687943, 0.14974065267667175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175439518224448, 0.15899721890687943, 0.14974065267667175, 0.14744720207899809] ***
*** starting iteration: 4; err: [Inf, 0.2175439518224448, 0.15899721890687943, 0.14974065267667175, 0.14744720207899809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2175439518224448, 0.15899721890687943, 0.14974065267667175, 0.14744720207899809, 0.14680920224450528] ***
*** finished computation of 7 references, err: [Inf, 0.2175439518224448, 0.15899721890687943, 0.14974065267667175, 0.14744720207899809, 0.14680920224450528] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 79, 14]]
** centroid: 1, normalized-entropy: 0.6111841012714984, [(2, 79), (3, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 30, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 50), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 2, 0]]
** centroid: 3, normalized-entropy: 0.22853814395352806, [(1, 52), (2, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [3, 61, 0]]
** centroid: 5, normalized-entropy: 0.2729708579140699, [(1, 3), (2, 61)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [87, 17, 0]]
** centroid: 6, normalized-entropy: 0.6425267139094084, [(1, 87), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 2, 0]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(1, 34), (2, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2802459122389555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234] ***
*** starting iteration: 2; err: [Inf, 0.2802459122389555, 0.190283996457234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918] ***
*** starting iteration: 3; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717] ***
*** starting iteration: 4; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423] ***
*** starting iteration: 5; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447] ***
*** starting iteration: 6; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125] ***
*** starting iteration: 7; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125, 0.1459806129783392] ***
*** starting iteration: 8; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125, 0.1459806129783392] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125, 0.1459806129783392, 0.14473579269461334] ***
*** starting iteration: 9; err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125, 0.1459806129783392, 0.14473579269461334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125, 0.1459806129783392, 0.14473579269461334, 0.14454839346650988] ***
*** finished computation of 7 references, err: [Inf, 0.2802459122389555, 0.190283996457234, 0.17509569430816918, 0.16316627642791717, 0.15565432191663423, 0.15199604592565447, 0.14856367041543125, 0.1459806129783392, 0.14473579269461334, 0.14454839346650988] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 43, 15]]
** centroid: 2, normalized-entropy: 0.8246578332945033, [(2, 43), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [9, 50, 0]]
** centroid: 3, normalized-entropy: 0.6161661934005354, [(1, 9), (2, 50)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [12, 59, 0]]
** centroid: 4, normalized-entropy: 0.6554444445609846, [(1, 12), (2, 59)]
*** center 5: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 20, 0]]
** centroid: 6, normalized-entropy: 0.8794587736429037, [(1, 47), (2, 20)]
*** center 7: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24599521382339298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24599521382339298, 0.19489564635790885] ***
*** starting iteration: 2; err: [Inf, 0.24599521382339298, 0.19489564635790885] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222] ***
*** starting iteration: 3; err: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222, 0.152455320417881] ***
*** starting iteration: 4; err: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222, 0.152455320417881] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222, 0.152455320417881, 0.15025543753802775] ***
*** starting iteration: 5; err: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222, 0.152455320417881, 0.15025543753802775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222, 0.152455320417881, 0.15025543753802775, 0.1497548708487302] ***
*** finished computation of 7 references, err: [Inf, 0.24599521382339298, 0.19489564635790885, 0.1622093603350222, 0.152455320417881, 0.15025543753802775, 0.1497548708487302] ***
*** center 1: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 52, 13]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 52), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [22, 52, 0]]
** centroid: 3, normalized-entropy: 0.8779620013943914, [(1, 22), (2, 52)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [63, 27, 0]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(1, 63), (2, 27)]
*** center 5: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 50, 0]]
** centroid: 6, normalized-entropy: 0.23519338181924157, [(1, 2), (2, 50)]
*** center 7: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2165808947570622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2165808947570622, 0.17605544074904173] ***
*** starting iteration: 2; err: [Inf, 0.2165808947570622, 0.17605544074904173] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373] ***
*** starting iteration: 3; err: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062] ***
*** starting iteration: 4; err: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062, 0.15039459386840462] ***
*** starting iteration: 5; err: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062, 0.15039459386840462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062, 0.15039459386840462, 0.14937810196075588] ***
*** starting iteration: 6; err: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062, 0.15039459386840462, 0.14937810196075588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062, 0.15039459386840462, 0.14937810196075588, 0.1490281325476244] ***
*** finished computation of 7 references, err: [Inf, 0.2165808947570622, 0.17605544074904173, 0.16150512417778373, 0.15390407723654062, 0.15039459386840462, 0.14937810196075588, 0.1490281325476244] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 34, 0]]
** centroid: 1, normalized-entropy: 0.9977724720899819, [(1, 38), (2, 34)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 74, 15]]
** centroid: 3, normalized-entropy: 0.6543524423071835, [(2, 74), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 14, 0]]
** centroid: 6, normalized-entropy: 0.699772221773307, [(1, 60), (2, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [7, 61, 0]]
** centroid: 7, normalized-entropy: 0.4782501641071144, [(1, 7), (2, 61)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2727583865467459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727583865467459, 0.17192719568125903] ***
*** starting iteration: 2; err: [Inf, 0.2727583865467459, 0.17192719568125903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772] ***
*** starting iteration: 3; err: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495] ***
*** starting iteration: 4; err: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495, 0.14816755287349223] ***
*** starting iteration: 5; err: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495, 0.14816755287349223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495, 0.14816755287349223, 0.14694831651030107] ***
*** starting iteration: 6; err: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495, 0.14816755287349223, 0.14694831651030107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495, 0.14816755287349223, 0.14694831651030107, 0.1461146766669117] ***
*** finished computation of 7 references, err: [Inf, 0.2727583865467459, 0.17192719568125903, 0.15415226678922772, 0.1500958895124495, 0.14816755287349223, 0.14694831651030107, 0.1461146766669117] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [43, 27, 0]]
** centroid: 1, normalized-entropy: 0.9619780596506257, [(1, 43), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 15, 0]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(1, 51), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 70, 8]]
** centroid: 3, normalized-entropy: 0.4770713062193298, [(2, 70), (3, 8)]
*** center 4: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 28, 0]]
** centroid: 5, normalized-entropy: 0.9861260846302384, [(1, 37), (2, 28)]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 45, 2]]
** centroid: 7, normalized-entropy: 0.2538784402981617, [(2, 45), (3, 2)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26917569841817024] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385] ***
*** starting iteration: 2; err: [Inf, 0.26917569841817024, 0.17756172624230385] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848] ***
*** starting iteration: 3; err: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651] ***
*** starting iteration: 4; err: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887] ***
*** starting iteration: 5; err: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887, 0.1521204495485872] ***
*** starting iteration: 6; err: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887, 0.1521204495485872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887, 0.1521204495485872, 0.1509661409202963] ***
*** starting iteration: 7; err: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887, 0.1521204495485872, 0.1509661409202963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887, 0.1521204495485872, 0.1509661409202963, 0.1501221213415265] ***
*** finished computation of 7 references, err: [Inf, 0.26917569841817024, 0.17756172624230385, 0.16515836291154848, 0.1596337972767651, 0.1552958113513887, 0.1521204495485872, 0.1509661409202963, 0.1501221213415265] ***
*** center 1: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 37, 0]]
** centroid: 2, normalized-entropy: 0.9994433330902989, [(1, 35), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [7, 58, 0]]
** centroid: 5, normalized-entropy: 0.49291577961610966, [(1, 7), (2, 58)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 44, 13]]
** centroid: 6, normalized-entropy: 0.7746319868686841, [(2, 44), (3, 13)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20725639920309186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20725639920309186, 0.1648030807422474] ***
*** starting iteration: 2; err: [Inf, 0.20725639920309186, 0.1648030807422474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203] ***
*** starting iteration: 3; err: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203, 0.149937635242939] ***
*** starting iteration: 4; err: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203, 0.149937635242939] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203, 0.149937635242939, 0.14841516707837582] ***
*** starting iteration: 5; err: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203, 0.149937635242939, 0.14841516707837582] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203, 0.149937635242939, 0.14841516707837582, 0.14748213328793644] ***
*** finished computation of 7 references, err: [Inf, 0.20725639920309186, 0.1648030807422474, 0.1535995950382203, 0.149937635242939, 0.14841516707837582, 0.14748213328793644] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [27, 51, 0]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(1, 27), (2, 51)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 29, 0]]
** centroid: 2, normalized-entropy: 0.9556222693531471, [(1, 48), (2, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 88, 9]]
** centroid: 4, normalized-entropy: 0.44569317772256106, [(2, 88), (3, 9)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 23, 0]]
** centroid: 5, normalized-entropy: 0.8332661971210122, [(1, 64), (2, 23)]
*** center 6: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21983338191919027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21983338191919027, 0.16552568238042295] ***
*** starting iteration: 2; err: [Inf, 0.21983338191919027, 0.16552568238042295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581] ***
*** starting iteration: 3; err: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581, 0.15394515920244156] ***
*** starting iteration: 4; err: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581, 0.15394515920244156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581, 0.15394515920244156, 0.1526478098127991] ***
*** starting iteration: 5; err: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581, 0.15394515920244156, 0.1526478098127991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581, 0.15394515920244156, 0.1526478098127991, 0.1516567461118102] ***
*** finished computation of 7 references, err: [Inf, 0.21983338191919027, 0.16552568238042295, 0.157101349234581, 0.15394515920244156, 0.1526478098127991, 0.1516567461118102] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 47, 0]]
** centroid: 1, normalized-entropy: 0.993320421638792, [(1, 57), (2, 47)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 79, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [36, 12, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 36), (2, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 48, 16]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 48), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20298755005933344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302] ***
*** starting iteration: 2; err: [Inf, 0.20298755005933344, 0.15602671653032302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226] ***
*** starting iteration: 3; err: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244] ***
*** starting iteration: 4; err: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562] ***
*** starting iteration: 5; err: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562, 0.14727419634349645] ***
*** starting iteration: 6; err: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562, 0.14727419634349645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562, 0.14727419634349645, 0.1459533727141097] ***
*** starting iteration: 7; err: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562, 0.14727419634349645, 0.1459533727141097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562, 0.14727419634349645, 0.1459533727141097, 0.14521812861273065] ***
*** finished computation of 7 references, err: [Inf, 0.20298755005933344, 0.15602671653032302, 0.15347780496720226, 0.15039922548644244, 0.14830294233560562, 0.14727419634349645, 0.1459533727141097, 0.14521812861273065] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 3, 0]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(1, 72), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 26, 0]]
** centroid: 3, normalized-entropy: 0.9596868937742168, [(1, 42), (2, 26)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 57, 16]]
** centroid: 4, normalized-entropy: 0.7586638628883696, [(2, 57), (3, 16)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [39, 26, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 39), (2, 26)]
*** center 7: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17332011033594608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17332011033594608, 0.15602470285445452] ***
*** starting iteration: 2; err: [Inf, 0.17332011033594608, 0.15602470285445452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17332011033594608, 0.15602470285445452, 0.15223514352645726] ***
*** starting iteration: 3; err: [Inf, 0.17332011033594608, 0.15602470285445452, 0.15223514352645726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17332011033594608, 0.15602470285445452, 0.15223514352645726, 0.150400469600223] ***
*** starting iteration: 4; err: [Inf, 0.17332011033594608, 0.15602470285445452, 0.15223514352645726, 0.150400469600223] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17332011033594608, 0.15602470285445452, 0.15223514352645726, 0.150400469600223, 0.14956328615266828] ***
*** finished computation of 7 references, err: [Inf, 0.17332011033594608, 0.15602470285445452, 0.15223514352645726, 0.150400469600223, 0.14956328615266828] ***
*** center 1: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [16, 58, 0]]
** centroid: 2, normalized-entropy: 0.7531979910695015, [(1, 16), (2, 58)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [42, 32, 0]]
** centroid: 4, normalized-entropy: 0.9867867202680318, [(1, 42), (2, 32)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 1, 0]]
** centroid: 5, normalized-entropy: 0.10928571467638523, [(1, 68), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [22, 36, 0]]
** centroid: 6, normalized-entropy: 0.9575534837147484, [(1, 22), (2, 36)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 53, 14]]
** centroid: 7, normalized-entropy: 0.7394809367166378, [(2, 53), (3, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1805676563233137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805676563233137, 0.15711829669494182] ***
*** starting iteration: 2; err: [Inf, 0.1805676563233137, 0.15711829669494182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805676563233137, 0.15711829669494182, 0.15509550052601845] ***
*** starting iteration: 3; err: [Inf, 0.1805676563233137, 0.15711829669494182, 0.15509550052601845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805676563233137, 0.15711829669494182, 0.15509550052601845, 0.15464122900366783] ***
*** finished computation of 7 references, err: [Inf, 0.1805676563233137, 0.15711829669494182, 0.15509550052601845, 0.15464122900366783] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 7, 0]]
** centroid: 1, normalized-entropy: 0.5197027865043053, [(1, 53), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 52, 0]]
** centroid: 3, normalized-entropy: 0.6962122601251459, [(1, 12), (2, 52)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 41, 14]]
** centroid: 4, normalized-entropy: 0.8184033299219708, [(2, 41), (3, 14)]
*** center 5: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 65, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22018471229076386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22018471229076386, 0.14943703001365066] ***
*** starting iteration: 2; err: [Inf, 0.22018471229076386, 0.14943703001365066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22018471229076386, 0.14943703001365066, 0.14462747118808328] ***
*** starting iteration: 3; err: [Inf, 0.22018471229076386, 0.14943703001365066, 0.14462747118808328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22018471229076386, 0.14943703001365066, 0.14462747118808328, 0.14323381447186695] ***
*** starting iteration: 4; err: [Inf, 0.22018471229076386, 0.14943703001365066, 0.14462747118808328, 0.14323381447186695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22018471229076386, 0.14943703001365066, 0.14462747118808328, 0.14323381447186695, 0.142523719901219] ***
*** finished computation of 7 references, err: [Inf, 0.22018471229076386, 0.14943703001365066, 0.14462747118808328, 0.14323381447186695, 0.142523719901219] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 67, 1]]
** centroid: 1, normalized-entropy: 0.11058084476988722, [(2, 67), (3, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 17, 0]]
** centroid: 2, normalized-entropy: 0.7668379316856329, [(1, 59), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 3, 0]]
** centroid: 4, normalized-entropy: 0.2899860470332091, [(1, 56), (2, 3)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 72, 15]]
** centroid: 5, normalized-entropy: 0.6631968402398286, [(2, 72), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [62, 22, 0]]
** centroid: 6, normalized-entropy: 0.8296071030882032, [(1, 62), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17293370937369765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17293370937369765, 0.15159189520590008] ***
*** starting iteration: 2; err: [Inf, 0.17293370937369765, 0.15159189520590008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17293370937369765, 0.15159189520590008, 0.1496792883835733] ***
*** starting iteration: 3; err: [Inf, 0.17293370937369765, 0.15159189520590008, 0.1496792883835733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17293370937369765, 0.15159189520590008, 0.1496792883835733, 0.1488988040406257] ***
*** finished computation of 7 references, err: [Inf, 0.17293370937369765, 0.15159189520590008, 0.1496792883835733, 0.1488988040406257] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [47, 36, 0]]
** centroid: 1, normalized-entropy: 0.9872927315785851, [(1, 47), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 65, 18]]
** centroid: 3, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 25, 0]]
** centroid: 5, normalized-entropy: 0.9798687566511527, [(1, 35), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [9, 59, 0]]
** centroid: 6, normalized-entropy: 0.5638560041131417, [(1, 9), (2, 59)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [43, 3, 0]]
** centroid: 7, normalized-entropy: 0.3478169135710632, [(1, 43), (2, 3)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4216126122837886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877] ***
*** starting iteration: 2; err: [Inf, 0.4216126122837886, 0.2286540265902877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628] ***
*** starting iteration: 3; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532] ***
*** starting iteration: 4; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694] ***
*** starting iteration: 5; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157] ***
*** starting iteration: 6; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057] ***
*** starting iteration: 7; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812] ***
*** starting iteration: 8; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812, 0.15084187322948128] ***
*** starting iteration: 9; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812, 0.15084187322948128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812, 0.15084187322948128, 0.1496470233723521] ***
*** starting iteration: 10; err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812, 0.15084187322948128, 0.1496470233723521] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812, 0.15084187322948128, 0.1496470233723521, 0.14904230634402485] ***
*** finished computation of 7 references, err: [Inf, 0.4216126122837886, 0.2286540265902877, 0.1943157959021628, 0.17495334072038532, 0.1632235955260694, 0.15715492219664157, 0.15405261648260057, 0.15226699772942812, 0.15084187322948128, 0.1496470233723521, 0.14904230634402485] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 94, 16]]
** centroid: 1, normalized-entropy: 0.5983474220910422, [(2, 94), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 37, 0]]
** centroid: 2, normalized-entropy: 0.9987117514654895, [(1, 34), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 42, 0]]
** centroid: 3, normalized-entropy: 0.999142103991909, [(1, 45), (2, 42)]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [57, 20, 0]]
** centroid: 6, normalized-entropy: 0.8263541679009075, [(1, 57), (2, 20)]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20113720508292318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176] ***
*** starting iteration: 2; err: [Inf, 0.20113720508292318, 0.16627929170057176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869] ***
*** starting iteration: 3; err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237] ***
*** starting iteration: 4; err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374] ***
*** starting iteration: 5; err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087] ***
*** starting iteration: 6; err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087, 0.15201650783373044] ***
*** starting iteration: 7; err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087, 0.15201650783373044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087, 0.15201650783373044, 0.14952995512867345] ***
*** starting iteration: 8; err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087, 0.15201650783373044, 0.14952995512867345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087, 0.15201650783373044, 0.14952995512867345, 0.1486374972560443] ***
*** finished computation of 7 references, err: [Inf, 0.20113720508292318, 0.16627929170057176, 0.160088353484869, 0.15764008792117237, 0.15643402630556374, 0.15537792684324087, 0.15201650783373044, 0.14952995512867345, 0.1486374972560443] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 9, 0]]
** centroid: 1, normalized-entropy: 0.524805134842907, [(1, 67), (2, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 76, 16]]
** centroid: 3, normalized-entropy: 0.6665783579949205, [(2, 76), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 21, 0]]
** centroid: 4, normalized-entropy: 0.7455178428108284, [(1, 78), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 56, 0]]
** centroid: 5, normalized-entropy: 0.1274185117923586, [(1, 1), (2, 56)]
*** center 6: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 6, 0]]
** centroid: 7, normalized-entropy: 0.4743454375622396, [(1, 53), (2, 6)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24873224682547151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347] ***
*** starting iteration: 2; err: [Inf, 0.24873224682547151, 0.1935495298728347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974] ***
*** starting iteration: 3; err: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252] ***
*** starting iteration: 4; err: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563] ***
*** starting iteration: 5; err: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563, 0.14876244789548218] ***
*** starting iteration: 6; err: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563, 0.14876244789548218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563, 0.14876244789548218, 0.14690497602615504] ***
*** starting iteration: 7; err: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563, 0.14876244789548218, 0.14690497602615504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563, 0.14876244789548218, 0.14690497602615504, 0.14594598478078843] ***
*** finished computation of 7 references, err: [Inf, 0.24873224682547151, 0.1935495298728347, 0.1722035481221974, 0.16093049966078252, 0.15344427219964563, 0.14876244789548218, 0.14690497602615504, 0.14594598478078843] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 41, 0]]
** centroid: 1, normalized-entropy: 0.9864497419502243, [(1, 54), (2, 41)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 22, 0]]
** centroid: 2, normalized-entropy: 0.9283620723948678, [(1, 42), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 1, 0]]
** centroid: 3, normalized-entropy: 0.12923377484588472, [(1, 55), (2, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 62, 15]]
** centroid: 4, normalized-entropy: 0.7114160189012126, [(2, 62), (3, 15)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.210915282048285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292] ***
*** starting iteration: 2; err: [Inf, 0.210915282048285, 0.17145694951154292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502] ***
*** starting iteration: 3; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428] ***
*** starting iteration: 4; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557] ***
*** starting iteration: 5; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194] ***
*** starting iteration: 6; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794] ***
*** starting iteration: 7; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794, 0.14587970835715533] ***
*** starting iteration: 8; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794, 0.14587970835715533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794, 0.14587970835715533, 0.14468643687292934] ***
*** starting iteration: 9; err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794, 0.14587970835715533, 0.14468643687292934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794, 0.14587970835715533, 0.14468643687292934, 0.14431766882538796] ***
*** finished computation of 7 references, err: [Inf, 0.210915282048285, 0.17145694951154292, 0.1587614781409502, 0.1538155471738428, 0.15062452479917557, 0.14854832876846194, 0.1470084660574794, 0.14587970835715533, 0.14468643687292934, 0.14431766882538796] ***
*** center 1: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 2, 0]]
** centroid: 2, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 11]]
** centroid: 3, normalized-entropy: 0.6559420757694151, [(2, 54), (3, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 63, 0]]
** centroid: 4, normalized-entropy: 0.5079353563991225, [(1, 8), (2, 63)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 48, 0]]
** centroid: 5, normalized-entropy: 0.9822309298084991, [(1, 35), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [54, 12, 0]]
** centroid: 6, normalized-entropy: 0.6840384356390419, [(1, 54), (2, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19326623629033565] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19326623629033565, 0.17109269965067506] ***
*** starting iteration: 2; err: [Inf, 0.19326623629033565, 0.17109269965067506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093] ***
*** starting iteration: 3; err: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346] ***
*** starting iteration: 4; err: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346, 0.1499319853913039] ***
*** starting iteration: 5; err: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346, 0.1499319853913039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346, 0.1499319853913039, 0.14891425166279076] ***
*** starting iteration: 6; err: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346, 0.1499319853913039, 0.14891425166279076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346, 0.1499319853913039, 0.14891425166279076, 0.14841524055041372] ***
*** finished computation of 7 references, err: [Inf, 0.19326623629033565, 0.17109269965067506, 0.15795824890118093, 0.1517806978393346, 0.1499319853913039, 0.14891425166279076, 0.14841524055041372] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 11, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 77), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 50, 2]]
** centroid: 2, normalized-entropy: 0.23519338181924157, [(2, 50), (3, 2)]
*** center 3: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 71, 13]]
** centroid: 4, normalized-entropy: 0.6216297820565386, [(2, 71), (3, 13)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 31, 0]]
** centroid: 5, normalized-entropy: 0.956652272148091, [(1, 51), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 19, 0]]
** centroid: 6, normalized-entropy: 0.8890349038123858, [(1, 43), (2, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24913899043947457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145] ***
*** starting iteration: 2; err: [Inf, 0.24913899043947457, 0.17663037483394145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946] ***
*** starting iteration: 3; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057] ***
*** starting iteration: 4; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776] ***
*** starting iteration: 5; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092] ***
*** starting iteration: 6; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023] ***
*** starting iteration: 7; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023, 0.14427019840851427] ***
*** starting iteration: 8; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023, 0.14427019840851427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023, 0.14427019840851427, 0.14324192941002548] ***
*** starting iteration: 9; err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023, 0.14427019840851427, 0.14324192941002548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023, 0.14427019840851427, 0.14324192941002548, 0.14226459712535142] ***
*** finished computation of 7 references, err: [Inf, 0.24913899043947457, 0.17663037483394145, 0.16158298194780946, 0.15482638255367057, 0.14933531492063776, 0.1468778532911092, 0.14535929932259023, 0.14427019840851427, 0.14324192941002548, 0.14226459712535142] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 75, 16]]
** centroid: 1, normalized-entropy: 0.6708561590207726, [(2, 75), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 1, 0]]
** centroid: 2, normalized-entropy: 0.10802319526362848, [(1, 69), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 46, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 23), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [40, 34, 0]]
** centroid: 6, normalized-entropy: 0.9952525494396791, [(1, 40), (2, 34)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [40, 24, 0]]
** centroid: 7, normalized-entropy: 0.954434002924965, [(1, 40), (2, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24737588727567345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082] ***
*** starting iteration: 2; err: [Inf, 0.24737588727567345, 0.19747340034414082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487] ***
*** starting iteration: 3; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645] ***
*** starting iteration: 4; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966] ***
*** starting iteration: 5; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855] ***
*** starting iteration: 6; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287] ***
*** starting iteration: 7; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287, 0.15474104792624713] ***
*** starting iteration: 8; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287, 0.15474104792624713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287, 0.15474104792624713, 0.15373824828118085] ***
*** starting iteration: 9; err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287, 0.15474104792624713, 0.15373824828118085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287, 0.15474104792624713, 0.15373824828118085, 0.15313245347887278] ***
*** finished computation of 7 references, err: [Inf, 0.24737588727567345, 0.19747340034414082, 0.17463359641097487, 0.16157715047709645, 0.15895797887071966, 0.1574169782064855, 0.15605861124722287, 0.15474104792624713, 0.15373824828118085, 0.15313245347887278] ***
*** center 1: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 3, 0]]
** centroid: 2, normalized-entropy: 0.3138129641688652, [(1, 50), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 67, 9]]
** centroid: 3, normalized-entropy: 0.524805134842907, [(2, 67), (3, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [23, 38, 0]]
** centroid: 4, normalized-entropy: 0.9559312637896479, [(1, 23), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [88, 32, 0]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(1, 88), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 43, 1]]
** centroid: 7, normalized-entropy: 0.1564910629057016, [(2, 43), (3, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2064133733632043] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594] ***
*** starting iteration: 2; err: [Inf, 0.2064133733632043, 0.16954799151420594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508] ***
*** starting iteration: 3; err: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107] ***
*** starting iteration: 4; err: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938] ***
*** starting iteration: 5; err: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938, 0.1491483783442527] ***
*** starting iteration: 6; err: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938, 0.1491483783442527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938, 0.1491483783442527, 0.14814475882519038] ***
*** starting iteration: 7; err: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938, 0.1491483783442527, 0.14814475882519038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938, 0.1491483783442527, 0.14814475882519038, 0.14777684172801672] ***
*** finished computation of 7 references, err: [Inf, 0.2064133733632043, 0.16954799151420594, 0.15983455462567508, 0.1545888643572107, 0.1510487285926938, 0.1491483783442527, 0.14814475882519038, 0.14777684172801672] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 6, 0]]
** centroid: 1, normalized-entropy: 0.5746356978376794, [(1, 38), (2, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [72, 29, 0]]
** centroid: 4, normalized-entropy: 0.8649832752018335, [(1, 72), (2, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 24, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 48), (2, 24)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 69, 16]]
** centroid: 6, normalized-entropy: 0.6977652006354232, [(2, 69), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 58, 0]]
** centroid: 7, normalized-entropy: 0.12394986771100755, [(1, 1), (2, 58)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27417612036317585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297] ***
*** starting iteration: 2; err: [Inf, 0.27417612036317585, 0.1711116953585297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913] ***
*** starting iteration: 3; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516] ***
*** starting iteration: 4; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404] ***
*** starting iteration: 5; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112] ***
*** starting iteration: 6; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415] ***
*** starting iteration: 7; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415, 0.14956104413466528] ***
*** starting iteration: 8; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415, 0.14956104413466528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415, 0.14956104413466528, 0.14811925904918463] ***
*** starting iteration: 9; err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415, 0.14956104413466528, 0.14811925904918463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415, 0.14956104413466528, 0.14811925904918463, 0.14712318655569107] ***
*** finished computation of 7 references, err: [Inf, 0.27417612036317585, 0.1711116953585297, 0.16009752226620913, 0.15747475989890516, 0.1561074599288404, 0.15449216403067112, 0.15185770169552415, 0.14956104413466528, 0.14811925904918463, 0.14712318655569107] ***
*** center 1: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 1]]
** centroid: 3, normalized-entropy: 0.12923377484588472, [(2, 55), (3, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [46, 36, 0]]
** centroid: 4, normalized-entropy: 0.9892452969285004, [(1, 46), (2, 36)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 27, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 54), (2, 27)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 52, 9]]
** centroid: 6, normalized-entropy: 0.603652249754401, [(2, 52), (3, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [54, 8, 0]]
** centroid: 7, normalized-entropy: 0.5547781633412736, [(1, 54), (2, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24604657863639295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674] ***
*** starting iteration: 2; err: [Inf, 0.24604657863639295, 0.1782643328178674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625] ***
*** starting iteration: 3; err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472] ***
*** starting iteration: 4; err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802] ***
*** starting iteration: 5; err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034] ***
*** starting iteration: 6; err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034, 0.14986909440066665] ***
*** starting iteration: 7; err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034, 0.14986909440066665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034, 0.14986909440066665, 0.14817567777819932] ***
*** starting iteration: 8; err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034, 0.14986909440066665, 0.14817567777819932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034, 0.14986909440066665, 0.14817567777819932, 0.14749898317083715] ***
*** finished computation of 7 references, err: [Inf, 0.24604657863639295, 0.1782643328178674, 0.16547818879410625, 0.15889753064699472, 0.1545403487160802, 0.15220677931793034, 0.14986909440066665, 0.14817567777819932, 0.14749898317083715] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [85, 4, 0]]
** centroid: 1, normalized-entropy: 0.2645173683629748, [(1, 85), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [17, 51, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 17), (2, 51)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 4, 0]]
** centroid: 4, normalized-entropy: 0.3159971329784246, [(1, 66), (2, 4)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 47, 14]]
** centroid: 6, normalized-entropy: 0.7771529943226336, [(2, 47), (3, 14)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 71, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21308685042895376] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872] ***
*** starting iteration: 2; err: [Inf, 0.21308685042895376, 0.1670156277231872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344] ***
*** starting iteration: 3; err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536] ***
*** starting iteration: 4; err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652] ***
*** starting iteration: 5; err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951] ***
*** starting iteration: 6; err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951, 0.15060193953849374] ***
*** starting iteration: 7; err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951, 0.15060193953849374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951, 0.15060193953849374, 0.14956678332947196] ***
*** starting iteration: 8; err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951, 0.15060193953849374, 0.14956678332947196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951, 0.15060193953849374, 0.14956678332947196, 0.148574966033455] ***
*** finished computation of 7 references, err: [Inf, 0.21308685042895376, 0.1670156277231872, 0.15946432141028344, 0.1568731191046536, 0.15500570813007652, 0.15245244943629951, 0.15060193953849374, 0.14956678332947196, 0.148574966033455] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 57, 0]]
** centroid: 1, normalized-entropy: 0.12565805017256745, [(1, 1), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 28, 0]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(1, 42), (2, 28)]
*** center 3: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 41, 0]]
** centroid: 5, normalized-entropy: 0.9998900524545515, [(1, 40), (2, 41)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 59, 13]]
** centroid: 7, normalized-entropy: 0.6812908868842175, [(2, 59), (3, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2393069353112951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2393069353112951, 0.17193800769001247] ***
*** starting iteration: 2; err: [Inf, 0.2393069353112951, 0.17193800769001247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713] ***
*** starting iteration: 3; err: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713, 0.15402024117019028] ***
*** starting iteration: 4; err: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713, 0.15402024117019028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713, 0.15402024117019028, 0.15172984920162708] ***
*** starting iteration: 5; err: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713, 0.15402024117019028, 0.15172984920162708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713, 0.15402024117019028, 0.15172984920162708, 0.15092288364097475] ***
*** finished computation of 7 references, err: [Inf, 0.2393069353112951, 0.17193800769001247, 0.15966139252390713, 0.15402024117019028, 0.15172984920162708, 0.15092288364097475] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [42, 16, 0]]
** centroid: 1, normalized-entropy: 0.8497511372532974, [(1, 42), (2, 16)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 16]]
** centroid: 2, normalized-entropy: 0.7120640548905481, [(2, 66), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 80, 0]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(1, 5), (2, 80)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 22, 0]]
** centroid: 4, normalized-entropy: 0.8582307926411409, [(1, 56), (2, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [81, 1, 0]]
** centroid: 7, normalized-entropy: 0.09501724567107643, [(1, 81), (2, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21512870353832841] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21512870353832841, 0.1586053875759244] ***
*** starting iteration: 2; err: [Inf, 0.21512870353832841, 0.1586053875759244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423] ***
*** starting iteration: 3; err: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617] ***
*** starting iteration: 4; err: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617, 0.15014577427506448] ***
*** starting iteration: 5; err: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617, 0.15014577427506448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617, 0.15014577427506448, 0.14902823106572033] ***
*** starting iteration: 6; err: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617, 0.15014577427506448, 0.14902823106572033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617, 0.15014577427506448, 0.14902823106572033, 0.14824727425351739] ***
*** finished computation of 7 references, err: [Inf, 0.21512870353832841, 0.1586053875759244, 0.15424767382070423, 0.15209543631784617, 0.15014577427506448, 0.14902823106572033, 0.14824727425351739] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [53, 21, 0]]
** centroid: 3, normalized-entropy: 0.8605553930586318, [(1, 53), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [86, 15, 0]]
** centroid: 4, normalized-entropy: 0.6061112071230008, [(1, 86), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 56, 10]]
** centroid: 5, normalized-entropy: 0.6136190195993708, [(2, 56), (3, 10)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 62, 4]]
** centroid: 6, normalized-entropy: 0.32984607020714635, [(2, 62), (3, 4)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 22, 0]]
** centroid: 7, normalized-entropy: 0.9666186325481027, [(1, 34), (2, 22)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2878816389720887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025] ***
*** starting iteration: 2; err: [Inf, 0.2878816389720887, 0.18370345467329025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933] ***
*** starting iteration: 3; err: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162] ***
*** starting iteration: 4; err: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087] ***
*** starting iteration: 5; err: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087, 0.14943881994951516] ***
*** starting iteration: 6; err: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087, 0.14943881994951516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087, 0.14943881994951516, 0.14829676168225706] ***
*** starting iteration: 7; err: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087, 0.14943881994951516, 0.14829676168225706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087, 0.14943881994951516, 0.14829676168225706, 0.1480306385718286] ***
*** finished computation of 7 references, err: [Inf, 0.2878816389720887, 0.18370345467329025, 0.17031917135044933, 0.15817642474640162, 0.15162562988419087, 0.14943881994951516, 0.14829676168225706, 0.1480306385718286] ***
*** center 1: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 54, 13]]
** centroid: 2, normalized-entropy: 0.709825885194168, [(2, 54), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 19, 0]]
** centroid: 3, normalized-entropy: 0.7809756883263416, [(1, 63), (2, 19)]
*** center 4: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 43, 0]]
** centroid: 5, normalized-entropy: 0.9770012394218561, [(1, 30), (2, 43)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 53, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 8, 0]]
** centroid: 7, normalized-entropy: 0.5328350630342235, [(1, 58), (2, 8)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.202130351386033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.202130351386033, 0.15565830208454282] ***
*** starting iteration: 2; err: [Inf, 0.202130351386033, 0.15565830208454282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.202130351386033, 0.15565830208454282, 0.15086722631799057] ***
*** starting iteration: 3; err: [Inf, 0.202130351386033, 0.15565830208454282, 0.15086722631799057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.202130351386033, 0.15565830208454282, 0.15086722631799057, 0.14957195499166848] ***
*** starting iteration: 4; err: [Inf, 0.202130351386033, 0.15565830208454282, 0.15086722631799057, 0.14957195499166848] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.202130351386033, 0.15565830208454282, 0.15086722631799057, 0.14957195499166848, 0.14907669345475733] ***
*** finished computation of 7 references, err: [Inf, 0.202130351386033, 0.15565830208454282, 0.15086722631799057, 0.14957195499166848, 0.14907669345475733] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [25, 44, 0]]
** centroid: 1, normalized-entropy: 0.9445911819316588, [(1, 25), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 22, 0]]
** centroid: 2, normalized-entropy: 0.8729882944709463, [(1, 53), (2, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 55, 15]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 55), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 363,3 => 29,1 => 608), Dict(2 => 355,3 => 26,1 => 619))
[ Info: ===== scores for single classifier: {"micro_f1":0.925,"precision":0.925,"recall":0.925,"macro_recall":0.9411909258458668,"macro_f1":0.8344900277663113,"accuracy":0.925,"class_f1":{"2":0.8917748917748917,"3":0.65,"1":0.9616951915240424},"class_precision":{"2":0.9142011834319527,"3":0.48148148148148145,"1":0.9703947368421053},"class_recall":{"2":0.8704225352112676,"3":1.0,"1":0.9531502423263328}}
[ Info: ===== scores for 1: {"micro_f1":0.9469999999999998,"precision":0.947,"recall":0.947,"macro_recall":0.954239383527877,"macro_f1":0.8822094986962875,"accuracy":0.947,"class_f1":{"2":0.9217134416543574,"3":0.7536231884057971,"1":0.9712918660287081},"class_precision":{"2":0.968944099378882,"3":0.6046511627906976,"1":0.9590551181102362},"class_recall":{"2":0.8788732394366198,"3":1.0,"1":0.9838449111470113}}
[ Info: ===== scores for 5: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9695252830932825,"macro_f1":0.8940500991634983,"accuracy":0.962,"class_f1":{"2":0.9455587392550142,"3":0.7536231884057971,"1":0.9829683698296836},"class_precision":{"2":0.9620991253644315,"3":0.6046511627906976,"1":0.9869706840390879},"class_recall":{"2":0.9295774647887324,"3":1.0,"1":0.9789983844911146}}
[ Info: ===== scores for 7: {"micro_f1":0.954,"precision":0.954,"recall":0.954,"macro_recall":0.9648167952247682,"macro_f1":0.8816708802599145,"accuracy":0.954,"class_f1":{"2":0.9346590909090909,"3":0.732394366197183,"1":0.9779591836734693},"class_precision":{"2":0.9426934097421203,"3":0.5777777777777777,"1":0.9884488448844885},"class_recall":{"2":0.9267605633802817,"3":1.0,"1":0.9676898222940227}}
[ Info: ===== scores for 9: {"micro_f1":0.953,"precision":0.953,"recall":0.953,"macro_recall":0.9642782922630019,"macro_f1":0.8747951682373133,"accuracy":0.953,"class_f1":{"2":0.9333333333333332,"3":0.7123287671232876,"1":0.9787234042553191},"class_precision":{"2":0.94,"3":0.5531914893617021,"1":0.9917081260364843},"class_recall":{"2":0.9267605633802817,"3":1.0,"1":0.9660743134087237}}
[ Info: ===== scores for 11: {"micro_f1":0.951,"precision":0.951,"recall":0.951,"macro_recall":0.9636017505138531,"macro_f1":0.8676134432814523,"accuracy":0.951,"class_f1":{"2":0.9308885754583921,"3":0.6933333333333334,"1":0.9786184210526316},"class_precision":{"2":0.9322033898305084,"3":0.5306122448979592,"1":0.9966499162479062},"class_recall":{"2":0.9295774647887324,"3":1.0,"1":0.9612277867528272}}
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.947, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.962, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.954, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.954, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.964,"k":3,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.970602289016815,"macro_f1":0.9061280174031552,"accuracy":0.964,"class_f1":{"2":0.9482758620689654,"3":0.787878787878788,"1":0.9822294022617124},"class_precision":{"2":0.967741935483871,"3":0.65,"1":0.9822294022617124},"class_recall":{"2":0.9295774647887324,"3":1.0,"1":0.9822294022617124}}
Test Summary: | Pass  Total
AKNC          |    8      8
[102, 1, 3, 4, 1, 5, 1, 2, 6, 3, 8, 3, 1, 17, 5, 9, 17, 18, 3, 4, 2, 3, 18, 5, 4, 12, 9, 1, 8, 10, 7, 1, 7, 7, 14, 10, 28, 3, 1, 4, 2, 12, 7, 5, 9, 10, 30, 2, 5, 3, 10, 44, 17, 3, 21, 6, 8, 28, 36, 23, 8, 4, 4, 30, 3, 27, 3, 33, 99, 12, 4, 18, 66, 59, 1, 4, 2, 5, 4, 21, 9, 3, 25, 24, 31, 165, 8, 268, 78, 10, 9, 3, 61, 8, 4, 14, 1, 47, 18, 54, 15, 11, 1, 5, 18, 18, 26, 51, 6, 42, 45, 41, 7, 58, 7, 32, 1, 86, 16, 14, 12, 34, 10, 21, 30, 5, 15, 20, 10, 56, 7, 7, 140, 8, 42, 30, 38, 4, 8, 45, 8, 18, 2, 19, 5, 69, 5, 485, 62, 117, 3, 11, 10, 29, 25, 8, 4, 19, 6, 5, 10, 5, 20, 8, 95, 9, 1, 53, 16, 348, 1, 80, 12, 18, 9, 104, 36, 7, 20, 1, 21, 9, 91, 36, 6, 15, 10, 4, 42, 34, 12, 30, 3, 19, 41, 213, 53, 9, 46, 42, 18, 2, 16, 8, 47, 16, 14, 25, 139, 7, 6, 142, 11, 3, 7, 24, 16, 7, 260, 133, 2, 11, 25, 56, 26, 5, 11, 167, 3, 200, 2, 29, 54, 57, 79, 7, 2, 16, 90, 73, 8, 7, 26, 70, 21, 11, 173, 14, 57, 43, 29, 9, 32, 33, 27, 18, 6, 24, 88, 13, 13, 144, 37, 25, 54, 25, 58, 5, 32, 12, 3, 11, 590, 5, 20, 3, 217, 3, 7, 2, 29, 69, 178, 1, 3, 39, 9, 68, 3, 4, 17, 29, 25, 28, 37, 56, 13, 116, 31, 18]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.634, speedup = 0.30762085751161067, eval_ratio = 0.065952)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3689546130952381,"recall":0.36458333333333326,"f1":null,"seconds":0.0001334846019744873,"exhaustive_search_seconds":0.0003930088132619858,"evaluations":430.4765625,"distances_sum":1755.148114371312}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5503472222222219,"recall":0.5503472222222219,"f1":null,"seconds":0.00023573823273181915,"exhaustive_search_seconds":0.0003930088132619858,"evaluations":564.765625,"distances_sum":1662.3768981112996}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6718749999999996,"recall":0.6718749999999996,"f1":0.6718749999999996,"seconds":0.0004742685705423355,"exhaustive_search_seconds":0.0003930088132619858,"evaluations":687.75,"distances_sum":1604.0492439945447}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7456597222222218,"recall":0.7456597222222218,"f1":0.7456597222222218,"seconds":0.0003835335373878479,"exhaustive_search_seconds":0.0003930088132619858,"evaluations":782.0234375,"distances_sum":1576.144196213355}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7994791666666661,"recall":0.7994791666666661,"f1":0.7994791666666661,"seconds":0.0004846416413784027,"exhaustive_search_seconds":0.0003930088132619858,"evaluations":874.8828125,"distances_sum":1561.7902376036413}
KCenters.DeloneInvIndex> reached performance {"precision":0.8359374999999993,"recall":0.8359374999999993,"f1":0.8359374999999993,"seconds":0.0005570985376834869,"exhaustive_search_seconds":0.0003930088132619858,"evaluations":985.6640625,"distances_sum":1551.8447823420267}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8069999999999999, speedup = 0.6800458303378865, eval_ratio = 0.09496399999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
