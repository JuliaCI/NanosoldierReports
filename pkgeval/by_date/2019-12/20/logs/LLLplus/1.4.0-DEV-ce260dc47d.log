Julia Version 1.4.0-DEV.646
Commit ce260dc47d (2019-12-19 21:21 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Parsers ──────── v0.3.10
 Installed BenchmarkTools ─ v0.4.3
 Installed LLLplus ──────── v1.2.3
 Installed JSON ─────────── v0.21.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [142c1900] + LLLplus v1.2.3
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [682c06a0] + JSON v0.21.0
  [142c1900] + LLLplus v1.2.3
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [de0858da] + Printf 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing LLLplus
Path `/home/pkgeval/.julia/packages/LLLplus/AhAPL` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_468Xt7/Project.toml`
  [142c1900] + LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  Updating `/tmp/jl_468Xt7/Manifest.toml`
  [142c1900] ~ LLLplus v1.2.3 ⇒ v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
Running sandbox
Status `/tmp/jl_468Xt7/Project.toml`
  [6e4b80f9] BenchmarkTools v0.4.3
  [142c1900] LLLplus v1.2.3 [`~/.julia/packages/LLLplus/AhAPL`]
  [8bb1440f] DelimitedFiles 
  [37e2e46d] LinearAlgebra 
  [de0858da] Printf 
  [9a3f8284] Random 
  [8dfed614] Test 
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  8.078308 seconds (4.19 M allocations: 768.424 MiB, 6.20% gc time)
  3.226554 seconds (248.73 k allocations: 584.555 MiB, 5.10% gc time)

Testing LLL on 10x10 complex matrix...
 10.148948 seconds (11.40 M allocations: 525.421 MiB, 3.57% gc time)
  0.025050 seconds (1.42 k allocations: 148.203 KiB)
Testing Seysen on same 10x10 complex matrix...
  3.271328 seconds (2.66 M allocations: 131.046 MiB, 4.18% gc time)
  0.062770 seconds (354 allocations: 153.344 KiB)
Testing VBLAST on same 10x10 complex matrix...
  2.710618 seconds (2.24 M allocations: 103.592 MiB, 2.53% gc time)
  0.028113 seconds (230 allocations: 122.219 KiB)
Testing Brun on real part of same 10x10 matrix...
  2.347438 seconds (1.80 M allocations: 89.413 MiB, 1.47% gc time)
  0.000169 seconds (37 allocations: 13.484 KiB)

Testing sphere decoder on 100000 samples of 3x3 BPSK system...
  2.794847 seconds (4.32 M allocations: 322.417 MiB, 6.43% gc time)
  0.596187 seconds (2.00 M allocations: 209.809 MiB, 4.23% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
The min norm of the input should be 30, min norm of the reduced bases should be smaller.
min norm of input is 30.0
  1.584865 seconds (859.98 k allocations: 361.679 MiB, 20.00% gc time)
min norm of lll-reduced basis is 29.30870177950569
  8.351725 seconds (5.14 M allocations: 1.251 GiB, 3.41% gc time)
min norm of seysen-reduced basis is 30.0
   Testing LLLplus tests passed 
