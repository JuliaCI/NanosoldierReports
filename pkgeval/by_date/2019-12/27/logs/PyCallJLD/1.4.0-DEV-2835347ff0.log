Julia Version 1.4.0-DEV.666
Commit 2835347ff0 (2019-12-26 15:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed PyCallJLD ────────── v0.1.0
 Installed CMakeWrapper ─────── v0.2.3
 Installed URIParser ────────── v0.4.0
 Installed Conda ────────────── v1.3.0
 Installed OrderedCollections ─ v1.1.0
 Installed PyCall ───────────── v1.91.2
 Installed BinaryProvider ───── v0.5.8
 Installed JSON ─────────────── v0.21.0
 Installed CMake ────────────── v1.1.2
 Installed JLD ──────────────── v0.9.1
 Installed DataStructures ───── v0.17.6
 Installed Blosc ────────────── v0.5.1
 Installed Parameters ───────── v0.12.0
 Installed MacroTools ───────── v0.5.3
 Installed BinDeps ──────────── v1.0.0
 Installed HDF5 ─────────────── v0.12.5
 Installed VersionParsing ───── v1.2.0
 Installed Compat ───────────── v2.2.0
 Installed LegacyStrings ────── v0.4.1
 Installed FileIO ───────────── v1.2.0
 Installed Parsers ──────────── v0.3.10
  Updating `~/.julia/environments/v1.4/Project.toml`
  [de320387] + PyCallJLD v0.1.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [a74b3585] + Blosc v0.5.1
  [631607c0] + CMake v1.1.2
  [d5fb7624] + CMakeWrapper v0.2.3
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [864edb3b] + DataStructures v0.17.6
  [5789e2e9] + FileIO v1.2.0
  [f67ccb44] + HDF5 v0.12.5
  [4138dd39] + JLD v0.9.1
  [682c06a0] + JSON v0.21.0
  [1b4a561d] + LegacyStrings v0.4.1
  [1914dd2f] + MacroTools v0.5.3
  [bac558e1] + OrderedCollections v1.1.0
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [438e738f] + PyCall v1.91.2
  [de320387] + PyCallJLD v0.1.0
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Conda ─→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_Da9tQm/Project.toml`
 [no changes]
  Updating `/tmp/jl_Da9tQm/Manifest.toml`
 [no changes]
  Building PyCall → `~/.julia/packages/PyCall/ttONZ/deps/build.log`
  Updating `/tmp/jl_OJmNHn/Project.toml`
 [no changes]
  Updating `/tmp/jl_OJmNHn/Manifest.toml`
 [no changes]
  Building CMake ─→ `~/.julia/packages/CMake/nSK2r/deps/build.log`
  Updating `/tmp/jl_xwdKvW/Project.toml`
 [no changes]
  Updating `/tmp/jl_xwdKvW/Manifest.toml`
 [no changes]
  Building Blosc ─→ `~/.julia/packages/Blosc/lzFr0/deps/build.log`
  Updating `/tmp/jl_eUjsU3/Project.toml`
 [no changes]
  Updating `/tmp/jl_eUjsU3/Manifest.toml`
 [no changes]
  Building HDF5 ──→ `~/.julia/packages/HDF5/Zh9on/deps/build.log`
  Updating `/tmp/jl_bTF6gl/Project.toml`
 [no changes]
  Updating `/tmp/jl_bTF6gl/Manifest.toml`
 [no changes]
   Testing PyCallJLD
  Updating `/tmp/jl_iIl23b/Project.toml`
 [no changes]
  Updating `/tmp/jl_iIl23b/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_iIl23b/Project.toml`
  [4138dd39] JLD v0.9.1
  [438e738f] PyCall v1.91.2
  [de320387] PyCallJLD v0.1.0
  [8dfed614] Test 
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = __init__() at PyCallJLD.jl:12
└ @ PyCallJLD ~/.julia/packages/PyCallJLD/Tfc36/src/PyCallJLD.jl:12
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = __init__() at PyCallJLD.jl:13
└ @ PyCallJLD ~/.julia/packages/PyCallJLD/Tfc36/src/PyCallJLD.jl:13
┌ Warning: `getindex(o::PyObject, s::AbstractString)` is deprecated in favor of dot overloading (`getproperty`) so elements should now be accessed as e.g. `o."s"` instead of `o["s"]`.
│   caller = top-level scope at runtests.jl:6
└ @ Core ~/.julia/packages/PyCallJLD/Tfc36/test/runtests.jl:6
   Testing PyCallJLD tests passed 
