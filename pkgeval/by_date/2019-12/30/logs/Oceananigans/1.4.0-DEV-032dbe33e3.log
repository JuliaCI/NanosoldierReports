Julia Version 1.4.0-DEV.670
Commit 032dbe33e3 (2019-12-29 22:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed CUDAapi ──────────── v2.1.0
 Installed MKL_jll ──────────── v2019.0.117+0
 Installed Parsers ──────────── v0.3.10
 Installed FileIO ───────────── v1.2.0
 Installed CFTime ───────────── v0.0.3
 Installed Cassette ─────────── v0.2.6
 Installed NNlib ────────────── v0.6.2
 Installed Oceananigans ─────── v0.18.0
 Installed MacroTools ───────── v0.5.3
 Installed BinaryProvider ───── v0.5.8
 Installed OffsetArrays ─────── v0.11.4
 Installed StaticArrays ─────── v0.11.1
 Installed URIParser ────────── v0.4.0
 Installed IntelOpenMP_jll ──── v2018.0.3+0
 Installed CUDAnative ───────── v2.6.0
 Installed BinDeps ──────────── v0.8.10
 Installed AbstractFFTs ─────── v0.5.0
 Installed DataAPI ──────────── v1.1.0
 Installed Missings ─────────── v0.4.3
 Installed OrderedCollections ─ v1.1.0
 Installed JSON ─────────────── v0.21.0
 Installed GPUifyLoops ──────── v0.2.9
 Installed CodecZlib ────────── v0.6.0
 Installed TimerOutputs ─────── v0.5.3
 Installed CondaBinDeps ─────── v0.1.0
 Installed Adapt ────────────── v1.0.0
 Installed Conda ────────────── v1.3.0
 Installed Requires ─────────── v0.5.2
 Installed CEnum ────────────── v0.2.0
 Installed FFTW_jll ─────────── v3.3.9+3
 Installed GPUArrays ────────── v2.0.1
 Installed DataStructures ───── v0.17.6
 Installed LLVM ─────────────── v1.3.2
 Installed CUDAdrv ──────────── v4.0.4
 Installed NCDatasets ───────── v0.9.5
 Installed FFTW ─────────────── v1.2.0
 Installed TranscodingStreams ─ v0.9.5
 Installed Reexport ─────────── v0.2.0
 Installed VersionParsing ───── v1.2.0
 Installed JLD2 ─────────────── v0.1.10
 Installed Compat ───────────── v2.2.0
 Installed CuArrays ─────────── v1.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9e8cae18] + Oceananigans v0.18.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [79e6a3ab] + Adapt v1.0.0
  [9e28174c] + BinDeps v0.8.10
  [b99e7846] + BinaryProvider v0.5.8
  [fa961155] + CEnum v0.2.0
  [179af706] + CFTime v0.0.3
  [3895d2a7] + CUDAapi v2.1.0
  [c5f51814] + CUDAdrv v4.0.4
  [be33ccc6] + CUDAnative v2.6.0
  [7057c7e9] + Cassette v0.2.6
  [944b1d66] + CodecZlib v0.6.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [a9693cdc] + CondaBinDeps v0.1.0
  [3a865a2d] + CuArrays v1.5.0
  [9a962f9c] + DataAPI v1.1.0
  [864edb3b] + DataStructures v0.17.6
  [7a1cc6ca] + FFTW v1.2.0
  [f5851436] + FFTW_jll v3.3.9+3
  [5789e2e9] + FileIO v1.2.0
  [0c68f7d7] + GPUArrays v2.0.1
  [ba82f77b] + GPUifyLoops v0.2.9
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [033835bb] + JLD2 v0.1.10
  [682c06a0] + JSON v0.21.0
  [929cbde3] + LLVM v1.3.2
  [856f044c] + MKL_jll v2019.0.117+0
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [85f8d34a] + NCDatasets v0.9.5
  [872c559c] + NNlib v0.6.2
  [9e8cae18] + Oceananigans v0.18.0
  [6fe1bfb0] + OffsetArrays v0.11.4
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v0.5.2
  [90137ffa] + StaticArrays v0.11.1
  [a759f4b9] + TimerOutputs v0.5.3
  [3bb67fe8] + TranscodingStreams v0.9.5
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building NNlib ─────→ `~/.julia/packages/NNlib/udnNA/deps/build.log`
  Updating `/tmp/jl_7zTS7A/Project.toml`
 [no changes]
  Updating `/tmp/jl_7zTS7A/Manifest.toml`
 [no changes]
  Building CodecZlib ─→ `~/.julia/packages/CodecZlib/5t9zO/deps/build.log`
  Updating `/tmp/jl_Op0UqH/Project.toml`
 [no changes]
  Updating `/tmp/jl_Op0UqH/Manifest.toml`
 [no changes]
  Building Conda ─────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
  Updating `/tmp/jl_zHxNY4/Project.toml`
 [no changes]
  Updating `/tmp/jl_zHxNY4/Manifest.toml`
 [no changes]
  Building FFTW ──────→ `~/.julia/packages/FFTW/qqcBj/deps/build.log`
  Updating `/tmp/jl_4VHWRt/Project.toml`
 [no changes]
  Updating `/tmp/jl_4VHWRt/Manifest.toml`
 [no changes]
  Building NCDatasets → `~/.julia/packages/NCDatasets/uW2kc/deps/build.log`
  Updating `/tmp/jl_z7qIJU/Project.toml`
 [no changes]
  Updating `/tmp/jl_z7qIJU/Manifest.toml`
 [no changes]
   Testing Oceananigans
 Installed FixedPointNumbers ─ v0.6.1
 Installed NaNMath ─────────── v0.3.3
 Installed StatsBase ───────── v0.32.0
 Installed Measures ────────── v0.3.1
 Installed PlotThemes ──────── v1.0.1
 Installed Plots ───────────── v0.28.4
 Installed Showoff ─────────── v0.3.1
 Installed IterTools ───────── v1.3.0
 Installed ColorTypes ──────── v0.9.0
 Installed SortingAlgorithms ─ v0.3.1
 Installed RecipesBase ─────── v0.7.0
 Installed Contour ─────────── v0.5.1
 Installed FFMPEG ──────────── v0.2.4
 Installed PlotUtils ───────── v0.6.1
 Installed Colors ──────────── v0.11.0
 Installed GeometryTypes ───── v0.7.6
 Installed GR ──────────────── v0.44.0
  Updating `/tmp/jl_iOIv9a/Project.toml`
  [91a5bcdd] + Plots v0.28.4
  Updating `/tmp/jl_iOIv9a/Manifest.toml`
  [3da002f7] + ColorTypes v0.9.0
  [5ae59095] + Colors v0.11.0
  [d38c429a] + Contour v0.5.1
  [c87230d0] + FFMPEG v0.2.4
  [53c48c17] + FixedPointNumbers v0.6.1
  [28b8d3ca] + GR v0.44.0
  [4d00f742] + GeometryTypes v0.7.6
  [c8e1da08] + IterTools v1.3.0
  [442fdcdd] + Measures v0.3.1
  [77ba4419] + NaNMath v0.3.3
  [ccf2f8ad] + PlotThemes v1.0.1
  [995b91a9] + PlotUtils v0.6.1
  [91a5bcdd] + Plots v0.28.4
  [3cdcf5f2] + RecipesBase v0.7.0
  [992d4aef] + Showoff v0.3.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  Building GR ────→ `~/.julia/packages/GR/oiZD3/deps/build.log`
  Updating `/tmp/jl_Q5FIOx/Project.toml`
 [no changes]
  Updating `/tmp/jl_Q5FIOx/Manifest.toml`
 [no changes]
  Building FFMPEG → `~/.julia/packages/FFMPEG/guN1x/deps/build.log`
  Updating `/tmp/jl_LyE460/Project.toml`
 [no changes]
  Updating `/tmp/jl_LyE460/Manifest.toml`
 [no changes]
  Building Plots ─→ `~/.julia/packages/Plots/qZHsp/deps/build.log`
  Updating `/tmp/jl_CXFw8i/Project.toml`
 [no changes]
  Updating `/tmp/jl_CXFw8i/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_iOIv9a/Project.toml`
  [79e6a3ab] Adapt v1.0.0
  [3895d2a7] CUDAapi v2.1.0
  [c5f51814] CUDAdrv v4.0.4
  [be33ccc6] CUDAnative v2.6.0
  [7057c7e9] Cassette v0.2.6
  [3a865a2d] CuArrays v1.5.0
  [7a1cc6ca] FFTW v1.2.0
  [ba82f77b] GPUifyLoops v0.2.9
  [033835bb] JLD2 v0.1.10
  [85f8d34a] NCDatasets v0.9.5
  [9e8cae18] Oceananigans v0.18.0
  [6fe1bfb0] OffsetArrays v0.11.4
  [bac558e1] OrderedCollections v1.1.0
  [91a5bcdd] Plots v0.28.4
  [90137ffa] StaticArrays v0.11.1
  [a759f4b9] TimerOutputs v0.5.3
  [ade2ca70] Dates 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [56ddb016] Logging 
  [de0858da] Printf 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
WARNING: Method definition overdub(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:524 overwritten in module GPUifyLoops at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:524.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition recurse(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:537 overwritten in module GPUifyLoops at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:537.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition overdub(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:524 overwritten in module GPUifyLoops at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:524.
  ** incremental compilation may be fatally broken for this module **

WARNING: Method definition recurse(Cassette.Context{N, M, T, P, B, H} where H<:Union{Cassette.DisableHooks, Nothing} where B<:Union{Nothing, Base.IdDict{Module, Base.Dict{Symbol, Cassette.BindingMeta}}} where P<:Cassette.AbstractPass where T<:Union{Nothing, Cassette.Tag{N, X, E} where E where X where N<:Cassette.AbstractContextName} where M where N<:Cassette.AbstractContextName, Any...) in module Cassette at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:537 overwritten in module GPUifyLoops at /home/pkgeval/.julia/packages/Cassette/YCOeN/src/overdub.jl:537.
  ** incremental compilation may be fatally broken for this module **

WARNING: using Dates.minute in module Oceananigans conflicts with an existing identifier.
WARNING: using Dates.second in module Oceananigans conflicts with an existing identifier.
WARNING: using Dates.hour in module Oceananigans conflicts with an existing identifier.
WARNING: using Dates.day in module Oceananigans conflicts with an existing identifier.
WARNING: import of Grids.short_show into Oceananigans conflicts with an existing identifier; ignored.
Testing grids...
  Testing grid initialization...
  Testing grid constructor errors...
Testing fields...
  Testing field initialization...
  Testing field setting...
Testing halo regions...
  Testing initializing halo regions...
  Testing filling halo regions...
Testing operators...
  Testing function differentiation...
  Testing function interpolation...
  Testing 2D operators...
Testing Solvers...
  Testing divergence-free solution [CPU]...
  Testing divergence-free solution [GPU]...
  Testing analytic solution reconstruction...
[ Info: Error (ℓ²-norm), Float64, N=(32, 32, 32), m=(1, 1, 1): 0.0010429869370832128
[ Info: Error (ℓ²-norm), Float64, N=(32, 32, 32), m=(2, 2, 2): 0.004193186980784157
[ Info: Error (ℓ²-norm), Float64, N=(32, 32, 32), m=(3, 3, 3): 0.009515129976547675
[ Info: Error (ℓ²-norm), Float64, N=(48, 48, 48), m=(1, 1, 1): 0.0004631146916544336
[ Info: Error (ℓ²-norm), Float64, N=(48, 48, 48), m=(2, 2, 2): 0.0018566394379660393
[ Info: Error (ℓ²-norm), Float64, N=(48, 48, 48), m=(3, 3, 3): 0.004193186980784829
[ Info: Error (ℓ²-norm), Float64, N=(64, 64, 64), m=(1, 1, 1): 0.00026041644318885814
[ Info: Error (ℓ²-norm), Float64, N=(64, 64, 64), m=(2, 2, 2): 0.0010429869370831952
[ Info: Error (ℓ²-norm), Float64, N=(64, 64, 64), m=(3, 3, 3): 0.0023516875273211146
Testing Coriolis...
Testing surface waves...
Testing buoyancy...
Testing models...
  Testing doubly periodic model construction...
  Testing reentrant channel model construction...
  Testing non-dimensional model construction...
  Testing setting model fields...
Testing time stepping...
  Testing that time stepping works [CPU(), Float64, ConstantIsotropicDiffusivity]...
  Testing that time stepping works [CPU(), Float64, ConstantAnisotropicDiffusivity]...
  Testing that time stepping works [CPU(), Float64, AnisotropicBiharmonicDiffusivity]...
  Testing that time stepping works [CPU(), Float64, TwoDimensionalLeith]...
  Testing that time stepping works [CPU(), Float64, SmagorinskyLilly]...
  Testing that time stepping works [CPU(), Float64, SmagorinskyLilly]...
  Testing that time stepping works [CPU(), Float64, VerstappenAnisotropicMinimumDissipation]...
  Testing that time stepping works [CPU(), Float64, RozemaAnisotropicMinimumDissipation]...
  Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU(), Float64, freezing]
  Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU(), Float64, linear]
  Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU(), Float64, cabbeling_thermobaricity]
  Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU(), Float64, second_order]
  Testing that time stepping works with RoquetIdealizedNonlinearEquationOfState [CPU(), Float64, cabbeling]
  Testing 2nd-order Adams-Bashforth...
  Testing recomputing w from continuity...
[ Info: Velocity divergence after recomputing w [CPU(), Float32]: min=-2.3841858e-7, max=2.3841858e-7, sum=1.1920929e-7, abs_sum=4.9233437e-5
[ Info: Velocity divergence after recomputing w [CPU(), Float64]: min=-4.440892098500626e-16, max=4.440892098500626e-16, sum=-4.440892098500626e-15, abs_sum=9.592326932761353e-14
  Testing incompressibility...
[ Info: Velocity divergence after 1 time steps [CPU(), Float32]: min=-6.457305e-19, max=-6.457305e-19, sum=-2.4400536e-22, abs_sum=1.414861e-16
[ Info: Velocity divergence after 10 time steps [CPU(), Float32]: min=-6.826408e-19, max=-6.826408e-19, sum=-6.5854434e-21, abs_sum=1.646294e-16
[ Info: Velocity divergence after 100 time steps [CPU(), Float32]: min=-6.847821e-19, max=-6.847821e-19, sum=-2.1468129e-20, abs_sum=2.6427743e-16
[ Info: Velocity divergence after 1 time steps [CPU(), Float64]: min=-6.037244272213971e-19, max=-6.037244272213971e-19, sum=-1.9275293505266353e-22, abs_sum=1.284399769586337e-16
[ Info: Velocity divergence after 10 time steps [CPU(), Float64]: min=-7.735240399597831e-19, max=-7.735240399597831e-19, sum=1.666113807244092e-21, abs_sum=1.5625275138570133e-16
[ Info: Velocity divergence after 100 time steps [CPU(), Float64]: min=-6.005395833397209e-19, max=-6.005395833397209e-19, sum=8.58925289833789e-20, abs_sum=2.661629631159426e-16
  Testing tracer conservation in channel...
[ Info: Tracer conservation after 10 time steps [CPU(), Float32]: ⟨T⟩-T₀=-1.1723955140041653e-13 °C
[ Info: Tracer conservation after 10 time steps [CPU(), Float64]: ⟨T⟩-T₀=-5.3290705182007514e-14 °C
Testing boundary conditions...
Testing forcings...
  Testing forcing function initialization...
  Testing forcing function time stepping [CPU]...
Testing turbulence closures...
  Testing closure instantiation...
  Testing constant isotropic diffusivity...
  Testing constant anisotropic diffusivity...
  Testing calculation of nonlinear diffusivities...
    Calculating diffusivities for ConstantIsotropicDiffusivity [Float64, CPU()]
    Calculating diffusivities for ConstantAnisotropicDiffusivity [Float64, CPU()]
    Calculating diffusivities for AnisotropicBiharmonicDiffusivity [Float64, CPU()]
    Calculating diffusivities for TwoDimensionalLeith [Float64, CPU()]
    Calculating diffusivities for SmagorinskyLilly [Float64, CPU()]
    Calculating diffusivities for BlasiusSmagorinsky [Float64, CPU()]
    Calculating diffusivities for RozemaAnisotropicMinimumDissipation [Float64, CPU()]
    Calculating diffusivities for VerstappenAnisotropicMinimumDissipation [Float64, CPU()]
  Testing time-stepping with a tuple of closures...
  Testing turbulence closure diagnostics...
Testing dynamics...
  Testing simple diffusion...
  Testing default model budgets with isotropic diffusion...
  Testing diffusion cosine...
  Testing passive tracer advection...
  Testing internal wave...
  Testing Taylor-Green vortex...
[ Info: Taylor-Green vortex test [CPU(), Float64, Nx=Ny=64, Nt=10]: Δu: (avg=2.33e-06, max=2.33e-06), Δv: (avg=2.33e-06, max=2.33e-06)
Testing diagnostics...
  Testing horizontal average [CPU]
  Testing NaN Checker [CPU]
  Testing miscellaneous timeseries diagnostics [CPU]
Testing output writers...
  Testing NetCDF output writer [CPU]...
  Testing JLD2 output writer [CPU]...
  Testing Checkpointer [CPU]...
Running regression tests...
  Testing thermal bubble regression [CPU]
[ Info: Δu: min=-4.16063e-18, max=4.85011e-18, mean=1.46721e-22, absmean=2.63571e-19, std=4.85389e-19
[ Info: Δv: min=-4.5672e-18, max=5.20417e-18, mean=1.33432e-21, absmean=2.64667e-19, std=5.05737e-19
[ Info: Δw: min=-1.64257e-17, max=2.17383e-17, mean=3.80265e-21, absmean=3.16134e-18, std=4.4084e-18
[ Info: ΔT: min=-1.77636e-15, max=1.77636e-15, mean=1.73472e-18, absmean=1.47451e-17, std=1.61852e-16
[ Info: ΔS: min=0, max=0, mean=0, absmean=0, std=0
  Testing Rayleigh–Bénard tracer regression [CPU]
Rayleigh–Bénard tracer [CPU]: Error During Test at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/test_regression.jl:29
  Got exception outside of a @test
  SystemError: opening file "/home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/regression_tests/data/data_rayleigh_benard_regression.jld2": Permission denied
  Stacktrace:
   [1] systemerror(::String, ::Int32; extrainfo::Nothing) at ./error.jl:168
   [2] #systemerror#50 at ./error.jl:167 [inlined]
   [3] systemerror at ./error.jl:167 [inlined]
   [4] open(::String; read::Bool, write::Bool, create::Bool, truncate::Bool, append::Bool) at ./iostream.jl:254
   [5] JLD2.MmapIO(::String, ::Bool, ::Bool, ::Bool) at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/mmapio.jl:100
   [6] openfile at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/JLD2.jl:194 [inlined]
   [7] jldopen(::String, ::Bool, ::Bool, ::Bool, ::Type{JLD2.MmapIO}; compress::Bool, mmaparrays::Bool) at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/JLD2.jl:231
   [8] jldopen at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/JLD2.jl:203 [inlined] (repeats 2 times)
   [9] jldopen(::String, ::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/JLD2.jl:293
   [10] jldopen(::String, ::String) at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/JLD2.jl:288
   [11] jldopen(::Oceananigans.OutputWriters.var"#14#15"{typeof(Oceananigans.OutputWriters.noinit),Array{Any,1},Model{Oceananigans.TimeSteppers.AdamsBashforthTimeStepper{Float64,NamedTuple{(:u, :v, :w, :b, :c),Tuple{Field{Face,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Face,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Face,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}},ConstantIsotropicDiffusivity{Float64,NamedTuple{(:b, :c),Tuple{Float64,Float64}}},CPU,RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Float64,BuoyancyTracer,Nothing,Nothing,NamedTuple{(:u, :v, :w),Tuple{Field{Face,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Face,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Face,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}},NamedTuple{(:b, :c),Tuple{Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}},NamedTuple{(:pHY′, :pNHS),Tuple{Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}},NamedTuple{(:u, :v, :w, :b, :c),Tuple{typeof(Oceananigans.zeroforcing),typeof(Oceananigans.zeroforcing),typeof(Oceananigans.zeroforcing),typeof(Oceananigans.zeroforcing),var"#Fc#85"{var"#c★#84"{Float64}}}},NamedTuple{(:solution, :tendency, :pressure),Tuple{NamedTuple{(:u, :v, :w, :b, :c),Tuple{NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Oceananigans.NoPenetration,Nothing},BoundaryCondition{Oceananigans.NoPenetration,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Value,Float64},BoundaryCondition{Value,Float64}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}}}},NamedTuple{(:u, :v, :w, :b, :c),Tuple{NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Oceananigans.NoPenetration,Nothing},BoundaryCondition{Oceananigans.NoPenetration,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}}}},Oceananigans.Solvers.PoissonSolverCPU{PPN,Array{Float64,3},Array{Complex{Float64},3},FFTW.cFFTWPlan{Complex{Float64},-1,true,3},FFTW.r2rFFTWPlan{Complex{Float64},(5,),true,3},AbstractFFTs.ScaledPlan{Complex{Float64},FFTW.cFFTWPlan{Complex{Float64},1,true,3},Float64},FFTW.r2rFFTWPlan{Complex{Float64},(4,),true,3}},Nothing,OrderedCollections.OrderedDict{Symbol,Oceananigans.AbstractOutputWriter},OrderedCollections.OrderedDict{Symbol,Oceananigans.AbstractDiagnostic},Nothing}}, ::String, ::Vararg{String,N} where N; kws::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/loadsave.jl:2
   [12] jldopen at /home/pkgeval/.julia/packages/JLD2/Eak1L/src/loadsave.jl:2 [inlined]
   [13] JLD2OutputWriter(::Model{Oceananigans.TimeSteppers.AdamsBashforthTimeStepper{Float64,NamedTuple{(:u, :v, :w, :b, :c),Tuple{Field{Face,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Face,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Face,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}}},ConstantIsotropicDiffusivity{Float64,NamedTuple{(:b, :c),Tuple{Float64,Float64}}},CPU,RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},Float64,BuoyancyTracer,Nothing,Nothing,NamedTuple{(:u, :v, :w),Tuple{Field{Face,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Face,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Face,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}},NamedTuple{(:b, :c),Tuple{Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}},NamedTuple{(:pHY′, :pNHS),Tuple{Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}},Field{Cell,Cell,Cell,OffsetArray{Float64,3,Array{Float64,3}},RegularCartesianGrid{Float64,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}},NamedTuple{(:u, :v, :w, :b, :c),Tuple{typeof(Oceananigans.zeroforcing),typeof(Oceananigans.zeroforcing),typeof(Oceananigans.zeroforcing),typeof(Oceananigans.zeroforcing),var"#Fc#85"{var"#c★#84"{Float64}}}},NamedTuple{(:solution, :tendency, :pressure),Tuple{NamedTuple{(:u, :v, :w, :b, :c),Tuple{NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Oceananigans.NoPenetration,Nothing},BoundaryCondition{Oceananigans.NoPenetration,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Value,Float64},BoundaryCondition{Value,Float64}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}}}},NamedTuple{(:u, :v, :w, :b, :c),Tuple{NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Oceananigans.NoPenetration,Nothing},BoundaryCondition{Oceananigans.NoPenetration,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}}}},NamedTuple{(:x, :y, :z),Tuple{CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Periodic,Nothing},BoundaryCondition{Periodic,Nothing}},CoordinateBoundaryConditions{BoundaryCondition{Flux,Nothing},BoundaryCondition{Flux,Nothing}}}}}},Oceananigans.Solvers.PoissonSolverCPU{PPN,Array{Float64,3},Array{Complex{Float64},3},FFTW.cFFTWPlan{Complex{Float64},-1,true,3},FFTW.r2rFFTWPlan{Complex{Float64},(5,),true,3},AbstractFFTs.ScaledPlan{Complex{Float64},FFTW.cFFTWPlan{Complex{Float64},1,true,3},Float64},FFTW.r2rFFTWPlan{Complex{Float64},(4,),true,3}},Nothing,OrderedCollections.OrderedDict{Symbol,Oceananigans.AbstractOutputWriter},OrderedCollections.OrderedDict{Symbol,Oceananigans.AbstractDiagnostic},Nothing}, ::Dict{Symbol,Function}; interval::Nothing, frequency::Int64, dir::String, prefix::String, init::typeof(Oceananigans.OutputWriters.noinit), including::Array{Any,1}, part::Int64, max_filesize::Float64, force::Bool, async::Bool, verbose::Bool, jld2_kw::Dict{Symbol,Any}) at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/src/OutputWriters/jld2_output_writer.jl:69
   [14] run_rayleigh_benard_regression_test(::CPU) at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/regression_tests/rayleigh_benard_regression_test.jl:56
   [15] macro expansion at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/test_regression.jl:31 [inlined]
   [16] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [17] macro expansion at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/test_regression.jl:30 [inlined]
   [18] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [19] top-level scope at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/test_regression.jl:21
   [20] include(::String) at ./client.jl:439
   [21] macro expansion at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/runtests.jl:101 [inlined]
   [22] macro expansion at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [23] top-level scope at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/runtests.jl:85
   [24] include(::String) at ./client.jl:439
   [25] top-level scope at none:6
   [26] eval(::Module, ::Any) at ./boot.jl:331
   [27] exec_options(::Base.JLOptions) at ./client.jl:264
   [28] _start() at ./client.jl:484
  
  Testing oceanic large eddy simulation regression [VerstappenAnisotropicMinimumDissipation, CPU]
[ Info: Δu: min=0, max=0, mean=0, absmean=0, std=0
[ Info: Δv: min=0, max=0, mean=0, absmean=0, std=0
[ Info: Δw: min=0, max=0, mean=0, absmean=0, std=0
[ Info: ΔT: min=0, max=0, mean=0, absmean=0, std=0
[ Info: ΔS: min=0, max=0, mean=0, absmean=0, std=0
  Testing oceanic large eddy simulation regression [SmagorinskyLilly, CPU]
[ Info: Δu: min=0, max=0, mean=0, absmean=0, std=0
[ Info: Δv: min=0, max=0, mean=0, absmean=0, std=0
[ Info: Δw: min=0, max=0, mean=0, absmean=0, std=0
[ Info: ΔT: min=0, max=0, mean=0, absmean=0, std=0
[ Info: ΔS: min=0, max=0, mean=0, absmean=0, std=0
Testing examples...
  Testing one-dimensional diffusion example
  Testing two-dimensional turbulence example
  Testing wind and convection-driving mixing example [CPU]
  Testing ocean convection with plankton example
  Testing internal wave example
  Testing Eady turbulence example
Testing abstract operations...
  Testing simple binary operations...
  Testing derivatives...
  Testing combined binary operations and derivatives...
  Testing combined binary operations and derivatives...
    Testing computation of abstract operations [Float32, CPU]...
      Testing compute! derivatives...
      Testing compute! unary operations...
      Testing compute! binary operations...
      Testing compute! multiary operations...
      Testing compute! kinetic energy...
      Testing horizontal averges...
    Testing computation of abstract operations [Float64, CPU]...
      Testing compute! derivatives...
      Testing compute! unary operations...
      Testing compute! binary operations...
      Testing compute! multiary operations...
      Testing compute! kinetic energy...
      Testing horizontal averges...
Testing verification scripts...
  Testing stratified Couette flow verification [CPU]
Simulating stratified plane Couette flow

        N : 16, 16, 8
        L : 12.6, 6.28, 2
       Re : 4250.000
       Ri : 0.010
       Pr : 0.700
        ν : 0.000235
        κ : 0.000336
   U_wall : 1.000
   Θ_wall : 0.010

[ Info: Calculating JLD2 output [:T, :w, :kappaT, :v, :nu, :u]...
[ Info: Calculation time: 233.975 ms
[ Info: Writing JLD2 output [:T, :w, :kappaT, :v, :nu, :u] to stratified_couette_flow_data_Nxy16_Nz8_Ri0.01/stratified_couette_flow_Nxy16_Nz8_Ri0.01_fields.jld2...
[ Info: Writing done: time=2.152 ms, size=157.9 KiB, Δsize=153.2 KiB
[ Info: Calculating JLD2 output [:T, :w, :nu, :v, :kappaT, :u]...
[ Info: Calculation time: 333.118 ms
[ Info: Writing JLD2 output [:T, :w, :nu, :v, :kappaT, :u] to stratified_couette_flow_data_Nxy16_Nz8_Ri0.01/stratified_couette_flow_Nxy16_Nz8_Ri0.01_profiles.jld2...
[ Info: Writing done: time=1.539 ms, size=6.4 KiB, Δsize=1.8 KiB
[ Info: Calculating JLD2 output [:Nu, :Re_tau]...
[ Info: Calculation time: 521.427 ms
[ Info: Writing JLD2 output [:Nu, :Re_tau] to stratified_couette_flow_data_Nxy16_Nz8_Ri0.01/stratified_couette_flow_Nxy16_Nz8_Ri0.01_statistics.jld2...
[ Info: Writing done: time=542.047 ms, size=9.7 KiB, Δsize=5.1 KiB
[10000000000000.00%] i: 1, t: 0.00, umax: (  1.58,  0.372,  0.416) m/s, CFL: 0.0002009, νκmax: ( 0.118,  0.115), νκCFL: (0.0001893, 0.0001837), next Δt: 5e-05, ⟨wall time⟩: 14.088 s
Test Summary:                         | Pass  Error  Broken  Total
Oceananigans                          | 1402      1       6   1409
  Grids                               |   62                    62
  Fields                              |  160                   160
  Halo regions                        |   40                    40
  Operators                           |  146                   146
  Solvers                             |  351                   351
  Coriolis                            |   20                    20
  Surface waves                       |    1                     1
  Buoyancy                            |   64                    64
  Models                              |   12                    12
  Time stepping                       |   33                    33
  Boundary conditions                 |  126                   126
  ModelForcing                        |   10                    10
  Turbulence closures                 |   42                    42
  Dynamics                            |   18                    18
  Diagnostics                         |   18                    18
  Output writers                      |   29                    29
  Regression                          |   15      1             16
    Thermal bubble [CPU]              |    5                     5
    Rayleigh–Bénard tracer [CPU]      |           1              1
    Ocean large eddy simulation [CPU] |   10                    10
  Examples                            |                   6      6
  Abstract operations                 |  254                   254
  Verification                        |    1                     1
ERROR: LoadError: Some tests did not pass: 1402 passed, 0 failed, 1 errored, 6 broken.
in expression starting at /home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/runtests.jl:84
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Oceananigans/zq4r0/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Oceananigans/zq4r0/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Oceananigans errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
