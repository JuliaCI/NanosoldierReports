Julia Version 1.4.0-DEV.666
Commit 2835347ff0 (2019-12-26 15:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataAPI ───────────────────── v1.1.0
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed CategoricalArrays ─────────── v0.7.5
 Installed Missings ──────────────────── v0.4.3
 Installed InvertedIndices ───────────── v1.0.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed MLDataUtils ───────────────── v0.5.0
 Installed DataStructures ────────────── v0.17.6
 Installed DataFrames ────────────────── v0.20.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Parsers ───────────────────── v0.3.10
 Installed LearnBase ─────────────────── v0.2.2
 Installed StatsBase ─────────────────── v0.32.0
 Installed Compat ────────────────────── v3.2.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.2.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_kGaZcg/Project.toml`
 [no changes]
  Updating `/tmp/jl_kGaZcg/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_kGaZcg/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 143.16999999999996
[ Info: 69.21999999999998
[ Info: 37.14999999999999
[ Info: 28.00999999999999
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.2399983987154
[ Info: 76.64000117061627
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 19.6675907769206
inertia(cdnet.distances) = 24.240272326992763
inertia(crand.distances) = 22.98139933920253
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":6.46875,"distances_sum":1102.8127398912418}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4013671875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4013671875,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":6.484375,"distances_sum":1041.0486860157275}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.41796875,"state":{"ssize":3,"bsize":2},"perf":{"precision":null,"recall":0.41796875,"f1":null,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":6.46875,"distances_sum":1102.8127398912418}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7833603896103905,"seconds":6.878748536109924e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":7.9296875,"distances_sum":1782.3915565908999}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8030370670995678,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.046875,"distances_sum":1879.208878343652}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6845703125,"f1":0.8050314269064277,"seconds":4.69014048576355e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.0625,"distances_sum":1854.7071319382812}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6845703125,"f1":0.8030370670995678,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.046875,"distances_sum":1879.208878343652}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9062989094239101,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.671875,"distances_sum":2376.4371384594233}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9104317557442565,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.6953125,"distances_sum":2448.3362817681755}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9425543206793212,"seconds":6.051734089851379e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.796875,"distances_sum":2698.7580018355466}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9457074175824182,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.796875,"distances_sum":2691.0963186467743}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9457074175824182,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.796875,"distances_sum":2691.0963186467743}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9457074175824182,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.7434358596801758e-6,"evaluations":8.796875,"distances_sum":2691.0963186467743}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1748046875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1748046875,"f1":null,"seconds":2.600252628326416e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.609375,"distances_sum":462.40159885994916}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1748046875,"state":{"ssize":5,"bsize":1},"perf":{"precision":null,"recall":0.1748046875,"f1":null,"seconds":2.600252628326416e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.609375,"distances_sum":462.40159885994916}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":7,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":2.691522240638733e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.765625,"distances_sum":482.6563331259427}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8423977064602075,"seconds":4.84660267829895e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1875,"distances_sum":1846.512934363635}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8573379745254753,"seconds":4.978850483894348e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1953125,"distances_sum":1996.78307004395}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7131372100122105,"seconds":4.103407263755798e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.34375,"distances_sum":1394.5485572009013}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8573379745254753,"seconds":4.978850483894348e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1953125,"distances_sum":1996.78307004395}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9408768315018321,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":2452.8048565327504}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9365212912087917,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.828125,"distances_sum":2364.560457289962}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9381040834165839,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2384.3760273473426}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9011332417582426,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.546875,"distances_sum":2148.7136996293752}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.896484375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9408768315018321,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":2452.8048565327504}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.896484375,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.896484375,"f1":0.9408768315018321,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.765625,"distances_sum":2452.8048565327504}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8529496545121552,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.203125,"distances_sum":1854.820884870023}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8529496545121552,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.203125,"distances_sum":1854.820884870023}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9358917124542132,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.703125,"distances_sum":2357.5404882474936}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.875710227272728,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.34375,"distances_sum":1958.4626132983633}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8857421875,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.8857421875,"f1":0.9358917124542132,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.703125,"distances_sum":2357.5404882474936}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.970501373626374,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2600.7217732088207}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9472184065934072,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.7734375,"distances_sum":2473.091079888676}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970501373626374,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2600.7217732088207}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.970501373626374,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":8.9296875,"distances_sum":2600.7217732088207}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8559534215784226,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.03125,"distances_sum":2028.6255697871206}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5263671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5263671875,"f1":0.6725236568986573,"seconds":4.213303327560425e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.4375,"distances_sum":1374.6215655414599}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8559534215784226,"seconds":5.2638351917266846e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.03125,"distances_sum":2028.6255697871206}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9386103479853486,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.609375,"distances_sum":2558.6900070336837}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9395406676656682,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.671875,"distances_sum":2541.6099635265728}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9395406676656682,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.671875,"distances_sum":2541.6099635265728}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9714342948717953,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2757.8662674503894}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703125000000001,"seconds":5.047023296356201e-5,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.890625,"distances_sum":2723.848384268308}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714342948717953,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2757.8662674503894}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9714342948717953,"seconds":6.210058927536011e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.859375,"distances_sum":2757.8662674503894}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.578125,"f1":0.7102713258963265,"seconds":4.366040229797363e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.6875,"distances_sum":841.1455680858538}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.798190351315352,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.9296875,"distances_sum":1032.573757363495}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.798190351315352,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":7.9296875,"distances_sum":1032.573757363495}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9383272977022983,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6171875,"distances_sum":1477.6881785544285}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9362153471528478,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6640625,"distances_sum":1486.068080890289}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9014485514485524,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.5078125,"distances_sum":1333.3191235480463}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8639027639027648,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.25,"distances_sum":1214.4933742856165}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8677400724275733,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.2578125,"distances_sum":1220.9975171763494}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":8,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9383272977022983,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.6171875,"distances_sum":1477.6881785544285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":1627.33066702513}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":12,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9620936355311361,"seconds":6.087124347686768e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8671875,"distances_sum":1565.6298623116027}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638049450549455,"seconds":6.1802566051483154e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8671875,"distances_sum":1582.287500989342}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846157,"seconds":6.301328539848328e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8984375,"distances_sum":1621.261809890071}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9693853021978024,"seconds":6.0442835092544556e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.8828125,"distances_sum":1607.2441698851096}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.950600961538462,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.75,"distances_sum":1546.2163457403065}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9574862637362641,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.796875,"distances_sum":1560.598848999992}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714686355311359,"seconds":5.805864930152893e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.84375,"distances_sum":1635.7460144156528}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":1627.33066702513}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.5459954738616943e-6,"evaluations":8.90625,"distances_sum":1627.33066702513}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3974609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3974609375,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":5.765625,"distances_sum":658.7105409900969}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5751953125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5751953125,"f1":0.7130373099123103,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.1953125,"distances_sum":929.2905554429123}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5751953125,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.5751953125,"f1":0.7130373099123103,"seconds":4.207715392112732e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.1953125,"distances_sum":929.2905554429123}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8173545204795214,"seconds":5.075708031654358e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":7.9375,"distances_sum":1190.0376818131342}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9492304570429574,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7734375,"distances_sum":1707.3301109649503}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9054658882783889,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.640625,"distances_sum":1507.2324743994702}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8556381118881129,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.34375,"distances_sum":1318.882321339386}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9492304570429574,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.7734375,"distances_sum":1707.3301109649503}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9619619963369967,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8671875,"distances_sum":1756.5866419688555}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596039377289383,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.9296875,"distances_sum":1743.8312167630581}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.984375,"distances_sum":1830.563089044949}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9545475357975363,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.8671875,"distances_sum":1712.1923519936236}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.984375,"distances_sum":1830.563089044949}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.97967032967033,"seconds":6.260350346565247e-6,"exhaustive_search_seconds":1.6167759895324707e-6,"evaluations":8.984375,"distances_sum":1830.563089044949}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.53125,"distances_sum":308.47651831728155}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.19140625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.19140625,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.53125,"distances_sum":308.47651831728155}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.19140625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.19140625,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.53125,"distances_sum":308.47651831728155}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8520271395271405,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.8984375,"distances_sum":1335.2320615529113}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8520271395271405,"seconds":5.07943332195282e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.8984375,"distances_sum":1335.2320615529113}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9704441391941396,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8671875,"distances_sum":1802.5494351883}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704441391941396,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8671875,"distances_sum":1802.5494351883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704441391941396,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8671875,"distances_sum":1802.5494351883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9704441391941396,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.8671875,"distances_sum":1802.5494351883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8492824883449891,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.0390625,"distances_sum":1406.3781453631852}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.7726287601287608,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":7.2109375,"distances_sum":1171.8236029553816}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8492824883449891,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.0390625,"distances_sum":1406.3781453631852}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9013023434898444,"seconds":4.852190613746643e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.5546875,"distances_sum":1554.7079326500973}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9313904845154848,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.5625,"distances_sum":1746.6246166740525}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8979770229770236,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.46875,"distances_sum":1583.2561924159938}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9431604853479859,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.6640625,"distances_sum":1811.71080833857}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9431604853479859,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.6640625,"distances_sum":1811.71080833857}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9757097069597072,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.921875,"distances_sum":1972.5346773308922}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9452323717948725,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.6171875,"distances_sum":1853.617158330695}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9661114926739929,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.8203125,"distances_sum":1922.9989739974394}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669127747252751,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.796875,"distances_sum":1927.2103248980757}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9640083874458877,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.84375,"distances_sum":1901.7490589352055}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757097069597072,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.921875,"distances_sum":1972.5346773308922}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9757097069597072,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.125037670135498e-6,"evaluations":8.921875,"distances_sum":1972.5346773308922}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.3080577850341797e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.703125,"distances_sum":654.907571184322}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7834053099678109,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.6484375,"distances_sum":1193.5239378411138}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6640625,"f1":0.7834053099678109,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.6484375,"distances_sum":1193.5239378411138}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9239774114774122,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.578125,"distances_sum":1655.194721716543}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9511046245421251,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.71875,"distances_sum":1817.2761259152442}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.951659798534799,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.796875,"distances_sum":1785.2616362057297}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9511046245421251,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.71875,"distances_sum":1817.2761259152442}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9709821428571432,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.90625,"distances_sum":1881.7638471516238}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652415293040296,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.828125,"distances_sum":1873.062484072349}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9654246794871796,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.84375,"distances_sum":1890.4205555713718}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709821428571432,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.90625,"distances_sum":1881.7638471516238}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9709821428571432,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.90625,"distances_sum":1881.7638471516238}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.189453125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.189453125,"f1":null,"seconds":4.326924681663513e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":5.171875,"distances_sum":349.433733860004}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8556100149850159,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0078125,"distances_sum":1413.73677383449}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8556100149850159,"seconds":6.066635251045227e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.0078125,"distances_sum":1413.73677383449}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9416151556776562,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6875,"distances_sum":1705.8591075320833}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9416151556776562,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6875,"distances_sum":1705.8591075320833}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9622424450549452,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8203125,"distances_sum":1850.6631313513942}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9484832875457878,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8046875,"distances_sum":1758.96231753351}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9747424450549454,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":1899.2082557384874}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747424450549454,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":1899.2082557384874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9747424450549454,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.921875,"distances_sum":1899.2082557384874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8596315143190151,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.2578125,"distances_sum":1331.8366442397155}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8799830377955384,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.3828125,"distances_sum":1408.8209173914156}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1845703125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1845703125,"f1":null,"seconds":2.9783695936203003e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":4.46875,"distances_sum":350.6121464633648}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.798828125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.798828125,"f1":0.8799830377955384,"seconds":4.781410098075867e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.3828125,"distances_sum":1408.8209173914156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9041373556998566,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.484375,"distances_sum":1502.9451787370142}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9325695138195144,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.5546875,"distances_sum":1635.081207691816}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9325695138195144,"seconds":5.153939127922058e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.5546875,"distances_sum":1635.081207691816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9473672161172169,"seconds":6.338581442832947e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.7421875,"distances_sum":1707.9195903610407}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956593406593407,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.796875,"distances_sum":1760.067248861216}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9579670329670337,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8203125,"distances_sum":1742.9789293748559}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9579670329670337,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8203125,"distances_sum":1742.9789293748559}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9579670329670337,"seconds":5.953013896942139e-6,"exhaustive_search_seconds":1.3187527656555176e-6,"evaluations":8.8203125,"distances_sum":1742.9789293748559}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1865234375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1865234375,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":5.2109375,"distances_sum":321.08572077049075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":3.0640512704849243e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":4.8671875,"distances_sum":331.15605674335296}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8656234390609399,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9375,"distances_sum":1455.3714988776208}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8656234390609399,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":7.9375,"distances_sum":1455.3714988776208}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597928113553119,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":1908.2622892470479}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8958707958707964,"seconds":6.429851055145264e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.3046875,"distances_sum":1596.7479764184884}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9536343864468868,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.765625,"distances_sum":1876.6368551289856}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9597928113553119,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.796875,"distances_sum":1908.2622892470479}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":7,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9375,"distances_sum":1978.765324197174}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.963284111721612,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.84375,"distances_sum":1907.8311181122408}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607600732600736,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8046875,"distances_sum":1885.9428533197033}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9375,"distances_sum":1978.765324197174}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":7,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.977512591575092,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9375,"distances_sum":1978.765324197174}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.09375,"distances_sum":339.5360881827957}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8527580058830068,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9296875,"distances_sum":1434.1532507394177}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7996189574314582,"seconds":4.634261131286621e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.6015625,"distances_sum":1261.1207780904165}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8527580058830068,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9296875,"distances_sum":1434.1532507394177}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9381639194139201,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.734375,"distances_sum":1761.5238610584836}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9408055486180494,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6953125,"distances_sum":1806.6691649870388}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.9408055486180494,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6953125,"distances_sum":1806.6691649870388}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9810267857142861,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2009.043651923044}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9615155677655679,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":1904.3928191696225}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688072344322347,"seconds":5.748122930526733e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":1920.5483112344427}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9537660256410261,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.796875,"distances_sum":1856.063381682494}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9457646520146524,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.6953125,"distances_sum":1818.056218209548}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9501748251748258,"seconds":5.889683961868286e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7265625,"distances_sum":1863.0118305155934}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579644314019318,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.875,"distances_sum":1873.6706252615693}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9810267857142861,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2009.043651923044}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":8,"bsize":12},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9810267857142861,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2009.043651923044}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7987762237762245,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":1178.5971184206032}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2333984375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.2633543014526367e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":5.9609375,"distances_sum":370.8892828505422}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":3.1758099794387817e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.1484375,"distances_sum":387.16707675938756}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7987762237762245,"seconds":4.637986421585083e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.796875,"distances_sum":1178.5971184206032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.86062010905761,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.9453125,"distances_sum":1336.4797193463407}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8802718115218123,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.0078125,"distances_sum":1436.725770969522}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.8802718115218123,"seconds":5.204230546951294e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.0078125,"distances_sum":1436.725770969522}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9037009865134874,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.375,"distances_sum":1508.34433853596}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9397638819513825,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6171875,"distances_sum":1665.6851458278632}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9144090284715295,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.4453125,"distances_sum":1541.6668838551134}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638221153846157,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":1788.920153889257}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9477220695970702,"seconds":5.362555384635925e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6875,"distances_sum":1719.9429002982115}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9638221153846157,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":1788.920153889257}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9638221153846157,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8828125,"distances_sum":1788.920153889257}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.32421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.32421875,"f1":null,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":5.1015625,"distances_sum":609.7763081543167}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.32421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.32421875,"f1":null,"seconds":3.5241246223449707e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":5.1015625,"distances_sum":609.7763081543167}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.900615530303031,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.453125,"distances_sum":1558.1495966824577}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.900615530303031,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.453125,"distances_sum":1558.1495966824577}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9466975732600739,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.765625,"distances_sum":1758.1489140604845}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9268086080586089,"seconds":5.2656978368759155e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.5625,"distances_sum":1696.145653043891}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9466975732600739,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.765625,"distances_sum":1758.1489140604845}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9466975732600739,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.2330710887908936e-6,"evaluations":8.765625,"distances_sum":1758.1489140604845}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5224609375,"f1":0.6707611832611837,"seconds":4.544854164123535e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.984375,"distances_sum":919.1818847749709}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1875,"f1":null,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.265625,"distances_sum":365.61762594785677}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.791312160062161,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8828125,"distances_sum":1211.5595930693426}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.791312160062161,"seconds":4.667788743972778e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.8828125,"distances_sum":1211.5595930693426}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.943292124542125,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.671875,"distances_sum":1805.354898186977}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9177057317682324,"seconds":6.780028343200684e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5,"distances_sum":1664.1148887653994}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.8977886696636703,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3984375,"distances_sum":1554.7322910054484}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9394459706959714,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6953125,"distances_sum":1755.6120971142732}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8449553918303926,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.0390625,"distances_sum":1418.346065292047}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.943292124542125,"seconds":5.431473255157471e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.671875,"distances_sum":1805.354898186977}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9513793498168502,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7734375,"distances_sum":1829.609095317264}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406598,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.828125,"distances_sum":1914.8764258184926}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9525698260073265,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.75,"distances_sum":1850.6526818612667}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714291,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":1963.8015680013932}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9619104853479858,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":1866.6730549407853}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9616643772893777,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8203125,"distances_sum":1872.9777895443951}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714291,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":1963.8015680013932}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9770089285714291,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.90625,"distances_sum":1963.8015680013932}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.583984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.583984375,"f1":0.7229728604728612,"seconds":4.412606358528137e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.5859375,"distances_sum":1047.3026297560116}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7144709457209463,"seconds":4.0121376514434814e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.5,"distances_sum":1005.9104000997855}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8579966908091916,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2578125,"distances_sum":1466.010743827225}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8579966908091916,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2578125,"distances_sum":1466.010743827225}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496336996337001,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":1861.9073997730086}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9429403929403937,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.75,"distances_sum":1802.104225661648}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.806640625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.806640625,"f1":0.8865530303030312,"seconds":4.908069968223572e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.484375,"distances_sum":1536.6704205244582}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8672783813408822,"seconds":5.116686224937439e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3203125,"distances_sum":1509.4272919045766}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9496336996337001,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":1861.9073997730086}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580789002664012,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.890625,"distances_sum":1905.3620534131608}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957486263736264,"seconds":5.947425961494446e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.8515625,"distances_sum":1916.596199988546}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9538060897435898,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":1890.8342938998699}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9542124542124548,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.875,"distances_sum":1866.4279083466627}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479858,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9296875,"distances_sum":1894.3442500619506}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479858,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9296875,"distances_sum":1894.3442500619506}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479858,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.9296875,"distances_sum":1894.3442500619506}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5244140625,"f1":null,"seconds":4.116445779800415e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.8203125,"distances_sum":1212.058098575941}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":0.984375,"recall":0.3984375,"f1":0.5437291874791874,"seconds":3.820285201072693e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":5.7421875,"distances_sum":887.4905974951165}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5244140625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5244140625,"f1":null,"seconds":4.116445779800415e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.8203125,"distances_sum":1212.058098575941}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9811755952380953,"recall":0.6865234375,"f1":0.7986024392274399,"seconds":4.557892680168152e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.2734375,"distances_sum":1693.8652970235987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9785342261904764,"recall":0.681640625,"f1":0.7882783882783888,"seconds":4.751607775688171e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.1796875,"distances_sum":1747.6113700488988}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9848307291666666,"recall":0.841796875,"f1":0.9031085451007334,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6484375,"distances_sum":2416.0418873822678}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9871186755952381,"recall":0.7861328125,"f1":0.8693619531510164,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.28125,"distances_sum":2154.5899144083783}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":0.9867001488095237,"recall":0.771484375,"f1":0.8585739781052287,"seconds":4.986301064491272e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.6015625,"distances_sum":2022.3738023753638}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9854538690476189,"recall":0.759765625,"f1":0.8493719821844827,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.5,"distances_sum":1998.0110224454336}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":5,"bsize":7},"perf":{"precision":0.9848307291666666,"recall":0.841796875,"f1":0.9031085451007334,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6484375,"distances_sum":2416.0418873822678}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9878627232142858,"recall":0.916015625,"f1":0.9460300766941395,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8515625,"distances_sum":2702.5309049512875}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.9865606398809523,"recall":0.9111328125,"f1":0.9444160657051285,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":2726.6888771841577}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":8,"bsize":10}, perf: {"precision":0.9848121279761903,"recall":0.931640625,"f1":0.9552848843864469,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2802.203824258114}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.982421875,"recall":0.9091796875,"f1":0.9412417010073266,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8046875,"distances_sum":2731.400556953022}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":0.9865606398809523,"recall":0.86328125,"f1":0.9159047332875464,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":2490.3894466184897}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":6,"bsize":8}, perf: {"precision":0.9744140625,"recall":0.8828125,"f1":0.9219844608516488,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.7109375,"distances_sum":2640.538013981162}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":8,"bsize":10},"perf":{"precision":0.9848121279761903,"recall":0.931640625,"f1":0.9552848843864469,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2802.203824258114}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":8,"bsize":10},"perf":{"precision":0.9848121279761903,"recall":0.931640625,"f1":0.9552848843864469,"seconds":5.934387445449829e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8828125,"distances_sum":2802.203824258114}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.40625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.40625,"f1":null,"seconds":3.917142748832703e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":5.9765625,"distances_sum":868.3526066270344}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.40625,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.40625,"f1":null,"seconds":3.917142748832703e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":5.9765625,"distances_sum":868.3526066270344}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8152633824508833,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":7.1953125,"distances_sum":1643.8707390795248}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.70703125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.70703125,"f1":0.8150438103563111,"seconds":4.673376679420471e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":7.3203125,"distances_sum":1671.7562121718788}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.861542624042625,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":7.46875,"distances_sum":1900.3522847019415}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.861542624042625,"seconds":4.883855581283569e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":7.46875,"distances_sum":1900.3522847019415}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9623168498168502,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.8828125,"distances_sum":2627.5039328265952}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9478308150183153,"seconds":5.755573511123657e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.6875,"distances_sum":2576.6885666065295}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9506982600732607,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.828125,"distances_sum":2546.0267384422345}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8807874417249425,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.265625,"distances_sum":2043.0785343542657}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9623168498168502,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.8828125,"distances_sum":2627.5039328265952}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9623168498168502,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.1418014764785767e-6,"evaluations":8.8828125,"distances_sum":2627.5039328265952}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.875,"distances_sum":886.8236823902378}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4111328125,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.5390257835388184e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.875,"distances_sum":886.8236823902378}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8009915431790441,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.21875,"distances_sum":1659.3253768016723}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8698889652014662,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.5078125,"distances_sum":1940.6628427836745}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.580078125,"f1":0.7179079600954607,"seconds":4.135072231292725e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.046875,"distances_sum":1335.4390889681338}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8480649558774567,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.453125,"distances_sum":1908.2235389194173}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8698889652014662,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.5078125,"distances_sum":1940.6628427836745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9212225274725282,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.6796875,"distances_sum":2371.051185750629}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.933940018315019,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.78125,"distances_sum":2435.59645730102}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9641426282051285,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2680.0436683977023}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9244391025641034,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7109375,"distances_sum":2404.099111107157}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9641426282051285,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2680.0436683977023}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9641426282051285,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.890625,"distances_sum":2680.0436683977023}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.28125,"distances_sum":1006.7154208454706}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.42578125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.42578125,"f1":null,"seconds":3.850087523460388e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.2265625,"distances_sum":1012.6964992452461}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.71875,"f1":0.8262752872127881,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.328125,"distances_sum":1726.380916851156}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.71875,"f1":0.8262752872127881,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.328125,"distances_sum":1726.380916851156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.8642595251970261,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.703125,"distances_sum":2008.087616304558}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9252206127206134,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.59375,"distances_sum":2467.642156021419}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8769470113220122,"seconds":6.094574928283691e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.4453125,"distances_sum":2060.9497039436897}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8903445512820521,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.546875,"distances_sum":2155.714157010678}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9252206127206134,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.59375,"distances_sum":2467.642156021419}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9742044413919417,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9375,"distances_sum":2751.8079771119883}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9579670329670333,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":2630.1356507366177}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9530048076923081,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8203125,"distances_sum":2626.082424962779}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9312385531135539,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7421875,"distances_sum":2439.5791772586563}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9619276556776564,"seconds":5.494803190231323e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.875,"distances_sum":2676.0354858321707}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646233974358978,"seconds":6.163492798805237e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8359375,"distances_sum":2728.879458283603}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9742044413919417,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9375,"distances_sum":2751.8079771119883}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9742044413919417,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9375,"distances_sum":2751.8079771119883}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7066709332334338,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.109375,"distances_sum":1231.323635589815}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7128300518925528,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.25,"distances_sum":1280.5983937918954}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.572265625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.572265625,"f1":0.7128300518925528,"seconds":4.732981324195862e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.25,"distances_sum":1280.5983937918954}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9022238178488188,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.421875,"distances_sum":2169.1834015959384}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9300168581418587,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2350.813332892342}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9300168581418587,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2350.813332892342}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9724561896436902,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2678.0938705189437}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9587854853479856,"seconds":4.122033715248108e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.875,"distances_sum":2585.258267938036}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9729166666666669,"seconds":6.143003702163696e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9609375,"distances_sum":2661.1298534100374}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9724561896436902,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2678.0938705189437}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9724561896436902,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2678.0938705189437}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53515625, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.53515625,"f1":null,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.8671875,"distances_sum":1196.0736832808902}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.234375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.234375,"f1":null,"seconds":3.8053840398788452e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.125,"distances_sum":533.6623110049188}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.53515625,"state":{"ssize":2,"bsize":3},"perf":{"precision":null,"recall":0.53515625,"f1":null,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.8671875,"distances_sum":1196.0736832808902}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.8847921176046184,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2109375,"distances_sum":2095.199638965636}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80859375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.80859375,"f1":0.8847921176046184,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2109375,"distances_sum":2095.199638965636}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9354109432234439,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6171875,"distances_sum":2502.1293112698595}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9076954295704305,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.59375,"distances_sum":2245.186653541737}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9354109432234439,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6171875,"distances_sum":2502.1293112698595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.888671875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9354109432234439,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6171875,"distances_sum":2502.1293112698595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8338609307359315,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.421875,"distances_sum":1716.1036032292873}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5146484375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5146484375,"f1":0.6645611333111339,"seconds":3.991648554801941e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.625,"distances_sum":1142.422941676524}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.728515625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.728515625,"f1":0.8338609307359315,"seconds":4.734843969345093e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.421875,"distances_sum":1716.1036032292873}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9006327006327012,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2265625,"distances_sum":2223.4220990267477}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9349244505494507,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6796875,"distances_sum":2415.4149060796294}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9146920787545795,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4453125,"distances_sum":2275.610215190503}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9164809149184155,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4765625,"distances_sum":2303.8961752246246}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9349244505494507,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6796875,"distances_sum":2415.4149060796294}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9753720238095241,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2708.161789344414}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9525183150183154,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7109375,"distances_sum":2546.7139566328383}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.958636675824176,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7578125,"distances_sum":2596.0306981117124}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9575206043956048,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7890625,"distances_sum":2567.7202447390673}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596955128205134,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8203125,"distances_sum":2575.9348189584643}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9753720238095241,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2708.161789344414}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9753720238095241,"seconds":5.984678864479065e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.8515625,"distances_sum":2708.161789344414}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8716928904428911,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.84375,"distances_sum":1985.9128205644115}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8481299950049958,"seconds":4.92483377456665e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.6015625,"distances_sum":1880.0120061575315}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8705971112221119,"seconds":1.1341646313667297e-5,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.8203125,"distances_sum":1986.1147876920359}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8705971112221119,"seconds":1.1341646313667297e-5,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.8203125,"distances_sum":1986.1147876920359}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498397435897441,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2538.8247750629644}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9099874084249092,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.2734375,"distances_sum":2208.7001434484623}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9263106684981691,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.59375,"distances_sum":2350.7421298314985}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9283799533799539,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.59375,"distances_sum":2377.6056114716025}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9451553654678659,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.734375,"distances_sum":2516.2463128313348}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9498397435897441,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.7421875,"distances_sum":2538.8247750629644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9764365842490843,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.90625,"distances_sum":2729.2292837652526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9704441391941394,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2669.160929326224}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9572401556776562,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.796875,"distances_sum":2597.50896101607}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":12,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659798534798539,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.859375,"distances_sum":2638.5327001994765}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9764365842490843,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.90625,"distances_sum":2729.2292837652526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9764365842490843,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.90625,"distances_sum":2729.2292837652526}}, n: 9
inertia(cfft.distances) = 20.821586114207854
inertia(cdnet.distances) = 21.241258610541497
inertia(crand.distances) = 25.21018717948718
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> k=5
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333332
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9177777777777778
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8777777777777779
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8999999999999999
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8888888888888888
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9222222222222222
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.86
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 1, 2, 2, 3, 3, 3, 3, 2, 3, 3, 1, 2, 1, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, nc.class_map = [1, 3, 2, 3, 2, 3, 2, 2, 2, 3, 3, 1, 1, 3]
acc = 0.9266666666666666
3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 8, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
finished with 14 centroids; started with 12
*** starting iteration: 1; err: [Inf, 0.3086000055164962] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3086000055164962, 0.17637904867442566] ***
*** starting iteration: 2; err: [Inf, 0.3086000055164962, 0.17637904867442566] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231] ***
*** starting iteration: 3; err: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231, 0.16040751547908436] ***
*** starting iteration: 4; err: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231, 0.16040751547908436] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231, 0.16040751547908436, 0.15939127007871018] ***
*** starting iteration: 5; err: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231, 0.16040751547908436, 0.15939127007871018] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231, 0.16040751547908436, 0.15939127007871018, 0.15939127007871018] ***
*** finished computation of 12 references, err: [Inf, 0.3086000055164962, 0.17637904867442566, 0.163372930959231, 0.16040751547908436, 0.15939127007871018, 0.15939127007871018] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 12, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
finished with 14 centroids; started with 12
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3437000038942162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3437000038942162, 0.23534620480632437] ***
*** finished computation of 7 references, err: [Inf, 0.3437000038942162, 0.23534620480632437] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 8]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 7: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5805999961057584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5805999961057584, 0.44748128748226806] ***
*** finished computation of 7 references, err: [Inf, 0.5805999961057584, 0.44748128748226806] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 23, 3]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 23), (3, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 8, 29]]
** centroid: 3, normalized-entropy: 0.7531979910695015, [(2, 8), (3, 29)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.706999997826585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.706999997826585, 0.7341789380091154] ***
*** finished computation of 7 references, err: [Inf, 2.706999997826585, 0.7341789380091154] ***
*** center 1: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 35]]
** centroid: 3, normalized-entropy: 0.9747785474909672, [(2, 24), (3, 35)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4317667565867163] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4317667565867163, 0.21358228689035738] ***
*** starting iteration: 2; err: [Inf, 0.4317667565867163, 0.21358228689035738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4317667565867163, 0.21358228689035738, 0.2035891106113457] ***
*** starting iteration: 3; err: [Inf, 0.4317667565867163, 0.21358228689035738, 0.2035891106113457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4317667565867163, 0.21358228689035738, 0.2035891106113457, 0.19876446551178184] ***
*** finished computation of 7 references, err: [Inf, 0.4317667565867163, 0.21358228689035738, 0.2035891106113457, 0.19876446551178184] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 29, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 3, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4165677615554077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4165677615554077, 0.28583883174787245] ***
*** starting iteration: 2; err: [Inf, 0.4165677615554077, 0.28583883174787245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4165677615554077, 0.28583883174787245, 0.2429428043847783] ***
*** starting iteration: 3; err: [Inf, 0.4165677615554077, 0.28583883174787245, 0.2429428043847783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4165677615554077, 0.28583883174787245, 0.2429428043847783, 0.20585236721607586] ***
*** finished computation of 7 references, err: [Inf, 0.4165677615554077, 0.28583883174787245, 0.2429428043847783, 0.20585236721607586] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 18, 3]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 18), (3, 3)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 8]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 16), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6130890589803412] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130890589803412, 0.22671005103975495] ***
*** starting iteration: 2; err: [Inf, 0.6130890589803412, 0.22671005103975495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130890589803412, 0.22671005103975495, 0.18303281202636035] ***
*** starting iteration: 3; err: [Inf, 0.6130890589803412, 0.22671005103975495, 0.18303281202636035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6130890589803412, 0.22671005103975495, 0.18303281202636035, 0.1611209142632164] ***
*** finished computation of 7 references, err: [Inf, 0.6130890589803412, 0.22671005103975495, 0.18303281202636035, 0.1611209142632164] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 11, 9]]
** centroid: 2, normalized-entropy: 0.9927744539878083, [(2, 11), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7939999974782783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7939999974782783, 0.4428948671342691] ***
*** starting iteration: 2; err: [Inf, 0.7939999974782783, 0.4428948671342691] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7939999974782783, 0.4428948671342691, 0.4200972164904367] ***
*** starting iteration: 3; err: [Inf, 0.7939999974782783, 0.4428948671342691, 0.4200972164904367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7939999974782783, 0.4428948671342691, 0.4200972164904367, 0.4185593985462721] ***
*** finished computation of 7 references, err: [Inf, 0.7939999974782783, 0.4428948671342691, 0.4200972164904367, 0.4185593985462721] ***
*** center 1: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 3: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 4, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3876000014332718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3876000014332718, 0.25887798294494585] ***
*** starting iteration: 2; err: [Inf, 0.3876000014332718, 0.25887798294494585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3876000014332718, 0.25887798294494585, 0.2463397320249453] ***
*** starting iteration: 3; err: [Inf, 0.3876000014332718, 0.25887798294494585, 0.2463397320249453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3876000014332718, 0.25887798294494585, 0.2463397320249453, 0.2433472251390548] ***
*** finished computation of 7 references, err: [Inf, 0.3876000014332718, 0.25887798294494585, 0.2463397320249453, 0.2433472251390548] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 3, 19]]
** centroid: 1, normalized-entropy: 0.5746356978376794, [(2, 3), (3, 19)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4704000057904851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4704000057904851, 0.4905442272160552] ***
*** starting iteration: 2; err: [Inf, 1.4704000057904851, 0.4905442272160552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4704000057904851, 0.4905442272160552, 0.40935556239051524] ***
*** starting iteration: 3; err: [Inf, 1.4704000057904851, 0.4905442272160552, 0.40935556239051524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4704000057904851, 0.4905442272160552, 0.40935556239051524, 0.3444379503978269] ***
*** finished computation of 7 references, err: [Inf, 1.4704000057904851, 0.4905442272160552, 0.40935556239051524, 0.3444379503978269] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 6: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4041343082881515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4041343082881515, 0.23123972504023288] ***
*** starting iteration: 2; err: [Inf, 0.4041343082881515, 0.23123972504023288] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383] ***
*** starting iteration: 3; err: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717] ***
*** starting iteration: 4; err: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717, 0.19293032835492002] ***
*** starting iteration: 5; err: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717, 0.19293032835492002] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717, 0.19293032835492002, 0.18660905253837448] ***
*** starting iteration: 6; err: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717, 0.19293032835492002, 0.18660905253837448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717, 0.19293032835492002, 0.18660905253837448, 0.18660905253837448] ***
*** finished computation of 7 references, err: [Inf, 0.4041343082881515, 0.23123972504023288, 0.20955255053197383, 0.20065405924938717, 0.19293032835492002, 0.18660905253837448, 0.18660905253837448] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 2]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 7]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5726017792726356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845] ***
*** starting iteration: 2; err: [Inf, 0.5726017792726356, 0.28045028736373845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713] ***
*** starting iteration: 3; err: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974] ***
*** starting iteration: 4; err: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063] ***
*** starting iteration: 5; err: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063, 0.20968337845802693] ***
*** starting iteration: 6; err: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063, 0.20968337845802693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063, 0.20968337845802693, 0.20758808104057574] ***
*** starting iteration: 7; err: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063, 0.20968337845802693, 0.20758808104057574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063, 0.20968337845802693, 0.20758808104057574, 0.20717147545153033] ***
*** finished computation of 7 references, err: [Inf, 0.5726017792726356, 0.28045028736373845, 0.2314322634074713, 0.21702013510432974, 0.21154971950180063, 0.20968337845802693, 0.20758808104057574, 0.20717147545153033] ***
*** center 1: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 2, 1]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 12]]
** centroid: 7, normalized-entropy: 0.9957274520849256, [(2, 14), (3, 12)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3576183587517204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3576183587517204, 0.20786960510803354] ***
*** starting iteration: 2; err: [Inf, 0.3576183587517204, 0.20786960510803354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377] ***
*** starting iteration: 3; err: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377, 0.20280280529900818] ***
*** starting iteration: 4; err: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377, 0.20280280529900818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377, 0.20280280529900818, 0.20111345477364265] ***
*** starting iteration: 5; err: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377, 0.20280280529900818, 0.20111345477364265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377, 0.20280280529900818, 0.20111345477364265, 0.20088309651960248] ***
*** finished computation of 7 references, err: [Inf, 0.3576183587517204, 0.20786960510803354, 0.2058639386610377, 0.20280280529900818, 0.20111345477364265, 0.20088309651960248] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 6]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 4]]
** centroid: 5, normalized-entropy: 1.0, [(2, 4), (3, 4)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 7: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7880540759791925] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7880540759791925, 0.373166846689112] ***
*** finished computation of 3 references, err: [Inf, 0.7880540759791925, 0.373166846689112] ***
*** center 1: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 10]]
** centroid: 2, normalized-entropy: 0.7918583525674836, [(2, 32), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.474335260626561] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.474335260626561, 1.5242106300721425] ***
*** finished computation of 3 references, err: [Inf, 4.474335260626561, 1.5242106300721425] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 2]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 26), (3, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 30]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 7), (3, 30)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9743623748926425] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9743623748926425, 0.6857146177768666] ***
*** finished computation of 3 references, err: [Inf, 0.9743623748926425, 0.6857146177768666] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [25, 2, 0]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(1, 25), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 35]]
** centroid: 3, normalized-entropy: 0.9985532860835362, [(2, 32), (3, 35)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6940891058357918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6940891058357918, 0.3601923254453125] ***
*** finished computation of 3 references, err: [Inf, 0.6940891058357918, 0.3601923254453125] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 30, 7]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5955851381187347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5955851381187347, 0.39433074509673843] ***
*** finished computation of 3 references, err: [Inf, 0.5955851381187347, 0.39433074509673843] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 11, 31]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 11), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.5776399214380086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.5776399214380086, 0.4762181047603282] ***
*** finished computation of 3 references, err: [Inf, 2.5776399214380086, 0.4762181047603282] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 35]]
** centroid: 1, normalized-entropy: 0.9117517586347538, [(2, 17), (3, 35)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.24763146861266067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24763146861266067, 0.1838382391352799] ***
*** starting iteration: 2; err: [Inf, 0.24763146861266067, 0.1838382391352799] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24763146861266067, 0.1838382391352799, 0.175191642523806] ***
*** starting iteration: 3; err: [Inf, 0.24763146861266067, 0.1838382391352799, 0.175191642523806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24763146861266067, 0.1838382391352799, 0.175191642523806, 0.17113396530682742] ***
*** finished computation of 7 references, err: [Inf, 0.24763146861266067, 0.1838382391352799, 0.175191642523806, 0.17113396530682742] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 14, 7]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 14), (3, 7)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7739179608364835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7739179608364835, 0.384667025775371] ***
*** starting iteration: 2; err: [Inf, 0.7739179608364835, 0.384667025775371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7739179608364835, 0.384667025775371, 0.3483726085227641] ***
*** starting iteration: 3; err: [Inf, 0.7739179608364835, 0.384667025775371, 0.3483726085227641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7739179608364835, 0.384667025775371, 0.3483726085227641, 0.31898136429988655] ***
*** finished computation of 7 references, err: [Inf, 0.7739179608364835, 0.384667025775371, 0.3483726085227641, 0.31898136429988655] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 17]]
** centroid: 2, normalized-entropy: 0.9313043685793762, [(2, 32), (3, 17)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38873794057531813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38873794057531813, 0.21932953333779234] ***
*** starting iteration: 2; err: [Inf, 0.38873794057531813, 0.21932953333779234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38873794057531813, 0.21932953333779234, 0.2157224720678788] ***
*** starting iteration: 3; err: [Inf, 0.38873794057531813, 0.21932953333779234, 0.2157224720678788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38873794057531813, 0.21932953333779234, 0.2157224720678788, 0.20975956328139184] ***
*** finished computation of 7 references, err: [Inf, 0.38873794057531813, 0.21932953333779234, 0.2157224720678788, 0.20975956328139184] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 6, 22]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 6), (3, 22)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 4]]
** centroid: 6, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
*** center 7: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1778042735620857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1778042735620857, 0.6424123204013276] ***
*** starting iteration: 2; err: [Inf, 1.1778042735620857, 0.6424123204013276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452] ***
*** starting iteration: 3; err: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452, 0.6354406718434369] ***
*** starting iteration: 4; err: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452, 0.6354406718434369] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452, 0.6354406718434369, 0.6333271501785279] ***
*** starting iteration: 5; err: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452, 0.6354406718434369, 0.6333271501785279] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452, 0.6354406718434369, 0.6333271501785279, 0.6333271501785279] ***
*** finished computation of 3 references, err: [Inf, 1.1778042735620857, 0.6424123204013276, 0.6371496641166452, 0.6354406718434369, 0.6333271501785279, 0.6333271501785279] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 33]]
** centroid: 1, normalized-entropy: 0.9998292601233937, [(2, 32), (3, 33)]
*** center 2: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1867507761662042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755] ***
*** starting iteration: 2; err: [Inf, 1.1867507761662042, 0.45615884374137755] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646] ***
*** starting iteration: 3; err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484] ***
*** starting iteration: 4; err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215] ***
*** starting iteration: 5; err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109] ***
*** starting iteration: 6; err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203] ***
*** starting iteration: 7; err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155] ***
*** starting iteration: 8; err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155, 0.36305906719810155] ***
*** finished computation of 3 references, err: [Inf, 1.1867507761662042, 0.45615884374137755, 0.40979846863028646, 0.38872793212611484, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155, 0.36305906719810155] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.49411548766750685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49411548766750685, 0.3740312506010217] ***
*** starting iteration: 2; err: [Inf, 0.49411548766750685, 0.3740312506010217] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49411548766750685, 0.3740312506010217, 0.3728191492231802] ***
*** starting iteration: 3; err: [Inf, 0.49411548766750685, 0.3740312506010217, 0.3728191492231802] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49411548766750685, 0.3740312506010217, 0.3728191492231802, 0.37308554233441343] ***
*** finished computation of 3 references, err: [Inf, 0.49411548766750685, 0.3740312506010217, 0.3728191492231802, 0.37308554233441343] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 28]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 7]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1147000011964447] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1147000011964447, 0.975010764344735] ***
*** starting iteration: 2; err: [Inf, 1.1147000011964447, 0.975010764344735] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1147000011964447, 0.975010764344735, 0.9434013485580657] ***
*** starting iteration: 3; err: [Inf, 1.1147000011964447, 0.975010764344735, 0.9434013485580657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1147000011964447, 0.975010764344735, 0.9434013485580657, 0.941020101670337] ***
*** starting iteration: 4; err: [Inf, 1.1147000011964447, 0.975010764344735, 0.9434013485580657, 0.941020101670337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1147000011964447, 0.975010764344735, 0.9434013485580657, 0.941020101670337, 0.941020101670337] ***
*** finished computation of 3 references, err: [Inf, 1.1147000011964447, 0.975010764344735, 0.9434013485580657, 0.941020101670337, 0.941020101670337] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 33]]
** centroid: 3, normalized-entropy: 0.998363672593813, [(2, 30), (3, 33)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5117999925561736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346] ***
*** starting iteration: 2; err: [Inf, 1.5117999925561736, 0.9407589399279346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806] ***
*** starting iteration: 3; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135] ***
*** starting iteration: 4; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536] ***
*** starting iteration: 5; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157] ***
*** starting iteration: 6; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084] ***
*** starting iteration: 7; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818] ***
*** starting iteration: 8; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818, 0.5529304150597131] ***
*** starting iteration: 9; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818, 0.5529304150597131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818, 0.5529304150597131, 0.546834265400364] ***
*** starting iteration: 10; err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818, 0.5529304150597131, 0.546834265400364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438] ***
*** finished computation of 3 references, err: [Inf, 1.5117999925561736, 0.9407589399279346, 0.8611746027542806, 0.8227485061579135, 0.6954223182904536, 0.591223306075157, 0.574729655907084, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 28]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 4]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.148999997261073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.148999997261073, 0.5462627045882894] ***
*** starting iteration: 2; err: [Inf, 2.148999997261073, 0.5462627045882894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.148999997261073, 0.5462627045882894, 0.5462627045882894] ***
*** finished computation of 3 references, err: [Inf, 2.148999997261073, 0.5462627045882894, 0.5462627045882894] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2535000082222507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114] ***
*** starting iteration: 2; err: [Inf, 1.2535000082222507, 0.5735602486035114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841] ***
*** starting iteration: 3; err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228] ***
*** starting iteration: 4; err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837] ***
*** starting iteration: 5; err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164] ***
*** starting iteration: 6; err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875] ***
*** starting iteration: 7; err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231] ***
*** starting iteration: 8; err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231, 0.5095178679620593] ***
*** finished computation of 3 references, err: [Inf, 1.2535000082222507, 0.5735602486035114, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231, 0.5095178679620593] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2542000092371177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2542000092371177, 0.5422750109229166] ***
*** starting iteration: 2; err: [Inf, 1.2542000092371177, 0.5422750109229166] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2542000092371177, 0.5422750109229166, 0.5179036862974319] ***
*** starting iteration: 3; err: [Inf, 1.2542000092371177, 0.5422750109229166, 0.5179036862974319] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2542000092371177, 0.5422750109229166, 0.5179036862974319, 0.514410572068384] ***
*** starting iteration: 4; err: [Inf, 1.2542000092371177, 0.5422750109229166, 0.5179036862974319, 0.514410572068384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2542000092371177, 0.5422750109229166, 0.5179036862974319, 0.514410572068384, 0.5137544571407556] ***
*** finished computation of 3 references, err: [Inf, 1.2542000092371177, 0.5422750109229166, 0.5179036862974319, 0.514410572068384, 0.5137544571407556] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 12]]
** centroid: 1, normalized-entropy: 0.8366407419411671, [(2, 33), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0932000067325278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0932000067325278, 0.6897845426487433] ***
*** starting iteration: 2; err: [Inf, 1.0932000067325278, 0.6897845426487433] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638] ***
*** starting iteration: 3; err: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301] ***
*** starting iteration: 4; err: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301, 0.5516464189239734] ***
*** starting iteration: 5; err: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301, 0.5516464189239734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301, 0.5516464189239734, 0.5467572781963245] ***
*** starting iteration: 6; err: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301, 0.5516464189239734, 0.5467572781963245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301, 0.5516464189239734, 0.5467572781963245, 0.5467572781963245] ***
*** finished computation of 3 references, err: [Inf, 1.0932000067325278, 0.6897845426487433, 0.6050224712828638, 0.557215288791301, 0.5516464189239734, 0.5467572781963245, 0.5467572781963245] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.146201461153239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.146201461153239, 0.36348828311403986] ***
*** starting iteration: 2; err: [Inf, 1.146201461153239, 0.36348828311403986] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.146201461153239, 0.36348828311403986, 0.3588753696211] ***
*** starting iteration: 3; err: [Inf, 1.146201461153239, 0.36348828311403986, 0.3588753696211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.146201461153239, 0.36348828311403986, 0.3588753696211, 0.3579413240374337] ***
*** finished computation of 3 references, err: [Inf, 1.146201461153239, 0.36348828311403986, 0.3588753696211, 0.3579413240374337] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0924912248209582] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0924912248209582, 0.3745793939116215] ***
*** starting iteration: 2; err: [Inf, 1.0924912248209582, 0.3745793939116215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0924912248209582, 0.3745793939116215, 0.3641762938989135] ***
*** starting iteration: 3; err: [Inf, 1.0924912248209582, 0.3745793939116215, 0.3641762938989135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0924912248209582, 0.3745793939116215, 0.3641762938989135, 0.36340881301932354] ***
*** finished computation of 3 references, err: [Inf, 1.0924912248209582, 0.3745793939116215, 0.3641762938989135, 0.36340881301932354] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8127121193429532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8127121193429532, 0.4135117443721654] ***
*** starting iteration: 2; err: [Inf, 0.8127121193429532, 0.4135117443721654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871] ***
*** starting iteration: 3; err: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599] ***
*** starting iteration: 4; err: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527] ***
*** starting iteration: 5; err: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307] ***
*** starting iteration: 6; err: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307, 0.3745557654359098] ***
*** finished computation of 3 references, err: [Inf, 0.8127121193429532, 0.4135117443721654, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307, 0.3745557654359098] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 1, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6669999995089926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6669999995089926, 0.516308007074565] ***
*** starting iteration: 2; err: [Inf, 1.6669999995089926, 0.516308007074565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6669999995089926, 0.516308007074565, 0.5096506410273469] ***
*** starting iteration: 3; err: [Inf, 1.6669999995089926, 0.516308007074565, 0.5096506410273469] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6669999995089926, 0.516308007074565, 0.5096506410273469, 0.5096506410273469] ***
*** finished computation of 3 references, err: [Inf, 1.6669999995089926, 0.516308007074565, 0.5096506410273469, 0.5096506410273469] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 24]]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.248500007431792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634] ***
*** starting iteration: 2; err: [Inf, 1.248500007431792, 0.5711418318908634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485] ***
*** starting iteration: 3; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131] ***
*** starting iteration: 4; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364] ***
*** starting iteration: 5; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438] ***
*** starting iteration: 6; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547] ***
*** starting iteration: 7; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574] ***
*** starting iteration: 8; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636] ***
*** starting iteration: 9; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522] ***
*** starting iteration: 10; err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522, 0.5134763422601282] ***
*** finished computation of 3 references, err: [Inf, 1.248500007431792, 0.5711418318908634, 0.5601682212367485, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522, 0.5134763422601282] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 2: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1223000045400378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1223000045400378, 0.5992623402235734] ***
*** starting iteration: 2; err: [Inf, 1.1223000045400378, 0.5992623402235734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005] ***
*** starting iteration: 3; err: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005, 0.5490113569598024] ***
*** starting iteration: 4; err: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005, 0.5490113569598024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005, 0.5490113569598024, 0.5467572781963245] ***
*** starting iteration: 5; err: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005, 0.5490113569598024, 0.5467572781963245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005, 0.5490113569598024, 0.5467572781963245, 0.5467572781963245] ***
*** finished computation of 3 references, err: [Inf, 1.1223000045400378, 0.5992623402235734, 0.5541280712046005, 0.5490113569598024, 0.5467572781963245, 0.5467572781963245] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.780920777208071] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796] ***
*** starting iteration: 2; err: [Inf, 0.780920777208071, 0.4319310184288796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749] ***
*** starting iteration: 3; err: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008] ***
*** starting iteration: 4; err: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454] ***
*** starting iteration: 5; err: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454, 0.35990745047698347] ***
*** starting iteration: 6; err: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454, 0.35990745047698347] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454, 0.35990745047698347, 0.3588753696211] ***
*** starting iteration: 7; err: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454, 0.35990745047698347, 0.3588753696211] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454, 0.35990745047698347, 0.3588753696211, 0.3579413240374337] ***
*** finished computation of 3 references, err: [Inf, 0.780920777208071, 0.4319310184288796, 0.3909636688061749, 0.3668087992890008, 0.3613103957867454, 0.35990745047698347, 0.3588753696211, 0.3579413240374337] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 8]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6367726465470156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367726465470156, 0.3987562424851476] ***
*** starting iteration: 2; err: [Inf, 0.6367726465470156, 0.3987562424851476] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213] ***
*** starting iteration: 3; err: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213, 0.380704498661115] ***
*** starting iteration: 4; err: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213, 0.380704498661115] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213, 0.380704498661115, 0.37768120123165444] ***
*** starting iteration: 5; err: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213, 0.380704498661115, 0.37768120123165444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213, 0.380704498661115, 0.37768120123165444, 0.37752130788233884] ***
*** finished computation of 3 references, err: [Inf, 0.6367726465470156, 0.3987562424851476, 0.38978486031467213, 0.380704498661115, 0.37768120123165444, 0.37752130788233884] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 30]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 6), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 2]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 28), (3, 2)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4239472258364487] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987] ***
*** starting iteration: 2; err: [Inf, 1.4239472258364487, 0.6165493299290987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394] ***
*** starting iteration: 3; err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285] ***
*** starting iteration: 4; err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871] ***
*** starting iteration: 5; err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599] ***
*** starting iteration: 6; err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527] ***
*** starting iteration: 7; err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307] ***
*** starting iteration: 8; err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307, 0.3745557654359098] ***
*** finished computation of 3 references, err: [Inf, 1.4239472258364487, 0.6165493299290987, 0.47506328311029394, 0.4208826683028285, 0.3838143331517871, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307, 0.3745557654359098] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 27]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6739812204826392] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6739812204826392, 0.41775979589526513] ***
*** finished computation of 3 references, err: [Inf, 0.6739812204826392, 0.41775979589526513] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 32]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 13), (3, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.803244598101987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.803244598101987, 0.4065453076699872] ***
*** finished computation of 3 references, err: [Inf, 0.803244598101987, 0.4065453076699872] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 20]]
** centroid: 1, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 1, 0]]
** centroid: 2, normalized-entropy: 0.18717625687320805, [(1, 34), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8876286667132234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8876286667132234, 0.39826721424551764] ***
*** finished computation of 3 references, err: [Inf, 0.8876286667132234, 0.39826721424551764] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 1, 0]]
** centroid: 2, normalized-entropy: 0.2006223243127146, [(1, 31), (2, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5969000064361883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5969000064361883, 0.2543053816400574] ***
*** starting iteration: 2; err: [Inf, 0.5969000064361883, 0.2543053816400574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382] ***
*** starting iteration: 3; err: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382, 0.22127896992905113] ***
*** starting iteration: 4; err: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382, 0.22127896992905113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382, 0.22127896992905113, 0.2186600755871803] ***
*** starting iteration: 5; err: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382, 0.22127896992905113, 0.2186600755871803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382, 0.22127896992905113, 0.2186600755871803, 0.2182234504839225] ***
*** finished computation of 7 references, err: [Inf, 0.5969000064361883, 0.2543053816400574, 0.22501370425356382, 0.22127896992905113, 0.2186600755871803, 0.2182234504839225] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 3]]
** centroid: 1, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5802000043956295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000043956295, 0.27125441565703773] ***
*** starting iteration: 2; err: [Inf, 0.5802000043956295, 0.27125441565703773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000043956295, 0.27125441565703773, 0.25692263550557554] ***
*** starting iteration: 3; err: [Inf, 0.5802000043956295, 0.27125441565703773, 0.25692263550557554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000043956295, 0.27125441565703773, 0.25692263550557554, 0.25578540627061025] ***
*** starting iteration: 4; err: [Inf, 0.5802000043956295, 0.27125441565703773, 0.25692263550557554, 0.25578540627061025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5802000043956295, 0.27125441565703773, 0.25692263550557554, 0.25578540627061025, 0.254851258677641] ***
*** finished computation of 7 references, err: [Inf, 0.5802000043956295, 0.27125441565703773, 0.25692263550557554, 0.25578540627061025, 0.254851258677641] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 3, 2]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 11]]
** centroid: 6, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5964000100318279] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000100318279, 0.2724187101726637] ***
*** starting iteration: 2; err: [Inf, 0.5964000100318279, 0.2724187101726637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000100318279, 0.2724187101726637, 0.2681148209553364] ***
*** starting iteration: 3; err: [Inf, 0.5964000100318279, 0.2724187101726637, 0.2681148209553364] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000100318279, 0.2724187101726637, 0.2681148209553364, 0.2636423167298595] ***
*** starting iteration: 4; err: [Inf, 0.5964000100318279, 0.2724187101726637, 0.2681148209553364, 0.2636423167298595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5964000100318279, 0.2724187101726637, 0.2681148209553364, 0.2636423167298595, 0.2636423167298595] ***
*** finished computation of 7 references, err: [Inf, 0.5964000100318279, 0.2724187101726637, 0.2681148209553364, 0.2636423167298595, 0.2636423167298595] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 23, 7]]
** centroid: 6, normalized-entropy: 0.7837769474847011, [(2, 23), (3, 7)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49990000821766545] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275] ***
*** starting iteration: 2; err: [Inf, 0.49990000821766545, 0.2669775588411275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062] ***
*** starting iteration: 3; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725] ***
*** starting iteration: 4; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688] ***
*** starting iteration: 5; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973] ***
*** starting iteration: 6; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933] ***
*** starting iteration: 7; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933, 0.21918805900471522] ***
*** starting iteration: 8; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933, 0.21918805900471522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933, 0.21918805900471522, 0.21749932541889422] ***
*** starting iteration: 9; err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933, 0.21918805900471522, 0.21749932541889422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933, 0.21918805900471522, 0.21749932541889422, 0.21687675330743342] ***
*** finished computation of 7 references, err: [Inf, 0.49990000821766545, 0.2669775588411275, 0.24298039040724062, 0.23782805384617725, 0.23340772833515688, 0.2270806799449973, 0.22387857774708933, 0.21918805900471522, 0.21749932541889422, 0.21687675330743342] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 2: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 6, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 7]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(2, 1), (3, 7)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47600000148252725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47600000148252725, 0.23120055933281874] ***
*** starting iteration: 2; err: [Inf, 0.47600000148252725, 0.23120055933281874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47600000148252725, 0.23120055933281874, 0.21541087283698257] ***
*** starting iteration: 3; err: [Inf, 0.47600000148252725, 0.23120055933281874, 0.21541087283698257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47600000148252725, 0.23120055933281874, 0.21541087283698257, 0.2111871422296253] ***
*** starting iteration: 4; err: [Inf, 0.47600000148252725, 0.23120055933281874, 0.21541087283698257, 0.2111871422296253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47600000148252725, 0.23120055933281874, 0.21541087283698257, 0.2111871422296253, 0.2111871422296253] ***
*** finished computation of 7 references, err: [Inf, 0.47600000148252725, 0.23120055933281874, 0.21541087283698257, 0.2111871422296253, 0.2111871422296253] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 16, 11]]
** centroid: 1, normalized-entropy: 0.975119064940866, [(2, 16), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 5, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4801000047833868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4801000047833868, 0.2587416479071484] ***
*** starting iteration: 2; err: [Inf, 0.4801000047833868, 0.2587416479071484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4801000047833868, 0.2587416479071484, 0.24048636252141023] ***
*** starting iteration: 3; err: [Inf, 0.4801000047833868, 0.2587416479071484, 0.24048636252141023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4801000047833868, 0.2587416479071484, 0.24048636252141023, 0.23533086773697648] ***
*** starting iteration: 4; err: [Inf, 0.4801000047833868, 0.2587416479071484, 0.24048636252141023, 0.23533086773697648] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4801000047833868, 0.2587416479071484, 0.24048636252141023, 0.23533086773697648, 0.23488585246302748] ***
*** finished computation of 7 references, err: [Inf, 0.4801000047833868, 0.2587416479071484, 0.24048636252141023, 0.23533086773697648, 0.23488585246302748] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 16
iteration 2 finished
generating 4 configurations using top 4 configurations, starting with 16)
[0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4423495740031602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4423495740031602, 0.2158884080639377] ***
*** starting iteration: 2; err: [Inf, 0.4423495740031602, 0.2158884080639377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4423495740031602, 0.2158884080639377, 0.1992152483330244] ***
*** starting iteration: 3; err: [Inf, 0.4423495740031602, 0.2158884080639377, 0.1992152483330244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4423495740031602, 0.2158884080639377, 0.1992152483330244, 0.19358761666794397] ***
*** finished computation of 7 references, err: [Inf, 0.4423495740031602, 0.2158884080639377, 0.1992152483330244, 0.19358761666794397] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 18]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(2, 9), (3, 18)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4059403786526904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4059403786526904, 0.3137952441555501] ***
*** starting iteration: 2; err: [Inf, 0.4059403786526904, 0.3137952441555501] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4059403786526904, 0.3137952441555501, 0.3072411491056384] ***
*** starting iteration: 3; err: [Inf, 0.4059403786526904, 0.3137952441555501, 0.3072411491056384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4059403786526904, 0.3137952441555501, 0.3072411491056384, 0.30290472953143355] ***
*** finished computation of 7 references, err: [Inf, 0.4059403786526904, 0.3137952441555501, 0.3072411491056384, 0.30290472953143355] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 32, 11]]
** centroid: 2, normalized-entropy: 0.8203636429576731, [(2, 32), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [2, 1, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 2), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3414811110510972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3414811110510972, 0.21339397808021807] ***
*** starting iteration: 2; err: [Inf, 0.3414811110510972, 0.21339397808021807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3414811110510972, 0.21339397808021807, 0.18839666109190123] ***
*** starting iteration: 3; err: [Inf, 0.3414811110510972, 0.21339397808021807, 0.18839666109190123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3414811110510972, 0.21339397808021807, 0.18839666109190123, 0.17763995306429595] ***
*** finished computation of 7 references, err: [Inf, 0.3414811110510972, 0.21339397808021807, 0.18839666109190123, 0.17763995306429595] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 16, 7]]
** centroid: 5, normalized-entropy: 0.8865408928220899, [(2, 16), (3, 7)]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.8933333333333334, 0.8866666666666667, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 19
iteration 4 finished
*** starting iteration: 1; err: [Inf, 1.608199993649949] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841] ***
*** starting iteration: 2; err: [Inf, 1.608199993649949, 0.5583191141281841] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228] ***
*** starting iteration: 3; err: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837] ***
*** starting iteration: 4; err: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164] ***
*** starting iteration: 5; err: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875] ***
*** starting iteration: 6; err: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231] ***
*** starting iteration: 7; err: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231, 0.5095178679620593] ***
*** finished computation of 3 references, err: [Inf, 1.608199993649949, 0.5583191141281841, 0.5489934805014228, 0.5314807872666837, 0.518558461651164, 0.5116168589505875, 0.5100790410064231, 0.5095178679620593] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 8]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 30), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9759000011550323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897] ***
*** starting iteration: 2; err: [Inf, 0.9759000011550323, 0.5780798082799897] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818] ***
*** starting iteration: 3; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131] ***
*** starting iteration: 4; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364] ***
*** starting iteration: 5; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438] ***
*** starting iteration: 6; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547] ***
*** starting iteration: 7; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574] ***
*** starting iteration: 8; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636] ***
*** starting iteration: 9; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522] ***
*** starting iteration: 10; err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522, 0.5134763422601282] ***
*** finished computation of 3 references, err: [Inf, 0.9759000011550323, 0.5780798082799897, 0.5635000919551818, 0.5529304150597131, 0.546834265400364, 0.5419752541261438, 0.5389871408742547, 0.5298880393249574, 0.5223618637255636, 0.5143206025228522, 0.5134763422601282] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.880000004156603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.880000004156603, 0.5705657838574921] ***
*** starting iteration: 2; err: [Inf, 0.880000004156603, 0.5705657838574921] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.880000004156603, 0.5705657838574921, 0.5535381233510579] ***
*** starting iteration: 3; err: [Inf, 0.880000004156603, 0.5705657838574921, 0.5535381233510579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.880000004156603, 0.5705657838574921, 0.5535381233510579, 0.5507271973674852] ***
*** starting iteration: 4; err: [Inf, 0.880000004156603, 0.5705657838574921, 0.5535381233510579, 0.5507271973674852] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.880000004156603, 0.5705657838574921, 0.5535381233510579, 0.5507271973674852, 0.5500907640669456] ***
*** finished computation of 3 references, err: [Inf, 0.880000004156603, 0.5705657838574921, 0.5535381233510579, 0.5507271973674852, 0.5500907640669456] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 4, 29]]
** centroid: 2, normalized-entropy: 0.5328350630342235, [(2, 4), (3, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 6]]
** centroid: 3, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.978646942185701] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366] ***
*** starting iteration: 2; err: [Inf, 3.978646942185701, 1.1008470230912366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307] ***
*** starting iteration: 3; err: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024] ***
*** starting iteration: 4; err: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018] ***
*** starting iteration: 5; err: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018, 0.3582747289016688] ***
*** starting iteration: 6; err: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018, 0.3582747289016688] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018, 0.3582747289016688, 0.35669424391647403] ***
*** starting iteration: 7; err: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018, 0.3582747289016688, 0.35669424391647403] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018, 0.3582747289016688, 0.35669424391647403, 0.356855069294075] ***
*** finished computation of 3 references, err: [Inf, 3.978646942185701, 1.1008470230912366, 0.39088311190668307, 0.38090987868745024, 0.3702786958477018, 0.3582747289016688, 0.35669424391647403, 0.356855069294075] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 7]]
** centroid: 2, normalized-entropy: 0.699772221773307, [(2, 30), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.615882432401612] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325] ***
*** starting iteration: 2; err: [Inf, 6.615882432401612, 1.618283526687325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409] ***
*** starting iteration: 3; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756] ***
*** starting iteration: 4; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844] ***
*** starting iteration: 5; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215] ***
*** starting iteration: 6; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109] ***
*** starting iteration: 7; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203] ***
*** starting iteration: 8; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155] ***
*** starting iteration: 9; err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155, 0.36305906719810155] ***
*** finished computation of 3 references, err: [Inf, 6.615882432401612, 1.618283526687325, 0.7164565202398409, 0.4280068818886756, 0.39220718227730844, 0.37667960901200215, 0.3687811793203109, 0.3645802019632203, 0.36305906719810155, 0.36305906719810155] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 11]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 33), (3, 11)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.9930748884229355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9930748884229355, 0.6450867882331588] ***
*** starting iteration: 2; err: [Inf, 1.9930748884229355, 0.6450867882331588] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931] ***
*** starting iteration: 3; err: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599] ***
*** starting iteration: 4; err: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599, 0.37635509358601527] ***
*** starting iteration: 5; err: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599, 0.37635509358601527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307] ***
*** starting iteration: 6; err: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307, 0.3745557654359098] ***
*** finished computation of 3 references, err: [Inf, 1.9930748884229355, 0.6450867882331588, 0.3915564108994931, 0.3783904146310599, 0.37635509358601527, 0.37516334894974307, 0.3745557654359098] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 27]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 3), (3, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 2, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8866666666666667, 0.88, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.6924000008304932] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6924000008304932, 0.4012844684628534] ***
*** starting iteration: 2; err: [Inf, 0.6924000008304932, 0.4012844684628534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6924000008304932, 0.4012844684628534, 0.37656074543363444] ***
*** starting iteration: 3; err: [Inf, 0.6924000008304932, 0.4012844684628534, 0.37656074543363444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6924000008304932, 0.4012844684628534, 0.37656074543363444, 0.35917222325851916] ***
*** finished computation of 7 references, err: [Inf, 0.6924000008304932, 0.4012844684628534, 0.37656074543363444, 0.35917222325851916] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 4]]
** centroid: 2, normalized-entropy: 0.5225593745369407, [(2, 30), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 19]]
** centroid: 3, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6149000043043649] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6149000043043649, 0.34678681960315855] ***
*** starting iteration: 2; err: [Inf, 0.6149000043043649, 0.34678681960315855] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6149000043043649, 0.34678681960315855, 0.331381033714352] ***
*** starting iteration: 3; err: [Inf, 0.6149000043043649, 0.34678681960315855, 0.331381033714352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6149000043043649, 0.34678681960315855, 0.331381033714352, 0.3303675455489293] ***
*** finished computation of 7 references, err: [Inf, 0.6149000043043649, 0.34678681960315855, 0.331381033714352, 0.3303675455489293] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 16, 14]]
** centroid: 2, normalized-entropy: 0.9967916319816367, [(2, 16), (3, 14)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 2, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8823000069203324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8823000069203324, 0.5101378923776371] ***
*** starting iteration: 2; err: [Inf, 0.8823000069203324, 0.5101378923776371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8823000069203324, 0.5101378923776371, 0.44002589800533415] ***
*** starting iteration: 3; err: [Inf, 0.8823000069203324, 0.5101378923776371, 0.44002589800533415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8823000069203324, 0.5101378923776371, 0.44002589800533415, 0.3754642402971905] ***
*** finished computation of 7 references, err: [Inf, 0.8823000069203324, 0.5101378923776371, 0.44002589800533415, 0.3754642402971905] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 27]]
** centroid: 1, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 19, 8]]
** centroid: 6, normalized-entropy: 0.876716288999464, [(2, 19), (3, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8866666666666667, 0.88, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.var"#_lp#1"{Float64}(Core.Box(4.0), 0.25), Statistics.mean, 1, 7, 3, 1.0, :dnet, 0.6, 2) => 0.9666666666666667
finished with 21
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.7818999958161789] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949] ***
*** starting iteration: 2; err: [Inf, 0.7818999958161789, 0.4723243381920949] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606] ***
*** starting iteration: 3; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924] ***
*** starting iteration: 4; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473] ***
*** starting iteration: 5; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744] ***
*** starting iteration: 6; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185] ***
*** starting iteration: 7; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185, 0.3172852458041203] ***
*** starting iteration: 8; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185, 0.3172852458041203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185, 0.3172852458041203, 0.30178096495547413] ***
*** starting iteration: 9; err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185, 0.3172852458041203, 0.30178096495547413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185, 0.3172852458041203, 0.30178096495547413, 0.30084918253094806] ***
*** finished computation of 7 references, err: [Inf, 0.7818999958161789, 0.4723243381920949, 0.41553889960362606, 0.3692646366731924, 0.35540026964087473, 0.3528803134304744, 0.34792789917970185, 0.3172852458041203, 0.30178096495547413, 0.30084918253094806] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 11]]
** centroid: 2, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.614300009241793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995] ***
*** starting iteration: 2; err: [Inf, 0.614300009241793, 0.41598620601557995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574] ***
*** starting iteration: 3; err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413] ***
*** starting iteration: 4; err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426] ***
*** starting iteration: 5; err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988] ***
*** starting iteration: 6; err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988, 0.23843198371659877] ***
*** starting iteration: 7; err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988, 0.23843198371659877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988, 0.23843198371659877, 0.23192155995919123] ***
*** starting iteration: 8; err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988, 0.23843198371659877, 0.23192155995919123] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988, 0.23843198371659877, 0.23192155995919123, 0.23105416775696835] ***
*** finished computation of 7 references, err: [Inf, 0.614300009241793, 0.41598620601557995, 0.35501452288736574, 0.28247832652544413, 0.2658963543885426, 0.2564798875508988, 0.23843198371659877, 0.23192155995919123, 0.23105416775696835] ***
*** center 1: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 14]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 19, 11]]
** centroid: 6, normalized-entropy: 0.9480782435939054, [(2, 19), (3, 11)]
*** center 7: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40830000112523135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594] ***
*** starting iteration: 2; err: [Inf, 0.40830000112523135, 0.27133592737661594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842] ***
*** starting iteration: 3; err: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984] ***
*** starting iteration: 4; err: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265] ***
*** starting iteration: 5; err: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265, 0.25702149357218707] ***
*** starting iteration: 6; err: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265, 0.25702149357218707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265, 0.25702149357218707, 0.2532573681889755] ***
*** starting iteration: 7; err: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265, 0.25702149357218707, 0.2532573681889755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265, 0.25702149357218707, 0.2532573681889755, 0.2527838761332895] ***
*** finished computation of 7 references, err: [Inf, 0.40830000112523135, 0.27133592737661594, 0.2638771144456842, 0.2613886923215984, 0.25921698239553265, 0.25702149357218707, 0.2532573681889755, 0.2527838761332895] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 5, 7]]
** centroid: 4, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 19, 6]]
** centroid: 7, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8866666666666667, 0.88, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 21
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8866666666666667, 0.88, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 21
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 21)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9199999999999999, 0.9133333333333332, 0.9066666666666667, 0.9, 0.8933333333333334, 0.8866666666666667, 0.88, 0.8666666666666666]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2) => 0.9733333333333333
finished with 22
iteration 9 finished
*** starting iteration: 1; err: [Inf, 5.5176000003122025] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.5176000003122025, 1.8409167018689647] ***
*** finished computation of 3 references, err: [Inf, 5.5176000003122025, 1.8409167018689647] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 29]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 27, 4]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 5, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 35), (2, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.934399987474402] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.934399987474402, 2.0071178086117745] ***
*** finished computation of 3 references, err: [Inf, 4.934399987474402, 2.0071178086117745] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [34, 18, 1]]
** centroid: 2, normalized-entropy: 0.6612548262849786, [(1, 34), (2, 18), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 16, 25]]
** centroid: 3, normalized-entropy: 0.9649567669505686, [(2, 16), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.851799975858331] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.851799975858331, 1.5591753934969927] ***
*** finished computation of 3 references, err: [Inf, 3.851799975858331, 1.5591753934969927] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 16, 0]]
** centroid: 2, normalized-entropy: 0.9252253278054431, [(1, 31), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 18, 26]]
** centroid: 3, normalized-entropy: 0.976020648236615, [(2, 18), (3, 26)]
finished with 5 centroids; started with 3
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.475, 3.9374999999999996, 1.4000000000000001, 0.2375], [6.414285714285713, 2.992857142857143, 4.571428571428571, 1.4142857142857144], [6.063636363636363, 2.809090909090909, 5.054545454545455, 1.9272727272727272], [5.635, 2.6350000000000002, 3.9699999999999998, 1.2149999999999999], [4.699999999999998, 3.0500000000000003, 1.3937499999999998, 0.19375], [6.938095238095239, 3.114285714285714, 5.819047619047619, 2.119047619047619], [5.08, 3.4599999999999995, 1.5499999999999998, 0.31]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 2, 1, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.4875, 3.8874999999999997, 1.4500000000000002, 0.25], [4.699999999999999, 3.06, 1.4100000000000001, 0.19], [6.613333333333333, 3.0333333333333337, 5.466666666666667, 2.1333333333333333], [5.453333333333333, 2.5533333333333332, 3.9, 1.22], [7.55, 3.0999999999999996, 6.516666666666667, 2.166666666666667], [6.152631578947367, 2.8894736842105258, 4.6000000000000005, 1.4578947368421051], [6.036363636363635, 2.709090909090909, 5.045454545454546, 1.7545454545454546], [5.06875, 3.5187499999999994, 1.55, 0.28750000000000003]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 1, 3, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.359999999999999, 2.42, 3.6599999999999993, 1.13], [6.484615384615383, 3.1230769230769226, 5.56923076923077, 2.269230769230769], [4.827272727272727, 3.2409090909090907, 1.440909090909091, 0.22727272727272732], [6.82, 3.0399999999999996, 4.82, 1.5], [6.3999999999999995, 2.8285714285714287, 5.442857142857142, 1.785714285714286], [5.333333333333334, 3.7777777777777777, 1.5777777777777777, 0.2888888888888889], [7.488888888888888, 3.1444444444444444, 6.3, 2.0222222222222226], [6.0052631578947375, 2.847368421052631, 4.442105263157895, 1.405263157894737], [5.983333333333334, 2.75, 4.933333333333333, 1.7833333333333332]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 2, 3, 1, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.6, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[52, 20, 39, 27, 28, 49, 20, 32, 23, 16, 42, 39, 31, 9, 40, 33, 20, 1, 34, 30, 45, 35, 34, 10, 41, 28, 35, 24, 36, 1, 24, 9, 12, 34, 21, 15, 43, 29, 33, 44, 1, 33, 54, 44, 17, 45, 14, 28, 33, 26, 35, 23, 32, 1, 23, 45, 23, 26, 8, 31, 24, 59, 41, 32, 40, 29, 8, 43, 4, 40, 34, 21, 37, 14, 21, 24, 21, 38, 29, 47, 74, 29, 26, 18, 25, 21, 38, 38, 24, 44, 43, 1, 53, 20, 31, 29, 36, 24, 36, 29, 58, 34, 28, 45, 32, 50, 35, 50, 26, 23, 22, 49, 42, 23, 29, 17, 34, 41, 49, 27, 60, 53, 55, 18, 26, 50, 19, 41, 21, 50, 18, 13, 46, 35, 43, 40, 38, 57, 30, 46, 28, 25, 31, 35, 39, 25, 34, 38, 71, 33, 59, 29, 53, 1, 27, 38, 48, 38, 56, 30, 36, 59, 37, 34, 44, 16, 28, 30, 20, 47, 53, 48, 37, 23, 32, 31, 41, 48, 55, 46, 24, 45, 26, 54, 43, 23, 55, 1, 20, 36, 18, 48, 25, 20, 26, 86, 41, 44, 51, 35, 54, 46, 33, 14, 40, 41, 18, 39, 32, 21, 35, 34, 42, 28, 21, 19, 29, 45, 38, 29, 31, 56, 40, 29, 30, 33, 31, 32, 26, 32, 38, 29, 41, 33, 16, 31, 26, 31, 10, 4, 47, 30, 35, 36, 46, 35, 54, 44, 33, 28, 39, 41, 35, 40, 35, 23, 51, 39, 1, 10, 23, 44, 25, 46, 36, 40, 70, 51, 44, 34, 48, 44, 46, 20, 27, 34, 1, 60, 35, 27, 45, 41, 42, 21, 34, 30, 26, 24, 36, 18, 41, 47, 49, 1, 40, 1, 56, 41, 23, 48]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.633, speedup = 0.20390300251547644, eval_ratio = 0.04189)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.37999131944444453,"recall":0.37934027777777785,"f1":null,"seconds":8.866749703884125e-5,"exhaustive_search_seconds":0.0003735702484846115,"evaluations":339.4921875,"distances_sum":1745.0188351359348}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5572916666666664,"recall":0.5572916666666664,"f1":0.5572916666666664,"seconds":0.00028350017964839935,"exhaustive_search_seconds":0.0003735702484846115,"evaluations":380.2734375,"distances_sum":1629.8404779806876}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6519097222222222,"recall":0.6519097222222222,"f1":0.6519097222222222,"seconds":0.0001587551087141037,"exhaustive_search_seconds":0.0003735702484846115,"evaluations":420.71875,"distances_sum":1587.0416358914347}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7204861111111109,"recall":0.7204861111111109,"f1":0.7204861111111109,"seconds":0.00017298012971878052,"exhaustive_search_seconds":0.0003735702484846115,"evaluations":460.2890625,"distances_sum":1565.4725529119094}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7708333333333328,"recall":0.7708333333333328,"f1":0.7708333333333328,"seconds":0.0002483874559402466,"exhaustive_search_seconds":0.0003735702484846115,"evaluations":500.25,"distances_sum":1553.2905854005326}
KCenters.DeloneInvIndex> reached performance {"precision":0.822916666666666,"recall":0.822916666666666,"f1":0.822916666666666,"seconds":0.0002729557454586029,"exhaustive_search_seconds":0.0003735702484846115,"evaluations":539.0859375,"distances_sum":1541.4850022301982}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8229999999999997, speedup = 0.8563815339658515, eval_ratio = 0.054061)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
