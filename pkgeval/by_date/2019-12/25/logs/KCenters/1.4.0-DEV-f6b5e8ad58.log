Julia Version 1.4.0-DEV.661
Commit f6b5e8ad58 (2019-12-24 15:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataValueInterfaces ───────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed KCenters ──────────────────── v0.1.8
 Installed Compat ────────────────────── v3.0.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed OrderedCollections ────────── v1.1.0
 Installed LearnBase ─────────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed Parsers ───────────────────── v0.3.10
 Installed MappedArrays ──────────────── v0.2.2
 Installed JSON ──────────────────────── v0.21.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed CategoricalArrays ─────────── v0.7.5
 Installed StatsBase ─────────────────── v0.32.0
 Installed DataFrames ────────────────── v0.20.0
 Installed Tables ────────────────────── v0.2.11
 Installed PooledArrays ──────────────── v0.5.3
 Installed DataAPI ───────────────────── v1.1.0
 Installed DataStructures ────────────── v0.17.6
 Installed InvertedIndices ───────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed MLDataPattern ─────────────── v0.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
  Updating `/tmp/jl_IiNDD1/Project.toml`
 [no changes]
  Updating `/tmp/jl_IiNDD1/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_IiNDD1/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 153.66999999999996
[ Info: 62.17
[ Info: 41.67
[ Info: 25.280000000000005
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999835129265
[ Info: 76.32000114659134
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 23.625076751471063
inertia(crand.distances) = 22.467018492574812
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8669075715950725,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.3359375,"distances_sum":2196.709296242133}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":6.1640625,"distances_sum":1086.723462121191}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.4868717193603516e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":6.0390625,"distances_sum":662.0228622657369}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8669075715950725,"seconds":6.081536412239075e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.3359375,"distances_sum":2196.709296242133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8939222236097241,"seconds":9.180977940559387e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.3203125,"distances_sum":2391.2501738648875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8310546875,"f1":0.9014912171162177,"seconds":3.776140511035919e-5,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.375,"distances_sum":2403.6118057881686}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541895604395608,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.796875,"distances_sum":2819.3678678490132}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.960479624542125,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8359375,"distances_sum":2881.283920595033}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.960479624542125,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8359375,"distances_sum":2881.283920595033}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641769688644692,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.875,"distances_sum":2887.397799876639}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9807864010989015,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9453125,"distances_sum":3002.9084184932144}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9702781593406599,"seconds":5.474314093589783e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8828125,"distances_sum":2935.699439448076}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621508699633704,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.8125,"distances_sum":2882.4994382897826}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807864010989015,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9453125,"distances_sum":3002.9084184932144}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9807864010989015,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.7490237951278687e-6,"evaluations":8.9453125,"distances_sum":3002.9084184932144}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":2.562999725341797e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.9453125,"distances_sum":476.3627342936572}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.185546875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":2.562999725341797e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.9453125,"distances_sum":476.3627342936572}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.185546875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":2.562999725341797e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.9453125,"distances_sum":476.3627342936572}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.185546875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":2.562999725341797e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.9453125,"distances_sum":476.3627342936572}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.16796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.16796875,"f1":null,"seconds":2.6300549507141113e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.15625,"distances_sum":443.8616365860199}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.16796875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.16796875,"f1":null,"seconds":2.6300549507141113e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.15625,"distances_sum":443.8616365860199}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5390625,"f1":0.6809591450216453,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.5234375,"distances_sum":1314.0759877494497}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5390625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5390625,"f1":0.6809591450216453,"seconds":3.7420541048049927e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.5234375,"distances_sum":1314.0759877494497}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9064393939393948,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5390625,"distances_sum":2223.9399229675378}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9064393939393948,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5390625,"distances_sum":2223.9399229675378}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9064393939393948,"seconds":5.323439836502075e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5390625,"distances_sum":2223.9399229675378}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.6640625,"distances_sum":833.6700472627888}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3759765625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.6302953958511353e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.6640625,"distances_sum":833.6700472627888}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8144392066267074,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.0,"distances_sum":1718.4889361136934}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.853515625,"f1":0.9130060911310919,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.453125,"distances_sum":2209.2575050120504}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8156421703296712,"seconds":4.567205905914307e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.96875,"distances_sum":1727.3290114354877}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.853515625,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.853515625,"f1":0.9130060911310919,"seconds":5.295500159263611e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.453125,"distances_sum":2209.2575050120504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9464743589743593,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.78125,"distances_sum":2449.906506039038}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9380151098901107,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.71875,"distances_sum":2377.1396938994294}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9465831043956049,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.7578125,"distances_sum":2476.5338368235143}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9465831043956049,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.7578125,"distances_sum":2476.5338368235143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9465831043956049,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.7578125,"distances_sum":2476.5338368235143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.0859375,"distances_sum":555.3466992697207}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.703292367354868,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.25,"distances_sum":1361.6173815292059}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.1404197216033936e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":5.8046875,"distances_sum":461.51909636421277}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.564453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.564453125,"f1":0.703292367354868,"seconds":4.289671778678894e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.25,"distances_sum":1361.6173815292059}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.921700695138196,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5625,"distances_sum":2275.773460935142}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8588005744255753,"seconds":5.202367901802063e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.1328125,"distances_sum":1919.0559989182066}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8033534174159181,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.90625,"distances_sum":1667.3961367225115}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.921700695138196,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5625,"distances_sum":2275.773460935142}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.921700695138196,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5625,"distances_sum":2275.773460935142}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8671875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8671875,"f1":0.921700695138196,"seconds":5.630776286125183e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5625,"distances_sum":2275.773460935142}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7807935120435127,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.0703125,"distances_sum":1551.6038594318293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8573202838827847,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9296875,"distances_sum":1868.7758590263454}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7587890625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7587890625,"f1":0.8573202838827847,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.9296875,"distances_sum":1868.7758590263454}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952329441391942,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.7265625,"distances_sum":2473.429661924366}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9622825091575096,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.84375,"distances_sum":2518.511111114229}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9293102730602736,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6953125,"distances_sum":2259.022131651504}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9516056859806864,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6796875,"distances_sum":2517.552033692486}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9622825091575096,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.84375,"distances_sum":2518.511111114229}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9809180402930403,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":2655.7932155419476}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9647893772893776,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.84375,"distances_sum":2550.5543591340747}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9656478937728942,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8203125,"distances_sum":2554.37176434962}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664835164835172,"seconds":5.859881639480591e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.859375,"distances_sum":2557.9026685481176}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9634729853479858,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.84375,"distances_sum":2521.646640302826}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809180402930403,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":2655.7932155419476}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9809180402930403,"seconds":5.990266799926758e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.921875,"distances_sum":2655.7932155419476}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8578967907092916,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.265625,"distances_sum":1972.1780233789054}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.564453125,"f1":0.7062883297258303,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":7.3515625,"distances_sum":1447.0089807534337}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.181640625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.181640625,"f1":null,"seconds":3.162771463394165e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":5.515625,"distances_sum":489.56446517168735}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8578967907092916,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.265625,"distances_sum":1972.1780233789054}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.798828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.798828125,"f1":0.8777602605727611,"seconds":5.342066287994385e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.3828125,"distances_sum":2123.897983403979}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9178519397269401,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.6796875,"distances_sum":2327.2950224149945}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8606861888111897,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.3359375,"distances_sum":2020.2427085648742}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.9142836330336335,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.6015625,"distances_sum":2337.0799067623625}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.794921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.794921875,"f1":0.8779595404595413,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.3984375,"distances_sum":2087.6968537250245}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9178519397269401,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.6796875,"distances_sum":2327.2950224149945}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9437786172161179,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.796875,"distances_sum":2479.2614195830897}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9630437271062274,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.8671875,"distances_sum":2637.581909108031}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9368251540126545,"seconds":5.852431058883667e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.6796875,"distances_sum":2435.3901073063685}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630437271062274,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.8671875,"distances_sum":2637.581909108031}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9630437271062274,"seconds":5.8300793170928955e-6,"exhaustive_search_seconds":1.6111880540847778e-6,"evaluations":8.8671875,"distances_sum":2637.581909108031}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7294921875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7294921875,"f1":0.8321693931068938,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.9453125,"distances_sum":1790.9924195116564}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4765625,"f1":0.6310550560550564,"seconds":3.999099135398865e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.0390625,"distances_sum":1211.8175962522653}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":2.99699604511261e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":4.6328125,"distances_sum":586.4308228212265}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7294921875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7294921875,"f1":0.8321693931068938,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.9453125,"distances_sum":1790.9924195116564}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9051521395271404,"seconds":9.264051914215088e-5,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.453125,"distances_sum":2176.4959140022133}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.905357663170164,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.421875,"distances_sum":2187.1718744098343}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9314076548451555,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2344.6734791723034}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9314076548451555,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2344.6734791723034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9314076548451555,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2344.6734791723034}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9314076548451555,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6953125,"distances_sum":2344.6734791723034}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":2.6207417249679565e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.125,"distances_sum":421.6637671174712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.34375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.34375,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.6015625,"distances_sum":812.9817458701907}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.34375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.34375,"f1":null,"seconds":3.118067979812622e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.6015625,"distances_sum":812.9817458701907}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.365234375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.365234375,"f1":null,"seconds":3.039836883544922e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.5,"distances_sum":870.1410426794549}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.509765625, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.509765625,"f1":0.6637862137862143,"seconds":3.645196557044983e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.4921875,"distances_sum":1166.7710033236465}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8714670745920752,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.375,"distances_sum":1814.3741204317387}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8714670745920752,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.375,"distances_sum":1814.3741204317387}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.83984375,"f1":0.9056552822177829,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.5078125,"distances_sum":2044.5291087026835}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9060819388944397,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":2060.8581375995536}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9069404553779562,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.453125,"distances_sum":2050.777282839311}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9060819388944397,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":2060.8581375995536}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8427734375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9060819388944397,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4921875,"distances_sum":2060.8581375995536}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8585424991674999,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.9375,"distances_sum":1954.2685179656032}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7894437160062167,"seconds":4.55416738986969e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.5234375,"distances_sum":1614.7445443963468}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8585424991674999,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":7.9375,"distances_sum":1954.2685179656032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9386446886446894,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.625,"distances_sum":2416.3468719871653}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208798,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.78125,"distances_sum":2515.3998920464114}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9478708791208798,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.78125,"distances_sum":2515.3998920464114}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9660771520146523,"seconds":5.4389238357543945e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8515625,"distances_sum":2650.490540639285}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9751144688644691,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2716.6578644267893}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751144688644691,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2716.6578644267893}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9751144688644691,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.298263669013977e-6,"evaluations":8.8828125,"distances_sum":2716.6578644267893}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1728515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1728515625,"f1":null,"seconds":2.7921050786972046e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.71875,"distances_sum":423.91612064904723}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.169921875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.169921875,"f1":null,"seconds":2.5462359189987183e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":4.859375,"distances_sum":399.9840435112525}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7879802489177498,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.671875,"distances_sum":1631.669285172598}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7879802489177498,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.671875,"distances_sum":1631.669285172598}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8416642385392392,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3828125,"distances_sum":1861.4344169894064}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8505765068265077,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":1895.6228509239422}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7568359375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7568359375,"f1":0.8505765068265077,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4140625,"distances_sum":1895.6228509239422}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9367502289377293,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.765625,"distances_sum":2366.281564060345}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9469780219780226,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2478.8971115950917}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9423992673992682,"seconds":5.044043064117432e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.671875,"distances_sum":2448.6667062726647}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8975883491508497,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6015625,"distances_sum":2158.71775064644}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8552431943056953,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4453125,"distances_sum":1913.3275553462863}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9405448717948725,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.828125,"distances_sum":2415.551243008969}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9469780219780226,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2478.8971115950917}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9469780219780226,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2478.8971115950917}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":null,"recall":0.640625,"f1":null,"seconds":4.252418875694275e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.140625,"distances_sum":1571.293011074939}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1474609375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1474609375,"f1":null,"seconds":2.4531036615371704e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.375,"distances_sum":364.06515672572203}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.150390625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.150390625,"f1":null,"seconds":2.4568289518356323e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.171875,"distances_sum":429.6751556601405}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7275390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7275390625,"f1":0.8339551073926081,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.6328125,"distances_sum":1843.9091570728863}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7275390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7275390625,"f1":0.8339551073926081,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.6328125,"distances_sum":1843.9091570728863}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9293872793872803,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.5546875,"distances_sum":2405.846167515972}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9595841658341662,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2559.3758005977734}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9512362637362642,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.734375,"distances_sum":2509.061564311139}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9319545038295042,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.515625,"distances_sum":2380.8935365691154}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9595841658341662,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2559.3758005977734}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.974609375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.974609375,"f1":0.9860691391941393,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":2740.0444006924117}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9673019688644693,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8046875,"distances_sum":2629.498794651855}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9625228937728939,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2580.8312243717032}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.974609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9860691391941393,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":2740.0444006924117}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.974609375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.974609375,"f1":0.9860691391941393,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":2740.0444006924117}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8279236388611397,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7109375,"distances_sum":1889.8240374147856}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6298828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6298828125,"f1":0.7587818431568438,"seconds":4.112720489501953e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.2578125,"distances_sum":1588.5849474157908}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.72265625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.72265625,"f1":0.8279236388611397,"seconds":4.669651389122009e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7109375,"distances_sum":1889.8240374147856}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9527586996337004,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2677.769308935218}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9527586996337004,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.71875,"distances_sum":2677.769308935218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790922619047622,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.953125,"distances_sum":2836.744667951103}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9840029761904764,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2880.217327212729}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9541723901098903,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2676.4313736711247}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840029761904764,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2880.217327212729}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9840029761904764,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2880.217327212729}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7944111444111452,"seconds":4.4424086809158325e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.8359375,"distances_sum":1582.3950020725672}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8414439726939734,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.015625,"distances_sum":1751.7514181502663}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3916015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3916015625,"f1":null,"seconds":3.330409526824951e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.296875,"distances_sum":858.3862664332003}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8414439726939734,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.015625,"distances_sum":1751.7514181502663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529590201465207,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2485.375498376903}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8964087995338004,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.296875,"distances_sum":2063.478864776426}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8608979562104571,"seconds":4.809349775314331e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1875,"distances_sum":1862.3138110658172}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529590201465207,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2485.375498376903}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529590201465207,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2485.375498376903}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529590201465207,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2485.375498376903}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.576171875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.576171875,"f1":0.7169212731712739,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.203125,"distances_sum":1346.8090959853143}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.576171875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.576171875,"f1":0.7169212731712739,"seconds":4.123896360397339e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.203125,"distances_sum":1346.8090959853143}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9274470321345326,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2321.676713642402}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8681640625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8681640625,"f1":0.9241617757242765,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7890625,"distances_sum":2291.261001937475}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8759765625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8759765625,"f1":0.9274470321345326,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2321.676713642402}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9689560439560442,"seconds":6.552785634994507e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":2608.7029289799802}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9474759615384623,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.90625,"distances_sum":2418.6945425955196}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9719494047619053,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2603.8137981230193}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9719494047619053,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2603.8137981230193}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9719494047619053,"seconds":5.556270480155945e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9296875,"distances_sum":2603.8137981230193}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8684502997003005,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":1905.5627532132287}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.390625,"distances_sum":792.688934516273}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.86407810939061,"seconds":4.8745423555374146e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.3046875,"distances_sum":1927.105128584639}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8684502997003005,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4296875,"distances_sum":1905.5627532132287}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9370821886446893,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2340.0608758273156}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499885531135536,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2473.70146406842}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.918810356310357,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.75,"distances_sum":2259.762076079026}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9499885531135536,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8359375,"distances_sum":2473.70146406842}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681604853479857,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2577.8474303741036}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687328296703301,"seconds":5.660578608512878e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.9453125,"distances_sum":2558.680890000998}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607543498168504,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.921875,"distances_sum":2508.013385460335}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557520604395612,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8828125,"distances_sum":2479.81923651004}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681604853479857,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2577.8474303741036}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681604853479857,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.890625,"distances_sum":2577.8474303741036}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.201171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.201171875,"f1":null,"seconds":2.7939677238464355e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":5.4375,"distances_sum":437.86409904825445}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.201171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.201171875,"f1":null,"seconds":2.7939677238464355e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":5.4375,"distances_sum":437.86409904825445}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.839430361305362,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.015625,"distances_sum":1754.2203421012698}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7431640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7431640625,"f1":0.839430361305362,"seconds":4.678964614868164e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.015625,"distances_sum":1754.2203421012698}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9427744130869139,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.7734375,"distances_sum":2339.9684112799637}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.921935356310357,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.734375,"distances_sum":2195.4605494200327}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9644402472527478,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.84375,"distances_sum":2483.0178086268115}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644402472527478,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.84375,"distances_sum":2483.0178086268115}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9644402472527478,"seconds":5.340203642845154e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.84375,"distances_sum":2483.0178086268115}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5615234375,"f1":0.7034543581418587,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.03125,"distances_sum":1383.4339294320425}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5615234375,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5615234375,"f1":0.7034543581418587,"seconds":3.859400749206543e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.03125,"distances_sum":1383.4339294320425}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9039637445887453,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.625,"distances_sum":2590.8772317906}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7810694513819522,"seconds":4.254281520843506e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.53125,"distances_sum":1774.4500468529702}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9039637445887453,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.625,"distances_sum":2590.8772317906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9468635531135535,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7421875,"distances_sum":2982.315239884024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9122398434898443,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6875,"distances_sum":2672.4220085041734}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9468635531135535,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7421875,"distances_sum":2982.315239884024}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9468635531135535,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7421875,"distances_sum":2982.315239884024}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6933588980463986,"seconds":3.764405846595764e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.7421875,"distances_sum":1373.4108578832484}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.638671875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.638671875,"f1":0.7674788752913762,"seconds":4.174187779426575e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.1875,"distances_sum":1629.2223854479273}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7879061910311919,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.359375,"distances_sum":1730.3451223814213}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7879061910311919,"seconds":4.285946488380432e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.359375,"distances_sum":1730.3451223814213}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9222928113553118,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6171875,"distances_sum":2657.677924429816}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.893155282217783,"seconds":5.042180418968201e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.4140625,"distances_sum":2384.5012011663835}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556032509157509,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2942.757771366398}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9556032509157509,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.890625,"distances_sum":2942.757771366398}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9656650641025647,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":3012.1041914101916}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406596,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.90625,"distances_sum":3059.010584698819}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":3100.1554169281603}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9756696428571432,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9765625,"distances_sum":3088.470759799654}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570570054945058,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.84375,"distances_sum":2981.6347443927166}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":3100.1554169281603}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9752060439560444,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.953125,"distances_sum":3100.1554169281603}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8307510198135207,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3046875,"distances_sum":1900.7347720817836}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5537109375,"f1":null,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.9453125,"distances_sum":1262.7258175341074}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7236328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7236328125,"f1":0.8307510198135207,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3046875,"distances_sum":1900.7347720817836}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9555116758241764,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2934.0520033640464}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9555116758241764,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2934.0520033640464}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9656478937728941,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":3026.010075503716}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9656478937728941,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":3026.010075503716}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9656478937728941,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":3026.010075503716}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3642578125,"f1":null,"seconds":3.818422555923462e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.90625,"distances_sum":889.5965222721325}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8629126082251092,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6796875,"distances_sum":2128.997473758581}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.8629126082251092,"seconds":5.0067901611328125e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6796875,"distances_sum":2128.997473758581}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966575091575092,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":3010.2735506112867}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9503090659340664,"seconds":6.07222318649292e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.78125,"distances_sum":2920.6534307741326}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8892602189477196,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.5390625,"distances_sum":2429.1677284647794}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9087225274725282,"seconds":0.00010447762906551361,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7265625,"distances_sum":2503.6611103107675}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.966575091575092,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8671875,"distances_sum":3010.2735506112867}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703697344322348,"seconds":0.00013143569231033325,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":3057.220386741698}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703697344322348,"seconds":0.00013143569231033325,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":3057.220386741698}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703697344322348,"seconds":0.00013143569231033325,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8828125,"distances_sum":3057.220386741698}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7781806734931744,"seconds":4.166737198829651e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.2265625,"distances_sum":1647.4288228610221}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.556640625,"f1":null,"seconds":3.9637088775634766e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":6.7421875,"distances_sum":1365.74588726079}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6826171875, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6826171875,"f1":0.7995945027195034,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.3671875,"distances_sum":1782.3527853312407}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7995945027195034,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.3671875,"distances_sum":1782.3527853312407}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6826171875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7995945027195034,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.3671875,"distances_sum":1782.3527853312407}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.6826171875,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6826171875,"f1":0.7995945027195034,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":7.3671875,"distances_sum":1782.3527853312407}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7236328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7236328125,"f1":0.8303691100566106,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6484375,"distances_sum":1879.7407373028307}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.46875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.46875,"f1":null,"seconds":3.429129719734192e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.5390625,"distances_sum":1179.2133975504762}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7236328125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7236328125,"f1":0.8303691100566106,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6484375,"distances_sum":1879.7407373028307}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607371794871802,"seconds":6.064772605895996e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2904.291196765236}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.734375,"f1":0.83794746919747,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6953125,"distances_sum":1966.2841555182272}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9663347069597075,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2954.8763661276625}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614812271062279,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8984375,"distances_sum":2961.9585195226214}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9663347069597075,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2954.8763661276625}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9793154761904765,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.984375,"distances_sum":3075.8424186638895}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941395,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":3075.0056800950388}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9638671875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":3110.8769199455896}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9722870879120882,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":3015.86301143682}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.967467948717949,"seconds":7.320195436477661e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":2991.6513198060516}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9638671875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":3110.8769199455896}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9638671875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9803571428571431,"seconds":6.441026926040649e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":3110.8769199455896}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4228515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4228515625,"f1":0.564994900932401,"seconds":3.7848949432373047e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":5.859375,"distances_sum":1080.6864430910234}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.640625,"f1":0.7707185175935184,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.1328125,"distances_sum":1531.6334044922257}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.640625,"f1":0.7707185175935184,"seconds":4.585832357406616e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.1328125,"distances_sum":1531.6334044922257}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7805444555444563,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.25,"distances_sum":1658.115807981463}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9470695970695976,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.7890625,"distances_sum":2838.285726881785}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7784658050283058,"seconds":4.608184099197388e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":7.25,"distances_sum":1628.75644321508}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.908203125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.908203125,"f1":0.9470695970695976,"seconds":5.865469574928284e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.7890625,"distances_sum":2838.285726881785}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9770318223443225,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.9453125,"distances_sum":3079.4463119716183}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697744963369969,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.8671875,"distances_sum":3029.7182692147153}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047622,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.8828125,"distances_sum":3072.797755032891}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770318223443225,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.9453125,"distances_sum":3079.4463119716183}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9770318223443225,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.2405216693878174e-6,"evaluations":8.9453125,"distances_sum":3079.4463119716183}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2548828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2548828125,"f1":null,"seconds":3.2763928174972534e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":6.0390625,"distances_sum":545.7483391307183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4970703125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4970703125,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":6.4765625,"distances_sum":1312.60971402442}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6835121475746482,"seconds":5.0477683544158936e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":6.8203125,"distances_sum":1250.2802668278916}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.776584353146854,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":7.171875,"distances_sum":1640.616201836053}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.650390625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.650390625,"f1":0.776584353146854,"seconds":4.3977051973342896e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":7.171875,"distances_sum":1640.616201836053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8382908757908766,"seconds":5.250796675682068e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.3046875,"distances_sum":1984.0480176697329}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9564076548451552,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.84375,"distances_sum":2977.7673535488193}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9051339285714295,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.6640625,"distances_sum":2477.8071717933585}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9475732600732608,"seconds":5.7853758335113525e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.78125,"distances_sum":2873.4245364379367}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8280301295926303,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.296875,"distances_sum":1957.134053824574}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9564076548451552,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.84375,"distances_sum":2977.7673535488193}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9645089285714289,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.859375,"distances_sum":3046.193349174887}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9573374542124545,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.90625,"distances_sum":2943.566601722002}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636733058608064,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.8515625,"distances_sum":3032.3570043482373}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9645089285714289,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.859375,"distances_sum":3046.193349174887}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9645089285714289,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":6.867200136184692e-5,"evaluations":8.859375,"distances_sum":3046.193349174887}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.666015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.666015625,"f1":0.7877091658341665,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.2109375,"distances_sum":1777.9430113177882}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.384765625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.384765625,"f1":null,"seconds":3.416091203689575e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":5.5078125,"distances_sum":995.2923533457499}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.666015625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.666015625,"f1":0.7877091658341665,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.2109375,"distances_sum":1777.9430113177882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9436069139194143,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.625,"distances_sum":2971.938107915136}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9180631868131877,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.4921875,"distances_sum":2739.601270201256}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8365263209013216,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.984375,"distances_sum":2075.8509804717646}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.852653076090577,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.015625,"distances_sum":2112.1552921801954}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9436069139194143,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.625,"distances_sum":2971.938107915136}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658138736263739,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8203125,"distances_sum":3126.3878922331196}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947516025641026,"seconds":5.753710865974426e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.75,"distances_sum":2965.9049454792726}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9734375000000006,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.859375,"distances_sum":3175.04318505201}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530792124542127,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.796875,"distances_sum":3020.750260779387}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9446314102564108,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.75,"distances_sum":2927.942636264122}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471611721611729,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6484375,"distances_sum":3010.1225374714545}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519803113553119,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6953125,"distances_sum":3025.4354498081757}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000006,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.859375,"distances_sum":3175.04318505201}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9734375000000006,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.859375,"distances_sum":3175.04318505201}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6936714327339332,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.4375,"distances_sum":1342.3275729114455}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.369140625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.369140625,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.5,"distances_sum":939.5971685793801}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6936714327339332,"seconds":4.105269908905029e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":6.4375,"distances_sum":1342.3275729114455}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8423337079587089,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.984375,"distances_sum":2010.9066095247517}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66015625,"f1":0.7852153055278063,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.2109375,"distances_sum":1661.0129578134072}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7373046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7373046875,"f1":0.8423337079587089,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.984375,"distances_sum":2010.9066095247517}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9400927197802204,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2838.5853214917115}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9027363261738268,"seconds":8.607283234596252e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4453125,"distances_sum":2565.1818089900576}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9280563186813193,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5625,"distances_sum":2818.2471644583256}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9400927197802204,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2838.5853214917115}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.89453125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9400927197802204,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.65625,"distances_sum":2838.5853214917115}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.800510427072928,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.3515625,"distances_sum":1730.7064097765626}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4208984375, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.4208984375,"f1":null,"seconds":3.829598426818848e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":6.1640625,"distances_sum":1045.2492457140886}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2841796875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2841796875,"f1":null,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":6.625,"distances_sum":675.8227253344768}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.67578125,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.67578125,"f1":0.800510427072928,"seconds":4.988163709640503e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":7.3515625,"distances_sum":1730.7064097765626}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.902693140193141,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.3984375,"distances_sum":2490.998837233312}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9046276640026646,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.5078125,"distances_sum":2507.8420290047075}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9046276640026646,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.5078125,"distances_sum":2507.8420290047075}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9104801448551458,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.40625,"distances_sum":2577.3233679221926}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9663175366300368,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8828125,"distances_sum":3098.668578599638}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.936166437728938,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.6640625,"distances_sum":2789.660617652338}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9663175366300368,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8828125,"distances_sum":3098.668578599638}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9663175366300368,"seconds":6.316229701042175e-6,"exhaustive_search_seconds":1.560896635055542e-6,"evaluations":8.8828125,"distances_sum":3098.668578599638}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8633387445887453,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.65625,"distances_sum":2184.6720348276644}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1787109375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1787109375,"f1":null,"seconds":2.825632691383362e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":4.84375,"distances_sum":480.97398537673627}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7820838883338891,"seconds":4.384666681289673e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.65625,"distances_sum":1735.7224351323955}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8633387445887453,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.65625,"distances_sum":2184.6720348276644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9560897435897444,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8046875,"distances_sum":3035.135614970887}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.93468978937729,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2863.9117142719656}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9629292582417589,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.90625,"distances_sum":3040.9556176060996}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9629292582417589,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.90625,"distances_sum":3040.9556176060996}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9772722069597073,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":3170.2577644545395}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":8,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9744791666666669,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9375,"distances_sum":3145.458702744069}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705929487179492,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9296875,"distances_sum":3108.215542606893}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9717261904761909,"seconds":5.988404154777527e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.890625,"distances_sum":3147.084064555578}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9711309523809527,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.890625,"distances_sum":3132.5722188253}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772722069597073,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":3170.2577644545395}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9772722069597073,"seconds":5.8710575103759766e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.96875,"distances_sum":3170.2577644545395}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5693359375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5693359375,"f1":0.7086189851814859,"seconds":4.3567270040512085e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.109375,"distances_sum":1411.404395178906}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.240234375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.240234375,"f1":null,"seconds":3.3639371395111084e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":5.7890625,"distances_sum":505.482840997758}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.8267831127206134,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.25,"distances_sum":1874.894859397849}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7158203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7158203125,"f1":0.8267831127206134,"seconds":5.23589551448822e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.25,"distances_sum":1874.894859397849}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649782509157512,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2979.874155900703}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9649782509157512,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2979.874155900703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9659054487179489,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2955.7245665015494}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659054487179489,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2955.7245665015494}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9659054487179489,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":2955.7245665015494}}, n: 9
inertia(cfft.distances) = 20.809144343871612
inertia(cdnet.distances) = 27.66258531746031
inertia(crand.distances) = 21.745995947198665
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> k=5
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9266666666666666
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9266666666666667
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9266666666666667
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9133333333333334
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.88
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444443
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8622222222222223
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 1, 2, 2, 3, 3, 3, 3, 1, 2, 1, 3, 3, 2, 1, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 9: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 10, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 2, 3, 3, 1, 2, 3, 3, 2]
acc = 0.94
*** starting iteration: 1; err: [Inf, 0.332800000347605] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.332800000347605, 0.17664554622349557] ***
*** starting iteration: 2; err: [Inf, 0.332800000347605, 0.17664554622349557] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342] ***
*** starting iteration: 3; err: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342, 0.16408552531652865] ***
*** starting iteration: 4; err: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342, 0.16408552531652865] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342, 0.16408552531652865, 0.16098719899861744] ***
*** starting iteration: 5; err: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342, 0.16408552531652865, 0.16098719899861744] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342, 0.16408552531652865, 0.16098719899861744, 0.16066753948489274] ***
*** finished computation of 12 references, err: [Inf, 0.332800000347605, 0.17664554622349557, 0.166434728354342, 0.16408552531652865, 0.16098719899861744, 0.16066753948489274] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 9, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
acc = 0.9133333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.9179000047813538] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9179000047813538, 0.5362871354573916] ***
*** finished computation of 3 references, err: [Inf, 0.9179000047813538, 0.5362871354573916] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 9, 30]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 9), (3, 30)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8836000043574006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8836000043574006, 0.6209435444489824] ***
*** finished computation of 3 references, err: [Inf, 0.8836000043574006, 0.6209435444489824] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 29]]
** centroid: 3, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4780000184596498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4780000184596498, 0.6003054764147783] ***
*** finished computation of 3 references, err: [Inf, 1.4780000184596498, 0.6003054764147783] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 39]]
** centroid: 3, normalized-entropy: 0.787126586201269, [(2, 12), (3, 39)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37675520440609916] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37675520440609916, 0.3337159023696742] ***
*** starting iteration: 2; err: [Inf, 0.37675520440609916, 0.3337159023696742] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37675520440609916, 0.3337159023696742, 0.33240703094933344] ***
*** starting iteration: 3; err: [Inf, 0.37675520440609916, 0.3337159023696742, 0.33240703094933344] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37675520440609916, 0.3337159023696742, 0.33240703094933344, 0.33132083864229583] ***
*** finished computation of 3 references, err: [Inf, 0.37675520440609916, 0.3337159023696742, 0.33240703094933344, 0.33132083864229583] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 28, 8]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 28), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 22]]
** centroid: 3, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3097365153595435] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3097365153595435, 0.7328034880279817] ***
*** starting iteration: 2; err: [Inf, 1.3097365153595435, 0.7328034880279817] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3097365153595435, 0.7328034880279817, 0.726227751411647] ***
*** starting iteration: 3; err: [Inf, 1.3097365153595435, 0.7328034880279817, 0.726227751411647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3097365153595435, 0.7328034880279817, 0.726227751411647, 0.726227751411647] ***
*** finished computation of 3 references, err: [Inf, 1.3097365153595435, 0.7328034880279817, 0.726227751411647, 0.726227751411647] ***
*** center 1: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [20, 3, 0]]
** centroid: 2, normalized-entropy: 0.5586293734521991, [(1, 20), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 30]]
** centroid: 3, normalized-entropy: 0.9971803988942641, [(2, 34), (3, 30)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6347566199894714] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6347566199894714, 0.5628405577529926] ***
*** starting iteration: 2; err: [Inf, 1.6347566199894714, 0.5628405577529926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6347566199894714, 0.5628405577529926, 0.3676662241570945] ***
*** starting iteration: 3; err: [Inf, 1.6347566199894714, 0.5628405577529926, 0.3676662241570945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6347566199894714, 0.5628405577529926, 0.3676662241570945, 0.3569221121904819] ***
*** finished computation of 3 references, err: [Inf, 1.6347566199894714, 0.5628405577529926, 0.3676662241570945, 0.3569221121904819] ***
*** center 1: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 28]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(2, 1), (3, 28)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47036228978859135] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47036228978859135, 0.3345733115864713] ***
*** finished computation of 3 references, err: [Inf, 0.47036228978859135, 0.3345733115864713] ***
*** center 1: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 24]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(2, 3), (3, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 6]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 28), (3, 6)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6043596616238278] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6043596616238278, 0.42790191968759445] ***
*** finished computation of 3 references, err: [Inf, 0.6043596616238278, 0.42790191968759445] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 13, 29]]
** centroid: 2, normalized-entropy: 0.8926230133850988, [(2, 13), (3, 29)]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9182032758267318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9182032758267318, 0.6238250897214842] ***
*** finished computation of 3 references, err: [Inf, 0.9182032758267318, 0.6238250897214842] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 3, 0]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(1, 14), (2, 3)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 29, 40]]
** centroid: 3, normalized-entropy: 0.9815886212101388, [(2, 29), (3, 40)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46195111537825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46195111537825, 0.246456219025371] ***
*** starting iteration: 2; err: [Inf, 0.46195111537825, 0.246456219025371] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46195111537825, 0.246456219025371, 0.21154013303632196] ***
*** starting iteration: 3; err: [Inf, 0.46195111537825, 0.246456219025371, 0.21154013303632196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46195111537825, 0.246456219025371, 0.21154013303632196, 0.19712540477305546] ***
*** finished computation of 7 references, err: [Inf, 0.46195111537825, 0.246456219025371, 0.21154013303632196, 0.19712540477305546] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 13]]
** centroid: 5, normalized-entropy: 0.9990102708804813, [(2, 14), (3, 13)]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3768390206693118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768390206693118, 0.24014394200856579] ***
*** starting iteration: 2; err: [Inf, 0.3768390206693118, 0.24014394200856579] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768390206693118, 0.24014394200856579, 0.21908217258367169] ***
*** starting iteration: 3; err: [Inf, 0.3768390206693118, 0.24014394200856579, 0.21908217258367169] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3768390206693118, 0.24014394200856579, 0.21908217258367169, 0.20815573667662834] ***
*** finished computation of 7 references, err: [Inf, 0.3768390206693118, 0.24014394200856579, 0.21908217258367169, 0.20815573667662834] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 7]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 5), (3, 7)]
*** center 3: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.9668751029188332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9668751029188332, 0.7935333924512158] ***
*** starting iteration: 2; err: [Inf, 1.9668751029188332, 0.7935333924512158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9668751029188332, 0.7935333924512158, 0.2958637192151703] ***
*** starting iteration: 3; err: [Inf, 1.9668751029188332, 0.7935333924512158, 0.2958637192151703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.9668751029188332, 0.7935333924512158, 0.2958637192151703, 0.2353223939546268] ***
*** finished computation of 7 references, err: [Inf, 1.9668751029188332, 0.7935333924512158, 0.2958637192151703, 0.2353223939546268] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 11]]
** centroid: 2, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 25, 2]]
** centroid: 4, normalized-entropy: 0.38094658570539014, [(2, 25), (3, 2)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 9.736700140049718] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.736700140049718, 1.0633012510156337] ***
*** starting iteration: 2; err: [Inf, 9.736700140049718, 1.0633012510156337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.736700140049718, 1.0633012510156337, 0.8640821679529244] ***
*** starting iteration: 3; err: [Inf, 9.736700140049718, 1.0633012510156337, 0.8640821679529244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 9.736700140049718, 1.0633012510156337, 0.8640821679529244, 0.8584668550282741] ***
*** finished computation of 3 references, err: [Inf, 9.736700140049718, 1.0633012510156337, 0.8640821679529244, 0.8584668550282741] ***
*** center 1: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 30, 30]]
** centroid: 2, normalized-entropy: 1.0, [(2, 30), (3, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [16, 1, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1305000059038548] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1305000059038548, 0.5870879109268979] ***
*** starting iteration: 2; err: [Inf, 1.1305000059038548, 0.5870879109268979] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1305000059038548, 0.5870879109268979, 0.5805149550378564] ***
*** starting iteration: 3; err: [Inf, 1.1305000059038548, 0.5870879109268979, 0.5805149550378564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1305000059038548, 0.5870879109268979, 0.5805149550378564, 0.5792779020836448] ***
*** finished computation of 3 references, err: [Inf, 1.1305000059038548, 0.5870879109268979, 0.5805149550378564, 0.5792779020836448] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 22]]
*** center 3: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.695499986784575] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.695499986784575, 1.078876607617542] ***
*** starting iteration: 2; err: [Inf, 3.695499986784575, 1.078876607617542] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.695499986784575, 1.078876607617542, 0.5536642721799756] ***
*** starting iteration: 3; err: [Inf, 3.695499986784575, 1.078876607617542, 0.5536642721799756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.695499986784575, 1.078876607617542, 0.5536642721799756, 0.5153338857535347] ***
*** finished computation of 3 references, err: [Inf, 3.695499986784575, 1.078876607617542, 0.5536642721799756, 0.5153338857535347] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 1, 28]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 2, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4797000060978036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4797000060978036, 0.5116341627354865] ***
*** starting iteration: 2; err: [Inf, 1.4797000060978036, 0.5116341627354865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4797000060978036, 0.5116341627354865, 0.41598985484459305] ***
*** starting iteration: 3; err: [Inf, 1.4797000060978036, 0.5116341627354865, 0.41598985484459305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4797000060978036, 0.5116341627354865, 0.41598985484459305, 0.40137429098387856] ***
*** finished computation of 7 references, err: [Inf, 1.4797000060978036, 0.5116341627354865, 0.41598985484459305, 0.40137429098387856] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 23]]
** centroid: 2, normalized-entropy: 0.5159469300074472, [(2, 3), (3, 23)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 7]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 28), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7902000161222696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7902000161222696, 0.3547386081470122] ***
*** starting iteration: 2; err: [Inf, 0.7902000161222696, 0.3547386081470122] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7902000161222696, 0.3547386081470122, 0.3036483006039973] ***
*** starting iteration: 3; err: [Inf, 0.7902000161222696, 0.3547386081470122, 0.3036483006039973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7902000161222696, 0.3547386081470122, 0.3036483006039973, 0.27525308600921217] ***
*** finished computation of 7 references, err: [Inf, 0.7902000161222696, 0.3547386081470122, 0.3036483006039973, 0.27525308600921217] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 4]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 14), (3, 4)]
*** center 6: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6221999993191555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6221999993191555, 0.33260535635584937] ***
*** starting iteration: 2; err: [Inf, 0.6221999993191555, 0.33260535635584937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6221999993191555, 0.33260535635584937, 0.2825295319258175] ***
*** starting iteration: 3; err: [Inf, 0.6221999993191555, 0.33260535635584937, 0.2825295319258175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6221999993191555, 0.33260535635584937, 0.2825295319258175, 0.2642969205045399] ***
*** finished computation of 7 references, err: [Inf, 0.6221999993191555, 0.33260535635584937, 0.2825295319258175, 0.2642969205045399] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 3]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 10), (3, 3)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 9, 4]]
** centroid: 4, normalized-entropy: 0.8904916402194913, [(2, 9), (3, 4)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6947360488999884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6947360488999884, 0.57101705854191] ***
*** finished computation of 3 references, err: [Inf, 0.6947360488999884, 0.57101705854191] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 30]]
** centroid: 1, normalized-entropy: 0.999806132804711, [(2, 31), (3, 30)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7099470008536245] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7099470008536245, 0.4096470159524088] ***
*** finished computation of 3 references, err: [Inf, 0.7099470008536245, 0.4096470159524088] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 8]]
** centroid: 1, normalized-entropy: 0.6931274153282881, [(2, 35), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 3, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.8976104657075563] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.8976104657075563, 0.8149400572115535] ***
*** finished computation of 3 references, err: [Inf, 2.8976104657075563, 0.8149400572115535] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 16]]
** centroid: 1, normalized-entropy: 0.9522656254366643, [(2, 27), (3, 16)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 5, 0]]
** centroid: 3, normalized-entropy: 0.6136190195993708, [(1, 28), (2, 5)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44191603934876356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44191603934876356, 0.217664704133054] ***
*** finished computation of 7 references, err: [Inf, 0.44191603934876356, 0.217664704133054] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 15]]
** centroid: 7, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3542178452487226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3542178452487226, 0.21776824748464169] ***
*** finished computation of 7 references, err: [Inf, 0.3542178452487226, 0.21776824748464169] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 14, 10]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(2, 14), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5637486911080226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5637486911080226, 0.24874636076988652] ***
*** finished computation of 7 references, err: [Inf, 0.5637486911080226, 0.24874636076988652] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 8, 15]]
** centroid: 2, normalized-entropy: 0.9321115676166747, [(2, 8), (3, 15)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 1, 0]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.991900004287006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.991900004287006, 0.5018833461636636] ***
*** starting iteration: 2; err: [Inf, 0.991900004287006, 0.5018833461636636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.991900004287006, 0.5018833461636636, 0.47711148778465323] ***
*** starting iteration: 3; err: [Inf, 0.991900004287006, 0.5018833461636636, 0.47711148778465323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.991900004287006, 0.5018833461636636, 0.47711148778465323, 0.47438053252674706] ***
*** finished computation of 3 references, err: [Inf, 0.991900004287006, 0.5018833461636636, 0.47711148778465323, 0.47438053252674706] ***
*** center 1: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 30, 9]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(2, 30), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.075600009402989] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.075600009402989, 0.6209435444489824] ***
*** starting iteration: 2; err: [Inf, 1.075600009402989, 0.6209435444489824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.075600009402989, 0.6209435444489824, 0.611219491765927] ***
*** starting iteration: 3; err: [Inf, 1.075600009402989, 0.6209435444489824, 0.611219491765927] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.075600009402989, 0.6209435444489824, 0.611219491765927, 0.611219491765927] ***
*** finished computation of 3 references, err: [Inf, 1.075600009402989, 0.6209435444489824, 0.611219491765927, 0.611219491765927] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 29]]
** centroid: 1, normalized-entropy: 0.9103480624345157, [(2, 14), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3631000171738936] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3631000171738936, 0.5816238828755498] ***
*** starting iteration: 2; err: [Inf, 1.3631000171738936, 0.5816238828755498] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3631000171738936, 0.5816238828755498, 0.527637860576169] ***
*** starting iteration: 3; err: [Inf, 1.3631000171738936, 0.5816238828755498, 0.527637860576169] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3631000171738936, 0.5816238828755498, 0.527637860576169, 0.5140559491897773] ***
*** finished computation of 3 references, err: [Inf, 1.3631000171738936, 0.5816238828755498, 0.527637860576169, 0.5140559491897773] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 28]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6311960646460768] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6311960646460768, 0.3590093243347773] ***
*** starting iteration: 2; err: [Inf, 0.6311960646460768, 0.3590093243347773] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6311960646460768, 0.3590093243347773, 0.3405409327617124] ***
*** starting iteration: 3; err: [Inf, 0.6311960646460768, 0.3590093243347773, 0.3405409327617124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6311960646460768, 0.3590093243347773, 0.3405409327617124, 0.33492486805259786] ***
*** finished computation of 3 references, err: [Inf, 0.6311960646460768, 0.3590093243347773, 0.3405409327617124, 0.33492486805259786] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 9]]
** centroid: 3, normalized-entropy: 0.7691928290130138, [(2, 31), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1946972495053674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1946972495053674, 0.41264419590158424] ***
*** starting iteration: 2; err: [Inf, 1.1946972495053674, 0.41264419590158424] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1946972495053674, 0.41264419590158424, 0.40813582638736734] ***
*** starting iteration: 3; err: [Inf, 1.1946972495053674, 0.41264419590158424, 0.40813582638736734] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1946972495053674, 0.41264419590158424, 0.40813582638736734, 0.40813582638736734] ***
*** finished computation of 3 references, err: [Inf, 1.1946972495053674, 0.41264419590158424, 0.40813582638736734, 0.40813582638736734] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 8]]
** centroid: 3, normalized-entropy: 0.6751914401458716, [(2, 37), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7255108783177892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7255108783177892, 0.37705077915878604] ***
*** starting iteration: 2; err: [Inf, 0.7255108783177892, 0.37705077915878604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7255108783177892, 0.37705077915878604, 0.36591164384025604] ***
*** starting iteration: 3; err: [Inf, 0.7255108783177892, 0.37705077915878604, 0.36591164384025604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7255108783177892, 0.37705077915878604, 0.36591164384025604, 0.3624574723464754] ***
*** finished computation of 3 references, err: [Inf, 0.7255108783177892, 0.37705077915878604, 0.36591164384025604, 0.3624574723464754] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 36]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 4), (3, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 28, 4]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 28), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6611419921090187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6611419921090187, 0.3517250672456879] ***
*** starting iteration: 2; err: [Inf, 0.6611419921090187, 0.3517250672456879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6611419921090187, 0.3517250672456879, 0.3397752156024892] ***
*** starting iteration: 3; err: [Inf, 0.6611419921090187, 0.3517250672456879, 0.3397752156024892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6611419921090187, 0.3517250672456879, 0.3397752156024892, 0.3343759092449092] ***
*** finished computation of 3 references, err: [Inf, 0.6611419921090187, 0.3517250672456879, 0.3397752156024892, 0.3343759092449092] ***
*** center 1: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4309786470685162] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4309786470685162, 0.4079121608999816] ***
*** starting iteration: 2; err: [Inf, 1.4309786470685162, 0.4079121608999816] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4309786470685162, 0.4079121608999816, 0.4079121608999816] ***
*** finished computation of 3 references, err: [Inf, 1.4309786470685162, 0.4079121608999816, 0.4079121608999816] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 36, 8]]
** centroid: 1, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 2, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8698947359818375] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8698947359818375, 0.4062893843642502] ***
*** starting iteration: 2; err: [Inf, 0.8698947359818375, 0.4062893843642502] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8698947359818375, 0.4062893843642502, 0.3702776670657514] ***
*** starting iteration: 3; err: [Inf, 0.8698947359818375, 0.4062893843642502, 0.3702776670657514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8698947359818375, 0.4062893843642502, 0.3702776670657514, 0.35933299532005547] ***
*** finished computation of 3 references, err: [Inf, 0.8698947359818375, 0.4062893843642502, 0.3702776670657514, 0.35933299532005547] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 1, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 28]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(2, 1), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6611419921090187] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6611419921090187, 0.3517250672456879] ***
*** finished computation of 3 references, err: [Inf, 0.6611419921090187, 0.3517250672456879] ***
*** center 1: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 12]]
** centroid: 3, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1951021046779635] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1951021046779635, 0.41264419590158424] ***
*** finished computation of 3 references, err: [Inf, 1.1951021046779635, 0.41264419590158424] ***
*** center 1: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 37, 8]]
** centroid: 3, normalized-entropy: 0.6751914401458716, [(2, 37), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.105653045973764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.105653045973764, 0.36771097331311786] ***
*** finished computation of 3 references, err: [Inf, 1.105653045973764, 0.36771097331311786] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 13]]
** centroid: 1, normalized-entropy: 0.8672816222000259, [(2, 32), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 27]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9667000063133478] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9667000063133478, 0.5152630784829576] ***
*** finished computation of 3 references, err: [Inf, 0.9667000063133478, 0.5152630784829576] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 13]]
** centroid: 1, normalized-entropy: 0.8756633923230399, [(2, 31), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [39, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5900999940649438] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5900999940649438, 0.5857103972135409] ***
*** finished computation of 3 references, err: [Inf, 1.5900999940649438, 0.5857103972135409] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 8]]
** centroid: 3, normalized-entropy: 0.6751914401458716, [(2, 37), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.075599994315527] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.075599994315527, 0.574099456363729] ***
*** finished computation of 3 references, err: [Inf, 1.075599994315527, 0.574099456363729] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 39]]
** centroid: 1, normalized-entropy: 0.7300166301457938, [(2, 10), (3, 39)]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 3, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5831000095003823] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5831000095003823, 0.2323729528484716] ***
*** starting iteration: 2; err: [Inf, 0.5831000095003823, 0.2323729528484716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5831000095003823, 0.2323729528484716, 0.22868609848410162] ***
*** starting iteration: 3; err: [Inf, 0.5831000095003823, 0.2323729528484716, 0.22868609848410162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5831000095003823, 0.2323729528484716, 0.22868609848410162, 0.22468555027352724] ***
*** finished computation of 7 references, err: [Inf, 0.5831000095003823, 0.2323729528484716, 0.22868609848410162, 0.22468555027352724] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 7, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5779000030711643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779000030711643, 0.2919050713522347] ***
*** starting iteration: 2; err: [Inf, 0.5779000030711643, 0.2919050713522347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779000030711643, 0.2919050713522347, 0.2582259599541053] ***
*** starting iteration: 3; err: [Inf, 0.5779000030711643, 0.2919050713522347, 0.2582259599541053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5779000030711643, 0.2919050713522347, 0.2582259599541053, 0.25060484478401973] ***
*** finished computation of 7 references, err: [Inf, 0.5779000030711643, 0.2919050713522347, 0.2582259599541053, 0.25060484478401973] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 6]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 18), (3, 6)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5244000082355097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5244000082355097, 0.2733882232196398] ***
*** starting iteration: 2; err: [Inf, 0.5244000082355097, 0.2733882232196398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5244000082355097, 0.2733882232196398, 0.25686257243145755] ***
*** starting iteration: 3; err: [Inf, 0.5244000082355097, 0.2733882232196398, 0.25686257243145755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5244000082355097, 0.2733882232196398, 0.25686257243145755, 0.24378588926693898] ***
*** finished computation of 7 references, err: [Inf, 0.5244000082355097, 0.2733882232196398, 0.25686257243145755, 0.24378588926693898] ***
*** center 1: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 3, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 4, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 15, 4]]
** centroid: 7, normalized-entropy: 0.7424875695421234, [(2, 15), (3, 4)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4479276650236737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641] ***
*** starting iteration: 2; err: [Inf, 0.4479276650236737, 0.2028985568531641] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933] ***
*** starting iteration: 3; err: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653] ***
*** starting iteration: 4; err: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266] ***
*** starting iteration: 5; err: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266, 0.16464674484297404] ***
*** starting iteration: 6; err: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266, 0.16464674484297404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266, 0.16464674484297404, 0.16346652679575566] ***
*** starting iteration: 7; err: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266, 0.16464674484297404, 0.16346652679575566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266, 0.16464674484297404, 0.16346652679575566, 0.16343760593420004] ***
*** finished computation of 7 references, err: [Inf, 0.4479276650236737, 0.2028985568531641, 0.18447435339317933, 0.17814751980813653, 0.1740343880553266, 0.16464674484297404, 0.16346652679575566, 0.16343760593420004] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 14, 11]]
** centroid: 1, normalized-entropy: 0.9895875212220558, [(2, 14), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47239536383659386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246] ***
*** starting iteration: 2; err: [Inf, 0.47239536383659386, 0.25448052221484246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958] ***
*** starting iteration: 3; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827] ***
*** starting iteration: 4; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555] ***
*** starting iteration: 5; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873] ***
*** starting iteration: 6; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873, 0.1771438635721179] ***
*** finished computation of 7 references, err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873, 0.1771438635721179] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 4, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39986331639557293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39986331639557293, 0.1673461709713139] ***
*** starting iteration: 2; err: [Inf, 0.39986331639557293, 0.1673461709713139] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39986331639557293, 0.1673461709713139, 0.15730478419584937] ***
*** starting iteration: 3; err: [Inf, 0.39986331639557293, 0.1673461709713139, 0.15730478419584937] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39986331639557293, 0.1673461709713139, 0.15730478419584937, 0.15532513823252] ***
*** starting iteration: 4; err: [Inf, 0.39986331639557293, 0.1673461709713139, 0.15730478419584937, 0.15532513823252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39986331639557293, 0.1673461709713139, 0.15730478419584937, 0.15532513823252, 0.15532513823252] ***
*** finished computation of 7 references, err: [Inf, 0.39986331639557293, 0.1673461709713139, 0.15730478419584937, 0.15532513823252, 0.15532513823252] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 10]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.472500001349905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.472500001349905, 0.2596928668217923] ***
*** finished computation of 7 references, err: [Inf, 0.472500001349905, 0.2596928668217923] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 3, 15]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 5: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 10]]
** centroid: 7, normalized-entropy: 0.7793498372920851, [(2, 3), (3, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5761999943809699] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5761999943809699, 0.28482178449465534] ***
*** finished computation of 7 references, err: [Inf, 0.5761999943809699, 0.28482178449465534] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 4]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 16), (3, 4)]
*** center 2: selecting labels [1] (freq >= 2) [from [33, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 3]]
** centroid: 5, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41490000744084055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41490000744084055, 0.26272637030490503] ***
*** finished computation of 7 references, err: [Inf, 0.41490000744084055, 0.26272637030490503] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 5]]
** centroid: 7, normalized-entropy: 0.940285958670631, [(2, 9), (3, 5)]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.9144000176799125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9144000176799125, 0.41836365407881543] ***
*** starting iteration: 2; err: [Inf, 0.9144000176799125, 0.41836365407881543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9144000176799125, 0.41836365407881543, 0.39855314300543326] ***
*** starting iteration: 3; err: [Inf, 0.9144000176799125, 0.41836365407881543, 0.39855314300543326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9144000176799125, 0.41836365407881543, 0.39855314300543326, 0.3932324946017724] ***
*** finished computation of 7 references, err: [Inf, 0.9144000176799125, 0.41836365407881543, 0.39855314300543326, 0.3932324946017724] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 8]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 28), (3, 8)]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 22]]
** centroid: 5, normalized-entropy: 0.5293608652873645, [(2, 3), (3, 22)]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45310000482174656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45310000482174656, 0.22905147926363068] ***
*** starting iteration: 2; err: [Inf, 0.45310000482174656, 0.22905147926363068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45310000482174656, 0.22905147926363068, 0.22325803811007244] ***
*** starting iteration: 3; err: [Inf, 0.45310000482174656, 0.22905147926363068, 0.22325803811007244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45310000482174656, 0.22905147926363068, 0.22325803811007244, 0.22289960727458488] ***
*** finished computation of 7 references, err: [Inf, 0.45310000482174656, 0.22905147926363068, 0.22325803811007244, 0.22289960727458488] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 7, 7]]
** centroid: 2, normalized-entropy: 1.0, [(2, 7), (3, 7)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 5.157599915949988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.157599915949988, 1.1364263638241159] ***
*** starting iteration: 2; err: [Inf, 5.157599915949988, 1.1364263638241159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.157599915949988, 1.1364263638241159, 0.32343464625026946] ***
*** starting iteration: 3; err: [Inf, 5.157599915949988, 1.1364263638241159, 0.32343464625026946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 5.157599915949988, 1.1364263638241159, 0.32343464625026946, 0.2844594446721373] ***
*** finished computation of 7 references, err: [Inf, 5.157599915949988, 1.1364263638241159, 0.32343464625026946, 0.2844594446721373] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 16, 11]]
** centroid: 1, normalized-entropy: 0.975119064940866, [(2, 16), (3, 11)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 15, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 3 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.4146023380809866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4146023380809866, 0.18327803893362823] ***
*** finished computation of 7 references, err: [Inf, 0.4146023380809866, 0.18327803893362823] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 8]]
** centroid: 1, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4270924380194323] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4270924380194323, 0.18889069056547453] ***
*** finished computation of 7 references, err: [Inf, 0.4270924380194323, 0.18889069056547453] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.43701536398400564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.43701536398400564, 0.1665276858871862] ***
*** finished computation of 7 references, err: [Inf, 0.43701536398400564, 0.1665276858871862] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 12, 2]]
** centroid: 3, normalized-entropy: 0.5916727785823274, [(2, 12), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 15, 11]]
** centroid: 4, normalized-entropy: 0.9828586897127057, [(2, 15), (3, 11)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.37710000184369263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37710000184369263, 0.27053104347907203] ***
*** finished computation of 7 references, err: [Inf, 0.37710000184369263, 0.27053104347907203] ***
*** center 1: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 11]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.627599998356309] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.627599998356309, 0.311508564761477] ***
*** finished computation of 7 references, err: [Inf, 0.627599998356309, 0.311508564761477] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 6, 1]]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 14, 21]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 14), (3, 21)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5969999974418171] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5969999974418171, 0.32489909796511307] ***
*** finished computation of 7 references, err: [Inf, 0.5969999974418171, 0.32489909796511307] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 4, 5]]
** centroid: 4, normalized-entropy: 0.9910760598382222, [(2, 4), (3, 5)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 3]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 15), (3, 3)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 7: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 19)
[0.9733333333333333, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9, 0.8933333333333334, 0.8866666666666667, 0.8799999999999999]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 21
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.41815134382276925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41815134382276925, 0.1800192594487909] ***
*** starting iteration: 2; err: [Inf, 0.41815134382276925, 0.1800192594487909] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126] ***
*** starting iteration: 3; err: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665] ***
*** starting iteration: 4; err: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665, 0.15714456907974558] ***
*** starting iteration: 5; err: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665, 0.15714456907974558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665, 0.15714456907974558, 0.15590674170427746] ***
*** starting iteration: 6; err: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665, 0.15714456907974558, 0.15590674170427746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665, 0.15714456907974558, 0.15590674170427746, 0.15561211247316753] ***
*** finished computation of 7 references, err: [Inf, 0.41815134382276925, 0.1800192594487909, 0.1718998323236126, 0.16375735924465665, 0.15714456907974558, 0.15590674170427746, 0.15561211247316753] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47239536383659386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246] ***
*** starting iteration: 2; err: [Inf, 0.47239536383659386, 0.25448052221484246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958] ***
*** starting iteration: 3; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827] ***
*** starting iteration: 4; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555] ***
*** starting iteration: 5; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873] ***
*** starting iteration: 6; err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873, 0.1771438635721179] ***
*** finished computation of 7 references, err: [Inf, 0.47239536383659386, 0.25448052221484246, 0.21523808618515958, 0.2010213792919827, 0.18149439924843555, 0.17806237434849873, 0.1771438635721179] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38179281299242773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084] ***
*** starting iteration: 2; err: [Inf, 0.38179281299242773, 0.1894113169710084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455] ***
*** starting iteration: 3; err: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866] ***
*** starting iteration: 4; err: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832] ***
*** starting iteration: 5; err: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832, 0.16311554111089951] ***
*** starting iteration: 6; err: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832, 0.16311554111089951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832, 0.16311554111089951, 0.15546713312256302] ***
*** starting iteration: 7; err: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832, 0.16311554111089951, 0.15546713312256302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832, 0.16311554111089951, 0.15546713312256302, 0.15491327793403248] ***
*** finished computation of 7 references, err: [Inf, 0.38179281299242773, 0.1894113169710084, 0.1760984090365455, 0.17123800345373866, 0.16718932827281832, 0.16311554111089951, 0.15546713312256302, 0.15491327793403248] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 2: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 10]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(2, 15), (3, 10)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5583000041861743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5583000041861743, 0.24537823562471422] ***
*** starting iteration: 2; err: [Inf, 0.5583000041861743, 0.24537823562471422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5583000041861743, 0.24537823562471422, 0.2282970096276449] ***
*** starting iteration: 3; err: [Inf, 0.5583000041861743, 0.24537823562471422, 0.2282970096276449] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5583000041861743, 0.24537823562471422, 0.2282970096276449, 0.2266747615662014] ***
*** starting iteration: 4; err: [Inf, 0.5583000041861743, 0.24537823562471422, 0.2282970096276449, 0.2266747615662014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5583000041861743, 0.24537823562471422, 0.2282970096276449, 0.2266747615662014, 0.22597892164291283] ***
*** finished computation of 7 references, err: [Inf, 0.5583000041861743, 0.24537823562471422, 0.2282970096276449, 0.2266747615662014, 0.22597892164291283] ***
*** center 1: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 3, 16]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(2, 3), (3, 16)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 1, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5460000049205287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5460000049205287, 0.25595882489089733] ***
*** starting iteration: 2; err: [Inf, 0.5460000049205287, 0.25595882489089733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259] ***
*** starting iteration: 3; err: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259, 0.23110728206739967] ***
*** starting iteration: 4; err: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259, 0.23110728206739967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259, 0.23110728206739967, 0.22976150982328913] ***
*** starting iteration: 5; err: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259, 0.23110728206739967, 0.22976150982328913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259, 0.23110728206739967, 0.22976150982328913, 0.22976150982328913] ***
*** finished computation of 7 references, err: [Inf, 0.5460000049205287, 0.25595882489089733, 0.23516552973644259, 0.23110728206739967, 0.22976150982328913, 0.22976150982328913] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 6]]
** centroid: 1, normalized-entropy: 0.828055725379504, [(2, 17), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 10, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 10, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4894000063987076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497] ***
*** starting iteration: 2; err: [Inf, 0.4894000063987076, 0.2747772192998497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758] ***
*** starting iteration: 3; err: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898] ***
*** starting iteration: 4; err: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506] ***
*** starting iteration: 5; err: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506, 0.22762297944599663] ***
*** starting iteration: 6; err: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506, 0.22762297944599663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506, 0.22762297944599663, 0.224408861064072] ***
*** starting iteration: 7; err: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506, 0.22762297944599663, 0.224408861064072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506, 0.22762297944599663, 0.224408861064072, 0.224408861064072] ***
*** finished computation of 7 references, err: [Inf, 0.4894000063987076, 0.2747772192998497, 0.2574203315280758, 0.24378588926693898, 0.23242038416557506, 0.22762297944599663, 0.224408861064072, 0.224408861064072] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 6, 8]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 6), (3, 8)]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 13, 4]]
** centroid: 7, normalized-entropy: 0.787126586201269, [(2, 13), (3, 4)]
finished with 9 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2), 0.9733333333333333)
Test Summary: | Pass  Total
AKNC          |    1      1
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.84, 3.248, 1.4239999999999997, 0.228], [7.6, 3.16, 6.500000000000002, 2.2600000000000002], [5.9799999999999995, 2.9399999999999995, 4.39, 1.365], [5.371428571428572, 3.792857142857143, 1.5357142857142858, 0.29285714285714287], [6.866666666666667, 3.1, 4.866666666666666, 1.5333333333333332], [6.712500000000001, 3.0812500000000003, 5.581250000000001, 2.1], [5.414285714285714, 2.5285714285714285, 3.7428571428571424, 1.1714285714285713], [6.02, 2.71, 5.0600000000000005, 1.7700000000000002]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 1, 2, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.4529411764705875, 2.894117647058823, 4.647058823529412, 1.464705882352941], [5.983333333333333, 2.6999999999999997, 4.983333333333333, 1.75], [4.659999999999999, 3.0866666666666664, 1.3733333333333335, 0.18000000000000005], [7.562500000000001, 3.0625000000000004, 6.4, 2.1125], [5.380000000000001, 2.36, 3.6000000000000005, 1.06], [6.533333333333334, 3.0266666666666664, 5.526666666666666, 2.18], [5.222222222222222, 3.6166666666666663, 1.5222222222222221, 0.27777777777777785], [5.60909090909091, 2.7545454545454544, 4.154545454545455, 1.3090909090909093]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.8315789473684205, 3.210526315789474, 1.4578947368421054, 0.23157894736842108], [7.425000000000001, 3.1875, 6.2250000000000005, 1.9375000000000002], [5.75, 3.0666666666666664, 4.5, 1.5333333333333334], [5.7375, 2.8125, 4.9375, 1.9125], [6.49, 3.055, 5.519999999999999, 2.1], [5.411111111111111, 3.9000000000000004, 1.511111111111111, 0.2777777777777778], [5.538461538461538, 2.5461538461538455, 3.7923076923076926, 1.146153846153846], [6.361538461538462, 2.7999999999999994, 4.6, 1.4307692307692306], [6.2, 2.55, 4.925, 1.75]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 1, 2, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :fft, 0.6, 2))]
[38, 1, 17, 11, 7, 6, 27, 42, 1, 32, 44, 16, 20, 35, 46, 11, 22, 22, 29, 28, 31, 7, 32, 18, 8, 39, 11, 6, 11, 35, 30, 27, 52, 36, 15, 41, 43, 43, 37, 23, 26, 4, 4, 42, 41, 35, 37, 55, 29, 39, 30, 50, 50, 10, 37, 28, 27, 16, 22, 29, 47, 27, 37, 26, 54, 21, 8, 74, 24, 17, 27, 50, 45, 41, 4, 31, 37, 18, 1, 35, 38, 6, 31, 27, 29, 64, 43, 33, 31, 43, 32, 38, 18, 1, 1, 35, 34, 21, 32, 33, 20, 31, 47, 42, 49, 42, 27, 24, 37, 30, 43, 2, 47, 25, 22, 40, 39, 41, 30, 22, 38, 3, 21, 23, 42, 35, 32, 1, 24, 43, 31, 32, 30, 35, 44, 39, 66, 35, 41, 37, 49, 25, 25, 26, 34, 49, 40, 31, 28, 36, 50, 47, 19, 23, 50, 6, 37, 24, 36, 23, 46, 36, 31, 39, 38, 55, 11, 104, 10, 40, 28, 22, 52, 43, 69, 39, 26, 65, 59, 22, 38, 44, 31, 13, 49, 41, 26, 40, 45, 25, 37, 50, 43, 40, 57, 21, 28, 26, 24, 30, 36, 34, 36, 36, 36, 49, 27, 30, 35, 1, 43, 37, 24, 62, 49, 30, 48, 39, 41, 44, 50, 41, 42, 42, 30, 44, 21, 55, 39, 45, 37, 15, 49, 17, 41, 22, 20, 41, 33, 34, 9, 50, 40, 56, 38, 52, 1, 47, 1, 34, 42, 45, 34, 38, 40, 37, 28, 43, 37, 28, 42, 42, 27, 28, 23, 26, 37, 59, 32, 47, 51, 25, 59, 30, 58, 37, 31, 33, 33, 46, 35, 30, 48, 27, 50, 38, 45, 31, 42, 22, 47, 1, 47, 38, 62, 40, 20, 28, 39, 51]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6179999999999999, speedup = 0.29680821347973657, eval_ratio = 0.041565)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.39930555555555547,"f1":null,"seconds":6.547756493091583e-5,"exhaustive_search_seconds":0.0003556329756975174,"evaluations":340.1015625,"distances_sum":1701.7011560426336}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5442708333333334,"recall":0.5442708333333334,"f1":null,"seconds":9.537674486637115e-5,"exhaustive_search_seconds":0.0003556329756975174,"evaluations":379.453125,"distances_sum":1638.5481131011827}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.644097222222222,"recall":0.644097222222222,"f1":0.644097222222222,"seconds":0.00012549199163913727,"exhaustive_search_seconds":0.0003556329756975174,"evaluations":420.578125,"distances_sum":1596.9924523603142}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7204861111111105,"recall":0.7204861111111105,"f1":0.7204861111111105,"seconds":0.0001581236720085144,"exhaustive_search_seconds":0.0003556329756975174,"evaluations":460.7578125,"distances_sum":1570.5137422347323}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7838541666666659,"recall":0.7838541666666659,"f1":0.7838541666666659,"seconds":0.00019056163728237152,"exhaustive_search_seconds":0.0003556329756975174,"evaluations":501.921875,"distances_sum":1556.8617768320998}
KCenters.DeloneInvIndex> reached performance {"precision":0.8237847222222213,"recall":0.8237847222222213,"f1":0.8237847222222213,"seconds":0.00022003985941410065,"exhaustive_search_seconds":0.0003556329756975174,"evaluations":543.59375,"distances_sum":1547.1124807854903}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8030000000000003, speedup = 1.652343181894459, eval_ratio = 0.053536)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
