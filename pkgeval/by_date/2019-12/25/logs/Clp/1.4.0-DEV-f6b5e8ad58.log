Julia Version 1.4.0-DEV.661
Commit f6b5e8ad58 (2019-12-24 15:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Clp ──────────────── v0.7.0
 Installed Compat ───────────── v2.2.0
 Installed OrderedCollections ─ v1.1.0
 Installed BenchmarkTools ───── v0.4.3
 Installed MutableArithmetics ─ v0.1.1
 Installed BinaryProvider ───── v0.5.8
 Installed MathProgBase ─────── v0.7.7
 Installed MathOptInterface ─── v0.9.8
 Installed JSON ─────────────── v0.21.0
 Installed Parsers ──────────── v0.3.10
  Updating `~/.julia/environments/v1.4/Project.toml`
  [e2554f3b] + Clp v0.7.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [6e4b80f9] + BenchmarkTools v0.4.3
  [b99e7846] + BinaryProvider v0.5.8
  [e2554f3b] + Clp v0.7.0
  [34da2185] + Compat v2.2.0
  [682c06a0] + JSON v0.21.0
  [b8f27783] + MathOptInterface v0.9.8
  [fdba3010] + MathProgBase v0.7.7
  [d8a4904e] + MutableArithmetics v0.1.1
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building Clp → `~/.julia/packages/Clp/4DejL/deps/build.log`
  Updating `/tmp/jl_pUaBhK/Project.toml`
 [no changes]
  Updating `/tmp/jl_pUaBhK/Manifest.toml`
 [no changes]
   Testing Clp
  Updating `/tmp/jl_OhdbVU/Project.toml`
 [no changes]
  Updating `/tmp/jl_OhdbVU/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_OhdbVU/Project.toml`
  [b99e7846] BinaryProvider v0.5.8
  [e2554f3b] Clp v0.7.0
  [34da2185] Compat v2.2.0
  [b8f27783] MathOptInterface v0.9.8
  [fdba3010] MathProgBase v0.7.7
  [8f399da3] Libdl 
  [37e2e46d] LinearAlgebra 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
┌ Warning: Element type Int64 does not have an infinite value. Note that this may artifically introduce ranged (two-sided) constraints. To avoid this, consider casting the problem data to Float64.
└ @ MathProgBase.HighLevelInterface ~/.julia/packages/MathProgBase/rVlFR/src/HighLevelInterface/HighLevelInterface.jl:9
Test Summary: | Pass  Total
MathProgBase  |  126    126
Test Summary:    | Pass  Total
MathOptInterface | 1000   1000
   Testing Clp tests passed 
