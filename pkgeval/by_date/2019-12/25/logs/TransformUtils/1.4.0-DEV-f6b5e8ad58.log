Julia Version 1.4.0-DEV.661
Commit f6b5e8ad58 (2019-12-24 15:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
  Updating `/tmp/jl_qPUt6M/Project.toml`
 [no changes]
  Updating `/tmp/jl_qPUt6M/Manifest.toml`
 [no changes]
Running sandbox
Status `/tmp/jl_qPUt6M/Project.toml`
  [9b8138ad] TransformUtils v0.2.2
  [37e2e46d] LinearAlgebra 
  [9abbd945] Profile 
  [8dfed614] Test 
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.04799572707074772 0.09425674881237528; -0.04799572707074772 0.0 0.19339264522248337; -0.09425674881237528 -0.19339264522248337 0.0])
dAA = so3([0.0 0.08262450834660287 -0.06481240252762828; -0.08262450834660287 0.0 -0.028020796787856947; 0.06481240252762828 0.028020796787856947 0.0])
dAA = so3([0.0 0.09264351256219194 -0.10611256944416846; -0.09264351256219194 0.0 -0.06580921335153805; 0.10611256944416846 0.06580921335153805 0.0])
dAA = Quaternion(0.9949710788098237, [0.07819727265623634, 0.061590554964432644, 0.011150893251908026])
dAA = SO3([0.991109122116179 -0.0005873923187067736 0.13305022746452158; 0.011564975210138087 0.9965858217380057 -0.08174931962513694; -0.13254795134775152 0.08256121898959483 0.98773209207379])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9657506929999125 0.1983884723480691 -0.16723520266256212; -0.2096694052511355 0.9763585701086216 -0.052561231692977856; 0.1528539808831419 0.08582515141173482 0.984514958704706]), [-1.9339264522248336, 0.9425674881237528, -0.4799572707074772])
xj = SE3(SO3([0.951984894071817 -0.01794788860018907 0.3056184463573274; 0.1356181995758391 0.9197094759812787 -0.36843206121895733; -0.2744676035580142 0.3921891802243362 0.8779835884070294]), [0.6580921335153805, -1.0611256944416845, -0.9264351256219194])
Dx = SE3(SO3([0.8489916181017111 -0.15022044722976025 0.5066034441524545; 0.2977185966189354 0.9280652704579638 -0.22373754936764126; -0.43655110768418603 0.3407765705031332 0.832643056402822]), [2.8551109858416766, -1.4804154326431984, -0.7677242987745878])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
