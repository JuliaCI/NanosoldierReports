Julia Version 1.4.0-DEV.667
Commit acb7bd93fb (2019-12-27 21:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed CodeTracking ─────── v0.5.8
 Installed LoweredCodeUtils ─── v0.4.2
 Installed OrderedCollections ─ v1.1.0
 Installed JuliaInterpreter ─── v0.7.6
 Installed Revise ───────────── v2.5.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [295af30f] + Revise v2.5.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [da1fd8a2] + CodeTracking v0.5.8
  [aa1ae85d] + JuliaInterpreter v0.7.6
  [6f1432cf] + LoweredCodeUtils v0.4.2
  [bac558e1] + OrderedCollections v1.1.0
  [295af30f] + Revise v2.5.0
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8ba89e20] + Distributed 
  [7b1f6079] + FileWatching 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing Revise
 Installed MappedArrays ───── v0.2.2
 Installed Example ────────── v0.5.3
 Installed EponymTuples ───── v0.2.2
 Installed EndpointRanges ─── v0.2.0
 Installed Requires ───────── v1.0.0
 Installed CustomUnitRanges ─ v0.2.0
 Installed CatIndices ─────── v0.2.0
 Installed OffsetArrays ───── v0.11.4
  Updating `/tmp/jl_sSUNEr/Project.toml`
  [aafaddc9] + CatIndices v0.2.0
  [340492b5] + EndpointRanges v0.2.0
  [97e2ac4a] + EponymTuples v0.2.2
  [7876af07] + Example v0.5.3
  [dbb5928d] + MappedArrays v0.2.2
  [ae029012] + Requires v1.0.0
  Updating `/tmp/jl_sSUNEr/Manifest.toml`
  [aafaddc9] + CatIndices v0.2.0
  [dc8bdbbb] + CustomUnitRanges v0.2.0
  [340492b5] + EndpointRanges v0.2.0
  [97e2ac4a] + EponymTuples v0.2.2
  [7876af07] + Example v0.5.3
  [dbb5928d] + MappedArrays v0.2.2
  [6fe1bfb0] + OffsetArrays v0.11.4
  [ae029012] + Requires v1.0.0
Running sandbox
Status `/tmp/jl_sSUNEr/Project.toml`
  [aafaddc9] CatIndices v0.2.0
  [da1fd8a2] CodeTracking v0.5.8
  [340492b5] EndpointRanges v0.2.0
  [97e2ac4a] EponymTuples v0.2.2
  [7876af07] Example v0.5.3
  [aa1ae85d] JuliaInterpreter v0.7.6
  [6f1432cf] LoweredCodeUtils v0.4.2
  [dbb5928d] MappedArrays v0.2.2
  [bac558e1] OrderedCollections v1.1.0
  [ae029012] Requires v1.0.0
  [295af30f] Revise v2.5.0
  [8ba89e20] Distributed 
  [7b1f6079] FileWatching 
  [b77e0a4c] InteractiveUtils 
  [76f85450] LibGit2 
  [44cfe95a] Pkg 
  [3fa0cd96] REPL 
  [9a3f8284] Random 
  [8dfed614] Test 
  [cf7118a7] UUIDs 
  [4ec0a83e] Unicode 
Skipping Base.active_repl
Skipping Base.active_repl_backend
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:109
│   mod = Main.Toplevel
│   ex =
│    quote
│        #= toplevel:108 =#
│        for f = (:length, :size)
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:109 =#
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:109 =# @eval Base.:($(Expr(:$, :f)))(i::Struct, args...) = begin
│                        #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:109 =#
│                        nothing
│                    end
│        end
│    end
│   exception =
│    setfield! immutable struct of type QuoteNode cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/S7mrl/test/toplevel:111
│   mod = Main.Toplevel
│   ex =
│    quote
│        #= toplevel:111 =#
│        for (T, v) = Dict(Float32 => 4, Float64 => 8)
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:112 =#
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:112 =# @eval nbytes(::Type{$(Expr(:$, :T))}) = begin
│                        #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:112 =#
│                        $(Expr(:$, :v))
│                    end
│        end
│    end
│   exception =
│    setfield! immutable struct of type Pair cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:115
│   mod = Main.Toplevel
│   ex =
│    quote
│        #= toplevel:114 =#
│        for x = (1, 1.1)
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:115 =#
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:115 =# @eval typestring(::$(Expr(:$, :(typeof(x))))) = begin
│                        #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:115 =#
│                        $(Expr(:$, :(string(typeof(x)))))
│                    end
│        end
│    end
│   exception =
│    setfield! immutable struct of type Pairs cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:118
│   mod = Main.Toplevel
│   ex =
│    quote
│        #= toplevel:117 =#
│        for name = (:feval3,)
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:118 =#
│            _f = Symbol("_", name)
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:119 =#
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:119 =# @eval ($(Expr(:$, :_f)))(arg) = begin
│                        #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:119 =#
│                        3
│                    end
│        end
│    end
│   exception =
│    setfield! immutable struct of type Pairs cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/S7mrl/test/toplevel:122
│   mod = Main.Toplevel
│   ex =
│    quote
│        #= toplevel:122 =#
│        for op = [:+, :-, :max, :min]
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:123 =#
│            opname = get(opnames, op, op)
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:124 =#
│            #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:124 =# @eval ($(Expr(:$, :(Symbol("feval_", opname, "!")))))(var) = begin
│                        #= /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/test/toplevel_script.jl:124 =#
│                        1
│                    end
│        end
│    end
│   exception =
│    setfield! immutable struct of type UnitRange cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
Signature extraction: Test Failed at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:148
  Expression: isempty(failed)
   Evaluated: isempty(Any[Tuple{typeof(Main.Toplevel._feval3),Any}, Tuple{typeof(Main.Toplevel.feval_add!),Any}, Tuple{typeof(Main.Toplevel.feval_max!),Any}, Tuple{typeof(Main.Toplevel.feval_min!),Any}, Tuple{typeof(Main.Toplevel.feval_sub!),Any}, Tuple{typeof(Main.Toplevel.nbytes),Type{Float32}}, Tuple{typeof(Main.Toplevel.nbytes),Type{Float64}}, Tuple{typeof(Main.Toplevel.typestring),Float64}, Tuple{typeof(Main.Toplevel.typestring),Int64}])
Stacktrace:
 [1] top-level scope at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:148
 [2] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
 [3] top-level scope at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:124
 [4] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
 [5] top-level scope at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:70
[ Info: tracking Base
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/S7mrl/test/toplevel:136
│   mod = Base
│   ex =
│    quote
│        #= toplevel:136 =#
│        for op = Symbol[:+, :-, :*, :/, :^]
│            #= /buildworker/worker/package_linux64/build/base/irrationals.jl:137 =#
│            #= /buildworker/worker/package_linux64/build/base/irrationals.jl:137 =# @eval ($(Expr(:$, :op)))(x::AbstractIrrational, y::AbstractIrrational) = begin
│                        #= /buildworker/worker/package_linux64/build/base/irrationals.jl:137 =#
│                        ($(Expr(:$, :op)))(Float64(x), Float64(y))
│                    end
│        end
│    end
│   exception =
│    setfield! immutable struct of type UnitRange cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Warning: skipping git tests because Revise is not under development
└ @ Main ~/.julia/packages/Revise/S7mrl/test/runtests.jl:2019
extra
┌ Error: evaluation error starting at /buildworker/worker/package_linux64/build/base/stream.jl:1077
│   mod = Base
│   ex =
│    quote
│        #= toplevel:1073 =#
│        for (x, writable, unix_fd, c_symbol) = ((:stdin, false, 0, :jl_uv_stdin), (:stdout, true, 1, :jl_uv_stdout), (:stderr, true, 2, :jl_uv_stderr))
│            #= /buildworker/worker/package_linux64/build/base/stream.jl:1077 =#
│            f = Symbol("redirect_", lowercase(string(x)))
│            #= /buildworker/worker/package_linux64/build/base/stream.jl:1078 =#
│            _f = Symbol("_", f)
│            #= /buildworker/worker/package_linux64/build/base/stream.jl:1079 =#
│            #= /buildworker/worker/package_linux64/build/base/stream.jl:1079 =# @eval begin
│                    #= /buildworker/worker/package_linux64/build/base/stream.jl:1080 =#
│                    function ($(Expr(:$, :_f)))(stream)
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1081 =#
│                        global $(Expr(:$, :x))
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1082 =#
│                        posix_fd = _fd(stream)
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1083 =#
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1083 =# @static if Sys.iswindows()
│                                #= /buildworker/worker/package_linux64/build/base/stream.jl:1084 =#
│                                ccall(:SetStdHandle, stdcall, Int32, (Int32, OS_HANDLE), $(Expr(:$, :(-10 - unix_fd))), Libc._get_osfhandle(posix_fd))
│                            end
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1087 =#
│                        dup(posix_fd, RawFD($(Expr(:$, :unix_fd))))
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1088 =#
│                        $(Expr(:$, :x)) = stream
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1089 =#
│                        nothing
│                    end
│                    #= /buildworker/worker/package_linux64/build/base/stream.jl:1091 =#
│                    function ($(Expr(:$, :f)))(handle::Union{LibuvStream, IOStream})
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1092 =#
│                        ($(Expr(:$, :_f)))(handle)
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1093 =#
│                        unsafe_store!(cglobal($(Expr(:$, :(Expr(:quote, c_symbol)))), Ptr{Cvoid}), handle.handle)
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1095 =#
│                        return handle
│                    end
│                    #= /buildworker/worker/package_linux64/build/base/stream.jl:1097 =#
│                    function ($(Expr(:$, :f)))()
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1098 =#
│                        p = link_pipe!(Pipe())
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1099 =#
│                        (read, write) = (p.out, p.in)
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1100 =#
│                        ($(Expr(:$, :f)))($(Expr(:$, :(if writable
│                                :write
│                            else
│                                :read
│                            end))))
│                        #= /buildworker/worker/package_linux64/build/base/stream.jl:1101 =#
│                        return (read, write)
│                    end
│                end
│        end
│    end
│   exception =
│    setfield! immutable struct of type Pairs cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Warning: skipping redirect_stdout() in Base at stream.jl:1098 to avoid parsing too much code
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/Revise.jl:919
Recipes: Error During Test at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:2090
  Test threw exception
  Expression: (definition(m)).head == :function
  type Nothing has no field head
  Stacktrace:
   [1] getproperty(::Nothing, ::Symbol) at ./Base.jl:33
   [2] top-level scope at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:2090
   [3] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [4] top-level scope at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:2076
   [5] top-level scope at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116
   [6] top-level scope at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:70
  
[ Info: tracking Pkg
┌ Warning: skipping Core.Compiler tests due to lack of git repo
└ @ Main ~/.julia/packages/Revise/S7mrl/test/runtests.jl:2127
┌ Error: evaluation error starting at /buildworker/worker/package_linux64/build/base/reducedim.jl:166
│   mod = Base
│   ex =
│    quote
│        #= toplevel:164 =#
│        let
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:165 =#
│            BitIntFloat = Union{BitInteger, IEEEFloat}
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:166 =#
│            T = Union{[AbstractArray{t} for t = uniontypes(BitIntFloat)]..., [AbstractArray{Complex{t}} for t = uniontypes(BitIntFloat)]...}
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:170 =#
│            global function reducedim_init(f, op::Union{typeof(+), typeof(add_sum)}, A::T, region)
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:171 =#
│                    z = zero(f(zero(eltype(A))))
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:172 =#
│                    reducedim_initarray(A, region, op(z, z))
│                end
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:174 =#
│            global function reducedim_init(f, op::Union{typeof(*), typeof(mul_prod)}, A::T, region)
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:175 =#
│                    u = one(f(one(eltype(A))))
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:176 =#
│                    reducedim_initarray(A, region, op(u, u))
│                end
│        end
│    end
│   exception =
│    setfield! immutable struct of type Generator cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/S7mrl/test/toplevel:648
│   mod = Base
│   ex =
│    quote
│        #= toplevel:355 =#
│        #= toplevel:379 =#
│        #= toplevel:403 =#
│        #= toplevel:427 =#
│        #= toplevel:451 =#
│        #= toplevel:477 =#
│        #= toplevel:501 =#
│        #= toplevel:527 =#
│        #= toplevel:551 =#
│        #= toplevel:575 =#
│        #= toplevel:599 =#
│        #= toplevel:623 =#
│        #= toplevel:648 =#
│        for (fname, _fname, op) = [(:sum, :_sum, :add_sum), (:prod, :_prod, :mul_prod), (:maximum, :_maximum, :max), (:minimum, :_minimum, :min)]
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:650 =#
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:650 =# @eval begin
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:652 =#
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:652 =# @inline ($(Expr(:$, :fname)))(a::AbstractArray; dims = (:)) = begin
│                                #= /buildworker/worker/package_linux64/build/base/reducedim.jl:652 =#
│                                ($(Expr(:$, :_fname)))(a, dims)
│                            end
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:653 =#
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:653 =# @inline ($(Expr(:$, :fname)))(f, a::AbstractArray; dims = (:)) = begin
│                                #= /buildworker/worker/package_linux64/build/base/reducedim.jl:653 =#
│                                ($(Expr(:$, :_fname)))(f, a, dims)
│                            end
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:656 =#
│                    ($(Expr(:$, :_fname)))(a, ::Colon) = begin
│                            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:656 =#
│                            ($(Expr(:$, :_fname)))(identity, a, :)
│                        end
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:657 =#
│                    ($(Expr(:$, :_fname)))(f, a, ::Colon) = begin
│                            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:657 =#
│                            mapreduce(f, $(Expr(:$, :op)), a)
│                        end
│                end
│        end
│    end
│   exception =
│    setfield! immutable struct of type UnitRange cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Error: evaluation error starting at /home/pkgeval/.julia/packages/Revise/S7mrl/test/toplevel:668
│   mod = Base
│   ex =
│    quote
│        #= toplevel:668 =#
│        for (fname, op) = [(:sum, :add_sum), (:prod, :mul_prod), (:maximum, :max), (:minimum, :min), (:all, :&), (:any, :|)]
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:671 =#
│            fname! = Symbol(fname, '!')
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:672 =#
│            _fname = Symbol('_', fname)
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:673 =#
│            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:673 =# @eval begin
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:674 =#
│                    ($(Expr(:$, :fname!)))(f::Function, r::AbstractArray, A::AbstractArray; init::Bool = true) = begin
│                            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:674 =#
│                            mapreducedim!(f, $(Expr(:$, :op)), initarray!(r, $(Expr(:$, :op)), init, A), A)
│                        end
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:676 =#
│                    ($(Expr(:$, :fname!)))(r::AbstractArray, A::AbstractArray; init::Bool = true) = begin
│                            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:676 =#
│                            ($(Expr(:$, :fname!)))(identity, r, A; init = init)
│                        end
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:678 =#
│                    ($(Expr(:$, :_fname)))(A, dims) = begin
│                            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:678 =#
│                            ($(Expr(:$, :_fname)))(identity, A, dims)
│                        end
│                    #= /buildworker/worker/package_linux64/build/base/reducedim.jl:679 =#
│                    ($(Expr(:$, :_fname)))(f, A, dims) = begin
│                            #= /buildworker/worker/package_linux64/build/base/reducedim.jl:679 =#
│                            mapreduce(f, $(Expr(:$, :op)), A, dims = dims)
│                        end
│                end
│        end
│    end
│   exception =
│    setfield! immutable struct of type UnitRange cannot be changed
│    Stacktrace:
│     [1] eval_rhs(::Any, ::Frame, ::Expr) at /home/pkgeval/.julia/packages/JuliaInterpreter/8pCgm/src/interpret.jl:50
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/lowered.jl:105
┌ Warning: skipping (::Base.var"#sum##kw")(::Any, ::typeof(sum), a::AbstractArray) in Base at reducedim.jl:652 to avoid parsing too much code
└ @ Revise ~/.julia/packages/Revise/S7mrl/src/Revise.jl:919
Test Summary:                             | Pass  Fail  Error  Broken  Total
Revise                                    |  494     1      1       1    497
  PkgData                                 |    1                           1
  LineSkipping                            |    8                           8
  Equality and hashing                    |    5                           5
  Parse errors                            |    1                           1
  Signature extraction                    |    1     1                     2
  Comparison and line numbering           |   75                    1     76
  Display                                 |    4                           4
  File paths                              |  111                         111
  Base & stdlib file paths                |    5                           5
  Cross-module extension                  |    6                           6
  @__FILE__                               |    2                           2
  Module docstring                        |    6                           6
  Undef in docstrings                     |   72                          72
  Macro docstrings (issue #309)           |    4                           4
  Changing @inline annotations            |   16                          16
  Revising macros                         |    5                           5
  More arg-modifying macros               |    4                           4
  Line numbers                            |    5                           5
  Line numbers in backtraces and warnings |    6                           6
  New submodules                          |    3                           3
  Timing (issue #341)                     |    3                           3
  Method deletion                         |   58                          58
  Evaled toplevel                         |    4                           4
  Revision errors                         |   30                          30
  get_def                                 |    7                           7
  Pkg exclusion                           |    3                           3
  Manual track                            |   17                          17
  Auto-track user scripts                 |    4                           4
  Distributed                             |   15                          15
  Git                                     |    2                           2
  Recipes                                 |   10            1             11
  CodeTracking #48                        |    1                           1
  Methods at REPL                         |                            No tests
ERROR: LoadError: Some tests did not pass: 494 passed, 1 failed, 1 errored, 1 broken.
in expression starting at /home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl:69
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/Revise/S7mrl/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/Revise/S7mrl/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package Revise errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1471
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#66 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#65 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
