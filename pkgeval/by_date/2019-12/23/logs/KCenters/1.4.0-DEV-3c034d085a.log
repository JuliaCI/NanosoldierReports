Julia Version 1.4.0-DEV.649
Commit 3c034d085a (2019-12-20 23:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Missings ──────────────────── v0.4.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed KCenters ──────────────────── v0.1.8
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed Tables ────────────────────── v0.2.11
 Installed MappedArrays ──────────────── v0.2.2
 Installed PooledArrays ──────────────── v0.5.3
 Installed Reexport ──────────────────── v0.2.0
 Installed DataValueInterfaces ───────── v1.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Compat ────────────────────── v3.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed LearnBase ─────────────────── v0.2.2
 Installed CategoricalArrays ─────────── v0.7.5
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Parsers ───────────────────── v0.3.10
 Installed DataFrames ────────────────── v0.20.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_8sQMIw/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_8sQMIw/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_8sQMIw/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 138.36999999999995
[ Info: 71.78999999999998
[ Info: 42.599999999999994
[ Info: 25.280000000000005
Test Summary:        | Pass  Total
Clustering with enet |    4      4
Test Summary:        |
Clustering with dnet | No tests
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.19999834944844
[ Info: 75.78000114538527
inertia(cfft.distances) = 18.7977060097429
inertia(cdnet.distances) = 23.203219603188728
inertia(crand.distances) = 20.83816531317842
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4873046875, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.4873046875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.2890625,"distances_sum":1286.8386901186518}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4873046875,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.4873046875,"f1":null,"seconds":3.6600977182388306e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.2890625,"distances_sum":1286.8386901186518}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9001862720612728,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.59375,"distances_sum":2328.1462520977598}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8935132575757584,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.40625,"distances_sum":2328.4272146439703}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8573499417249426,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2578125,"distances_sum":2123.955686600633}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.515625, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.515625,"f1":0.6629334207459211,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4453125,"distances_sum":1378.2659695501845}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7728047993673002,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.53125,"distances_sum":1750.2373200943443}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5048828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5048828125,"f1":null,"seconds":4.900619387626648e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.421875,"distances_sum":1358.9764012369426}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.501953125, conf: {"ssize":8,"bsize":3}, perf: {"precision":null,"recall":0.501953125,"f1":null,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":6.4140625,"distances_sum":1355.0256634821262}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9001862720612728,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.59375,"distances_sum":2328.1462520977598}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9083681943056949,"seconds":6.118789315223694e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.734375,"distances_sum":2387.5771929832495}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370421245421254,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":2568.6027580178406}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.941300366300367,"seconds":5.938112735748291e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8359375,"distances_sum":2602.900220681712}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648695054945058,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":2773.684460031876}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9578754578754584,"seconds":5.992129445075989e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.890625,"distances_sum":2702.745493322929}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9453067765567772,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7890625,"distances_sum":2662.1635894818487}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9334228271728278,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7890625,"distances_sum":2582.317395151046}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648695054945058,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":2773.684460031876}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648695054945058,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.90625,"distances_sum":2773.684460031876}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.779296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.779296875,"f1":0.871010760073261,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8125,"distances_sum":1894.9722195954969}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.779296875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.779296875,"f1":0.871010760073261,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8125,"distances_sum":1894.9722195954969}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9554632867132871,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2458.2717705911778}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.8809591450216459,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.8203125,"distances_sum":1983.6849378242835}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9554632867132871,"seconds":6.40377402305603e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2458.2717705911778}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9684924450549454,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.9765625,"distances_sum":2538.467293975497}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9738324175824178,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":9.0,"distances_sum":2573.120687506641}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588598901098906,"seconds":5.902722477912903e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.96875,"distances_sum":2476.6148219201546}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962728937728938,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":8.984375,"distances_sum":2477.0149288663442}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738324175824178,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":9.0,"distances_sum":2573.120687506641}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9738324175824178,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3057142496109009e-6,"evaluations":9.0,"distances_sum":2573.120687506641}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.252178430557251e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.0703125,"distances_sum":516.1432374178402}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.921875,"distances_sum":1253.4432487053004}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4716796875, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4716796875,"f1":null,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.65625,"distances_sum":970.5800933375756}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5673828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.921875,"distances_sum":1253.4432487053004}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8153351856476865,"seconds":4.934147000312805e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.9609375,"distances_sum":1627.4860904217742}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9124229936729944,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7890625,"distances_sum":2069.853876558921}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9070637695637703,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2027.7220925484403}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.849609375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.849609375,"f1":0.9124229936729944,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7890625,"distances_sum":2069.853876558921}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9564961080586085,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8828125,"distances_sum":2367.2342323820358}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526842948717954,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2322.7426098032147}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588427197802203,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2385.29247966713}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9430689102564108,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.859375,"distances_sum":2289.7086643626308}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588427197802203,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2385.29247966713}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588427197802203,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8984375,"distances_sum":2385.29247966713}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7803446553446561,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6484375,"distances_sum":1579.6242765618288}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7803446553446561,"seconds":4.785135388374329e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.6484375,"distances_sum":1579.6242765618288}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.8743516899766909,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.171875,"distances_sum":2038.5151366587947}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9021036255411264,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.390625,"distances_sum":2182.729624306029}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9021036255411264,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.390625,"distances_sum":2182.729624306029}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.940876831501832,"seconds":5.777925252914429e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6015625,"distances_sum":2449.8009560939813}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9460279304029309,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2458.6659216765715}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9223729395604401,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.4296875,"distances_sum":2297.091135167954}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460279304029309,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2458.6659216765715}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9052734375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9460279304029309,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.734375,"distances_sum":2458.6659216765715}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8522331834831843,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.7109375,"distances_sum":1720.8239769760999}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2158203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2158203125,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":6.3515625,"distances_sum":478.70368801471096}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8759017024642033,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.796875,"distances_sum":1839.6650421968905}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8759017024642033,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.796875,"distances_sum":1839.6650421968905}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9325263278388287,"seconds":5.945563316345215e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9453125,"distances_sum":2197.3315223363097}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8980800449550458,"seconds":5.749985575675964e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":1963.8462108038077}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2423.190888241906}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9503834706959712,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.921875,"distances_sum":2312.5792533409417}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.968046016483517,"seconds":6.245449185371399e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2423.190888241906}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738667582417586,"seconds":6.796792149543762e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.984375,"distances_sum":2458.3299418461415}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9828697344322346,"seconds":6.4373016357421875e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.96875,"distances_sum":2555.1655536749804}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9743303571428575,"seconds":6.586313247680664e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9765625,"distances_sum":2467.543649851767}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.970703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9841517857142859,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9921875,"distances_sum":2545.442330567702}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.970703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9841517857142859,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9921875,"distances_sum":2545.442330567702}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.970703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.970703125,"f1":0.9841517857142859,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.5944242477416992e-6,"evaluations":8.9921875,"distances_sum":2545.442330567702}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.816602668165169,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0546875,"distances_sum":1631.5634801233184}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.816602668165169,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.0546875,"distances_sum":1631.5634801233184}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9096877081252086,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.71875,"distances_sum":2080.2632475392975}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8449014527139534,"seconds":5.114823579788208e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.2890625,"distances_sum":1725.558181562504}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.9096877081252086,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.71875,"distances_sum":2080.2632475392975}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461996336996342,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":2382.0283253315015}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9192479395604403,"seconds":5.863606929779053e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.671875,"distances_sum":2164.147967948297}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9461996336996342,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":2382.0283253315015}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9461996336996342,"seconds":5.848705768585205e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.7890625,"distances_sum":2382.0283253315015}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.228515625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.228515625,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.25,"distances_sum":527.8851923650031}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8212603368853377,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.2265625,"distances_sum":1615.4470534819425}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.7588179111480713e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":6.9296875,"distances_sum":872.3592439692911}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7109375,"f1":0.8212603368853377,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.2265625,"distances_sum":1615.4470534819425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9404304029304035,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9453125,"distances_sum":2247.311116828493}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8637425074925086,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.6484375,"distances_sum":1823.0702955412276}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8206624972249981,"seconds":5.068257451057434e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.1640625,"distances_sum":1641.2100277255747}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9404304029304035,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9453125,"distances_sum":2247.311116828493}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9534855769230773,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9140625,"distances_sum":2355.178501901746}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9595123626373631,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9453125,"distances_sum":2412.6428092512533}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9421620046620054,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8671875,"distances_sum":2301.956745786819}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595123626373631,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9453125,"distances_sum":2412.6428092512533}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9595123626373631,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.9453125,"distances_sum":2412.6428092512533}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.423828125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.423828125,"f1":null,"seconds":2.5015324354171753e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":6.796875,"distances_sum":908.9344975423819}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5634765625,"f1":null,"seconds":2.5369226932525635e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":6.8515625,"distances_sum":1261.3310542506288}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.703125,"f1":0.8175293456543465,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.8828125,"distances_sum":1653.0953306082333}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.703125,"f1":0.8175293456543465,"seconds":3.129243850708008e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":7.8828125,"distances_sum":1653.0953306082333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586767399267403,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8984375,"distances_sum":2478.9684115899795}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9416552197802202,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.796875,"distances_sum":2351.1460508767423}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9586767399267403,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.8984375,"distances_sum":2478.9684115899795}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9688472985347989,"seconds":3.937631845474243e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.9296875,"distances_sum":2550.8555045437274}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9734775641025643,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.953125,"distances_sum":2582.0985892080116}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9734775641025643,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.953125,"distances_sum":2582.0985892080116}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9734775641025643,"seconds":3.8333237171173096e-6,"exhaustive_search_seconds":9.145587682723999e-7,"evaluations":8.953125,"distances_sum":2582.0985892080116}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":3.4831464290618896e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.2265625,"distances_sum":931.8757436639496}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.232421875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.232421875,"f1":null,"seconds":2.166256308555603e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.1015625,"distances_sum":555.0978892305379}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8598849067599076,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6640625,"distances_sum":1858.3036888296651}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8598849067599076,"seconds":3.512948751449585e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.6640625,"distances_sum":1858.3036888296651}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9072687728937736,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.96875,"distances_sum":2119.584359988229}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690476190476194,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.984375,"distances_sum":2542.9520527618774}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9690476190476194,"seconds":3.851950168609619e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.984375,"distances_sum":2542.9520527618774}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":9.0,"distances_sum":2586.2591397556225}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9717662545787551,"seconds":3.682449460029602e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.9921875,"distances_sum":2570.198903758083}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":9.0,"distances_sum":2586.2591397556225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739983974358979,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":9.0,"distances_sum":2586.2591397556225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.181640625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.181640625,"f1":null,"seconds":1.7639249563217163e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":4.4921875,"distances_sum":456.261997804049}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.181640625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.181640625,"f1":null,"seconds":1.7639249563217163e-6,"exhaustive_search_seconds":9.052455425262451e-7,"evaluations":4.4921875,"distances_sum":456.261997804049}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.805193938006439,"seconds":3.375113010406494e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.2578125,"distances_sum":1558.7172159486834}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.805193938006439,"seconds":3.375113010406494e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.2578125,"distances_sum":1558.7172159486834}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9547275641025645,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8671875,"distances_sum":2330.885173710593}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9330560064935074,"seconds":3.641471266746521e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.7734375,"distances_sum":2186.520381965868}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9547275641025645,"seconds":3.7513673305511475e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.8671875,"distances_sum":2330.885173710593}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9710794413919418,"seconds":3.691762685775757e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.90625,"distances_sum":2435.133321108121}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9740728021978027,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9453125,"distances_sum":2448.5511793976825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718406593406599,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9453125,"distances_sum":2436.5839967497313}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9596211080586087,"seconds":3.643333911895752e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.890625,"distances_sum":2341.168092388316}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9740728021978027,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9453125,"distances_sum":2448.5511793976825}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9740728021978027,"seconds":3.732740879058838e-6,"exhaustive_search_seconds":8.903443813323975e-7,"evaluations":8.9453125,"distances_sum":2448.5511793976825}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7927733724608732,"seconds":3.032386302947998e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.4765625,"distances_sum":1600.0659616031069}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5322265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5322265625,"f1":null,"seconds":2.6188790798187256e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":6.984375,"distances_sum":1246.9832324024962}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8419845779220787,"seconds":3.2391399145126343e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.8671875,"distances_sum":1880.8698136967123}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8419845779220787,"seconds":3.2391399145126343e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":7.8671875,"distances_sum":1880.8698136967123}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8884277181152188,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.21875,"distances_sum":2086.183741705264}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8936412545787555,"seconds":8.478760719299316e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.2890625,"distances_sum":2113.2305252652914}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9018663628038636,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.4140625,"distances_sum":2149.7329294102033}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.833984375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.833984375,"f1":0.9018663628038636,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.4140625,"distances_sum":2149.7329294102033}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9492387820512824,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.625,"distances_sum":2545.3591685769093}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9393372252747259,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.609375,"distances_sum":2423.6886572368676}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687900641025646,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.859375,"distances_sum":2575.897208232939}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9669700091575093,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.84375,"distances_sum":2589.5842184249814}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9268543956043963,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.515625,"distances_sum":2327.5557969389884}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687900641025646,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.859375,"distances_sum":2575.897208232939}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9687900641025646,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":9.220093488693237e-7,"evaluations":8.859375,"distances_sum":2575.897208232939}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7895493395493404,"seconds":4.587695002555847e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.6171875,"distances_sum":1584.2877730187975}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8353214493839501,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.984375,"distances_sum":1814.046439370363}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8353214493839501,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.984375,"distances_sum":1814.046439370363}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9455242673992679,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.75,"distances_sum":2375.747033082836}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.945747481684982,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.734375,"distances_sum":2408.5056888802083}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9468635531135537,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.78125,"distances_sum":2389.109125390115}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9468635531135537,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.78125,"distances_sum":2389.109125390115}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659626831501834,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.828125,"distances_sum":2511.13367652046}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9570741758241764,"seconds":5.910173058509827e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2435.3719883161407}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9763621794871797,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2568.0654339334615}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9733630952380956,"seconds":6.198883056640625e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":2568.706873777051}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9763621794871797,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2568.0654339334615}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9763621794871797,"seconds":6.251037120819092e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.921875,"distances_sum":2568.0654339334615}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.847465555278056,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.046875,"distances_sum":1787.8519010389327}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3330078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3330078125,"f1":null,"seconds":2.2277235984802246e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":5.4609375,"distances_sum":725.2252587661413}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1650390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1650390625,"f1":null,"seconds":1.8961727619171143e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":4.890625,"distances_sum":418.31758183372824}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.847465555278056,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.046875,"distances_sum":1787.8519010389327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8828905469530479,"seconds":3.7830322980880737e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.2578125,"distances_sum":1976.1018229670635}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9338656135531141,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.7734375,"distances_sum":2231.4219331106656}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9338656135531141,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.7734375,"distances_sum":2231.4219331106656}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754292582417586,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.90625,"distances_sum":2486.6830689529143}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699805402930407,"seconds":6.1336904764175415e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.9296875,"distances_sum":2449.934133004793}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754292582417586,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.90625,"distances_sum":2486.6830689529143}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":3,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754292582417586,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.5851110219955444e-6,"evaluations":8.90625,"distances_sum":2486.6830689529143}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3583984375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3583984375,"f1":null,"seconds":4.230067133903503e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":5.9375,"distances_sum":842.3379046664354}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6845703125, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9844122023809522,"recall":0.6845703125,"f1":0.7980264527139531,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.6953125,"distances_sum":1653.8908273275704}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":0.9821614583333332,"recall":0.568359375,"f1":0.7052294060106564,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.2890625,"distances_sum":1324.7049751041066}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6845703125,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9844122023809522,"recall":0.6845703125,"f1":0.7980264527139531,"seconds":4.4461339712142944e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.6953125,"distances_sum":1653.8908273275704}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8310546875, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9820498511904763,"recall":0.8310546875,"f1":0.8954727564102567,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.6484375,"distances_sum":2145.2147876031067}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9913504464285715,"recall":0.873046875,"f1":0.9244548420329673,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8671875,"distances_sum":2293.7088918750683}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.873046875,"state":{"ssize":1,"bsize":7},"perf":{"precision":0.9913504464285715,"recall":0.873046875,"f1":0.9244548420329673,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8671875,"distances_sum":2293.7088918750683}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9880022321428572,"recall":0.921875,"f1":0.9509543841575095,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.90625,"distances_sum":2536.6552189492736}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.986328125,"recall":0.908203125,"f1":0.9419792447136199,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.8671875,"distances_sum":2484.5441298732335}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":2,"bsize":9}, perf: {"precision":0.985928199404762,"recall":0.9228515625,"f1":0.9507805345695972,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.90625,"distances_sum":2539.2117036978607}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":7,"bsize":8}, perf: {"precision":0.9909319196428572,"recall":0.9228515625,"f1":0.9531171302655683,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9609375,"distances_sum":2504.7019327588187}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":2,"bsize":9},"perf":{"precision":0.985928199404762,"recall":0.9228515625,"f1":0.9507805345695972,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.90625,"distances_sum":2539.2117036978607}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":2,"bsize":9},"perf":{"precision":0.985928199404762,"recall":0.9228515625,"f1":0.9507805345695972,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.90625,"distances_sum":2539.2117036978607}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8456819222444232,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.359375,"distances_sum":1592.6416898366367}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.564453125,"f1":null,"seconds":3.9711594581604e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.09375,"distances_sum":1140.7193079266176}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":5.859375,"distances_sum":498.13998695944116}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7451171875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7451171875,"f1":0.8456819222444232,"seconds":4.930421710014343e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.359375,"distances_sum":1592.6416898366367}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.923116987179488,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7265625,"distances_sum":2012.5963251241833}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8469369172494181,"seconds":5.077570676803589e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3671875,"distances_sum":1636.0276729374784}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9218552281052288,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.75,"distances_sum":2015.4683561090494}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8662109375,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8662109375,"f1":0.923116987179488,"seconds":5.364418029785156e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.7265625,"distances_sum":2012.5963251241833}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679887820512824,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2251.24297639543}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.933531052281053,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.71875,"distances_sum":2092.286338268714}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676167582417586,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.953125,"distances_sum":2246.340869602029}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9374401640026644,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.734375,"distances_sum":2120.67539958941}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9632841117216121,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9140625,"distances_sum":2234.699116920324}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.962780448717949,"seconds":6.275251507759094e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8984375,"distances_sum":2231.303476665476}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652358058608063,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.875,"distances_sum":2246.2752306623224}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679887820512824,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2251.24297639543}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679887820512824,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.9296875,"distances_sum":2251.24297639543}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6945013320013326,"seconds":3.846362233161926e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.828125,"distances_sum":1142.293595462086}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8234380203130212,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9453125,"distances_sum":1556.8498521755507}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7119140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7119140625,"f1":0.8234380203130212,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.9453125,"distances_sum":1556.8498521755507}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.941678113553114,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8515625,"distances_sum":2207.7049869830184}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.848869880119881,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.1875,"distances_sum":1697.5437035211642}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8972272519147528,"seconds":5.228444933891296e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6953125,"distances_sum":1902.1100622476542}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8974609375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8974609375,"f1":0.941678113553114,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8515625,"distances_sum":2207.7049869830184}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643830128205131,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2382.22148168246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9495249542124546,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8203125,"distances_sum":2294.6722232399748}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9624516108891114,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2378.8169493122828}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643830128205131,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2382.22148168246}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643830128205131,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.84375,"distances_sum":2382.22148168246}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6669921875,"f1":0.7910391691641698,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7734375,"distances_sum":1385.6360038560144}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.341585397720337e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.9921875,"distances_sum":816.418261883648}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6669921875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6669921875,"f1":0.7910391691641698,"seconds":4.45730984210968e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7734375,"distances_sum":1385.6360038560144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9519001831501838,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7265625,"distances_sum":2228.882019700661}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9533138736263742,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2198.8420057441995}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8497918747918756,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2734375,"distances_sum":1639.4536293474173}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9533138736263742,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8671875,"distances_sum":2198.8420057441995}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2330.3014619349387}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543211996337001,"seconds":5.381181836128235e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.828125,"distances_sum":2218.448283447539}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739983974358978,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9140625,"distances_sum":2332.205458785526}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2330.3014619349387}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9560546875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9560546875,"f1":0.9758585164835167,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.9375,"distances_sum":2330.3014619349387}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.78125,"distances_sum":838.0220149089669}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.275390625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.275390625,"f1":null,"seconds":3.330409526824951e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":6.3984375,"distances_sum":600.3239197819541}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4306640625,"state":{"ssize":2,"bsize":2},"perf":{"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.78125,"distances_sum":838.0220149089669}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8877606768231777,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.515625,"distances_sum":1851.7669251864772}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8877606768231777,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.515625,"distances_sum":1851.7669251864772}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557520604395608,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9609375,"distances_sum":2226.988895437888}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9607200091575095,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2281.9109210098986}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673019688644691,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2307.8149071538696}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673019688644691,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2307.8149071538696}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9673019688644691,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.9375,"distances_sum":2307.8149071538696}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8578364343989353,"seconds":4.859641194343567e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.859375,"distances_sum":1738.331659688344}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7825060356310364,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2734375,"distances_sum":1406.100442108941}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8578364343989353,"seconds":4.859641194343567e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.859375,"distances_sum":1738.331659688344}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9540095321345327,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.828125,"distances_sum":2288.2323778182745}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588770604395609,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8359375,"distances_sum":2326.22708203649}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9588770604395609,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8359375,"distances_sum":2326.22708203649}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.983482142857143,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2460.5847915726467}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9605711996337001,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8828125,"distances_sum":2314.448248034652}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673592032967038,"seconds":5.893409252166748e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2368.549543432946}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.983482142857143,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2460.5847915726467}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.983482142857143,"seconds":6.016343832015991e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2460.5847915726467}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5283203125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5283203125,"f1":0.6792013542013546,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":6.9375,"distances_sum":1169.367388958223}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5283203125,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5283203125,"f1":0.6792013542013546,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":6.9375,"distances_sum":1169.367388958223}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6611328125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6611328125,"f1":0.7824683996559004,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.6171875,"distances_sum":1530.426774794105}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6611328125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6611328125,"f1":0.7824683996559004,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":7.6171875,"distances_sum":1530.426774794105}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9271863553113561,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.75,"distances_sum":2179.3330487935013}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9332849442224448,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7109375,"distances_sum":2202.267607675659}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9269059065934075,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.671875,"distances_sum":2164.0113652660943}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7158203125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7158203125,"f1":0.821881070318571,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.03125,"distances_sum":1671.2233040573326}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9296932234432239,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.734375,"distances_sum":2175.0097121536305}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7119140625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7119140625,"f1":0.8198650308025317,"seconds":4.926696419715881e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.0546875,"distances_sum":1657.362665738152}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.73046875,"f1":0.8326652514152523,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.1328125,"distances_sum":1739.4237278898456}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9332849442224448,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7109375,"distances_sum":2202.267607675659}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9332849442224448,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.4435499906539917e-6,"evaluations":8.7109375,"distances_sum":2202.267607675659}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.25,"f1":null,"seconds":3.378838300704956e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.078125,"distances_sum":535.1178516637796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.75,"distances_sum":787.7578235833862}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.412109375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.412109375,"f1":null,"seconds":3.5315752029418945e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":5.75,"distances_sum":787.7578235833862}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.533203125,"f1":0.6787446928071934,"seconds":3.844499588012695e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.71875,"distances_sum":1110.3821612349523}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.887726336163837,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3515625,"distances_sum":1809.295303232374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5595703125, conf: {"ssize":9,"bsize":3}, perf: {"precision":null,"recall":0.5595703125,"f1":null,"seconds":4.12575900554657e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.8828125,"distances_sum":1169.5719570558426}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.53125, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.53125,"f1":0.6743898462648469,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":6.6953125,"distances_sum":1098.1877483037922}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.818443015318016,"seconds":4.4442713260650635e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.5859375,"distances_sum":1555.0267117456406}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.8400875166500176,"seconds":4.854053258895874e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.78125,"distances_sum":1622.9899630210416}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80859375,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.80859375,"f1":0.887726336163837,"seconds":5.258247256278992e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3515625,"distances_sum":1809.295303232374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.95352303946054,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.796875,"distances_sum":2284.2688489099496}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8886020229770238,"seconds":5.055218935012817e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3125,"distances_sum":1852.7151704056773}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9433722527472531,"seconds":5.373731255531311e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.6875,"distances_sum":2221.437629377102}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.906290064102565,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.3671875,"distances_sum":1941.2195272092897}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":12,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8952152014652025,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.40625,"distances_sum":1898.621611960034}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.95352303946054,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.796875,"distances_sum":2284.2688489099496}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.95352303946054,"seconds":5.349516868591309e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.796875,"distances_sum":2284.2688489099496}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4541015625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4541015625,"f1":null,"seconds":3.684312105178833e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.0703125,"distances_sum":931.8431784683155}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7862366799866808,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2734375,"distances_sum":1395.7434660725528}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.427734375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.427734375,"f1":null,"seconds":3.520399332046509e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":5.7578125,"distances_sum":850.7455949221822}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.7862366799866808,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2734375,"distances_sum":1395.7434660725528}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9315590659340667,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2081.1901485355966}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.67578125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.67578125,"f1":0.7946572524697532,"seconds":4.280358552932739e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.2265625,"distances_sum":1448.5652426657045}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8083400974025982,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.359375,"distances_sum":1468.5041656509097}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.904092782217783,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.375,"distances_sum":1943.552764387492}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.9315590659340667,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8203125,"distances_sum":2081.1901485355966}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9628205128205134,"seconds":6.249174475669861e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9453125,"distances_sum":2300.2077128613246}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2392.1943954887147}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9741643772893775,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2368.8697950798255}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514022435897441,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.84375,"distances_sum":2231.2331453684765}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9624313186813189,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9140625,"distances_sum":2305.8461530651116}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.950140484515485,"seconds":5.694106221199036e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2236.095089035615}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9471039377289381,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2231.729891440912}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2392.1943954887147}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9763965201465205,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.96875,"distances_sum":2392.1943954887147}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8476055194805203,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9921875,"distances_sum":1670.642537805713}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8476055194805203,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.9921875,"distances_sum":1670.642537805713}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.830078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.830078125,"f1":0.9018944597069607,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.203125,"distances_sum":1916.3462897482032}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.830078125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.830078125,"f1":0.9018944597069607,"seconds":5.198642611503601e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.203125,"distances_sum":1916.3462897482032}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609031593406601,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2281.5251885441053}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9209535256410264,"seconds":5.278736352920532e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.6015625,"distances_sum":2036.4485290863133}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609031593406601,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2281.5251885441053}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9609031593406601,"seconds":5.479902029037476e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.859375,"distances_sum":2281.5251885441053}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1767578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1767578125,"f1":null,"seconds":3.0212104320526123e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":4.46875,"distances_sum":405.56042268388626}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3818359375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.359375,"distances_sum":803.2312134048314}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3818359375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3818359375,"f1":null,"seconds":3.466382622718811e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":5.359375,"distances_sum":803.2312134048314}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6435546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6435546875,"f1":0.770205662393163,"seconds":4.459172487258911e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.2578125,"distances_sum":1404.3388531801704}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8463248556998566,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.9296875,"distances_sum":1698.8466600067604}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8460716366966377,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.8359375,"distances_sum":1708.346660737212}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8463248556998566,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":7.9296875,"distances_sum":1698.8466600067604}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9508012820512826,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.65625,"distances_sum":2271.7664448513374}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9278648434898442,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.671875,"distances_sum":2126.8187078478372}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9298623251748257,"seconds":5.185604095458984e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.6484375,"distances_sum":2149.1234514451935}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073266,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.765625,"distances_sum":2326.8919710490463}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073266,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.765625,"distances_sum":2326.8919710490463}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635073260073266,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.765625,"distances_sum":2326.8919710490463}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8492080835830843,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.234375,"distances_sum":1641.6379982071946}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8492080835830843,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.234375,"distances_sum":1641.6379982071946}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8492080835830843,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.234375,"distances_sum":1641.6379982071946}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8492080835830843,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.234375,"distances_sum":1641.6379982071946}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.23828125,"f1":null,"seconds":3.037974238395691e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":5.53125,"distances_sum":553.2177445586959}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5029296875, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5029296875,"f1":0.6520290473415479,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.6328125,"distances_sum":1035.561330697583}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8572521228771237,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.078125,"distances_sum":1754.168979685623}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8572521228771237,"seconds":5.833804607391357e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.078125,"distances_sum":1754.168979685623}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9601419413919419,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2367.7166426439803}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9318223443223452,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.640625,"distances_sum":2155.00025471409}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8922421328671336,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.09375,"distances_sum":1915.6955327596777}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9601419413919419,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2367.7166426439803}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9687156593406596,"seconds":6.334856152534485e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2402.328872446319}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9681604853479856,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2421.225307488203}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9681604853479856,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2421.225307488203}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":10,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9681604853479856,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2421.225307488203}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7770592254967261,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.296875,"distances_sum":1374.9981003469359}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.65625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.65625,"f1":0.7770592254967261,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":7.296875,"distances_sum":1374.9981003469359}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8480946137196145,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2890625,"distances_sum":1627.7740136855539}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8480946137196145,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2890625,"distances_sum":1627.7740136855539}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9262934981684989,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.53125,"distances_sum":2025.6181539849588}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.890165043290044,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.2578125,"distances_sum":1868.9006285156975}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.9065361721611731,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.3828125,"distances_sum":1875.0839474378288}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8662109375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8662109375,"f1":0.9231112637362645,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.7734375,"distances_sum":2061.886476304009}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9262934981684989,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.53125,"distances_sum":2025.6181539849588}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8701171875,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9262934981684989,"seconds":5.377456545829773e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":8.53125,"distances_sum":2025.6181539849588}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7314453125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7314453125,"f1":0.8361560314685323,"seconds":5.012378096580505e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.8515625,"distances_sum":1791.2362062150416}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73828125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.73828125,"f1":0.8394818722943731,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.7734375,"distances_sum":1828.9192127209915}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.4248046875,"f1":0.5738025863025862,"seconds":3.550201654434204e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":5.828125,"distances_sum":980.9205353047521}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73828125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.73828125,"f1":0.8394818722943731,"seconds":4.898756742477417e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":7.7734375,"distances_sum":1828.9192127209915}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9030365467865474,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.3515625,"distances_sum":2123.560889094073}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9526301823176829,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7734375,"distances_sum":2491.9288051004883}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9526301823176829,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.7734375,"distances_sum":2491.9288051004883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095241,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9140625,"distances_sum":2631.813821733981}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9560897435897441,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.8671875,"distances_sum":2489.9762489187574}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095241,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9140625,"distances_sum":2631.813821733981}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738095238095241,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.344829797744751e-6,"evaluations":8.9140625,"distances_sum":2631.813821733981}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3408203125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.2782554626464844e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.15625,"distances_sum":912.9941350434018}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.548828125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.548828125,"f1":0.6886700105450112,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.65625,"distances_sum":1324.3690692543407}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.548828125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.548828125,"f1":0.6886700105450112,"seconds":4.032626748085022e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.65625,"distances_sum":1324.3690692543407}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7914850774225782,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.3359375,"distances_sum":1620.8695044031301}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.669921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.669921875,"f1":0.7914850774225782,"seconds":4.470348358154297e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.3359375,"distances_sum":1620.8695044031301}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.736328125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.736328125,"f1":0.8419387903762913,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.875,"distances_sum":1795.7459800754013}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8958161630036637,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.3515625,"distances_sum":2140.6828796083987}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8958161630036637,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.3515625,"distances_sum":2140.6828796083987}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.822265625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.822265625,"f1":0.8958161630036637,"seconds":5.317851901054382e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.3515625,"distances_sum":2140.6828796083987}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.56640625,"f1":0.7056911838161843,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.765625,"distances_sum":1293.3509438499218}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.56640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.56640625,"f1":0.7056911838161843,"seconds":3.896653652191162e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":6.765625,"distances_sum":1293.3509438499218}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7412109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7412109375,"f1":0.8433967074592085,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.015625,"distances_sum":1760.861027072085}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7787597818847827,"seconds":4.403293132781982e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.1640625,"distances_sum":1510.60098632318}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.732421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.732421875,"f1":0.8380275974025982,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":7.9765625,"distances_sum":1724.0768376065719}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7412109375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7412109375,"f1":0.8433967074592085,"seconds":4.958361387252808e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.015625,"distances_sum":1760.861027072085}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9688816391941397,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":2589.941875165724}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609317765567769,"seconds":5.621463060379028e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8671875,"distances_sum":2521.048166142647}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9468297327672331,"seconds":5.4836273193359375e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.7734375,"distances_sum":2421.439750810807}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8639599983349993,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.234375,"distances_sum":1866.1043700215532}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.9183524808524814,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.6796875,"distances_sum":2191.7943111149325}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941397,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":2589.941875165724}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9688816391941397,"seconds":5.533918738365173e-6,"exhaustive_search_seconds":1.296401023864746e-6,"evaluations":8.8984375,"distances_sum":2589.941875165724}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8054299866799874,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.703125,"distances_sum":1617.2256719515956}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2392578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2392578125,"f1":null,"seconds":2.8926879167556763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":4.9296875,"distances_sum":589.4223908399039}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8054299866799874,"seconds":4.6156346797943115e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.703125,"distances_sum":1617.2256719515956}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7060546875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7060546875,"f1":0.8176769411144418,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7890625,"distances_sum":1662.1953945555308}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7060546875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7060546875,"f1":0.8176769411144418,"seconds":4.682689905166626e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.7890625,"distances_sum":1662.1953945555308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.94805402930403,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":2448.810123693379}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9398752289377296,"seconds":5.358830094337463e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.6796875,"distances_sum":2403.5723736206937}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.94805402930403,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":2448.810123693379}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9072265625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.94805402930403,"seconds":5.33275306224823e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.75,"distances_sum":2448.810123693379}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3408203125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3408203125,"f1":null,"seconds":3.330409526824951e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":5.28125,"distances_sum":727.3264056208326}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69140625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.69140625,"f1":0.8066235847485855,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.625,"distances_sum":1592.18667480401}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69140625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.69140625,"f1":0.8066235847485855,"seconds":4.47593629360199e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":7.625,"distances_sum":1592.18667480401}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9516228563103566,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2436.7284620071337}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8890052655677664,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.15625,"distances_sum":1937.0127063473994}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8570949883449892,"seconds":5.064532160758972e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.171875,"distances_sum":1821.443459050103}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9516228563103566,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.7265625,"distances_sum":2436.7284620071337}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970707417582418,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2523.8150752200245}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9609432234432238,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.8046875,"distances_sum":2465.063414071485}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970707417582418,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2523.8150752200245}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.970707417582418,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.34296715259552e-6,"evaluations":8.875,"distances_sum":2523.8150752200245}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7683646214896221,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.0390625,"distances_sum":1467.5712957792177}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":3.160908818244934e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":5.0859375,"distances_sum":726.6085690039658}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7683646214896221,"seconds":4.395842552185059e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.0390625,"distances_sum":1467.5712957792177}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7255859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7255859375,"f1":0.83020156926407,"seconds":4.714354872703552e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.625,"distances_sum":1668.4481101352674}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.890680153180154,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2734375,"distances_sum":1947.321980732252}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.814453125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.814453125,"f1":0.890680153180154,"seconds":5.0514936447143555e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2734375,"distances_sum":1947.321980732252}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9305517399267405,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.4296875,"distances_sum":2217.6765425867184}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721726190476194,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2480.6927698186287}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9721726190476194,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2480.6927698186287}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":8,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9721726190476194,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2480.6927698186287}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7741421772671779,"seconds":4.407018423080444e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":6.9765625,"distances_sum":1545.6811639825078}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7973103285603294,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.296875,"distances_sum":1641.4235307881133}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7973103285603294,"seconds":4.474073648452759e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.296875,"distances_sum":1641.4235307881133}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.80859375,"f1":0.887463578088579,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.34375,"distances_sum":2080.9561557879033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9204842032967042,"seconds":4.975125193595886e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.421875,"distances_sum":2314.636438518752}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.91625561938062,"seconds":5.103647708892822e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.2890625,"distances_sum":2341.7761614808387}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.8403861763236772,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.703125,"distances_sum":1806.0742188319277}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9496336996337003,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6328125,"distances_sum":2573.97170699484}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8453395562770571,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.7734375,"distances_sum":1842.5638181224563}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9496336996337003,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6328125,"distances_sum":2573.97170699484}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9781650641025644,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":2726.646025050052}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9590289918414924,"seconds":5.653128027915955e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.75,"distances_sum":2616.6408970954185}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9781650641025644,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":2726.646025050052}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9781650641025644,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":2726.646025050052}}, n: 9
inertia(cfft.distances) = 20.815852717283175
inertia(cdnet.distances) = 27.167360409986276
inertia(crand.distances) = 21.276829312634153
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9488888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9133333333333332
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9288888888888889
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9133333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9400000000000001
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8933333333333332
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8644444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8755555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8577777777777778
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8777777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8933333333333332
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 2, 3, 2, 2, 3, 1, 3, 1, 3, 3, 2, 3, 3, 2, 3, 3, 1, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 1, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 11, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 2, 2, 3, 1, 3, 2, 3, 1]
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3972666700472513] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3972666700472513, 0.17759194836561742] ***
*** starting iteration: 2; err: [Inf, 0.3972666700472513, 0.17759194836561742] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3972666700472513, 0.17759194836561742, 0.16822454140040416] ***
*** starting iteration: 3; err: [Inf, 0.3972666700472513, 0.17759194836561742, 0.16822454140040416] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3972666700472513, 0.17759194836561742, 0.16822454140040416, 0.16623308135521941] ***
*** starting iteration: 4; err: [Inf, 0.3972666700472513, 0.17759194836561742, 0.16822454140040416, 0.16623308135521941] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3972666700472513, 0.17759194836561742, 0.16822454140040416, 0.16623308135521941, 0.16563043541887676] ***
*** finished computation of 12 references, err: [Inf, 0.3972666700472513, 0.17759194836561742, 0.16822454140040416, 0.16623308135521941, 0.16563043541887676] ***
*** center 1: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 6: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 8]]
** centroid: 9, normalized-entropy: 0.7219280948873623, [(2, 2), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
acc = 0.9733333333333334
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.2241000128822643] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2241000128822643, 0.6216930144675155] ***
*** finished computation of 3 references, err: [Inf, 1.2241000128822643, 0.6216930144675155] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 20]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(2, 32), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [31, 2, 0]]
** centroid: 3, normalized-entropy: 0.32984607020714635, [(1, 31), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.874599972414903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.874599972414903, 0.6107447687131511] ***
*** finished computation of 3 references, err: [Inf, 3.874599972414903, 0.6107447687131511] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 10, 35]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 10), (3, 35)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 3: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.403299996884114] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.403299996884114, 0.5243822548743993] ***
*** finished computation of 3 references, err: [Inf, 2.403299996884114, 0.5243822548743993] ***
*** center 1: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 8]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44110000187993476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631] ***
*** starting iteration: 2; err: [Inf, 0.44110000187993476, 0.342207502562631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564] ***
*** starting iteration: 3; err: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704] ***
*** starting iteration: 4; err: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629] ***
*** starting iteration: 5; err: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629, 0.2593211845397418] ***
*** starting iteration: 6; err: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629, 0.2593211845397418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629, 0.2593211845397418, 0.25231273754477557] ***
*** starting iteration: 7; err: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629, 0.2593211845397418, 0.25231273754477557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629, 0.2593211845397418, 0.25231273754477557, 0.25151221509716115] ***
*** finished computation of 7 references, err: [Inf, 0.44110000187993476, 0.342207502562631, 0.33425690747368564, 0.31455418024554704, 0.2722678059529629, 0.2593211845397418, 0.25231273754477557, 0.25151221509716115] ***
*** center 1: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 2, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 7: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4275000060486046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4275000060486046, 0.2713244809414493] ***
*** starting iteration: 2; err: [Inf, 0.4275000060486046, 0.2713244809414493] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4275000060486046, 0.2713244809414493, 0.2500174555059956] ***
*** starting iteration: 3; err: [Inf, 0.4275000060486046, 0.2713244809414493, 0.2500174555059956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4275000060486046, 0.2713244809414493, 0.2500174555059956, 0.2440246885710119] ***
*** starting iteration: 4; err: [Inf, 0.4275000060486046, 0.2713244809414493, 0.2500174555059956, 0.2440246885710119] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4275000060486046, 0.2713244809414493, 0.2500174555059956, 0.2440246885710119, 0.24381201311780878] ***
*** finished computation of 7 references, err: [Inf, 0.4275000060486046, 0.2713244809414493, 0.2500174555059956, 0.2440246885710119, 0.24381201311780878] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 16]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 10, 11]]
** centroid: 7, normalized-entropy: 0.998363672593813, [(2, 10), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6584999861217251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672] ***
*** starting iteration: 2; err: [Inf, 0.6584999861217251, 0.3793940187704672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135] ***
*** starting iteration: 3; err: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252] ***
*** starting iteration: 4; err: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408] ***
*** starting iteration: 5; err: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408, 0.2080272385821027] ***
*** starting iteration: 6; err: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408, 0.2080272385821027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408, 0.2080272385821027, 0.2058784837788143] ***
*** starting iteration: 7; err: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408, 0.2080272385821027, 0.2058784837788143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408, 0.2080272385821027, 0.2058784837788143, 0.2058784837788143] ***
*** finished computation of 7 references, err: [Inf, 0.6584999861217251, 0.3793940187704672, 0.31792937120960135, 0.2810457041403252, 0.22762922919570408, 0.2080272385821027, 0.2058784837788143, 0.2058784837788143] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 8]]
** centroid: 1, normalized-entropy: 0.9975025463691153, [(2, 9), (3, 8)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.3955000010855998] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3955000010855998, 0.6717538804276947] ***
*** starting iteration: 2; err: [Inf, 1.3955000010855998, 0.6717538804276947] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972] ***
*** starting iteration: 3; err: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315] ***
*** starting iteration: 4; err: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315, 0.5037930142837607] ***
*** starting iteration: 5; err: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315, 0.5037930142837607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315, 0.5037930142837607, 0.4943420167477876] ***
*** starting iteration: 6; err: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315, 0.5037930142837607, 0.4943420167477876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315, 0.5037930142837607, 0.4943420167477876, 0.493590090555991] ***
*** finished computation of 3 references, err: [Inf, 1.3955000010855998, 0.6717538804276947, 0.6010394689229972, 0.5329101745484315, 0.5037930142837607, 0.4943420167477876, 0.493590090555991] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 1, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 2, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9963000078447696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9963000078447696, 0.5617658584079145] ***
*** starting iteration: 2; err: [Inf, 0.9963000078447696, 0.5617658584079145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345] ***
*** starting iteration: 3; err: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345, 0.5507017384068934] ***
*** starting iteration: 4; err: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345, 0.5507017384068934] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345, 0.5507017384068934, 0.5461015282727874] ***
*** starting iteration: 5; err: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345, 0.5507017384068934, 0.5461015282727874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345, 0.5507017384068934, 0.5461015282727874, 0.5461015282727874] ***
*** finished computation of 3 references, err: [Inf, 0.9963000078447696, 0.5617658584079145, 0.555158377941345, 0.5507017384068934, 0.5461015282727874, 0.5461015282727874] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 10]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 30), (3, 10)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 3, 26]]
** centroid: 2, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.406400033934554] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611] ***
*** starting iteration: 2; err: [Inf, 3.406400033934554, 0.6636728116105611] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944] ***
*** starting iteration: 3; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239] ***
*** starting iteration: 4; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895] ***
*** starting iteration: 5; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964] ***
*** starting iteration: 6; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537] ***
*** starting iteration: 7; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416] ***
*** starting iteration: 8; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416, 0.5262322610509256] ***
*** starting iteration: 9; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416, 0.5262322610509256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416, 0.5262322610509256, 0.5234240591543418] ***
*** starting iteration: 10; err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416, 0.5262322610509256, 0.5234240591543418] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416, 0.5262322610509256, 0.5234240591543418, 0.5234240591543418] ***
*** finished computation of 3 references, err: [Inf, 3.406400033934554, 0.6636728116105611, 0.5963966911940944, 0.5902405108985239, 0.5823874549719895, 0.5715910748573964, 0.5539018651182537, 0.5422195745402416, 0.5262322610509256, 0.5234240591543418, 0.5234240591543418] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7415899384609073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7415899384609073, 0.5876829732786277] ***
*** starting iteration: 2; err: [Inf, 0.7415899384609073, 0.5876829732786277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7415899384609073, 0.5876829732786277, 0.5778120889938702] ***
*** starting iteration: 3; err: [Inf, 0.7415899384609073, 0.5876829732786277, 0.5778120889938702] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7415899384609073, 0.5876829732786277, 0.5778120889938702, 0.5713345686613807] ***
*** finished computation of 3 references, err: [Inf, 0.7415899384609073, 0.5876829732786277, 0.5778120889938702, 0.5713345686613807] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 32, 35]]
** centroid: 1, normalized-entropy: 0.9985532860835362, [(2, 32), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [11, 2, 0]]
** centroid: 3, normalized-entropy: 0.6193821946787638, [(1, 11), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5680507570785442] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5680507570785442, 0.7129029291353226] ***
*** starting iteration: 2; err: [Inf, 1.5680507570785442, 0.7129029291353226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5680507570785442, 0.7129029291353226, 0.7059185672862551] ***
*** starting iteration: 3; err: [Inf, 1.5680507570785442, 0.7129029291353226, 0.7059185672862551] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5680507570785442, 0.7129029291353226, 0.7059185672862551, 0.7041548329974171] ***
*** finished computation of 3 references, err: [Inf, 1.5680507570785442, 0.7129029291353226, 0.7059185672862551, 0.7041548329974171] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [18, 2, 0]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(1, 18), (2, 2)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 36]]
** centroid: 2, normalized-entropy: 0.995978956518722, [(2, 31), (3, 36)]
*** center 3: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9884749148475178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9884749148475178, 0.39056483845722684] ***
*** starting iteration: 2; err: [Inf, 0.9884749148475178, 0.39056483845722684] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9884749148475178, 0.39056483845722684, 0.36606680320657065] ***
*** starting iteration: 3; err: [Inf, 0.9884749148475178, 0.39056483845722684, 0.36606680320657065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9884749148475178, 0.39056483845722684, 0.36606680320657065, 0.36493458830767345] ***
*** finished computation of 3 references, err: [Inf, 0.9884749148475178, 0.39056483845722684, 0.36606680320657065, 0.36493458830767345] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 8]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 33), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.38396456330918727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028] ***
*** starting iteration: 2; err: [Inf, 0.38396456330918727, 0.2094433538553028] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747] ***
*** starting iteration: 3; err: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706] ***
*** starting iteration: 4; err: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747] ***
*** starting iteration: 5; err: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747, 0.17552886414099045] ***
*** starting iteration: 6; err: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747, 0.17552886414099045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747, 0.17552886414099045, 0.17435997848744397] ***
*** starting iteration: 7; err: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747, 0.17552886414099045, 0.17435997848744397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747, 0.17552886414099045, 0.17435997848744397, 0.17435997848744397] ***
*** finished computation of 7 references, err: [Inf, 0.38396456330918727, 0.2094433538553028, 0.19158463955196747, 0.18433699736155706, 0.17849841406184747, 0.17552886414099045, 0.17435997848744397, 0.17435997848744397] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 4, 10]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(2, 4), (3, 10)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 6, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 5, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.4902835777096441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233] ***
*** starting iteration: 2; err: [Inf, 1.4902835777096441, 0.39218631807769233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386] ***
*** starting iteration: 3; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573] ***
*** starting iteration: 4; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836] ***
*** starting iteration: 5; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908] ***
*** starting iteration: 6; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853] ***
*** starting iteration: 7; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625] ***
*** starting iteration: 8; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625, 0.2328801938354168] ***
*** starting iteration: 9; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625, 0.2328801938354168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625, 0.2328801938354168, 0.22687510599868563] ***
*** starting iteration: 10; err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625, 0.2328801938354168, 0.22687510599868563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625, 0.2328801938354168, 0.22687510599868563, 0.22581758304188151] ***
*** finished computation of 7 references, err: [Inf, 1.4902835777096441, 0.39218631807769233, 0.32582564356551386, 0.30065675638978573, 0.2874719982206836, 0.2769780783443908, 0.2616770771604853, 0.24328534885409625, 0.2328801938354168, 0.22687510599868563, 0.22581758304188151] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 2: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 14, 12]]
** centroid: 5, normalized-entropy: 0.9957274520849256, [(2, 14), (3, 12)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4723206627932197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017] ***
*** starting iteration: 2; err: [Inf, 0.4723206627932197, 0.273471240310017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064] ***
*** starting iteration: 3; err: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975] ***
*** starting iteration: 4; err: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736] ***
*** starting iteration: 5; err: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736, 0.20281581485992276] ***
*** starting iteration: 6; err: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736, 0.20281581485992276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736, 0.20281581485992276, 0.20169908983718668] ***
*** starting iteration: 7; err: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736, 0.20281581485992276, 0.20169908983718668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736, 0.20281581485992276, 0.20169908983718668, 0.20079923326170473] ***
*** finished computation of 7 references, err: [Inf, 0.4723206627932197, 0.273471240310017, 0.23048475220014064, 0.20779824430470975, 0.20397567500516736, 0.20281581485992276, 0.20169908983718668, 0.20079923326170473] ***
*** center 1: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 9]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 16, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6920406419476265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6920406419476265, 0.5708381072148008] ***
*** finished computation of 3 references, err: [Inf, 0.6920406419476265, 0.5708381072148008] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 35]]
** centroid: 1, normalized-entropy: 0.9993759069576513, [(2, 33), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.829372785236514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.829372785236514, 0.7284885372604946] ***
*** finished computation of 3 references, err: [Inf, 1.829372785236514, 0.7284885372604946] ***
*** center 1: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 31, 36]]
** centroid: 2, normalized-entropy: 0.995978956518722, [(2, 31), (3, 36)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [28, 2, 0]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(1, 28), (2, 2)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0328382635463298] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0328382635463298, 0.5277247015256578] ***
*** finished computation of 3 references, err: [Inf, 1.0328382635463298, 0.5277247015256578] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [38, 2, 0]]
** centroid: 2, normalized-entropy: 0.2863969571159561, [(1, 38), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 8]]
** centroid: 3, normalized-entropy: 0.7320666900931937, [(2, 31), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.993600010165338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.993600010165338, 0.44187577781256293] ***
*** starting iteration: 2; err: [Inf, 0.993600010165338, 0.44187577781256293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.993600010165338, 0.44187577781256293, 0.3941995379075617] ***
*** starting iteration: 3; err: [Inf, 0.993600010165338, 0.44187577781256293, 0.3941995379075617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.993600010165338, 0.44187577781256293, 0.3941995379075617, 0.3597416069523193] ***
*** finished computation of 7 references, err: [Inf, 0.993600010165338, 0.44187577781256293, 0.3941995379075617, 0.3597416069523193] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 4]]
** centroid: 2, normalized-entropy: 0.5547781633412736, [(2, 27), (3, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 11]]
** centroid: 3, normalized-entropy: 0.9640787648082293, [(2, 7), (3, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5134000011615956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5134000011615956, 0.34959407323971675] ***
*** starting iteration: 2; err: [Inf, 0.5134000011615956, 0.34959407323971675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5134000011615956, 0.34959407323971675, 0.31491091901588897] ***
*** starting iteration: 3; err: [Inf, 0.5134000011615956, 0.34959407323971675, 0.31491091901588897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5134000011615956, 0.34959407323971675, 0.31491091901588897, 0.2889973449903641] ***
*** finished computation of 7 references, err: [Inf, 0.5134000011615956, 0.34959407323971675, 0.31491091901588897, 0.2889973449903641] ***
*** center 1: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 8, 17]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 8), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 8, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6549000043396304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6549000043396304, 0.31448667485392867] ***
*** starting iteration: 2; err: [Inf, 0.6549000043396304, 0.31448667485392867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6549000043396304, 0.31448667485392867, 0.3021562364990357] ***
*** starting iteration: 3; err: [Inf, 0.6549000043396304, 0.31448667485392867, 0.3021562364990357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6549000043396304, 0.31448667485392867, 0.3021562364990357, 0.29990453338816736] ***
*** finished computation of 7 references, err: [Inf, 0.6549000043396304, 0.31448667485392867, 0.3021562364990357, 0.29990453338816736] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 16]]
** centroid: 1, normalized-entropy: 0.9992492479956566, [(2, 15), (3, 16)]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.13889999804792] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.13889999804792, 0.5820397316917107] ***
*** starting iteration: 2; err: [Inf, 1.13889999804792, 0.5820397316917107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.13889999804792, 0.5820397316917107, 0.5219606903680568] ***
*** starting iteration: 3; err: [Inf, 1.13889999804792, 0.5820397316917107, 0.5219606903680568] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.13889999804792, 0.5820397316917107, 0.5219606903680568, 0.4988115613591808] ***
*** finished computation of 3 references, err: [Inf, 1.13889999804792, 0.5820397316917107, 0.5219606903680568, 0.4988115613591808] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 10]]
** centroid: 1, normalized-entropy: 0.7824441294066888, [(2, 33), (3, 10)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 25]]
** centroid: 3, normalized-entropy: 0.23519338181924157, [(2, 1), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1628000032625885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1628000032625885, 0.5930933516707175] ***
*** starting iteration: 2; err: [Inf, 1.1628000032625885, 0.5930933516707175] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1628000032625885, 0.5930933516707175, 0.576461527206276] ***
*** starting iteration: 3; err: [Inf, 1.1628000032625885, 0.5930933516707175, 0.576461527206276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1628000032625885, 0.5930933516707175, 0.576461527206276, 0.5751850762191841] ***
*** finished computation of 3 references, err: [Inf, 1.1628000032625885, 0.5930933516707175, 0.576461527206276, 0.5751850762191841] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 33]]
** centroid: 1, normalized-entropy: 0.7120640548905481, [(2, 8), (3, 33)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 25, 3]]
** centroid: 3, normalized-entropy: 0.4912373418243334, [(2, 25), (3, 3)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0186000060134959] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186000060134959, 0.5717431962316872] ***
*** starting iteration: 2; err: [Inf, 1.0186000060134959, 0.5717431962316872] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186000060134959, 0.5717431962316872, 0.5258856330466848] ***
*** starting iteration: 3; err: [Inf, 1.0186000060134959, 0.5717431962316872, 0.5258856330466848] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0186000060134959, 0.5717431962316872, 0.5258856330466848, 0.524368551673898] ***
*** finished computation of 3 references, err: [Inf, 1.0186000060134959, 0.5717431962316872, 0.5258856330466848, 0.524368551673898] ***
*** center 1: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2369999868688257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2369999868688257, 0.5349352598480206] ***
*** finished computation of 3 references, err: [Inf, 1.2369999868688257, 0.5349352598480206] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 13]]
** centroid: 1, normalized-entropy: 0.8507707040532602, [(2, 34), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.224799996331531] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.224799996331531, 0.5851043951686863] ***
*** finished computation of 3 references, err: [Inf, 1.224799996331531, 0.5851043951686863] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 33, 13]]
** centroid: 1, normalized-entropy: 0.8589810370425965, [(2, 33), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1262999970934389] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1262999970934389, 0.5295741107004451] ***
*** finished computation of 3 references, err: [Inf, 1.1262999970934389, 0.5295741107004451] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 21]]
** centroid: 1, normalized-entropy: 0.2667649878030262, [(2, 1), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 32, 8]]
** centroid: 3, normalized-entropy: 0.7219280948873623, [(2, 32), (3, 8)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8345541574297312] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8345541574297312, 0.40370198377234856] ***
*** finished computation of 3 references, err: [Inf, 0.8345541574297312, 0.40370198377234856] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 33, 18]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 33), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6866756331534316] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6866756331534316, 0.39877795793096665] ***
*** finished computation of 3 references, err: [Inf, 0.6866756331534316, 0.39877795793096665] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 9, 35]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 9), (3, 35)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 24, 1]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6805977048232011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6805977048232011, 0.40955245212159574] ***
*** finished computation of 3 references, err: [Inf, 0.6805977048232011, 0.40955245212159574] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 29]]
** centroid: 1, normalized-entropy: 0.8926230133850988, [(2, 13), (3, 29)]
*** center 2: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.44925911727729767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44925911727729767, 0.18232554715925547] ***
*** starting iteration: 2; err: [Inf, 0.44925911727729767, 0.18232554715925547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44925911727729767, 0.18232554715925547, 0.17079026895023527] ***
*** starting iteration: 3; err: [Inf, 0.44925911727729767, 0.18232554715925547, 0.17079026895023527] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44925911727729767, 0.18232554715925547, 0.17079026895023527, 0.16107624858040862] ***
*** finished computation of 7 references, err: [Inf, 0.44925911727729767, 0.18232554715925547, 0.17079026895023527, 0.16107624858040862] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 6, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4957320384932325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4957320384932325, 0.2023004044398735] ***
*** starting iteration: 2; err: [Inf, 0.4957320384932325, 0.2023004044398735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4957320384932325, 0.2023004044398735, 0.199756911384164] ***
*** starting iteration: 3; err: [Inf, 0.4957320384932325, 0.2023004044398735, 0.199756911384164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4957320384932325, 0.2023004044398735, 0.199756911384164, 0.19731926748625425] ***
*** finished computation of 7 references, err: [Inf, 0.4957320384932325, 0.2023004044398735, 0.199756911384164, 0.19731926748625425] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 11, 8]]
** centroid: 4, normalized-entropy: 0.9819407868640977, [(2, 11), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.314164885816717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.314164885816717, 0.18371373994177717] ***
*** starting iteration: 2; err: [Inf, 0.314164885816717, 0.18371373994177717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.314164885816717, 0.18371373994177717, 0.17223370701684942] ***
*** starting iteration: 3; err: [Inf, 0.314164885816717, 0.18371373994177717, 0.17223370701684942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.314164885816717, 0.18371373994177717, 0.17223370701684942, 0.1649648312989783] ***
*** finished computation of 7 references, err: [Inf, 0.314164885816717, 0.18371373994177717, 0.17223370701684942, 0.1649648312989783] ***
*** center 1: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 6]]
** centroid: 3, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5622000059182891] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5622000059182891, 0.26391540661327684] ***
*** finished computation of 7 references, err: [Inf, 0.5622000059182891, 0.26391540661327684] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 2]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 22), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 7, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5722000023260898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5722000023260898, 0.2988345725772974] ***
*** finished computation of 7 references, err: [Inf, 0.5722000023260898, 0.2988345725772974] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 14]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(2, 7), (3, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4705999992532793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4705999992532793, 0.2662028944710132] ***
*** finished computation of 7 references, err: [Inf, 0.4705999992532793, 0.2662028944710132] ***
*** center 1: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 5]]
** centroid: 3, normalized-entropy: 0.7382848661434506, [(2, 19), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 16]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.49020000331097835] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49020000331097835, 0.23772441443757386] ***
*** starting iteration: 2; err: [Inf, 0.49020000331097835, 0.23772441443757386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49020000331097835, 0.23772441443757386, 0.22988850754617635] ***
*** starting iteration: 3; err: [Inf, 0.49020000331097835, 0.23772441443757386, 0.22988850754617635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49020000331097835, 0.23772441443757386, 0.22988850754617635, 0.22693178263017091] ***
*** finished computation of 7 references, err: [Inf, 0.49020000331097835, 0.23772441443757386, 0.22988850754617635, 0.22693178263017091] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 16, 5]]
** centroid: 6, normalized-entropy: 0.7918583525674836, [(2, 16), (3, 5)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6026000053633908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6026000053633908, 0.2766153356603818] ***
*** starting iteration: 2; err: [Inf, 0.6026000053633908, 0.2766153356603818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6026000053633908, 0.2766153356603818, 0.26497232114135516] ***
*** starting iteration: 3; err: [Inf, 0.6026000053633908, 0.2766153356603818, 0.26497232114135516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6026000053633908, 0.2766153356603818, 0.26497232114135516, 0.26068550953094927] ***
*** finished computation of 7 references, err: [Inf, 0.6026000053633908, 0.2766153356603818, 0.26497232114135516, 0.26068550953094927] ***
*** center 1: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 4]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 13, 7]]
** centroid: 4, normalized-entropy: 0.9340680553754911, [(2, 13), (3, 7)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 19, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5152000014553612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5152000014553612, 0.24182259952362264] ***
*** starting iteration: 2; err: [Inf, 0.5152000014553612, 0.24182259952362264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5152000014553612, 0.24182259952362264, 0.22206097342358486] ***
*** starting iteration: 3; err: [Inf, 0.5152000014553612, 0.24182259952362264, 0.22206097342358486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5152000014553612, 0.24182259952362264, 0.22206097342358486, 0.21337906727951175] ***
*** finished computation of 7 references, err: [Inf, 0.5152000014553612, 0.24182259952362264, 0.22206097342358486, 0.21337906727951175] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 13, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 6, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5688000005325838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5688000005325838, 0.2590027273832516] ***
*** finished computation of 7 references, err: [Inf, 0.5688000005325838, 0.2590027273832516] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 3, 11]]
** centroid: 7, normalized-entropy: 0.7495952572594798, [(2, 3), (3, 11)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5929000054188118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5929000054188118, 0.27395878380173494] ***
*** finished computation of 7 references, err: [Inf, 0.5929000054188118, 0.27395878380173494] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 6, 14]]
** centroid: 4, normalized-entropy: 0.8812908992306927, [(2, 6), (3, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4967999988945175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4967999988945175, 0.2662028944710132] ***
*** finished computation of 7 references, err: [Inf, 0.4967999988945175, 0.2662028944710132] ***
*** center 1: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 19, 5]]
** centroid: 3, normalized-entropy: 0.7382848661434506, [(2, 19), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 16]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 2), (3, 16)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4495335436862284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4495335436862284, 0.18174645135474227] ***
*** starting iteration: 2; err: [Inf, 0.4495335436862284, 0.18174645135474227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4495335436862284, 0.18174645135474227, 0.17038742022120532] ***
*** starting iteration: 3; err: [Inf, 0.4495335436862284, 0.18174645135474227, 0.17038742022120532] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4495335436862284, 0.18174645135474227, 0.17038742022120532, 0.16116832263621444] ***
*** finished computation of 7 references, err: [Inf, 0.4495335436862284, 0.18174645135474227, 0.17038742022120532, 0.16116832263621444] ***
*** center 1: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 1]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 13), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 8]]
** centroid: 4, normalized-entropy: 0.9043814577244941, [(2, 17), (3, 8)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.389640142966952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.389640142966952, 0.25024743824982854] ***
*** starting iteration: 2; err: [Inf, 0.389640142966952, 0.25024743824982854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.389640142966952, 0.25024743824982854, 0.23280431006193258] ***
*** starting iteration: 3; err: [Inf, 0.389640142966952, 0.25024743824982854, 0.23280431006193258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.389640142966952, 0.25024743824982854, 0.23280431006193258, 0.22025453952480642] ***
*** finished computation of 7 references, err: [Inf, 0.389640142966952, 0.25024743824982854, 0.23280431006193258, 0.22025453952480642] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 24, 1]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(2, 24), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 9, 24]]
** centroid: 4, normalized-entropy: 0.8453509366224364, [(2, 9), (3, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44747533540977613] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44747533540977613, 0.16488569978486306] ***
*** starting iteration: 2; err: [Inf, 0.44747533540977613, 0.16488569978486306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44747533540977613, 0.16488569978486306, 0.15968300431855828] ***
*** starting iteration: 3; err: [Inf, 0.44747533540977613, 0.16488569978486306, 0.15968300431855828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44747533540977613, 0.16488569978486306, 0.15968300431855828, 0.15820411535471937] ***
*** finished computation of 7 references, err: [Inf, 0.44747533540977613, 0.16488569978486306, 0.15968300431855828, 0.15820411535471937] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 7]]
** centroid: 1, normalized-entropy: 0.8403586716091169, [(2, 19), (3, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [25, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 1, 14]]
** centroid: 5, normalized-entropy: 0.3533593350214213, [(2, 1), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.868699994914168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.868699994914168, 0.47401860718786615] ***
*** starting iteration: 2; err: [Inf, 0.868699994914168, 0.47401860718786615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.868699994914168, 0.47401860718786615, 0.44954709802434856] ***
*** starting iteration: 3; err: [Inf, 0.868699994914168, 0.47401860718786615, 0.44954709802434856] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.868699994914168, 0.47401860718786615, 0.44954709802434856, 0.4351273006921856] ***
*** finished computation of 7 references, err: [Inf, 0.868699994914168, 0.47401860718786615, 0.44954709802434856, 0.4351273006921856] ***
*** center 1: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 9, 34]]
** centroid: 6, normalized-entropy: 0.7401470427139037, [(2, 9), (3, 34)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 25, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7266000035858226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7266000035858226, 0.3889795829867261] ***
*** starting iteration: 2; err: [Inf, 0.7266000035858226, 0.3889795829867261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7266000035858226, 0.3889795829867261, 0.33733355213160926] ***
*** starting iteration: 3; err: [Inf, 0.7266000035858226, 0.3889795829867261, 0.33733355213160926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7266000035858226, 0.3889795829867261, 0.33733355213160926, 0.3262134025086148] ***
*** finished computation of 7 references, err: [Inf, 0.7266000035858226, 0.3889795829867261, 0.33733355213160926, 0.3262134025086148] ***
*** center 1: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 5: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 11, 17]]
** centroid: 6, normalized-entropy: 0.9666186325481027, [(2, 11), (3, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9457000009587735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9457000009587735, 0.4616817002957475] ***
*** starting iteration: 2; err: [Inf, 0.9457000009587735, 0.4616817002957475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9457000009587735, 0.4616817002957475, 0.3757569070442625] ***
*** starting iteration: 3; err: [Inf, 0.9457000009587735, 0.4616817002957475, 0.3757569070442625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9457000009587735, 0.4616817002957475, 0.3757569070442625, 0.3277752849909643] ***
*** finished computation of 7 references, err: [Inf, 0.9457000009587735, 0.4616817002957475, 0.3757569070442625, 0.3277752849909643] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 9]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(2, 15), (3, 9)]
*** center 7: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.5081000038510097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5081000038510097, 0.31485123781575924] ***
*** starting iteration: 2; err: [Inf, 0.5081000038510097, 0.31485123781575924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5081000038510097, 0.31485123781575924, 0.30803079895075947] ***
*** starting iteration: 3; err: [Inf, 0.5081000038510097, 0.31485123781575924, 0.30803079895075947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5081000038510097, 0.31485123781575924, 0.30803079895075947, 0.3065710763285899] ***
*** starting iteration: 4; err: [Inf, 0.5081000038510097, 0.31485123781575924, 0.30803079895075947, 0.3065710763285899] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5081000038510097, 0.31485123781575924, 0.30803079895075947, 0.3065710763285899, 0.3065710763285899] ***
*** finished computation of 7 references, err: [Inf, 0.5081000038510097, 0.31485123781575924, 0.30803079895075947, 0.3065710763285899, 0.3065710763285899] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 12, 21]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(2, 12), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
*** center 6: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.558700000902865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915] ***
*** starting iteration: 2; err: [Inf, 0.558700000902865, 0.39054439253946915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907] ***
*** starting iteration: 3; err: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275] ***
*** starting iteration: 4; err: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482] ***
*** starting iteration: 5; err: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482, 0.3321133172602186] ***
*** starting iteration: 6; err: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482, 0.3321133172602186] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482, 0.3321133172602186, 0.32982529244199127] ***
*** starting iteration: 7; err: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482, 0.3321133172602186, 0.32982529244199127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482, 0.3321133172602186, 0.32982529244199127, 0.32889651934224573] ***
*** finished computation of 7 references, err: [Inf, 0.558700000902865, 0.39054439253946915, 0.37628332526591907, 0.35893873997333275, 0.3441959722964482, 0.3321133172602186, 0.32982529244199127, 0.32889651934224573] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 23, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 3: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 10, 24]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 10), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.9534999980431287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9534999980431287, 0.47270994015140894] ***
*** starting iteration: 2; err: [Inf, 0.9534999980431287, 0.47270994015140894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768] ***
*** starting iteration: 3; err: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926] ***
*** starting iteration: 4; err: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926, 0.31462695154089054] ***
*** starting iteration: 5; err: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926, 0.31462695154089054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926, 0.31462695154089054, 0.2992753030421079] ***
*** starting iteration: 6; err: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926, 0.31462695154089054, 0.2992753030421079] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926, 0.31462695154089054, 0.2992753030421079, 0.29871984087194653] ***
*** finished computation of 7 references, err: [Inf, 0.9534999980431287, 0.47270994015140894, 0.4348957032939768, 0.3670413457714926, 0.31462695154089054, 0.2992753030421079, 0.29871984087194653] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 18, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 14]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 15, 15]]
** centroid: 5, normalized-entropy: 1.0, [(2, 15), (3, 15)]
*** center 6: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.38118906329750646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38118906329750646, 0.2159561085962797] ***
*** starting iteration: 2; err: [Inf, 0.38118906329750646, 0.2159561085962797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38118906329750646, 0.2159561085962797, 0.1950786389625791] ***
*** starting iteration: 3; err: [Inf, 0.38118906329750646, 0.2159561085962797, 0.1950786389625791] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38118906329750646, 0.2159561085962797, 0.1950786389625791, 0.18219905215776436] ***
*** finished computation of 7 references, err: [Inf, 0.38118906329750646, 0.2159561085962797, 0.1950786389625791, 0.18219905215776436] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 1]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 3, 14]]
** centroid: 2, normalized-entropy: 0.6722948170756378, [(2, 3), (3, 14)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 10]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.508018079532722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.508018079532722, 0.27740549317540003] ***
*** starting iteration: 2; err: [Inf, 0.508018079532722, 0.27740549317540003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.508018079532722, 0.27740549317540003, 0.25291365446707703] ***
*** starting iteration: 3; err: [Inf, 0.508018079532722, 0.27740549317540003, 0.25291365446707703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.508018079532722, 0.27740549317540003, 0.25291365446707703, 0.237364214731054] ***
*** finished computation of 7 references, err: [Inf, 0.508018079532722, 0.27740549317540003, 0.25291365446707703, 0.237364214731054] ***
*** center 1: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 24]]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 16, 11]]
** centroid: 5, normalized-entropy: 0.975119064940866, [(2, 16), (3, 11)]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 17, 1]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 7.36624444596202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.36624444596202, 0.6553730273496347] ***
*** starting iteration: 2; err: [Inf, 7.36624444596202, 0.6553730273496347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.36624444596202, 0.6553730273496347, 0.6295855954640858] ***
*** starting iteration: 3; err: [Inf, 7.36624444596202, 0.6553730273496347, 0.6295855954640858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 7.36624444596202, 0.6553730273496347, 0.6295855954640858, 0.628686018769692] ***
*** finished computation of 7 references, err: [Inf, 7.36624444596202, 0.6553730273496347, 0.6295855954640858, 0.628686018769692] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 31, 29]]
** centroid: 3, normalized-entropy: 0.99919835426364, [(2, 31), (3, 29)]
*** center 4: selecting labels [1] (freq >= 2) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [11, 2, 0]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(1, 11), (2, 2)]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 7 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 20
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.4322000063870343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000063870343, 0.2923719454167558] ***
*** starting iteration: 2; err: [Inf, 0.4322000063870343, 0.2923719454167558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265] ***
*** starting iteration: 3; err: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265, 0.2678488915439209] ***
*** starting iteration: 4; err: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265, 0.2678488915439209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265, 0.2678488915439209, 0.2655547525875506] ***
*** starting iteration: 5; err: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265, 0.2678488915439209, 0.2655547525875506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265, 0.2678488915439209, 0.2655547525875506, 0.2655547525875506] ***
*** finished computation of 7 references, err: [Inf, 0.4322000063870343, 0.2923719454167558, 0.2719604013992265, 0.2678488915439209, 0.2655547525875506, 0.2655547525875506] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 4, 11]]
** centroid: 7, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48980000524165035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48980000524165035, 0.2795087318619187] ***
*** starting iteration: 2; err: [Inf, 0.48980000524165035, 0.2795087318619187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48980000524165035, 0.2795087318619187, 0.27360425972418245] ***
*** starting iteration: 3; err: [Inf, 0.48980000524165035, 0.2795087318619187, 0.27360425972418245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48980000524165035, 0.2795087318619187, 0.27360425972418245, 0.2726447229972511] ***
*** finished computation of 7 references, err: [Inf, 0.48980000524165035, 0.2795087318619187, 0.27360425972418245, 0.2726447229972511] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 6, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3741000075500482] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3741000075500482, 0.25724689969739184] ***
*** starting iteration: 2; err: [Inf, 0.3741000075500482, 0.25724689969739184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486] ***
*** starting iteration: 3; err: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486, 0.22151074747078603] ***
*** starting iteration: 4; err: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486, 0.22151074747078603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486, 0.22151074747078603, 0.217717816821416] ***
*** starting iteration: 5; err: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486, 0.22151074747078603, 0.217717816821416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486, 0.22151074747078603, 0.217717816821416, 0.217717816821416] ***
*** finished computation of 7 references, err: [Inf, 0.3741000075500482, 0.25724689969739184, 0.2319970206267486, 0.22151074747078603, 0.217717816821416, 0.217717816821416] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 4: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 20, 7]]
** centroid: 7, normalized-entropy: 0.8256265261578954, [(2, 20), (3, 7)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41612108672210313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41612108672210313, 0.20027963560472664] ***
*** starting iteration: 2; err: [Inf, 0.41612108672210313, 0.20027963560472664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41612108672210313, 0.20027963560472664, 0.18778055644918182] ***
*** starting iteration: 3; err: [Inf, 0.41612108672210313, 0.20027963560472664, 0.18778055644918182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41612108672210313, 0.20027963560472664, 0.18778055644918182, 0.1854900878102327] ***
*** starting iteration: 4; err: [Inf, 0.41612108672210313, 0.20027963560472664, 0.18778055644918182, 0.1854900878102327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41612108672210313, 0.20027963560472664, 0.18778055644918182, 0.1854900878102327, 0.18468522735992277] ***
*** finished computation of 7 references, err: [Inf, 0.41612108672210313, 0.20027963560472664, 0.18778055644918182, 0.1854900878102327, 0.18468522735992277] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 1]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 6), (3, 1)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 6, 11]]
** centroid: 3, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3424398278259666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3424398278259666, 0.1839314986629595] ***
*** starting iteration: 2; err: [Inf, 0.3424398278259666, 0.1839314986629595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3424398278259666, 0.1839314986629595, 0.17154913608768474] ***
*** starting iteration: 3; err: [Inf, 0.3424398278259666, 0.1839314986629595, 0.17154913608768474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3424398278259666, 0.1839314986629595, 0.17154913608768474, 0.16718522339143413] ***
*** starting iteration: 4; err: [Inf, 0.3424398278259666, 0.1839314986629595, 0.17154913608768474, 0.16718522339143413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3424398278259666, 0.1839314986629595, 0.17154913608768474, 0.16718522339143413, 0.16718522339143413] ***
*** finished computation of 7 references, err: [Inf, 0.3424398278259666, 0.1839314986629595, 0.17154913608768474, 0.16718522339143413, 0.16718522339143413] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 4, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 7, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3273887854820019] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3273887854820019, 0.20492800254405263] ***
*** starting iteration: 2; err: [Inf, 0.3273887854820019, 0.20492800254405263] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3273887854820019, 0.20492800254405263, 0.19969171043042955] ***
*** starting iteration: 3; err: [Inf, 0.3273887854820019, 0.20492800254405263, 0.19969171043042955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3273887854820019, 0.20492800254405263, 0.19969171043042955, 0.19948790943009798] ***
*** finished computation of 7 references, err: [Inf, 0.3273887854820019, 0.20492800254405263, 0.19969171043042955, 0.19948790943009798] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 1, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 20
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 20
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 20
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 20)
[0.98, 0.9733333333333333, 0.9733333333333333, 0.9666666666666667, 0.96, 0.96, 0.9533333333333333, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.9333333333333332, 0.9333333333333332, 0.9266666666666666, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9199999999999999, 0.8933333333333334, 0.8933333333333332]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2) => 0.98
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.657142857142857, 3.0714285714285716, 1.3857142857142857, 0.18571428571428572], [6.358823529411765, 2.8823529411764706, 4.652941176470589, 1.4647058823529413], [6.011111111111111, 2.744444444444445, 5.022222222222222, 1.788888888888889], [7.433333333333334, 2.9499999999999997, 6.233333333333333, 1.9833333333333334], [5.1499999999999995, 3.714285714285715, 1.5285714285714285, 0.2642857142857143], [5.533333333333333, 2.7055555555555553, 4.022222222222222, 1.2555555555555555], [6.5315789473684225, 3.0578947368421057, 5.463157894736843, 2.1684210526315786], [5.433333333333334, 3.5333333333333337, 1.4333333333333333, 0.26666666666666666]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 3, 1, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.345454545454546, 3.7818181818181817, 1.5454545454545454, 0.2818181818181818], [5.776190476190476, 2.633333333333333, 4.1380952380952385, 1.2714285714285716], [6.618750000000001, 3.0749999999999997, 5.625000000000001, 2.1187500000000004], [4.966666666666667, 2.233333333333333, 3.3666666666666667, 1.0], [7.562500000000001, 3.2000000000000006, 6.375, 2.125], [4.845000000000001, 3.2300000000000004, 1.44, 0.23500000000000004], [6.480000000000001, 3.05, 4.75, 1.54], [6.081818181818181, 2.7, 5.072727272727273, 1.7545454545454542]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 2, 3, 2, 3, 1, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.944444444444445, 2.944444444444444, 4.566666666666666, 1.4555555555555557], [5.925, 2.7125000000000004, 5.0, 1.8875000000000002], [5.48, 2.5466666666666664, 3.7800000000000002, 1.16], [4.832000000000001, 3.2280000000000006, 1.4439999999999997, 0.2360000000000001], [6.576923076923077, 3.076923076923077, 5.53076923076923, 2.161538461538462], [7.5, 3.2125000000000004, 6.387499999999999, 2.075], [5.423076923076923, 3.792307692307692, 1.4923076923076926, 0.27692307692307694], [6.555555555555555, 3.011111111111111, 4.577777777777778, 1.4333333333333333]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 2, 1, 3, 3, 1, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 10, 1.0, :rand, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[53, 22, 1, 1, 27, 25, 1, 16, 6, 5, 5, 21, 28, 19, 29, 12, 25, 21, 23, 16, 39, 2, 39, 47, 7, 12, 24, 15, 23, 21, 57, 46, 21, 32, 17, 42, 39, 39, 24, 28, 43, 45, 23, 30, 34, 39, 37, 33, 33, 36, 48, 42, 13, 41, 30, 38, 29, 21, 14, 15, 42, 29, 22, 27, 41, 21, 23, 1, 34, 48, 31, 38, 3, 38, 33, 30, 37, 45, 28, 32, 24, 24, 25, 11, 23, 45, 9, 42, 1, 51, 13, 16, 50, 42, 41, 37, 56, 36, 43, 36, 44, 33, 24, 25, 37, 26, 36, 14, 40, 23, 50, 34, 59, 39, 33, 43, 36, 29, 36, 14, 35, 29, 41, 40, 37, 21, 47, 15, 24, 38, 45, 20, 24, 24, 33, 42, 56, 25, 28, 43, 39, 32, 63, 46, 45, 1, 36, 26, 39, 32, 41, 9, 1, 40, 42, 1, 48, 26, 36, 34, 26, 34, 39, 30, 29, 53, 37, 24, 39, 42, 41, 54, 44, 62, 41, 22, 24, 48, 42, 20, 36, 81, 38, 36, 34, 27, 51, 48, 36, 33, 27, 41, 17, 40, 22, 18, 33, 34, 56, 17, 40, 14, 48, 40, 49, 43, 67, 30, 44, 27, 35, 18, 35, 37, 45, 37, 42, 26, 42, 73, 26, 44, 50, 58, 23, 40, 33, 23, 31, 39, 60, 35, 43, 29, 43, 97, 15, 38, 38, 49, 35, 37, 30, 21, 33, 24, 54, 50, 40, 60, 36, 61, 20, 44, 19, 17, 45, 56, 36, 46, 29, 38, 35, 45, 37, 32, 34, 23, 34, 38, 35, 23, 32, 34, 38, 27, 35, 42, 10, 53, 21, 57, 43, 34, 42, 25, 27, 1, 14, 30, 69, 36, 32, 55, 35, 33, 42, 30, 36, 37]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6150000000000001, speedup = 0.36173534025096526, eval_ratio = 0.04129)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3645833333333337,"recall":0.3645833333333337,"f1":null,"seconds":6.707757711410522e-5,"exhaustive_search_seconds":0.00036279670894145966,"evaluations":337.671875,"distances_sum":1792.264419120314}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5572916666666665,"recall":0.5572916666666665,"f1":null,"seconds":0.00010089389979839325,"exhaustive_search_seconds":0.00036279670894145966,"evaluations":375.546875,"distances_sum":1655.810556834617}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6571180555555549,"recall":0.6571180555555549,"f1":0.6571180555555549,"seconds":0.00012839771807193756,"exhaustive_search_seconds":0.00036279670894145966,"evaluations":413.5859375,"distances_sum":1612.5559623952497}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.729166666666666,"recall":0.729166666666666,"f1":0.729166666666666,"seconds":0.00016605108976364136,"exhaustive_search_seconds":0.00036279670894145966,"evaluations":451.0390625,"distances_sum":1588.9170693856152}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7821180555555546,"recall":0.7821180555555546,"f1":0.7821180555555546,"seconds":0.00018609501421451569,"exhaustive_search_seconds":0.00036279670894145966,"evaluations":490.1953125,"distances_sum":1574.8497206813054}
KCenters.DeloneInvIndex> reached performance {"precision":0.8298611111111104,"recall":0.8298611111111104,"f1":0.8298611111111104,"seconds":0.00020851753652095795,"exhaustive_search_seconds":0.00036279670894145966,"evaluations":530.90625,"distances_sum":1563.835395716493}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7999999999999998, speedup = 1.622072183773304, eval_ratio = 0.052618)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
