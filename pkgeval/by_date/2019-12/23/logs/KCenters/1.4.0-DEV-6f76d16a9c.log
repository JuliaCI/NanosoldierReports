Julia Version 1.4.0-DEV.657
Commit 6f76d16a9c (2019-12-23 01:48 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed Reexport ──────────────────── v0.2.0
 Installed MappedArrays ──────────────── v0.2.2
 Installed KCenters ──────────────────── v0.1.8
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed StatsBase ─────────────────── v0.32.0
 Installed JSON ──────────────────────── v0.21.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed LearnBase ─────────────────── v0.2.2
 Installed DataValueInterfaces ───────── v1.0.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed TableTraits ───────────────── v1.0.0
 Installed MLDataUtils ───────────────── v0.5.0
 Installed Parsers ───────────────────── v0.3.10
 Installed CategoricalArrays ─────────── v0.7.5
 Installed DataStructures ────────────── v0.17.6
 Installed MLDataPattern ─────────────── v0.5.0
 Installed Missings ──────────────────── v0.4.3
 Installed OrderedCollections ────────── v1.1.0
 Installed Compat ────────────────────── v3.0.0
 Installed DataFrames ────────────────── v0.20.0
 Installed PooledArrays ──────────────── v0.5.3
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed DataAPI ───────────────────── v1.1.0
 Installed Tables ────────────────────── v0.2.11
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.8
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.5
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.8
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Path `/home/pkgeval/.julia/packages/KCenters/ME2xN` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_D2DXK1/Project.toml`
  [5d8de97f] + KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  Updating `/tmp/jl_D2DXK1/Manifest.toml`
  [5d8de97f] ~ KCenters v0.1.8 ⇒ v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
Running sandbox
Status `/tmp/jl_D2DXK1/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.8 [`~/.julia/packages/KCenters/ME2xN`]
  [cc2ba9b6] MLDataUtils v0.5.0
  [053f045d] SimilaritySearch v0.3.17
  [2913bbd2] StatsBase v0.32.0
  [8bb1440f] DelimitedFiles 
  [8ba89e20] Distributed 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [2f01184e] SparseArrays 
  [8dfed614] Test 
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 147.23000000000005
[ Info: 75.81000000000003
[ Info: 39.28000000000001
[ Info: 25.070000000000004
Test Summary:        | Pass  Total
Clustering with enet |    4      4
Test Summary:        |
Clustering with dnet | No tests
[ Info: 313.64000338064864
[ Info: 547.7199992669996
[ Info: 146.19999834944844
[ Info: 75.78000114538527
inertia(cfft.distances) = 18.04104830899008
inertia(cdnet.distances) = 20.16882914221792
inertia(crand.distances) = 22.42942713144352
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1552734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1552734375,"f1":null,"seconds":3.417953848838806e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":3.9609375,"distances_sum":477.7005030289855}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5107421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5107421875,"f1":0.6595175657675661,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":6.6328125,"distances_sum":1556.2212641476553}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8645963411588419,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.3359375,"distances_sum":2458.9637914426858}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8645963411588419,"seconds":6.191432476043701e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.3359375,"distances_sum":2458.9637914426858}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9415724900099907,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.5546875,"distances_sum":3058.8864969807214}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8134765625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8134765625,"f1":0.8874921953046961,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.25,"distances_sum":2626.6694920793097}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9470638736263742,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.640625,"distances_sum":3067.522464408925}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9470638736263742,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.640625,"distances_sum":3067.522464408925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9582074175824181,"seconds":6.3497573137283325e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.734375,"distances_sum":3163.3146461116185}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560445,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.7734375,"distances_sum":3149.79884607088}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9556604853479856,"seconds":6.303191184997559e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.75,"distances_sum":3105.4401594561277}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9490041208791214,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.6171875,"distances_sum":3120.330850812552}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560445,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.7734375,"distances_sum":3149.79884607088}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9627060439560445,"seconds":6.7427754402160645e-6,"exhaustive_search_seconds":1.860782504081726e-6,"evaluations":8.7734375,"distances_sum":3149.79884607088}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1826171875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1826171875,"f1":null,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":4.578125,"distances_sum":479.1949940084517}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1826171875,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.1826171875,"f1":null,"seconds":3.339722752571106e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":4.578125,"distances_sum":479.1949940084517}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.708766937255859e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":7.3984375,"distances_sum":1420.6726240521514}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.318359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.318359375,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.2265625,"distances_sum":827.6238264649697}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.328125, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.328125,"f1":null,"seconds":3.170222043991089e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.09375,"distances_sum":877.1847069784424}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8583883130758139,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2109375,"distances_sum":2161.00496033659}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8583883130758139,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.2109375,"distances_sum":2161.00496033659}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9561069139194146,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7890625,"distances_sum":2808.0417674360524}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9270635614385621,"seconds":5.6140124797821045e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.5390625,"distances_sum":2607.8854233104303}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9124542124542133,"seconds":5.5730342864990234e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.703125,"distances_sum":2437.5123550502467}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9561069139194146,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7890625,"distances_sum":2808.0417674360524}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9228515625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.9561069139194146,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7890625,"distances_sum":2808.0417674360524}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8422889610389618,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.203125,"distances_sum":2046.5976289836376}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7373046875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7373046875,"f1":0.837981116106117,"seconds":4.952773451805115e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.234375,"distances_sum":2020.4018152070003}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7421875,"f1":0.8422889610389618,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.203125,"distances_sum":2046.5976289836376}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9509157509157513,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":2678.449149539795}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9444914460539466,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.75,"distances_sum":2682.599244300964}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.8860550907425916,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.3125,"distances_sum":2297.455699640256}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9509157509157513,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.859375,"distances_sum":2678.449149539795}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699404761904765,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2832.3866956829106}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586366758241763,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.8359375,"distances_sum":2739.469515218531}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9633788086913091,"seconds":6.167218089103699e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.875,"distances_sum":2799.1594586178417}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9618933150183153,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.78125,"distances_sum":2806.7520309068395}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9675080128205131,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.90625,"distances_sum":2821.8527025133812}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9699404761904765,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2832.3866956829106}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9699404761904765,"seconds":6.884336471557617e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.9453125,"distances_sum":2832.3866956829106}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7573872308247316,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.359375,"distances_sum":1688.5320828573335}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.762135087135088,"seconds":4.59328293800354e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.390625,"distances_sum":1691.3370540567312}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6337890625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6337890625,"f1":0.7573872308247316,"seconds":4.4889748096466064e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.359375,"distances_sum":1688.5320828573335}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7109375,"f1":0.8194111444111454,"seconds":4.945322871208191e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.7109375,"distances_sum":1995.574637351978}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8583984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8583984375,"f1":0.917350878288379,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.53125,"distances_sum":2482.158700242647}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8694836413586423,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.0625,"distances_sum":2232.3933677175246}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.740234375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.740234375,"f1":0.842299367299368,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.9921875,"distances_sum":2065.711047554521}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8298595501720512,"seconds":4.9602240324020386e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":7.7421875,"distances_sum":2027.344084806512}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8583984375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8583984375,"f1":0.917350878288379,"seconds":5.548819899559021e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.53125,"distances_sum":2482.158700242647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9375858516483522,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.6953125,"distances_sum":2623.97030961304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9249427655677662,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.5546875,"distances_sum":2559.1967940366417}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9395921786546795,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.65625,"distances_sum":2652.1058487624596}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9477251914751919,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.671875,"distances_sum":2743.1892091452974}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9477251914751919,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.671875,"distances_sum":2743.1892091452974}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":11,"bsize":9},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9477251914751919,"seconds":5.498528480529785e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.671875,"distances_sum":2743.1892091452974}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.21484375,"f1":null,"seconds":3.4924596548080444e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.0078125,"distances_sum":541.6726223053915}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2314453125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2314453125,"f1":null,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.140625,"distances_sum":589.1710866015726}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2314453125,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.2314453125,"f1":null,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":6.140625,"distances_sum":589.1710866015726}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.816976773226774,"seconds":4.949048161506653e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.03125,"distances_sum":1890.5826027881142}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8602995962370973,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.25,"distances_sum":2110.5495989446076}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7666015625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7666015625,"f1":0.8602995962370973,"seconds":5.867332220077515e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.25,"distances_sum":2110.5495989446076}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.902950695138196,"seconds":5.27501106262207e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3359375,"distances_sum":2388.185684105137}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9621336996337,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2822.239192116799}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9485405219780226,"seconds":5.5674463510513306e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.7734375,"distances_sum":2723.2453717313106}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9263106684981692,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.578125,"distances_sum":2561.5591604882297}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9621336996337,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2822.239192116799}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9621336996337,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8828125,"distances_sum":2822.239192116799}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.705078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.705078125,"f1":0.8187255452880461,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.90625,"distances_sum":1912.0920188797693}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6962890625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6962890625,"f1":0.8107996170496177,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.828125,"distances_sum":1918.4658949422774}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.705078125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.705078125,"f1":0.8187255452880461,"seconds":4.451721906661987e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":7.90625,"distances_sum":1912.0920188797693}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9265739468864477,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7265625,"distances_sum":2541.9889571093663}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.8658258408258417,"seconds":4.941597580909729e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.2890625,"distances_sum":2169.838401915188}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8498381826506836,"seconds":5.023553967475891e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.1640625,"distances_sum":2050.049040883905}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7431640625,"f1":0.8456538253413262,"seconds":5.161389708518982e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.1796875,"distances_sum":2027.504734909655}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":5,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9265739468864477,"seconds":5.9138983488082886e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7265625,"distances_sum":2541.9889571093663}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.972453067765568,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2905.7833694618366}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9705929487179492,"seconds":6.280839443206787e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.921875,"distances_sum":2922.005847720144}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9499370421245426,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8046875,"distances_sum":2762.3165610495653}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524241383616389,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.828125,"distances_sum":2756.4771084408403}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9573176823176829,"seconds":6.062909960746765e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8046875,"distances_sum":2817.325018239618}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9277243589743596,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.6640625,"distances_sum":2564.8602162702714}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.966317536630037,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8671875,"distances_sum":2888.960240208822}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972453067765568,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2905.7833694618366}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.972453067765568,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.953125,"distances_sum":2905.7833694618366}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4150390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.28125,"distances_sum":1136.6819669374675}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4150390625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4150390625,"f1":null,"seconds":3.42540442943573e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.28125,"distances_sum":1136.6819669374675}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9030308233433239,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3203125,"distances_sum":2488.3905068447657}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8330078125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8330078125,"f1":0.9030308233433239,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.3203125,"distances_sum":2488.3905068447657}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9655563186813192,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2950.5432309652283}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633705,"seconds":6.012618541717529e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8515625,"distances_sum":2943.622878939392}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9655563186813192,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2950.5432309652283}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9655563186813192,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.8828125,"distances_sum":2950.5432309652283}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4580078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4580078125,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.4375,"distances_sum":1137.9911189222862}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4580078125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4580078125,"f1":null,"seconds":3.60049307346344e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":6.4375,"distances_sum":1137.9911189222862}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.810546875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.810546875,"f1":0.8889365842490852,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.796875,"distances_sum":2297.8279011653754}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7928243631368639,"seconds":4.516914486885071e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":7.7890625,"distances_sum":1778.7197331739908}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.810546875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.810546875,"f1":0.8889365842490852,"seconds":5.532056093215942e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.796875,"distances_sum":2297.8279011653754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9548248626373633,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8984375,"distances_sum":2890.8912109541293}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420818764568769,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8515625,"distances_sum":2782.887760845083}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.938184211621712,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.84375,"distances_sum":2734.232123380572}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9548248626373633,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8984375,"distances_sum":2890.8912109541293}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9208984375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9208984375,"f1":0.9548248626373633,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.469627022743225e-6,"evaluations":8.8984375,"distances_sum":2890.8912109541293}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3349609375, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3349609375,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.203125,"distances_sum":811.1347125105771}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.15625,"f1":null,"seconds":2.7474015951156616e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":3.9375,"distances_sum":375.442055830956}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1572265625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1572265625,"f1":null,"seconds":2.7138739824295044e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":4.0546875,"distances_sum":378.1906222172866}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3349609375,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.3349609375,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.203125,"distances_sum":811.1347125105771}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8528360528360536,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1875,"distances_sum":2024.2436769351878}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6748046875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6748046875,"f1":0.7933252511377519,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.75,"distances_sum":1695.2396082377627}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":7,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.298744559288025e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.453125,"distances_sum":939.53811998898}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.521484375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.521484375,"f1":0.6664633977133984,"seconds":3.95067036151886e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.8203125,"distances_sum":1319.2380676277955}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8505161505161514,"seconds":4.973262548446655e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.15625,"distances_sum":1989.2104665882082}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.625,"f1":0.7522931929181935,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.4296875,"distances_sum":1558.8912391764804}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.52734375, conf: {"ssize":6,"bsize":3}, perf: {"precision":null,"recall":0.52734375,"f1":null,"seconds":3.943219780921936e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":6.9140625,"distances_sum":1288.11518554008}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":8,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8528360528360536,"seconds":5.146488547325134e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.1875,"distances_sum":2024.2436769351878}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9347355769230773,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5625,"distances_sum":2600.6989470743474}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9252383033633038,"seconds":5.444511771202087e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5390625,"distances_sum":2475.1305092422426}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8744172494172503,"seconds":5.2265822887420654e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.140625,"distances_sum":2208.963718824294}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8095703125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8095703125,"f1":0.8851055194805203,"seconds":5.207955837249756e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.2421875,"distances_sum":2246.643854626757}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9347355769230773,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5625,"distances_sum":2600.6989470743474}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.890625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9347355769230773,"seconds":5.578622221946716e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.5625,"distances_sum":2600.6989470743474}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55859375,"f1":0.6988072691197695,"seconds":4.220753908157349e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.3828125,"distances_sum":1251.813382437712}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.797757971195472,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.1328125,"distances_sum":1648.52889774797}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.797757971195472,"seconds":4.783272743225098e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.1328125,"distances_sum":1648.52889774797}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.930196886446887,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2454.9506188774153}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9494848901098906,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2616.7015100502504}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7421875,"f1":0.8427794427794437,"seconds":5.2675604820251465e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.375,"distances_sum":1874.8660010684682}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9494848901098906,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2616.7015100502504}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.97265625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.97265625,"f1":0.9852678571428574,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.953125,"distances_sum":2877.9034008645526}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631181318681326,"seconds":5.898997187614441e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.90625,"distances_sum":2716.5535675382835}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9636389652014655,"seconds":5.9157609939575195e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.9140625,"distances_sum":2707.443182426531}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.97265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9852678571428574,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.953125,"distances_sum":2877.9034008645526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.97265625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.97265625,"f1":0.9852678571428574,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.953125,"distances_sum":2877.9034008645526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.1739473342895508e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.7890625,"distances_sum":521.9547341268075}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.421875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.421875,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.0,"distances_sum":972.2373379688671}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.421875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.421875,"f1":null,"seconds":3.604218363761902e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.0,"distances_sum":972.2373379688671}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8357090825840834,"seconds":5.1353126764297485e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1796875,"distances_sum":1867.9302583881727}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8374165764790773,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.09375,"distances_sum":1952.131826825543}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5625, conf: {"ssize":9,"bsize":3}, perf: {"precision":null,"recall":0.5625,"f1":null,"seconds":4.241243004798889e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.8203125,"distances_sum":1317.7850964458878}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7881039099789109,"seconds":4.5318156480789185e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.140625,"distances_sum":1614.8340160268624}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7353515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7353515625,"f1":0.8374165764790773,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.09375,"distances_sum":1952.131826825543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9265947594072599,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.796875,"distances_sum":2493.178660041265}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9221101814851823,"seconds":5.619600415229797e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2468.742898108659}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8154296875, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8154296875,"f1":0.8919705294705301,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.4375,"distances_sum":2212.3047426046132}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948946886446887,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2690.34997084691}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.948946886446887,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2690.34997084691}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.91015625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.948946886446887,"seconds":5.923211574554443e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2690.34997084691}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8159606018981028,"seconds":4.827976226806641e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.2265625,"distances_sum":1719.546453320627}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7980493464868473,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.03125,"distances_sum":1578.7587693706212}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8675511988011997,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8125,"distances_sum":1972.875450283024}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8675511988011997,"seconds":5.850568413734436e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.8125,"distances_sum":1972.875450283024}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666895604395609,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9765625,"distances_sum":2737.5915105811428}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8951553654678663,"seconds":6.4801424741744995e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.921875,"distances_sum":2125.6874433535972}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9338713369963375,"seconds":6.332993507385254e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.90625,"distances_sum":2480.8999409241883}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9613152472527476,"seconds":6.9551169872283936e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.953125,"distances_sum":2700.945941191297}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9407051282051285,"seconds":0.00010037608444690704,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.90625,"distances_sum":2569.652052440413}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604967948717954,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.96875,"distances_sum":2694.41387811993}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9666895604395609,"seconds":6.897374987602234e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9765625,"distances_sum":2737.5915105811428}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9789434523809527,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2828.2139861971195}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9761160714285717,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.984375,"distances_sum":2795.363599834374}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9780334249084253,"seconds":3.841705620288849e-5,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9765625,"distances_sum":2840.740744042232}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9770833333333337,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2809.703309204827}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752060439560442,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9765625,"distances_sum":2802.205719668211}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9793154761904765,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2831.1517429156816}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789434523809527,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2828.2139861971195}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9789434523809527,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4230608940124512e-6,"evaluations":8.9921875,"distances_sum":2828.2139861971195}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8490904928404938,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2109375,"distances_sum":1948.3556096849059}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.244140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.244140625,"f1":null,"seconds":3.2652169466018677e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.8515625,"distances_sum":698.8541847646351}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4443359375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4443359375,"f1":null,"seconds":3.913417458534241e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.2890625,"distances_sum":1041.9840371858775}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5,"f1":0.6478576978576982,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.5546875,"distances_sum":1201.084505323216}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8490904928404938,"seconds":4.9639493227005005e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.2109375,"distances_sum":1948.3556096849059}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8791042291042299,"seconds":5.25452196598053e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.421875,"distances_sum":2143.573627901222}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9466804029304035,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2710.506774717374}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9296994671994678,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7578125,"distances_sum":2571.3535489461833}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8941969488844496,"seconds":5.368143320083618e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.4453125,"distances_sum":2272.738702996277}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9052734375,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9052734375,"f1":0.9466804029304035,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7734375,"distances_sum":2710.506774717374}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9593406593406599,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2813.2440756878877}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.960273580586081,"seconds":5.470588803291321e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8671875,"distances_sum":2789.094767192395}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9514365842490848,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2709.4510611408436}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754292582417586,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2920.553880137562}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754292582417586,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2920.553880137562}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9754292582417586,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2920.553880137562}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":0.9900297619047618,"recall":0.69921875,"f1":0.8097296800421806,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3671875,"distances_sum":1894.0676546760358}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.125518560409546e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.7890625,"distances_sum":634.6985843757201}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":1,"bsize":4},"perf":{"precision":0.9900297619047618,"recall":0.69921875,"f1":0.8097296800421806,"seconds":4.664063453674316e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.3671875,"distances_sum":1894.0676546760358}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9922991071428571,"recall":0.7578125,"f1":0.8520737942612947,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.90625,"distances_sum":2138.5980744326403}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":3,"bsize":7}, perf: {"precision":0.9911644345238095,"recall":0.8701171875,"f1":0.9207923586829841,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.59375,"distances_sum":2674.7764988236827}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":3,"bsize":7},"perf":{"precision":0.9911644345238095,"recall":0.8701171875,"f1":0.9207923586829841,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.59375,"distances_sum":2674.7764988236827}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9874441964285714,"recall":0.9365234375,"f1":0.9593592605311357,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":3069.6280006111115}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":0.9851655505952381,"recall":0.8994140625,"f1":0.9368282108516488,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7890625,"distances_sum":2892.975637848423}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9881603422619047,"recall":0.8857421875,"f1":0.9304966517857147,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.625,"distances_sum":2740.868986977961}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":0.9874441964285714,"recall":0.9365234375,"f1":0.9593592605311357,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":3069.6280006111115}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":5,"bsize":9},"perf":{"precision":0.9874441964285714,"recall":0.9365234375,"f1":0.9593592605311357,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":3069.6280006111115}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.63671875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.63671875,"f1":0.7653731684981693,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.3515625,"distances_sum":1788.2480968768896}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8082776598401606,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.6640625,"distances_sum":2028.4743976150655}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3017578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.3017578125,"f1":null,"seconds":3.388151526451111e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":6.375,"distances_sum":901.718530517562}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8082776598401606,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.6640625,"distances_sum":2028.4743976150655}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8125,"f1":0.8917010073260082,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.3984375,"distances_sum":2586.238979646562}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8568317099567109,"seconds":5.086883902549744e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.2109375,"distances_sum":2353.61650790669}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8955221861471868,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.4765625,"distances_sum":2666.9516224040176}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9597355769230774,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":3249.4347286544617}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.922693452380953,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.6015625,"distances_sum":2896.159811767924}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9266655219780224,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.640625,"distances_sum":2890.076395823097}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9597355769230774,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.84375,"distances_sum":3249.4347286544617}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731227106227109,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9453125,"distances_sum":3306.5066672377375}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9685153388278391,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.921875,"distances_sum":3293.209137081381}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9730139652014657,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8984375,"distances_sum":3341.036509385013}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9653305028305031,"seconds":5.89713454246521e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8984375,"distances_sum":3237.3721813456464}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9730139652014657,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8984375,"distances_sum":3341.036509385013}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9730139652014657,"seconds":6.1355531215667725e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8984375,"distances_sum":3341.036509385013}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.852169184981686,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3125,"distances_sum":2150.847698436566}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.891065716743469e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.921875,"distances_sum":1002.2278901375904}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5068359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5068359375,"f1":null,"seconds":4.090368747711182e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.375,"distances_sum":1274.1485008908705}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.852169184981686,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3125,"distances_sum":2150.847698436566}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9381982600732608,"seconds":5.783513188362122e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2836.7278088108264}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9399267399267407,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.59375,"distances_sum":2898.521115819055}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9328010531135538,"seconds":5.809590220451355e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6796875,"distances_sum":2783.012343397885}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.8991674991674998,"seconds":6.590783596038818e-5,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.484375,"distances_sum":2477.6501557249862}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8046875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8046875,"f1":0.8831735972360982,"seconds":5.517154932022095e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.421875,"distances_sum":2381.490179554541}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9399267399267407,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.59375,"distances_sum":2898.521115819055}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9474218489843494,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6875,"distances_sum":2901.7863370955242}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.962894917582418,"seconds":5.939975380897522e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":3005.6320214926345}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9671531593406599,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.84375,"distances_sum":3046.304469277853}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9611664377289382,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.75,"distances_sum":3040.7785645685904}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646806318681322,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8359375,"distances_sum":3030.6833981226723}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9528502747252752,"seconds":5.813315510749817e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7578125,"distances_sum":2969.5534919491824}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131873,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":3115.9896162908153}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131873,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":3115.9896162908153}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.9790006868131873,"seconds":6.73346221446991e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9453125,"distances_sum":3115.9896162908153}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7824803668553676,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.7421875,"distances_sum":1829.1195124568685}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8475368381618389,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1171875,"distances_sum":2223.788499207814}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7509765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7509765625,"f1":0.8475368381618389,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.1171875,"distances_sum":2223.788499207814}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9375858516483522,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":2822.987655274785}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.890625,"state":{"ssize":6,"bsize":8},"perf":{"precision":1.0,"recall":0.890625,"f1":0.9375858516483522,"seconds":5.271285772323608e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.671875,"distances_sum":2822.987655274785}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9743360805860809,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":3114.6802984473}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9743360805860809,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":3114.6802984473}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":7,"bsize":12},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9743360805860809,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.890625,"distances_sum":3114.6802984473}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7914798742923751,"seconds":4.524365067481995e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":7.4140625,"distances_sum":1753.4109495574169}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":4,"bsize":2}, perf: {"precision":1.0,"recall":0.4248046875,"f1":0.5679034507159507,"seconds":4.1406601667404175e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":6.203125,"distances_sum":1045.8847013276895}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.77734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.77734375,"f1":0.8672941641691652,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0,"distances_sum":2198.2476571099664}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.77734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.77734375,"f1":0.8672941641691652,"seconds":5.42961061000824e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.0,"distances_sum":2198.2476571099664}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9436870421245426,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2896.6254634470724}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9401156135531139,"seconds":5.8319419622421265e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6796875,"distances_sum":2815.56229732767}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9205846237096246,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.6015625,"distances_sum":2664.1187312204106}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8946974900099907,"seconds":5.710870027542114e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.359375,"distances_sum":2406.4752190251343}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9013671875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9013671875,"f1":0.9436870421245426,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.71875,"distances_sum":2896.6254634470724}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.966912774725275,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":3028.201348140004}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9658882783882788,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.859375,"distances_sum":3015.793242355064}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9604223901098903,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":2980.965897079989}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.966912774725275,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":3028.201348140004}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.966912774725275,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.4454126358032227e-6,"evaluations":8.8671875,"distances_sum":3028.201348140004}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.291015625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.291015625,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.0625,"distances_sum":703.095299289911}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.291015625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.0625,"distances_sum":703.095299289911}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.291015625,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.291015625,"f1":null,"seconds":3.507360816001892e-6,"exhaustive_search_seconds":1.3280659914016724e-6,"evaluations":6.0625,"distances_sum":703.095299289911}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6856932997558003,"seconds":4.148110747337341e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.8984375,"distances_sum":1302.6011896088428}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4306640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4306640625,"f1":null,"seconds":3.973022103309631e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":6.296875,"distances_sum":1033.104712496122}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8575502622377631,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.2265625,"distances_sum":2103.6977199334465}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8575502622377631,"seconds":5.183741450309753e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.2265625,"distances_sum":2103.6977199334465}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948597756410257,"seconds":6.299465894699097e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.7265625,"distances_sum":2803.472751188339}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9530963827838834,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8046875,"distances_sum":2807.8916238059824}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.934518086080587,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.6640625,"distances_sum":2691.3364469487015}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8938910048285058,"seconds":5.623325705528259e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.375,"distances_sum":2356.665835425307}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9530963827838834,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8046875,"distances_sum":2807.8916238059824}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9759672619047621,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.921875,"distances_sum":2989.858168139217}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9757268772893777,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.921875,"distances_sum":3001.04575122021}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9603651556776563,"seconds":6.040558218955994e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.84375,"distances_sum":2888.1430257177058}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602163461538464,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8203125,"distances_sum":2867.0855921989796}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9668040293040296,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.8828125,"distances_sum":2910.070728814404}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9757268772893777,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.921875,"distances_sum":3001.04575122021}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9757268772893777,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.4211982488632202e-6,"evaluations":8.921875,"distances_sum":3001.04575122021}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6828140609390615,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7890625,"distances_sum":1317.8888999804644}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.541015625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.541015625,"f1":0.6828140609390615,"seconds":4.250556230545044e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":6.7890625,"distances_sum":1317.8888999804644}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9246394230769236,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4765625,"distances_sum":2611.8486097581754}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8701171875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8701171875,"f1":0.9246394230769236,"seconds":5.414709448814392e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4765625,"distances_sum":2611.8486097581754}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9567422161172165,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2846.995273909052}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9450663919413925,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.734375,"distances_sum":2769.8711852203373}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9277103105228109,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.4921875,"distances_sum":2616.2332042614894}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567422161172165,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2846.995273909052}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9567422161172165,"seconds":5.979090929031372e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.7734375,"distances_sum":2846.995273909052}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":3,"bsize":3}, perf: {"precision":null,"recall":0.572265625,"f1":null,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.75,"distances_sum":1408.3580880526497}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.572265625,"state":{"ssize":3,"bsize":3},"perf":{"precision":null,"recall":0.572265625,"f1":null,"seconds":4.332512617111206e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":6.75,"distances_sum":1408.3580880526497}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8115234375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8115234375,"f1":0.891185897435898,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.03125,"distances_sum":2351.937800724247}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8115234375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8115234375,"f1":0.891185897435898,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.03125,"distances_sum":2351.937800724247}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.948780906593407,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.6953125,"distances_sum":2830.0558211297352}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9669871794871798,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2992.035887592615}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9669871794871798,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2992.035887592615}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9669871794871798,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2992.035887592615}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4609375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4609375,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.265625,"distances_sum":1057.7319335605127}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.4609375,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.4609375,"f1":null,"seconds":3.952533006668091e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.265625,"distances_sum":1057.7319335605127}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7685546875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7685546875,"f1":0.8615434912309922,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9296875,"distances_sum":2026.6230861701576}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8130466755466764,"seconds":4.764646291732788e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.5078125,"distances_sum":1778.7501351875912}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7685546875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.7685546875,"f1":0.8615434912309922,"seconds":5.3122639656066895e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.9296875,"distances_sum":2026.6230861701576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9613896520146524,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2849.0194532972896}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607944139194143,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.828125,"distances_sum":2832.6584838955882}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9326171875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9613896520146524,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2849.0194532972896}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9326171875,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.9326171875,"f1":0.9613896520146524,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.8671875,"distances_sum":2849.0194532972896}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.689453125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.689453125,"f1":0.8040542790542798,"seconds":4.850327968597412e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":7.734375,"distances_sum":1826.4540353623702}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8567515817515825,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.0234375,"distances_sum":2121.5467206997296}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.763671875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.763671875,"f1":0.8567515817515825,"seconds":5.155801773071289e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.0234375,"distances_sum":2121.5467206997296}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9214431401931409,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.6875,"distances_sum":2562.6866331750944}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9520318223443227,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7265625,"distances_sum":2816.1607959893317}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9407680860805865,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.703125,"distances_sum":2724.4540748377553}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9520318223443227,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.7265625,"distances_sum":2816.1607959893317}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9694940476190479,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.875,"distances_sum":2917.5323871185165}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.970633012820513,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.8828125,"distances_sum":2919.5303581520366}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9699404761904765,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.921875,"distances_sum":2913.042774229769}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9777529761904765,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":3014.937862991921}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559752747252753,"seconds":5.977228283882141e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.796875,"distances_sum":2844.0325290230776}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9777529761904765,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":3014.937862991921}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.958984375,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.958984375,"f1":0.9777529761904765,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.3355165719985962e-6,"evaluations":8.890625,"distances_sum":3014.937862991921}}, n: 9
inertia(cfft.distances) = 18.041048340548343
inertia(cdnet.distances) = 26.73142447026658
inertia(crand.distances) = 22.47628318903318
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8733333333333334
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.94
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.94
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9422222222222222
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.9444444444444445
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9400000000000001
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9288888888888889
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.9266666666666666
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9355555555555556
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9400000000000001
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9266666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8733333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9066666666666667
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [3, 1, 2, 1, 3, 2, 2, 3, 3, 1, 2, 3, 2, 3, 3, 3, 1, 3, 2, 3, 3]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 8, 6]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(2, 8), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 9, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 8]]
** centroid: 11, normalized-entropy: 0.5032583347756457, [(2, 1), (3, 8)]
nc.class_map = [2, 3, 1, 3, 2, 3, 1, 2, 1, 2, 3, 2, 3, 1]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.92
*** starting iteration: 1; err: [Inf, 0.3578666696549124] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3578666696549124, 0.19604639568652973] ***
*** starting iteration: 2; err: [Inf, 0.3578666696549124, 0.19604639568652973] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404] ***
*** starting iteration: 3; err: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597] ***
*** starting iteration: 4; err: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597, 0.18191834636759116] ***
*** starting iteration: 5; err: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597, 0.18191834636759116] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597, 0.18191834636759116, 0.18052162257260315] ***
*** starting iteration: 6; err: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597, 0.18191834636759116, 0.18052162257260315] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597, 0.18191834636759116, 0.18052162257260315, 0.18034601812955983] ***
*** finished computation of 12 references, err: [Inf, 0.3578666696549124, 0.19604639568652973, 0.186666917384404, 0.18441327452951597, 0.18191834636759116, 0.18052162257260315, 0.18034601812955983] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 12]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(2, 22), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 16]]
** centroid: 12, normalized-entropy: 0.32275695889739825, [(2, 1), (3, 16)]
finished with 14 centroids; started with 12
acc = 0.9266666666666666
Test Summary:   | Pass  Total
NearestCentroid |   10     10
iteration 1 finished
*** starting iteration: 1; err: [Inf, 1.4725999851753273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4725999851753273, 1.0638799397032188] ***
*** finished computation of 3 references, err: [Inf, 1.4725999851753273, 1.0638799397032188] ***
*** center 1: selecting labels [1] (freq >= 2) [from [21, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 37, 30]]
** centroid: 2, normalized-entropy: 0.9921116920021501, [(2, 37), (3, 30)]
*** center 3: selecting labels [1] (freq >= 2) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.6415000856522655] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.6415000856522655, 2.458795628682775] ***
*** finished computation of 3 references, err: [Inf, 6.6415000856522655, 2.458795628682775] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 24, 0]]
** centroid: 2, normalized-entropy: 0.9852281360342514, [(1, 32), (2, 24)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 29]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 10), (3, 29)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.082600081142159] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.082600081142159, 1.9801566281772802] ***
*** finished computation of 3 references, err: [Inf, 6.082600081142159, 1.9801566281772802] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 18, 1]]
** centroid: 1, normalized-entropy: 0.9182958340544894, [(1, 36), (2, 18)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 10, 28]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 10), (3, 28)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0318999983355617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0318999983355617, 0.5569384691361948] ***
*** starting iteration: 2; err: [Inf, 1.0318999983355617, 0.5569384691361948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0318999983355617, 0.5569384691361948, 0.5523020653739281] ***
*** starting iteration: 3; err: [Inf, 1.0318999983355617, 0.5569384691361948, 0.5523020653739281] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0318999983355617, 0.5569384691361948, 0.5523020653739281, 0.5523020653739281] ***
*** finished computation of 3 references, err: [Inf, 1.0318999983355617, 0.5569384691361948, 0.5523020653739281, 0.5523020653739281] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 38, 11]]
** centroid: 2, normalized-entropy: 0.7682814090975241, [(2, 38), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.6775999952183156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6775999952183156, 0.4988147318148558] ***
*** starting iteration: 2; err: [Inf, 1.6775999952183156, 0.4988147318148558] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6775999952183156, 0.4988147318148558, 0.498114585127109] ***
*** finished computation of 3 references, err: [Inf, 1.6775999952183156, 0.4988147318148558, 0.498114585127109] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 12, 34]]
** centroid: 3, normalized-entropy: 0.828055725379504, [(2, 12), (3, 34)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.806599977803977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.806599977803977, 0.7282080737801181] ***
*** starting iteration: 2; err: [Inf, 3.806599977803977, 0.7282080737801181] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.806599977803977, 0.7282080737801181, 0.4935146628170394] ***
*** starting iteration: 3; err: [Inf, 3.806599977803977, 0.7282080737801181, 0.4935146628170394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.806599977803977, 0.7282080737801181, 0.4935146628170394, 0.4859452316707096] ***
*** finished computation of 3 references, err: [Inf, 3.806599977803977, 0.7282080737801181, 0.4935146628170394, 0.4859452316707096] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 10]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(2, 26), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.49784591249894833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.49784591249894833, 0.2537268079207749] ***
*** finished computation of 7 references, err: [Inf, 0.49784591249894833, 0.2537268079207749] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 2, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.7415203186773702] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7415203186773702, 0.2522094599548675] ***
*** finished computation of 7 references, err: [Inf, 0.7415203186773702, 0.2522094599548675] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 12]]
** centroid: 3, normalized-entropy: 0.9494520153879484, [(2, 7), (3, 12)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 22, 2]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(2, 22), (3, 2)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 4, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [29, 1, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.39431481225080917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39431481225080917, 0.24438569844203445] ***
*** finished computation of 7 references, err: [Inf, 0.39431481225080917, 0.24438569844203445] ***
*** center 1: selecting labels [1] (freq >= 2) [from [19, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 25, 10]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 25), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 18]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(2, 2), (3, 18)]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 5: selecting labels [1] (freq >= 2) [from [7, 1, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.7000000273981772] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7000000273981772, 1.0883376694926188] ***
*** starting iteration: 2; err: [Inf, 1.7000000273981772, 1.0883376694926188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7000000273981772, 1.0883376694926188, 1.0691876948827495] ***
*** starting iteration: 3; err: [Inf, 1.7000000273981772, 1.0883376694926188, 1.0691876948827495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.7000000273981772, 1.0883376694926188, 1.0691876948827495, 1.0552082124533075] ***
*** finished computation of 3 references, err: [Inf, 1.7000000273981772, 1.0883376694926188, 1.0691876948827495, 1.0552082124533075] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 30]]
** centroid: 1, normalized-entropy: 0.9921116920021501, [(2, 37), (3, 30)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 1, 0]]
** centroid: 2, normalized-entropy: 0.2667649878030262, [(1, 21), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.078500005929481] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.078500005929481, 0.8612972321286289] ***
*** starting iteration: 2; err: [Inf, 1.078500005929481, 0.8612972321286289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.078500005929481, 0.8612972321286289, 0.795952687016125] ***
*** starting iteration: 3; err: [Inf, 1.078500005929481, 0.8612972321286289, 0.795952687016125] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.078500005929481, 0.8612972321286289, 0.795952687016125, 0.5974222032223997] ***
*** finished computation of 3 references, err: [Inf, 1.078500005929481, 0.8612972321286289, 0.795952687016125, 0.5974222032223997] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 34]]
** centroid: 1, normalized-entropy: 0.9509560484549724, [(2, 20), (3, 34)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 8.78610012057008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.78610012057008, 2.5119995404683277] ***
*** starting iteration: 2; err: [Inf, 8.78610012057008, 2.5119995404683277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.78610012057008, 2.5119995404683277, 1.3701741475186275] ***
*** starting iteration: 3; err: [Inf, 8.78610012057008, 2.5119995404683277, 1.3701741475186275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 8.78610012057008, 2.5119995404683277, 1.3701741475186275, 0.8026129888915422] ***
*** finished computation of 3 references, err: [Inf, 8.78610012057008, 2.5119995404683277, 1.3701741475186275, 0.8026129888915422] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 26, 24]]
** centroid: 1, normalized-entropy: 0.998845535995202, [(2, 26), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [36, 2, 0]]
** centroid: 2, normalized-entropy: 0.2974722489192896, [(1, 36), (2, 2)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45542650854284034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45542650854284034, 0.21266731427020308] ***
*** starting iteration: 2; err: [Inf, 0.45542650854284034, 0.21266731427020308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654] ***
*** starting iteration: 3; err: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654, 0.18158660166289878] ***
*** starting iteration: 4; err: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654, 0.18158660166289878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654, 0.18158660166289878, 0.17940873329067134] ***
*** starting iteration: 5; err: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654, 0.18158660166289878, 0.17940873329067134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654, 0.18158660166289878, 0.17940873329067134, 0.17940873329067134] ***
*** finished computation of 7 references, err: [Inf, 0.45542650854284034, 0.21266731427020308, 0.19272082720730654, 0.18158660166289878, 0.17940873329067134, 0.17940873329067134] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 1, 18]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 16, 1]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3388072253349738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3388072253349738, 0.20867628535754562] ***
*** starting iteration: 2; err: [Inf, 0.3388072253349738, 0.20867628535754562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3388072253349738, 0.20867628535754562, 0.17299920302503724] ***
*** starting iteration: 3; err: [Inf, 0.3388072253349738, 0.20867628535754562, 0.17299920302503724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3388072253349738, 0.20867628535754562, 0.17299920302503724, 0.17009027710443025] ***
*** starting iteration: 4; err: [Inf, 0.3388072253349738, 0.20867628535754562, 0.17299920302503724, 0.17009027710443025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3388072253349738, 0.20867628535754562, 0.17299920302503724, 0.17009027710443025, 0.16925429055400243] ***
*** finished computation of 7 references, err: [Inf, 0.3388072253349738, 0.20867628535754562, 0.17299920302503724, 0.17009027710443025, 0.16925429055400243] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 20]]
** centroid: 2, normalized-entropy: 0.43949698692151346, [(2, 2), (3, 20)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 3, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 4: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3890280623463764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3890280623463764, 0.22109357976158606] ***
*** starting iteration: 2; err: [Inf, 0.3890280623463764, 0.22109357976158606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3890280623463764, 0.22109357976158606, 0.20041509535371213] ***
*** starting iteration: 3; err: [Inf, 0.3890280623463764, 0.22109357976158606, 0.20041509535371213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3890280623463764, 0.22109357976158606, 0.20041509535371213, 0.19645103117761006] ***
*** starting iteration: 4; err: [Inf, 0.3890280623463764, 0.22109357976158606, 0.20041509535371213, 0.19645103117761006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3890280623463764, 0.22109357976158606, 0.20041509535371213, 0.19645103117761006, 0.19645103117761006] ***
*** finished computation of 7 references, err: [Inf, 0.3890280623463764, 0.22109357976158606, 0.20041509535371213, 0.19645103117761006, 0.19645103117761006] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 10]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 2), (3, 10)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 5: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 1]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.5504000119031212] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5504000119031212, 1.0883376694926188] ***
*** starting iteration: 2; err: [Inf, 1.5504000119031212, 1.0883376694926188] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5504000119031212, 1.0883376694926188, 1.0691876948827495] ***
*** starting iteration: 3; err: [Inf, 1.5504000119031212, 1.0883376694926188, 1.0691876948827495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5504000119031212, 1.0883376694926188, 1.0691876948827495, 1.0552082124533075] ***
*** starting iteration: 4; err: [Inf, 1.5504000119031212, 1.0883376694926188, 1.0691876948827495, 1.0552082124533075] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5504000119031212, 1.0883376694926188, 1.0691876948827495, 1.0552082124533075, 1.0545399524632193] ***
*** finished computation of 3 references, err: [Inf, 1.5504000119031212, 1.0883376694926188, 1.0691876948827495, 1.0552082124533075, 1.0545399524632193] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [19, 1, 0]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(1, 19), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 37, 30]]
** centroid: 2, normalized-entropy: 0.9921116920021501, [(2, 37), (3, 30)]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.1463000271908728] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833] ***
*** starting iteration: 2; err: [Inf, 2.1463000271908728, 0.8520601437110833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662] ***
*** starting iteration: 3; err: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712] ***
*** starting iteration: 4; err: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134] ***
*** starting iteration: 5; err: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134, 0.5142556162983121] ***
*** starting iteration: 6; err: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134, 0.5142556162983121] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134, 0.5142556162983121, 0.5121294736586589] ***
*** starting iteration: 7; err: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134, 0.5142556162983121, 0.5121294736586589] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134, 0.5142556162983121, 0.5121294736586589, 0.5113140510576796] ***
*** finished computation of 3 references, err: [Inf, 2.1463000271908728, 0.8520601437110833, 0.6225889765708662, 0.5531774977376712, 0.5242529034762134, 0.5142556162983121, 0.5121294736586589, 0.5113140510576796] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 30, 6]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 30), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 28]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(2, 4), (3, 28)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 6.201299947740771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795] ***
*** starting iteration: 2; err: [Inf, 6.201299947740771, 1.8757144773048795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898] ***
*** starting iteration: 3; err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137] ***
*** starting iteration: 4; err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924] ***
*** starting iteration: 5; err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614] ***
*** starting iteration: 6; err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614, 0.49122232435477514] ***
*** starting iteration: 7; err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614, 0.49122232435477514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614, 0.49122232435477514, 0.4859452316707096] ***
*** starting iteration: 8; err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614, 0.49122232435477514, 0.4859452316707096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614, 0.49122232435477514, 0.4859452316707096, 0.4859452316707096] ***
*** finished computation of 3 references, err: [Inf, 6.201299947740771, 1.8757144773048795, 1.0860965455824898, 0.6800224872401137, 0.5783370618049924, 0.5124611095429614, 0.49122232435477514, 0.4859452316707096, 0.4859452316707096] ***
*** center 1: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 26, 10]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(2, 26), (3, 10)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 5.037199966886958] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.037199966886958, 1.3986183577064615] ***
*** starting iteration: 2; err: [Inf, 5.037199966886958, 1.3986183577064615] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022] ***
*** starting iteration: 3; err: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499] ***
*** starting iteration: 4; err: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499, 0.5552725041678614] ***
*** starting iteration: 5; err: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499, 0.5552725041678614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499, 0.5552725041678614, 0.5531564830725493] ***
*** starting iteration: 6; err: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499, 0.5552725041678614, 0.5531564830725493] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499, 0.5552725041678614, 0.5531564830725493, 0.5523020653739281] ***
*** finished computation of 3 references, err: [Inf, 5.037199966886958, 1.3986183577064615, 0.6698429643983022, 0.5778604115023499, 0.5552725041678614, 0.5531564830725493, 0.5523020653739281] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 11]]
** centroid: 1, normalized-entropy: 0.7682814090975241, [(2, 38), (3, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3534000121766083] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3534000121766083, 0.5472100286053744] ***
*** starting iteration: 2; err: [Inf, 1.3534000121766083, 0.5472100286053744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3534000121766083, 0.5472100286053744, 0.5088351948708426] ***
*** starting iteration: 3; err: [Inf, 1.3534000121766083, 0.5472100286053744, 0.5088351948708426] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3534000121766083, 0.5472100286053744, 0.5088351948708426, 0.4996524804399726] ***
*** starting iteration: 4; err: [Inf, 1.3534000121766083, 0.5472100286053744, 0.5088351948708426, 0.4996524804399726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3534000121766083, 0.5472100286053744, 0.5088351948708426, 0.4996524804399726, 0.4988147318148558] ***
*** finished computation of 3 references, err: [Inf, 1.3534000121766083, 0.5472100286053744, 0.5088351948708426, 0.4996524804399726, 0.4988147318148558] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 13, 34]]
** centroid: 1, normalized-entropy: 0.8507707040532602, [(2, 13), (3, 34)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 21, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8133000066884952] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771] ***
*** starting iteration: 2; err: [Inf, 0.8133000066884952, 0.5547947669485771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746] ***
*** starting iteration: 3; err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677] ***
*** starting iteration: 4; err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937] ***
*** starting iteration: 5; err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006] ***
*** starting iteration: 6; err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006, 0.4882004490193815] ***
*** starting iteration: 7; err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006, 0.4882004490193815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006, 0.4882004490193815, 0.4859452316707096] ***
*** starting iteration: 8; err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006, 0.4882004490193815, 0.4859452316707096] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006, 0.4882004490193815, 0.4859452316707096, 0.4859452316707096] ***
*** finished computation of 3 references, err: [Inf, 0.8133000066884952, 0.5547947669485771, 0.5282396870497746, 0.5162133745608677, 0.5067870454253937, 0.49672255113871006, 0.4882004490193815, 0.4859452316707096, 0.4859452316707096] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 1, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 26, 10]]
** centroid: 2, normalized-entropy: 0.8524051786494784, [(2, 26), (3, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 2.0817231928035063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0817231928035063, 0.49629766942018394] ***
*** starting iteration: 2; err: [Inf, 2.0817231928035063, 0.49629766942018394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0817231928035063, 0.49629766942018394, 0.39851499199678614] ***
*** starting iteration: 3; err: [Inf, 2.0817231928035063, 0.49629766942018394, 0.39851499199678614] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0817231928035063, 0.49629766942018394, 0.39851499199678614, 0.3961306273628242] ***
*** starting iteration: 4; err: [Inf, 2.0817231928035063, 0.49629766942018394, 0.39851499199678614, 0.3961306273628242] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 2.0817231928035063, 0.49629766942018394, 0.39851499199678614, 0.3961306273628242, 0.39535487717960877] ***
*** finished computation of 3 references, err: [Inf, 2.0817231928035063, 0.49629766942018394, 0.39851499199678614, 0.3961306273628242, 0.39535487717960877] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 10]]
** centroid: 3, normalized-entropy: 0.7382848661434506, [(2, 38), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9480781480295117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9480781480295117, 0.6051377191175257] ***
*** starting iteration: 2; err: [Inf, 0.9480781480295117, 0.6051377191175257] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9480781480295117, 0.6051377191175257, 0.6013429480789282] ***
*** starting iteration: 3; err: [Inf, 0.9480781480295117, 0.6051377191175257, 0.6013429480789282] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9480781480295117, 0.6051377191175257, 0.6013429480789282, 0.600658350539166] ***
*** finished computation of 3 references, err: [Inf, 0.9480781480295117, 0.6051377191175257, 0.6013429480789282, 0.600658350539166] ***
*** center 1: selecting labels [1] (freq >= 2) [from [15, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 32, 34]]
** centroid: 2, normalized-entropy: 0.9993375041688846, [(2, 32), (3, 34)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [17, 2, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 17), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.3132787873157938] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3132787873157938, 0.6178651247680678] ***
*** starting iteration: 2; err: [Inf, 1.3132787873157938, 0.6178651247680678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3132787873157938, 0.6178651247680678, 0.6122674095510632] ***
*** starting iteration: 3; err: [Inf, 1.3132787873157938, 0.6178651247680678, 0.6122674095510632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3132787873157938, 0.6178651247680678, 0.6122674095510632, 0.6094713807243552] ***
*** starting iteration: 4; err: [Inf, 1.3132787873157938, 0.6178651247680678, 0.6122674095510632, 0.6094713807243552] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.3132787873157938, 0.6178651247680678, 0.6122674095510632, 0.6094713807243552, 0.6086599334416009] ***
*** finished computation of 3 references, err: [Inf, 1.3132787873157938, 0.6178651247680678, 0.6122674095510632, 0.6094713807243552, 0.6086599334416009] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 36]]
** centroid: 1, normalized-entropy: 0.9811522341999134, [(2, 26), (3, 36)]
*** center 2: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [24, 2, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 24), (2, 2)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0111984091113722] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0111984091113722, 0.4174314415754361] ***
*** finished computation of 3 references, err: [Inf, 1.0111984091113722, 0.4174314415754361] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 18]]
** centroid: 1, normalized-entropy: 0.9059282160429994, [(2, 38), (3, 18)]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 3: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 7.653949401649579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 7.653949401649579, 0.7855112229585484] ***
*** finished computation of 3 references, err: [Inf, 7.653949401649579, 0.7855112229585484] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 31, 34]]
** centroid: 1, normalized-entropy: 0.9984628557283827, [(2, 31), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 3, 0]]
** centroid: 3, normalized-entropy: 0.7793498372920851, [(1, 10), (2, 3)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.6734063681405833] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6734063681405833, 0.3462966292474882] ***
*** finished computation of 3 references, err: [Inf, 0.6734063681405833, 0.3462966292474882] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 2, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 26, 10]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(2, 26), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.5314999803745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.5314999803745, 1.2772269929715199] ***
*** finished computation of 3 references, err: [Inf, 4.5314999803745, 1.2772269929715199] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 3, 26]]
** centroid: 1, normalized-entropy: 0.47983202361612853, [(2, 3), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [32, 2, 0]]
** centroid: 2, normalized-entropy: 0.32275695889739825, [(1, 32), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 33, 4]]
** centroid: 3, normalized-entropy: 0.4941829348497886, [(2, 33), (3, 4)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2396999967579305] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2396999967579305, 0.8696347462875488] ***
*** finished computation of 3 references, err: [Inf, 1.2396999967579305, 0.8696347462875488] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 30, 34]]
** centroid: 1, normalized-entropy: 0.9971803988942641, [(2, 30), (3, 34)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [12, 4, 0]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(1, 12), (2, 4)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2422999936650019] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2422999936650019, 0.5366559661389156] ***
*** finished computation of 3 references, err: [Inf, 1.2422999936650019, 0.5366559661389156] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 27, 11]]
** centroid: 2, normalized-entropy: 0.8680403986166402, [(2, 27), (3, 11)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 1, 0]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.2327034447103653] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2327034447103653, 0.3994782564989295] ***
*** starting iteration: 2; err: [Inf, 1.2327034447103653, 0.3994782564989295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2327034447103653, 0.3994782564989295, 0.3976632662242256] ***
*** starting iteration: 3; err: [Inf, 1.2327034447103653, 0.3994782564989295, 0.3976632662242256] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2327034447103653, 0.3994782564989295, 0.3976632662242256, 0.3956891564894323] ***
*** starting iteration: 4; err: [Inf, 1.2327034447103653, 0.3994782564989295, 0.3976632662242256, 0.3956891564894323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.2327034447103653, 0.3994782564989295, 0.3976632662242256, 0.3956891564894323, 0.39510427827820893] ***
*** finished computation of 3 references, err: [Inf, 1.2327034447103653, 0.3994782564989295, 0.3976632662242256, 0.3956891564894323, 0.39510427827820893] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 19]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 38, 11]]
** centroid: 3, normalized-entropy: 0.7682814090975241, [(2, 38), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.94117103014766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029] ***
*** starting iteration: 2; err: [Inf, 0.94117103014766, 0.4423981817003029] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022] ***
*** starting iteration: 3; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556] ***
*** starting iteration: 4; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045] ***
*** starting iteration: 5; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599] ***
*** starting iteration: 6; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524] ***
*** starting iteration: 7; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942] ***
*** starting iteration: 8; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942, 0.34526778541805514] ***
*** starting iteration: 9; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942, 0.34526778541805514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942, 0.34526778541805514, 0.3422928091845595] ***
*** starting iteration: 10; err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942, 0.34526778541805514, 0.3422928091845595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942, 0.34526778541805514, 0.3422928091845595, 0.33988529325813815] ***
*** finished computation of 3 references, err: [Inf, 0.94117103014766, 0.4423981817003029, 0.3940871847476022, 0.365761208706556, 0.35479812439565045, 0.3502353161812599, 0.34870638659279524, 0.3465518427536942, 0.34526778541805514, 0.3422928091845595, 0.33988529325813815] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 27, 3]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 27), (3, 3)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 7, 31]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 7), (3, 31)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7446240769299578] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7446240769299578, 0.4382499451014399] ***
*** starting iteration: 2; err: [Inf, 0.7446240769299578, 0.4382499451014399] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007] ***
*** starting iteration: 3; err: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274] ***
*** starting iteration: 4; err: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274, 0.3454771053713771] ***
*** starting iteration: 5; err: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274, 0.3454771053713771] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274, 0.3454771053713771, 0.34120829327263996] ***
*** starting iteration: 6; err: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274, 0.3454771053713771, 0.34120829327263996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274, 0.3454771053713771, 0.34120829327263996, 0.34120829327263996] ***
*** finished computation of 3 references, err: [Inf, 0.7446240769299578, 0.4382499451014399, 0.38359372564255007, 0.352224077162274, 0.3454771053713771, 0.34120829327263996, 0.34120829327263996] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 26, 10]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(2, 26), (3, 10)]
*** center 2: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 26]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(2, 2), (3, 26)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9586000043688648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9586000043688648, 0.5989035652608454] ***
*** finished computation of 3 references, err: [Inf, 0.9586000043688648, 0.5989035652608454] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 38, 17]]
** centroid: 1, normalized-entropy: 0.8921212805771683, [(2, 38), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 13]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0657999997809022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0657999997809022, 0.5514128564702045] ***
*** finished computation of 3 references, err: [Inf, 1.0657999997809022, 0.5514128564702045] ***
*** center 1: selecting labels [1] (freq >= 2) [from [32, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 34, 9]]
** centroid: 3, normalized-entropy: 0.7401470427139037, [(2, 34), (3, 9)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.5068999905023306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.5068999905023306, 0.5064116784966675] ***
*** finished computation of 3 references, err: [Inf, 1.5068999905023306, 0.5064116784966675] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 28, 10]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 28), (3, 10)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39656514867231196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39656514867231196, 0.19710789127010078] ***
*** starting iteration: 2; err: [Inf, 0.39656514867231196, 0.19710789127010078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39656514867231196, 0.19710789127010078, 0.18738747427736924] ***
*** starting iteration: 3; err: [Inf, 0.39656514867231196, 0.19710789127010078, 0.18738747427736924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39656514867231196, 0.19710789127010078, 0.18738747427736924, 0.18297309372088844] ***
*** starting iteration: 4; err: [Inf, 0.39656514867231196, 0.19710789127010078, 0.18738747427736924, 0.18297309372088844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.39656514867231196, 0.19710789127010078, 0.18738747427736924, 0.18297309372088844, 0.18271505244521347] ***
*** finished computation of 7 references, err: [Inf, 0.39656514867231196, 0.19710789127010078, 0.18738747427736924, 0.18297309372088844, 0.18271505244521347] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 2: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 23, 1]]
** centroid: 3, normalized-entropy: 0.24988229283318547, [(2, 23), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 2, 19]]
** centroid: 4, normalized-entropy: 0.45371633918694493, [(2, 2), (3, 19)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37493613273449056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37493613273449056, 0.17539746838926282] ***
*** starting iteration: 2; err: [Inf, 0.37493613273449056, 0.17539746838926282] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411] ***
*** starting iteration: 3; err: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203] ***
*** starting iteration: 4; err: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203, 0.15744457691122432] ***
*** starting iteration: 5; err: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203, 0.15744457691122432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203, 0.15744457691122432, 0.15551054246788876] ***
*** starting iteration: 6; err: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203, 0.15744457691122432, 0.15551054246788876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203, 0.15744457691122432, 0.15551054246788876, 0.15522677226701564] ***
*** finished computation of 7 references, err: [Inf, 0.37493613273449056, 0.17539746838926282, 0.1680777386582411, 0.16196246476351203, 0.15744457691122432, 0.15551054246788876, 0.15522677226701564] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 10, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 11]]
** centroid: 4, normalized-entropy: 0.9986359641585719, [(2, 12), (3, 11)]
*** center 5: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 1]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(2, 12), (3, 1)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4812177711732471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4812177711732471, 0.17005211731938] ***
*** starting iteration: 2; err: [Inf, 0.4812177711732471, 0.17005211731938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4812177711732471, 0.17005211731938, 0.1575258141842726] ***
*** starting iteration: 3; err: [Inf, 0.4812177711732471, 0.17005211731938, 0.1575258141842726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4812177711732471, 0.17005211731938, 0.1575258141842726, 0.1555550940821331] ***
*** starting iteration: 4; err: [Inf, 0.4812177711732471, 0.17005211731938, 0.1575258141842726, 0.1555550940821331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4812177711732471, 0.17005211731938, 0.1575258141842726, 0.1555550940821331, 0.1548684094758175] ***
*** finished computation of 7 references, err: [Inf, 0.4812177711732471, 0.17005211731938, 0.1575258141842726, 0.1555550940821331, 0.1548684094758175] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 1]]
** centroid: 3, normalized-entropy: 0.3533593350214213, [(2, 14), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4951939666997528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4951939666997528, 0.21859795118059694] ***
*** finished computation of 7 references, err: [Inf, 0.4951939666997528, 0.21859795118059694] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 20, 7]]
** centroid: 1, normalized-entropy: 0.8256265261578954, [(2, 20), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 1, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 9, 2]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 9), (3, 2)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37965274697025747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.37965274697025747, 0.161715928619762] ***
*** finished computation of 7 references, err: [Inf, 0.37965274697025747, 0.161715928619762] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 18, 2]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 18), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 2, 13]]
** centroid: 7, normalized-entropy: 0.5665095065529052, [(2, 2), (3, 13)]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.41152966404466923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.41152966404466923, 0.20473855444715927] ***
*** finished computation of 7 references, err: [Inf, 0.41152966404466923, 0.20473855444715927] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 10]]
** centroid: 4, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5170999999298072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5170999999298072, 0.27464077213236265] ***
*** finished computation of 7 references, err: [Inf, 0.5170999999298072, 0.27464077213236265] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 22, 1]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 20]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [2, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.47830000922149596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.47830000922149596, 0.25203101382898463] ***
*** finished computation of 7 references, err: [Inf, 0.47830000922149596, 0.25203101382898463] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 15, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 3: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 19, 3]]
** centroid: 5, normalized-entropy: 0.5746356978376794, [(2, 19), (3, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5620000039929088] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5620000039929088, 0.258267614598041] ***
*** finished computation of 7 references, err: [Inf, 0.5620000039929088, 0.258267614598041] ***
*** center 1: selecting labels [1] (freq >= 2) [from [29, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 4, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
*** center 7: selecting labels [1] (freq >= 2) [from [7, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6625000013799464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6625000013799464, 0.2762216018063433] ***
*** finished computation of 7 references, err: [Inf, 0.6625000013799464, 0.2762216018063433] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 2: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 4, 6]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 17, 3]]
** centroid: 4, normalized-entropy: 0.6098403047164005, [(2, 17), (3, 3)]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 17, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.44220000216942723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.44220000216942723, 0.23849714963007979] ***
*** finished computation of 7 references, err: [Inf, 0.44220000216942723, 0.23849714963007979] ***
*** center 1: selecting labels [1] (freq >= 2) [from [18, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 1, 23]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 7, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 13, 3]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(2, 13), (3, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [14, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6856000030669849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6856000030669849, 0.24542835732553214] ***
*** finished computation of 7 references, err: [Inf, 0.6856000030669849, 0.24542835732553214] ***
*** center 1: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 4]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 12, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 10, 10]]
** centroid: 5, normalized-entropy: 1.0, [(2, 10), (3, 10)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.9733333333333333, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 17
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5838000049979933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506] ***
*** starting iteration: 2; err: [Inf, 0.5838000049979933, 0.31316115320004506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039] ***
*** starting iteration: 3; err: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222] ***
*** starting iteration: 4; err: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735] ***
*** starting iteration: 5; err: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735, 0.2578194378072466] ***
*** starting iteration: 6; err: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735, 0.2578194378072466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735, 0.2578194378072466, 0.256253786608804] ***
*** starting iteration: 7; err: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735, 0.2578194378072466, 0.256253786608804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735, 0.2578194378072466, 0.256253786608804, 0.2557151764970358] ***
*** finished computation of 7 references, err: [Inf, 0.5838000049979933, 0.31316115320004506, 0.2792090795226039, 0.2708459650253222, 0.2619936392892735, 0.2578194378072466, 0.256253786608804, 0.2557151764970358] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 20, 8]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 20), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 5, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4864000020021976] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4864000020021976, 0.23722417681312105] ***
*** starting iteration: 2; err: [Inf, 0.4864000020021976, 0.23722417681312105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499] ***
*** starting iteration: 3; err: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499, 0.21159397306887087] ***
*** starting iteration: 4; err: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499, 0.21159397306887087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499, 0.21159397306887087, 0.21055826971509506] ***
*** starting iteration: 5; err: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499, 0.21159397306887087, 0.21055826971509506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499, 0.21159397306887087, 0.21055826971509506, 0.21055826971509506] ***
*** finished computation of 7 references, err: [Inf, 0.4864000020021976, 0.23722417681312105, 0.21610310458520499, 0.21159397306887087, 0.21055826971509506, 0.21055826971509506] ***
*** center 1: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 15, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 5, 10]]
** centroid: 7, normalized-entropy: 0.9182958340544894, [(2, 5), (3, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6530000020173687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6530000020173687, 0.24542835732553214] ***
*** starting iteration: 2; err: [Inf, 0.6530000020173687, 0.24542835732553214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6530000020173687, 0.24542835732553214, 0.2269097959679631] ***
*** starting iteration: 3; err: [Inf, 0.6530000020173687, 0.24542835732553214, 0.2269097959679631] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6530000020173687, 0.24542835732553214, 0.2269097959679631, 0.2264669229086432] ***
*** finished computation of 7 references, err: [Inf, 0.6530000020173687, 0.24542835732553214, 0.2269097959679631, 0.2264669229086432] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 10, 1]]
** centroid: 3, normalized-entropy: 0.43949698692151346, [(2, 10), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 10]]
** centroid: 4, normalized-entropy: 0.9940302114769566, [(2, 12), (3, 10)]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.4554175452280711] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4554175452280711, 0.21865222680468455] ***
*** finished computation of 7 references, err: [Inf, 0.4554175452280711, 0.21865222680468455] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 19, 6]]
** centroid: 1, normalized-entropy: 0.7950402793845225, [(2, 19), (3, 6)]
*** center 2: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 7, 3]]
** centroid: 7, normalized-entropy: 0.8812908992306927, [(2, 7), (3, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30312829923481643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30312829923481643, 0.18863998105687643] ***
*** finished computation of 7 references, err: [Inf, 0.30312829923481643, 0.18863998105687643] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 8, 25]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(2, 8), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 8, 0]]
*** center 4: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 18, 1]]
*** center 6: selecting labels [1] (freq >= 2) [from [8, 0, 0]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40444443672428604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40444443672428604, 0.20473855444715927] ***
*** finished computation of 7 references, err: [Inf, 0.40444443672428604, 0.20473855444715927] ***
*** center 1: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 11, 10]]
** centroid: 4, normalized-entropy: 0.998363672593813, [(2, 11), (3, 10)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 3, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 5]]
finished with 8 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 5 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 18
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 18)
[0.9733333333333333, 0.96, 0.96, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.9266666666666666, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9133333333333332, 0.9066666666666666, 0.9066666666666666, 0.8933333333333332, 0.8933333333333332, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2) => 0.9733333333333333
finished with 19
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.7167000005908851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7167000005908851, 0.40793007588726704] ***
*** finished computation of 7 references, err: [Inf, 0.7167000005908851, 0.40793007588726704] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 3]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(2, 2), (3, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 36, 6]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 36), (3, 6)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 9]]
*** center 4: selecting labels [1] (freq >= 2) [from [25, 0, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 2) [from [6, 0, 0]]
*** center 7: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5701000007951277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5701000007951277, 0.3334177220391891] ***
*** finished computation of 7 references, err: [Inf, 0.5701000007951277, 0.3334177220391891] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 20, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 5, 11]]
** centroid: 2, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 5, 15]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 5), (3, 15)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 6: selecting labels [1] (freq >= 2) [from [23, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4526999997128624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4526999997128624, 0.27550339465479373] ***
*** finished computation of 7 references, err: [Inf, 0.4526999997128624, 0.27550339465479373] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 1, 1]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 14, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 2, 12]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 2), (3, 12)]
*** center 5: selecting labels [1] (freq >= 2) [from [12, 0, 0]]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 23]]
*** center 7: selecting labels [1] (freq >= 2) [from [24, 0, 0]]
finished with 7 centroids; started with 7
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2), 0.9733333333333333)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.677777777777778, 2.6555555555555554, 4.107407407407408, 1.2629629629629628], [7.6, 3.1875, 6.4750000000000005, 2.1500000000000004], [4.8062499999999995, 3.2250000000000005, 1.4250000000000003, 0.2], [6.304545454545454, 2.854545454545455, 5.286363636363635, 1.9499999999999993], [6.518181818181817, 2.9909090909090916, 4.618181818181818, 1.4454545454545455], [4.633333333333334, 2.733333333333333, 1.4333333333333336, 0.2333333333333333], [5.323076923076925, 3.7692307692307687, 1.5, 0.27692307692307694]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.493750000000001, 2.5687499999999996, 3.8125, 1.16875], [7.75, 3.4, 6.5, 2.05], [4.8999999999999995, 3.3321428571428577, 1.4535714285714285, 0.23214285714285718], [6.2956521739130435, 3.0217391304347827, 5.369565217391303, 2.0652173913043477], [6.347368421052631, 2.9684210526315793, 4.631578947368422, 1.5], [6.166666666666667, 2.8333333333333335, 4.833333333333333, 1.8], [5.550000000000001, 4.0, 1.475, 0.3], [6.999999999999999, 2.9500000000000006, 5.825000000000001, 1.85]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 3, 1, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[5.112499999999999, 3.515625, 1.5031249999999998, 0.26250000000000007], [7.7, 3.05, 6.6000000000000005, 2.2], [5.6, 2.6600000000000006, 4.3533333333333335, 1.4133333333333333], [6.37, 3.01, 4.67, 1.4600000000000002], [6.1, 2.69, 5.0200000000000005, 1.7899999999999998], [5.4, 2.4799999999999995, 3.5799999999999996, 1.1], [6.646666666666666, 3.193333333333334, 5.726666666666666, 2.24], [4.4, 2.8000000000000003, 1.275, 0.2]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 2, 3, 2, 3, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 1, 1.0, :fft, 0.3, 2))]
Test Summary: | Pass  Total
AKNC          |    1      1
[85, 14, 4, 18, 1, 1, 37, 30, 29, 39, 3, 1, 11, 13, 29, 37, 22, 42, 1, 31, 34, 20, 39, 35, 21, 33, 38, 15, 36, 32, 18, 23, 21, 14, 32, 19, 45, 3, 19, 38, 33, 27, 18, 24, 36, 30, 9, 35, 16, 15, 19, 33, 32, 39, 26, 31, 28, 27, 32, 28, 33, 23, 44, 65, 17, 39, 21, 25, 11, 13, 30, 21, 33, 55, 13, 27, 15, 37, 1, 27, 54, 33, 31, 42, 27, 27, 38, 41, 18, 63, 45, 2, 26, 38, 15, 1, 25, 39, 20, 35, 40, 27, 7, 28, 32, 43, 28, 34, 29, 24, 39, 26, 28, 47, 17, 28, 21, 50, 18, 32, 35, 47, 45, 28, 24, 35, 19, 49, 24, 39, 15, 60, 33, 31, 52, 47, 9, 43, 34, 34, 43, 60, 33, 34, 35, 38, 33, 23, 19, 37, 45, 49, 40, 23, 36, 24, 26, 56, 48, 57, 40, 38, 34, 25, 47, 33, 37, 22, 1, 32, 28, 30, 38, 33, 31, 80, 37, 32, 26, 30, 32, 44, 59, 66, 48, 39, 34, 47, 36, 47, 44, 40, 19, 39, 34, 44, 44, 29, 42, 47, 15, 37, 37, 42, 38, 48, 32, 41, 41, 26, 41, 27, 30, 42, 53, 26, 27, 26, 32, 36, 26, 32, 19, 52, 43, 32, 30, 52, 36, 52, 32, 42, 46, 31, 30, 48, 26, 32, 47, 43, 37, 36, 36, 41, 36, 1, 53, 42, 33, 40, 22, 36, 33, 26, 67, 39, 42, 40, 50, 61, 18, 43, 49, 43, 21, 55, 41, 38, 37, 24, 17, 51, 37, 44, 36, 37, 57, 43, 61, 23, 28, 33, 42, 40, 26, 38, 44, 53, 39, 25, 49, 36, 29, 33, 49, 33, 31, 49, 46, 24]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6010000000000001, speedup = 0.33536221348401235, eval_ratio = 0.041794)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.39930555555555547,"recall":0.39930555555555547,"f1":null,"seconds":7.165409624576569e-5,"exhaustive_search_seconds":0.0003678351640701294,"evaluations":338.8671875,"distances_sum":1727.1454018174782}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5598958333333333,"recall":0.5598958333333333,"f1":0.5598958333333333,"seconds":0.00010463595390319824,"exhaustive_search_seconds":0.0003678351640701294,"evaluations":378.640625,"distances_sum":1612.761098750402}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6701388888888882,"recall":0.6701388888888882,"f1":0.6701388888888882,"seconds":0.00013434700667858124,"exhaustive_search_seconds":0.0003678351640701294,"evaluations":415.1796875,"distances_sum":1567.0929718687075}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7265624999999992,"recall":0.7265624999999992,"f1":0.7265624999999992,"seconds":0.00017862766981124878,"exhaustive_search_seconds":0.0003678351640701294,"evaluations":454.9140625,"distances_sum":1551.0608194256977}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7916666666666657,"recall":0.7916666666666657,"f1":0.7916666666666657,"seconds":0.00020546093583106995,"exhaustive_search_seconds":0.0003678351640701294,"evaluations":492.5546875,"distances_sum":1533.3252373426717}
KCenters.DeloneInvIndex> reached performance {"precision":0.8359374999999991,"recall":0.8359374999999991,"f1":0.8359374999999991,"seconds":0.0002505425363779068,"exhaustive_search_seconds":0.0003678351640701294,"evaluations":531.0234375,"distances_sum":1525.036777450583}
Test Summary:                 | Pass  Total
Testing Delone Inverted Index | ┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8199999999999998, speedup = 1.4613346644140683, eval_ratio = 0.053625)
   1      1
   Testing KCenters tests passed 
