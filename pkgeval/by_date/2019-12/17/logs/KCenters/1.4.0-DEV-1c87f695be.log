Julia Version 1.4.0-DEV.596
Commit 1c87f695be (2019-12-12 22:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed DataValueInterfaces ───────── v1.0.0
 Installed KCenters ──────────────────── v0.1.7
 Installed Compat ────────────────────── v3.0.0
 Installed DataStructures ────────────── v0.17.6
 Installed MLDataUtils ───────────────── v0.5.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed MLDataPattern ─────────────── v0.5.0
 Installed SimilaritySearch ──────────── v0.3.17
 Installed Tables ────────────────────── v0.2.11
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed Missings ──────────────────── v0.4.3
 Installed JSON ──────────────────────── v0.21.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed CategoricalArrays ─────────── v0.7.4
 Installed MLLabelUtils ──────────────── v0.5.1
 Installed PooledArrays ──────────────── v0.5.2
 Installed Parsers ───────────────────── v0.3.10
 Installed LearnBase ─────────────────── v0.2.2
 Installed MappedArrays ──────────────── v0.2.2
 Installed Reexport ──────────────────── v0.2.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed DataFrames ────────────────── v0.20.0
 Installed OrderedCollections ────────── v1.1.0
 Installed TableTraits ───────────────── v1.0.0
  Updating `~/.julia/environments/v1.4/Project.toml`
  [5d8de97f] + KCenters v0.1.7
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.4
  [34da2185] + Compat v3.0.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.20.0
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.1.7
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.0
  [cc2ba9b6] + MLDataUtils v0.5.0
  [66a33bbf] + MLLabelUtils v0.5.1
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.1.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.17
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
   Testing KCenters
Status `/tmp/jl_yB0qsO/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.4
  [34da2185] Compat v3.0.0
  [9a962f9c] DataAPI v1.1.0
  [a93c6f00] DataFrames v0.20.0
  [864edb3b] DataStructures v0.17.6
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.1.7
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.0
  [cc2ba9b6] MLDataUtils v0.5.0
  [66a33bbf] MLLabelUtils v0.5.1
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.1.0
  [69de0a69] Parsers v0.3.10
  [2dfb63ee] PooledArrays v0.5.2
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.17
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v0.2.11
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [ade2ca70] Dates  [`@stdlib/Dates`]
  [8bb1440f] DelimitedFiles  [`@stdlib/DelimitedFiles`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [9fa8497b] Future  [`@stdlib/Future`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [76f85450] LibGit2  [`@stdlib/LibGit2`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [a63ad114] Mmap  [`@stdlib/Mmap`]
  [44cfe95a] Pkg  [`@stdlib/Pkg`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [3fa0cd96] REPL  [`@stdlib/REPL`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [1a1011a3] SharedArrays  [`@stdlib/SharedArrays`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [10745b16] Statistics  [`@stdlib/Statistics`]
  [8dfed614] Test  [`@stdlib/Test`]
  [cf7118a7] UUIDs  [`@stdlib/UUIDs`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
WARNING: Compat.Statistics is deprecated, use Statistics instead.
  likely near /home/pkgeval/.julia/packages/CategoricalArrays/u89s1/src/extras.jl:1
Test Summary: | Pass  Total
Scores        |    9      9
[ Info: 256.04
[ Info: 83.2500000000001
[ Info: 39.02000000000001
[ Info: 24.19
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 313.64000338064864
[ Info: 547.7999992523
[ Info: 146.21999839687118
[ Info: 76.6400011840614
Test Summary:        |
Clustering with dnet | No tests
inertia(cfft.distances) = 17.928185104121262
inertia(cdnet.distances) = 29.688252403838707
inertia(crand.distances) = 21.379932794063155
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.466796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.466796875,"f1":0.6103993228993231,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.359375,"distances_sum":1171.0244449212787}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.466796875,"state":{"ssize":1,"bsize":2},"perf":{"precision":1.0,"recall":0.466796875,"f1":0.6103993228993231,"seconds":4.500150680541992e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":6.359375,"distances_sum":1171.0244449212787}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.650390625,"f1":0.778878413253414,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":7.875,"distances_sum":1730.2424268149502}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9168269230769239,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.53125,"distances_sum":2420.9581218694652}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.9168269230769239,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.53125,"distances_sum":2420.9581218694652}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9440991300366308,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.828125,"distances_sum":2644.9499590847086}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9440991300366308,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.828125,"distances_sum":2644.9499590847086}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.904296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9440991300366308,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.7192214727401733e-6,"evaluations":8.828125,"distances_sum":2644.9499590847086}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3642578125,"f1":null,"seconds":4.256144165992737e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":6.7109375,"distances_sum":839.0701759454728}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3896484375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3896484375,"f1":null,"seconds":4.513189196586609e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":6.9453125,"distances_sum":903.490528864382}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5439453125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5439453125,"f1":0.6902063214563221,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":7.5390625,"distances_sum":1302.5731828786463}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5439453125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5439453125,"f1":0.6902063214563221,"seconds":4.7925859689712524e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":7.5390625,"distances_sum":1302.5731828786463}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8531910797535807,"seconds":6.420537829399109e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.484375,"distances_sum":1866.0958917659987}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8654168747918757,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.578125,"distances_sum":1935.3603739674882}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8654168747918757,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.578125,"distances_sum":1935.3603739674882}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9293498168498175,"seconds":6.44288957118988e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.8046875,"distances_sum":2325.6312109508217}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9439992299367306,"seconds":6.377696990966797e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.8359375,"distances_sum":2427.155585296236}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604796245421249,"seconds":7.119029760360718e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.875,"distances_sum":2552.0021050977753}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8946433774558782,"seconds":6.405636668205261e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.6328125,"distances_sum":2112.966682247958}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9314336704961715,"seconds":6.463378667831421e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.859375,"distances_sum":2349.297204842778}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.965184294871795,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.90625,"distances_sum":2581.9405332582865}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9373085248085257,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.8828125,"distances_sum":2379.8749004105675}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.965184294871795,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.90625,"distances_sum":2581.9405332582865}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.965184294871795,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":2.0228326320648193e-6,"evaluations":8.90625,"distances_sum":2581.9405332582865}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8131170912420921,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":7.828125,"distances_sum":1627.5708499600264}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.18359375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.18359375,"f1":null,"seconds":3.6973506212234497e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":6.125,"distances_sum":398.1873640085434}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8511431277056286,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.390625,"distances_sum":1812.931899738992}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.755859375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.755859375,"f1":0.8511431277056286,"seconds":5.95487654209137e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.390625,"distances_sum":1812.931899738992}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9393117299367302,"seconds":8.102506399154663e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.765625,"distances_sum":2315.170360250911}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8599905303030311,"seconds":6.3478946685791016e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.4375,"distances_sum":1824.0192841716107}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.9393117299367302,"seconds":8.102506399154663e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.765625,"distances_sum":2315.170360250911}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696085164835166,"seconds":7.461756467819214e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.9453125,"distances_sum":2519.3214568777594}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696085164835166,"seconds":7.461756467819214e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.9453125,"distances_sum":2519.3214568777594}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696085164835166,"seconds":7.461756467819214e-6,"exhaustive_search_seconds":1.7099082469940186e-6,"evaluations":8.9453125,"distances_sum":2519.3214568777594}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7625213328338337,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":7.3671875,"distances_sum":1553.8566590685944}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.15234375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.15234375,"f1":null,"seconds":3.4887343645095825e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":4.375,"distances_sum":368.1892234455983}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.525390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.525390625,"f1":0.6710039960039966,"seconds":4.971399903297424e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":6.609375,"distances_sum":1264.2389102822583}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6328125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6328125,"f1":0.7625213328338337,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":7.3671875,"distances_sum":1553.8566590685944}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7978515625, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.7978515625,"f1":0.880183358308359,"seconds":6.454065442085266e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.265625,"distances_sum":2027.937305850566}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9081647519147527,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.4140625,"distances_sum":2160.933051171349}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8904049075924086,"seconds":6.705522537231445e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.25,"distances_sum":2106.874518891431}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.634765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.634765625,"f1":0.7623799811299817,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":7.4296875,"distances_sum":1555.7174495795114}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9070341117216123,"seconds":6.923452019691467e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.4140625,"distances_sum":2169.2114856363364}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8344644938394946,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":7.8046875,"distances_sum":1816.7566870765131}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9081647519147527,"seconds":6.53974711894989e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.4140625,"distances_sum":2160.933051171349}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.939426198801199,"seconds":6.398186087608337e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.6484375,"distances_sum":2375.935735427535}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9221013361638369,"seconds":6.085261702537537e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.3984375,"distances_sum":2292.906236187362}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9464342948717953,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.6484375,"distances_sum":2436.368867326408}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498798076923083,"seconds":6.809830665588379e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.71875,"distances_sum":2442.139707319607}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9614239926739933,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.78125,"distances_sum":2512.359584452488}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.890625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.890625,"f1":0.9369219322344328,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.65625,"distances_sum":2336.569454191545}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471814643689651,"seconds":6.686896085739136e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.71875,"distances_sum":2415.583072957741}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614239926739933,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.78125,"distances_sum":2512.359584452488}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9614239926739933,"seconds":6.690621376037598e-6,"exhaustive_search_seconds":1.9297003746032715e-6,"evaluations":8.78125,"distances_sum":2512.359584452488}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.185546875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.185546875,"f1":null,"seconds":3.7904828786849976e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":5.078125,"distances_sum":445.7129251443744}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1806640625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1806640625,"f1":null,"seconds":3.6656856536865234e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":4.9765625,"distances_sum":432.6396184912918}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.185546875,"state":{"ssize":4,"bsize":1},"perf":{"precision":null,"recall":0.185546875,"f1":null,"seconds":3.7904828786849976e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":5.078125,"distances_sum":445.7129251443744}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5654296875,"f1":null,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":7.0625,"distances_sum":1372.3604754254936}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.74609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.74609375,"f1":0.8452563061938071,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.1015625,"distances_sum":1919.9410837047944}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6904296875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6904296875,"f1":0.8068023989898999,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":7.8828125,"distances_sum":1702.6687821070652}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.74609375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.74609375,"f1":0.8452563061938071,"seconds":6.536021828651428e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.1015625,"distances_sum":1919.9410837047944}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9541151556776561,"seconds":7.3928385972976685e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.8515625,"distances_sum":2467.1600932166875}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.954355540293041,"seconds":7.163733243942261e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.8125,"distances_sum":2476.6551555918873}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9040782134532142,"seconds":7.06501305103302e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.4296875,"distances_sum":2232.79811901776}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9313420954045962,"seconds":7.3481351137161255e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.8203125,"distances_sum":2316.750558470756}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.8948348526473533,"seconds":7.6051801443099976e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.5546875,"distances_sum":2135.0944240312997}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8203125,"f1":0.894210997335998,"seconds":6.8694353103637695e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.484375,"distances_sum":2147.6962702570568}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9541151556776561,"seconds":7.3928385972976685e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.8515625,"distances_sum":2467.1600932166875}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.919921875,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9541151556776561,"seconds":7.3928385972976685e-6,"exhaustive_search_seconds":1.819804310798645e-6,"evaluations":8.8515625,"distances_sum":2467.1600932166875}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.294921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.294921875,"f1":null,"seconds":4.336237907409668e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":5.2421875,"distances_sum":713.0286324715511}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8056640625,"f1":0.8828879453879463,"seconds":7.485970854759216e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.6875,"distances_sum":2003.4840454501527}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8056640625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.8056640625,"f1":0.8828879453879463,"seconds":7.485970854759216e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.6875,"distances_sum":2003.4840454501527}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.8985961954711961,"seconds":7.309019565582275e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.65625,"distances_sum":2126.9484048885975}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8603515625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8603515625,"f1":0.9170360889110897,"seconds":7.59027898311615e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.84375,"distances_sum":2179.4010886551164}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8603515625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8603515625,"f1":0.9170360889110897,"seconds":7.59027898311615e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.84375,"distances_sum":2179.4010886551164}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.961704441391942,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.8671875,"distances_sum":2485.755992243206}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604739010989014,"seconds":7.12275505065918e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.8125,"distances_sum":2491.0838480923176}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9347246503496509,"seconds":7.139518857002258e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.7734375,"distances_sum":2315.5060590990392}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9207022144522151,"seconds":6.863847374916077e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.8359375,"distances_sum":2193.6673174214343}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961704441391942,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.8671875,"distances_sum":2485.755992243206}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":7,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.961704441391942,"seconds":7.033348083496094e-6,"exhaustive_search_seconds":1.9762665033340454e-6,"evaluations":8.8671875,"distances_sum":2485.755992243206}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.1240234375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1240234375,"f1":null,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":1.8980354070663452e-6,"evaluations":3.8515625,"distances_sum":308.2869708488366}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.1240234375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.1240234375,"f1":null,"seconds":3.1888484954833984e-6,"exhaustive_search_seconds":1.8980354070663452e-6,"evaluations":3.8515625,"distances_sum":308.2869708488366}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.2421875,"distances_sum":819.4855633580464}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4189453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4189453125,"f1":null,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":7.0625,"distances_sum":860.0647651547513}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7986773643023651,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.59375,"distances_sum":1477.25156388359}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.677734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.677734375,"f1":0.7986773643023651,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.59375,"distances_sum":1477.25156388359}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9175137362637368,"seconds":6.927177309989929e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9453125,"distances_sum":2053.3497795876438}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8521681443556451,"seconds":6.545335054397583e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.671875,"distances_sum":1759.1202112345861}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9040355477855482,"seconds":6.575137376785278e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9140625,"distances_sum":1978.6864585241544}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8564453125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8564453125,"f1":0.9175137362637368,"seconds":6.927177309989929e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9453125,"distances_sum":2053.3497795876438}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9408596611721616,"seconds":6.8284571170806885e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.8984375,"distances_sum":2218.1658724143044}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9740956959706963,"seconds":7.0445239543914795e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.96875,"distances_sum":2455.455704052542}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9348500457875463,"seconds":6.645917892456055e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.9296875,"distances_sum":2178.302429118852}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9240244130869132,"seconds":6.12996518611908e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.8984375,"distances_sum":2136.21061716736}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9740956959706963,"seconds":7.0445239543914795e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.96875,"distances_sum":2455.455704052542}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":6,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.9740956959706963,"seconds":7.0445239543914795e-6,"exhaustive_search_seconds":1.8291175365447998e-6,"evaluations":8.96875,"distances_sum":2455.455704052542}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.654296875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.654296875,"f1":0.7760735791985799,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.9453125,"distances_sum":1509.7084853202186}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.75,"f1":0.8497544122544132,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.40625,"distances_sum":1755.8001211489639}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.572265625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.572265625,"f1":0.7148469585969592,"seconds":5.286186933517456e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.2890625,"distances_sum":1301.9531498268516}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.75,"f1":0.8497544122544132,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.40625,"distances_sum":1755.8001211489639}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9188821595071602,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5703125,"distances_sum":2170.7346589362814}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.8999464077589087,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.390625,"distances_sum":2099.841480646822}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8489219114219122,"seconds":5.675479769706726e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.2578125,"distances_sum":1778.4428728150522}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8980431027306035,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.578125,"distances_sum":1982.9488027187974}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9188821595071602,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.5703125,"distances_sum":2170.7346589362814}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9617788461538467,"seconds":6.28642737865448e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8203125,"distances_sum":2417.4586436719533}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":7,"bsize":10}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9550080128205133,"seconds":6.292015314102173e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.765625,"distances_sum":2375.186923838566}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9473099816849821,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7265625,"distances_sum":2336.204159327725}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9651098901098902,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":2425.6499362750587}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9593635531135534,"seconds":6.202608346939087e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.8359375,"distances_sum":2381.7851392366824}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9490041208791212,"seconds":6.411224603652954e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2326.380048432371}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651098901098902,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":2425.6499362750587}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":6,"bsize":11},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9651098901098902,"seconds":6.474554538726807e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.859375,"distances_sum":2425.6499362750587}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.189453125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.189453125,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":6.3125,"distances_sum":444.5472126708921}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.189453125,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.189453125,"f1":null,"seconds":3.50363552570343e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":6.3125,"distances_sum":444.5472126708921}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8681146978021987,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.2734375,"distances_sum":1756.2220456283326}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.763671875,"f1":0.8553384115884123,"seconds":5.651265382766724e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.1953125,"distances_sum":1743.1369223502384}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8609151265401271,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.2109375,"distances_sum":1729.70600644108}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8681146978021987,"seconds":6.627291440963745e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.2734375,"distances_sum":1756.2220456283326}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9645349442224445,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.953125,"distances_sum":2257.437878809332}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9086283508158515,"seconds":6.146728992462158e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.84375,"distances_sum":1919.1879277865094}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9261681027306033,"seconds":6.284564733505249e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.8203125,"distances_sum":2053.439700544644}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502861721611727,"seconds":6.426125764846802e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.953125,"distances_sum":2136.968171106145}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9587854853479857,"seconds":7.012858986854553e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9140625,"distances_sum":2211.845080818508}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9455070970695976,"seconds":6.606802344322205e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9609375,"distances_sum":2100.7048457528726}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9645349442224445,"seconds":6.424263119697571e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.953125,"distances_sum":2257.437878809332}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9767685439560444,"seconds":6.759539246559143e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.9765625,"distances_sum":2339.9059302999385}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.966796875, conf: {"ssize":6,"bsize":12}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":9.0,"distances_sum":2376.0758770748125}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9684581043956046,"seconds":6.632879376411438e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":8.984375,"distances_sum":2271.6216073049955}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.966796875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":9.0,"distances_sum":2376.0758770748125}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.966796875,"state":{"ssize":6,"bsize":12},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9818452380952385,"seconds":6.921589374542236e-6,"exhaustive_search_seconds":1.648440957069397e-6,"evaluations":9.0,"distances_sum":2376.0758770748125}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8253902347652357,"seconds":4.600733518600464e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.40625,"distances_sum":1489.1047429100838}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.8656713078588087,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.5859375,"distances_sum":1658.9029043128053}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7744140625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7744140625,"f1":0.8656713078588087,"seconds":5.336478352546692e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.5859375,"distances_sum":1658.9029043128053}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8725050990676001,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.6015625,"distances_sum":1681.2631798564446}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9419184981684986,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.90625,"distances_sum":2045.50839746443}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.79296875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.79296875,"f1":0.879458562271063,"seconds":5.5301934480667114e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.65625,"distances_sum":1699.949612773292}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9419184981684986,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.90625,"distances_sum":2045.50839746443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.967971611721612,"seconds":6.113201379776001e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.921875,"distances_sum":2231.3645836240894}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":9,"bsize":12}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9827209249084251,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.9609375,"distances_sum":2337.2203253055836}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.9778273809523812,"seconds":6.560236215591431e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.984375,"distances_sum":2259.682634608121}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9629120879120884,"seconds":6.2212347984313965e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.90625,"distances_sum":2192.0584979214514}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9827209249084251,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.9609375,"distances_sum":2337.2203253055836}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":9,"bsize":12},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9827209249084251,"seconds":6.577000021934509e-6,"exhaustive_search_seconds":1.4044344425201416e-6,"evaluations":8.9609375,"distances_sum":2337.2203253055836}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.314453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.314453125,"f1":null,"seconds":3.514811396598816e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.078125,"distances_sum":658.1331720700475}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7333984375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7333984375,"f1":0.8326921342546352,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.921875,"distances_sum":1616.5818431535138}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.462890625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.462890625,"f1":0.6186410811410814,"seconds":3.887340426445007e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":5.9765625,"distances_sum":1005.0189824758289}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7333984375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7333984375,"f1":0.8326921342546352,"seconds":5.098059773445129e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":7.921875,"distances_sum":1616.5818431535138}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.869140625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.869140625,"f1":0.9245853105228112,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.703125,"distances_sum":1923.4771047133925}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8359375,"f1":0.8992372211122218,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.515625,"distances_sum":1872.6866710380955}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.869140625,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.869140625,"f1":0.9245853105228112,"seconds":5.647540092468262e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.703125,"distances_sum":1923.4771047133925}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9338401182151189,"seconds":5.882233381271362e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.6796875,"distances_sum":1992.573517001531}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9662603021978025,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2199.474994998886}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9547847985347988,"seconds":5.943700671195984e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.84375,"distances_sum":2094.81577506828}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662603021978025,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2199.474994998886}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9662603021978025,"seconds":5.971640348434448e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.859375,"distances_sum":2199.474994998886}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.546875,"f1":null,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.921875,"distances_sum":1142.6547725757491}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4169921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4169921875,"f1":null,"seconds":4.24310564994812e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":6.375,"distances_sum":882.5656807114729}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8474872349872359,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.234375,"distances_sum":1629.9842525600602}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.748046875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.748046875,"f1":0.8474872349872359,"seconds":5.170702934265137e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.234375,"distances_sum":1629.9842525600602}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8970982142857152,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.46875,"distances_sum":1857.9341912382486}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8212890625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8212890625,"f1":0.8970982142857152,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.46875,"distances_sum":1857.9341912382486}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9519974816849823,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8984375,"distances_sum":2135.620990943453}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9478479853479858,"seconds":5.714595317840576e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.78125,"distances_sum":2125.0825936560486}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9519974816849823,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8984375,"distances_sum":2135.620990943453}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.916015625,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9519974816849823,"seconds":5.869194865226746e-6,"exhaustive_search_seconds":1.4938414096832275e-6,"evaluations":8.8984375,"distances_sum":2135.620990943453}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5400390625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5400390625,"f1":0.6828593281718285,"seconds":4.027038812637329e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.921875,"distances_sum":1001.3373059310758}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7980907980907987,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8984375,"distances_sum":1328.384337726201}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6806640625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6806640625,"f1":0.7980907980907987,"seconds":4.624947905540466e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.8984375,"distances_sum":1328.384337726201}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8723479645354653,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.265625,"distances_sum":1580.983783998543}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8055957930957939,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.0,"distances_sum":1391.4478360890469}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8723479645354653,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.265625,"distances_sum":1580.983783998543}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9460279304029309,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7421875,"distances_sum":2005.3034029570308}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9507726648351651,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2034.8179842786556}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9346668956043961,"seconds":5.465000867843628e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":1932.3204794159058}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9507726648351651,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2034.8179842786556}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9507726648351651,"seconds":6.290152668952942e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2034.8179842786556}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3994140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3994140625,"f1":null,"seconds":3.5669654607772827e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.28125,"distances_sum":696.0712025602442}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8549112345987355,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.25,"distances_sum":1468.185910697942}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4111328125, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4111328125,"f1":null,"seconds":3.723427653312683e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.4375,"distances_sum":748.4824563689361}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8549112345987355,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.25,"distances_sum":1468.185910697942}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8986435439560447,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.484375,"distances_sum":1602.221994588954}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577438186813189,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":1947.311032824714}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577438186813189,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8125,"distances_sum":1947.311032824714}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655681,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8671875,"distances_sum":1980.1640877616833}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655681,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8671875,"distances_sum":1980.1640877616833}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9646405677655681,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8671875,"distances_sum":1980.1640877616833}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.8006165709290717,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.265625,"distances_sum":1252.947210560349}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.7854763292263299,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.1484375,"distances_sum":1233.0983198249776}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.8006165709290717,"seconds":5.189329385757446e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.265625,"distances_sum":1252.947210560349}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8565512612387621,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.53125,"distances_sum":1475.0767138766444}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9362267940392947,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.796875,"distances_sum":1848.5412918461375}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9611435439560444,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8671875,"distances_sum":1977.91510579848}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.853343011155512,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.484375,"distances_sum":1431.0405468741637}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9603479853479859,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8984375,"distances_sum":1984.0070967631614}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9611435439560444,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.8671875,"distances_sum":1977.91510579848}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9661286630036634,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.953125,"distances_sum":1988.663333595898}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9753548534798538,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.921875,"distances_sum":2064.373673039084}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9652529761904765,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.890625,"distances_sum":2003.1248236816302}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9812500000000002,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.96875,"distances_sum":2102.312665978932}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9658203125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9812500000000002,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.96875,"distances_sum":2102.312665978932}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9658203125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9658203125,"f1":0.9812500000000002,"seconds":6.156042218208313e-6,"exhaustive_search_seconds":1.2796372175216675e-6,"evaluations":8.96875,"distances_sum":2102.312665978932}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6708984375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6708984375,"f1":0.7930012695637704,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0546875,"distances_sum":1232.4763738437155}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.556640625,"f1":0.7005425130425136,"seconds":4.043802618980408e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.296875,"distances_sum":1027.0608557544845}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6708984375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6708984375,"f1":0.7930012695637704,"seconds":4.6510249376297e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.0546875,"distances_sum":1232.4763738437155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8971268315018321,"seconds":5.459412932395935e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.796875,"distances_sum":1646.6367646058338}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9387367840492845,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.90625,"distances_sum":1891.1856818216145}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8955078125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8955078125,"f1":0.9387367840492845,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.90625,"distances_sum":1891.1856818216145}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9699233058608063,"seconds":6.46151602268219e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2089.8715148992283}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.953125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.953125,"f1":0.9739812271062275,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9609375,"distances_sum":2102.1021524976086}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9430689102564108,"seconds":5.472451448440552e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.7734375,"distances_sum":1948.7439354137953}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9597298534798538,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8671875,"distances_sum":2022.2576871376434}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.953125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739812271062275,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9609375,"distances_sum":2102.1021524976086}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.953125,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.953125,"f1":0.9739812271062275,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9609375,"distances_sum":2102.1021524976086}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.64453125, conf: {"ssize":3,"bsize":4}, perf: {"precision":0.9822730654761904,"recall":0.64453125,"f1":0.7660975309412816,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.3828125,"distances_sum":1576.1648109463597}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.73046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9876302083333331,"recall":0.73046875,"f1":0.8309176500582758,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.875,"distances_sum":1881.3220526127327}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.39453125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.39453125,"f1":null,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":5.78125,"distances_sum":931.6542465068795}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.73046875,"state":{"ssize":2,"bsize":5},"perf":{"precision":0.9876302083333331,"recall":0.73046875,"f1":0.8309176500582758,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":7.875,"distances_sum":1881.3220526127327}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8076171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9859281994047618,"recall":0.8076171875,"f1":0.8821781733891113,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3046875,"distances_sum":2215.4595374728015}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8076171875,"state":{"ssize":1,"bsize":6},"perf":{"precision":0.9859281994047618,"recall":0.8076171875,"f1":0.8821781733891113,"seconds":5.412846803665161e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.3046875,"distances_sum":2215.4595374728015}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.985649181547619,"recall":0.880859375,"f1":0.9253415204587083,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.65625,"distances_sum":2482.9540782384324}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.986421130952381,"recall":0.892578125,"f1":0.9332632211538467,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.734375,"distances_sum":2520.730931152756}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":3,"bsize":8}, perf: {"precision":0.9901878720238095,"recall":0.8798828125,"f1":0.9279368418040299,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.6796875,"distances_sum":2457.4274868605753}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":9}, perf: {"precision":0.9833519345238095,"recall":0.9423828125,"f1":0.9602893200549453,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.859375,"distances_sum":2776.2453962811137}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":7,"bsize":9},"perf":{"precision":0.9833519345238095,"recall":0.9423828125,"f1":0.9602893200549453,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.859375,"distances_sum":2776.2453962811137}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":7,"bsize":9},"perf":{"precision":0.9833519345238095,"recall":0.9423828125,"f1":0.9602893200549453,"seconds":6.886199116706848e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.859375,"distances_sum":2776.2453962811137}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.25390625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.25390625,"f1":null,"seconds":3.676861524581909e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":6.2109375,"distances_sum":577.5920075476139}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7968193265068275,"seconds":4.881992936134338e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":7.8203125,"distances_sum":1529.1464208002744}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8612585331335341,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.3359375,"distances_sum":1842.439288176333}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8612585331335341,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.3359375,"distances_sum":1842.439288176333}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9349046786546793,"seconds":5.811452865600586e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.90625,"distances_sum":2307.7865927484713}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9663721694971701,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9609375,"distances_sum":2576.7386486689425}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9663721694971701,"seconds":5.912035703659058e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9609375,"distances_sum":2576.7386486689425}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696256868131874,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9765625,"distances_sum":2577.5754713469614}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696256868131874,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9765625,"distances_sum":2577.5754713469614}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9696256868131874,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3988465070724487e-6,"evaluations":8.9765625,"distances_sum":2577.5754713469614}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2275390625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2275390625,"f1":null,"seconds":3.4812837839126587e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.1640625,"distances_sum":605.3435173600549}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7942177614052621,"seconds":4.9229711294174194e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.9921875,"distances_sum":1716.2886856794344}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7626953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7626953125,"f1":0.8582401973026981,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":2014.5728040491176}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7626953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7626953125,"f1":0.8582401973026981,"seconds":5.330890417098999e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.5703125,"distances_sum":2014.5728040491176}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9690876831501836,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9453125,"distances_sum":2797.500566596076}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9588427197802203,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.90625,"distances_sum":2736.8859538054207}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.935482746420247,"seconds":5.807727575302124e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8984375,"distances_sum":2518.28209647731}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8193359375,"f1":0.8923170579420587,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.7734375,"distances_sum":2260.74198913601}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9690876831501836,"seconds":5.904585123062134e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.9453125,"distances_sum":2797.500566596076}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190481,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2876.029681707526}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190481,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2876.029681707526}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9773065476190481,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.953125,"distances_sum":2876.029681707526}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.954395651817322e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":6.390625,"distances_sum":552.9740606743325}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8178149975024983,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.359375,"distances_sum":1718.4576374991018}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7021484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7021484375,"f1":0.8178149975024983,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.359375,"distances_sum":1718.4576374991018}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8564508408258417,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":1919.083675359514}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8564508408258417,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.71875,"distances_sum":1919.083675359514}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9611492673992681,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2671.48718141925}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9327469405594413,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.875,"distances_sum":2433.632272027766}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9611492673992681,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2671.48718141925}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9611492673992681,"seconds":5.967915058135986e-6,"exhaustive_search_seconds":1.3746321201324463e-6,"evaluations":8.8828125,"distances_sum":2671.48718141925}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.21875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.21875,"f1":null,"seconds":3.213062882423401e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.53125,"distances_sum":514.886938500459}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8639282592407599,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.484375,"distances_sum":2007.4137181658236}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.58203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.58203125,"f1":0.7208400974025981,"seconds":4.133209586143494e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":7.453125,"distances_sum":1461.7914804851393}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8639282592407599,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.484375,"distances_sum":2007.4137181658236}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9461767399267403,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7265625,"distances_sum":2623.590647737536}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8671875,"f1":0.9239182692307699,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.71875,"distances_sum":2419.540228308881}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9461767399267403,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7265625,"distances_sum":2623.590647737536}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691449175824179,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8984375,"distances_sum":2776.7431095283087}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9676911630036636,"seconds":7.7076256275177e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.90625,"distances_sum":2746.744567334651}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.964921016483517,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2719.166901161548}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.955792124542125,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8359375,"distances_sum":2683.3602737929127}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9482028388278392,"seconds":5.8785080909729e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8125,"distances_sum":2642.581740781917}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691449175824179,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8984375,"distances_sum":2776.7431095283087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691449175824179,"seconds":5.76116144657135e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8984375,"distances_sum":2776.7431095283087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8468411796536806,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.109375,"distances_sum":2047.6870621841183}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6767578125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6767578125,"f1":0.7968677156177163,"seconds":5.010515451431274e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":7.7734375,"distances_sum":1852.5425039945126}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8468411796536806,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.109375,"distances_sum":2047.6870621841183}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8717953921078929,"seconds":5.906447768211365e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.4453125,"distances_sum":2173.21908694033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9498912545787549,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.734375,"distances_sum":2747.346717443122}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.883597132034633,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.3671875,"distances_sum":2304.939281468343}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9498912545787549,"seconds":5.895271897315979e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.734375,"distances_sum":2747.346717443122}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9633814102564107,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":2835.884116523667}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9570398351648357,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.78125,"distances_sum":2812.998157303368}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498054029304034,"seconds":5.707144737243652e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.8359375,"distances_sum":2728.350511824472}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9633814102564107,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":2835.884116523667}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9633814102564107,"seconds":5.995854735374451e-6,"exhaustive_search_seconds":1.4919787645339966e-6,"evaluations":8.828125,"distances_sum":2835.884116523667}}, n: 9
inertia(cfft.distances) = 23.247819072976363
inertia(cdnet.distances) = 26.198959807755347
inertia(crand.distances) = 20.791265390719538
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9444444444444445
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> k=5
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9022222222222221
===> k=7
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8755555555555555
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9155555555555556
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9244444444444445
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8755555555555556
===> k=11
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9177777777777777
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9044444444444443
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9155555555555556
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8999999999999999
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8933333333333334
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9044444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
[ Info: ("XXXXXX===== rocchio like>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX===== rocchio like>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
[ Info: ("XXXXXX==== clustering>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
nc.class_map = [1, 3, 3, 1, 2, 3, 2, 2, 3, 3, 1, 3, 3, 1, 2, 3, 3, 2, 3, 3, 2]
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 9]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 4, 7]]
** centroid: 12, normalized-entropy: 0.9456603046006401, [(2, 4), (3, 7)]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 2, 3, 3, 2, 3, 3, 2, 1, 2, 3]
acc = 0.94
acc = 0.9333333333333333
Test Summary:   | Pass  Total
NearestCentroid |   10     10
*** starting iteration: 1; err: [Inf, 0.34166667231149517] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662] ***
*** starting iteration: 2; err: [Inf, 0.34166667231149517, 0.17079571909213662] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246] ***
*** starting iteration: 3; err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403] ***
*** starting iteration: 4; err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027] ***
*** starting iteration: 5; err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027] ***
*** computing centroids ***
*** computing 12 nearest references ***
*** new score with 12 references: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027, 0.1565695013397027] ***
*** finished computation of 12 references, err: [Inf, 0.34166667231149517, 0.17079571909213662, 0.16162643159534246, 0.15777054515221403, 0.1565695013397027, 0.1565695013397027] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 21, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 8, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 9, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.6665186277320082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6665186277320082, 0.3154185977130566] ***
*** starting iteration: 2; err: [Inf, 0.6665186277320082, 0.3154185977130566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6665186277320082, 0.3154185977130566, 0.27757740867532305] ***
*** starting iteration: 3; err: [Inf, 0.6665186277320082, 0.3154185977130566, 0.27757740867532305] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6665186277320082, 0.3154185977130566, 0.27757740867532305, 0.20272891411403599] ***
*** finished computation of 7 references, err: [Inf, 0.6665186277320082, 0.3154185977130566, 0.27757740867532305, 0.20272891411403599] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 11, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 3, 18]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 3), (3, 18)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 7, 5]]
** centroid: 5, normalized-entropy: 0.9798687566511527, [(2, 7), (3, 5)]
*** center 6: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3025562582656922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025562582656922, 0.19451459344534505] ***
*** starting iteration: 2; err: [Inf, 0.3025562582656922, 0.19451459344534505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025562582656922, 0.19451459344534505, 0.19079316021577614] ***
*** starting iteration: 3; err: [Inf, 0.3025562582656922, 0.19451459344534505, 0.19079316021577614] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3025562582656922, 0.19451459344534505, 0.19079316021577614, 0.18522283464705913] ***
*** finished computation of 7 references, err: [Inf, 0.3025562582656922, 0.19451459344534505, 0.19079316021577614, 0.18522283464705913] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 15, 1]]
** centroid: 2, normalized-entropy: 0.3372900666170139, [(2, 15), (3, 1)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 7]]
** centroid: 6, normalized-entropy: 0.9023932827949788, [(2, 15), (3, 7)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3983940759894747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3983940759894747, 0.3211561789991058] ***
*** starting iteration: 2; err: [Inf, 0.3983940759894747, 0.3211561789991058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3983940759894747, 0.3211561789991058, 0.3115930778553777] ***
*** starting iteration: 3; err: [Inf, 0.3983940759894747, 0.3211561789991058, 0.3115930778553777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3983940759894747, 0.3211561789991058, 0.3115930778553777, 0.30853436451606364] ***
*** finished computation of 7 references, err: [Inf, 0.3983940759894747, 0.3211561789991058, 0.3115930778553777, 0.30853436451606364] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 23, 5]]
** centroid: 1, normalized-entropy: 0.6769418697808861, [(2, 23), (3, 5)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 6, 31]]
** centroid: 2, normalized-entropy: 0.6394571324851642, [(2, 6), (3, 31)]
*** center 3: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.8345850536191864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345850536191864, 0.28777949593089036] ***
*** starting iteration: 2; err: [Inf, 0.8345850536191864, 0.28777949593089036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345850536191864, 0.28777949593089036, 0.24091310657121273] ***
*** starting iteration: 3; err: [Inf, 0.8345850536191864, 0.28777949593089036, 0.24091310657121273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.8345850536191864, 0.28777949593089036, 0.24091310657121273, 0.2162313890489179] ***
*** finished computation of 7 references, err: [Inf, 0.8345850536191864, 0.28777949593089036, 0.24091310657121273, 0.2162313890489179] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 13, 11]]
** centroid: 1, normalized-entropy: 0.9949848281859699, [(2, 13), (3, 11)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 3: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [10, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [3, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 7, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6314316343523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6314316343523, 0.25496316873702407] ***
*** starting iteration: 2; err: [Inf, 0.6314316343523, 0.25496316873702407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6314316343523, 0.25496316873702407, 0.20549002449404438] ***
*** starting iteration: 3; err: [Inf, 0.6314316343523, 0.25496316873702407, 0.20549002449404438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6314316343523, 0.25496316873702407, 0.20549002449404438, 0.1994462214190619] ***
*** finished computation of 7 references, err: [Inf, 0.6314316343523, 0.25496316873702407, 0.20549002449404438, 0.1994462214190619] ***
*** center 1: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 3, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 13, 10]]
** centroid: 7, normalized-entropy: 0.9876925088958032, [(2, 13), (3, 10)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3310975419661301] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3310975419661301, 0.2135162064652509] ***
*** starting iteration: 2; err: [Inf, 0.3310975419661301, 0.2135162064652509] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3310975419661301, 0.2135162064652509, 0.21152321831763202] ***
*** starting iteration: 3; err: [Inf, 0.3310975419661301, 0.2135162064652509, 0.21152321831763202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3310975419661301, 0.2135162064652509, 0.21152321831763202, 0.21152321831763202] ***
*** finished computation of 7 references, err: [Inf, 0.3310975419661301, 0.2135162064652509, 0.21152321831763202, 0.21152321831763202] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 4]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(2, 5), (3, 4)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 25]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33128674142703574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33128674142703574, 0.22101435002488753] ***
*** starting iteration: 2; err: [Inf, 0.33128674142703574, 0.22101435002488753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33128674142703574, 0.22101435002488753, 0.21625846934899143] ***
*** starting iteration: 3; err: [Inf, 0.33128674142703574, 0.22101435002488753, 0.21625846934899143] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33128674142703574, 0.22101435002488753, 0.21625846934899143, 0.21583327563912127] ***
*** finished computation of 7 references, err: [Inf, 0.33128674142703574, 0.22101435002488753, 0.21625846934899143, 0.21583327563912127] ***
*** center 1: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [0, 0, 1]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 1, 19]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 12, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 11, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30217457673862214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30217457673862214, 0.20998396492016322] ***
*** starting iteration: 2; err: [Inf, 0.30217457673862214, 0.20998396492016322] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30217457673862214, 0.20998396492016322, 0.19479450150958275] ***
*** starting iteration: 3; err: [Inf, 0.30217457673862214, 0.20998396492016322, 0.19479450150958275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30217457673862214, 0.20998396492016322, 0.19479450150958275, 0.19273668306046474] ***
*** starting iteration: 4; err: [Inf, 0.30217457673862214, 0.20998396492016322, 0.19479450150958275, 0.19273668306046474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30217457673862214, 0.20998396492016322, 0.19479450150958275, 0.19273668306046474, 0.19241724647529496] ***
*** finished computation of 7 references, err: [Inf, 0.30217457673862214, 0.20998396492016322, 0.19479450150958275, 0.19273668306046474, 0.19241724647529496] ***
*** center 1: selecting labels [1] (freq >= 2) [from [5, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 17]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 4: selecting labels [1] (freq >= 2) [from [16, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 2, 14]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 2), (3, 14)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 13, 1]]
*** center 7: selecting labels [1] (freq >= 2) [from [10, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.1346048115158256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1346048115158256, 0.22406831053311005] ***
*** starting iteration: 2; err: [Inf, 1.1346048115158256, 0.22406831053311005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216] ***
*** starting iteration: 3; err: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216, 0.17934993387700984] ***
*** starting iteration: 4; err: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216, 0.17934993387700984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216, 0.17934993387700984, 0.17657828043915252] ***
*** starting iteration: 5; err: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216, 0.17934993387700984, 0.17657828043915252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216, 0.17934993387700984, 0.17657828043915252, 0.17640515495944487] ***
*** finished computation of 7 references, err: [Inf, 1.1346048115158256, 0.22406831053311005, 0.18337306261403216, 0.17934993387700984, 0.17657828043915252, 0.17640515495944487] ***
*** center 1: selecting labels [3] (freq >= 2) [from [0, 0, 20]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 4, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 12, 8]]
** centroid: 5, normalized-entropy: 0.9709505944546688, [(2, 12), (3, 8)]
*** center 6: selecting labels [3] (freq >= 2) [from [0, 0, 8]]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 3.6261999878450597] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.6261999878450597, 1.1159532887038284] ***
*** finished computation of 3 references, err: [Inf, 3.6261999878450597, 1.1159532887038284] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 31, 10]]
** centroid: 1, normalized-entropy: 0.8014698931335286, [(2, 31), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 4, 0]]
** centroid: 3, normalized-entropy: 0.48546076074591343, [(1, 34), (2, 4)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 4.795799959154604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 4.795799959154604, 0.7447630861039488] ***
*** finished computation of 3 references, err: [Inf, 4.795799959154604, 0.7447630861039488] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 17, 32]]
** centroid: 2, normalized-entropy: 0.9313043685793762, [(2, 17), (3, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0798000225781066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0798000225781066, 0.7331483953934953] ***
*** finished computation of 3 references, err: [Inf, 1.0798000225781066, 0.7331483953934953] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 2, 0]]
** centroid: 1, normalized-entropy: 0.30337483608641397, [(1, 35), (2, 2)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 26]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 10]]
** centroid: 3, normalized-entropy: 0.8418521897563208, [(2, 27), (3, 10)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.1281060964132505] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1281060964132505, 1.47612246800879] ***
*** starting iteration: 2; err: [Inf, 3.1281060964132505, 1.47612246800879] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011] ***
*** starting iteration: 3; err: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011, 0.3902792866924709] ***
*** starting iteration: 4; err: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011, 0.3902792866924709] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011, 0.3902792866924709, 0.37870603159996774] ***
*** starting iteration: 5; err: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011, 0.3902792866924709, 0.37870603159996774] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011, 0.3902792866924709, 0.37870603159996774, 0.3777329848384602] ***
*** finished computation of 3 references, err: [Inf, 3.1281060964132505, 1.47612246800879, 0.5733093750327011, 0.3902792866924709, 0.37870603159996774, 0.3777329848384602] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 35, 10]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 21]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.8235235327301274] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908] ***
*** starting iteration: 2; err: [Inf, 3.8235235327301274, 1.185893516255908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525] ***
*** starting iteration: 3; err: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226] ***
*** starting iteration: 4; err: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042] ***
*** starting iteration: 5; err: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042, 0.363313822268488] ***
*** starting iteration: 6; err: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042, 0.363313822268488] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042, 0.363313822268488, 0.35498329449860205] ***
*** starting iteration: 7; err: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042, 0.363313822268488, 0.35498329449860205] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042, 0.363313822268488, 0.35498329449860205, 0.3541856365733156] ***
*** finished computation of 3 references, err: [Inf, 3.8235235327301274, 1.185893516255908, 0.3982616932404525, 0.38672477854528226, 0.3730429261754042, 0.363313822268488, 0.35498329449860205, 0.3541856365733156] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.9384174958020044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9384174958020044, 0.5898924271445977] ***
*** starting iteration: 2; err: [Inf, 0.9384174958020044, 0.5898924271445977] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9384174958020044, 0.5898924271445977, 0.5837922315510299] ***
*** starting iteration: 3; err: [Inf, 0.9384174958020044, 0.5898924271445977, 0.5837922315510299] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9384174958020044, 0.5898924271445977, 0.5837922315510299, 0.5832554133504063] ***
*** finished computation of 3 references, err: [Inf, 0.9384174958020044, 0.5898924271445977, 0.5837922315510299, 0.5832554133504063] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 36]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 27), (3, 36)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 3.4322999496234505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4322999496234505, 0.5978951661586146] ***
*** starting iteration: 2; err: [Inf, 3.4322999496234505, 0.5978951661586146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4322999496234505, 0.5978951661586146, 0.29760348094331485] ***
*** starting iteration: 3; err: [Inf, 3.4322999496234505, 0.5978951661586146, 0.29760348094331485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 3.4322999496234505, 0.5978951661586146, 0.29760348094331485, 0.27420459100480515] ***
*** finished computation of 7 references, err: [Inf, 3.4322999496234505, 0.5978951661586146, 0.29760348094331485, 0.27420459100480515] ***
*** center 1: selecting labels [1] (freq >= 1) [from [16, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 5, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 1, 10]]
** centroid: 6, normalized-entropy: 0.43949698692151346, [(2, 1), (3, 10)]
*** center 7: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.3301000063993988] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3301000063993988, 0.4970587814368749] ***
*** starting iteration: 2; err: [Inf, 1.3301000063993988, 0.4970587814368749] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3301000063993988, 0.4970587814368749, 0.3763040008961903] ***
*** starting iteration: 3; err: [Inf, 1.3301000063993988, 0.4970587814368749, 0.3763040008961903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 1.3301000063993988, 0.4970587814368749, 0.3763040008961903, 0.3418481781659455] ***
*** finished computation of 7 references, err: [Inf, 1.3301000063993988, 0.4970587814368749, 0.3763040008961903, 0.3418481781659455] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 7, 1]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(2, 7), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 17, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 23]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 9]]
** centroid: 5, normalized-entropy: 1.0, [(2, 9), (3, 9)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 3, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6058999930659668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6058999930659668, 0.3658812765516429] ***
*** starting iteration: 2; err: [Inf, 0.6058999930659668, 0.3658812765516429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6058999930659668, 0.3658812765516429, 0.29637085314770056] ***
*** starting iteration: 3; err: [Inf, 0.6058999930659668, 0.3658812765516429, 0.29637085314770056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6058999930659668, 0.3658812765516429, 0.29637085314770056, 0.268073970245813] ***
*** finished computation of 7 references, err: [Inf, 0.6058999930659668, 0.3658812765516429, 0.29637085314770056, 0.268073970245813] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 5, 18]]
** centroid: 3, normalized-entropy: 0.7553754125614286, [(2, 5), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 9]]
** centroid: 5, normalized-entropy: 0.9975025463691153, [(2, 8), (3, 9)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6176296504159234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6176296504159234, 0.37768964599163324] ***
*** starting iteration: 2; err: [Inf, 0.6176296504159234, 0.37768964599163324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6176296504159234, 0.37768964599163324, 0.3745326626383199] ***
*** starting iteration: 3; err: [Inf, 0.6176296504159234, 0.37768964599163324, 0.3745326626383199] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.6176296504159234, 0.37768964599163324, 0.3745326626383199, 0.3730505501217567] ***
*** finished computation of 3 references, err: [Inf, 0.6176296504159234, 0.37768964599163324, 0.3745326626383199, 0.3730505501217567] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 2, 22]]
** centroid: 1, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 33, 9]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.8560576348775907] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8560576348775907, 0.6996652582066234] ***
*** starting iteration: 2; err: [Inf, 0.8560576348775907, 0.6996652582066234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8560576348775907, 0.6996652582066234, 0.6957461524609585] ***
*** starting iteration: 3; err: [Inf, 0.8560576348775907, 0.6996652582066234, 0.6957461524609585] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.8560576348775907, 0.6996652582066234, 0.6957461524609585, 0.6958578282388782] ***
*** finished computation of 3 references, err: [Inf, 0.8560576348775907, 0.6996652582066234, 0.6957461524609585, 0.6958578282388782] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 34, 33]]
** centroid: 1, normalized-entropy: 0.9998393017810486, [(2, 34), (3, 33)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [14, 2, 0]]
** centroid: 2, normalized-entropy: 0.5435644431995963, [(1, 14), (2, 2)]
*** center 3: selecting labels [1] (freq >= 2) [from [17, 0, 0]]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.905201196521093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.905201196521093, 0.5978997351533035] ***
*** starting iteration: 2; err: [Inf, 0.905201196521093, 0.5978997351533035] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.905201196521093, 0.5978997351533035, 0.5870446037143406] ***
*** starting iteration: 3; err: [Inf, 0.905201196521093, 0.5978997351533035, 0.5870446037143406] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.905201196521093, 0.5978997351533035, 0.5870446037143406, 0.5832554133504063] ***
*** finished computation of 3 references, err: [Inf, 0.905201196521093, 0.5978997351533035, 0.5870446037143406, 0.5832554133504063] ***
*** center 1: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [22, 2, 0]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(1, 22), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 27, 36]]
** centroid: 3, normalized-entropy: 0.9852281360342514, [(2, 27), (3, 36)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7621000000104146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.7621000000104146, 0.29579120967399586] ***
*** finished computation of 7 references, err: [Inf, 0.7621000000104146, 0.29579120967399586] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 4]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(2, 10), (3, 4)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 4, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 3, 6]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(2, 3), (3, 6)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 2.3084000383157135] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 2.3084000383157135, 0.6585718191384615] ***
*** finished computation of 7 references, err: [Inf, 2.3084000383157135, 0.6585718191384615] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 4, 17]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 4), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [31, 2, 0]]
** centroid: 2, normalized-entropy: 0.32984607020714635, [(1, 31), (2, 2)]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 26, 1]]
** centroid: 4, normalized-entropy: 0.22853814395352806, [(2, 26), (3, 1)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
finished with 6 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.46430000178132047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.46430000178132047, 0.2827659950394789] ***
*** finished computation of 7 references, err: [Inf, 0.46430000178132047, 0.2827659950394789] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 7, 8]]
** centroid: 4, normalized-entropy: 0.9967916319816367, [(2, 7), (3, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 13, 8]]
** centroid: 5, normalized-entropy: 0.9587118829771317, [(2, 13), (3, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 1.6094000021607866] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6094000021607866, 0.5558043467248523] ***
*** starting iteration: 2; err: [Inf, 1.6094000021607866, 0.5558043467248523] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6094000021607866, 0.5558043467248523, 0.5360089461742235] ***
*** starting iteration: 3; err: [Inf, 1.6094000021607866, 0.5558043467248523, 0.5360089461742235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.6094000021607866, 0.5558043467248523, 0.5360089461742235, 0.5350392100091524] ***
*** finished computation of 3 references, err: [Inf, 1.6094000021607866, 0.5558043467248523, 0.5360089461742235, 0.5350392100091524] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 3, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0923000123720206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609] ***
*** starting iteration: 2; err: [Inf, 1.0923000123720206, 0.639990109219609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725] ***
*** starting iteration: 3; err: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875] ***
*** starting iteration: 4; err: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789] ***
*** starting iteration: 5; err: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789, 0.5176336830910974] ***
*** starting iteration: 6; err: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789, 0.5176336830910974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789, 0.5176336830910974, 0.516431938815791] ***
*** starting iteration: 7; err: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789, 0.5176336830910974, 0.516431938815791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789, 0.5176336830910974, 0.516431938815791, 0.5155302981393878] ***
*** finished computation of 3 references, err: [Inf, 1.0923000123720206, 0.639990109219609, 0.5418706868133725, 0.5202828617276875, 0.5192570686646789, 0.5176336830910974, 0.516431938815791, 0.5155302981393878] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1703000096966027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151] ***
*** starting iteration: 2; err: [Inf, 1.1703000096966027, 0.632497108050151] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642] ***
*** starting iteration: 3; err: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414] ***
*** starting iteration: 4; err: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876] ***
*** starting iteration: 5; err: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876, 0.5194617903848926] ***
*** starting iteration: 6; err: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876, 0.5194617903848926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876, 0.5194617903848926, 0.5171088226188586] ***
*** starting iteration: 7; err: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876, 0.5194617903848926, 0.5171088226188586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876, 0.5194617903848926, 0.5171088226188586, 0.5171088226188586] ***
*** finished computation of 3 references, err: [Inf, 1.1703000096966027, 0.632497108050151, 0.5833401686746642, 0.5424566712240414, 0.5273287025358876, 0.5194617903848926, 0.5171088226188586, 0.5171088226188586] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 3, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.0066795855930244] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0066795855930244, 0.38847639087618047] ***
*** starting iteration: 2; err: [Inf, 1.0066795855930244, 0.38847639087618047] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0066795855930244, 0.38847639087618047, 0.3779687278215617] ***
*** starting iteration: 3; err: [Inf, 1.0066795855930244, 0.38847639087618047, 0.3779687278215617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.0066795855930244, 0.38847639087618047, 0.3779687278215617, 0.3777329848384602] ***
*** finished computation of 3 references, err: [Inf, 1.0066795855930244, 0.38847639087618047, 0.3779687278215617, 0.3777329848384602] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 10]]
** centroid: 1, normalized-entropy: 0.7642045065086204, [(2, 35), (3, 10)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 3: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.757107084192318] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.757107084192318, 0.39362899467324325] ***
*** starting iteration: 2; err: [Inf, 0.757107084192318, 0.39362899467324325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533] ***
*** starting iteration: 3; err: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745] ***
*** starting iteration: 4; err: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745, 0.35651335636867953] ***
*** starting iteration: 5; err: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745, 0.35651335636867953] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745, 0.35651335636867953, 0.3541856365733156] ***
*** starting iteration: 6; err: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745, 0.35651335636867953, 0.3541856365733156] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745, 0.35651335636867953, 0.3541856365733156, 0.3541856365733156] ***
*** finished computation of 3 references, err: [Inf, 0.757107084192318, 0.39362899467324325, 0.3832572155554533, 0.3679988537018745, 0.35651335636867953, 0.3541856365733156, 0.3541856365733156] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5468963401603324] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5468963401603324, 0.42050936645665343] ***
*** starting iteration: 2; err: [Inf, 0.5468963401603324, 0.42050936645665343] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824] ***
*** starting iteration: 3; err: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824, 0.3771491007983856] ***
*** starting iteration: 4; err: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824, 0.3771491007983856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824, 0.3771491007983856, 0.36855587923848177] ***
*** starting iteration: 5; err: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824, 0.3771491007983856, 0.36855587923848177] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824, 0.3771491007983856, 0.36855587923848177, 0.36767114671428663] ***
*** finished computation of 3 references, err: [Inf, 0.5468963401603324, 0.42050936645665343, 0.4017548766060824, 0.3771491007983856, 0.36855587923848177, 0.36767114671428663] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 27, 9]]
** centroid: 1, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 1, 0]]
** centroid: 2, normalized-entropy: 0.18312206830137262, [(1, 35), (2, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 1, 27]]
** centroid: 3, normalized-entropy: 0.2222848306856879, [(2, 1), (3, 27)]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1887486042534579] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1887486042534579, 0.39932109458601955] ***
*** finished computation of 3 references, err: [Inf, 1.1887486042534579, 0.39932109458601955] ***
*** center 1: selecting labels [1] (freq >= 2) [from [34, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 18]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 13]]
** centroid: 3, normalized-entropy: 0.842657877202239, [(2, 35), (3, 13)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1606329017336923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1606329017336923, 0.36457500469869303] ***
*** finished computation of 3 references, err: [Inf, 1.1606329017336923, 0.36457500469869303] ***
*** center 1: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 2) [from [0, 0, 25]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 36, 8]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 36), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.797669224015864] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.797669224015864, 0.4342156563782689] ***
*** finished computation of 3 references, err: [Inf, 0.797669224015864, 0.4342156563782689] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 28, 25]]
** centroid: 1, normalized-entropy: 0.9976875760352552, [(2, 28), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [35, 1, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 11]]
finished with 4 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5164132073004595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5164132073004595, 0.1907622343198267] ***
*** finished computation of 7 references, err: [Inf, 0.5164132073004595, 0.1907622343198267] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 3, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 13, 9]]
** centroid: 4, normalized-entropy: 0.976020648236615, [(2, 13), (3, 9)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4472786013104256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4472786013104256, 0.21036144278233215] ***
*** finished computation of 7 references, err: [Inf, 0.4472786013104256, 0.21036144278233215] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 19]]
** centroid: 1, normalized-entropy: 0.9293636260137188, [(2, 10), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 4, 1]]
** centroid: 4, normalized-entropy: 0.7219280948873623, [(2, 4), (3, 1)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 22, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28081886359793184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28081886359793184, 0.15562851847482562] ***
*** finished computation of 7 references, err: [Inf, 0.28081886359793184, 0.15562851847482562] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 12, 9]]
** centroid: 4, normalized-entropy: 0.9852281360342514, [(2, 12), (3, 9)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 8, 1]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(2, 8), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5050794057766987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050794057766987, 0.22662252473286673] ***
*** starting iteration: 2; err: [Inf, 0.5050794057766987, 0.22662252473286673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804] ***
*** starting iteration: 3; err: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804, 0.17883005587323686] ***
*** starting iteration: 4; err: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804, 0.17883005587323686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804, 0.17883005587323686, 0.1766572442988134] ***
*** starting iteration: 5; err: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804, 0.17883005587323686, 0.1766572442988134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804, 0.17883005587323686, 0.1766572442988134, 0.17588159596766828] ***
*** finished computation of 7 references, err: [Inf, 0.5050794057766987, 0.22662252473286673, 0.1932122093192804, 0.17883005587323686, 0.1766572442988134, 0.17588159596766828] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 14, 9]]
** centroid: 1, normalized-entropy: 0.9656361333706099, [(2, 14), (3, 9)]
*** center 2: selecting labels [1] (freq >= 2) [from [20, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 21, 1]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: ignoring all elements because minimum-frequency restrictions were not met, freq >= 2, freqs: [1, 0, 0]
*** center 7: selecting labels [1] (freq >= 2) [from [13, 0, 0]]
finished with 7 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.42504736909025426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42504736909025426, 0.19818670527652682] ***
*** starting iteration: 2; err: [Inf, 0.42504736909025426, 0.19818670527652682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42504736909025426, 0.19818670527652682, 0.18607272241714326] ***
*** starting iteration: 3; err: [Inf, 0.42504736909025426, 0.19818670527652682, 0.18607272241714326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42504736909025426, 0.19818670527652682, 0.18607272241714326, 0.18471747586203194] ***
*** starting iteration: 4; err: [Inf, 0.42504736909025426, 0.19818670527652682, 0.18607272241714326, 0.18471747586203194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42504736909025426, 0.19818670527652682, 0.18607272241714326, 0.18471747586203194, 0.18471747586203194] ***
*** finished computation of 7 references, err: [Inf, 0.42504736909025426, 0.19818670527652682, 0.18607272241714326, 0.18471747586203194, 0.18471747586203194] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 17, 7]]
** centroid: 1, normalized-entropy: 0.8708644692353648, [(2, 17), (3, 7)]
*** center 2: selecting labels [1] (freq >= 2) [from [31, 0, 0]]
*** center 3: selecting labels [3] (freq >= 2) [from [0, 0, 3]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 5, 0]]
*** center 5: selecting labels [3] (freq >= 2) [from [0, 0, 15]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 14, 1]]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 7]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.267760984158979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244] ***
*** starting iteration: 2; err: [Inf, 0.267760984158979, 0.19771063011314244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858] ***
*** starting iteration: 3; err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302] ***
*** starting iteration: 4; err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302, 0.17346131071021817] ***
*** starting iteration: 5; err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302, 0.17346131071021817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302, 0.17346131071021817, 0.16883026690257016] ***
*** starting iteration: 6; err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302, 0.17346131071021817, 0.16883026690257016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302, 0.17346131071021817, 0.16883026690257016, 0.1686659083155292] ***
*** finished computation of 7 references, err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302, 0.17346131071021817, 0.16883026690257016, 0.1686659083155292] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 5, 20]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 5), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [26, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 2) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 2) [from [9, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 15, 8]]
** centroid: 6, normalized-entropy: 0.9321115676166747, [(2, 15), (3, 8)]
*** center 7: selecting labels [3] (freq >= 2) [from [0, 0, 6]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5386000024121556] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5386000024121556, 0.2638541945003934] ***
*** starting iteration: 2; err: [Inf, 0.5386000024121556, 0.2638541945003934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5386000024121556, 0.2638541945003934, 0.24720484353334535] ***
*** starting iteration: 3; err: [Inf, 0.5386000024121556, 0.2638541945003934, 0.24720484353334535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5386000024121556, 0.2638541945003934, 0.24720484353334535, 0.24072551789392707] ***
*** finished computation of 7 references, err: [Inf, 0.5386000024121556, 0.2638541945003934, 0.24720484353334535, 0.24072551789392707] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 12, 12]]
** centroid: 1, normalized-entropy: 1.0, [(2, 12), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 14]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 18, 1]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(2, 18), (3, 1)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5408000050176502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5408000050176502, 0.2932230725918027] ***
*** starting iteration: 2; err: [Inf, 0.5408000050176502, 0.2932230725918027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5408000050176502, 0.2932230725918027, 0.27979078490402515] ***
*** starting iteration: 3; err: [Inf, 0.5408000050176502, 0.2932230725918027, 0.27979078490402515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5408000050176502, 0.2932230725918027, 0.27979078490402515, 0.2772995751876129] ***
*** finished computation of 7 references, err: [Inf, 0.5408000050176502, 0.2932230725918027, 0.27979078490402515, 0.2772995751876129] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 6]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(2, 4), (3, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 16, 3]]
** centroid: 4, normalized-entropy: 0.6292492238560344, [(2, 16), (3, 3)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 16]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 16, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.40559999798866037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40559999798866037, 0.2424985669722257] ***
*** starting iteration: 2; err: [Inf, 0.40559999798866037, 0.2424985669722257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40559999798866037, 0.2424985669722257, 0.21874431508980408] ***
*** starting iteration: 3; err: [Inf, 0.40559999798866037, 0.2424985669722257, 0.21874431508980408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.40559999798866037, 0.2424985669722257, 0.21874431508980408, 0.21141876682769492] ***
*** finished computation of 7 references, err: [Inf, 0.40559999798866037, 0.2424985669722257, 0.21874431508980408, 0.21141876682769492] ***
*** center 1: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 11, 5]]
** centroid: 3, normalized-entropy: 0.8960382325345574, [(2, 11), (3, 5)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 5, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4475957002064203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4475957002064203, 0.21581820318760866] ***
*** starting iteration: 2; err: [Inf, 0.4475957002064203, 0.21581820318760866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4475957002064203, 0.21581820318760866, 0.20498540245460767] ***
*** starting iteration: 3; err: [Inf, 0.4475957002064203, 0.21581820318760866, 0.20498540245460767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4475957002064203, 0.21581820318760866, 0.20498540245460767, 0.20412926354178015] ***
*** finished computation of 7 references, err: [Inf, 0.4475957002064203, 0.21581820318760866, 0.20498540245460767, 0.20412926354178015] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 24]]
** centroid: 1, normalized-entropy: 0.8739810481273581, [(2, 10), (3, 24)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 5, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [1, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.45732282532473334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45732282532473334, 0.19066545554588432] ***
*** starting iteration: 2; err: [Inf, 0.45732282532473334, 0.19066545554588432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45732282532473334, 0.19066545554588432, 0.17976484640649484] ***
*** starting iteration: 3; err: [Inf, 0.45732282532473334, 0.19066545554588432, 0.17976484640649484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.45732282532473334, 0.19066545554588432, 0.17976484640649484, 0.17636499811072565] ***
*** finished computation of 7 references, err: [Inf, 0.45732282532473334, 0.19066545554588432, 0.17976484640649484, 0.17636499811072565] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [1] (freq >= 1) [from [19, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 4, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 6: selecting labels [1] (freq >= 1) [from [12, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 17]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.267760984158979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244] ***
*** starting iteration: 2; err: [Inf, 0.267760984158979, 0.19771063011314244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858] ***
*** starting iteration: 3; err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302] ***
*** finished computation of 7 references, err: [Inf, 0.267760984158979, 0.19771063011314244, 0.19104825665860858, 0.18292567657980302] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 6, 22]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 6), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 8, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 2]]
*** center 5: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 15, 5]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 15), (3, 5)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 15)
[0.98, 0.98, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.5724521205069419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5724521205069419, 0.2585268648762356] ***
*** finished computation of 7 references, err: [Inf, 0.5724521205069419, 0.2585268648762356] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 2, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 20, 1]]
** centroid: 2, normalized-entropy: 0.2761954276479391, [(2, 20), (3, 1)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 13, 6]]
** centroid: 3, normalized-entropy: 0.8997437586982626, [(2, 13), (3, 6)]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 24]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [6, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3952168943242833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3952168943242833, 0.20148418361207512] ***
*** finished computation of 7 references, err: [Inf, 0.3952168943242833, 0.20148418361207512] ***
*** center 1: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 4, 11]]
** centroid: 3, normalized-entropy: 0.8366407419411671, [(2, 4), (3, 11)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 5, 8]]
** centroid: 4, normalized-entropy: 0.961236604722876, [(2, 5), (3, 8)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 21, 1]]
** centroid: 7, normalized-entropy: 0.2667649878030262, [(2, 21), (3, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29338438102113484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29338438102113484, 0.1518452863973048] ***
*** finished computation of 7 references, err: [Inf, 0.29338438102113484, 0.1518452863973048] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 19]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 3]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(2, 14), (3, 3)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 6, 6]]
** centroid: 5, normalized-entropy: 1.0, [(2, 6), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 16)
[0.98, 0.98, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.6766000099784047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6766000099784047, 0.2559398468286662] ***
*** finished computation of 7 references, err: [Inf, 0.6766000099784047, 0.2559398468286662] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 9, 1]]
** centroid: 1, normalized-entropy: 0.46899559358928133, [(2, 9), (3, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 15]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 6, 11]]
** centroid: 7, normalized-entropy: 0.9366673818775627, [(2, 6), (3, 11)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.5184000050145324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.5184000050145324, 0.27128040895304373] ***
*** finished computation of 7 references, err: [Inf, 0.5184000050145324, 0.27128040895304373] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 2: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 4: selecting labels [1] (freq >= 1) [from [14, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 17, 9]]
** centroid: 5, normalized-entropy: 0.9305861291319927, [(2, 17), (3, 9)]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.6507999972838836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.6507999972838836, 0.23398577287565725] ***
*** finished computation of 7 references, err: [Inf, 0.6507999972838836, 0.23398577287565725] ***
*** center 1: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 14, 5]]
** centroid: 3, normalized-entropy: 0.8314743880097292, [(2, 14), (3, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [15, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 21]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 3]]
** centroid: 6, normalized-entropy: 0.8112781244591328, [(2, 9), (3, 3)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 6, 0]]
finished with 9 centroids; started with 7
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.98, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 17
iteration 4 finished
generating 4 configurations using top 4 configurations, starting with 17)
[0.98, 0.98, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 19
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.9696000063554002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9696000063554002, 0.5910549291504303] ***
*** starting iteration: 2; err: [Inf, 0.9696000063554002, 0.5910549291504303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9696000063554002, 0.5910549291504303, 0.5444476553904666] ***
*** starting iteration: 3; err: [Inf, 0.9696000063554002, 0.5910549291504303, 0.5444476553904666] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9696000063554002, 0.5910549291504303, 0.5444476553904666, 0.5360089461742235] ***
*** starting iteration: 4; err: [Inf, 0.9696000063554002, 0.5910549291504303, 0.5444476553904666, 0.5360089461742235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.9696000063554002, 0.5910549291504303, 0.5444476553904666, 0.5360089461742235, 0.5350392100091524] ***
*** finished computation of 3 references, err: [Inf, 0.9696000063554002, 0.5910549291504303, 0.5444476553904666, 0.5360089461742235, 0.5350392100091524] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 35, 11]]
** centroid: 1, normalized-entropy: 0.7935912300117066, [(2, 35), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 3: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.4869000066700815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4869000066700815, 0.5252772063377517] ***
*** starting iteration: 2; err: [Inf, 1.4869000066700815, 0.5252772063377517] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789] ***
*** starting iteration: 3; err: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789, 0.5176336830910974] ***
*** starting iteration: 4; err: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789, 0.5176336830910974] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789, 0.5176336830910974, 0.516431938815791] ***
*** starting iteration: 5; err: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789, 0.5176336830910974, 0.516431938815791] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789, 0.5176336830910974, 0.516431938815791, 0.5155302981393878] ***
*** finished computation of 3 references, err: [Inf, 1.4869000066700815, 0.5252772063377517, 0.5192570686646789, 0.5176336830910974, 0.516431938815791, 0.5155302981393878] ***
*** center 1: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1524000027228183] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1524000027228183, 0.5432860846712031] ***
*** starting iteration: 2; err: [Inf, 1.1524000027228183, 0.5432860846712031] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002] ***
*** starting iteration: 3; err: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002, 0.5194617903848926] ***
*** starting iteration: 4; err: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002, 0.5194617903848926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002, 0.5194617903848926, 0.5171088226188586] ***
*** starting iteration: 5; err: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002, 0.5194617903848926, 0.5171088226188586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002, 0.5194617903848926, 0.5171088226188586, 0.5171088226188586] ***
*** finished computation of 3 references, err: [Inf, 1.1524000027228183, 0.5432860846712031, 0.523723701110002, 0.5194617903848926, 0.5171088226188586, 0.5171088226188586] ***
*** center 1: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 27]]
** centroid: 2, normalized-entropy: 0.36205125173399805, [(2, 2), (3, 27)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 27, 9]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 27), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 1.1299228241950956] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1299228241950956, 0.39932109458601955] ***
*** starting iteration: 2; err: [Inf, 1.1299228241950956, 0.39932109458601955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928] ***
*** starting iteration: 3; err: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602] ***
*** starting iteration: 4; err: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602, 0.3757387262419648] ***
*** starting iteration: 5; err: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602, 0.3757387262419648] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602, 0.3757387262419648, 0.37344004936494657] ***
*** starting iteration: 6; err: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602, 0.3757387262419648, 0.37344004936494657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602, 0.3757387262419648, 0.37344004936494657, 0.3730505501217567] ***
*** finished computation of 3 references, err: [Inf, 1.1299228241950956, 0.39932109458601955, 0.3789248515378928, 0.3777329848384602, 0.3757387262419648, 0.37344004936494657, 0.3730505501217567] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 2, 22]]
** centroid: 2, normalized-entropy: 0.4138168503036336, [(2, 2), (3, 22)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 33, 9]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(2, 33), (3, 9)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.7100974785428796] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7100974785428796, 0.38039505024239806] ***
*** starting iteration: 2; err: [Inf, 0.7100974785428796, 0.38039505024239806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543] ***
*** starting iteration: 3; err: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543, 0.35646757634606174] ***
*** starting iteration: 4; err: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543, 0.35646757634606174] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543, 0.35646757634606174, 0.3550191640313007] ***
*** starting iteration: 5; err: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543, 0.35646757634606174, 0.3550191640313007] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543, 0.35646757634606174, 0.3550191640313007, 0.3541856365733156] ***
*** finished computation of 3 references, err: [Inf, 0.7100974785428796, 0.38039505024239806, 0.3588503798491543, 0.35646757634606174, 0.3550191640313007, 0.3541856365733156] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 34, 8]]
** centroid: 1, normalized-entropy: 0.7024665512903904, [(2, 34), (3, 8)]
*** center 2: selecting labels [1] (freq >= 1) [from [31, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 2, 25]]
** centroid: 3, normalized-entropy: 0.38094658570539014, [(2, 2), (3, 25)]
finished with 3 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.5140298420069039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203] ***
*** starting iteration: 2; err: [Inf, 0.5140298420069039, 0.40456327359190203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215] ***
*** starting iteration: 3; err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948] ***
*** starting iteration: 4; err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063] ***
*** starting iteration: 5; err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876] ***
*** starting iteration: 6; err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876, 0.3670641485528838] ***
*** starting iteration: 7; err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876, 0.3670641485528838] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876, 0.3670641485528838, 0.36576453268919606] ***
*** starting iteration: 8; err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876, 0.3670641485528838, 0.36576453268919606] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876, 0.3670641485528838, 0.36576453268919606, 0.3653200816485306] ***
*** finished computation of 3 references, err: [Inf, 0.5140298420069039, 0.40456327359190203, 0.39326428098043215, 0.3820906837152948, 0.37676637547369063, 0.3716713160037876, 0.3670641485528838, 0.36576453268919606, 0.3653200816485306] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 5, 31]]
** centroid: 1, normalized-entropy: 0.581321498763703, [(2, 5), (3, 31)]
*** center 2: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 24, 5]]
** centroid: 3, normalized-entropy: 0.6631968402398286, [(2, 24), (3, 5)]
finished with 3 centroids; started with 3
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.98, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 19
iteration 6 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.98, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 19
iteration 7 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.98, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 19
iteration 8 finished
generating 4 configurations using top 4 configurations, starting with 19)
[0.98, 0.98, 0.9666666666666667, 0.9666666666666667, 0.9533333333333333, 0.9466666666666667, 0.9466666666666667, 0.9466666666666667, 0.94, 0.94, 0.9333333333333332, 0.9266666666666667, 0.9266666666666666, 0.9199999999999999, 0.9133333333333334, 0.9066666666666667, 0.8933333333333334, 0.8933333333333334, 0.8866666666666667]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1) => 0.98
finished with 19
iteration 9 finished
[ Info: ========== BEST MODEL ==========
[ Info: (AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1), 0.98)
[ Info: AKNC{Array{Float64,1}}[AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[6.433333333333334, 3.0083333333333333, 4.583333333333333, 1.4416666666666667], [6.033333333333334, 2.7416666666666667, 5.041666666666667, 1.8083333333333333], [4.738888888888889, 3.1500000000000004, 1.4333333333333333, 0.18888888888888897], [7.6, 3.025, 6.65, 2.075], [5.38, 2.54, 3.4200000000000004, 1.08], [5.343749999999999, 3.75, 1.4874999999999998, 0.2750000000000001], [6.675000000000001, 3.1, 5.625, 2.1250000000000004], [5.673684210526316, 2.694736842105263, 4.131578947368422, 1.273684210526316]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2, 3, 1, 3, 2, 1, 3, 2], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.9612903225806475, 3.4, 1.4709677419354836, 0.24516129032258072], [7.6000000000000005, 2.85, 6.424999999999999, 2.1500000000000004], [5.725, 2.975, 4.725, 1.6], [5.75, 2.6166666666666667, 5.066666666666666, 1.7000000000000002], [6.3500000000000005, 2.9375, 4.56875, 1.45625], [6.2, 2.766666666666667, 4.9, 1.8333333333333333], [6.65625, 3.04375, 5.6375, 2.1125000000000003], [5.570588235294117, 2.617647058823529, 3.9, 1.188235294117647], [7.5, 3.5999999999999996, 6.3, 2.125]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 2, 3, 3, 2, 3], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1)), AKNC{Array{Float64,1}}(KNC{Array{Float64,1}}([[4.911538461538462, 3.2500000000000004, 1.4576923076923076, 0.25000000000000006], [7.4875, 3.1125, 6.275, 2.0875000000000004], [5.9, 2.772727272727273, 4.609090909090909, 1.4272727272727272], [5.78, 2.7399999999999998, 4.9799999999999995, 1.92], [6.515000000000001, 3.0700000000000003, 5.475, 2.1649999999999996], [6.655555555555555, 2.933333333333333, 4.699999999999999, 1.4666666666666668], [6.3, 2.6666666666666665, 5.0, 1.7333333333333334], [5.3375, 2.45, 3.5999999999999996, 1.1125], [5.366666666666667, 3.9111111111111114, 1.4777777777777779, 0.2777777777777778]], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1, 3, 2, 3, 3, 2, 3, 2, 1], 3), KCenters.var"#fun#70"{typeof(l2_distance)}(SimilaritySearch.l2_distance), AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, 1, 7, 3, 1.0, :fft, 0.3, 1))]
Test Summary: | Pass  Total
AKNC          |    1      1
[45, 2, 23, 1, 1, 2, 9, 22, 29, 8, 1, 26, 16, 49, 26, 36, 25, 27, 44, 29, 22, 10, 23, 21, 22, 23, 2, 51, 26, 21, 22, 50, 6, 13, 11, 46, 41, 30, 22, 28, 26, 35, 22, 47, 31, 40, 23, 51, 29, 32, 25, 53, 30, 51, 4, 37, 41, 28, 36, 22, 31, 26, 29, 18, 21, 2, 18, 20, 50, 52, 23, 29, 16, 41, 35, 29, 22, 11, 33, 20, 20, 50, 30, 45, 35, 1, 62, 35, 31, 40, 36, 30, 32, 22, 31, 20, 24, 57, 39, 34, 41, 36, 23, 36, 52, 24, 46, 27, 30, 31, 32, 33, 26, 44, 14, 23, 37, 14, 2, 28, 41, 53, 49, 26, 36, 28, 37, 37, 1, 35, 1, 35, 31, 34, 30, 41, 35, 18, 40, 44, 50, 44, 48, 42, 44, 20, 42, 51, 32, 17, 52, 25, 42, 21, 12, 46, 51, 58, 41, 42, 35, 40, 55, 49, 40, 43, 44, 46, 35, 45, 26, 65, 25, 28, 1, 17, 39, 30, 25, 39, 20, 47, 11, 51, 41, 31, 40, 26, 58, 32, 46, 28, 30, 32, 41, 43, 29, 51, 49, 50, 34, 22, 43, 55, 53, 61, 41, 93, 46, 35, 22, 34, 31, 37, 22, 32, 21, 41, 33, 40, 52, 32, 11, 49, 15, 19, 31, 36, 23, 44, 61, 36, 63, 25, 22, 54, 31, 46, 52, 47, 36, 32, 55, 46, 40, 21, 29, 40, 34, 39, 35, 34, 11, 41, 20, 32, 38, 37, 31, 1, 24, 59, 53, 48, 21, 20, 35, 47, 44, 60, 41, 39, 50, 72, 28, 54, 42, 38, 30, 41, 24, 32, 36, 34, 39, 20, 33, 52, 27, 35, 17, 27, 31, 13, 62, 52, 49, 38, 29, 19]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6110000000000002, speedup = 0.49876888534596203, eval_ratio = 0.041867)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3576388888888889,"recall":0.3576388888888889,"f1":null,"seconds":6.848014891147614e-5,"exhaustive_search_seconds":0.00039111077785491943,"evaluations":337.7109375,"distances_sum":1816.1095307329413}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5269097222222222,"recall":0.5269097222222222,"f1":null,"seconds":0.00010491348803043365,"exhaustive_search_seconds":0.00039111077785491943,"evaluations":374.9609375,"distances_sum":1684.5900094238752}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.640625,"recall":0.640625,"f1":0.640625,"seconds":0.00013270415365695953,"exhaustive_search_seconds":0.00039111077785491943,"evaluations":412.8515625,"distances_sum":1632.8380290278917}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7204861111111106,"recall":0.7204861111111106,"f1":0.7204861111111106,"seconds":0.00016448646783828735,"exhaustive_search_seconds":0.00039111077785491943,"evaluations":452.2890625,"distances_sum":1603.581880146516}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7855902777777771,"recall":0.7855902777777771,"f1":0.7855902777777771,"seconds":0.0001975223422050476,"exhaustive_search_seconds":0.00039111077785491943,"evaluations":491.8125,"distances_sum":1584.3142379625103}
KCenters.DeloneInvIndex> reached performance {"precision":0.8272569444444436,"recall":0.8272569444444436,"f1":0.8272569444444436,"seconds":0.00022757798433303833,"exhaustive_search_seconds":0.00039111077785491943,"evaluations":532.3125,"distances_sum":1574.6398286702974}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.785, speedup = 2.1071820011558158, eval_ratio = 0.053716999999999994)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
   Testing KCenters tests passed 
