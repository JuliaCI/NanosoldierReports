Julia Version 1.4.0-DEV.622
Commit b73fc63796 (2019-12-17 04:07 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed FastGaussQuadrature ───────── v0.4.1
 Installed ArgCheck ──────────────────── v1.0.1
 Installed Missings ──────────────────── v0.4.3
 Installed Compat ────────────────────── v2.2.0
 Installed SpecialFunctions ──────────── v0.8.0
 Installed LineSearches ──────────────── v7.0.1
 Installed ForwardDiff ───────────────── v0.10.7
 Installed AugmentedGaussianProcesses ── v0.6.0
 Installed Tables ────────────────────── v0.2.11
 Installed AxisAlgorithms ────────────── v1.0.0
 Installed Requires ──────────────────── v1.0.0
 Installed RangeArrays ───────────────── v0.3.1
 Installed IterTools ─────────────────── v1.3.0
 Installed Arpack_jll ────────────────── v3.5.0+2
 Installed Clustering ────────────────── v0.13.3
 Installed DataValueInterfaces ───────── v1.0.0
 Installed WoodburyMatrices ──────────── v0.4.1
 Installed RecipesBase ───────────────── v0.7.0
 Installed AbstractFFTs ──────────────── v0.5.0
 Installed BinDeps ───────────────────── v1.0.0
 Installed SortingAlgorithms ─────────── v0.3.1
 Installed Distributions ─────────────── v0.21.11
 Installed Parameters ────────────────── v0.12.0
 Installed DiffEqDiffTools ───────────── v1.6.0
 Installed DiffResults ───────────────── v0.0.4
 Installed OffsetArrays ──────────────── v0.11.4
 Installed OrderedCollections ────────── v1.1.0
 Installed KernelDensity ─────────────── v0.5.1
 Installed Optim ─────────────────────── v0.19.7
 Installed TableTraits ───────────────── v1.0.0
 Installed AdvancedHMC ───────────────── v0.2.14
 Installed NLSolversBase ─────────────── v7.5.0
 Installed Calculus ──────────────────── v0.5.1
 Installed Showoff ───────────────────── v0.3.1
 Installed AxisArrays ────────────────── v0.3.3
 Installed Conda ─────────────────────── v1.3.0
 Installed GradDescent ───────────────── v0.3.1
 Installed NaNMath ───────────────────── v0.3.3
 Installed FFTW ──────────────────────── v1.1.0
 Installed Rmath ─────────────────────── v0.6.0
 Installed MacroTools ────────────────── v0.5.3
 Installed JSON ──────────────────────── v0.21.0
 Installed StatsBase ─────────────────── v0.32.0
 Installed FillArrays ────────────────── v0.8.2
 Installed LazyArrays ────────────────── v0.14.10
 Installed OpenBLAS_jll ──────────────── v0.3.7+1
 Installed Interpolations ────────────── v0.12.5
 Installed Parsers ───────────────────── v0.3.10
 Installed Reexport ──────────────────── v0.2.0
 Installed InvertedIndices ───────────── v1.0.0
 Installed Arpack ────────────────────── v0.4.0
 Installed StaticArrays ──────────────── v0.12.1
 Installed MCMCChains ────────────────── v0.3.15
 Installed DiffRules ─────────────────── v0.1.0
 Installed Ratios ────────────────────── v0.3.1
 Installed URIParser ─────────────────── v0.4.0
 Installed VersionParsing ────────────── v1.2.0
 Installed IteratorInterfaceExtensions ─ v1.0.0
 Installed StatsFuns ─────────────────── v0.8.0
 Installed DataAPI ───────────────────── v1.1.0
 Installed InplaceOps ────────────────── v0.3.0
 Installed QuadGK ────────────────────── v2.3.1
 Installed ArrayInterface ────────────── v2.1.0
 Installed PositiveFactorizations ────── v0.2.3
 Installed DataFrames ────────────────── v0.19.4
 Installed DataStructures ────────────── v0.17.6
 Installed Distances ─────────────────── v0.8.2
 Installed BinaryProvider ────────────── v0.5.8
 Installed NearestNeighbors ──────────── v0.4.4
 Installed IntervalSets ──────────────── v0.3.2
 Installed CategoricalArrays ─────────── v0.7.4
 Installed PDMats ────────────────────── v0.9.10
 Installed PooledArrays ──────────────── v0.5.2
 Installed ProgressMeter ─────────────── v1.2.0
 Installed CommonSubexpressions ──────── v0.2.0
 Installed ArrayLayouts ──────────────── v0.1.5
 Installed KernelFunctions ───────────── v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [38eea1fd] + AugmentedGaussianProcesses v0.6.0
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [0bf59076] + AdvancedHMC v0.2.14
  [dce04be8] + ArgCheck v1.0.1
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+2
  [4fba245c] + ArrayInterface v2.1.0
  [4c555306] + ArrayLayouts v0.1.5
  [38eea1fd] + AugmentedGaussianProcesses v0.6.0
  [13072b0f] + AxisAlgorithms v1.0.0
  [39de3d68] + AxisArrays v0.3.3
  [9e28174c] + BinDeps v1.0.0
  [b99e7846] + BinaryProvider v0.5.8
  [49dc2e85] + Calculus v0.5.1
  [324d7699] + CategoricalArrays v0.7.4
  [aaaa29a8] + Clustering v0.13.3
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v2.2.0
  [8f4d0f93] + Conda v1.3.0
  [9a962f9c] + DataAPI v1.1.0
  [a93c6f00] + DataFrames v0.19.4
  [864edb3b] + DataStructures v0.17.6
  [e2d170a0] + DataValueInterfaces v1.0.0
  [01453d9d] + DiffEqDiffTools v1.6.0
  [163ba53b] + DiffResults v0.0.4
  [b552c78f] + DiffRules v0.1.0
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.21.11
  [7a1cc6ca] + FFTW v1.1.0
  [442a2c76] + FastGaussQuadrature v0.4.1
  [1a297f60] + FillArrays v0.8.2
  [f6369f11] + ForwardDiff v0.10.7
  [e1397348] + GradDescent v0.3.1
  [505f98c9] + InplaceOps v0.3.0
  [a98d9a8b] + Interpolations v0.12.5
  [8197267c] + IntervalSets v0.3.2
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.5.1
  [ec8451be] + KernelFunctions v0.2.2
  [5078a376] + LazyArrays v0.14.10
  [d3d80556] + LineSearches v7.0.1
  [c7f686f2] + MCMCChains v0.3.15
  [1914dd2f] + MacroTools v0.5.3
  [e1d29d7a] + Missings v0.4.3
  [d41bc354] + NLSolversBase v7.5.0
  [77ba4419] + NaNMath v0.3.3
  [b8a86587] + NearestNeighbors v0.4.4
  [6fe1bfb0] + OffsetArrays v0.11.4
  [4536629a] + OpenBLAS_jll v0.3.7+1
  [429524aa] + Optim v0.19.7
  [bac558e1] + OrderedCollections v1.1.0
  [90014a1f] + PDMats v0.9.10
  [d96e819e] + Parameters v0.12.0
  [69de0a69] + Parsers v0.3.10
  [2dfb63ee] + PooledArrays v0.5.2
  [85a6dd25] + PositiveFactorizations v0.2.3
  [92933f4c] + ProgressMeter v1.2.0
  [1fd47b50] + QuadGK v2.3.1
  [b3c3ace0] + RangeArrays v0.3.1
  [c84ed2f1] + Ratios v0.3.1
  [3cdcf5f2] + RecipesBase v0.7.0
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.0
  [79098fc4] + Rmath v0.6.0
  [992d4aef] + Showoff v0.3.1
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.8.0
  [90137ffa] + StaticArrays v0.12.1
  [2913bbd2] + StatsBase v0.32.0
  [4c63d2b9] + StatsFuns v0.8.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v0.2.11
  [30578b45] + URIParser v0.4.0
  [81def892] + VersionParsing v1.2.0
  [efce3f68] + WoodburyMatrices v0.4.1
  [2a0f44e3] + Base64 
  [ade2ca70] + Dates 
  [8bb1440f] + DelimitedFiles 
  [8ba89e20] + Distributed 
  [9fa8497b] + Future 
  [b77e0a4c] + InteractiveUtils 
  [76f85450] + LibGit2 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [a63ad114] + Mmap 
  [44cfe95a] + Pkg 
  [de0858da] + Printf 
  [3fa0cd96] + REPL 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [1a1011a3] + SharedArrays 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [10745b16] + Statistics 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  [cf7118a7] + UUIDs 
  [4ec0a83e] + Unicode 
  Building SpecialFunctions → `~/.julia/packages/SpecialFunctions/ne2iw/deps/build.log`
Path `/home/pkgeval/.julia/packages/SpecialFunctions/ne2iw` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_HyaIFy/Project.toml`
  [276daf66] + SpecialFunctions v0.8.0 [`~/.julia/packages/SpecialFunctions/ne2iw`]
  Updating `/tmp/jl_HyaIFy/Manifest.toml`
  [276daf66] ~ SpecialFunctions v0.8.0 ⇒ v0.8.0 [`~/.julia/packages/SpecialFunctions/ne2iw`]
  Building Conda ───────────→ `~/.julia/packages/Conda/kLXeC/deps/build.log`
Path `/home/pkgeval/.julia/packages/Conda/kLXeC` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_Aqn35A/Project.toml`
  [8f4d0f93] + Conda v1.3.0 [`~/.julia/packages/Conda/kLXeC`]
  Updating `/tmp/jl_Aqn35A/Manifest.toml`
  [8f4d0f93] ~ Conda v1.3.0 ⇒ v1.3.0 [`~/.julia/packages/Conda/kLXeC`]
  Building FFTW ────────────→ `~/.julia/packages/FFTW/loJ3F/deps/build.log`
Path `/home/pkgeval/.julia/packages/FFTW/loJ3F` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_xwEqrF/Project.toml`
  [7a1cc6ca] + FFTW v1.1.0 [`~/.julia/packages/FFTW/loJ3F`]
  Updating `/tmp/jl_xwEqrF/Manifest.toml`
  [7a1cc6ca] ~ FFTW v1.1.0 ⇒ v1.1.0 [`~/.julia/packages/FFTW/loJ3F`]
  Building Rmath ───────────→ `~/.julia/packages/Rmath/BoBag/deps/build.log`
Path `/home/pkgeval/.julia/packages/Rmath/BoBag` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_OKUgyY/Project.toml`
  [79098fc4] + Rmath v0.6.0 [`~/.julia/packages/Rmath/BoBag`]
  Updating `/tmp/jl_OKUgyY/Manifest.toml`
  [79098fc4] ~ Rmath v0.6.0 ⇒ v0.6.0 [`~/.julia/packages/Rmath/BoBag`]
   Testing AugmentedGaussianProcesses
Path `/home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ` exists and looks like the correct package. Using existing path.
  Updating `/tmp/jl_zgq75A/Project.toml`
  [38eea1fd] + AugmentedGaussianProcesses v0.6.0 [`~/.julia/packages/AugmentedGaussianProcesses/8kAgJ`]
  Updating `/tmp/jl_zgq75A/Manifest.toml`
  [38eea1fd] ~ AugmentedGaussianProcesses v0.6.0 ⇒ v0.6.0 [`~/.julia/packages/AugmentedGaussianProcesses/8kAgJ`]
Running sandbox
Status `/tmp/jl_zgq75A/Project.toml`
  [0bf59076] AdvancedHMC v0.2.14
  [38eea1fd] AugmentedGaussianProcesses v0.6.0 [`~/.julia/packages/AugmentedGaussianProcesses/8kAgJ`]
  [aaaa29a8] Clustering v0.13.3
  [a93c6f00] DataFrames v0.19.4
  [31c24e10] Distributions v0.21.11
  [442a2c76] FastGaussQuadrature v0.4.1
  [f6369f11] ForwardDiff v0.10.7
  [e1397348] GradDescent v0.3.1
  [ec8451be] KernelFunctions v0.2.2
  [c7f686f2] MCMCChains v0.3.15
  [90014a1f] PDMats v0.9.10
  [92933f4c] ProgressMeter v1.2.0
  [3cdcf5f2] RecipesBase v0.7.0
  [276daf66] SpecialFunctions v0.8.0
  [2913bbd2] StatsBase v0.32.0
  [4c63d2b9] StatsFuns v0.8.0
  [ade2ca70] Dates 
  [37e2e46d] LinearAlgebra 
  [9a3f8284] Random 
  [10745b16] Statistics 
  [8dfed614] Test 
┌ Warning: `lgamma(x::Real)` is deprecated, use `(logabsgamma(x))[1]` instead.
│   caller = lstirling_asym(::BigFloat) at misc.jl:56
└ @ StatsFuns ~/.julia/packages/StatsFuns/2QE7p/src/misc.jl:56
WARNING: Method definition deepcopy(GradDescent.Optimizer) in module GradDescent at /home/pkgeval/.julia/packages/GradDescent/C4qjb/src/AbstractOptimizer.jl:22 overwritten in module AugmentedGaussianProcesses at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/functions/utils.jl:71.
  ** incremental compilation may be fatally broken for this module **

Starting training Gaussian Process with a Gaussian likelihood infered by Analytic Inference  with 100 samples with 2 features and 1 latent GP
GP Testing: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_GP.jl:21
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._GP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._GP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::GP{Float64,GaussianLikelihood{Float64},Analytic{Float64},AugmentedGaussianProcesses._GP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::GP{Float64,GaussianLikelihood{Float64},Analytic{Float64},AugmentedGaussianProcesses._GP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::GP{Float64,GaussianLikelihood{Float64},Analytic{Float64},AugmentedGaussianProcesses._GP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_GP.jl:21 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_GP.jl:18
  
Starting training Variational Gaussian Process with a Student-t likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Regression Error
└   err = 0.3204166298368535
Starting training Variational Gaussian Process with a Laplace likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Regression Error
└   err = 0.2864630542722869
Starting training Variational Gaussian Process with a Gaussian likelihood with heteroscedastic noise infered by Analytic Variational Inference  with 100 samples with 2 features and 2 latent GPs
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64},AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,HeteroscedasticLikelihood{Float64},AnalyticVI{Float64,2},AugmentedGaussianProcesses._VGP{Float64},2}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,HeteroscedasticLikelihood{Float64},AnalyticVI{Float64,2},AugmentedGaussianProcesses._VGP{Float64},2}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,HeteroscedasticLikelihood{Float64},AnalyticVI{Float64,2},AugmentedGaussianProcesses._VGP{Float64},2}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Regression Error
└   err = 0.6299998467930292
Starting training Variational Gaussian Process with a Bayesian SVM infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Classification Error
└   err = 0.02
Starting training Variational Gaussian Process with a Bernoulli Likelihood with Logistic Link infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Classification Error
└   err = 0.03
Starting training Variational Gaussian Process with a Logistic-Softmax Likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 5 latent GPs
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{NTuple{5,AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._VGP{Float64},5}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._VGP{Float64},5}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._VGP{Float64},5}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Multiclass Error
└   err = 0.12
Starting training Variational Gaussian Process with a Poisson Likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Event Error
└   err = 0.6750192052189938
Starting training Variational Gaussian Process with a Negative Binomial Likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._VGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:22
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._VGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},1}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::VGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:3
   [12] train!(::VGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::VGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._VGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:48 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:44 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:42 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:40 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_VGP.jl:38
  
┌ Info: Event Error
└   err = 17.45416371976427
Starting training Sparse Variational Gaussian Process with a Gaussian likelihood infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,GaussianLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,GaussianLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,GaussianLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Regression Error
└   err = 0.20327533827481392
Starting training Sparse Variational Gaussian Process with a Gaussian likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,GaussianLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,GaussianLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,GaussianLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Regression Error
└   err = 0.18982400152692944
Starting training Sparse Variational Gaussian Process with a Student-t likelihood infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Regression Error
└   err = 0.5019948443607585
Starting training Sparse Variational Gaussian Process with a Student-t likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,StudentTLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Regression Error
└   err = 0.34748563863145415
Starting training Sparse Variational Gaussian Process with a Laplace likelihood infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Regression Error
└   err = 0.5190201914808079
Starting training Sparse Variational Gaussian Process with a Laplace likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,LaplaceLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Regression Error
└   err = 0.33710468199922416
Starting training Sparse Variational Gaussian Process with a Bayesian SVM infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Classification Error
└   err = 0.09
Starting training Sparse Variational Gaussian Process with a Bayesian SVM infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,BayesianSVM{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Classification Error
└   err = 0.08
Starting training Sparse Variational Gaussian Process with a Bernoulli Likelihood with Logistic Link infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Classification Error
└   err = 0.1
Starting training Sparse Variational Gaussian Process with a Bernoulli Likelihood with Logistic Link infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,LogisticLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Classification Error
└   err = 0.09
Starting training Sparse Variational Gaussian Process with a Logistic-Softmax Likelihood infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 5 latent GPs
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,5}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{NTuple{5,AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Array{Any,1},NTuple{5,AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._SVGP{Float64},5}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._SVGP{Float64},5}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._SVGP{Float64},5}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Multiclass Error
└   err = 0.15
Starting training Sparse Variational Gaussian Process with a Logistic-Softmax Likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 5 latent GPs
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,5}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{NTuple{5,AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Array{Any,1},NTuple{5,AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._SVGP{Float64},5}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._SVGP{Float64},5}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,LogisticSoftMaxLikelihood{Float64},AnalyticVI{Float64,5},AugmentedGaussianProcesses._SVGP{Float64},5}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Multiclass Error
└   err = 0.12
Starting training Sparse Variational Gaussian Process with a Poisson Likelihood infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Event Error
└   err = 0.7811345556612715
Starting training Sparse Variational Gaussian Process with a Poisson Likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,PoissonLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Event Error
└   err = 0.7320072919781307
Starting training Sparse Variational Gaussian Process with a Negative Binomial Likelihood infered by Analytic Stochastic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticSVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{Array{Int64,1},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Event Error
└   err = 7.622113344367185
Starting training Sparse Variational Gaussian Process with a Negative Binomial Likelihood infered by Analytic Variational Inference  with 100 samples with 2 features and 1 latent GP
AnalyticVI: Error During Test at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50
  Test threw exception
  Expression: train!(model, 50)
  MethodError: no method matching kernelderivative(::SqExponentialKernel{Float64,ScaleTransform{Float64}}, ::Array{Float64,2})
  Closest candidates are:
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:38
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:(AbstractArray{T,1} where T)), ::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:44
    kernelderivative(!Matched::Kernel{T,#s150} where #s150<:(ScaleTransform{#s149} where #s149<:Base.RefValue), ::Any, !Matched::Any) where T at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning_utils.jl:50
    ...
  Stacktrace:
   [1] update_hyperparameters!(::AugmentedGaussianProcesses._SVGP{Float64}, ::SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false}, ::Array{Float64,1}, ::Array{Float64,1}, ::AnalyticVI{Float64,1}, ::AugmentedGaussianProcesses.AVIOptimizer{Float64}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:49
   [2] _broadcast_getindex_evalf at ./broadcast.jl:630 [inlined]
   [3] _broadcast_getindex at ./broadcast.jl:603 [inlined]
   [4] getindex at ./broadcast.jl:563 [inlined]
   [5] macro expansion at ./broadcast.jl:909 [inlined]
   [6] macro expansion at ./simdloop.jl:77 [inlined]
   [7] copyto! at ./broadcast.jl:908 [inlined]
   [8] copyto! at ./broadcast.jl:863 [inlined]
   [9] copy(::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1},Tuple{Base.OneTo{Int64}},typeof(AugmentedGaussianProcesses.update_hyperparameters!),Tuple{Tuple{AugmentedGaussianProcesses._SVGP{Float64}},Array{SubArray{Float64,2,Array{Float64,2},Tuple{UnitRange{Int64},Base.Slice{Base.OneTo{Int64}}},false},1},Tuple{Array{Float64,1}},Tuple{Array{Float64,1}},Array{Any,1},Tuple{AugmentedGaussianProcesses.AVIOptimizer{Float64}}}}) at ./broadcast.jl:839
   [10] materialize at ./broadcast.jl:819 [inlined]
   [11] update_hyperparameters!(::SVGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/autotuning.jl:8
   [12] train!(::SVGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64; callback::Nothing, convergence::Nothing) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:30
   [13] train!(::SVGP{Float64,NegBinomialLikelihood{Float64},AnalyticVI{Float64,1},AugmentedGaussianProcesses._SVGP{Float64},1}, ::Int64) at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/src/training.jl:13
   [14] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:50 [inlined]
   [15] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [16] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:46 [inlined]
   [17] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [18] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:43 [inlined]
   [19] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [20] macro expansion at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:41 [inlined]
   [21] macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1116 [inlined]
   [22] top-level scope at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/test_SVGP.jl:39
  
┌ Info: Event Error
└   err = 7.422676336536525
Test Summary:                      | Pass  Error  Total
Augmented Gaussian Process Testing |   54     25     79
  GP Testing                       |    2      1      3
  VGP                              |   18      8     26
    Regression                     |    7      3     10
      GaussianLikelihood           |    1             1
      StudentTLikelihood           |    2      1      3
        AnalyticVI                 |    2      1      3
      LaplaceLikelihood            |    2      1      3
        AnalyticVI                 |    2      1      3
      HeteroscedasticLikelihood    |    2      1      3
        AnalyticVI                 |    2      1      3
    Classification                 |    4      2      6
      BayesianSVM                  |    2      1      3
        AnalyticVI                 |    2      1      3
      LogisticLikelihood           |    2      1      3
        AnalyticVI                 |    2      1      3
    MultiClass                     |    3      1      4
      LogisticSoftMaxLikelihood    |    2      1      3
        AnalyticVI                 |    2      1      3
      SoftMaxLikelihood            |    1             1
    Poisson                        |    2      1      3
      PoissonLikelihood            |    2      1      3
        AnalyticVI                 |    2      1      3
    NegBinomial                    |    2      1      3
      NegBinomialLikelihood        |    2      1      3
        AnalyticVI                 |    2      1      3
  SVGP                             |   34     16     50
    Regression                     |   12      6     18
      GaussianLikelihood           |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
      StudentTLikelihood           |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
      LaplaceLikelihood            |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
    Classification                 |    8      4     12
      BayesianSVM                  |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
      LogisticLikelihood           |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
    MultiClass                     |    6      2      8
      LogisticSoftMaxLikelihood    |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
      SoftMaxLikelihood            |    2             2
    Poisson                        |    4      2      6
      PoissonLikelihood            |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
    NegBinomial                    |    4      2      6
      NegBinomialLikelihood        |    4      2      6
        AnalyticSVI                |    2      1      3
        AnalyticVI                 |    2      1      3
ERROR: LoadError: Some tests did not pass: 54 passed, 0 failed, 25 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/runtests.jl:7
err = ProcessFailedException(Base.Process[Process(`/opt/julia/bin/julia -Cnative -J/opt/julia/lib/julia/sys.so -g1 --code-coverage=none --color=no --compiled-modules=yes --check-bounds=yes --inline=yes --startup-file=no --track-allocation=none --eval 'append!(empty!(Base.DEPOT_PATH), ["/home/pkgeval/.julia", "/opt/julia/local/share/julia", "/opt/julia/share/julia", "/usr/local/share/julia"])
append!(empty!(Base.DL_LOAD_PATH), String[])

cd("/home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test")
append!(empty!(ARGS), String[])
include("/home/pkgeval/.julia/packages/AugmentedGaussianProcesses/8kAgJ/test/runtests.jl")
'`, ProcessExited(1))])
ERROR: Package AugmentedGaussianProcesses errored during testing
Stacktrace:
 [1] pkgerror(::String, ::Vararg{String,N} where N) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Types.jl:54
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/Operations.jl:1475
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:313
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:300
 [5] #test#68 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [6] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:294 [inlined]
 [7] #test#67 at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [8] test at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:293 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [10] test(::String) at /workspace/srcdir/usr/share/julia/stdlib/v1.4/Pkg/src/API.jl:292
 [11] top-level scope at none:12
