Julia Version 1.4.0-DEV.596
Commit 1c87f695be (2019-12-12 22:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia

 Resolving package versions...
 Installed TransformUtils ─ v0.2.2
  Updating `~/.julia/environments/v1.4/Project.toml`
  [9b8138ad] + TransformUtils v0.2.2
  Updating `~/.julia/environments/v1.4/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.2
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [de0858da] + Printf 
  [9abbd945] + Profile 
  [9a3f8284] + Random 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [8dfed614] + Test 
  [4ec0a83e] + Unicode 
   Testing TransformUtils
Status `/tmp/jl_zivcKb/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.2
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [de0858da] Printf  [`@stdlib/Printf`]
  [9abbd945] Profile  [`@stdlib/Profile`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [8dfed614] Test  [`@stdlib/Test`]
  [4ec0a83e] Unicode  [`@stdlib/Unicode`]
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/x61q0/test/runtests.jl:67
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.04327551518907358 -0.12727302193534148; 0.04327551518907358 0.0 -0.021119953530209703; 0.12727302193534148 0.021119953530209703 0.0])
dAA = so3([0.0 0.03792148208471277 0.08707117507310902; -0.03792148208471277 0.0 -0.0749211859505689; -0.08707117507310902 0.0749211859505689 0.0])
dAA = so3([0.0 -0.026154053443927985 -0.14636925367091408; 0.026154053443927985 0.0 -0.03231351397819502; 0.14636925367091408 0.03231351397819502 0.0])
dAA = Quaternion(0.9947855176514983, [-0.020850311433333484, -0.055599000078426886, -0.08292038093407904])
dAA = SO3([0.9969812217728568 0.05906731312059038 0.050393411801698866; -0.054222624700622085 0.9942244299391921 -0.09261581874962678; -0.05557292868723907 0.08960376907698896 0.9944258716286097])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.972028440313702 0.11359624220011165 0.2055641140358053; -0.07313430090047109 0.9781323499491618 -0.19470100157608322; -0.22318621205870076 0.17422112311928248 0.9590802442996855]), [0.211199535302097, -1.2727302193534147, 0.4327551518907357])
xj = SE3(SO3([0.8772923036834687 0.40511472819906563 -0.25737185334443585; -0.38240001582334215 0.9140414905821524 0.13527150990753598; 0.290049033434108 -0.020253653758128244 0.9567974434086797]), [0.3231351397819502, -1.4636925367091407, 0.2615405344392798])
Dx = SE3(SO3([0.8159846823867797 0.3314555882543219 -0.47360974559770996; -0.22384804872380848 0.9365444476124788 0.2697712896673417; 0.5329737790855096 -0.1141126227076512 0.8384016102955025]), [0.16098322853433794, -0.2039001591364158, -0.10401805931660646])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
   Testing TransformUtils tests passed 
