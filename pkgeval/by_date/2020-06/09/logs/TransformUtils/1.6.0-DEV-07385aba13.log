Julia Version 1.6.0-DEV.192
Commit 07385aba13 (2020-06-08 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_vt4i2c/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_vt4i2c/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.059329859070051096 -0.0035793826393203908; -0.059329859070051096 0.0 -0.05364126940905776; 0.0035793826393203908 0.05364126940905776 0.0])
dAA = so3([0.0 0.04864413957813208 0.06261478339719777; -0.04864413957813208 0.0 -0.07609945061243324; -0.06261478339719777 0.07609945061243324 0.0])
dAA = so3([0.0 0.062272843412593454 -0.17619993680738155; -0.062272843412593454 0.0 0.05330693903956316; 0.17619993680738155 -0.05330693903956316 0.0])
dAA = Quaternion(0.998198842735713, [0.01658183051056076, -0.003709890692750909, 0.05753564085895274])
dAA = SO3([0.9907540739808123 -0.07972671492933553 -0.10977256404493907; 0.0884469905080004 0.9931001814431193 0.07700103562759385; 0.10287611365376059 -0.08599814267890184 0.9909696386344429])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9804768296011913 0.13488314025865772 0.14307943629033357; -0.10528906871956716 0.9746681478779875 -0.19732261279503616; -0.1660704628263636 0.17840554920197066 0.9698412557684791]), [0.5364126940905776, -0.03579382639320391, -0.5932985907005109])
xj = SE3(SO3([0.9587118878571198 -0.28415532674689453 -0.011281239417852694; 0.28226677061795913 0.955667608247998 -0.08381463327163924; 0.03459748959600611 0.07716976627486011 0.9964175033020736]), [-0.5330693903956316, -1.7619993680738155, -0.6227284341259345])
Dx = SE3(SO3([0.9045295657884384 -0.39204468516244195 -0.16771174511781028; 0.4106028846955662 0.9068985294592703 0.09455330953643173; 0.11502841255211282 -0.15438919036154886 0.9812912117232306]), [-0.8619644018916369, -1.8319831075516753, 0.15905621763000877])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
