Julia Version 1.6.0-DEV.203
Commit 4e2fb5c72c (2020-06-09 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_DEmTXE/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_DEmTXE/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.12221154091651487 0.10068016413008928; -0.12221154091651487 0.0 0.046155837294264486; -0.10068016413008928 -0.046155837294264486 0.0])
dAA = so3([0.0 0.15932574530393936 0.051045806386470195; -0.15932574530393936 0.0 -0.00019469084784235675; -0.051045806386470195 0.00019469084784235675 0.0])
dAA = so3([0.0 0.024773281187951614 0.00828071931135439; -0.024773281187951614 0.0 0.16555416441703671; -0.00828071931135439 -0.16555416441703671 0.0])
dAA = Quaternion(0.9944917599486678, [-0.022466568560507418, -0.10129245304668215, -0.014873857841964872])
dAA = SO3([0.992342386652227 0.117682237559649 0.03751637797438586; -0.11231185434462569 0.9860977634864305 -0.12246325253206293; -0.05140656599145898 0.11731194231626453 0.9917637184142964])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9137978545142205 0.38683260991043344 0.12383058182488646; -0.38677139671147576 0.9218224526977064 -0.025519647102560262; -0.12402164234947746 -0.024574328317726435 0.9919751683468043]), [-0.46155837294264485, 1.0068016413008927, -1.2221154091651487])
xj = SE3(SO3([0.8714730208042889 0.08748485624261068 -0.4825776351411833; -0.03456522365828873 0.9924709963373357 0.11750134783324219; 0.48922389488218965 -0.08571885065366798 0.8679356308614794]), [-1.655541644170367, 0.08280719311354391, -0.24773281187951612])
Dx = SE3(SO3([0.7490446655900495 -0.29328492687366114 -0.5940673704385742; 0.29322883523981214 0.9508305265219685 -0.0996903205825862; 0.5940950590057066 -0.09952518024433302 0.798214131272016]), [-0.8545292582868066, -1.3375752913583183, 0.8422917100537681])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
