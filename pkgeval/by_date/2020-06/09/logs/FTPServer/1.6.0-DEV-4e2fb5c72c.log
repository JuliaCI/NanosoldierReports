Julia Version 1.6.0-DEV.203
Commit 4e2fb5c72c (2020-06-09 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed VersionParsing ─ v1.2.0
  Installed Libiconv_jll ─── v1.16.0+2
  Installed Mocking ──────── v0.7.1
  Installed Zlib_jll ─────── v1.2.11+10
  Installed EzXML ────────── v1.1.0
  Installed Conda ────────── v1.4.1
  Installed FTPServer ────── v0.3.0
  Installed Memento ──────── v1.1.0
  Installed ExprTools ────── v0.1.1
  Installed RecipesBase ──── v1.0.1
  Installed Syslogs ──────── v0.3.0
  Installed MacroTools ───── v0.5.5
  Installed Parsers ──────── v1.0.5
  Installed XML2_jll ─────── v2.9.9+4
  Installed PyCall ───────── v1.91.4
  Installed TimeZones ────── v1.2.0
  Installed JSON ─────────── v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [9c2b0ca7] + FTPServer v0.3.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [8f4d0f93] + Conda v1.4.1
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [9c2b0ca7] + FTPServer v0.3.0
  [682c06a0] + JSON v0.21.0
  [94ce4f54] + Libiconv_jll v1.16.0+2
  [1914dd2f] + MacroTools v0.5.5
  [f28f55f0] + Memento v1.1.0
  [78c3b35d] + Mocking v0.7.1
  [69de0a69] + Parsers v1.0.5
  [438e738f] + PyCall v1.91.4
  [3cdcf5f2] + RecipesBase v1.0.1
  [cea106d9] + Syslogs v0.3.0
  [f269a46b] + TimeZones v1.2.0
  [81def892] + VersionParsing v1.2.0
  [02c8fc9c] + XML2_jll v2.9.9+4
  [83775a58] + Zlib_jll v1.2.11+10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building TimeZones → `~/.julia/packages/TimeZones/OjMoF/deps/build.log`
   Building PyCall ───→ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
    Testing FTPServer
Status `/tmp/jl_61T8K5/Project.toml`
  [8f4d0f93] Conda v1.4.1
  [01fcc997] FTPClient v1.1.0
  [9c2b0ca7] FTPServer v0.3.0
  [f28f55f0] Memento v1.1.0
  [438e738f] PyCall v1.91.4
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_61T8K5/Manifest.toml`
  [8f4d0f93] Conda v1.4.1
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [01fcc997] FTPClient v1.1.0
  [9c2b0ca7] FTPServer v0.3.0
  [682c06a0] JSON v0.21.0
  [b27032c2] LibCURL v0.6.0
  [deac9b47] LibCURL_jll v7.70.0+0
  [29816b5a] LibSSH2_jll v1.9.0+1
  [94ce4f54] Libiconv_jll v1.16.0+2
  [1914dd2f] MacroTools v0.5.5
  [c8ffd9c3] MbedTLS_jll v2.16.0+2
  [f28f55f0] Memento v1.1.0
  [78c3b35d] Mocking v0.7.1
  [14a3606d] MozillaCACerts_jll v2020.0.0-01-01+0
  [69de0a69] Parsers v1.0.5
  [438e738f] PyCall v1.91.4
  [3cdcf5f2] RecipesBase v1.0.1
  [cea106d9] Syslogs v0.3.0
  [f269a46b] TimeZones v1.2.0
  [30578b45] URIParser v0.4.1
  [81def892] VersionParsing v1.2.0
  [02c8fc9c] XML2_jll v2.9.9+4
  [83775a58] Zlib_jll v1.2.11+10
  [8e850ede] nghttp2_jll v1.40.0+0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package OpenSSL.crypto could not be found by pyimport. Usually this means
that you did not install OpenSSL.crypto in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the OpenSSL.crypto module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the OpenSSL.crypto module, you can use `pyimport_conda("OpenSSL.crypto", PKG)`,
where PKG is the Anaconda package the contains the module OpenSSL.crypto,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'OpenSSL'",)

Stacktrace:
 [1] pyimport(::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
 [2] pyimport_conda(::String, ::String, ::String) at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
 [3] pyimport_conda at /home/pkgeval/.julia/packages/PyCall/zqDXB/src/PyCall.jl:693 [inlined]
 [4] __init__() at /home/pkgeval/.julia/packages/FTPServer/6sox7/src/FTPServer.jl:33
 [5] _include_from_serialized(::String, ::Array{Any,1}) at ./loading.jl:697
 [6] _require_from_serialized(::String) at ./loading.jl:749
 [7] _require(::Base.PkgId) at ./loading.jl:1040
 [8] require(::Base.PkgId) at ./loading.jl:928
 [9] require(::Module, ::Symbol) at ./loading.jl:923
 [10] include(::String) at ./client.jl:444
 [11] top-level scope at none:6
during initialization of module FTPServer
in expression starting at /home/pkgeval/.julia/packages/FTPServer/6sox7/test/runtests.jl:2
ERROR: Package FTPServer errored during testing
Stacktrace:
 [1] pkgerror(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
 [2] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1561
 [3] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:327
 [4] test(::Pkg.Types.Context, ::Array{Pkg.Types.PackageSpec,1}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:314
 [5] #test#61 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [6] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
 [7] #test#60 at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [8] test at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
 [9] test(::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(::String) at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope at none:16
