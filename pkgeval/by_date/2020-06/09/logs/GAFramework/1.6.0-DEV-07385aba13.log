Julia Version 1.6.0-DEV.192
Commit 07385aba13 (2020-06-08 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_6BfcPp/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_6BfcPp/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723331236626267
curgen: 20 fitness: 0.21723331236626267
curgen: 30 fitness: 0.21723331236626267
curgen: 40 fitness: 0.21723331236626267
curgen: 50 fitness: 0.21723362796910373
CoordinateCreature{Array{Float64,1}}([-0.22255049683055256], -0.21723362796910373) -0.22255049683055256 -0.21723362796910373
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2581339816880637
curgen: 100 fitness: 3.258195552753781
curgen: 150 fitness: 3.258195552753781
curgen: 200 fitness: 3.2582093890052923
curgen: 250 fitness: 3.258458651162941
curgen: 300 fitness: 3.2584711555481216
curgen: 350 fitness: 3.2584711555481216
curgen: 400 fitness: 3.2584711555481216
curgen: 450 fitness: 3.2584711555481216
curgen: 500 fitness: 3.258479294023179
CoordinateCreature{Array{Float64,1}}([-0.22270255963155136, -0.22220994176828146, -0.22254616252489376, 0.2222463944852472, 0.2226613775419875, -0.22240688471390777, -0.22275173548660918, -0.22254212999940073, 0.22258040090977055, -0.22227128360455095, 0.22234471557387364, -0.22251319082622556, 0.22241254500699834, -0.22239462323816733, -0.22286648771491813], -3.258479294023179) [-0.22270255963155136, -0.22220994176828146, -0.22254616252489376, 0.2222463944852472, 0.2226613775419875, -0.22240688471390777, -0.22275173548660918, -0.22254212999940073, 0.22258040090977055, -0.22227128360455095, 0.22234471557387364, -0.22251319082622556, 0.22241254500699834, -0.22239462323816733, -0.22286648771491813] -3.258479294023179
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0029508668358744217
curgen: 100 fitness: -0.0014796360039497358
curgen: 150 fitness: -0.0014796360039497358
curgen: 200 fitness: -0.0013401583677250528
curgen: 250 fitness: -0.0013401583677250528
curgen: 300 fitness: -0.0005337141116967814
curgen: 350 fitness: -0.00030483020415772444
curgen: 400 fitness: -0.00030483020415772444
curgen: 450 fitness: -0.00030483020415772444
curgen: 500 fitness: -0.00030483020415772444
CoordinateCreature{Array{Float64,1}}([2.9700325114506297e-5, 0.0004233550186196894, 4.807883977471679e-5, -0.00036207411611754396, 0.00010146144530180558, -9.314624778791053e-5, -0.0007741858751776796, 0.00039135560657101084, 0.00016648413589933925, 0.00030596908402336467, 6.158586594147825e-5, 0.000246897453157029, -0.00045818462598784613, 0.00011372014914804216, 0.0002062531241117841], 0.00030483020415772444) [2.9700325114506297e-5, 0.0004233550186196894, 4.807883977471679e-5, -0.00036207411611754396, 0.00010146144530180558, -9.314624778791053e-5, -0.0007741858751776796, 0.00039135560657101084, 0.00016648413589933925, 0.00030596908402336467, 6.158586594147825e-5, 0.000246897453157029, -0.00045818462598784613, 0.00011372014914804216, 0.0002062531241117841] 0.00030483020415772444
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
