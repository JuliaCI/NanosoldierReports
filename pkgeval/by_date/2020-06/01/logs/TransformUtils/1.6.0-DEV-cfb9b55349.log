Julia Version 1.6.0-DEV.139
Commit cfb9b55349 (2020-06-01 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_AD6PDD/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_AD6PDD/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.021788089000390858 0.06542880496622563; -0.021788089000390858 0.0 0.05985346993570015; -0.06542880496622563 -0.05985346993570015 0.0])
dAA = so3([0.0 0.010655399952989537 -0.08168740448410043; -0.010655399952989537 0.0 0.04703987720213524; 0.08168740448410043 -0.04703987720213524 0.0])
dAA = so3([0.0 -0.024583261718437676 -0.02295952117573748; 0.024583261718437676 0.0 -0.06114907039342965; 0.02295952117573748 0.06114907039342965 0.0])
dAA = Quaternion(0.9990946916086731, [-0.00822642291162201, 0.036860810844158196, 0.019580699409384172])
dAA = SO3([0.9993765732564143 -0.035039976250789896 -0.004320288255556801; 0.03471234607862294 0.9975403771861447 -0.060895393200488424; 0.006443435107528628 0.06070746204271976 0.9981348036194045])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9788918088188158 0.038341330130232665 -0.20075051439852268; -0.01443764922925069 0.99276436059294 0.11920771208786779; 0.20386853830878385 -0.11379308740136801 0.9723624593470814]), [-0.5985346993570014, 0.6542880496622563, -0.21788089000390856])
xj = SE3(SO3([0.9782839085919431 -0.09933059337322472 0.18191763908481678; 0.09239821423137984 0.9946490378938484 0.046215380813035015; -0.18553480589076166 -0.028402898390215266 0.9822271179142391]), [0.6114907039342965, -0.2295952117573748, 0.24583261718437674])
Dx = SE3(SO3([0.9184753821310732 -0.11738475551203142 0.3776556521390354; 0.15035093875448663 0.9868757025454846 -0.058914709037733395; -0.36578349830852686 0.11089259172161497 0.924069946198035]), [1.2917817471370343, -0.8838612090611744, 0.1026186827894567])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
