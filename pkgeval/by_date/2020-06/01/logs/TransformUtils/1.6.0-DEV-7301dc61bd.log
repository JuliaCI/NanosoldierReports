Julia Version 1.6.0-DEV.137
Commit 7301dc61bd (2020-05-30 15:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_fSKHgD/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_fSKHgD/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.12305687529443853 -0.06782538558105612; -0.12305687529443853 0.0 -0.05563523513801122; 0.06782538558105612 0.05563523513801122 0.0])
dAA = so3([0.0 0.11889747255723837 -0.06841192222431246; -0.11889747255723837 0.0 -0.09755945265454471; 0.06841192222431246 0.09755945265454471 0.0])
dAA = so3([0.0 -0.08234905044570445 0.06288055547584208; 0.08234905044570445 0.0 0.05971590920333393; -0.06288055547584208 -0.05971590920333393 0.0])
dAA = Quaternion(0.9937349154861018, [-0.10084311582203426, -0.040301854529233364, 0.02640727658503608])
dAA = SO3([0.9930522921472096 -0.027067261919579526 0.11451859409436631; 0.02366643793186831 0.9992406166075798 0.03095302630310932; -0.11526944424603762 -0.028027726520016432 0.9929387704029533])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9420601787849778 0.2679968345261337 -0.2017431937676899; -0.30909879374587673 0.9271642929216701 -0.21171752321407727; 0.13030945956629372 0.26180922561099995 0.9562820578325775]), [0.5563523513801122, -0.6782538558105612, -1.2305687529443852])
xj = SE3(SO3([0.9717020244087022 -0.09749954244235555 -0.21514882054884982; 0.19065652334439212 0.8614472050499014 0.4707003325024771; 0.1394462830851333 -0.4983999921099966 0.855658916857936]), [-0.5971590920333393, 0.6288055547584208, 0.8234905044570445])
Dx = SE3(SO3([0.874641251242005 -0.42306896196107924 -0.2366755903150874; 0.4736913106905264 0.6420878040382965 0.6027767365132544; -0.10304961815606753 -0.6393245696283331 0.7620005714351108]), [-1.22302433202454, 1.4404930623217025, 1.920245715120386])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
