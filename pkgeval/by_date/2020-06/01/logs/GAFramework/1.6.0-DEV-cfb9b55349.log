Julia Version 1.6.0-DEV.139
Commit cfb9b55349 (2020-06-01 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_GHuRdd/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_GHuRdd/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723265196132166
curgen: 20 fitness: 0.21723265196132166
curgen: 30 fitness: 0.21723265196132166
curgen: 40 fitness: 0.21723265196132166
curgen: 50 fitness: 0.21723265196132166
CoordinateCreature{Array{Float64,1}}([-0.22269670867564803], -0.21723265196132166) -0.22269670867564803 -0.21723265196132166
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578791571916956
curgen: 100 fitness: 3.2579733710779704
curgen: 150 fitness: 3.2581843838348368
curgen: 200 fitness: 3.2582114696173536
curgen: 250 fitness: 3.258262300465659
curgen: 300 fitness: 3.2583772346826945
curgen: 350 fitness: 3.2584331328788934
curgen: 400 fitness: 3.258439143011458
curgen: 450 fitness: 3.2584492757799683
curgen: 500 fitness: 3.2584492757799683
CoordinateCreature{Array{Float64,1}}([0.2218695871988969, 0.22233077420392217, 0.22238367558988642, -0.22261688140089, -0.22202447438942485, -0.22245350616665213, 0.22279729379453692, -0.2224894114182232, 0.2222332266348075, -0.22215971192826703, -0.222441458419739, -0.2226166823714827, 0.2226121325902826, 0.22252830087349385, -0.2222597680951922], -3.2584492757799683) [0.2218695871988969, 0.22233077420392217, 0.22238367558988642, -0.22261688140089, -0.22202447438942485, -0.22245350616665213, 0.22279729379453692, -0.2224894114182232, 0.2222332266348075, -0.22215971192826703, -0.222441458419739, -0.2226166823714827, 0.2226121325902826, 0.22252830087349385, -0.2222597680951922] -3.2584492757799683
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002301128507468775
curgen: 100 fitness: -0.0022884293032916503
curgen: 150 fitness: -0.002269079865072854
curgen: 200 fitness: -0.001972142007275579
curgen: 250 fitness: -0.001972142007275579
curgen: 300 fitness: -0.0017273038743610414
curgen: 350 fitness: -0.001316369429559927
curgen: 400 fitness: -0.0012884683595757451
curgen: 450 fitness: -0.0009747694952579877
curgen: 500 fitness: -0.00096057026098606
CoordinateCreature{Array{Float64,1}}([-0.0002209993890662505, -0.0018121120323137893, 0.0001624173472108428, 4.668375695758228e-5, -9.785591278240423e-5, 0.0002038676550419864, -0.00026627095627987374, 0.0002355115828507866, -0.00018244720349308195, -0.0004586253800424793, -0.00012281471434097456, -0.0005078752968437012, -0.0008591237667903459, -9.566347374608644e-6, -0.00021984348986093215], 0.00096057026098606) [-0.0002209993890662505, -0.0018121120323137893, 0.0001624173472108428, 4.668375695758228e-5, -9.785591278240423e-5, 0.0002038676550419864, -0.00026627095627987374, 0.0002355115828507866, -0.00018244720349308195, -0.0004586253800424793, -0.00012281471434097456, -0.0005078752968437012, -0.0008591237667903459, -9.566347374608644e-6, -0.00021984348986093215] 0.00096057026098606
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
