Julia Version 1.6.0-DEV.137
Commit 7301dc61bd (2020-05-30 15:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_CX4Xc1/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_CX4Xc1/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723102524663757
curgen: 20 fitness: 0.21723102524663757
curgen: 30 fitness: 0.21723102524663757
curgen: 40 fitness: 0.21723102524663757
curgen: 50 fitness: 0.2172331379534073
CoordinateCreature{Array{Float64,1}}([0.22265341489654897], -0.2172331379534073) 0.22265341489654897 -0.2172331379534073
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2583225288917363
curgen: 100 fitness: 3.2583896183306993
curgen: 150 fitness: 3.2583955219739273
curgen: 200 fitness: 3.2583955219739273
curgen: 250 fitness: 3.2584449859733393
curgen: 300 fitness: 3.258451585364906
curgen: 350 fitness: 3.258461895365513
curgen: 400 fitness: 3.258461895365513
curgen: 450 fitness: 3.2584640509051797
curgen: 500 fitness: 3.2584659424172995
CoordinateCreature{Array{Float64,1}}([-0.22259316151523972, 0.2225603671932745, -0.22297570620612037, 0.2226003478002605, 0.22261471960210116, 0.22252556332080214, 0.22271560279265928, -0.22262380224992206, 0.22253592665056499, -0.22304003908380177, -0.22302497763466567, 0.22280690847383613, -0.22274118585208488, 0.2227661210437748, 0.2227016948250404], -3.2584659424172995) [-0.22259316151523972, 0.2225603671932745, -0.22297570620612037, 0.2226003478002605, 0.22261471960210116, 0.22252556332080214, 0.22271560279265928, -0.22262380224992206, 0.22253592665056499, -0.22304003908380177, -0.22302497763466567, 0.22280690847383613, -0.22274118585208488, 0.2227661210437748, 0.2227016948250404] -3.2584659424172995
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0010965421000719289
curgen: 100 fitness: -0.0010774040694343512
curgen: 150 fitness: -0.0010774040694343512
curgen: 200 fitness: -0.0010774040694343512
curgen: 250 fitness: -0.0010774040694343512
curgen: 300 fitness: -0.0010448264773970095
curgen: 350 fitness: -0.0010448264773970095
curgen: 400 fitness: -0.00076161399468333
curgen: 450 fitness: -0.00076161399468333
curgen: 500 fitness: -0.00076161399468333
CoordinateCreature{Array{Float64,1}}([0.00023936035779799044, 0.0009163350583615507, -1.8164806038182754e-5, 4.671899154860999e-5, -0.00019171813484086372, -0.0008657845319835419, -0.00022668331505524067, 0.0008201717582746997, -0.00047114948341620087, -0.0005448920801156467, 0.00014369482434065627, 9.162188307499627e-5, 4.6515968674603655e-5, -0.0009365528525958609, 4.281681696428614e-5], 0.00076161399468333) [0.00023936035779799044, 0.0009163350583615507, -1.8164806038182754e-5, 4.671899154860999e-5, -0.00019171813484086372, -0.0008657845319835419, -0.00022668331505524067, 0.0008201717582746997, -0.00047114948341620087, -0.0005448920801156467, 0.00014369482434065627, 9.162188307499627e-5, 4.6515968674603655e-5, -0.0009365528525958609, 4.281681696428614e-5] 0.00076161399468333
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
