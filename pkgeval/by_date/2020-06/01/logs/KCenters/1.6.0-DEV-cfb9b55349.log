Julia Version 1.6.0-DEV.139
Commit cfb9b55349 (2020-06-01 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed MLDataUtils ───────────────── v0.5.1
  Installed OrderedCollections ────────── v1.2.0
  Installed DataStructures ────────────── v0.17.17
  Installed Parsers ───────────────────── v1.0.4
  Installed Compat ────────────────────── v3.10.0
  Installed DataFrames ────────────────── v0.20.2
  Installed JSON ──────────────────────── v0.21.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataPattern ─────────────── v0.5.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_qQK8Tk/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_qQK8Tk/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9323044313987097
[ Info: 0.8307796732584636
[ Info: 0.5531853482623895
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3223144766439994
mean(cdnet.distances) = 0.3944745982935031
mean(crand.distances) = 0.3237470307201147
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8461370226995234,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.4453125,"distances_sum":2280.024302358056}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.751953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.751953125,"f1":0.8461370226995234,"seconds":6.562098860740662e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.4453125,"distances_sum":2280.024302358056}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.927317994505495,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.6796875,"distances_sum":2820.304898879052}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.927317994505495,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.6796875,"distances_sum":2820.304898879052}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.952483974358975,"seconds":6.6962093114852905e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.921875,"distances_sum":3020.5939595214068}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9653159340659344,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.921875,"distances_sum":3146.561566449763}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9653159340659344,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.921875,"distances_sum":3146.561566449763}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.939453125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.939453125,"f1":0.9653159340659344,"seconds":7.458031177520752e-6,"exhaustive_search_seconds":1.6335397958755493e-6,"evaluations":8.921875,"distances_sum":3146.561566449763}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6455078125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6455078125,"f1":0.7743230727605735,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7890625,"distances_sum":1715.4714526260068}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6455078125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6455078125,"f1":0.7743230727605735,"seconds":4.507601261138916e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7890625,"distances_sum":1715.4714526260068}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.782199571262072,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7265625,"distances_sum":1765.4744802123876}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.782199571262072,"seconds":4.4833868741989136e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.7265625,"distances_sum":1765.4744802123876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8565252455877463,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.828125,"distances_sum":2112.9207915187103}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8483121045621054,"seconds":5.686655640602112e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.8671875,"distances_sum":2027.1005786090923}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8565252455877463,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.828125,"distances_sum":2112.9207915187103}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.759765625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.759765625,"f1":0.8565252455877463,"seconds":4.887580871582031e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":7.828125,"distances_sum":2112.9207915187103}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4345703125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4345703125,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.046875,"distances_sum":1021.9262008817091}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7795215201465209,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.59375,"distances_sum":1760.070845825335}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7795215201465209,"seconds":4.723668098449707e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.59375,"distances_sum":1760.070845825335}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9523122710622717,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.78125,"distances_sum":2848.648409935489}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9523122710622717,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.78125,"distances_sum":2848.648409935489}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9523122710622717,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.78125,"distances_sum":2848.648409935489}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9523122710622717,"seconds":6.2193721532821655e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.78125,"distances_sum":2848.648409935489}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3837890625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3837890625,"f1":null,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":6.015625,"distances_sum":1048.8546413124614}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2236328125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2236328125,"f1":null,"seconds":3.591179847717285e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":5.484375,"distances_sum":607.5759992297588}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.712890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.712890625,"f1":0.8199597277722286,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8046875,"distances_sum":2022.7187844296416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.712890625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.712890625,"f1":0.8199597277722286,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":7.8046875,"distances_sum":2022.7187844296416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8980972152847163,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.421875,"distances_sum":2371.47184909901}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9083884865134874,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5234375,"distances_sum":2437.779670300633}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9034715284715293,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.4609375,"distances_sum":2379.7616894810676}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.84375,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.84375,"f1":0.9083884865134874,"seconds":5.768612027168274e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.5234375,"distances_sum":2437.779670300633}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9296417124542132,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":2606.9721375854288}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659347,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7578125,"distances_sum":2833.293012411602}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508814102564109,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7421875,"distances_sum":2804.482793775317}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":11,"bsize":8}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9426630661005666,"seconds":5.7220458984375e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.609375,"distances_sum":2804.5972767415296}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9189453125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659347,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7578125,"distances_sum":2833.293012411602}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9189453125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9189453125,"f1":0.9543784340659347,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.3206154108047485e-6,"evaluations":8.7578125,"distances_sum":2833.293012411602}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8644261988011998,"seconds":5.2228569984436035e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.234375,"distances_sum":2097.2955421640922}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.80078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.80078125,"f1":0.882916042291043,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.40625,"distances_sum":2186.5334078634964}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.80078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.80078125,"f1":0.882916042291043,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.40625,"distances_sum":2186.5334078634964}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9571116383616386,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2771.4852251216957}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9556261446886449,"seconds":5.997717380523682e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8828125,"distances_sum":2745.379033918937}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9114869505494514,"seconds":7.495284080505371e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.5390625,"distances_sum":2378.459173434508}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9296989468864479,"seconds":5.951151251792908e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.71875,"distances_sum":2553.277653933676}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552140567765571,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8515625,"distances_sum":2741.8571390463153}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9571116383616386,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.875,"distances_sum":2771.4852251216957}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644745879120884,"seconds":6.161630153656006e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.921875,"distances_sum":2823.6639436359096}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9731971153846155,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2886.8643473485095}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9752804487179491,"seconds":6.32554292678833e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9453125,"distances_sum":2916.9564077544524}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9697265625, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.9697265625,"f1":0.9834649725274727,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.984375,"distances_sum":2994.6670663278032}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9676167582417585,"seconds":6.360933184623718e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.8984375,"distances_sum":2861.208628538887}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9755036630036633,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9375,"distances_sum":2918.854229741464}, best_list's length: 13, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638221153846158,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.9140625,"distances_sum":2814.01934499285}, best_list's length: 14, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9697265625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9834649725274727,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.984375,"distances_sum":2994.6670663278032}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9697265625,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.9697265625,"f1":0.9834649725274727,"seconds":6.433576345443726e-6,"exhaustive_search_seconds":1.4062970876693726e-6,"evaluations":8.984375,"distances_sum":2994.6670663278032}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2783203125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2783203125,"f1":null,"seconds":4.034489393234253e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.734375,"distances_sum":713.5788889278546}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.580078125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.580078125,"f1":null,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.1953125,"distances_sum":1494.3433701273448}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.580078125,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.580078125,"f1":null,"seconds":4.461035132408142e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.1953125,"distances_sum":1494.3433701273448}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9006243756243764,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5859375,"distances_sum":2411.829385062278}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8291015625,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8291015625,"f1":0.9006243756243764,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5859375,"distances_sum":2411.829385062278}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9630952380952384,"seconds":7.599592208862305e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9296875,"distances_sum":2894.4009946968376}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9480170870795877,"seconds":6.258487701416016e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8046875,"distances_sum":2791.1940968241042}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627461080586085,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.890625,"distances_sum":2892.470436636087}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627461080586085,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.890625,"distances_sum":2892.470436636087}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.93359375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9627461080586085,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.890625,"distances_sum":2892.470436636087}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4296875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4296875,"f1":null,"seconds":4.2673200368881226e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":6.359375,"distances_sum":960.1745321197324}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5830078125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5830078125,"f1":0.7213054306804313,"seconds":4.548579454421997e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":7.4140625,"distances_sum":1486.4664049710939}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8635760073260083,"seconds":7.230788469314575e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.3359375,"distances_sum":2107.735879523703}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.771484375,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.771484375,"f1":0.8635760073260083,"seconds":7.230788469314575e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.3359375,"distances_sum":2107.735879523703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8669023684648693,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.3046875,"distances_sum":2179.9870559524497}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599759615384621,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.921875,"distances_sum":2858.4998883818716}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9502117673992682,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.78125,"distances_sum":2782.009549627481}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.908796932234433,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.4609375,"distances_sum":2434.6902850237334}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.9138907967032974,"seconds":5.386769771575928e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.546875,"distances_sum":2495.466607526739}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599759615384621,"seconds":5.727633833885193e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.921875,"distances_sum":2858.4998883818716}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769173534798538,"seconds":6.038695573806763e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.9296875,"distances_sum":3034.6939426636695}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":2,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.984747023809524,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.984375,"distances_sum":3072.465722900595}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":10,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9642570970695974,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.8828125,"distances_sum":2898.2378011450196}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.984747023809524,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.984375,"distances_sum":3072.465722900595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":2,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.984747023809524,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.6652047634124756e-6,"evaluations":8.984375,"distances_sum":3072.465722900595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2421875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2421875,"f1":null,"seconds":3.557652235031128e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.953125,"distances_sum":588.7027096258499}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.412109375,"f1":0.564078282828283,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.765625,"distances_sum":893.5824315270842}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.412109375,"state":{"ssize":2,"bsize":2},"perf":{"precision":1.0,"recall":0.412109375,"f1":0.564078282828283,"seconds":3.729015588760376e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":6.765625,"distances_sum":893.5824315270842}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8562931859806868,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.3125,"distances_sum":1883.4095490225768}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8992705211455219,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6328125,"distances_sum":2177.9249677737876}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8251953125,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.8251953125,"f1":0.8992705211455219,"seconds":5.4407864809036255e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6328125,"distances_sum":2177.9249677737876}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9468838453213457,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6640625,"distances_sum":2591.636498946004}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9598646145521149,"seconds":5.7425349950790405e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8515625,"distances_sum":2685.413402638654}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9349130036630041,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6640625,"distances_sum":2464.545924875956}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025643,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":2750.0100722435695}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9460279304029313,"seconds":5.6158751249313354e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6953125,"distances_sum":2577.8951029128793}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9483891108891115,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.84375,"distances_sum":2589.511378718555}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025643,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":2750.0100722435695}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9703525641025643,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9375,"distances_sum":2750.0100722435695}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.708984375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.708984375,"f1":0.8192654567654577,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.078125,"distances_sum":1683.7445738297572}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6965400918525924,"seconds":4.561617970466614e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.71875,"distances_sum":1241.1526666851162}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.708984375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.708984375,"f1":0.8192654567654577,"seconds":4.7050416469573975e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.078125,"distances_sum":1683.7445738297572}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.957148580586081,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.828125,"distances_sum":2669.3012834094443}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7451171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7451171875,"f1":0.8450008325008335,"seconds":5.315989255905151e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.4296875,"distances_sum":1843.345254594336}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9090144230769237,"seconds":5.5264681577682495e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5234375,"distances_sum":2229.934823670966}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.957148580586081,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.828125,"distances_sum":2669.3012834094443}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9676911630036635,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2707.4478377735145}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9648466117216121,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8984375,"distances_sum":2697.4734417638824}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9641769688644695,"seconds":5.764886736869812e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8203125,"distances_sum":2729.549066555036}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9676911630036635,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2707.4478377735145}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94140625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94140625,"f1":0.9676911630036635,"seconds":6.100162863731384e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2707.4478377735145}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5341796875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5341796875,"f1":0.6785561660561664,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.734375,"distances_sum":1180.117731672729}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5341796875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5341796875,"f1":0.6785561660561664,"seconds":4.5299530029296875e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.734375,"distances_sum":1180.117731672729}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9386504120879127,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6171875,"distances_sum":2579.0444917706423}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8935546875,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8935546875,"f1":0.9386504120879127,"seconds":6.452202796936035e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.6171875,"distances_sum":2579.0444917706423}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9669871794871802,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2789.3844010482208}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669871794871802,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2789.3844010482208}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9669871794871802,"seconds":6.079673767089844e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.84375,"distances_sum":2789.3844010482208}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.376953125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.376953125,"f1":null,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9453125,"distances_sum":872.4087290337966}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.376953125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.376953125,"f1":null,"seconds":4.038214683532715e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":5.9453125,"distances_sum":872.4087290337966}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.90950715950716,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.625,"distances_sum":2413.4818221232017}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7509765625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7509765625,"f1":0.8522664835164844,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.8203125,"distances_sum":1960.380812007314}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.845703125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.845703125,"f1":0.90950715950716,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.625,"distances_sum":2413.4818221232017}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9569425366300373,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2780.698774620586}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9500801282051288,"seconds":5.327165126800537e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.78125,"distances_sum":2748.794435045262}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9459363553113559,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.703125,"distances_sum":2740.0626864344395}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569425366300373,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2780.698774620586}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9569425366300373,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2780.698774620586}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.4609375,"distances_sum":563.2043099566645}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.396484375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.396484375,"f1":null,"seconds":3.6749988794326782e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.609375,"distances_sum":939.9220940325567}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.419921875, conf: {"ssize":2,"bsize":2}, perf: {"precision":1.0,"recall":0.419921875,"f1":0.5738136863136866,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.7734375,"distances_sum":1031.1841225872668}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.419921875,"state":{"ssize":2,"bsize":2},"perf":{"precision":1.0,"recall":0.419921875,"f1":0.5738136863136866,"seconds":3.6079436540603638e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":6.7734375,"distances_sum":1031.1841225872668}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8126332001332008,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":7.515625,"distances_sum":1771.2656140490155}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8427734375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8427734375,"f1":0.9063821595071604,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5390625,"distances_sum":2437.8026428401226}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8427734375,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8427734375,"f1":0.9063821595071604,"seconds":5.48921525478363e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5390625,"distances_sum":2437.8026428401226}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.955677655677656,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.828125,"distances_sum":2848.6755392791224}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.873046875, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.873046875,"f1":0.9259277181152189,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.7734375,"distances_sum":2608.815243122619}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9604624542124548,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8828125,"distances_sum":2871.113911103254}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9315221237096243,"seconds":5.478039383888245e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8125,"distances_sum":2645.1749655133117}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9121056027306033,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.5625,"distances_sum":2468.1291222665186}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604624542124548,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8828125,"distances_sum":2871.113911103254}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9604624542124548,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.1809170246124268e-6,"evaluations":8.8828125,"distances_sum":2871.113911103254}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.224609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.224609375,"f1":null,"seconds":3.127381205558777e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":5.921875,"distances_sum":493.7215815599763}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.390625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.390625,"f1":null,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.453125,"distances_sum":932.8367403305544}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.390625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.390625,"f1":null,"seconds":3.6209821701049805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.453125,"distances_sum":932.8367403305544}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7881722444222453,"seconds":4.481524229049683e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.453125,"distances_sum":1668.2650147876286}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.863007305194806,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0625,"distances_sum":2074.254721700307}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8596559690309697,"seconds":5.600973963737488e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0546875,"distances_sum":2066.6140175494234}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.863007305194806,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0625,"distances_sum":2074.254721700307}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.88671875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.88671875,"f1":0.9351133241758248,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8046875,"distances_sum":2639.622545656964}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9012825715950724,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.5546875,"distances_sum":2373.008277824606}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8544921875, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8544921875,"f1":0.9146379662004668,"seconds":5.3942203521728516e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6875,"distances_sum":2474.8276042498064}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8623046875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8623046875,"f1":0.9196803196803204,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.703125,"distances_sum":2513.930537824312}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9351133241758248,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8046875,"distances_sum":2639.622545656964}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.88671875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.88671875,"f1":0.9351133241758248,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8046875,"distances_sum":2639.622545656964}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5078125,"f1":0.6589029026529032,"seconds":3.9674341678619385e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":6.609375,"distances_sum":1152.6256237806772}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6630859375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6630859375,"f1":0.786331897269398,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0078125,"distances_sum":1527.950866157222}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6630859375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6630859375,"f1":0.786331897269398,"seconds":4.5727938413619995e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.0078125,"distances_sum":1527.950866157222}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9014136904761914,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.34375,"distances_sum":2151.9797279547624}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.9014136904761914,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.34375,"distances_sum":2151.9797279547624}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588770604395609,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2601.6933124512207}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9413404304029309,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.7421875,"distances_sum":2491.831751743867}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588770604395609,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2601.6933124512207}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9588770604395609,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8203125,"distances_sum":2601.6933124512207}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.505859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.505859375,"f1":0.6557447760572765,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.1328125,"distances_sum":1086.7843346884229}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.505859375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.505859375,"f1":0.6557447760572765,"seconds":4.056841135025024e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":7.1328125,"distances_sum":1086.7843346884229}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.9081590284715292,"seconds":5.111098289489746e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.2890625,"distances_sum":2146.3211703107236}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9309809981684988,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7578125,"distances_sum":2333.17817138661}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9308493589743598,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7890625,"distances_sum":2336.313202462629}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9309809981684988,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7578125,"distances_sum":2333.17817138661}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9736607142857149,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9140625,"distances_sum":2660.674787397659}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9326171875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9326171875,"f1":0.9623168498168503,"seconds":5.690380930900574e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8515625,"distances_sum":2578.4749532729684}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9490212912087916,"seconds":5.669891834259033e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8046875,"distances_sum":2485.570787048487}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9327469405594413,"seconds":5.383044481277466e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.7421875,"distances_sum":2369.635710425672}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9526442307692312,"seconds":5.319714546203613e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8359375,"distances_sum":2499.2022569601895}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.951171875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9736607142857149,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9140625,"distances_sum":2660.674787397659}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.951171875,"state":{"ssize":7,"bsize":11},"perf":{"precision":1.0,"recall":0.951171875,"f1":0.9736607142857149,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.9140625,"distances_sum":2660.674787397659}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.357421875, conf: {"ssize":5,"bsize":2}, perf: {"precision":null,"recall":0.357421875,"f1":null,"seconds":3.1869858503341675e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.515625,"distances_sum":769.5943080207104}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.357421875,"state":{"ssize":5,"bsize":2},"perf":{"precision":null,"recall":0.357421875,"f1":null,"seconds":3.1869858503341675e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":5.515625,"distances_sum":769.5943080207104}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8628845113220122,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.0625,"distances_sum":1830.6899911655034}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7734375,"f1":0.8628845113220122,"seconds":4.9173831939697266e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.0625,"distances_sum":1830.6899911655034}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9609947344322347,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2537.937259768445}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9319539835164843,"seconds":5.159527063369751e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5625,"distances_sum":2401.644430111302}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609947344322347,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2537.937259768445}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9296875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9296875,"f1":0.9609947344322347,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2537.937259768445}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6572265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6572265625,"f1":0.7840622918747926,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.296875,"distances_sum":1539.8431341899732}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1904296875, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1904296875,"f1":null,"seconds":2.983957529067993e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":5.2890625,"distances_sum":437.0198015082434}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6960490897990905,"seconds":4.06801700592041e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.0234375,"distances_sum":1236.5435952530388}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6572265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6572265625,"f1":0.7840622918747926,"seconds":4.22261655330658e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.296875,"distances_sum":1539.8431341899732}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9417728105228111,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6015625,"distances_sum":2520.464106284592}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9158341658341665,"seconds":5.120411515235901e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.2578125,"distances_sum":2307.0643498960844}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9420844780219785,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.625,"distances_sum":2565.039432464103}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7587890625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.7587890625,"f1":0.8526695526695534,"seconds":4.777684807777405e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.828125,"distances_sum":1895.2978202477968}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7861839549339558,"seconds":4.583969712257385e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.390625,"distances_sum":1590.214511278581}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8994140625,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.8994140625,"f1":0.9417728105228111,"seconds":5.370005965232849e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6015625,"distances_sum":2520.464106284592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9490384615384622,"seconds":5.152076482772827e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6015625,"distances_sum":2610.549855378235}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9493017399267403,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6640625,"distances_sum":2583.3952298808467}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9498626373626379,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.6640625,"distances_sum":2604.8777631761695}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893778,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2689.752110763204}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9528502747252753,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.75,"distances_sum":2585.9470337054595}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893778,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2689.752110763204}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9679143772893778,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2689.752110763204}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8132487304362312,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.8359375,"distances_sum":1677.3657193101908}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.8132487304362312,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.8359375,"distances_sum":1677.3657193101908}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8707454004329009,"seconds":4.8857182264328e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.1328125,"distances_sum":2054.8835166103427}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8997799075924082,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.140625,"distances_sum":2221.344623225155}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.83203125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.83203125,"f1":0.8997799075924082,"seconds":5.0086528062820435e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.140625,"distances_sum":2221.344623225155}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9348729395604398,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.5625,"distances_sum":2526.7239675585033}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9637477106227111,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7578125,"distances_sum":2708.666519537576}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9498626373626379,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7265625,"distances_sum":2610.1513796984927}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637477106227111,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7578125,"distances_sum":2708.666519537576}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9637477106227111,"seconds":5.509704351425171e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.7578125,"distances_sum":2708.666519537576}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8805725524475532,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.125,"distances_sum":2141.0736577841326}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6999368686868691,"seconds":4.1406601667404175e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":7.6171875,"distances_sum":1292.2857556009365}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8805725524475532,"seconds":5.150213837623596e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.125,"distances_sum":2141.0736577841326}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9599530677655681,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.8515625,"distances_sum":2681.891232989973}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9599530677655681,"seconds":5.608424544334412e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.8515625,"distances_sum":2681.891232989973}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.981959706959707,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9140625,"distances_sum":2842.0888786439436}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.981959706959707,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9140625,"distances_sum":2842.0888786439436}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.981959706959707,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.171603798866272e-6,"evaluations":8.9140625,"distances_sum":2842.0888786439436}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8137060855810864,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.6171875,"distances_sum":1811.6090447758293}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.56640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.56640625,"f1":null,"seconds":4.217028617858887e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.390625,"distances_sum":1311.2481158867126}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7021484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.7021484375,"f1":0.8137060855810864,"seconds":4.490837454795837e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.6171875,"distances_sum":1811.6090447758293}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934071,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2709.849076285321}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9171474358974367,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.359375,"distances_sum":2393.3741046319897}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8455627705627714,"seconds":4.841014742851257e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.90625,"distances_sum":1955.0840447389173}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":8,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8667561605061613,"seconds":5.09992241859436e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0859375,"distances_sum":2060.5298497099902}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8608584124209134,"seconds":4.993751645088196e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.9765625,"distances_sum":2067.0467625416077}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9150390625,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934071,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.7890625,"distances_sum":2709.849076285321}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9619140625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9619140625,"f1":0.979092261904762,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2914.7032086470363}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552343489843492,"seconds":5.457550287246704e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.765625,"distances_sum":2774.8636457810935}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.974015567765568,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.90625,"distances_sum":2875.620657307732}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9619140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.979092261904762,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2914.7032086470363}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9619140625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9619140625,"f1":0.979092261904762,"seconds":5.861744284629822e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2914.7032086470363}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5478515625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5478515625,"f1":0.6902156870906875,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.9765625,"distances_sum":1270.0823957527293}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5478515625,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5478515625,"f1":0.6902156870906875,"seconds":3.933906555175781e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.9765625,"distances_sum":1270.0823957527293}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9078614094239102,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.1875,"distances_sum":2299.922174576299}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8964577089577097,"seconds":5.016103386878967e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.1171875,"distances_sum":2252.6948456093246}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.841796875,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.841796875,"f1":0.9078614094239102,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.1875,"distances_sum":2299.922174576299}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9536286630036638,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.796875,"distances_sum":2665.27494695595}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9282883782883791,"seconds":5.06080687046051e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.5703125,"distances_sum":2498.9317586418288}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.845703125, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.845703125,"f1":0.9109947344322352,"seconds":5.245208740234375e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.203125,"distances_sum":2334.2145467656333}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9392971611721617,"seconds":5.273148417472839e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.6796875,"distances_sum":2602.8946780514443}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9536286630036638,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.796875,"distances_sum":2665.27494695595}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9536286630036638,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.796875,"distances_sum":2665.27494695595}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8701897061272069,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1015625,"distances_sum":1996.4325400948653}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.8126829767454775,"seconds":4.990026354789734e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.078125,"distances_sum":1760.479934990134}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2451171875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2451171875,"f1":null,"seconds":3.3564865589141846e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.4375,"distances_sum":548.1372761336269}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8701897061272069,"seconds":4.915520548820496e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1015625,"distances_sum":1996.4325400948653}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9331761988011992,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.640625,"distances_sum":2499.296997987302}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.857421875,"f1":0.917462225274726,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.3828125,"distances_sum":2338.355672251093}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.950303342490843,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8046875,"distances_sum":2646.6728185671986}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8232421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8232421875,"f1":0.8958707958707967,"seconds":5.034729838371277e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.203125,"distances_sum":2198.7779792088104}, best_list's length: 12, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.81640625,"f1":0.8911661255411263,"seconds":5.0943344831466675e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.25,"distances_sum":2174.6800104818844}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.950303342490843,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8046875,"distances_sum":2646.6728185671986}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9495421245421253,"seconds":5.5693089962005615e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.75,"distances_sum":2655.023491669895}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9586538461538466,"seconds":5.763024091720581e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8671875,"distances_sum":2703.5611624970134}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9643257783882787,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8515625,"distances_sum":2763.3765220843175}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9524782509157513,"seconds":5.559995770454407e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.75,"distances_sum":2682.0043467993182}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9365234375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643257783882787,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8515625,"distances_sum":2763.3765220843175}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9365234375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9365234375,"f1":0.9643257783882787,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.8515625,"distances_sum":2763.3765220843175}}, n: 9
mean(cfft.distances) = 0.3223144763473446
mean(cdnet.distances) = 0.36952542986190395
mean(crand.distances) = 0.34211038018936757
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.9466666666666667
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8666666666666667
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.8755555555555555
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9444444444444445
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9266666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8755555555555555
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.931111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9111111111111111
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9155555555555556
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.9222222222222222
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.9288888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9311111111111111
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8955555555555555
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.86
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9133333333333332
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9155555555555556
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9066666666666667
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.9133333333333333
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 4, 15]]
** centroid: 8, normalized-entropy: 0.7424875695421234, [(2, 4), (3, 15)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 2, 3, 3, 3, 1, 2]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.6234646276632945] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 10, 2]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 10), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [17, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 17, 1]]
** centroid: 7, normalized-entropy: 0.3095434291503252, [(2, 17), (3, 1)]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 1, 6]]
** centroid: 8, normalized-entropy: 0.5916727785823274, [(2, 1), (3, 6)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 13, 2]]
** centroid: 10, normalized-entropy: 0.5665095065529052, [(2, 13), (3, 2)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
finished with 15 centroids; started with 12
acc = 0.9466666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.173504622299336] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.173504622299336, 0.1572851276153827] ***
*** starting iteration: 2; err: [Inf, 0.173504622299336, 0.1572851276153827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.173504622299336, 0.1572851276153827, 0.15313922704614183] ***
*** starting iteration: 3; err: [Inf, 0.173504622299336, 0.1572851276153827, 0.15313922704614183] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.173504622299336, 0.1572851276153827, 0.15313922704614183, 0.14977736671471986] ***
*** finished computation of 7 references, err: [Inf, 0.173504622299336, 0.1572851276153827, 0.15313922704614183, 0.14977736671471986] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 52, 0]]
** centroid: 1, normalized-entropy: 0.9097361225311661, [(1, 108), (2, 52)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 6, 0]]
** centroid: 2, normalized-entropy: 0.4098553703184051, [(1, 67), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [6, 89, 0]]
** centroid: 3, normalized-entropy: 0.3398550782221443, [(1, 6), (2, 89)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 80, 18]]
** centroid: 4, normalized-entropy: 0.6880476235340797, [(2, 80), (3, 18)]
*** center 5: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [58, 16, 0]]
** centroid: 7, normalized-entropy: 0.7531979910695015, [(1, 58), (2, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2188799513889284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2188799513889284, 0.16998441899097574] ***
*** starting iteration: 2; err: [Inf, 0.2188799513889284, 0.16998441899097574] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2188799513889284, 0.16998441899097574, 0.15286839807704872] ***
*** starting iteration: 3; err: [Inf, 0.2188799513889284, 0.16998441899097574, 0.15286839807704872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2188799513889284, 0.16998441899097574, 0.15286839807704872, 0.14839963571795414] ***
*** finished computation of 7 references, err: [Inf, 0.2188799513889284, 0.16998441899097574, 0.15286839807704872, 0.14839963571795414] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [78, 13, 0]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(1, 78), (2, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [115, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [50, 26, 0]]
** centroid: 3, normalized-entropy: 0.9268190639645774, [(1, 50), (2, 26)]
*** center 4: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 55, 0]]
** centroid: 5, normalized-entropy: 0.9594579158386692, [(1, 34), (2, 55)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 114, 17]]
** centroid: 6, normalized-entropy: 0.5568097960715243, [(2, 114), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 34, 0]]
** centroid: 7, normalized-entropy: 0.908476164453323, [(1, 71), (2, 34)]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2568577153543974] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2568577153543974, 0.1841087234374052] ***
*** starting iteration: 2; err: [Inf, 0.2568577153543974, 0.1841087234374052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2568577153543974, 0.1841087234374052, 0.16117228957024338] ***
*** starting iteration: 3; err: [Inf, 0.2568577153543974, 0.1841087234374052, 0.16117228957024338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2568577153543974, 0.1841087234374052, 0.16117228957024338, 0.152955977606407] ***
*** finished computation of 7 references, err: [Inf, 0.2568577153543974, 0.1841087234374052, 0.16117228957024338, 0.152955977606407] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [94, 37, 0]]
** centroid: 1, normalized-entropy: 0.8587579130949384, [(1, 94), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 46, 0]]
** centroid: 2, normalized-entropy: 0.996485989886783, [(1, 40), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 73, 5]]
** centroid: 3, normalized-entropy: 0.34351974100740135, [(2, 73), (3, 5)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 53, 16]]
** centroid: 4, normalized-entropy: 0.7812812090702043, [(2, 53), (3, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [42, 52, 0]]
** centroid: 6, normalized-entropy: 0.9918207974218425, [(1, 42), (2, 52)]
*** center 7: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23388198435491137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445] ***
*** starting iteration: 2; err: [Inf, 0.23388198435491137, 0.21021467982721445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977] ***
*** starting iteration: 3; err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417] ***
*** starting iteration: 4; err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457] ***
*** starting iteration: 5; err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635] ***
*** starting iteration: 6; err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635, 0.18766633864994198] ***
*** starting iteration: 7; err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635, 0.18766633864994198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635, 0.18766633864994198, 0.18660231745681605] ***
*** starting iteration: 8; err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635, 0.18766633864994198, 0.18660231745681605] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635, 0.18766633864994198, 0.18660231745681605, 0.1864006683669492] ***
*** finished computation of 7 references, err: [Inf, 0.23388198435491137, 0.21021467982721445, 0.19953991652622977, 0.19615849904022417, 0.19166053898000457, 0.18944395903928635, 0.18766633864994198, 0.18660231745681605, 0.1864006683669492] ***
*** center 1: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 45, 0]]
** centroid: 2, normalized-entropy: 0.9828586897127057, [(1, 33), (2, 45)]
*** center 3: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 99, 18]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 99), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 56, 0]]
** centroid: 5, normalized-entropy: 0.9957274520849256, [(1, 48), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [74, 43, 0]]
** centroid: 6, normalized-entropy: 0.9487499032694516, [(1, 74), (2, 43)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29404296586848516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29404296586848516, 0.22379743165966273] ***
*** starting iteration: 2; err: [Inf, 0.29404296586848516, 0.22379743165966273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896] ***
*** starting iteration: 3; err: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787] ***
*** starting iteration: 4; err: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787, 0.18732577814222098] ***
*** starting iteration: 5; err: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787, 0.18732577814222098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787, 0.18732577814222098, 0.18492220632167816] ***
*** starting iteration: 6; err: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787, 0.18732577814222098, 0.18492220632167816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787, 0.18732577814222098, 0.18492220632167816, 0.18396313167686784] ***
*** finished computation of 7 references, err: [Inf, 0.29404296586848516, 0.22379743165966273, 0.20008905714927896, 0.1921213837598787, 0.18732577814222098, 0.18492220632167816, 0.18396313167686784] ***
*** center 1: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [68, 38, 0]]
** centroid: 3, normalized-entropy: 0.9414231081869789, [(1, 68), (2, 38)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 90, 17]]
** centroid: 4, normalized-entropy: 0.6316198184485629, [(2, 90), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [22, 47, 0]]
** centroid: 5, normalized-entropy: 0.903116172156872, [(1, 22), (2, 47)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [24, 67, 0]]
** centroid: 7, normalized-entropy: 0.8323322690121193, [(1, 24), (2, 67)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24650938554794] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24650938554794, 0.20517382676527463] ***
*** starting iteration: 2; err: [Inf, 0.24650938554794, 0.20517382676527463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077] ***
*** starting iteration: 3; err: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943] ***
*** starting iteration: 4; err: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943, 0.18185700528914278] ***
*** starting iteration: 5; err: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943, 0.18185700528914278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943, 0.18185700528914278, 0.18067802070721012] ***
*** starting iteration: 6; err: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943, 0.18185700528914278, 0.18067802070721012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943, 0.18185700528914278, 0.18067802070721012, 0.17990754743566043] ***
*** finished computation of 7 references, err: [Inf, 0.24650938554794, 0.20517382676527463, 0.19131212316822077, 0.18562745209922943, 0.18185700528914278, 0.18067802070721012, 0.17990754743566043] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 2, 0]]
** centroid: 1, normalized-entropy: 0.13110652958234514, [(1, 108), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [42, 40, 0]]
** centroid: 2, normalized-entropy: 0.9995708393473225, [(1, 42), (2, 40)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 90, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 41, 0]]
** centroid: 5, normalized-entropy: 0.98460399620868, [(1, 55), (2, 41)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 88, 21]]
** centroid: 7, normalized-entropy: 0.70700406497476, [(2, 88), (3, 21)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24752634141532734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24752634141532734, 0.1929030093215015] ***
*** starting iteration: 2; err: [Inf, 0.24752634141532734, 0.1929030093215015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24752634141532734, 0.1929030093215015, 0.1878321563721686] ***
*** starting iteration: 3; err: [Inf, 0.24752634141532734, 0.1929030093215015, 0.1878321563721686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24752634141532734, 0.1929030093215015, 0.1878321563721686, 0.18739295459172312] ***
*** finished computation of 7 references, err: [Inf, 0.24752634141532734, 0.1929030093215015, 0.1878321563721686, 0.18739295459172312] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [11, 89, 0]]
** centroid: 1, normalized-entropy: 0.49991595816452816, [(1, 11), (2, 89)]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [94, 12, 0]]
** centroid: 4, normalized-entropy: 0.5095157180881823, [(1, 94), (2, 12)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 67, 17]]
** centroid: 5, normalized-entropy: 0.7266645172796352, [(2, 67), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [11, 73, 0]]
** centroid: 7, normalized-entropy: 0.5600443203590992, [(1, 11), (2, 73)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21927379182019066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21927379182019066, 0.19291187474724728] ***
*** starting iteration: 2; err: [Inf, 0.21927379182019066, 0.19291187474724728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747] ***
*** starting iteration: 3; err: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747, 0.18631188920803782] ***
*** starting iteration: 4; err: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747, 0.18631188920803782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747, 0.18631188920803782, 0.18530522414303008] ***
*** starting iteration: 5; err: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747, 0.18631188920803782, 0.18530522414303008] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747, 0.18631188920803782, 0.18530522414303008, 0.18525970642171477] ***
*** finished computation of 7 references, err: [Inf, 0.21927379182019066, 0.19291187474724728, 0.18816739369345747, 0.18631188920803782, 0.18530522414303008, 0.18525970642171477] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 4, 0]]
** centroid: 1, normalized-entropy: 0.22381255513458592, [(1, 107), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 12, 0]]
** centroid: 2, normalized-entropy: 0.5363596511250623, [(1, 86), (2, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 63, 21]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 63), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 6, 0]]
** centroid: 5, normalized-entropy: 0.3347676126777638, [(1, 91), (2, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 81, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 95, 0]]
** centroid: 7, normalized-entropy: 0.14489961753310668, [(1, 2), (2, 95)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3917292300381001] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3917292300381001, 0.3121239926565338] ***
*** starting iteration: 2; err: [Inf, 0.3917292300381001, 0.3121239926565338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3917292300381001, 0.3121239926565338, 0.28651028970821396] ***
*** starting iteration: 3; err: [Inf, 0.3917292300381001, 0.3121239926565338, 0.28651028970821396] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3917292300381001, 0.3121239926565338, 0.28651028970821396, 0.28572449585920695] ***
*** finished computation of 3 references, err: [Inf, 0.3917292300381001, 0.3121239926565338, 0.28651028970821396, 0.28572449585920695] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [86, 126, 18]]
** centroid: 1, normalized-entropy: 0.816390244565417, [(1, 86), (2, 126), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 117, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 117), (2, 117)]
*** center 3: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40796902071198693] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40796902071198693, 0.3100055894162366] ***
*** starting iteration: 2; err: [Inf, 0.40796902071198693, 0.3100055894162366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40796902071198693, 0.3100055894162366, 0.3002749867848996] ***
*** starting iteration: 3; err: [Inf, 0.40796902071198693, 0.3100055894162366, 0.3002749867848996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40796902071198693, 0.3100055894162366, 0.3002749867848996, 0.29865033023521537] ***
*** finished computation of 3 references, err: [Inf, 0.40796902071198693, 0.3100055894162366, 0.3002749867848996, 0.29865033023521537] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 176, 17]]
** centroid: 1, normalized-entropy: 0.43003821249388313, [(2, 176), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [173, 41, 0]]
** centroid: 2, normalized-entropy: 0.7047832687820124, [(1, 173), (2, 41)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [235, 25, 0]]
** centroid: 3, normalized-entropy: 0.45668363153944286, [(1, 235), (2, 25)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.39348146296071373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39348146296071373, 0.32239460920834023] ***
*** starting iteration: 2; err: [Inf, 0.39348146296071373, 0.32239460920834023] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39348146296071373, 0.32239460920834023, 0.30072245350515264] ***
*** starting iteration: 3; err: [Inf, 0.39348146296071373, 0.32239460920834023, 0.30072245350515264] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39348146296071373, 0.32239460920834023, 0.30072245350515264, 0.2980376144723109] ***
*** finished computation of 3 references, err: [Inf, 0.39348146296071373, 0.32239460920834023, 0.30072245350515264, 0.2980376144723109] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [66, 159, 21]]
** centroid: 1, normalized-entropy: 0.7692764922838524, [(1, 66), (2, 159), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [220, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [99, 102, 0]]
** centroid: 3, normalized-entropy: 0.9998393017810486, [(1, 99), (2, 102)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3574515874644423] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3574515874644423, 0.2377996320602716] ***
*** starting iteration: 2; err: [Inf, 0.3574515874644423, 0.2377996320602716] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3574515874644423, 0.2377996320602716, 0.23658482818137128] ***
*** starting iteration: 3; err: [Inf, 0.3574515874644423, 0.2377996320602716, 0.23658482818137128] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3574515874644423, 0.2377996320602716, 0.23658482818137128, 0.23607232083158158] ***
*** finished computation of 3 references, err: [Inf, 0.3574515874644423, 0.2377996320602716, 0.23658482818137128, 0.23607232083158158] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [156, 60, 0]]
** centroid: 1, normalized-entropy: 0.8524051786494784, [(1, 156), (2, 60)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [11, 180, 18]]
** centroid: 2, normalized-entropy: 0.4503815170085837, [(1, 11), (2, 180), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [238, 3, 0]]
** centroid: 3, normalized-entropy: 0.09661748905380377, [(1, 238), (2, 3)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2815578172522328] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926] ***
*** starting iteration: 2; err: [Inf, 0.2815578172522328, 0.2446004417717926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815] ***
*** starting iteration: 3; err: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891] ***
*** starting iteration: 4; err: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912] ***
*** starting iteration: 5; err: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912, 0.23254249236201574] ***
*** starting iteration: 6; err: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912, 0.23254249236201574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912, 0.23254249236201574, 0.23113217315674275] ***
*** starting iteration: 7; err: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912, 0.23254249236201574, 0.23113217315674275] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912, 0.23254249236201574, 0.23113217315674275, 0.23045779706427139] ***
*** finished computation of 3 references, err: [Inf, 0.2815578172522328, 0.2446004417717926, 0.23721831309646815, 0.2354533701982891, 0.23372166496184912, 0.23254249236201574, 0.23113217315674275, 0.23045779706427139] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [131, 67, 0]]
** centroid: 1, normalized-entropy: 0.9232637465337676, [(1, 131), (2, 67)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [66, 175, 17]]
** centroid: 2, normalized-entropy: 0.7202327421989186, [(1, 66), (2, 175), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3309295912883405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3309295912883405, 0.27128022739376084] ***
*** starting iteration: 2; err: [Inf, 0.3309295912883405, 0.27128022739376084] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358] ***
*** starting iteration: 3; err: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358, 0.23776616512852228] ***
*** starting iteration: 4; err: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358, 0.23776616512852228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358, 0.23776616512852228, 0.23652161868649355] ***
*** starting iteration: 5; err: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358, 0.23776616512852228, 0.23652161868649355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358, 0.23776616512852228, 0.23652161868649355, 0.23635554225693667] ***
*** finished computation of 3 references, err: [Inf, 0.3309295912883405, 0.27128022739376084, 0.2530887692781358, 0.23776616512852228, 0.23652161868649355, 0.23635554225693667] ***
*** center 1: selecting labels [1] (freq >= 1) [from [205, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [103, 97, 0]]
** centroid: 2, normalized-entropy: 0.9993506898146103, [(1, 103), (2, 97)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [77, 164, 21]]
** centroid: 3, normalized-entropy: 0.7786373157177109, [(1, 77), (2, 164), (3, 21)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36454684261998926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36454684261998926, 0.29460293020739836] ***
*** starting iteration: 2; err: [Inf, 0.36454684261998926, 0.29460293020739836] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36454684261998926, 0.29460293020739836, 0.2694626423605793] ***
*** starting iteration: 3; err: [Inf, 0.36454684261998926, 0.29460293020739836, 0.2694626423605793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36454684261998926, 0.29460293020739836, 0.2694626423605793, 0.24887833433811674] ***
*** finished computation of 3 references, err: [Inf, 0.36454684261998926, 0.29460293020739836, 0.2694626423605793, 0.24887833433811674] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [159, 10, 0]]
** centroid: 1, normalized-entropy: 0.3241476561692486, [(1, 159), (2, 10)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [242, 54, 0]]
** centroid: 2, normalized-entropy: 0.6853694854354391, [(1, 242), (2, 54)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [4, 179, 18]]
** centroid: 3, normalized-entropy: 0.36160660837169356, [(1, 4), (2, 179), (3, 18)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3201220892886373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201220892886373, 0.2646507755455294] ***
*** starting iteration: 2; err: [Inf, 0.3201220892886373, 0.2646507755455294] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201220892886373, 0.2646507755455294, 0.24369022041849647] ***
*** starting iteration: 3; err: [Inf, 0.3201220892886373, 0.2646507755455294, 0.24369022041849647] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3201220892886373, 0.2646507755455294, 0.24369022041849647, 0.23600823071337063] ***
*** finished computation of 3 references, err: [Inf, 0.3201220892886373, 0.2646507755455294, 0.24369022041849647, 0.23600823071337063] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [3, 165, 17]]
** centroid: 1, normalized-entropy: 0.3533910841334735, [(1, 3), (2, 165), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [269, 9, 0]]
** centroid: 2, normalized-entropy: 0.20616157437562002, [(1, 269), (2, 9)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [136, 68, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 136), (2, 68)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2405693753059769] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2405693753059769, 0.2337107335788378] ***
*** starting iteration: 2; err: [Inf, 0.2405693753059769, 0.2337107335788378] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2405693753059769, 0.2337107335788378, 0.23324161833681017] ***
*** finished computation of 3 references, err: [Inf, 0.2405693753059769, 0.2337107335788378, 0.23324161833681017] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [217, 47, 0]]
** centroid: 1, normalized-entropy: 0.6757490683383742, [(1, 217), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [168, 32, 0]]
** centroid: 2, normalized-entropy: 0.634309554640566, [(1, 168), (2, 32)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 182, 21]]
** centroid: 3, normalized-entropy: 0.47983202361612853, [(2, 182), (3, 21)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31564011184118307] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31564011184118307, 0.23786188147097892] ***
*** starting iteration: 2; err: [Inf, 0.31564011184118307, 0.23786188147097892] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31564011184118307, 0.23786188147097892, 0.23030318699318458] ***
*** starting iteration: 3; err: [Inf, 0.31564011184118307, 0.23786188147097892, 0.23030318699318458] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31564011184118307, 0.23786188147097892, 0.23030318699318458, 0.2289810686402985] ***
*** starting iteration: 4; err: [Inf, 0.31564011184118307, 0.23786188147097892, 0.23030318699318458, 0.2289810686402985] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31564011184118307, 0.23786188147097892, 0.23030318699318458, 0.2289810686402985, 0.2289909815762539] ***
*** finished computation of 3 references, err: [Inf, 0.31564011184118307, 0.23786188147097892, 0.23030318699318458, 0.2289810686402985, 0.2289909815762539] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [92, 153, 16]]
** centroid: 1, normalized-entropy: 0.7753315049535017, [(1, 92), (2, 153), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [208, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [105, 90, 2]]
** centroid: 3, normalized-entropy: 0.6734667506228595, [(1, 105), (2, 90), (3, 2)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3834347551419069] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3834347551419069, 0.23574257901460602] ***
*** starting iteration: 2; err: [Inf, 0.3834347551419069, 0.23574257901460602] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3834347551419069, 0.23574257901460602, 0.23500669538287788] ***
*** finished computation of 3 references, err: [Inf, 0.3834347551419069, 0.23574257901460602, 0.23500669538287788] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [256, 2, 0]]
** centroid: 1, normalized-entropy: 0.06549082131472699, [(1, 256), (2, 2)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [15, 185, 17]]
** centroid: 2, normalized-entropy: 0.47351952550724113, [(1, 15), (2, 185), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [137, 55, 0]]
** centroid: 3, normalized-entropy: 0.864102190255279, [(1, 137), (2, 55)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3682566212861613] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3682566212861613, 0.23362761107308308] ***
*** starting iteration: 2; err: [Inf, 0.3682566212861613, 0.23362761107308308] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3682566212861613, 0.23362761107308308, 0.23302705624040265] ***
*** finished computation of 3 references, err: [Inf, 0.3682566212861613, 0.23362761107308308, 0.23302705624040265] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [252, 6, 0]]
** centroid: 1, normalized-entropy: 0.15935006268563429, [(1, 252), (2, 6)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [5, 199, 21]]
** centroid: 2, normalized-entropy: 0.37733570526924104, [(1, 5), (2, 199), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [128, 56, 0]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(1, 128), (2, 56)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.44683884214693764] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44683884214693764, 0.2983304310363491] ***
*** starting iteration: 2; err: [Inf, 0.44683884214693764, 0.2983304310363491] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44683884214693764, 0.2983304310363491, 0.28894429284010875] ***
*** starting iteration: 3; err: [Inf, 0.44683884214693764, 0.2983304310363491, 0.28894429284010875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44683884214693764, 0.2983304310363491, 0.28894429284010875, 0.2865761589264503] ***
*** finished computation of 3 references, err: [Inf, 0.44683884214693764, 0.2983304310363491, 0.28894429284010875, 0.2865761589264503] ***
*** center 1: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [80, 138, 18]]
** centroid: 2, normalized-entropy: 0.7980579310108599, [(1, 80), (2, 138), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 105, 0]]
** centroid: 3, normalized-entropy: 0.998212175727444, [(1, 116), (2, 105)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34979696054363446] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34979696054363446, 0.2989312660401461] ***
*** starting iteration: 2; err: [Inf, 0.34979696054363446, 0.2989312660401461] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34979696054363446, 0.2989312660401461, 0.29138395759923524] ***
*** starting iteration: 3; err: [Inf, 0.34979696054363446, 0.2989312660401461, 0.29138395759923524] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34979696054363446, 0.2989312660401461, 0.29138395759923524, 0.2903528423614052] ***
*** finished computation of 3 references, err: [Inf, 0.34979696054363446, 0.2989312660401461, 0.29138395759923524, 0.2903528423614052] ***
*** center 1: selecting labels [1] (freq >= 1) [from [222, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [103, 100, 0]]
** centroid: 2, normalized-entropy: 0.9998424527647627, [(1, 103), (2, 100)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [83, 142, 17]]
** centroid: 3, normalized-entropy: 0.7886248350509266, [(1, 83), (2, 142), (3, 17)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4468330271888351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4468330271888351, 0.30718520016729206] ***
*** starting iteration: 2; err: [Inf, 0.4468330271888351, 0.30718520016729206] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4468330271888351, 0.30718520016729206, 0.29582880424528285] ***
*** starting iteration: 3; err: [Inf, 0.4468330271888351, 0.30718520016729206, 0.29582880424528285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4468330271888351, 0.30718520016729206, 0.29582880424528285, 0.2935260792878614] ***
*** finished computation of 3 references, err: [Inf, 0.4468330271888351, 0.30718520016729206, 0.29582880424528285, 0.2935260792878614] ***
*** center 1: selecting labels [1] (freq >= 1) [from [179, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [78, 163, 21]]
** centroid: 2, normalized-entropy: 0.7812309431452916, [(1, 78), (2, 163), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [128, 98, 0]]
** centroid: 3, normalized-entropy: 0.9872516848785046, [(1, 128), (2, 98)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.23985820749981535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23985820749981535, 0.19387496654265882] ***
*** finished computation of 7 references, err: [Inf, 0.23985820749981535, 0.19387496654265882] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 29, 0]]
** centroid: 1, normalized-entropy: 0.8762441668050731, [(1, 69), (2, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 37, 0]]
** centroid: 2, normalized-entropy: 0.9332226994125877, [(1, 69), (2, 37)]
*** center 3: selecting labels [1] (freq >= 1) [from [109, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 82, 2]]
** centroid: 4, normalized-entropy: 0.1623261801753929, [(2, 82), (3, 2)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [109, 50, 0]]
** centroid: 5, normalized-entropy: 0.8982609371118948, [(1, 109), (2, 50)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 45, 16]]
** centroid: 6, normalized-entropy: 0.8301899714180444, [(2, 45), (3, 16)]
*** center 7: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2161485139180025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2161485139180025, 0.19147670919960855] ***
*** finished computation of 7 references, err: [Inf, 0.2161485139180025, 0.19147670919960855] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 69, 0]]
** centroid: 1, normalized-entropy: 0.9081783472997053, [(1, 33), (2, 69)]
*** center 2: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 97, 17]]
** centroid: 3, normalized-entropy: 0.6076407686085387, [(2, 97), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 68, 0]]
** centroid: 4, normalized-entropy: 0.9954515828457716, [(1, 58), (2, 68)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [98, 8, 0]]
** centroid: 5, normalized-entropy: 0.3860189005698936, [(1, 98), (2, 8)]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30327647701994903] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30327647701994903, 0.23349531823098996] ***
*** finished computation of 7 references, err: [Inf, 0.30327647701994903, 0.23349531823098996] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 60, 11]]
** centroid: 1, normalized-entropy: 0.6220403090607189, [(2, 60), (3, 11)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [19, 27, 6]]
** centroid: 2, normalized-entropy: 0.8714171834020559, [(1, 19), (2, 27), (3, 6)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [9, 91, 4]]
** centroid: 3, normalized-entropy: 0.41318068908826866, [(1, 9), (2, 91), (3, 4)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [25, 57, 0]]
** centroid: 4, normalized-entropy: 0.8871723027673716, [(1, 25), (2, 57)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 5, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 25, 0]]
** centroid: 6, normalized-entropy: 0.9728063221185002, [(1, 37), (2, 25)]
*** center 7: selecting labels [1] (freq >= 1) [from [205, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22265860255438466] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22265860255438466, 0.18966488510421994] ***
*** starting iteration: 2; err: [Inf, 0.22265860255438466, 0.18966488510421994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22265860255438466, 0.18966488510421994, 0.18540348630893538] ***
*** starting iteration: 3; err: [Inf, 0.22265860255438466, 0.18966488510421994, 0.18540348630893538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22265860255438466, 0.18966488510421994, 0.18540348630893538, 0.18515721156874354] ***
*** finished computation of 7 references, err: [Inf, 0.22265860255438466, 0.18966488510421994, 0.18540348630893538, 0.18515721156874354] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [23, 77, 0]]
** centroid: 1, normalized-entropy: 0.7780113035465377, [(1, 23), (2, 77)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 14, 0]]
** centroid: 2, normalized-entropy: 0.6152538910563409, [(1, 78), (2, 14)]
*** center 3: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 65, 18]]
** centroid: 4, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [9, 87, 0]]
** centroid: 5, normalized-entropy: 0.44886448872302936, [(1, 9), (2, 87)]
*** center 6: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 11)
[0.9470008931086774, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.912013810217403, 0.9019858181534829, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 13
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.28309772898199725] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28309772898199725, 0.2383701961079204] ***
*** starting iteration: 2; err: [Inf, 0.28309772898199725, 0.2383701961079204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28309772898199725, 0.2383701961079204, 0.23104208370519652] ***
*** starting iteration: 3; err: [Inf, 0.28309772898199725, 0.2383701961079204, 0.23104208370519652] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28309772898199725, 0.2383701961079204, 0.23104208370519652, 0.23006787838263287] ***
*** finished computation of 3 references, err: [Inf, 0.28309772898199725, 0.2383701961079204, 0.23104208370519652, 0.23006787838263287] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [75, 160, 18]]
** centroid: 1, normalized-entropy: 0.7630230706467428, [(1, 75), (2, 160), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [221, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [109, 83, 0]]
** centroid: 3, normalized-entropy: 0.9867314371665744, [(1, 109), (2, 83)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2645140443167564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2645140443167564, 0.24354794553747733] ***
*** starting iteration: 2; err: [Inf, 0.2645140443167564, 0.24354794553747733] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2645140443167564, 0.24354794553747733, 0.23896655435583133] ***
*** starting iteration: 3; err: [Inf, 0.2645140443167564, 0.24354794553747733, 0.23896655435583133] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2645140443167564, 0.24354794553747733, 0.23896655435583133, 0.2374836465866044] ***
*** starting iteration: 4; err: [Inf, 0.2645140443167564, 0.24354794553747733, 0.23896655435583133, 0.2374836465866044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2645140443167564, 0.24354794553747733, 0.23896655435583133, 0.2374836465866044, 0.23677170540539846] ***
*** finished computation of 3 references, err: [Inf, 0.2645140443167564, 0.24354794553747733, 0.23896655435583133, 0.2374836465866044, 0.23677170540539846] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 177, 17]]
** centroid: 1, normalized-entropy: 0.42850536452761046, [(2, 177), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [263, 8, 0]]
** centroid: 2, normalized-entropy: 0.19198042812923868, [(1, 263), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [145, 57, 0]]
** centroid: 3, normalized-entropy: 0.8584018349322116, [(1, 145), (2, 57)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3818521906860519] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3818521906860519, 0.24078734766278623] ***
*** starting iteration: 2; err: [Inf, 0.3818521906860519, 0.24078734766278623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3818521906860519, 0.24078734766278623, 0.23460657802491408] ***
*** starting iteration: 3; err: [Inf, 0.3818521906860519, 0.24078734766278623, 0.23460657802491408] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3818521906860519, 0.24078734766278623, 0.23460657802491408, 0.23355740020149338] ***
*** starting iteration: 4; err: [Inf, 0.3818521906860519, 0.24078734766278623, 0.23460657802491408, 0.23355740020149338] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3818521906860519, 0.24078734766278623, 0.23460657802491408, 0.23355740020149338, 0.23332977279981618] ***
*** finished computation of 3 references, err: [Inf, 0.3818521906860519, 0.24078734766278623, 0.23460657802491408, 0.23355740020149338, 0.23332977279981618] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [148, 57, 0]]
** centroid: 1, normalized-entropy: 0.8527784950153248, [(1, 148), (2, 57)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [236, 4, 0]]
** centroid: 2, normalized-entropy: 0.12229159706937456, [(1, 236), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 200, 21]]
** centroid: 3, normalized-entropy: 0.4530161167068211, [(2, 200), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33648069686827586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535] ***
*** starting iteration: 2; err: [Inf, 0.33648069686827586, 0.30889960962652535] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185] ***
*** starting iteration: 3; err: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632] ***
*** starting iteration: 4; err: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676] ***
*** starting iteration: 5; err: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676, 0.2966019104811008] ***
*** starting iteration: 6; err: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676, 0.2966019104811008] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676, 0.2966019104811008, 0.2954130481380421] ***
*** starting iteration: 7; err: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676, 0.2966019104811008, 0.2954130481380421] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676, 0.2966019104811008, 0.2954130481380421, 0.2948449603379802] ***
*** finished computation of 3 references, err: [Inf, 0.33648069686827586, 0.30889960962652535, 0.3020743564171185, 0.2997860453981632, 0.2981336850745676, 0.2966019104811008, 0.2954130481380421, 0.2948449603379802] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [138, 62, 0]]
** centroid: 1, normalized-entropy: 0.8931734583778567, [(1, 138), (2, 62)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [265, 8, 0]]
** centroid: 2, normalized-entropy: 0.19088950134330007, [(1, 265), (2, 8)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [2, 173, 18]]
** centroid: 3, normalized-entropy: 0.33375489217307186, [(1, 2), (2, 173), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.574744736175353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.574744736175353, 0.3531942330126272] ***
*** starting iteration: 2; err: [Inf, 0.574744736175353, 0.3531942330126272] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678] ***
*** starting iteration: 3; err: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617] ***
*** starting iteration: 4; err: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617, 0.33977514770750455] ***
*** starting iteration: 5; err: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617, 0.33977514770750455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617, 0.33977514770750455, 0.3378287420386094] ***
*** starting iteration: 6; err: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617, 0.33977514770750455, 0.3378287420386094] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617, 0.33977514770750455, 0.3378287420386094, 0.33700602430978727] ***
*** finished computation of 3 references, err: [Inf, 0.574744736175353, 0.3531942330126272, 0.3450238281285678, 0.34214151061434617, 0.33977514770750455, 0.3378287420386094, 0.33700602430978727] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [185, 4, 0]]
** centroid: 1, normalized-entropy: 0.14792723800140206, [(1, 185), (2, 4)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [83, 149, 17]]
** centroid: 2, normalized-entropy: 0.77984242857026, [(1, 83), (2, 149), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [140, 89, 0]]
** centroid: 3, normalized-entropy: 0.9639203919034736, [(1, 140), (2, 89)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4331991318110628] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4331991318110628, 0.312958730035636] ***
*** starting iteration: 2; err: [Inf, 0.4331991318110628, 0.312958730035636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4331991318110628, 0.312958730035636, 0.3011974254581167] ***
*** starting iteration: 3; err: [Inf, 0.4331991318110628, 0.312958730035636, 0.3011974254581167] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4331991318110628, 0.312958730035636, 0.3011974254581167, 0.2987995459998342] ***
*** starting iteration: 4; err: [Inf, 0.4331991318110628, 0.312958730035636, 0.3011974254581167, 0.2987995459998342] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4331991318110628, 0.312958730035636, 0.3011974254581167, 0.2987995459998342, 0.2983795300801878] ***
*** finished computation of 3 references, err: [Inf, 0.4331991318110628, 0.312958730035636, 0.3011974254581167, 0.2987995459998342, 0.2983795300801878] ***
*** center 1: selecting labels [1] (freq >= 2) [from [210, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [99, 114, 0]]
** centroid: 2, normalized-entropy: 0.9964196342978481, [(1, 99), (2, 114)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [76, 147, 21]]
** centroid: 3, normalized-entropy: 0.8007298063586964, [(1, 76), (2, 147), (3, 21)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9470008931086774, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 14
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.1974809790934915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1974809790934915, 0.1494431910663564] ***
*** starting iteration: 2; err: [Inf, 0.1974809790934915, 0.1494431910663564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1974809790934915, 0.1494431910663564, 0.14579843826915906] ***
*** starting iteration: 3; err: [Inf, 0.1974809790934915, 0.1494431910663564, 0.14579843826915906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1974809790934915, 0.1494431910663564, 0.14579843826915906, 0.14528061312272855] ***
*** finished computation of 7 references, err: [Inf, 0.1974809790934915, 0.1494431910663564, 0.14579843826915906, 0.14528061312272855] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [50, 60, 0]]
** centroid: 1, normalized-entropy: 0.9940302114769566, [(1, 50), (2, 60)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 32, 0]]
** centroid: 2, normalized-entropy: 0.9043814577244941, [(1, 68), (2, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 103, 17]]
** centroid: 4, normalized-entropy: 0.5885870739324579, [(2, 103), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [53, 47, 0]]
** centroid: 5, normalized-entropy: 0.9974015885677396, [(1, 53), (2, 47)]
*** center 6: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1971806844503426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1971806844503426, 0.15184902424354935] ***
*** starting iteration: 2; err: [Inf, 0.1971806844503426, 0.15184902424354935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1971806844503426, 0.15184902424354935, 0.14657324205457536] ***
*** starting iteration: 3; err: [Inf, 0.1971806844503426, 0.15184902424354935, 0.14657324205457536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1971806844503426, 0.15184902424354935, 0.14657324205457536, 0.14588507629970127] ***
*** finished computation of 7 references, err: [Inf, 0.1971806844503426, 0.15184902424354935, 0.14657324205457536, 0.14588507629970127] ***
*** center 1: selecting labels [1] (freq >= 2) [from [127, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 16, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 64), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 54, 18]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 54), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 84, 0]]
** centroid: 5, normalized-entropy: 0.5171354891896202, [(1, 11), (2, 84)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 89, 0]]
** centroid: 6, normalized-entropy: 0.20731018585948177, [(1, 3), (2, 89)]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1967487680255205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967487680255205, 0.14981809995001716] ***
*** starting iteration: 2; err: [Inf, 0.1967487680255205, 0.14981809995001716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967487680255205, 0.14981809995001716, 0.1437812045934251] ***
*** starting iteration: 3; err: [Inf, 0.1967487680255205, 0.14981809995001716, 0.1437812045934251] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1967487680255205, 0.14981809995001716, 0.1437812045934251, 0.14326952314709426] ***
*** finished computation of 7 references, err: [Inf, 0.1967487680255205, 0.14981809995001716, 0.1437812045934251, 0.14326952314709426] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [70, 36, 0]]
** centroid: 1, normalized-entropy: 0.9244571409964927, [(1, 70), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [77, 9, 0]]
** centroid: 2, normalized-entropy: 0.48356837509176975, [(1, 77), (2, 9)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 93, 21]]
** centroid: 3, normalized-entropy: 0.6892019851173655, [(2, 93), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [1, 92, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [74, 31, 0]]
** centroid: 6, normalized-entropy: 0.8753918540610236, [(1, 74), (2, 31)]
*** center 7: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9470008931086774, 0.9469948990907074, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 14
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 14)
[0.9470008931086774, 0.9469948990907074, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 15
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.41785608851644507] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41785608851644507, 0.27029159121836227] ***
*** starting iteration: 2; err: [Inf, 0.41785608851644507, 0.27029159121836227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41785608851644507, 0.27029159121836227, 0.2451661201655395] ***
*** starting iteration: 3; err: [Inf, 0.41785608851644507, 0.27029159121836227, 0.2451661201655395] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41785608851644507, 0.27029159121836227, 0.2451661201655395, 0.2306831666260018] ***
*** finished computation of 3 references, err: [Inf, 0.41785608851644507, 0.27029159121836227, 0.2451661201655395, 0.2306831666260018] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [130, 88, 0]]
** centroid: 1, normalized-entropy: 0.973056810401783, [(1, 130), (2, 88)]
*** center 2: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [68, 155, 18]]
** centroid: 3, normalized-entropy: 0.7597360890238954, [(1, 68), (2, 155), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2601622672628673] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2601622672628673, 0.2397563271392053] ***
*** starting iteration: 2; err: [Inf, 0.2601622672628673, 0.2397563271392053] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2601622672628673, 0.2397563271392053, 0.2382790821351703] ***
*** starting iteration: 3; err: [Inf, 0.2601622672628673, 0.2397563271392053, 0.2382790821351703] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2601622672628673, 0.2397563271392053, 0.2382790821351703, 0.23760207180587248] ***
*** finished computation of 3 references, err: [Inf, 0.2601622672628673, 0.2397563271392053, 0.2382790821351703, 0.23760207180587248] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [185, 44, 0]]
** centroid: 1, normalized-entropy: 0.7059262273303116, [(1, 185), (2, 44)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [223, 30, 0]]
** centroid: 2, normalized-entropy: 0.5252568333880511, [(1, 223), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 168, 17]]
** centroid: 3, normalized-entropy: 0.44275337766178524, [(2, 168), (3, 17)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2765645112498835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2765645112498835, 0.23998183390681355] ***
*** starting iteration: 2; err: [Inf, 0.2765645112498835, 0.23998183390681355] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2765645112498835, 0.23998183390681355, 0.23608384014008152] ***
*** starting iteration: 3; err: [Inf, 0.2765645112498835, 0.23998183390681355, 0.23608384014008152] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2765645112498835, 0.23998183390681355, 0.23608384014008152, 0.23560895394000492] ***
*** finished computation of 3 references, err: [Inf, 0.2765645112498835, 0.23998183390681355, 0.23608384014008152, 0.23560895394000492] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [115, 87, 0]]
** centroid: 1, normalized-entropy: 0.9860954431604952, [(1, 115), (2, 87)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [234, 2, 0]]
** centroid: 2, normalized-entropy: 0.0705017596054147, [(1, 234), (2, 2)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [36, 172, 21]]
** centroid: 3, normalized-entropy: 0.6598703187980952, [(1, 36), (2, 172), (3, 21)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9470008931086774, 0.9469948990907074, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8800207393021764, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 15
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9470008931086774, 0.9469948990907074, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8800207393021764, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 15
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9470008931086774, 0.9469948990907074, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8800207393021764, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 15
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 15)
[0.9470008931086774, 0.9469948990907074, 0.9460268651885418, 0.9340148531765298, 0.9300318282354211, 0.9190028351704999, 0.912013810217403, 0.9019858181534829, 0.8979668291045536, 0.8800207393021764, 0.8790017562472653, 0.8760377143610677, 0.8370196543849238, 0.7961134787482093, 0.7729885574196951]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.6, 1) => 0.9470008931086774
finished with 16
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.3955252373195323] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3955252373195323, 0.24263074889767905] ***
*** starting iteration: 2; err: [Inf, 0.3955252373195323, 0.24263074889767905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3955252373195323, 0.24263074889767905, 0.23490718661041163] ***
*** starting iteration: 3; err: [Inf, 0.3955252373195323, 0.24263074889767905, 0.23490718661041163] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3955252373195323, 0.24263074889767905, 0.23490718661041163, 0.23360141962221279] ***
*** finished computation of 3 references, err: [Inf, 0.3955252373195323, 0.24263074889767905, 0.23490718661041163, 0.23360141962221279] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [282, 2, 0]]
** centroid: 1, normalized-entropy: 0.0604742977565841, [(1, 282), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [114, 70, 0]]
** centroid: 2, normalized-entropy: 0.9583485169215336, [(1, 114), (2, 70)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [9, 171, 18]]
** centroid: 3, normalized-entropy: 0.44156114526904805, [(1, 9), (2, 171), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2888697397600541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2888697397600541, 0.262767028729564] ***
*** starting iteration: 2; err: [Inf, 0.2888697397600541, 0.262767028729564] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2888697397600541, 0.262767028729564, 0.23756249709616134] ***
*** starting iteration: 3; err: [Inf, 0.2888697397600541, 0.262767028729564, 0.23756249709616134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2888697397600541, 0.262767028729564, 0.23756249709616134, 0.23069437371770748] ***
*** finished computation of 3 references, err: [Inf, 0.2888697397600541, 0.262767028729564, 0.23756249709616134, 0.23069437371770748] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [128, 61, 0]]
** centroid: 1, normalized-entropy: 0.9073483628912522, [(1, 128), (2, 61)]
*** center 2: selecting labels [1] (freq >= 1) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [65, 181, 17]]
** centroid: 3, normalized-entropy: 0.7096707763302407, [(1, 65), (2, 181), (3, 17)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.28650075631045824] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28650075631045824, 0.24325772806879195] ***
*** starting iteration: 2; err: [Inf, 0.28650075631045824, 0.24325772806879195] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28650075631045824, 0.24325772806879195, 0.23581222309053748] ***
*** starting iteration: 3; err: [Inf, 0.28650075631045824, 0.24325772806879195, 0.23581222309053748] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28650075631045824, 0.24325772806879195, 0.23581222309053748, 0.2337417858659752] ***
*** finished computation of 3 references, err: [Inf, 0.28650075631045824, 0.24325772806879195, 0.23581222309053748, 0.2337417858659752] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [191, 45, 0]]
** centroid: 1, normalized-entropy: 0.7028875599988609, [(1, 191), (2, 45)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 188, 21]]
** centroid: 2, normalized-entropy: 0.4705104718237067, [(2, 188), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [194, 28, 0]]
** centroid: 3, normalized-entropy: 0.5467175366117469, [(1, 194), (2, 28)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.28170740823820234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28170740823820234, 0.19699810661701486] ***
*** starting iteration: 2; err: [Inf, 0.28170740823820234, 0.19699810661701486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786] ***
*** starting iteration: 3; err: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658] ***
*** starting iteration: 4; err: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658, 0.18772730138897895] ***
*** starting iteration: 5; err: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658, 0.18772730138897895] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658, 0.18772730138897895, 0.1858777830549516] ***
*** starting iteration: 6; err: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658, 0.18772730138897895, 0.1858777830549516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658, 0.18772730138897895, 0.1858777830549516, 0.1852535443948582] ***
*** finished computation of 7 references, err: [Inf, 0.28170740823820234, 0.19699810661701486, 0.19075280210375786, 0.18917032295069658, 0.18772730138897895, 0.1858777830549516, 0.1852535443948582] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 11, 0]]
** centroid: 1, normalized-entropy: 0.444552233571264, [(1, 108), (2, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [171, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [78, 10, 0]]
** centroid: 3, normalized-entropy: 0.5107878229540133, [(1, 78), (2, 10)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 118, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [113, 48, 0]]
** centroid: 5, normalized-entropy: 0.8790012086268424, [(1, 113), (2, 48)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [129, 47, 0]]
** centroid: 6, normalized-entropy: 0.8371930278506566, [(1, 129), (2, 47)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 139, 28]]
** centroid: 7, normalized-entropy: 0.6523345504011154, [(2, 139), (3, 28)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2911586230956018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504] ***
*** starting iteration: 2; err: [Inf, 0.2911586230956018, 0.21273737321421504] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588] ***
*** starting iteration: 3; err: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432] ***
*** starting iteration: 4; err: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723] ***
*** starting iteration: 5; err: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723, 0.18395360659062862] ***
*** starting iteration: 6; err: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723, 0.18395360659062862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723, 0.18395360659062862, 0.18273105293884873] ***
*** starting iteration: 7; err: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723, 0.18395360659062862, 0.18273105293884873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723, 0.18395360659062862, 0.18273105293884873, 0.1822309048473835] ***
*** finished computation of 7 references, err: [Inf, 0.2911586230956018, 0.21273737321421504, 0.1994205326605588, 0.19154407507367432, 0.18571087564341723, 0.18395360659062862, 0.18273105293884873, 0.1822309048473835] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 9, 0]]
** centroid: 1, normalized-entropy: 0.4725472219330293, [(1, 80), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [4, 50, 0]]
** centroid: 2, normalized-entropy: 0.38094658570539014, [(1, 4), (2, 50)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [36, 28, 0]]
** centroid: 3, normalized-entropy: 0.9886994082884974, [(1, 36), (2, 28)]
*** center 4: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 14]]
** centroid: 5, normalized-entropy: 0.710676853856123, [(2, 58), (3, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 32, 0]]
** centroid: 6, normalized-entropy: 0.9992492479956566, [(1, 30), (2, 32)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29406011979281904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29406011979281904, 0.21965624891687185] ***
*** starting iteration: 2; err: [Inf, 0.29406011979281904, 0.21965624891687185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746] ***
*** starting iteration: 3; err: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786] ***
*** starting iteration: 4; err: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786, 0.19133706449577584] ***
*** starting iteration: 5; err: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786, 0.19133706449577584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786, 0.19133706449577584, 0.1897290957849473] ***
*** starting iteration: 6; err: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786, 0.19133706449577584, 0.1897290957849473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786, 0.19133706449577584, 0.1897290957849473, 0.1889033741801977] ***
*** finished computation of 7 references, err: [Inf, 0.29406011979281904, 0.21965624891687185, 0.1995261363554746, 0.19450678810849786, 0.19133706449577584, 0.1897290957849473, 0.1889033741801977] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 8, 0]]
** centroid: 1, normalized-entropy: 0.5491087450260074, [(1, 55), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [30, 55, 0]]
** centroid: 2, normalized-entropy: 0.9366673818775627, [(1, 30), (2, 55)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 6, 0]]
** centroid: 4, normalized-entropy: 0.5665095065529052, [(1, 39), (2, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 68, 8]]
** centroid: 6, normalized-entropy: 0.48546076074591343, [(2, 68), (3, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21928316268883646] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402] ***
*** starting iteration: 2; err: [Inf, 0.21928316268883646, 0.2014169019125402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053] ***
*** starting iteration: 3; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807] ***
*** starting iteration: 4; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742] ***
*** starting iteration: 5; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952] ***
*** starting iteration: 6; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004] ***
*** starting iteration: 7; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897] ***
*** starting iteration: 8; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897, 0.1865678645512089] ***
*** starting iteration: 9; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897, 0.1865678645512089] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897, 0.1865678645512089, 0.18533043311163783] ***
*** starting iteration: 10; err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897, 0.1865678645512089, 0.18533043311163783] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897, 0.1865678645512089, 0.18533043311163783, 0.18446172731369734] ***
*** finished computation of 7 references, err: [Inf, 0.21928316268883646, 0.2014169019125402, 0.19838919635117053, 0.19647624018415807, 0.19521119764819742, 0.1922824944620952, 0.1902987800478004, 0.18825677699036897, 0.1865678645512089, 0.18533043311163783, 0.18446172731369734] ***
*** center 1: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 26, 0]]
** centroid: 2, normalized-entropy: 0.9054522631867892, [(1, 55), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [12, 45, 0]]
** centroid: 3, normalized-entropy: 0.7424875695421234, [(1, 12), (2, 45)]
*** center 4: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 62, 9]]
** centroid: 6, normalized-entropy: 0.5484866088431741, [(2, 62), (3, 9)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 58, 0]]
** centroid: 7, normalized-entropy: 0.28290479297989196, [(1, 3), (2, 58)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2308210130594671] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2308210130594671, 0.19870845878869295] ***
*** starting iteration: 2; err: [Inf, 0.2308210130594671, 0.19870845878869295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2308210130594671, 0.19870845878869295, 0.19281602414697407] ***
*** starting iteration: 3; err: [Inf, 0.2308210130594671, 0.19870845878869295, 0.19281602414697407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2308210130594671, 0.19870845878869295, 0.19281602414697407, 0.18929957817448304] ***
*** starting iteration: 4; err: [Inf, 0.2308210130594671, 0.19870845878869295, 0.19281602414697407, 0.18929957817448304] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2308210130594671, 0.19870845878869295, 0.19281602414697407, 0.18929957817448304, 0.18890175197087228] ***
*** finished computation of 7 references, err: [Inf, 0.2308210130594671, 0.19870845878869295, 0.19281602414697407, 0.18929957817448304, 0.18890175197087228] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [21, 48, 0]]
** centroid: 1, normalized-entropy: 0.8865408928220899, [(1, 21), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [34, 32, 0]]
** centroid: 2, normalized-entropy: 0.9993375041688846, [(1, 34), (2, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 3, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 73, 15]]
** centroid: 4, normalized-entropy: 0.6587435307694671, [(2, 73), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [83, 17, 0]]
** centroid: 5, normalized-entropy: 0.6577047787442196, [(1, 83), (2, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22449651671480386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249] ***
*** starting iteration: 2; err: [Inf, 0.22449651671480386, 0.2031904557524249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803] ***
*** starting iteration: 3; err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665] ***
*** starting iteration: 4; err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882] ***
*** starting iteration: 5; err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445] ***
*** starting iteration: 6; err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445, 0.18624299503397196] ***
*** starting iteration: 7; err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445, 0.18624299503397196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445, 0.18624299503397196, 0.1844714537365362] ***
*** starting iteration: 8; err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445, 0.18624299503397196, 0.1844714537365362] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445, 0.18624299503397196, 0.1844714537365362, 0.18364059680048375] ***
*** finished computation of 7 references, err: [Inf, 0.22449651671480386, 0.2031904557524249, 0.19998996619600803, 0.19714178156107665, 0.1930348269417882, 0.18849637371860445, 0.18624299503397196, 0.1844714537365362, 0.18364059680048375] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 40, 11]]
** centroid: 1, normalized-entropy: 0.7522121733341471, [(2, 40), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 28, 0]]
** centroid: 3, normalized-entropy: 0.9262122127346664, [(1, 54), (2, 28)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [78, 25, 0]]
** centroid: 5, normalized-entropy: 0.7995318105266797, [(1, 78), (2, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [38, 38, 0]]
** centroid: 7, normalized-entropy: 1.0, [(1, 38), (2, 38)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30468684719875455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607] ***
*** starting iteration: 2; err: [Inf, 0.30468684719875455, 0.24455810355767607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384] ***
*** starting iteration: 3; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925] ***
*** starting iteration: 4; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651] ***
*** starting iteration: 5; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318] ***
*** starting iteration: 6; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116] ***
*** starting iteration: 7; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116, 0.18380290831346066] ***
*** starting iteration: 8; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116, 0.18380290831346066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116, 0.18380290831346066, 0.1821348978690803] ***
*** starting iteration: 9; err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116, 0.18380290831346066, 0.1821348978690803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116, 0.18380290831346066, 0.1821348978690803, 0.18162393100187182] ***
*** finished computation of 7 references, err: [Inf, 0.30468684719875455, 0.24455810355767607, 0.22422501243278384, 0.19765769003517925, 0.1899436252042651, 0.18693912327103318, 0.18531141357310116, 0.18380290831346066, 0.1821348978690803, 0.18162393100187182] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [13, 59, 0]]
** centroid: 1, normalized-entropy: 0.6812908868842175, [(1, 13), (2, 59)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [61, 30, 0]]
** centroid: 2, normalized-entropy: 0.9145891955877994, [(1, 61), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [44, 5, 0]]
** centroid: 3, normalized-entropy: 0.47543164626872053, [(1, 44), (2, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [50, 32, 0]]
** centroid: 5, normalized-entropy: 0.9649567669505686, [(1, 50), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 63, 15]]
** centroid: 7, normalized-entropy: 0.7062740891876008, [(2, 63), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2607478506239131] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2607478506239131, 0.21243995380215347] ***
*** starting iteration: 2; err: [Inf, 0.2607478506239131, 0.21243995380215347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228] ***
*** starting iteration: 3; err: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228, 0.19760175030957908] ***
*** starting iteration: 4; err: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228, 0.19760175030957908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228, 0.19760175030957908, 0.19644143105857073] ***
*** starting iteration: 5; err: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228, 0.19760175030957908, 0.19644143105857073] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228, 0.19760175030957908, 0.19644143105857073, 0.195523914353922] ***
*** finished computation of 7 references, err: [Inf, 0.2607478506239131, 0.21243995380215347, 0.20028848249465228, 0.19760175030957908, 0.19644143105857073, 0.195523914353922] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 47, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 3, 0]]
** centroid: 2, normalized-entropy: 0.3095434291503252, [(1, 51), (2, 3)]
*** center 3: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 7, 0]]
** centroid: 4, normalized-entropy: 0.4356133734874324, [(1, 71), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [84, 39, 0]]
** centroid: 5, normalized-entropy: 0.9011701959974223, [(1, 84), (2, 39)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 52, 13]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(2, 52), (3, 13)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 45, 0]]
** centroid: 7, normalized-entropy: 0.2538784402981617, [(1, 2), (2, 45)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25502493750676514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25502493750676514, 0.19579903313983232] ***
*** starting iteration: 2; err: [Inf, 0.25502493750676514, 0.19579903313983232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383] ***
*** starting iteration: 3; err: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383, 0.18556999794021248] ***
*** starting iteration: 4; err: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383, 0.18556999794021248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383, 0.18556999794021248, 0.18287617859058083] ***
*** starting iteration: 5; err: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383, 0.18556999794021248, 0.18287617859058083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383, 0.18556999794021248, 0.18287617859058083, 0.18260001379065216] ***
*** finished computation of 7 references, err: [Inf, 0.25502493750676514, 0.19579903313983232, 0.18912090095691383, 0.18556999794021248, 0.18287617859058083, 0.18260001379065216] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 21, 0]]
** centroid: 1, normalized-entropy: 0.8304955225035798, [(1, 59), (2, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 7, 0]]
** centroid: 2, normalized-entropy: 0.460127886147135, [(1, 65), (2, 7)]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [19, 58, 0]]
** centroid: 4, normalized-entropy: 0.8060914696192223, [(1, 19), (2, 58)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 67, 13]]
** centroid: 5, normalized-entropy: 0.6402569436810504, [(2, 67), (3, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 36, 0]]
** centroid: 6, normalized-entropy: 0.9811522341999134, [(1, 26), (2, 36)]
*** center 7: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26603442114777864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26603442114777864, 0.19800239903479813] ***
*** starting iteration: 2; err: [Inf, 0.26603442114777864, 0.19800239903479813] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108] ***
*** starting iteration: 3; err: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108, 0.1856368571817875] ***
*** starting iteration: 4; err: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108, 0.1856368571817875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108, 0.1856368571817875, 0.18388291226141154] ***
*** starting iteration: 5; err: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108, 0.1856368571817875, 0.18388291226141154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108, 0.1856368571817875, 0.18388291226141154, 0.18315950348228216] ***
*** finished computation of 7 references, err: [Inf, 0.26603442114777864, 0.19800239903479813, 0.1902130935192108, 0.1856368571817875, 0.18388291226141154, 0.18315950348228216] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [53, 32, 0]]
** centroid: 1, normalized-entropy: 0.9555111232924128, [(1, 53), (2, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 46, 0]]
** centroid: 3, normalized-entropy: 0.9766349114440099, [(1, 32), (2, 46)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [17, 27, 0]]
** centroid: 4, normalized-entropy: 0.9624127354629922, [(1, 17), (2, 27)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 84, 9]]
** centroid: 5, normalized-entropy: 0.45868581620054033, [(2, 84), (3, 9)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [61, 2, 0]]
** centroid: 6, normalized-entropy: 0.20307392998664567, [(1, 61), (2, 2)]
*** center 7: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2570264545306563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570264545306563, 0.19825074346829205] ***
*** starting iteration: 2; err: [Inf, 0.2570264545306563, 0.19825074346829205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756] ***
*** starting iteration: 3; err: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788] ***
*** starting iteration: 4; err: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788, 0.18820599639229477] ***
*** starting iteration: 5; err: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788, 0.18820599639229477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788, 0.18820599639229477, 0.18693916551955045] ***
*** starting iteration: 6; err: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788, 0.18820599639229477, 0.18693916551955045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788, 0.18820599639229477, 0.18693916551955045, 0.18611451062001289] ***
*** finished computation of 7 references, err: [Inf, 0.2570264545306563, 0.19825074346829205, 0.19146852918341756, 0.18959562372788788, 0.18820599639229477, 0.18693916551955045, 0.18611451062001289] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 37, 0]]
** centroid: 1, normalized-entropy: 0.9994433330902989, [(1, 35), (2, 37)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 16]]
** centroid: 2, normalized-entropy: 0.7372413771710565, [(2, 61), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 58, 0]]
** centroid: 3, normalized-entropy: 0.39993804743902767, [(1, 5), (2, 58)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 17, 0]]
** centroid: 4, normalized-entropy: 0.8474179614176633, [(1, 45), (2, 17)]
*** center 5: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [70, 15, 0]]
** centroid: 6, normalized-entropy: 0.6722948170756378, [(1, 70), (2, 15)]
*** center 7: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26532408969849347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834] ***
*** starting iteration: 2; err: [Inf, 0.26532408969849347, 0.22259057692065834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242] ***
*** starting iteration: 3; err: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524] ***
*** starting iteration: 4; err: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193] ***
*** starting iteration: 5; err: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193, 0.18440382148697973] ***
*** starting iteration: 6; err: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193, 0.18440382148697973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193, 0.18440382148697973, 0.183368258388713] ***
*** starting iteration: 7; err: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193, 0.18440382148697973, 0.183368258388713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193, 0.18440382148697973, 0.183368258388713, 0.18276241601258517] ***
*** finished computation of 7 references, err: [Inf, 0.26532408969849347, 0.22259057692065834, 0.19912756082881242, 0.19092561118863524, 0.18682673916593193, 0.18440382148697973, 0.183368258388713, 0.18276241601258517] ***
*** center 1: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 52, 8]]
** centroid: 2, normalized-entropy: 0.5665095065529052, [(2, 52), (3, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 60, 1]]
** centroid: 3, normalized-entropy: 0.12068101401352371, [(2, 60), (3, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 29, 0]]
** centroid: 4, normalized-entropy: 0.9693253797191861, [(1, 44), (2, 29)]
*** center 5: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [76, 32, 0]]
** centroid: 6, normalized-entropy: 0.876716288999464, [(1, 76), (2, 32)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 22, 0]]
** centroid: 7, normalized-entropy: 0.8533728188427888, [(1, 57), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3156752191055566] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777] ***
*** starting iteration: 2; err: [Inf, 0.3156752191055566, 0.21784887769445777] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551] ***
*** starting iteration: 3; err: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178] ***
*** starting iteration: 4; err: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328] ***
*** starting iteration: 5; err: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328, 0.19719520554784686] ***
*** starting iteration: 6; err: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328, 0.19719520554784686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328, 0.19719520554784686, 0.19200344325602053] ***
*** starting iteration: 7; err: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328, 0.19719520554784686, 0.19200344325602053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328, 0.19719520554784686, 0.19200344325602053, 0.1911235361150466] ***
*** finished computation of 7 references, err: [Inf, 0.3156752191055566, 0.21784887769445777, 0.2085394597351551, 0.20551618786156178, 0.20289138492569328, 0.19719520554784686, 0.19200344325602053, 0.1911235361150466] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 61, 6]]
** centroid: 1, normalized-entropy: 0.43497348007474274, [(2, 61), (3, 6)]
*** center 2: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [71, 26, 0]]
** centroid: 3, normalized-entropy: 0.8386398715015523, [(1, 71), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [41, 28, 0]]
** centroid: 4, normalized-entropy: 0.9742408334889756, [(1, 41), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [108, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 21, 0]]
** centroid: 6, normalized-entropy: 0.954434002924965, [(1, 35), (2, 21)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 2]]
** centroid: 7, normalized-entropy: 0.23181305002459035, [(2, 51), (3, 2)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22924747595191003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22924747595191003, 0.18890796423517167] ***
*** starting iteration: 2; err: [Inf, 0.22924747595191003, 0.18890796423517167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22924747595191003, 0.18890796423517167, 0.18748604542016983] ***
*** starting iteration: 3; err: [Inf, 0.22924747595191003, 0.18890796423517167, 0.18748604542016983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22924747595191003, 0.18890796423517167, 0.18748604542016983, 0.18690980290807785] ***
*** finished computation of 7 references, err: [Inf, 0.22924747595191003, 0.18890796423517167, 0.18748604542016983, 0.18690980290807785] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 65, 17]]
** centroid: 1, normalized-entropy: 0.7363230272021651, [(2, 65), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 26, 0]]
** centroid: 2, normalized-entropy: 0.9268190639645774, [(1, 50), (2, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 7, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 63), (2, 7)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 67, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 15, 0]]
** centroid: 5, normalized-entropy: 0.7855602922535471, [(1, 49), (2, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [55, 13, 0]]
** centroid: 7, normalized-entropy: 0.7039260680195971, [(1, 55), (2, 13)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2339633544997778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339633544997778, 0.1907641009595245] ***
*** starting iteration: 2; err: [Inf, 0.2339633544997778, 0.1907641009595245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339633544997778, 0.1907641009595245, 0.18586812595534138] ***
*** starting iteration: 3; err: [Inf, 0.2339633544997778, 0.1907641009595245, 0.18586812595534138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2339633544997778, 0.1907641009595245, 0.18586812595534138, 0.18519209971744569] ***
*** finished computation of 7 references, err: [Inf, 0.2339633544997778, 0.1907641009595245, 0.18586812595534138, 0.18519209971744569] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [63, 37, 0]]
** centroid: 1, normalized-entropy: 0.950672092687066, [(1, 63), (2, 37)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [42, 13, 0]]
** centroid: 3, normalized-entropy: 0.7889406572966208, [(1, 42), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 22, 0]]
** centroid: 4, normalized-entropy: 0.9575534837147484, [(1, 36), (2, 22)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 86, 15]]
** centroid: 6, normalized-entropy: 0.6061112071230008, [(2, 86), (3, 15)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [38, 26, 0]]
** centroid: 7, normalized-entropy: 0.9744894033980525, [(1, 38), (2, 26)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22913077483233063] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22913077483233063, 0.19961095082759858] ***
*** starting iteration: 2; err: [Inf, 0.22913077483233063, 0.19961095082759858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22913077483233063, 0.19961095082759858, 0.193724785245955] ***
*** starting iteration: 3; err: [Inf, 0.22913077483233063, 0.19961095082759858, 0.193724785245955] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22913077483233063, 0.19961095082759858, 0.193724785245955, 0.19213397515937686] ***
*** starting iteration: 4; err: [Inf, 0.22913077483233063, 0.19961095082759858, 0.193724785245955, 0.19213397515937686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22913077483233063, 0.19961095082759858, 0.193724785245955, 0.19213397515937686, 0.1915230866987258] ***
*** finished computation of 7 references, err: [Inf, 0.22913077483233063, 0.19961095082759858, 0.193724785245955, 0.19213397515937686, 0.1915230866987258] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 50, 19]]
** centroid: 1, normalized-entropy: 0.849054424254048, [(2, 50), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [17, 42, 0]]
** centroid: 2, normalized-entropy: 0.8663006754980497, [(1, 17), (2, 42)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [76, 13, 0]]
** centroid: 3, normalized-entropy: 0.5999108763872215, [(1, 76), (2, 13)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 4, 0]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(1, 64), (2, 4)]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24563012608326973] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24563012608326973, 0.19734152982197703] ***
*** starting iteration: 2; err: [Inf, 0.24563012608326973, 0.19734152982197703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965] ***
*** starting iteration: 3; err: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965, 0.19059685030207038] ***
*** starting iteration: 4; err: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965, 0.19059685030207038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965, 0.19059685030207038, 0.18871319659054278] ***
*** starting iteration: 5; err: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965, 0.19059685030207038, 0.18871319659054278] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965, 0.19059685030207038, 0.18871319659054278, 0.18787172947451472] ***
*** finished computation of 7 references, err: [Inf, 0.24563012608326973, 0.19734152982197703, 0.1929779628952965, 0.19059685030207038, 0.18871319659054278, 0.18787172947451472] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [46, 28, 0]]
** centroid: 1, normalized-entropy: 0.9568886656798214, [(1, 46), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [77, 2, 0]]
** centroid: 2, normalized-entropy: 0.17033057560105982, [(1, 77), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 5]]
** centroid: 3, normalized-entropy: 0.4507913883546652, [(2, 48), (3, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [4, 59, 0]]
** centroid: 4, normalized-entropy: 0.3411538931451763, [(1, 4), (2, 59)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 40, 8]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(2, 40), (3, 8)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 19, 0]]
** centroid: 6, normalized-entropy: 0.7347813522127804, [(1, 73), (2, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2856832569763064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2856832569763064, 0.20563124902918936] ***
*** starting iteration: 2; err: [Inf, 0.2856832569763064, 0.20563124902918936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2856832569763064, 0.20563124902918936, 0.20163252861984074] ***
*** starting iteration: 3; err: [Inf, 0.2856832569763064, 0.20563124902918936, 0.20163252861984074] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2856832569763064, 0.20563124902918936, 0.20163252861984074, 0.1995923546012491] ***
*** starting iteration: 4; err: [Inf, 0.2856832569763064, 0.20563124902918936, 0.20163252861984074, 0.1995923546012491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2856832569763064, 0.20563124902918936, 0.20163252861984074, 0.1995923546012491, 0.19889078728482126] ***
*** finished computation of 7 references, err: [Inf, 0.2856832569763064, 0.20563124902918936, 0.20163252861984074, 0.1995923546012491, 0.19889078728482126] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 38, 0]]
** centroid: 1, normalized-entropy: 0.17203694935311387, [(1, 1), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [38, 29, 0]]
** centroid: 2, normalized-entropy: 0.9869444983748495, [(1, 38), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 37, 9]]
** centroid: 3, normalized-entropy: 0.7131467486384921, [(2, 37), (3, 9)]
*** center 4: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 50, 4]]
** centroid: 5, normalized-entropy: 0.38094658570539014, [(2, 50), (3, 4)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 23, 0]]
** centroid: 6, normalized-entropy: 0.7780113035465377, [(1, 77), (2, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.284092210364528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284092210364528, 0.21346390187367797] ***
*** starting iteration: 2; err: [Inf, 0.284092210364528, 0.21346390187367797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172] ***
*** starting iteration: 3; err: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244] ***
*** starting iteration: 4; err: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244, 0.18840525440685452] ***
*** starting iteration: 5; err: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244, 0.18840525440685452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244, 0.18840525440685452, 0.1865755528844893] ***
*** starting iteration: 6; err: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244, 0.18840525440685452, 0.1865755528844893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244, 0.18840525440685452, 0.1865755528844893, 0.18614910196140408] ***
*** finished computation of 7 references, err: [Inf, 0.284092210364528, 0.21346390187367797, 0.20096105086617172, 0.19174436201900244, 0.18840525440685452, 0.1865755528844893, 0.18614910196140408] ***
*** center 1: selecting labels [1] (freq >= 1) [from [51, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [45, 46, 0]]
** centroid: 2, normalized-entropy: 0.999912889501356, [(1, 45), (2, 46)]
*** center 3: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [28, 34, 0]]
** centroid: 4, normalized-entropy: 0.9932338197397066, [(1, 28), (2, 34)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [68, 32, 0]]
** centroid: 5, normalized-entropy: 0.9043814577244941, [(1, 68), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 65, 19]]
** centroid: 7, normalized-entropy: 0.7713111060849788, [(2, 65), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22780980396084488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22780980396084488, 0.19459991988469846] ***
*** starting iteration: 2; err: [Inf, 0.22780980396084488, 0.19459991988469846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22780980396084488, 0.19459991988469846, 0.18680034735798837] ***
*** starting iteration: 3; err: [Inf, 0.22780980396084488, 0.19459991988469846, 0.18680034735798837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22780980396084488, 0.19459991988469846, 0.18680034735798837, 0.1843627117741853] ***
*** starting iteration: 4; err: [Inf, 0.22780980396084488, 0.19459991988469846, 0.18680034735798837, 0.1843627117741853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22780980396084488, 0.19459991988469846, 0.18680034735798837, 0.1843627117741853, 0.18393974725867157] ***
*** finished computation of 7 references, err: [Inf, 0.22780980396084488, 0.19459991988469846, 0.18680034735798837, 0.1843627117741853, 0.18393974725867157] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 52, 11]]
** centroid: 1, normalized-entropy: 0.6681273338436138, [(2, 52), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [82, 20, 0]]
** centroid: 3, normalized-entropy: 0.7140152804378671, [(1, 82), (2, 20)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [29, 50, 0]]
** centroid: 4, normalized-entropy: 0.9484103893488014, [(1, 29), (2, 50)]
*** center 5: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [35, 4, 0]]
** centroid: 6, normalized-entropy: 0.4770713062193298, [(1, 35), (2, 4)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 66, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23065747978910803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23065747978910803, 0.2012796159153804] ***
*** starting iteration: 2; err: [Inf, 0.23065747978910803, 0.2012796159153804] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034] ***
*** starting iteration: 3; err: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034, 0.1894319978170097] ***
*** starting iteration: 4; err: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034, 0.1894319978170097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034, 0.1894319978170097, 0.18832156070880593] ***
*** starting iteration: 5; err: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034, 0.1894319978170097, 0.18832156070880593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034, 0.1894319978170097, 0.18832156070880593, 0.1877981579247862] ***
*** finished computation of 7 references, err: [Inf, 0.23065747978910803, 0.2012796159153804, 0.19309017018415034, 0.1894319978170097, 0.18832156070880593, 0.1877981579247862] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [38, 28, 0]]
** centroid: 1, normalized-entropy: 0.9833761901392238, [(1, 38), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [41, 21, 0]]
** centroid: 2, normalized-entropy: 0.9235785996175947, [(1, 41), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 20, 0]]
** centroid: 3, normalized-entropy: 0.7918583525674836, [(1, 64), (2, 20)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 77, 14]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 77), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 35, 0]]
** centroid: 5, normalized-entropy: 0.9906174973781801, [(1, 44), (2, 35)]
*** center 6: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2217281986065209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2217281986065209, 0.19327242173999548] ***
*** starting iteration: 2; err: [Inf, 0.2217281986065209, 0.19327242173999548] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2217281986065209, 0.19327242173999548, 0.1903079741615802] ***
*** starting iteration: 3; err: [Inf, 0.2217281986065209, 0.19327242173999548, 0.1903079741615802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2217281986065209, 0.19327242173999548, 0.1903079741615802, 0.18875835156813264] ***
*** starting iteration: 4; err: [Inf, 0.2217281986065209, 0.19327242173999548, 0.1903079741615802, 0.18875835156813264] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2217281986065209, 0.19327242173999548, 0.1903079741615802, 0.18875835156813264, 0.18791280618682504] ***
*** finished computation of 7 references, err: [Inf, 0.2217281986065209, 0.19327242173999548, 0.1903079741615802, 0.18875835156813264, 0.18791280618682504] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [81, 4, 0]]
** centroid: 1, normalized-entropy: 0.2737691686829417, [(1, 81), (2, 4)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [13, 43, 0]]
** centroid: 3, normalized-entropy: 0.7817281222714539, [(1, 13), (2, 43)]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 62, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [56, 31, 0]]
** centroid: 6, normalized-entropy: 0.9395876193289702, [(1, 56), (2, 31)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 51, 11]]
** centroid: 7, normalized-entropy: 0.674398887071447, [(2, 51), (3, 11)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2512348557300866] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442] ***
*** starting iteration: 2; err: [Inf, 0.2512348557300866, 0.2140883191600442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936] ***
*** starting iteration: 3; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868] ***
*** starting iteration: 4; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747] ***
*** starting iteration: 5; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832] ***
*** starting iteration: 6; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594] ***
*** starting iteration: 7; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594, 0.19039408712275327] ***
*** starting iteration: 8; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594, 0.19039408712275327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594, 0.19039408712275327, 0.1893403013087809] ***
*** starting iteration: 9; err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594, 0.19039408712275327, 0.1893403013087809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594, 0.19039408712275327, 0.1893403013087809, 0.18889295268058776] ***
*** finished computation of 7 references, err: [Inf, 0.2512348557300866, 0.2140883191600442, 0.20633929305383936, 0.20033828322216868, 0.1975544895529747, 0.19580387065000832, 0.19343000502325594, 0.19039408712275327, 0.1893403013087809, 0.18889295268058776] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 58, 15]]
** centroid: 1, normalized-entropy: 0.7327525499549903, [(2, 58), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 16, 0]]
** centroid: 2, normalized-entropy: 0.775512658133148, [(1, 54), (2, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [58, 3, 0]]
** centroid: 3, normalized-entropy: 0.28290479297989196, [(1, 58), (2, 3)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 81, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 25, 0]]
** centroid: 6, normalized-entropy: 0.8356038276131503, [(1, 69), (2, 25)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [53, 1, 0]]
** centroid: 7, normalized-entropy: 0.13303964861069897, [(1, 53), (2, 1)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3008372837230563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008372837230563, 0.21052056673355402] ***
*** starting iteration: 2; err: [Inf, 0.3008372837230563, 0.21052056673355402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008372837230563, 0.21052056673355402, 0.19107212507817894] ***
*** starting iteration: 3; err: [Inf, 0.3008372837230563, 0.21052056673355402, 0.19107212507817894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008372837230563, 0.21052056673355402, 0.19107212507817894, 0.18813530391454697] ***
*** starting iteration: 4; err: [Inf, 0.3008372837230563, 0.21052056673355402, 0.19107212507817894, 0.18813530391454697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3008372837230563, 0.21052056673355402, 0.19107212507817894, 0.18813530391454697, 0.18771740781515836] ***
*** finished computation of 7 references, err: [Inf, 0.3008372837230563, 0.21052056673355402, 0.19107212507817894, 0.18813530391454697, 0.18771740781515836] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 23, 0]]
** centroid: 2, normalized-entropy: 0.9134601452569628, [(1, 47), (2, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 65, 0]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(1, 5), (2, 65)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 79, 16]]
** centroid: 4, normalized-entropy: 0.6540800387941991, [(2, 79), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [73, 21, 0]]
** centroid: 5, normalized-entropy: 0.7663350359691776, [(1, 73), (2, 21)]
*** center 6: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20530394420493395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20530394420493395, 0.1912104470357299] ***
*** starting iteration: 2; err: [Inf, 0.20530394420493395, 0.1912104470357299] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20530394420493395, 0.1912104470357299, 0.18883073156885802] ***
*** starting iteration: 3; err: [Inf, 0.20530394420493395, 0.1912104470357299, 0.18883073156885802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20530394420493395, 0.1912104470357299, 0.18883073156885802, 0.18822447820752858] ***
*** finished computation of 7 references, err: [Inf, 0.20530394420493395, 0.1912104470357299, 0.18883073156885802, 0.18822447820752858] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 58, 11]]
** centroid: 1, normalized-entropy: 0.6329208984823799, [(2, 58), (3, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [2, 69, 0]]
** centroid: 3, normalized-entropy: 0.18512476010054582, [(1, 2), (2, 69)]
*** center 4: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [71, 20, 0]]
** centroid: 5, normalized-entropy: 0.7597659876428757, [(1, 71), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [69, 7, 0]]
** centroid: 6, normalized-entropy: 0.4434581453896789, [(1, 69), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [46, 20, 0]]
** centroid: 7, normalized-entropy: 0.8849636363831529, [(1, 46), (2, 20)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3255580071881413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312] ***
*** starting iteration: 2; err: [Inf, 0.3255580071881413, 0.22157925572246312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438] ***
*** starting iteration: 3; err: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419] ***
*** starting iteration: 4; err: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242] ***
*** starting iteration: 5; err: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242, 0.18543791512679308] ***
*** starting iteration: 6; err: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242, 0.18543791512679308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242, 0.18543791512679308, 0.1841886804178357] ***
*** starting iteration: 7; err: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242, 0.18543791512679308, 0.1841886804178357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242, 0.18543791512679308, 0.1841886804178357, 0.1834037723429501] ***
*** finished computation of 7 references, err: [Inf, 0.3255580071881413, 0.22157925572246312, 0.20810310741141438, 0.1988351951893419, 0.18988196926750242, 0.18543791512679308, 0.1841886804178357, 0.1834037723429501] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 1, 0]]
** centroid: 1, normalized-entropy: 0.11467550533614682, [(1, 64), (2, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [40, 35, 0]]
** centroid: 2, normalized-entropy: 0.9967916319816367, [(1, 40), (2, 35)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 51, 0]]
** centroid: 3, normalized-entropy: 0.9509560484549724, [(1, 30), (2, 51)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 24, 0]]
** centroid: 5, normalized-entropy: 0.954434002924965, [(1, 40), (2, 24)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 72, 16]]
** centroid: 7, normalized-entropy: 0.6840384356390419, [(2, 72), (3, 16)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30111716684140266] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30111716684140266, 0.20682916229963302] ***
*** starting iteration: 2; err: [Inf, 0.30111716684140266, 0.20682916229963302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006] ***
*** starting iteration: 3; err: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178] ***
*** starting iteration: 4; err: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178, 0.18613104698620736] ***
*** starting iteration: 5; err: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178, 0.18613104698620736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178, 0.18613104698620736, 0.18480692373402416] ***
*** starting iteration: 6; err: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178, 0.18613104698620736, 0.18480692373402416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178, 0.18613104698620736, 0.18480692373402416, 0.1840638296138495] ***
*** finished computation of 7 references, err: [Inf, 0.30111716684140266, 0.20682916229963302, 0.19137967591919006, 0.18845156547427178, 0.18613104698620736, 0.18480692373402416, 0.1840638296138495] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 24, 0]]
** centroid: 1, normalized-entropy: 0.9587118829771317, [(1, 39), (2, 24)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 12]]
** centroid: 2, normalized-entropy: 0.6193821946787638, [(2, 66), (3, 12)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 23, 0]]
** centroid: 3, normalized-entropy: 0.8243633538094403, [(1, 66), (2, 23)]
*** center 4: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [25, 34, 0]]
** centroid: 5, normalized-entropy: 0.9831491282282879, [(1, 25), (2, 34)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 42, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2500747062731534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500747062731534, 0.20847432269342245] ***
*** starting iteration: 2; err: [Inf, 0.2500747062731534, 0.20847432269342245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500747062731534, 0.20847432269342245, 0.19976474473439157] ***
*** starting iteration: 3; err: [Inf, 0.2500747062731534, 0.20847432269342245, 0.19976474473439157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500747062731534, 0.20847432269342245, 0.19976474473439157, 0.1975744945909828] ***
*** starting iteration: 4; err: [Inf, 0.2500747062731534, 0.20847432269342245, 0.19976474473439157, 0.1975744945909828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2500747062731534, 0.20847432269342245, 0.19976474473439157, 0.1975744945909828, 0.19670364584773778] ***
*** finished computation of 7 references, err: [Inf, 0.2500747062731534, 0.20847432269342245, 0.19976474473439157, 0.1975744945909828, 0.19670364584773778] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 34, 0]]
** centroid: 1, normalized-entropy: 0.9280672822072753, [(1, 65), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [56, 19, 0]]
** centroid: 2, normalized-entropy: 0.8165187119538281, [(1, 56), (2, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 36, 15]]
** centroid: 5, normalized-entropy: 0.8739810481273581, [(2, 36), (3, 15)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 57, 1]]
** centroid: 6, normalized-entropy: 0.12565805017256745, [(2, 57), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [13, 51, 0]]
** centroid: 7, normalized-entropy: 0.7281342378690551, [(1, 13), (2, 51)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2830536312572658] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2830536312572658, 0.21214738920331] ***
*** starting iteration: 2; err: [Inf, 0.2830536312572658, 0.21214738920331] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756] ***
*** starting iteration: 3; err: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756, 0.19197024543955923] ***
*** starting iteration: 4; err: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756, 0.19197024543955923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756, 0.19197024543955923, 0.19073353054001926] ***
*** starting iteration: 5; err: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756, 0.19197024543955923, 0.19073353054001926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756, 0.19197024543955923, 0.19073353054001926, 0.1905166685078293] ***
*** finished computation of 7 references, err: [Inf, 0.2830536312572658, 0.21214738920331, 0.19427062378823756, 0.19197024543955923, 0.19073353054001926, 0.1905166685078293] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [33, 39, 0]]
** centroid: 1, normalized-entropy: 0.9949848281859699, [(1, 33), (2, 39)]
*** center 2: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 68, 16]]
** centroid: 3, normalized-entropy: 0.7024665512903904, [(2, 68), (3, 16)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 2, 0]]
** centroid: 4, normalized-entropy: 0.18512476010054582, [(1, 69), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [25, 65, 0]]
** centroid: 6, normalized-entropy: 0.8524051786494784, [(1, 25), (2, 65)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [42, 30, 0]]
** centroid: 7, normalized-entropy: 0.9798687566511527, [(1, 42), (2, 30)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2364597965423018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364597965423018, 0.20197508496418595] ***
*** starting iteration: 2; err: [Inf, 0.2364597965423018, 0.20197508496418595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768] ***
*** starting iteration: 3; err: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768, 0.19280914779938757] ***
*** starting iteration: 4; err: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768, 0.19280914779938757] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768, 0.19280914779938757, 0.19115164252370595] ***
*** starting iteration: 5; err: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768, 0.19280914779938757, 0.19115164252370595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768, 0.19280914779938757, 0.19115164252370595, 0.1902545091919601] ***
*** finished computation of 7 references, err: [Inf, 0.2364597965423018, 0.20197508496418595, 0.19523338952101768, 0.19280914779938757, 0.19115164252370595, 0.1902545091919601] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 79, 0]]
** centroid: 1, normalized-entropy: 0.27866980356389914, [(1, 4), (2, 79)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 43, 11]]
** centroid: 2, normalized-entropy: 0.7292739418449411, [(2, 43), (3, 11)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [9, 63, 0]]
** centroid: 3, normalized-entropy: 0.5435644431995963, [(1, 9), (2, 63)]
*** center 4: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [80, 2, 0]]
** centroid: 6, normalized-entropy: 0.16542703399626665, [(1, 80), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [68, 8, 0]]
** centroid: 7, normalized-entropy: 0.48546076074591343, [(1, 68), (2, 8)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24435414799116553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24435414799116553, 0.1987495281305164] ***
*** starting iteration: 2; err: [Inf, 0.24435414799116553, 0.1987495281305164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24435414799116553, 0.1987495281305164, 0.1926157784778625] ***
*** starting iteration: 3; err: [Inf, 0.24435414799116553, 0.1987495281305164, 0.1926157784778625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24435414799116553, 0.1987495281305164, 0.1926157784778625, 0.19065706943906843] ***
*** starting iteration: 4; err: [Inf, 0.24435414799116553, 0.1987495281305164, 0.1926157784778625, 0.19065706943906843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24435414799116553, 0.1987495281305164, 0.1926157784778625, 0.19065706943906843, 0.19026851354259997] ***
*** finished computation of 7 references, err: [Inf, 0.24435414799116553, 0.1987495281305164, 0.1926157784778625, 0.19065706943906843, 0.19026851354259997] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 77, 16]]
** centroid: 1, normalized-entropy: 0.6623570516079519, [(2, 77), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [38, 1, 0]]
** centroid: 2, normalized-entropy: 0.17203694935311387, [(1, 38), (2, 1)]
*** center 3: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 29, 0]]
** centroid: 4, normalized-entropy: 0.9106223680988619, [(1, 60), (2, 29)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [18, 65, 0]]
** centroid: 6, normalized-entropy: 0.7544062039636575, [(1, 18), (2, 65)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 23, 0]]
** centroid: 7, normalized-entropy: 0.9231199835423002, [(1, 45), (2, 23)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 373,3 => 28,1 => 599), Dict(2 => 363,3 => 38,1 => 599))
[ Info: ===== scores for single classifier: {"micro_f1":0.92,"precision":0.92,"recall":0.92,"macro_recall":0.9366682456680939,"macro_f1":0.8442712904942615,"accuracy":0.92,"class_f1":{"2":0.8860398860398859,"3":0.6846846846846847,"1":0.962089300758214},"class_precision":{"2":0.9174041297935103,"3":0.5205479452054794,"1":0.9710884353741497},"class_recall":{"2":0.8567493112947658,"3":1.0,"1":0.9532554257095158}}
[ Info: ===== scores for 1: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9772102570706305,"macro_f1":0.9510195587455438,"accuracy":0.974,"class_f1":{"2":0.9631728045325779,"3":0.9047619047619047,"1":0.9851239669421488},"class_precision":{"2":0.9912536443148688,"3":0.8260869565217391,"1":0.9754500818330606},"class_recall":{"2":0.9366391184573003,"3":1.0,"1":0.994991652754591}}
[ Info: ===== scores for 5: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9814122404803843,"macro_f1":0.9469274474933509,"accuracy":0.977,"class_f1":{"2":0.9679218967921898,"3":0.8837209302325582,"1":0.989139515455305},"class_precision":{"2":0.980225988700565,"3":0.7916666666666666,"1":0.9899665551839465},"class_recall":{"2":0.9559228650137741,"3":1.0,"1":0.988313856427379}}
[ Info: ===== scores for 7: {"micro_f1":0.976,"precision":0.976,"recall":0.976,"macro_recall":0.9815793386896741,"macro_f1":0.9462449888532295,"accuracy":0.976,"class_f1":{"2":0.9667590027700831,"3":0.8837209302325582,"1":0.988255033557047},"class_precision":{"2":0.9721448467966574,"3":0.7916666666666666,"1":0.9932546374367622},"class_recall":{"2":0.9614325068870524,"3":1.0,"1":0.9833055091819699}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9813846462806851,"macro_f1":0.9394005417449045,"accuracy":0.975,"class_f1":{"2":0.9655172413793103,"3":0.8636363636363636,"1":0.9890480202190397},"class_precision":{"2":0.9668508287292817,"3":0.76,"1":0.9982993197278912},"class_recall":{"2":0.9641873278236914,"3":1.0,"1":0.9799666110183639}}
[ Info: ===== scores for 11: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.9804663726351387,"macro_f1":0.9328049327965475,"accuracy":0.974,"class_f1":{"2":0.9640883977900552,"3":0.8444444444444443,"1":0.9898819561551433},"class_precision":{"2":0.9667590027700831,"3":0.7307692307692307,"1":1.0},"class_recall":{"2":0.9614325068870524,"3":1.0,"1":0.9799666110183639}}
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.979, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.979, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.98, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.978, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.98,"k":3,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.98,"precision":0.98,"recall":0.98,"macro_recall":0.9838052707987449,"macro_f1":0.9589883762528443,"accuracy":0.98,"class_f1":{"2":0.9721448467966574,"3":0.9156626506024096,"1":0.9891576313594662},"class_precision":{"2":0.9830985915492958,"3":0.8444444444444444,"1":0.9883333333333333},"class_recall":{"2":0.9614325068870524,"3":1.0,"1":0.989983305509182}}
Test Summary: | Pass  Total
AKNC          |    8      8
[775, 1, 1, 4, 2, 1, 2, 10, 1, 1, 3, 1, 2, 18, 6, 2, 1, 1, 9, 1, 3, 2, 8, 14, 8, 7, 11, 8, 10, 4, 10, 7, 5, 1, 33, 13, 14, 5, 10, 22, 5, 3, 10, 4, 12, 1, 2, 18, 60, 28, 18, 5, 6, 14, 1, 20, 11, 3, 9, 3, 5, 24, 8, 8, 15, 26, 11, 8, 32, 13, 1, 28, 24, 6, 27, 61, 16, 2, 5, 9, 11, 19, 33, 17, 1, 9, 5, 12, 21, 14, 5, 6, 18, 6, 3, 5, 11, 1, 21, 101, 58, 4, 10, 61, 22, 11, 16, 12, 9, 50, 109, 14, 8, 11, 31, 64, 6, 6, 15, 52, 13, 3, 322, 16, 12, 44, 41, 8, 46, 82, 21, 26, 183, 54, 107, 5, 10, 13, 4, 90, 41, 3, 13, 10, 9, 5, 106, 11, 18, 7, 23, 3, 12, 4, 28, 13, 18, 48, 27, 16, 9, 9, 71, 81, 28, 5, 5, 30, 10, 64, 16, 2, 4, 17, 129, 21, 13, 14, 1, 113, 13, 14, 14, 36, 38, 70, 16, 9, 21, 7, 2, 15, 5, 6, 12, 5, 15, 12, 16, 37, 25, 30, 43, 253, 22, 45, 1, 22, 10, 20, 533, 7, 38, 91, 23, 29, 61, 35, 7, 74, 32, 10, 1, 95, 30, 7, 21, 61, 7, 38, 4, 58, 35, 26, 80, 2, 23, 21, 98, 10, 25, 10, 45, 11, 23, 30, 99, 47, 31, 19, 17, 62, 11, 48, 6, 5, 20, 38, 34, 11, 10, 15, 33, 60, 32, 57, 13, 16, 79, 15, 160, 116, 10, 33, 8, 4, 798, 25, 64, 186, 34, 4, 25, 31, 5, 15, 38, 12, 14, 7, 46, 37, 9, 9, 1, 72, 33, 7, 1, 239]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6559999999999999, speedup = 0.2654555514238957, eval_ratio = 0.09286799999999999)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":null,"recall":0.3940972222222221,"f1":null,"seconds":0.00019080564379692078,"exhaustive_search_seconds":0.0003469157963991165,"evaluations":509.890625,"distances_sum":1699.1887928055073}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5694444444444444,"recall":0.5694444444444444,"f1":0.5694444444444444,"seconds":0.00044189393520355225,"exhaustive_search_seconds":0.0003469157963991165,"evaluations":700.75,"distances_sum":1651.5851866258035}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6857638888888887,"recall":0.6857638888888887,"f1":0.6857638888888887,"seconds":0.00041570328176021576,"exhaustive_search_seconds":0.0003469157963991165,"evaluations":861.6328125,"distances_sum":1583.7476643992484}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7621527777777772,"recall":0.7621527777777772,"f1":0.7621527777777772,"seconds":0.0005247686058282852,"exhaustive_search_seconds":0.0003469157963991165,"evaluations":1015.203125,"distances_sum":1554.1630984731398}
KCenters.DeloneInvIndex> reached performance {"precision":0.817708333333333,"recall":0.817708333333333,"f1":0.817708333333333,"seconds":0.0006306208670139313,"exhaustive_search_seconds":0.0003469157963991165,"evaluations":1141.7734375,"distances_sum":1537.0620582943097}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7969999999999995, speedup = 0.5090617841087207, eval_ratio = 0.121841)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
