Julia Version 1.6.0-DEV.180
Commit d825de85f8 (2020-06-05 17:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_Y24lxf/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_Y24lxf/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.13693932428658276 0.11083909661442806; 0.13693932428658276 0.0 0.07601417399426594; -0.11083909661442806 -0.07601417399426594 0.0])
dAA = so3([0.0 -0.06772413386286906 0.033680437603617; 0.06772413386286906 0.0 -0.08672071627476899; -0.033680437603617 0.08672071627476899 0.0])
dAA = so3([0.0 -0.08218864939734766 -0.014279432037007085; 0.08218864939734766 0.0 -0.05233229187408132; 0.014279432037007085 0.05233229187408132 0.0])
dAA = Quaternion(0.9939265693261606, [0.05032828462689701, 0.01546275017779904, 0.09663302701965934])
dAA = SO3([0.9738130103244528 0.1413284581662109 -0.17808561939468626; -0.12906412161896383 0.9885063747107309 0.07872483513462294; 0.18716482958492175 -0.05367880464959912 0.9808608017949528])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9822450497679386 -0.1579199590707445 0.10127165809580789; 0.1760493573071358 0.9624257065921276 -0.20674472927353793; -0.064817327915645 0.22090279721574024 0.9731395933699015]), [-0.7601417399426593, 1.1083909661442806, 1.3693932428658275])
xj = SE3(SO3([0.8829255021882365 -0.45615935448167977 0.11118093768496311; 0.46937445205753514 0.8518057486207397 -0.23262542933297267; 0.011409703823456607 0.2575764157206915 0.9661905654285506]), [0.5233229187408132, -0.14279432037007084, 0.8218864939734765])
Dx = SE3(SO3([0.949142727945239 -0.31479582825086794 0.005627477633861455; 0.31482691499968785 0.948735766814541 -0.028008183779115126; 0.0034778701023558452 0.028355445379599276 0.9995918532765639]), [1.0758943664599259, -1.5278033421441055, -0.14414593756069038])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
