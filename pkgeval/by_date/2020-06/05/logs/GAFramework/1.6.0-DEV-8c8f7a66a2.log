Julia Version 1.6.0-DEV.144
Commit 8c8f7a66a2 (2020-06-02 16:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_H0KXNG/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_H0KXNG/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21720287460629897
curgen: 20 fitness: 0.21720287460629897
curgen: 30 fitness: 0.21722731168007325
curgen: 40 fitness: 0.21722731168007325
curgen: 50 fitness: 0.21722731168007325
CoordinateCreature{Array{Float64,1}}([-0.22217089167604875], -0.21722731168007325) -0.22217089167604875 -0.21722731168007325
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257809141031067
curgen: 100 fitness: 3.2581764613553514
curgen: 150 fitness: 3.2582024716616313
curgen: 200 fitness: 3.258311439176827
curgen: 250 fitness: 3.2583838545912855
curgen: 300 fitness: 3.2584116350955803
curgen: 350 fitness: 3.2584426361957557
curgen: 400 fitness: 3.258458079418087
curgen: 450 fitness: 3.258458079418087
curgen: 500 fitness: 3.2584581119992615
CoordinateCreature{Array{Float64,1}}([0.22262744058149328, 0.2225446757763321, -0.22221402080151645, 0.22272364164618857, 0.22186045378979039, 0.22271072525349708, -0.22257923717114642, 0.2220092981161006, -0.22252534987406464, 0.22255062130118416, 0.2226030375936827, -0.2225628239189489, 0.22244366297027132, 0.22225207057280236, -0.22257807462853446], -3.2584581119992615) [0.22262744058149328, 0.2225446757763321, -0.22221402080151645, 0.22272364164618857, 0.22186045378979039, 0.22271072525349708, -0.22257923717114642, 0.2220092981161006, -0.22252534987406464, 0.22255062130118416, 0.2226030375936827, -0.2225628239189489, 0.22244366297027132, 0.22225207057280236, -0.22257807462853446] -3.2584581119992615
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.00559125181428044
curgen: 100 fitness: -0.004536663109462324
curgen: 150 fitness: -0.003985432670305045
curgen: 200 fitness: -0.0021913313275945256
curgen: 250 fitness: -0.001743087417736433
curgen: 300 fitness: -0.001743087417736433
curgen: 350 fitness: -0.0005675736601062908
curgen: 400 fitness: -0.0005675736601062908
curgen: 450 fitness: -0.0005675736601062908
curgen: 500 fitness: -0.0005675736601062908
CoordinateCreature{Array{Float64,1}}([0.0002282347638170078, -0.0004848772034582926, -0.00019259738385200408, -0.001198409149479161, 0.00021760277963632805, -8.387224558736734e-5, 0.0005753252139892311, 0.00038373246359022384, -0.00045198823603812, 0.00021842769631601837, 0.00010989363298056229, 0.00026648791089341683, -1.901375298790295e-5, 0.0004726602431346451, 9.433971284180916e-5], 0.0005675736601062908) [0.0002282347638170078, -0.0004848772034582926, -0.00019259738385200408, -0.001198409149479161, 0.00021760277963632805, -8.387224558736734e-5, 0.0005753252139892311, 0.00038373246359022384, -0.00045198823603812, 0.00021842769631601837, 0.00010989363298056229, 0.00026648791089341683, -1.901375298790295e-5, 0.0004726602431346451, 9.433971284180916e-5] 0.0005675736601062908
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
