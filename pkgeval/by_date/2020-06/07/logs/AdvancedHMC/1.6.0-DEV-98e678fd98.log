Julia Version 1.6.0-DEV.186
Commit 98e678fd98 (2020-06-06 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Missings ───────────────────── v0.4.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed ProgressMeter ──────────────── v1.3.0
  Installed DataAPI ────────────────────── v1.3.0
  Installed StatsFuns ──────────────────── v0.9.5
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed DataStructures ─────────────── v0.17.17
  Installed StatsBase ──────────────────── v0.33.0
  Installed Requires ───────────────────── v1.0.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed ArgCheck ───────────────────── v2.0.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed OrderedCollections ─────────── v1.2.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed DocStringExtensions ────────── v0.8.1
  Installed Rmath_jll ──────────────────── v0.2.2+0
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Parameters ─────────────────── v0.12.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [0bf59076] + AdvancedHMC v0.2.25
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [0bf59076] + AdvancedHMC v0.2.25
  [dce04be8] + ArgCheck v2.0.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.17
  [ffbed154] + DocStringExtensions v0.8.1
  [505f98c9] + InplaceOps v0.3.0
  [e1d29d7a] + Missings v0.4.3
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.2.0
  [d96e819e] + Parameters v0.12.1
  [92933f4c] + ProgressMeter v1.3.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [3a884ed6] + UnPack v1.0.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing AdvancedHMC
Status `/tmp/jl_bkElRO/Project.toml`
  [0bf59076] AdvancedHMC v0.2.25
  [dce04be8] ArgCheck v2.0.0
  [76274a88] Bijectors v0.7.2
  [31c24e10] Distributions v0.23.4
  [ffbed154] DocStringExtensions v0.8.1
  [f6369f11] ForwardDiff v0.10.10
  [505f98c9] InplaceOps v0.3.0
  [1dea7af3] OrdinaryDiffEq v5.39.1
  [d96e819e] Parameters v0.12.1
  [92933f4c] ProgressMeter v1.3.0
  [ae029012] Requires v1.0.1
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [fce5fe82] Turing v0.13.0
  [b8865327] UnicodePlots v1.1.0
  [e88e6eb3] Zygote v0.4.20
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_bkElRO/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.1.0
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.7
  [4c555306] ArrayLayouts v0.2.6
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [d360d2e6] ChainRulesCore v0.8.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.10.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.17
  [2b5f629d] DiffEqBase v6.36.3
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.4
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.1
  [366bfd00] DynamicPPL v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.10
  [6a86dc24] FiniteDiff v2.3.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [01680d73] GenericSVD v0.3.0
  [7869d1d1] IRTools v0.3.3
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.2.1
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.1
  [bdcacae8] LoopVectorization v0.8.4
  [c7f686f2] MCMCChains v3.0.12
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.3.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.0.4
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.39.1
  [90014a1f] PDMats v0.9.12
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.5
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.3.0
  [1fd47b50] QuadGK v2.3.1
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.4.1
  [f2c3362d] RecursiveFactorization v0.1.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+0
  [f2b01f46] Roots v1.0.1
  [21efa798] SIMDPirates v0.8.6
  [476501e8] SLEEFPirates v0.5.0
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.8.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [3783bdb8] TableTraits v1.0.0
  [5d786b92] TerminalLoggers v0.1.1
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.1
  [b8865327] UnicodePlots v1.1.0
  [3d5dd08c] VectorizationBase v0.12.6
  [19fa3120] VertexSafeGraphs v0.1.2
  [e88e6eb3] Zygote v0.4.20
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (false, false, true, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Performance of step() v.s. step()
│   n_steps = 10
│   t_step = 0.337490708
│   t_steps = 0.010703083
└   t_step / t_steps = 31.53210229239556
DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordVarNaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DiagEuclideanMetric are skipped
Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DiagEuclideanMetric are skipped
DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)WelfordCovNaiveHMCAdaptor(pc=WelfordCov, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=WelfordCov,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on DenseEuclideanMetric are skipped
Hamiltonian(metric=DenseEuclideanMetric(diag=[1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on DenseEuclideanMetric are skipped
UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=JitteredLeapfrog(ϵ0=0.1, jitter=1.0, ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=10))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=Leapfrog(ϵ=0.1), max_depth=10), Δ_max=1000.0)UnitMassMatrixNaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1))NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1)StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.1),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{MultinomialTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{MultinomialTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{MultinomialTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=10))[ Info: Adaptation tests for StaticTrajectory{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), λ=1.0))[ Info: Adaptation tests for HMCDA{EndPointTS} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Original} with TemperedLeapfrog on UnitEuclideanMetric are skipped
Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))NUTS{SliceTS,Generalised}(integrator=TemperedLeapfrog(ϵ=0.1, α=1.05), max_depth=10), Δ_max=1000.0)[ Info: Adaptation tests for NUTS{SliceTS, Generalised} with TemperedLeapfrog on UnitEuclideanMetric are skipped
UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))UnitMassMatrixNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=UnitMassMatrix, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=UnitMassMatrix,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=UnitEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=Leapfrog(ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{EndPointTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))StaticTrajectory{MultinomialTS}(integrator=JitteredLeapfrog(ϵ0=[0.1, 0.1, 0.1, 0.1, 0.1], jitter=1.0, ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]), λ=10))WelfordVarNesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1])NaiveHMCAdaptor(pc=WelfordVar, ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]))StanHMCAdaptor(
    pc=WelfordVar,
    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=[0.1, 0.1, 0.1, 0.1, 0.1]),
    init_buffer=75, term_buffer=50, window_size=25,
    state=window(0, 0), window_splits()
)DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{EndPointTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0])Hamiltonian(metric=DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0]))HMCDA{MultinomialTS}(integrator=Leapfrog(ϵ=0.1), λ=1.0))[ Info: Adaptation tests for HMCDA with StepSizeAdaptor are skipped

                   Scalabiliry of multiple chains
              ┌────────────────────────────────────────┐              
            6 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡆⠀│ vectorization
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⡜⢱⠀│ seperate     
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠸⡀⢠⠃⠀⡇│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠔⠊⠁⠀⠀⠀⠀⠀⠀⢸⢇⠀⠀⠀⠀⠀⢰⠁⠀⢇⡜⠀⠀⠸│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠘⡄⠀⠀⣀⠀⡎⠀⠀⠘⠇⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠸⠔⠉⠀⠉⠃⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
   Time (s)   │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠃⢠⡄⠀⠀⠀⠀⡰⠒⠤⡔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⡎⠱⡀⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⡸⠀⠀⠱⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⠀⠀⠀⡰⠁⢀⡠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠀⠀⠀⡠⡤⠮⠥⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              │⠀⠀⠉⠉⢉⠜⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
            1 │⠀⠀⠑⠒⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀│              
              └────────────────────────────────────────┘              
              0                                       20
                            Num of chains

Sampling  0%|                               |  ETA: 0:57:03[K
  iterations:                    1
  n_steps:                       1
  is_accept:                     true
  acceptance_rate:               0.00021957242539529513
  log_density:                   -10.713326361047619
  hamiltonian_energy:            16.104480396772967
  hamiltonian_energy_error:      0.0
  max_hamiltonian_energy_error:  8.423828423629836
  tree_depth:                    1
  numerical_error:               false
  step_size:                     1.6
  nom_step_size:                 1.6
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0, 1.0, 1.0, 1.0, 1.0, 1 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 34%|██████████▋                    |  ETA: 0:00:04[K
  iterations:                    683
  n_steps:                       7
  is_accept:                     true
  acceptance_rate:               0.834613907062829
  log_density:                   -13.333224636896269
  hamiltonian_energy:            19.028823098791648
  hamiltonian_energy_error:      -0.02186293654588667
  max_hamiltonian_energy_error:  0.3747500465312079
  tree_depth:                    3
  numerical_error:               false
  step_size:                     0.7716426543216204
  nom_step_size:                 0.7716426543216204
  is_adapt:                      true
  mass_matrix:                   DiagEuclideanMetric([1.0332547722945118, 0.8542 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 51%|███████████████▊               |  ETA: 0:00:02[K
  iterations:                    1016
  n_steps:                       131
  is_accept:                     true
  acceptance_rate:               0.9127049142081353
  log_density:                   -15.644258395803519
  hamiltonian_energy:            17.99832509049666
  hamiltonian_energy_error:      0.3313846880207407
  max_hamiltonian_energy_error:  0.46523456077183667
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 55%|█████████████████▎             |  ETA: 0:00:02[K
  iterations:                    1109
  n_steps:                       139
  is_accept:                     true
  acceptance_rate:               0.9324859633060126
  log_density:                   -12.867555876520582
  hamiltonian_energy:            18.47123120344964
  hamiltonian_energy_error:      -0.22128517620612698
  max_hamiltonian_energy_error:  0.3074238471226174
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 60%|██████████████████▊            |  ETA: 0:00:02[K
  iterations:                    1207
  n_steps:                       95
  is_accept:                     true
  acceptance_rate:               0.9588881718029475
  log_density:                   -12.403343885159419
  hamiltonian_energy:            17.187158534513255
  hamiltonian_energy_error:      -0.3853002153815126
  max_hamiltonian_energy_error:  -0.6701367293964928
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 63%|███████████████████▌           |  ETA: 0:00:02[K
  iterations:                    1258
  n_steps:                       191
  is_accept:                     true
  acceptance_rate:               0.8545769599761894
  log_density:                   -15.983547999128376
  hamiltonian_energy:            22.983493814276358
  hamiltonian_energy_error:      -0.038725558046404984
  max_hamiltonian_energy_error:  0.8785634081813605
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 71%|█████████████████████▉         |  ETA: 0:00:01[K
  iterations:                    1414
  n_steps:                       191
  is_accept:                     true
  acceptance_rate:               0.8930866051113049
  log_density:                   -15.189865362151615
  hamiltonian_energy:            20.00352872001656
  hamiltonian_energy_error:      0.11813360626518943
  max_hamiltonian_energy_error:  0.4307761620923536
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 76%|███████████████████████▌       |  ETA: 0:00:01[K
  iterations:                    1515
  n_steps:                       167
  is_accept:                     true
  acceptance_rate:               0.8222584197399133
  log_density:                   -13.532734722383765
  hamiltonian_energy:            18.615397819392797
  hamiltonian_energy_error:      0.056024781052112615
  max_hamiltonian_energy_error:  0.5750278754954969
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 81%|█████████████████████████▎     |  ETA: 0:00:01[K
  iterations:                    1627
  n_steps:                       155
  is_accept:                     true
  acceptance_rate:               0.9114813156560184
  log_density:                   -15.963287458956192
  hamiltonian_energy:            18.900929005362933
  hamiltonian_energy_error:      0.21934564002218337
  max_hamiltonian_energy_error:  -0.6069180633940938
  tree_depth:                    7
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 88%|███████████████████████████▎   |  ETA: 0:00:00[K
  iterations:                    1758
  n_steps:                       43
  is_accept:                     true
  acceptance_rate:               0.7496961432907506
  log_density:                   -12.685011398973208
  hamiltonian_energy:            19.06954839485998
  hamiltonian_energy_error:      -0.003233352341418083
  max_hamiltonian_energy_error:  0.8824134738582075
  tree_depth:                    5
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling 94%|█████████████████████████████▏ |  ETA: 0:00:00[K
  iterations:                    1878
  n_steps:                       103
  is_accept:                     true
  acceptance_rate:               0.8867139228652666
  log_density:                   -17.770063914155457
  hamiltonian_energy:            22.652488267430467
  hamiltonian_energy_error:      0.26019509198485125
  max_hamiltonian_energy_error:  0.5492161272766758
  tree_depth:                    6
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])[A[A[A[A[A[A[A[A[A[A[A[A[A[A













[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[A[K[ASampling100%|███████████████████████████████| Time: 0:00:03[K
  iterations:                    2000
  n_steps:                       23
  is_accept:                     true
  acceptance_rate:               0.9515455408893763
  log_density:                   -15.032455603550869
  hamiltonian_energy:            18.405099280124624
  hamiltonian_energy_error:      0.11820847522366051
  max_hamiltonian_energy_error:  -0.3548848184245621
  tree_depth:                    4
  numerical_error:               false
  step_size:                     0.7869175896631784
  nom_step_size:                 0.7869175896631784
  is_adapt:                      false
  mass_matrix:                   DiagEuclideanMetric([0.9935720119330732, 1.1818 ...])
┌ Info: Finished 2000 sampling steps for 1 chains in 3.341486396 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.9935720119330732, 1.1818 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.787), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 1.1645566119476372
└   average_acceptance_rate = 0.8127486073398561
┌ Info: Finished 1000 adapation steps
│   adaptor =
│    StanHMCAdaptor(
│        pc=WelfordVar,
│        ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.5698777505330948),
│        init_buffer=75, term_buffer=50, window_size=25,
│        state=window(76, 950), window_splits(100, 150, 250, 450, 950)
│    )
│   τ.integrator = Leapfrog(ϵ=0.57)
└   h.metric = DiagEuclideanMetric([0.35166212544951386, 0.559 ...])
┌ Info: Finished 5000 sampling steps for 1 chains in 1.066269516 (s)
│   h = Hamiltonian(metric=DiagEuclideanMetric([0.35166212544951386, 0.559 ...]))
│   τ = NUTS{MultinomialTS,Generalised}(integrator=Leapfrog(ϵ=0.57), max_depth=10), Δ_max=1000.0)
│   EBFMI_est = 0.8702985017702929
└   average_acceptance_rate = 0.9182427221358377
Test Summary: | Pass  Total
AdvancedHMC   | 3324   3324
    Testing AdvancedHMC tests passed 
