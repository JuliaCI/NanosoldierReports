Julia Version 1.6.0-DEV.186
Commit 98e678fd98 (2020-06-06 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_MLBQ57/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_MLBQ57/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.08727638911181657 -0.06778715209481011; 0.08727638911181657 0.0 -0.13409467758837584; 0.06778715209481011 0.13409467758837584 0.0])
dAA = so3([0.0 0.15277458223939466 -0.017488430977574503; -0.15277458223939466 0.0 -0.014574116768860324; 0.017488430977574503 0.014574116768860324 0.0])
dAA = so3([0.0 0.1452204580197012 -0.0006552066116821117; -0.1452204580197012 0.0 0.03429366249962643; 0.0006552066116821117 -0.03429366249962643 0.0])
dAA = Quaternion(0.9970736957218203, [0.06560515174936343, 0.028676616848550083, -0.0267891957642554])
dAA = SO3([0.9969705560716586 -0.018307596088386117 -0.07559459141785746; 0.013719499085330305 0.9980573349379644 -0.06077278602611424; 0.07656034006596313 0.05955155835066581 0.9952849472522889])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.927020169864218 0.3717282830302158 -0.049514525750776896; -0.3733015765474747 0.927308560442767 -0.027290413641663045; 0.03577062498875946 0.04378261441452479 0.9984004933206627]), [1.3409467758837583, -0.6778715209481011, 0.8727638911181657])
xj = SE3(SO3([0.9809605834848009 0.14582350296830734 0.1282647248124405; -0.09710326796691726 0.9402547512252307 -0.3263310560589116; -0.16818825464135148 0.30766297921659586 0.9365127880708648]), [-0.3429366249962643, -0.006552066116821117, -1.452204580197012])
Dx = SE3(SO3([0.9396028507678549 -0.20481195544427533 0.27422353242567027; 0.2672423802844192 0.9395832897806654 -0.21392697759950738; -0.21384104612734753 0.2742905475440858 0.9375695720953872]), [-1.8947640624689484, -0.10522000628091355, -2.256193566309922])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
