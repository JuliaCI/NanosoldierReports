Julia Version 1.6.0-DEV.185
Commit cbd854b0f4 (2020-06-06 13:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_NU6VbW/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_NU6VbW/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.12101495241909904 0.06642038117193444; 0.12101495241909904 0.0 0.1676060640611744; -0.06642038117193444 -0.1676060640611744 0.0])
dAA = so3([0.0 -0.17575173704010524 -0.10221328204641429; 0.17575173704010524 0.0 0.026476107503360144; 0.10221328204641429 -0.026476107503360144 0.0])
dAA = so3([0.0 -0.1841805501852995 0.40901855603139875; 0.1841805501852995 0.0 0.06075901663691424; -0.40901855603139875 -0.06075901663691424 0.0])
dAA = Quaternion(0.9992180998258161, [0.016601189562537675, 0.03526718124392429, -0.006619321166274062])
dAA = SO3([0.9804705132895469 0.18452360349550234 0.06803390568508565; -0.1883232566299577 0.9805986887046231 0.05441105331696104; -0.05667383507421742 -0.06616080005417642 0.9961981855806464])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8736278565159015 -0.41211727554289196 -0.25871551851123187; 0.4286639976022214 0.9034248432020152 0.008410103750668097; 0.2302640777001793 -0.11824932931952868 0.9659169481049431]), [-1.6760606406117438, 0.6642038117193444, 1.2101495241909903])
xj = SE3(SO3([0.9839496254934468 0.03725265074966375 0.17451468277319698; -0.022795370043604102 0.9961942750097018 -0.08412691330644297; -0.17698447840384526 0.07879851806993703 0.9810541717734556]), [-0.6075901663691424, 4.090185560313987, 1.8418055018529949])
Dx = SE3(SO3([0.809081080102842 0.4777220418255847 0.3423002433151533; -0.40516824666596174 0.87531632385254 -0.2639318569080015; -0.4257070562173585 0.07485308244334174 0.9017596788144177]), [2.547488283348067, 2.580088987474996, 0.362510183391487])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
