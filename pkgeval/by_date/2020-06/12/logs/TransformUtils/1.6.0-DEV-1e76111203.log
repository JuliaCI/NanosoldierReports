Julia Version 1.6.0-DEV.220
Commit 1e76111203 (2020-06-12 16:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_1XRyt0/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_1XRyt0/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.02161204634171914 -0.1145564194150967; 0.02161204634171914 0.0 0.07036673272271093; 0.1145564194150967 -0.07036673272271093 0.0])
dAA = so3([0.0 0.03149233696611702 0.046522825204964084; -0.03149233696611702 0.0 0.018011748256600246; -0.046522825204964084 -0.018011748256600246 0.0])
dAA = so3([0.0 -0.08257465362551751 0.09186531644368245; 0.08257465362551751 0.0 0.07533219861622338; -0.09186531644368245 -0.07533219861622338 0.0])
dAA = Quaternion(0.9979516919211913, [-0.025677838261062055, 0.008808877375042708, 0.05792644381680946])
dAA = SO3([0.98871583256393 -0.05429226296281487 0.1396185969697149; 0.05465687784677028 0.9985044449634808 0.0012243742136971657; -0.13947626372059996 0.0064205584296457546 0.9902045992056356])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9901549272859965 0.07583183384599106 0.11765522915203101; -0.08105958055243664 0.995894355903491 0.040296107507225266; -0.11411645092591147 -0.049436472923589804 0.9922366001982336]), [-0.7036673272271093, -1.1455641941509669, 0.21612046341719138])
xj = SE3(SO3([0.9573945812307724 -0.2869428531322314 0.032548653832204476; 0.280539419799786 0.9508763350185641 0.1308886146311554; -0.06850729719054335 -0.11618086993132026 0.9908626321007611]), [-0.7533219861622338, 0.9186531644368244, 0.825746536255175])
Dx = SE3(SO3([0.9330463638830794 -0.34793736821017673 -0.09145529316305347; 0.3553753707386197 0.9309565448757658 0.08383470298966299; 0.05597167781077135 -0.11072262350555223 0.9922739903509994]), [-0.2860587622876759, 2.021839250086177, 0.6822310962294179])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
