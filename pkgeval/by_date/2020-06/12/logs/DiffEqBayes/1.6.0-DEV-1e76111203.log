Julia Version 1.6.0-DEV.220
Commit 1e76111203 (2020-06-12 16:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed DiffEqBayes ────────────────── v2.15.0
  Installed SIMDPirates ────────────────── v0.8.7
  Installed DataAPI ────────────────────── v1.3.0
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed IterTools ──────────────────── v1.3.0
  Installed TerminalLoggers ────────────── v0.1.1
  Installed ModelingToolkit ────────────── v3.9.0
  Installed ArrayInterface ─────────────── v2.8.7
  Installed EllipsisNotation ───────────── v0.4.0
  Installed Reexport ───────────────────── v0.2.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed CanonicalTraits ────────────── v0.2.1
  Installed Parameters ─────────────────── v0.12.1
  Installed DataStructures ─────────────── v0.17.17
  Installed ArgCheck ───────────────────── v2.0.0
  Installed DataValueInterfaces ────────── v1.0.0
  Installed ConstructionBase ───────────── v1.0.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Turing ─────────────────────── v0.13.0
  Installed CommonSubexpressions ───────── v0.2.0
  Installed DistributionsAD ────────────── v0.5.3
  Installed Inflate ────────────────────── v0.1.2
  Installed Distributions ──────────────── v0.23.4
  Installed FillArrays ─────────────────── v0.8.10
  Installed TreeViews ──────────────────── v0.3.0
  Installed RandomNumbers ──────────────── v1.4.0
  Installed NLSolversBase ──────────────── v7.6.1
  Installed Compat ─────────────────────── v3.12.0
  Installed Latexify ───────────────────── v0.13.5
  Installed TimerOutputs ───────────────── v0.5.6
  Installed MappedArrays ───────────────── v0.2.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed SafeTestsets ───────────────── v0.0.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed JuliaVariables ─────────────── v0.2.0
  Installed Formatting ─────────────────── v0.4.1
  Installed EllipticalSliceSampling ────── v0.2.2
  Installed Unitful ────────────────────── v1.2.1
  Installed NNlib ──────────────────────── v0.6.6
  Installed NameResolution ─────────────── v0.1.3
  Installed Rmath ──────────────────────── v0.6.1
  Installed NaNMath ────────────────────── v0.3.3
  Installed InvertedIndices ────────────── v1.0.0
  Installed ForwardDiff ────────────────── v0.10.10
  Installed Arpack ─────────────────────── v0.4.0
  Installed RecursiveArrayTools ────────── v2.4.4
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed Parsers ────────────────────── v0.3.12
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed Combinatorics ──────────────── v1.0.2
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed RecursiveFactorization ─────── v0.1.2
  Installed InplaceOps ─────────────────── v0.3.0
  Installed TransformVariables ─────────── v0.3.8
  Installed Optim ──────────────────────── v0.20.6
  Installed LabelledArrays ─────────────── v1.2.2
  Installed LoggingExtras ──────────────── v0.4.1
  Installed Roots ──────────────────────── v1.0.1
  Installed PrettyPrint ────────────────── v0.1.0
  Installed FiniteDiff ─────────────────── v2.3.2
  Installed VectorizationBase ──────────── v0.12.6
  Installed DynamicPPL ─────────────────── v0.8.1
  Installed LineSearches ───────────────── v7.0.1
  Installed MCMCChains ─────────────────── v3.0.12
  Installed AdvancedMH ─────────────────── v0.5.1
  Installed JSON ───────────────────────── v0.21.0
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed DiffRules ──────────────────── v1.0.1
  Installed Libtask ────────────────────── v0.4.1
  Installed DiffEqJump ─────────────────── v6.9.0
  Installed PoissonRandom ──────────────── v0.4.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed IterativeSolvers ───────────── v0.8.4
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed AbstractMCMC ───────────────── v1.0.1
  Installed FunctionWrappers ───────────── v1.1.1
  Installed SimpleTraits ───────────────── v0.9.2
  Installed StatsFuns ──────────────────── v0.9.5
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed Adapt ──────────────────────── v1.1.0
  Installed MLStyle ────────────────────── v0.3.1
  Installed Bijectors ──────────────────── v0.7.2
  Installed SymbolicUtils ──────────────── v0.3.3
  Installed OrderedCollections ─────────── v1.2.0
  Installed Tables ─────────────────────── v1.0.4
  Installed UnPack ─────────────────────── v1.0.1
  Installed OffsetArrays ───────────────── v1.0.4
  Installed RecipesBase ────────────────── v1.0.1
  Installed NamedArrays ────────────────── v0.9.4
  Installed LightGraphs ────────────────── v1.3.3
  Installed Distances ──────────────────── v0.8.2
  Installed DynamicHMC ─────────────────── v2.1.5
  Installed QuadGK ─────────────────────── v2.3.1
  Installed RangeArrays ────────────────── v0.3.2
  Installed PositiveFactorizations ─────── v0.2.3
  Installed ApproxBayes ────────────────── v0.3.2
  Installed LoopVectorization ──────────── v0.8.5
  Installed LogDensityProblems ─────────── v0.10.3
  Installed ChainRulesCore ─────────────── v0.8.0
  Installed AbstractTrees ──────────────── v0.3.3
  Installed StaticArrays ───────────────── v0.12.3
  Installed OpenBLAS_jll ───────────────── v0.3.9+4
  Installed AxisArrays ─────────────────── v0.4.3
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed DocStringExtensions ────────── v0.8.1
  Installed StatsBase ──────────────────── v0.33.0
  Installed SLEEFPirates ───────────────── v0.5.1
  Installed CpuId ──────────────────────── v0.2.2
  Installed ProgressMeter ──────────────── v1.3.0
  Installed Missings ───────────────────── v0.4.3
  Installed StructArrays ───────────────── v0.4.3
  Installed Tracker ────────────────────── v0.2.6
  Installed IntervalSets ───────────────── v0.5.1
  Installed ProgressLogging ────────────── v0.1.2
  Installed GeneralizedGenerated ───────── v0.2.4
  Installed DiffEqBase ─────────────────── v6.37.0
  Installed TableTraits ────────────────── v1.0.0
  Installed ZygoteRules ────────────────── v0.2.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed DiffResults ────────────────── v1.0.2
  Installed Requires ───────────────────── v1.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [ebbdde9d] + DiffEqBayes v2.15.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [80f14c24] + AbstractMCMC v1.0.1
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v1.1.0
  [0bf59076] + AdvancedHMC v0.2.25
  [5b7e9947] + AdvancedMH v0.5.1
  [f5f396d3] + ApproxBayes v0.3.2
  [dce04be8] + ArgCheck v2.0.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.8.7
  [39de3d68] + AxisArrays v0.4.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.7.2
  [b99e7846] + BinaryProvider v0.5.10
  [a603d957] + CanonicalTraits v0.2.1
  [d360d2e6] + ChainRulesCore v0.8.0
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.2.0
  [34da2185] + Compat v3.12.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.37.0
  [ebbdde9d] + DiffEqBayes v2.15.0
  [c894b116] + DiffEqJump v6.9.0
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.23.4
  [ced4e74d] + DistributionsAD v0.5.3
  [ffbed154] + DocStringExtensions v0.8.1
  [bbc10e6e] + DynamicHMC v2.1.5
  [366bfd00] + DynamicPPL v0.8.1
  [da5c29d0] + EllipsisNotation v0.4.0
  [cad2338a] + EllipticalSliceSampling v0.2.2
  [1a297f60] + FillArrays v0.8.10
  [6a86dc24] + FiniteDiff v2.3.2
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.10
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.4
  [d25df0c9] + Inflate v0.1.2
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.0
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.2.2
  [23fbe1c1] + Latexify v0.13.5
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] + Libtask v0.4.1
  [093fc24a] + LightGraphs v1.3.3
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.10.3
  [e6f89c97] + LoggingExtras v0.4.1
  [bdcacae8] + LoopVectorization v0.8.5
  [c7f686f2] + MCMCChains v3.0.12
  [d8e11817] + MLStyle v0.3.1
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [961ee093] + ModelingToolkit v3.9.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.1
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.3
  [71a1bf82] + NameResolution v0.1.3
  [86f7a689] + NamedArrays v0.9.4
  [6fe1bfb0] + OffsetArrays v1.0.4
  [4536629a] + OpenBLAS_jll v0.3.9+4
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.20.6
  [bac558e1] + OrderedCollections v1.2.0
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v0.3.12
  [e409e4f3] + PoissonRandom v0.4.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.1.0
  [33c8b6b6] + ProgressLogging v0.1.2
  [92933f4c] + ProgressMeter v1.3.0
  [1fd47b50] + QuadGK v2.3.1
  [e6cf234a] + RandomNumbers v1.4.0
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.1
  [731186ca] + RecursiveArrayTools v2.4.4
  [f2c3362d] + RecursiveFactorization v0.1.2
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.1
  [21efa798] + SIMDPirates v0.8.7
  [476501e8] + SLEEFPirates v0.5.1
  [1bc83da4] + SafeTestsets v0.0.1
  [699a6c99] + SimpleTraits v0.9.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.3
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [09ab397b] + StructArrays v0.4.3
  [d1185830] + SymbolicUtils v0.3.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [5d786b92] + TerminalLoggers v0.1.1
  [a759f4b9] + TimerOutputs v0.5.6
  [9f7883ad] + Tracker v0.2.6
  [84d833dd] + TransformVariables v0.3.8
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.13.0
  [3a884ed6] + UnPack v1.0.1
  [1986cc42] + Unitful v1.2.1
  [3d5dd08c] + VectorizationBase v0.12.6
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib ────────────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building VectorizationBase → `~/.julia/packages/VectorizationBase/SyqTC/deps/build.log`
   Building Libtask ──────────→ `~/.julia/packages/Libtask/Zo6uM/deps/build.log`
   Building SLEEFPirates ─────→ `~/.julia/packages/SLEEFPirates/kmfoV/deps/build.log`
    Testing DiffEqBayes
Status `/tmp/jl_KwKp1v/Project.toml`
  [f5f396d3] ApproxBayes v0.3.2
  [2b5f629d] DiffEqBase v6.37.0
  [ebbdde9d] DiffEqBayes v2.15.0
  [163ba53b] DiffResults v1.0.2
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.4
  [ffbed154] DocStringExtensions v0.8.1
  [bbc10e6e] DynamicHMC v2.1.5
  [f6369f11] ForwardDiff v0.10.10
  [2ee39098] LabelledArrays v1.2.2
  [6fdf6af0] LogDensityProblems v0.10.3
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.9.0
  [429524aa] Optim v0.20.6
  [1dea7af3] OrdinaryDiffEq v5.40.0
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.3.0
  [d96e819e] Parameters v0.12.1
  [731186ca] RecursiveArrayTools v2.4.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [2913bbd2] StatsBase v0.33.0
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.3
  [84d833dd] TransformVariables v0.3.8
  [fce5fe82] Turing v0.13.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_KwKp1v/Manifest.toml`
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v1.1.0
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [f5f396d3] ApproxBayes v0.3.2
  [dce04be8] ArgCheck v2.0.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.8.7
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [a603d957] CanonicalTraits v0.2.1
  [d360d2e6] ChainRulesCore v0.8.0
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.2.0
  [34da2185] Compat v3.12.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.37.0
  [ebbdde9d] DiffEqBayes v2.15.0
  [459566f4] DiffEqCallbacks v2.13.2
  [c894b116] DiffEqJump v6.9.0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.4
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.1
  [bbc10e6e] DynamicHMC v2.1.5
  [366bfd00] DynamicPPL v0.8.1
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.6.0
  [1a297f60] FillArrays v0.8.10
  [6a86dc24] FiniteDiff v2.3.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.10
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.4
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.0
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.2.2
  [23fbe1c1] Latexify v0.13.5
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.10.3
  [e6f89c97] LoggingExtras v0.4.1
  [bdcacae8] LoopVectorization v0.8.5
  [c7f686f2] MCMCChains v3.0.12
  [d8e11817] MLStyle v0.3.1
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.9.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.1
  [2774e3e8] NLsolve v4.4.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.3
  [71a1bf82] NameResolution v0.1.3
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.0.4
  [4536629a] OpenBLAS_jll v0.3.9+4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.20.6
  [bac558e1] OrderedCollections v1.2.0
  [1dea7af3] OrdinaryDiffEq v5.40.0
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v0.3.12
  [e409e4f3] PoissonRandom v0.4.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.1.0
  [33c8b6b6] ProgressLogging v0.1.2
  [92933f4c] ProgressMeter v1.3.0
  [1fd47b50] QuadGK v2.3.1
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.1
  [731186ca] RecursiveArrayTools v2.4.4
  [f2c3362d] RecursiveFactorization v0.1.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.1
  [21efa798] SIMDPirates v0.8.7
  [476501e8] SLEEFPirates v0.5.1
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.8.0
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.3
  [d1185830] SymbolicUtils v0.3.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [5d786b92] TerminalLoggers v0.1.1
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.6
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.2.1
  [3d5dd08c] VectorizationBase v0.12.6
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `@get!(dict, key, default)` at /home/pkgeval/.julia/packages/SymbolicUtils/ANVDR/src/rule_dsl.jl:296 is deprecated, use `get!(()->default, dict, key)` instead.
└ @ Base deprecated.jl:204
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.0625
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
│   estimated_seconds_left = 0.41
└   ϵ = 0.0625
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00054
│   estimated_seconds_left = 0.013
└   ϵ = 0.00052
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.04126152989184125, 0.09226228956228477, 0.10208358231136658]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.011
│   estimated_seconds_left = 0.55
└   ϵ = 0.00022
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.07379570990605035, 0.2333619519714251, 0.26431419631793923]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00049
│   estimated_seconds_left = 0.048
└   ϵ = 0.00426
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.05298350326679967, 0.23694773484358547, 0.24792891963761607]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.095
│   estimated_seconds_left = 19.0
└   ϵ = 0.00235
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.11
│   estimated_seconds_left = 11.0
└   ϵ = 0.00483
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.03579274608863788, 0.26906971669405727, 0.22636947925450296]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.001
│   estimated_seconds_left = 0.4
└   ϵ = 0.00419
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.062
│   estimated_seconds_left = 19.0
└   ϵ = 0.00149
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.065
│   estimated_seconds_left = 13.0
└   ϵ = 0.0102
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.054
│   estimated_seconds_left = 5.4
└   ϵ = 0.00348
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.025524801956090835, 0.27340186972010483, 0.22829211971973287]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.046
│   estimated_seconds_left = 2.2
└   ϵ = 0.00634
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.012
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.06
└   estimated_seconds_left = 54.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.049
└   estimated_seconds_left = 39.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.053
└   estimated_seconds_left = 37.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.048
└   estimated_seconds_left = 29.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.062
└   estimated_seconds_left = 31.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.059
└   estimated_seconds_left = 24.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.055
└   estimated_seconds_left = 16.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.053
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.062
└   estimated_seconds_left = 6.1
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000183
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.095
│   estimated_seconds_left = 7.0
└   ϵ = 0.000183
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.093
│   estimated_seconds_left = 2.2
└   ϵ = 0.000154
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.01416883962915581, 0.014237494975239854, 0.014146057805228526, 0.14449945219669116, 0.055217146177199604]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.091
│   estimated_seconds_left = 4.5
└   ϵ = 0.000141
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.010071698596863665, 0.01033571866265094, 0.010008657991340776, 0.16800072023666224, 0.12373036341902136]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.039
│   estimated_seconds_left = 3.9
└   ϵ = 0.00933
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.007269505823163384, 0.007857856055390055, 0.007095549033097744, 0.18746602911073543, 0.25388632522531285]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.037
│   estimated_seconds_left = 7.5
└   ϵ = 0.0142
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.025
│   estimated_seconds_left = 2.5
└   ϵ = 0.0354
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.00528911382449508, 0.00604335287222264, 0.0050429834594701356, 0.31845505855068684, 0.2648858347035961]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.01
│   estimated_seconds_left = 4.1
└   ϵ = 0.0237
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.016
│   estimated_seconds_left = 4.6
└   ϵ = 0.0558
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.015
│   estimated_seconds_left = 3.0
└   ϵ = 0.0178
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.012
│   estimated_seconds_left = 1.2
└   ϵ = 0.0427
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.00397777405393878, 0.004910257709643291, 0.0035975216943749883, 0.3108142974214955, 0.29049631429634937]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0051
│   estimated_seconds_left = 0.25
└   ϵ = 0.0349
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
└   estimated_seconds_left = 5.6
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.011
└   estimated_seconds_left = 9.5
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.011
└   estimated_seconds_left = 8.5
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.011
└   estimated_seconds_left = 7.5
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.011
└   estimated_seconds_left = 6.7
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.011
└   estimated_seconds_left = 5.6
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.011
└   estimated_seconds_left = 4.5
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.011
└   estimated_seconds_left = 3.2
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.011
└   estimated_seconds_left = 2.2
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.012
└   estimated_seconds_left = 1.2
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0052
│   estimated_seconds_left = 0.38
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00032
│   estimated_seconds_left = 0.0078
└   ϵ = 0.000225
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.05085972043544446, 0.15257847635751157]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.14
│   estimated_seconds_left = 7.1
└   ϵ = 0.000145
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.04157323730240742, 0.18120995952099445]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00011
│   estimated_seconds_left = 0.011
└   ϵ = 0.00431
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.030612652842013283, 0.19117013012218148]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00028
│   estimated_seconds_left = 0.056
└   ϵ = 0.00665
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.027
│   estimated_seconds_left = 2.6
└   ϵ = 0.00338
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.02016883515440868, 0.1792519194288795]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.026
│   estimated_seconds_left = 10.0
└   ϵ = 0.00914
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.015
│   estimated_seconds_left = 4.6
└   ϵ = 0.0216
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.016
│   estimated_seconds_left = 3.1
└   ϵ = 0.0175
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.016
│   estimated_seconds_left = 1.6
└   ϵ = 0.0141
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.022049891674537095, 0.2780190007139681]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00028
│   estimated_seconds_left = 0.014
└   ϵ = 0.0174
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00029
└   estimated_seconds_left = 0.29
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.018
└   estimated_seconds_left = 16.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.014
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.018
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.017
└   estimated_seconds_left = 10.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.016
└   estimated_seconds_left = 8.1
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.02
└   estimated_seconds_left = 8.1
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.019
└   estimated_seconds_left = 5.6
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.016
└   estimated_seconds_left = 3.2
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.013
└   estimated_seconds_left = 1.3
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000732
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
│   estimated_seconds_left = 0.41
└   ϵ = 0.000732
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00075
│   estimated_seconds_left = 0.018
└   ϵ = 0.000184
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.014153030502223378, 0.014145915549447954, 0.16152365663939194]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.054
│   estimated_seconds_left = 2.6
└   ϵ = 0.000213
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.010022727528388278, 0.01000368918659996, 0.27579160320529283]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0032
│   estimated_seconds_left = 0.32
└   ϵ = 0.0118
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.007110323285130042, 0.00707670725596359, 0.2055582130777769]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00077
│   estimated_seconds_left = 0.15
└   ϵ = 0.0214
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0051
│   estimated_seconds_left = 0.51
└   ϵ = 0.0416
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.005045779713958266, 0.005005670391327421, 0.20158424692545318]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00038
│   estimated_seconds_left = 0.15
└   ϵ = 0.0358
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0033
│   estimated_seconds_left = 0.99
└   ϵ = 0.0303
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0038
│   estimated_seconds_left = 0.75
└   ϵ = 0.0603
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.002
│   estimated_seconds_left = 0.2
└   ϵ = 0.0416
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.003634868516000742, 0.0035516302238307053, 0.3603441943828915]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0008
│   estimated_seconds_left = 0.039
└   ϵ = 0.0577
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00037
└   estimated_seconds_left = 0.37
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0017
└   estimated_seconds_left = 1.6
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.002
└   estimated_seconds_left = 1.6
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0022
└   estimated_seconds_left = 1.5
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0021
└   estimated_seconds_left = 1.3
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.002
└   estimated_seconds_left = 1.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0018
└   estimated_seconds_left = 0.72
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0027
└   estimated_seconds_left = 0.79
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0017
└   estimated_seconds_left = 0.34
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0023
└   estimated_seconds_left = 0.22
┌ Warning: Assignment to `bayesian_result` in soft scope is ambiguous because a global variable by the same name exists: `bayesian_result` will be treated as a new local. Disambiguate by using `local bayesian_result` to suppress this warning or `global bayesian_result` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqBayes/nafyl/test/dynamicHMC.jl:66
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.02
│   estimated_seconds_left = 1.5
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0046
│   estimated_seconds_left = 0.11
└   ϵ = 0.000119
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0141894886726702, 0.01427814752281364, 0.01423344031982124, 0.01424890292397665, 0.13533902906367573, 0.22467259093816003]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.16
│   estimated_seconds_left = 7.7
└   ϵ = 0.000136
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.010128105958878007, 0.01020407451795964, 0.01024330196780853, 0.010344376730722726, 0.31347155906982954, 0.33072371484096885]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0093
│   estimated_seconds_left = 0.92
└   ϵ = 0.00809
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0071306647026327715, 0.007218536332987231, 0.007189258164607532, 0.007218091846170042, 0.22769979550712557, 0.2532440978849784]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.012
│   estimated_seconds_left = 2.5
└   ϵ = 0.0103
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.043
│   estimated_seconds_left = 4.3
└   ϵ = 0.014
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0051384805769351975, 0.005367387824207095, 0.005302510032638001, 0.005326115486630074, 0.2449749540461459, 0.2733630194978712]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.021
│   estimated_seconds_left = 8.3
└   ϵ = 0.022
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.043
│   estimated_seconds_left = 13.0
└   ϵ = 0.0142
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.024
│   estimated_seconds_left = 4.8
└   ϵ = 0.0108
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.021
│   estimated_seconds_left = 2.1
└   ϵ = 0.021
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (LinearAlgebra.Diagonal), √diag(M⁻¹): [0.0038042812312273433, 0.004043029305362302, 0.004071819944652807, 0.004134410118061361, 0.2608873192760336, 0.26502464026134803]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0035
│   estimated_seconds_left = 0.17
└   ϵ = 0.029
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.015
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.026
└   estimated_seconds_left = 23.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.024
└   estimated_seconds_left = 19.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.024
└   estimated_seconds_left = 17.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.026
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.025
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.022
└   estimated_seconds_left = 8.7
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.024
└   estimated_seconds_left = 7.1
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.024
└   estimated_seconds_left = 4.8
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.024
└   estimated_seconds_left = 2.4
Test Summary: | Pass  Broken  Total
DynamicHMC    |    8       2     10
1529.037854 seconds (815.14 M allocations: 44.888 GiB, 1.86% gc time)
One parameter case
┌ Info: Found initial step size
└   ϵ = 0.025
bayesian_result = Object of type Chains, with data of type 250×14×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, σ[1]

2-element Array{MCMCChains.ChainDataFrame,1}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5002  0.0026    0.0002  0.0001  242.4841  1.0030
        σ[1]  0.1489  0.0323    0.0020  0.0018   63.3770  0.9994

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4954  1.4987  1.5002  1.5016  1.5053
        σ[1]  0.0996  0.1248  0.1443  0.1644  0.2381

┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.018750000000000003
┌ Info: Found initial step size
└   ϵ = 0.00625
┌ Info: Found initial step size
└   ϵ = 0.0234375
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/ZwXQE/src/solve.jl:456
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/xG5ve/src/integrator_interface.jl:323
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
Four parameter case
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
bayesian_result = Object of type Chains, with data of type 250×17×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, b, c, d, σ[1]

2-element Array{MCMCChains.ChainDataFrame,1}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.4994  0.0052    0.0003  0.0001  132.6375  1.0021
           b  0.9999  0.0082    0.0005  0.0000  187.5392  0.9972
           c  2.9997  0.0103    0.0007  0.0007  195.8822  0.9993
           d  1.0014  0.0076    0.0005  0.0005  118.2202  1.0083
        σ[1]  0.1571  0.0360    0.0023  0.0060  101.3819  0.9962

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4899  1.4962  1.4997  1.5028  1.5101
           b  0.9848  0.9945  1.0001  1.0049  1.0155
           c  2.9811  2.9920  2.9994  3.0068  3.0205
           d  0.9873  0.9962  1.0013  1.0061  1.0184
        σ[1]  0.0954  0.1324  0.1532  0.1775  0.2361

Steady state problem
┌ Info: Found initial step size
└   ϵ = 0.8
Test Summary: | Pass  Total
Turing        |   12     12
713.316785 seconds (574.83 M allocations: 30.359 GiB, 4.49% gc time)
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:27
└ @ Core ~/.julia/packages/DiffEqBayes/nafyl/test/abc.jl:27
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:45
└ @ Core ~/.julia/packages/DiffEqBayes/nafyl/test/abc.jl:45
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:88
└ @ Core ~/.julia/packages/DiffEqBayes/nafyl/test/abc.jl:88
Test Summary: | Pass  Total
ABC           |   12     12
 55.238736 seconds (78.94 M allocations: 3.258 GiB, 3.95% gc time)
2297.680529 seconds (1.47 G allocations: 78.508 GiB, 2.73% gc time)
    Testing DiffEqBayes tests passed 
