Julia Version 1.6.0-DEV.212
Commit abc7f755ce (2020-06-11 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed PooledArrays ──────────────── v0.5.3
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed StatsBase ─────────────────── v0.32.2
  Installed DataFrames ────────────────── v0.20.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed CategoricalArrays ─────────── v0.7.7
  Installed DataAPI ───────────────────── v1.3.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.5
  Installed DataValueInterfaces ───────── v1.0.0
  Installed SimilaritySearch ──────────── v0.3.19
  Installed Compat ────────────────────── v3.12.0
  Installed OrderedCollections ────────── v1.2.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed JSON ──────────────────────── v0.21.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed DataStructures ────────────── v0.17.17
  Installed MLDataPattern ─────────────── v0.5.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.12.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.5
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_pDtVvt/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_pDtVvt/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.12.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.5
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9360659371813138
[ Info: 0.8302954188982645
[ Info: 0.5529132370650768
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3226904027412335
mean(cdnet.distances) = 0.3603060412903627
mean(crand.distances) = 0.3346716632197301
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7971901362526371,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.671875,"distances_sum":2086.5106581431255}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8553436147186156,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5,"distances_sum":2506.9532972251723}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2353515625, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.3248215913772583e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.21875,"distances_sum":771.1250042445685}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8553436147186156,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5,"distances_sum":2506.9532972251723}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.947519147519148,"seconds":6.3069164752960205e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.890625,"distances_sum":3234.8122222620277}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8607350982350991,"seconds":5.3532421588897705e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.4765625,"distances_sum":2521.2294538323713}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9518143315018323,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.875,"distances_sum":3303.8315652393962}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.914947032134533,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.6328125,"distances_sum":2920.9264994125524}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.916015625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9518143315018323,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.875,"distances_sum":3303.8315652393962}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9718005952380956,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9921875,"distances_sum":3464.245396165794}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941393,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.984375,"distances_sum":3523.5964702443284}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":3,"bsize":12}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.975950091575092,"seconds":6.183981895446777e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9765625,"distances_sum":3506.3627308288096}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9767513736263741,"seconds":6.373971700668335e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.984375,"distances_sum":3516.704125913744}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706501831501836,"seconds":6.152316927909851e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9609375,"distances_sum":3457.143295151255}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9652758699633704,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.9453125,"distances_sum":3406.872173103198}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941393,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.984375,"distances_sum":3523.5964702443284}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9580078125,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9766941391941393,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.984375,"distances_sum":3523.5964702443284}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4560546875, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.4560546875,"f1":null,"seconds":4.932284355163574e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.9296875,"distances_sum":1247.3453067299874}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2373046875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2373046875,"f1":null,"seconds":3.948807716369629e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":6.4296875,"distances_sum":627.9305957653216}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.599609375, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.599609375,"f1":null,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.5390625,"distances_sum":1711.2509744346921}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.599609375,"state":{"ssize":5,"bsize":3},"perf":{"precision":null,"recall":0.599609375,"f1":null,"seconds":5.025416612625122e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.5390625,"distances_sum":1711.2509744346921}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.78125,"f1":0.8677463161838169,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.640625,"distances_sum":2404.8259878960184}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7666015625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7666015625,"f1":0.8594327547452556,"seconds":5.679205060005188e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.5078125,"distances_sum":2313.269776092274}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8078508297258306,"seconds":5.241483449935913e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":7.9375,"distances_sum":2003.206508695113}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78125,"state":{"ssize":6,"bsize":5},"perf":{"precision":1.0,"recall":0.78125,"f1":0.8677463161838169,"seconds":6.01448118686676e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.640625,"distances_sum":2404.8259878960184}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":10,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.9055813977688983,"seconds":5.41098415851593e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.546875,"distances_sum":2685.5800994207584}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9592662545787549,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8828125,"distances_sum":3121.1539390159724}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9592662545787549,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8828125,"distances_sum":3121.1539390159724}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9267578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.9267578125,"f1":0.9592662545787549,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.6093254089355469e-6,"evaluations":8.8828125,"distances_sum":3121.1539390159724}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.4440308809280396e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":6.078125,"distances_sum":1089.1934444650203}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8546854187479196,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1640625,"distances_sum":2274.8295560439874}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2080078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2080078125,"f1":null,"seconds":3.080815076828003e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":5.5546875,"distances_sum":549.6628480741734}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8546854187479196,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1640625,"distances_sum":2274.8295560439874}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8546854187479196,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1640625,"distances_sum":2274.8295560439874}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.7578125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8546854187479196,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.210719347000122e-6,"evaluations":8.1640625,"distances_sum":2274.8295560439874}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.296875,"distances_sum":645.9949046645412}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.5706907510757446e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.296875,"distances_sum":645.9949046645412}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1455078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1455078125,"f1":null,"seconds":2.823770046234131e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":4.7578125,"distances_sum":287.5201618251218}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.142578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.142578125,"f1":null,"seconds":2.7529895305633545e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":4.7578125,"distances_sum":276.56831192235967}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.158203125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.158203125,"f1":null,"seconds":2.8051435947418213e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":4.8203125,"distances_sum":339.6638642488262}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.36328125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.36328125,"f1":null,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.5234375,"distances_sum":684.284001878392}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.36328125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.36328125,"f1":null,"seconds":3.769993782043457e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":6.5234375,"distances_sum":684.284001878392}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.81640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9820498511904762,"recall":0.81640625,"f1":0.8843234890109896,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.671875,"distances_sum":1657.8363991639576}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":4,"bsize":3}, perf: {"precision":0.9700520833333334,"recall":0.541015625,"f1":0.6796035561660565,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.4765625,"distances_sum":1004.674719031668}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":6,"bsize":3}, perf: {"precision":0.9841145833333333,"recall":0.533203125,"f1":0.6801120754245762,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.53125,"distances_sum":977.4997387123195}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":2,"bsize":4}, perf: {"precision":0.9763020833333332,"recall":0.646484375,"f1":0.7690679112554115,"seconds":4.794448614120483e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":7.7734375,"distances_sum":1208.5109940996606}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":0.9830915178571428,"recall":0.7900390625,"f1":0.8693200029137532,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.546875,"distances_sum":1601.3028485995956}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.81640625,"state":{"ssize":1,"bsize":6},"perf":{"precision":0.9820498511904762,"recall":0.81640625,"f1":0.8843234890109896,"seconds":5.7443976402282715e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.671875,"distances_sum":1657.8363991639576}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":5,"bsize":8}, perf: {"precision":0.9830264136904762,"recall":0.8828125,"f1":0.9251337854853485,"seconds":5.815178155899048e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8828125,"distances_sum":1867.5385976852233}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":0.9775855654761904,"recall":0.912109375,"f1":0.9406836652930404,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.875,"distances_sum":2011.5992777806832}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.828125, conf: {"ssize":3,"bsize":6}, perf: {"precision":0.9850260416666666,"recall":0.828125,"f1":0.8926542207792211,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.65625,"distances_sum":1681.7930773687349}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9189453125, conf: {"ssize":6,"bsize":8}, perf: {"precision":0.9862351190476191,"recall":0.9189453125,"f1":0.9479624542124543,"seconds":6.083399057388306e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.90625,"distances_sum":1980.23122482806}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":6,"bsize":9}, perf: {"precision":0.9816778273809524,"recall":0.935546875,"f1":0.9560110462454213,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2050.776075892111}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":9}, perf: {"precision":0.9829985119047618,"recall":0.888671875,"f1":0.9287002060439564,"seconds":6.0033053159713745e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.8515625,"distances_sum":1897.6560223424713}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":6,"bsize":9},"perf":{"precision":0.9816778273809524,"recall":0.935546875,"f1":0.9560110462454213,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2050.776075892111}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":6,"bsize":9},"perf":{"precision":0.9816778273809524,"recall":0.935546875,"f1":0.9560110462454213,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.2032687664031982e-6,"evaluations":8.9140625,"distances_sum":2050.776075892111}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.09375,"distances_sum":423.14453380340245}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.23046875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.5371631383895874e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":6.09375,"distances_sum":423.14453380340245}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76171875, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.76171875,"f1":0.8565106768231777,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.15625,"distances_sum":1732.3272298302727}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76171875,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.76171875,"f1":0.8565106768231777,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.15625,"distances_sum":1732.3272298302727}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.930612096237097,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.6953125,"distances_sum":2068.7253730362154}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.930612096237097,"seconds":6.021931767463684e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.6953125,"distances_sum":2068.7253730362154}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9712282509157517,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2299.7707293338276}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9602335164835168,"seconds":6.034970283508301e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.8984375,"distances_sum":2240.9713776979756}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9369791666666671,"seconds":6.025657057762146e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.75,"distances_sum":2096.303007355929}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":13,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9449321511821518,"seconds":6.027519702911377e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.734375,"distances_sum":2153.8688331290555}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712282509157517,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2299.7707293338276}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9712282509157517,"seconds":6.407499313354492e-6,"exhaustive_search_seconds":1.389533281326294e-6,"evaluations":8.9375,"distances_sum":2299.7707293338276}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.541015625, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.541015625,"f1":0.6871758449883455,"seconds":4.861503839492798e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.8125,"distances_sum":1128.2552166912628}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6513671875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6513671875,"f1":0.7755487567987576,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.4765625,"distances_sum":1425.7203377470826}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6513671875,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6513671875,"f1":0.7755487567987576,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.4765625,"distances_sum":1425.7203377470826}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":9,"bsize":8}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9358230311355317,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.71875,"distances_sum":2150.090964444798}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":9,"bsize":8},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9358230311355317,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.71875,"distances_sum":2150.090964444798}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9466804029304035,"seconds":6.36465847492218e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.734375,"distances_sum":2236.115265332226}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9508642399267405,"seconds":6.154179573059082e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.78125,"distances_sum":2251.2933549464224}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9759329212454215,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.90625,"distances_sum":2405.183528171618}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9759329212454215,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.90625,"distances_sum":2405.183528171618}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":5,"bsize":12},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9759329212454215,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.90625,"distances_sum":2405.183528171618}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6953125, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6953125,"f1":0.8086106601731609,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.1875,"distances_sum":1564.7097536603292}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7189621142746149,"seconds":4.937872290611267e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":7.71875,"distances_sum":1219.1785364291914}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6953125,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6953125,"f1":0.8086106601731609,"seconds":5.4854899644851685e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.1875,"distances_sum":1564.7097536603292}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9104999167499174,"seconds":6.331130862236023e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.78125,"distances_sum":2067.1779494801203}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7021484375, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.7021484375,"f1":0.8169278638028645,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.21875,"distances_sum":1563.5811714183908}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9478136446886454,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.765625,"distances_sum":2241.9679106296558}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9478136446886454,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.765625,"distances_sum":2241.9679106296558}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974519230769231,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9296875,"distances_sum":2465.3552870956137}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.955494505494506,"seconds":6.185844540596008e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.859375,"distances_sum":2330.8543084592698}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":12,"bsize":8}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9608115842490849,"seconds":7.416307926177979e-5,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.890625,"distances_sum":2366.970939964675}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":10,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9540979853479861,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.8203125,"distances_sum":2320.239721552443}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974519230769231,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9296875,"distances_sum":2465.3552870956137}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974519230769231,"seconds":6.537884473800659e-6,"exhaustive_search_seconds":1.5329569578170776e-6,"evaluations":8.9296875,"distances_sum":2465.3552870956137}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.373046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.373046875,"f1":null,"seconds":3.6526471376419067e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":5.9453125,"distances_sum":757.7254999940443}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8712714368964376,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.1328125,"distances_sum":1786.6074078975996}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8712714368964376,"seconds":5.172565579414368e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.1328125,"distances_sum":1786.6074078975996}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9609432234432238,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.7578125,"distances_sum":2325.5540523362565}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9453213453213457,"seconds":5.366280674934387e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.640625,"distances_sum":2234.3943843948214}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.833984375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.833984375,"f1":0.9029621420246429,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.3359375,"distances_sum":1951.134053610976}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9609432234432238,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.7578125,"distances_sum":2325.5540523362565}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9680288461538464,"seconds":5.6549906730651855e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.8359375,"distances_sum":2359.693446070353}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9688816391941395,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.84375,"distances_sum":2352.836429032505}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9787202380952384,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.921875,"distances_sum":2399.5934762975653}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787202380952384,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.921875,"distances_sum":2399.5934762975653}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":5,"bsize":11},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9787202380952384,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3299286365509033e-6,"evaluations":8.921875,"distances_sum":2399.5934762975653}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8517180735930744,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.078125,"distances_sum":1700.2384938841615}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8517180735930744,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.078125,"distances_sum":1700.2384938841615}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9448952089577095,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8046875,"distances_sum":2229.625437601689}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9683092948717951,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2356.390066074285}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9683092948717951,"seconds":6.15045428276062e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2356.390066074285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.974519230769231,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2415.543298532709}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9715659340659346,"seconds":6.254762411117554e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8984375,"distances_sum":2379.076502499102}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9541015625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974519230769231,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2415.543298532709}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9541015625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9541015625,"f1":0.974519230769231,"seconds":6.278976798057556e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.9140625,"distances_sum":2415.543298532709}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.293156623840332e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.140625,"distances_sum":432.76356832846113}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.404296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.404296875,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.578125,"distances_sum":784.5016816322502}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.404296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.404296875,"f1":null,"seconds":3.7495046854019165e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.578125,"distances_sum":784.5016816322502}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5888671875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5888671875,"f1":0.7257593101343107,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.515625,"distances_sum":1255.1318439702347}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5888671875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5888671875,"f1":0.7257593101343107,"seconds":4.36045229434967e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.515625,"distances_sum":1255.1318439702347}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9308925449550458,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7421875,"distances_sum":2073.235771225659}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7734375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7734375,"f1":0.8635135697635706,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.3359375,"distances_sum":1750.043084061143}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9308925449550458,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7421875,"distances_sum":2073.235771225659}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8828125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8828125,"f1":0.9308925449550458,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7421875,"distances_sum":2073.235771225659}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.392578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.392578125,"f1":null,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.3671875,"distances_sum":674.2186589164085}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2705078125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2705078125,"f1":null,"seconds":3.6116689443588257e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":6.046875,"distances_sum":442.5800798845154}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.8665209790209799,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.2890625,"distances_sum":1520.5248458497515}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.8665209790209799,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.2890625,"distances_sum":1520.5248458497515}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9115212912087922,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3671875,"distances_sum":1633.8473739754274}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":5,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9115212912087922,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.3671875,"distances_sum":1633.8473739754274}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9404532967032972,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.546875,"distances_sum":1812.875265575252}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":11,"bsize":9}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9471268315018317,"seconds":5.3104013204574585e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7578125,"distances_sum":1850.1805637982116}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9491529304029312,"seconds":5.360692739486694e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.78125,"distances_sum":1850.4522112971868}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8974609375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.8974609375,"f1":0.9410631035631041,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.6875,"distances_sum":1833.129896391995}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557577838827844,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.8203125,"distances_sum":1872.098918106775}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.935546875, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.935546875,"f1":0.9644173534798538,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":1960.318818968442}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644173534798538,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":1960.318818968442}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.935546875,"state":{"ssize":4,"bsize":9},"perf":{"precision":1.0,"recall":0.935546875,"f1":0.9644173534798538,"seconds":6.448477506637573e-6,"exhaustive_search_seconds":1.5310943126678467e-6,"evaluations":8.7734375,"distances_sum":1960.318818968442}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5771484375, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5771484375,"f1":0.7165355477855483,"seconds":4.2263418436050415e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.765625,"distances_sum":1155.3770220008817}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8569550241425249,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.40625,"distances_sum":1628.01237410049}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8569550241425249,"seconds":4.9658119678497314e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.40625,"distances_sum":1628.01237410049}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9635416666666672,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2128.145067875406}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8739333583083592,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.546875,"distances_sum":1691.912205074854}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.93359375,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.93359375,"f1":0.9635416666666672,"seconds":6.0889869928359985e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.8203125,"distances_sum":2128.145067875406}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9746680402930405,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9140625,"distances_sum":2180.882528107779}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.962890625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.962890625,"f1":0.9799107142857147,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2223.1034886615694}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.962890625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799107142857147,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2223.1034886615694}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.962890625,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.962890625,"f1":0.9799107142857147,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9453125,"distances_sum":2223.1034886615694}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3759765625, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.3759765625,"f1":null,"seconds":3.3602118492126465e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":6.7109375,"distances_sum":692.5928962065055}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8815781440781449,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.46875,"distances_sum":1661.920906578354}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.802734375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.802734375,"f1":0.8815781440781449,"seconds":5.131587386131287e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.46875,"distances_sum":1661.920906578354}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8701171875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8701171875,"f1":0.9252575549450555,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.5625,"distances_sum":1875.6219436121198}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9494333791208799,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.796875,"distances_sum":2025.5186291230352}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9494333791208799,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.796875,"distances_sum":2025.5186291230352}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9492106851481855,"seconds":5.628913640975952e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.765625,"distances_sum":2047.7368269608578}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681433150183155,"seconds":8.009374141693115e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.859375,"distances_sum":2163.071766535464}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9505837912087917,"seconds":6.821006536483765e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.796875,"distances_sum":2048.38563544199}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681433150183155,"seconds":8.009374141693115e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.859375,"distances_sum":2163.071766535464}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.943359375,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9681433150183155,"seconds":8.009374141693115e-6,"exhaustive_search_seconds":1.428648829460144e-6,"evaluations":8.859375,"distances_sum":2163.071766535464}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5810546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5810546875,"f1":0.72197940947941,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.75,"distances_sum":1251.8475626922605}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4140625, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.4140625,"f1":null,"seconds":3.889203071594238e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.9296875,"distances_sum":849.004090580086}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.216796875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.216796875,"f1":null,"seconds":3.1981617212295532e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":6.0859375,"distances_sum":433.77008755176405}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5810546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5810546875,"f1":0.72197940947941,"seconds":6.103888154029846e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.75,"distances_sum":1251.8475626922605}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8048800158175167,"seconds":5.148351192474365e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2265625,"distances_sum":1519.9050813300796}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6806640625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6806640625,"f1":0.7995322385947393,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.234375,"distances_sum":1476.7008944598695}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8080997127872136,"seconds":4.550442099571228e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.2421875,"distances_sum":1513.6117344746303}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9200663919413926,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5703125,"distances_sum":2022.4356654138703}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":9,"bsize":4}, perf: {"precision":null,"recall":0.720703125,"f1":null,"seconds":4.67151403427124e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3515625,"distances_sum":1623.1802221782964}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.86328125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.86328125,"f1":0.9200663919413926,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.5703125,"distances_sum":2022.4356654138703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9475331959706966,"seconds":5.705282092094421e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7734375,"distances_sum":2215.8717421909387}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9564217032967038,"seconds":7.228925824165344e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8515625,"distances_sum":2272.257359774304}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087915,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":2278.007058740201}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9435038919413924,"seconds":5.3960829973220825e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.6640625,"distances_sum":2203.773527375844}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087915,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":2278.007058740201}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9287109375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9287109375,"f1":0.9599587912087915,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.8671875,"distances_sum":2278.007058740201}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5634765625, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.5634765625,"f1":null,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.28125,"distances_sum":1207.9186343477909}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.791015625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.791015625,"f1":0.877097902097903,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5234375,"distances_sum":1784.2021519765647}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.791015625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.791015625,"f1":0.877097902097903,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.5234375,"distances_sum":1784.2021519765647}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9304945054945062,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6171875,"distances_sum":2058.643897436563}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9304945054945062,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6171875,"distances_sum":2058.643897436563}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549455,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8984375,"distances_sum":2332.103531086326}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.969402472527473,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8828125,"distances_sum":2326.399454332592}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549455,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8984375,"distances_sum":2332.103531086326}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9700549450549455,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.8984375,"distances_sum":2332.103531086326}}, n: 9
mean(cfft.distances) = 0.5119527287636407
mean(cdnet.distances) = 0.3609721553863507
mean(crand.distances) = 0.342597982333338
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9111111111111111
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.9111111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.888888888888889
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9111111111111111
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9355555555555556
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9088888888888889
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.888888888888889
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.86
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8733333333333334
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.9466666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9244444444444445
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8511111111111113
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8777777777777778
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.888888888888889
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9377777777777778
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8822222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9133333333333334
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.86
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8622222222222223
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 22, 1]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 22), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 7]]
*** center 12: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 2, 1, 3, 1, 2, 2, 3, 3, 1]
acc = 0.96
*** finished computation of 12 references, err: [Inf, 0.5271163415908814] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 24, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [13, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [5, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [2, 0, 0]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 5, 11]]
** centroid: 8, normalized-entropy: 0.8960382325345574, [(2, 5), (3, 11)]
*** center 9: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 1]]
*** center 11: selecting labels [1] (freq >= 1) [from [30, 0, 0]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 12, 3]]
** centroid: 12, normalized-entropy: 0.7219280948873623, [(2, 12), (3, 3)]
finished with 14 centroids; started with 12
acc = 0.9533333333333334
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.24395686087363563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395686087363563, 0.20569511238547103] ***
*** starting iteration: 2; err: [Inf, 0.24395686087363563, 0.20569511238547103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647] ***
*** starting iteration: 3; err: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647, 0.19417045775286337] ***
*** starting iteration: 4; err: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647, 0.19417045775286337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647, 0.19417045775286337, 0.1928075146413892] ***
*** starting iteration: 5; err: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647, 0.19417045775286337, 0.1928075146413892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647, 0.19417045775286337, 0.1928075146413892, 0.19205659908709583] ***
*** finished computation of 7 references, err: [Inf, 0.24395686087363563, 0.20569511238547103, 0.1977710347264647, 0.19417045775286337, 0.1928075146413892, 0.19205659908709583] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [107, 19, 0]]
** centroid: 1, normalized-entropy: 0.6118228576241159, [(1, 107), (2, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [142, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 75, 8]]
** centroid: 3, normalized-entropy: 0.4574321808988397, [(2, 75), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 67, 21]]
** centroid: 4, normalized-entropy: 0.7927652363756529, [(2, 67), (3, 21)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 31, 0]]
** centroid: 5, normalized-entropy: 0.9860400318404435, [(1, 41), (2, 31)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 8, 0]]
** centroid: 6, normalized-entropy: 0.4574321808988397, [(1, 75), (2, 8)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 51, 0]]
** centroid: 7, normalized-entropy: 0.8708644692353648, [(1, 21), (2, 51)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2432103377726415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2432103377726415, 0.18889781008711898] ***
*** starting iteration: 2; err: [Inf, 0.2432103377726415, 0.18889781008711898] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2432103377726415, 0.18889781008711898, 0.18683694408594936] ***
*** starting iteration: 3; err: [Inf, 0.2432103377726415, 0.18889781008711898, 0.18683694408594936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2432103377726415, 0.18889781008711898, 0.18683694408594936, 0.18604369832529524] ***
*** finished computation of 7 references, err: [Inf, 0.2432103377726415, 0.18889781008711898, 0.18683694408594936, 0.18604369832529524] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 74, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 86, 21]]
** centroid: 2, normalized-entropy: 0.7143881566559658, [(2, 86), (3, 21)]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 1, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [62, 45, 0]]
** centroid: 5, normalized-entropy: 0.9817140837953373, [(1, 62), (2, 45)]
*** center 6: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [74, 28, 0]]
** centroid: 7, normalized-entropy: 0.8478617451660525, [(1, 74), (2, 28)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22017507848079906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017507848079906, 0.19810369791186552] ***
*** starting iteration: 2; err: [Inf, 0.22017507848079906, 0.19810369791186552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058] ***
*** starting iteration: 3; err: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206] ***
*** starting iteration: 4; err: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206, 0.18884051803253715] ***
*** starting iteration: 5; err: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206, 0.18884051803253715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206, 0.18884051803253715, 0.18755322289995213] ***
*** starting iteration: 6; err: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206, 0.18884051803253715, 0.18755322289995213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206, 0.18884051803253715, 0.18755322289995213, 0.18692050645521646] ***
*** finished computation of 7 references, err: [Inf, 0.22017507848079906, 0.19810369791186552, 0.19467735069216058, 0.19192585935802206, 0.18884051803253715, 0.18755322289995213, 0.18692050645521646] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [60, 6, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 60), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 79, 0]]
** centroid: 2, normalized-entropy: 0.16702680404522793, [(1, 2), (2, 79)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [10, 90, 0]]
** centroid: 3, normalized-entropy: 0.46899559358928133, [(1, 10), (2, 90)]
*** center 4: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 71, 26]]
** centroid: 5, normalized-entropy: 0.8386398715015523, [(2, 71), (3, 26)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [116, 3, 0]]
** centroid: 6, normalized-entropy: 0.16977000753515514, [(1, 116), (2, 3)]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19407858681521034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407858681521034, 0.16917854677689997] ***
*** starting iteration: 2; err: [Inf, 0.19407858681521034, 0.16917854677689997] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938] ***
*** starting iteration: 3; err: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426] ***
*** starting iteration: 4; err: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426, 0.1502480722981989] ***
*** starting iteration: 5; err: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426, 0.1502480722981989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426, 0.1502480722981989, 0.14787702558019586] ***
*** starting iteration: 6; err: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426, 0.1502480722981989, 0.14787702558019586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426, 0.1502480722981989, 0.14787702558019586, 0.14703207543363106] ***
*** finished computation of 7 references, err: [Inf, 0.19407858681521034, 0.16917854677689997, 0.15609113587060938, 0.15284872587767426, 0.1502480722981989, 0.14787702558019586, 0.14703207543363106] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [64, 35, 0]]
** centroid: 1, normalized-entropy: 0.9371858565132074, [(1, 64), (2, 35)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 1, 0]]
** centroid: 2, normalized-entropy: 0.12068101401352371, [(1, 60), (2, 1)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [84, 33, 0]]
** centroid: 3, normalized-entropy: 0.8582307926411409, [(1, 84), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [3, 83, 0]]
** centroid: 4, normalized-entropy: 0.21832103023746746, [(1, 3), (2, 83)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 99, 29]]
** centroid: 5, normalized-entropy: 0.7719706699485864, [(2, 99), (3, 29)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22222379020050817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22222379020050817, 0.17288529506439101] ***
*** starting iteration: 2; err: [Inf, 0.22222379020050817, 0.17288529506439101] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534] ***
*** starting iteration: 3; err: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842] ***
*** starting iteration: 4; err: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842, 0.1506652709032441] ***
*** starting iteration: 5; err: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842, 0.1506652709032441] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842, 0.1506652709032441, 0.14883460108514712] ***
*** starting iteration: 6; err: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842, 0.1506652709032441, 0.14883460108514712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842, 0.1506652709032441, 0.14883460108514712, 0.14795626192653868] ***
*** finished computation of 7 references, err: [Inf, 0.22222379020050817, 0.17288529506439101, 0.1586605038094534, 0.1533814018139842, 0.1506652709032441, 0.14883460108514712, 0.14795626192653868] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 105, 21]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(2, 105), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [92, 38, 0]]
** centroid: 3, normalized-entropy: 0.871683617119982, [(1, 92), (2, 38)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 51, 0]]
** centroid: 4, normalized-entropy: 0.9993375041688846, [(1, 48), (2, 51)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 40, 0]]
** centroid: 5, normalized-entropy: 0.9952525494396791, [(1, 34), (2, 40)]
*** center 6: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18236674589273902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18236674589273902, 0.1495397857765945] ***
*** starting iteration: 2; err: [Inf, 0.18236674589273902, 0.1495397857765945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18236674589273902, 0.1495397857765945, 0.1458414789412109] ***
*** starting iteration: 3; err: [Inf, 0.18236674589273902, 0.1495397857765945, 0.1458414789412109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18236674589273902, 0.1495397857765945, 0.1458414789412109, 0.1445721584086682] ***
*** starting iteration: 4; err: [Inf, 0.18236674589273902, 0.1495397857765945, 0.1458414789412109, 0.1445721584086682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18236674589273902, 0.1495397857765945, 0.1458414789412109, 0.1445721584086682, 0.14415711613764323] ***
*** finished computation of 7 references, err: [Inf, 0.18236674589273902, 0.1495397857765945, 0.1458414789412109, 0.1445721584086682, 0.14415711613764323] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 84, 26]]
** centroid: 1, normalized-entropy: 0.7889406572966208, [(2, 84), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [7, 84, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 7), (2, 84)]
*** center 3: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [57, 43, 0]]
** centroid: 6, normalized-entropy: 0.9858150371789197, [(1, 57), (2, 43)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 38, 0]]
** centroid: 7, normalized-entropy: 0.9659212398860464, [(1, 59), (2, 38)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2780190799720921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2780190799720921, 0.21400322884044334] ***
*** starting iteration: 2; err: [Inf, 0.2780190799720921, 0.21400322884044334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806] ***
*** starting iteration: 3; err: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806, 0.18965133708026316] ***
*** starting iteration: 4; err: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806, 0.18965133708026316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806, 0.18965133708026316, 0.18732931587758386] ***
*** starting iteration: 5; err: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806, 0.18965133708026316, 0.18732931587758386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806, 0.18965133708026316, 0.18732931587758386, 0.18661258038302586] ***
*** finished computation of 7 references, err: [Inf, 0.2780190799720921, 0.21400322884044334, 0.19834743195014806, 0.18965133708026316, 0.18732931587758386, 0.18661258038302586] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 26, 0]]
** centroid: 1, normalized-entropy: 0.842657877202239, [(1, 70), (2, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [70, 17, 0]]
** centroid: 2, normalized-entropy: 0.7126368350739763, [(1, 70), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [30, 54, 0]]
** centroid: 5, normalized-entropy: 0.940285958670631, [(1, 30), (2, 54)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 84, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 70, 29]]
** centroid: 7, normalized-entropy: 0.8724752054851931, [(2, 70), (3, 29)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2905233152115765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907] ***
*** starting iteration: 2; err: [Inf, 0.2905233152115765, 0.20853824016108907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257] ***
*** starting iteration: 3; err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617] ***
*** starting iteration: 4; err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818] ***
*** starting iteration: 5; err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873] ***
*** starting iteration: 6; err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873, 0.19022268968364825] ***
*** starting iteration: 7; err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873, 0.19022268968364825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873, 0.19022268968364825, 0.18915279592335715] ***
*** starting iteration: 8; err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873, 0.19022268968364825, 0.18915279592335715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873, 0.19022268968364825, 0.18915279592335715, 0.18865842689834034] ***
*** finished computation of 7 references, err: [Inf, 0.2905233152115765, 0.20853824016108907, 0.20119862516520257, 0.1975100919034617, 0.19467800711574818, 0.19200036467249873, 0.19022268968364825, 0.18915279592335715, 0.18865842689834034] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 8, 0]]
** centroid: 1, normalized-entropy: 0.46506984488164627, [(1, 73), (2, 8)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 49, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 49), (2, 49)]
*** center 3: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [28, 40, 0]]
** centroid: 4, normalized-entropy: 0.9774178175281716, [(1, 28), (2, 40)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 101, 21]]
** centroid: 5, normalized-entropy: 0.6625567995605484, [(2, 101), (3, 21)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [91, 36, 0]]
** centroid: 6, normalized-entropy: 0.8601286843311847, [(1, 91), (2, 36)]
*** center 7: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2743601118294017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743601118294017, 0.20752837620619713] ***
*** starting iteration: 2; err: [Inf, 0.2743601118294017, 0.20752837620619713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858] ***
*** starting iteration: 3; err: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077] ***
*** starting iteration: 4; err: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077, 0.18513625988148913] ***
*** starting iteration: 5; err: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077, 0.18513625988148913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077, 0.18513625988148913, 0.1834649804887408] ***
*** starting iteration: 6; err: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077, 0.18513625988148913, 0.1834649804887408] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077, 0.18513625988148913, 0.1834649804887408, 0.18271478166247995] ***
*** finished computation of 7 references, err: [Inf, 0.2743601118294017, 0.20752837620619713, 0.19361119939787858, 0.18870913366734077, 0.18513625988148913, 0.1834649804887408, 0.18271478166247995] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 84, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [66, 40, 0]]
** centroid: 2, normalized-entropy: 0.9561550236844027, [(1, 66), (2, 40)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [76, 26, 0]]
** centroid: 3, normalized-entropy: 0.8189555018403103, [(1, 76), (2, 26)]
*** center 4: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 14, 0]]
** centroid: 5, normalized-entropy: 0.6944460704939805, [(1, 61), (2, 14)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [92, 2, 0]]
** centroid: 6, normalized-entropy: 0.14854949043034832, [(1, 92), (2, 2)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 83, 26]]
** centroid: 7, normalized-entropy: 0.7925906965800167, [(2, 83), (3, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3683017978330028] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683017978330028, 0.25926601353266443] ***
*** starting iteration: 2; err: [Inf, 0.3683017978330028, 0.25926601353266443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683017978330028, 0.25926601353266443, 0.23931796193771712] ***
*** starting iteration: 3; err: [Inf, 0.3683017978330028, 0.25926601353266443, 0.23931796193771712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683017978330028, 0.25926601353266443, 0.23931796193771712, 0.2350412503076443] ***
*** starting iteration: 4; err: [Inf, 0.3683017978330028, 0.25926601353266443, 0.23931796193771712, 0.2350412503076443] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683017978330028, 0.25926601353266443, 0.23931796193771712, 0.2350412503076443, 0.23446012136327835] ***
*** finished computation of 3 references, err: [Inf, 0.3683017978330028, 0.25926601353266443, 0.23931796193771712, 0.2350412503076443, 0.23446012136327835] ***
*** center 1: selecting labels [1] (freq >= 1) [from [227, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [29, 189, 29]]
** centroid: 2, normalized-entropy: 0.6442635478935517, [(1, 29), (2, 189), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [130, 62, 0]]
** centroid: 3, normalized-entropy: 0.9075250687540451, [(1, 130), (2, 62)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33401863088808964] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33401863088808964, 0.2731726038419101] ***
*** starting iteration: 2; err: [Inf, 0.33401863088808964, 0.2731726038419101] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918] ***
*** starting iteration: 3; err: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196] ***
*** starting iteration: 4; err: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196, 0.23555061420582157] ***
*** starting iteration: 5; err: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196, 0.23555061420582157] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196, 0.23555061420582157, 0.2344837549423193] ***
*** starting iteration: 6; err: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196, 0.23555061420582157, 0.2344837549423193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196, 0.23555061420582157, 0.2344837549423193, 0.23381759322247003] ***
*** finished computation of 3 references, err: [Inf, 0.33401863088808964, 0.2731726038419101, 0.24816244673346918, 0.23892348710129196, 0.23555061420582157, 0.2344837549423193, 0.23381759322247003] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 168, 21]]
** centroid: 1, normalized-entropy: 0.5032583347756457, [(2, 168), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [160, 52, 0]]
** centroid: 2, normalized-entropy: 0.8037159237834126, [(1, 160), (2, 52)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [252, 14, 0]]
** centroid: 3, normalized-entropy: 0.2974722489192896, [(1, 252), (2, 14)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2713368269984891] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2713368269984891, 0.24344870777635919] ***
*** starting iteration: 2; err: [Inf, 0.2713368269984891, 0.24344870777635919] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2713368269984891, 0.24344870777635919, 0.2422315328643061] ***
*** starting iteration: 3; err: [Inf, 0.2713368269984891, 0.24344870777635919, 0.2422315328643061] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2713368269984891, 0.24344870777635919, 0.2422315328643061, 0.2414312789389777] ***
*** finished computation of 3 references, err: [Inf, 0.2713368269984891, 0.24344870777635919, 0.2422315328643061, 0.2414312789389777] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [137, 50, 0]]
** centroid: 1, normalized-entropy: 0.8376794606666293, [(1, 137), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [253, 10, 0]]
** centroid: 2, normalized-entropy: 0.23315223892525258, [(1, 253), (2, 10)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 189, 26]]
** centroid: 3, normalized-entropy: 0.3802481815437724, [(1, 2), (2, 189), (3, 26)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41533007251599374] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41533007251599374, 0.3127887931081827] ***
*** finished computation of 3 references, err: [Inf, 0.41533007251599374, 0.3127887931081827] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [61, 168, 29]]
** centroid: 1, normalized-entropy: 0.7882486112072614, [(1, 61), (2, 168), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [239, 8, 0]]
** centroid: 2, normalized-entropy: 0.20623295179763768, [(1, 239), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [86, 75, 0]]
** centroid: 3, normalized-entropy: 0.9966301036328064, [(1, 86), (2, 75)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32874745229535596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32874745229535596, 0.2949788367272406] ***
*** finished computation of 3 references, err: [Inf, 0.32874745229535596, 0.2949788367272406] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [66, 167, 21]]
** centroid: 1, normalized-entropy: 0.7573109841013329, [(1, 66), (2, 167), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [211, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [135, 67, 0]]
** centroid: 3, normalized-entropy: 0.9166368225412357, [(1, 135), (2, 67)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.49468220754162123] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.49468220754162123, 0.3223219393421596] ***
*** finished computation of 3 references, err: [Inf, 0.49468220754162123, 0.3223219393421596] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [118, 42, 0]]
** centroid: 1, normalized-entropy: 0.8304955225035798, [(1, 118), (2, 42)]
*** center 2: selecting labels [1] (freq >= 1) [from [147, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [127, 207, 26]]
** centroid: 3, normalized-entropy: 0.7969710576357528, [(1, 127), (2, 207), (3, 26)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2759116597560321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2759116597560321, 0.23281673169009634] ***
*** starting iteration: 2; err: [Inf, 0.2759116597560321, 0.23281673169009634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2759116597560321, 0.23281673169009634, 0.21803665952407406] ***
*** starting iteration: 3; err: [Inf, 0.2759116597560321, 0.23281673169009634, 0.21803665952407406] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2759116597560321, 0.23281673169009634, 0.21803665952407406, 0.19845648425597665] ***
*** finished computation of 7 references, err: [Inf, 0.2759116597560321, 0.23281673169009634, 0.21803665952407406, 0.19845648425597665] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 93, 5]]
** centroid: 1, normalized-entropy: 0.290715865467415, [(2, 93), (3, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 24, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 72), (2, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [95, 3, 0]]
** centroid: 3, normalized-entropy: 0.19745300438456026, [(1, 95), (2, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 51, 24]]
** centroid: 5, normalized-entropy: 0.9043814577244941, [(2, 51), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [63, 34, 0]]
** centroid: 6, normalized-entropy: 0.9345275660736609, [(1, 63), (2, 34)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [64, 46, 0]]
** centroid: 7, normalized-entropy: 0.980597440991727, [(1, 64), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.252352655943444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.252352655943444, 0.1976727675786172] ***
*** starting iteration: 2; err: [Inf, 0.252352655943444, 0.1976727675786172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.252352655943444, 0.1976727675786172, 0.18996442113535247] ***
*** starting iteration: 3; err: [Inf, 0.252352655943444, 0.1976727675786172, 0.18996442113535247] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.252352655943444, 0.1976727675786172, 0.18996442113535247, 0.1886298806745855] ***
*** finished computation of 7 references, err: [Inf, 0.252352655943444, 0.1976727675786172, 0.18996442113535247, 0.1886298806745855] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [62, 49, 0]]
** centroid: 1, normalized-entropy: 0.9900829509840566, [(1, 62), (2, 49)]
*** center 2: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 25, 0]]
** centroid: 3, normalized-entropy: 0.9445911819316588, [(1, 44), (2, 25)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 105, 21]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(2, 105), (3, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [67, 34, 0]]
** centroid: 6, normalized-entropy: 0.9215608652945444, [(1, 67), (2, 34)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [57, 21, 0]]
** centroid: 7, normalized-entropy: 0.8403586716091169, [(1, 57), (2, 21)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24744029308081433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24744029308081433, 0.1986652035545418] ***
*** starting iteration: 2; err: [Inf, 0.24744029308081433, 0.1986652035545418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24744029308081433, 0.1986652035545418, 0.19222691149145052] ***
*** starting iteration: 3; err: [Inf, 0.24744029308081433, 0.1986652035545418, 0.19222691149145052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24744029308081433, 0.1986652035545418, 0.19222691149145052, 0.19045645728249333] ***
*** finished computation of 7 references, err: [Inf, 0.24744029308081433, 0.1986652035545418, 0.19222691149145052, 0.19045645728249333] ***
*** center 1: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [102, 27, 0]]
** centroid: 2, normalized-entropy: 0.7401470427139037, [(1, 102), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [3, 94, 0]]
** centroid: 3, normalized-entropy: 0.19902377455969078, [(1, 3), (2, 94)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 79, 26]]
** centroid: 4, normalized-entropy: 0.8074825483550796, [(2, 79), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 41, 0]]
** centroid: 5, normalized-entropy: 0.9651061634819187, [(1, 64), (2, 41)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [65, 8, 0]]
** centroid: 6, normalized-entropy: 0.4986751363204345, [(1, 65), (2, 8)]
*** center 7: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3698693332632353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3698693332632353, 0.3016520632623598] ***
*** starting iteration: 2; err: [Inf, 0.3698693332632353, 0.3016520632623598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3698693332632353, 0.3016520632623598, 0.295231348166111] ***
*** starting iteration: 3; err: [Inf, 0.3698693332632353, 0.3016520632623598, 0.295231348166111] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3698693332632353, 0.3016520632623598, 0.295231348166111, 0.29373490601370317] ***
*** finished computation of 3 references, err: [Inf, 0.3698693332632353, 0.3016520632623598, 0.295231348166111, 0.29373490601370317] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [103, 162, 21]]
** centroid: 1, normalized-entropy: 0.8023822264167371, [(1, 103), (2, 162), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [110, 72, 0]]
** centroid: 3, normalized-entropy: 0.9683211863989214, [(1, 110), (2, 72)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4563613672820346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4563613672820346, 0.30359012712312605] ***
*** starting iteration: 2; err: [Inf, 0.4563613672820346, 0.30359012712312605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4563613672820346, 0.30359012712312605, 0.2940993332855593] ***
*** starting iteration: 3; err: [Inf, 0.4563613672820346, 0.30359012712312605, 0.2940993332855593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4563613672820346, 0.30359012712312605, 0.2940993332855593, 0.2918742704058605] ***
*** finished computation of 3 references, err: [Inf, 0.4563613672820346, 0.30359012712312605, 0.2940993332855593, 0.2918742704058605] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [63, 158, 26]]
** centroid: 1, normalized-entropy: 0.793053872099253, [(1, 63), (2, 158), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [122, 91, 0]]
** centroid: 2, normalized-entropy: 0.9846661111143196, [(1, 122), (2, 91)]
*** center 3: selecting labels [1] (freq >= 1) [from [207, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18846611085266726] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18846611085266726, 0.15018941236970326] ***
*** starting iteration: 2; err: [Inf, 0.18846611085266726, 0.15018941236970326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18846611085266726, 0.15018941236970326, 0.1472356442051629] ***
*** starting iteration: 3; err: [Inf, 0.18846611085266726, 0.15018941236970326, 0.1472356442051629] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18846611085266726, 0.15018941236970326, 0.1472356442051629, 0.14613001315026647] ***
*** starting iteration: 4; err: [Inf, 0.18846611085266726, 0.15018941236970326, 0.1472356442051629, 0.14613001315026647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18846611085266726, 0.15018941236970326, 0.1472356442051629, 0.14613001315026647, 0.14547394239203865] ***
*** finished computation of 7 references, err: [Inf, 0.18846611085266726, 0.15018941236970326, 0.1472356442051629, 0.14613001315026647, 0.14547394239203865] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [53, 34, 0]]
** centroid: 2, normalized-entropy: 0.9653168212008997, [(1, 53), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 85, 29]]
** centroid: 3, normalized-entropy: 0.8181559928454062, [(2, 85), (3, 29)]
*** center 4: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 60, 0]]
** centroid: 5, normalized-entropy: 0.9440870182837795, [(1, 34), (2, 60)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 72, 0]]
** centroid: 6, normalized-entropy: 0.1792560669283214, [(1, 2), (2, 72)]
*** center 7: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19092722717013538] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19092722717013538, 0.14740180828073796] ***
*** starting iteration: 2; err: [Inf, 0.19092722717013538, 0.14740180828073796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19092722717013538, 0.14740180828073796, 0.14265059903571228] ***
*** starting iteration: 3; err: [Inf, 0.19092722717013538, 0.14740180828073796, 0.14265059903571228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19092722717013538, 0.14740180828073796, 0.14265059903571228, 0.14216675557059305] ***
*** finished computation of 7 references, err: [Inf, 0.19092722717013538, 0.14740180828073796, 0.14265059903571228, 0.14216675557059305] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [77, 38, 0]]
** centroid: 1, normalized-entropy: 0.9153699714281696, [(1, 77), (2, 38)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 6, 0]]
** centroid: 2, normalized-entropy: 0.3912435636292556, [(1, 72), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 80, 21]]
** centroid: 3, normalized-entropy: 0.7374895672137457, [(2, 80), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [98, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 26, 0]]
** centroid: 5, normalized-entropy: 0.8386398715015523, [(1, 71), (2, 26)]
*** center 6: selecting labels [1] (freq >= 2) [from [90, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [4, 83, 0]]
** centroid: 7, normalized-entropy: 0.2690553027246505, [(1, 4), (2, 83)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19494690706274811] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19494690706274811, 0.15432178220785653] ***
*** starting iteration: 2; err: [Inf, 0.19494690706274811, 0.15432178220785653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19494690706274811, 0.15432178220785653, 0.1499215798156484] ***
*** starting iteration: 3; err: [Inf, 0.19494690706274811, 0.15432178220785653, 0.1499215798156484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19494690706274811, 0.15432178220785653, 0.1499215798156484, 0.14924016068068177] ***
*** finished computation of 7 references, err: [Inf, 0.19494690706274811, 0.15432178220785653, 0.1499215798156484, 0.14924016068068177] ***
*** center 1: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [74, 21, 0]]
** centroid: 2, normalized-entropy: 0.762084924805724, [(1, 74), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 69, 26]]
** centroid: 3, normalized-entropy: 0.846701711600821, [(2, 69), (3, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 85, 0]]
** centroid: 5, normalized-entropy: 0.42304881571335795, [(1, 8), (2, 85)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [12, 70, 0]]
** centroid: 6, normalized-entropy: 0.6006085754131871, [(1, 12), (2, 70)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [71, 4, 0]]
** centroid: 7, normalized-entropy: 0.3003914173647818, [(1, 71), (2, 4)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2504080394045212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2504080394045212, 0.21207465854258062] ***
*** finished computation of 7 references, err: [Inf, 0.2504080394045212, 0.21207465854258062] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [81, 28, 0]]
** centroid: 1, normalized-entropy: 0.8220027830221787, [(1, 81), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [72, 75, 0]]
** centroid: 2, normalized-entropy: 0.9996995428565171, [(1, 72), (2, 75)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 31, 0]]
** centroid: 3, normalized-entropy: 0.956652272148091, [(1, 51), (2, 31)]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 117, 29]]
** centroid: 5, normalized-entropy: 0.7191798941542781, [(2, 117), (3, 29)]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [43, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23067682198244616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23067682198244616, 0.19685298111150112] ***
*** finished computation of 7 references, err: [Inf, 0.23067682198244616, 0.19685298111150112] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [39, 62, 0]]
** centroid: 1, normalized-entropy: 0.9622623958249239, [(1, 39), (2, 62)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 2, 0]]
** centroid: 2, normalized-entropy: 0.19364280468389852, [(1, 65), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [46, 54, 0]]
** centroid: 3, normalized-entropy: 0.9953784388202258, [(1, 46), (2, 54)]
*** center 4: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 116, 21]]
** centroid: 7, normalized-entropy: 0.6179995186309477, [(2, 116), (3, 21)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3064577104342261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3064577104342261, 0.22265168963030896] ***
*** finished computation of 7 references, err: [Inf, 0.3064577104342261, 0.22265168963030896] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [65, 6, 0]]
** centroid: 1, normalized-entropy: 0.4178642624458583, [(1, 65), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 27, 0]]
** centroid: 2, normalized-entropy: 0.954434002924965, [(1, 45), (2, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 118, 1]]
*** center 5: selecting labels [1, 2, 3] (freq >= 2) [from [37, 98, 25]]
** centroid: 5, normalized-entropy: 0.8455276981651266, [(1, 37), (2, 98), (3, 25)]
*** center 6: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4411678697141978] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4411678697141978, 0.34350716878936904] ***
*** starting iteration: 2; err: [Inf, 0.4411678697141978, 0.34350716878936904] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4411678697141978, 0.34350716878936904, 0.34053576492366044] ***
*** starting iteration: 3; err: [Inf, 0.4411678697141978, 0.34350716878936904, 0.34053576492366044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4411678697141978, 0.34350716878936904, 0.34053576492366044, 0.338148045339258] ***
*** finished computation of 3 references, err: [Inf, 0.4411678697141978, 0.34350716878936904, 0.34053576492366044, 0.338148045339258] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [96, 126, 0]]
** centroid: 1, normalized-entropy: 0.9867867202680318, [(1, 96), (2, 126)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [61, 125, 29]]
** centroid: 2, normalized-entropy: 0.8583051003762899, [(1, 61), (2, 125), (3, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [229, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42065490821217266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42065490821217266, 0.3345544097185515] ***
*** starting iteration: 2; err: [Inf, 0.42065490821217266, 0.3345544097185515] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42065490821217266, 0.3345544097185515, 0.3329308029868803] ***
*** starting iteration: 3; err: [Inf, 0.42065490821217266, 0.3345544097185515, 0.3329308029868803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42065490821217266, 0.3345544097185515, 0.3329308029868803, 0.33227757207289715] ***
*** finished computation of 3 references, err: [Inf, 0.42065490821217266, 0.3345544097185515, 0.3329308029868803, 0.33227757207289715] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [85, 128, 21]]
** centroid: 1, normalized-entropy: 0.8321490223508414, [(1, 85), (2, 128), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [213, 2, 0]]
** centroid: 2, normalized-entropy: 0.07613169094711808, [(1, 213), (2, 2)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [114, 104, 0]]
** centroid: 3, normalized-entropy: 0.9984816077977791, [(1, 114), (2, 104)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4147199974779313] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4147199974779313, 0.29943686657525165] ***
*** starting iteration: 2; err: [Inf, 0.4147199974779313, 0.29943686657525165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4147199974779313, 0.29943686657525165, 0.2900736254369044] ***
*** starting iteration: 3; err: [Inf, 0.4147199974779313, 0.29943686657525165, 0.2900736254369044] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4147199974779313, 0.29943686657525165, 0.2900736254369044, 0.28752368743317774] ***
*** finished computation of 3 references, err: [Inf, 0.4147199974779313, 0.29943686657525165, 0.2900736254369044, 0.28752368743317774] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [147, 55, 0]]
** centroid: 1, normalized-entropy: 0.8447133692131717, [(1, 147), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [245, 15, 0]]
** centroid: 2, normalized-entropy: 0.3182152976832332, [(1, 245), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 179, 26]]
** centroid: 3, normalized-entropy: 0.5486778712031519, [(2, 179), (3, 26)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19990612600871302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19990612600871302, 0.14878738789704513] ***
*** starting iteration: 2; err: [Inf, 0.19990612600871302, 0.14878738789704513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19990612600871302, 0.14878738789704513, 0.1457246965658781] ***
*** starting iteration: 3; err: [Inf, 0.19990612600871302, 0.14878738789704513, 0.1457246965658781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19990612600871302, 0.14878738789704513, 0.1457246965658781, 0.1453035656487228] ***
*** finished computation of 7 references, err: [Inf, 0.19990612600871302, 0.14878738789704513, 0.1457246965658781, 0.1453035656487228] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 43, 0]]
** centroid: 1, normalized-entropy: 0.9858150371789197, [(1, 57), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 36, 0]]
** centroid: 2, normalized-entropy: 0.9601186626422924, [(1, 58), (2, 36)]
*** center 3: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 117, 29]]
** centroid: 4, normalized-entropy: 0.7191798941542781, [(2, 117), (3, 29)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 55, 0]]
** centroid: 5, normalized-entropy: 0.9640787648082293, [(1, 35), (2, 55)]
*** center 6: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18563971164143425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563971164143425, 0.1509026252578056] ***
*** starting iteration: 2; err: [Inf, 0.18563971164143425, 0.1509026252578056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563971164143425, 0.1509026252578056, 0.1487909685918081] ***
*** starting iteration: 3; err: [Inf, 0.18563971164143425, 0.1509026252578056, 0.1487909685918081] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18563971164143425, 0.1509026252578056, 0.1487909685918081, 0.14838242902374385] ***
*** finished computation of 7 references, err: [Inf, 0.18563971164143425, 0.1509026252578056, 0.1487909685918081, 0.14838242902374385] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [103, 33, 0]]
** centroid: 1, normalized-entropy: 0.7994146042010714, [(1, 103), (2, 33)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [84, 11, 0]]
** centroid: 2, normalized-entropy: 0.5171354891896202, [(1, 84), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 48, 21]]
** centroid: 3, normalized-entropy: 0.8865408928220899, [(2, 48), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 69, 0]]
** centroid: 5, normalized-entropy: 0.927526588431676, [(1, 36), (2, 69)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 73, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18710822151831422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18710822151831422, 0.15179292340288175] ***
*** starting iteration: 2; err: [Inf, 0.18710822151831422, 0.15179292340288175] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18710822151831422, 0.15179292340288175, 0.14976610815099467] ***
*** starting iteration: 3; err: [Inf, 0.18710822151831422, 0.15179292340288175, 0.14976610815099467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18710822151831422, 0.15179292340288175, 0.14976610815099467, 0.14937550242783604] ***
*** finished computation of 7 references, err: [Inf, 0.18710822151831422, 0.15179292340288175, 0.14976610815099467, 0.14937550242783604] ***
*** center 1: selecting labels [1] (freq >= 1) [from [147, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 68, 26]]
** centroid: 2, normalized-entropy: 0.8507707040532602, [(2, 68), (3, 26)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 7, 0]]
** centroid: 3, normalized-entropy: 0.48791799258948565, [(1, 59), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 31, 0]]
** centroid: 4, normalized-entropy: 0.864862972019945, [(1, 77), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 58, 0]]
** centroid: 5, normalized-entropy: 0.8212809417449864, [(1, 20), (2, 58)]
*** center 6: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 85, 0]]
** centroid: 7, normalized-entropy: 0.09140162014739266, [(1, 1), (2, 85)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4142118870971484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4142118870971484, 0.3450887250174228] ***
*** starting iteration: 2; err: [Inf, 0.4142118870971484, 0.3450887250174228] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4142118870971484, 0.3450887250174228, 0.3395835527864931] ***
*** starting iteration: 3; err: [Inf, 0.4142118870971484, 0.3450887250174228, 0.3395835527864931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4142118870971484, 0.3450887250174228, 0.3395835527864931, 0.33802976620638064] ***
*** finished computation of 3 references, err: [Inf, 0.4142118870971484, 0.3450887250174228, 0.3395835527864931, 0.33802976620638064] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [146, 47, 0]]
** centroid: 1, normalized-entropy: 0.8008505003492645, [(1, 146), (2, 47)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [64, 193, 29]]
** centroid: 2, normalized-entropy: 0.757772103453925, [(1, 64), (2, 193), (3, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [176, 11, 0]]
** centroid: 3, normalized-entropy: 0.32275695889739825, [(1, 176), (2, 11)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36195841411371593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36195841411371593, 0.30025940518714545] ***
*** starting iteration: 2; err: [Inf, 0.36195841411371593, 0.30025940518714545] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36195841411371593, 0.30025940518714545, 0.29184090871380636] ***
*** starting iteration: 3; err: [Inf, 0.36195841411371593, 0.30025940518714545, 0.29184090871380636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36195841411371593, 0.30025940518714545, 0.29184090871380636, 0.29105346143731603] ***
*** finished computation of 3 references, err: [Inf, 0.36195841411371593, 0.30025940518714545, 0.29184090871380636, 0.29105346143731603] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 158, 21]]
** centroid: 1, normalized-entropy: 0.5216033521785791, [(2, 158), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [257, 28, 0]]
** centroid: 2, normalized-entropy: 0.46340952322600026, [(1, 257), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [155, 48, 0]]
** centroid: 3, normalized-entropy: 0.789092159292948, [(1, 155), (2, 48)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.47126415209786066] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47126415209786066, 0.318089761577178] ***
*** starting iteration: 2; err: [Inf, 0.47126415209786066, 0.318089761577178] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47126415209786066, 0.318089761577178, 0.29386957830748056] ***
*** starting iteration: 3; err: [Inf, 0.47126415209786066, 0.318089761577178, 0.29386957830748056] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47126415209786066, 0.318089761577178, 0.29386957830748056, 0.2883849874406919] ***
*** finished computation of 3 references, err: [Inf, 0.47126415209786066, 0.318089761577178, 0.29386957830748056, 0.2883849874406919] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [5, 191, 26]]
** centroid: 1, normalized-entropy: 0.42417334300725296, [(1, 5), (2, 191), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [239, 6, 0]]
** centroid: 2, normalized-entropy: 0.1659565426281793, [(1, 239), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [148, 52, 0]]
** centroid: 3, normalized-entropy: 0.8267463724926181, [(1, 148), (2, 52)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.41782023618836794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41782023618836794, 0.30912758274054203] ***
*** starting iteration: 2; err: [Inf, 0.41782023618836794, 0.30912758274054203] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41782023618836794, 0.30912758274054203, 0.3045740325406596] ***
*** starting iteration: 3; err: [Inf, 0.41782023618836794, 0.30912758274054203, 0.3045740325406596] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41782023618836794, 0.30912758274054203, 0.3045740325406596, 0.30418696037462883] ***
*** finished computation of 3 references, err: [Inf, 0.41782023618836794, 0.30912758274054203, 0.3045740325406596, 0.30418696037462883] ***
*** center 1: selecting labels [1] (freq >= 2) [from [220, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 86, 0]]
** centroid: 2, normalized-entropy: 0.9982828462300607, [(1, 78), (2, 86)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [88, 165, 29]]
** centroid: 3, normalized-entropy: 0.829155542605453, [(1, 88), (2, 165), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40425495811733886] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40425495811733886, 0.3017107919640448] ***
*** starting iteration: 2; err: [Inf, 0.40425495811733886, 0.3017107919640448] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40425495811733886, 0.3017107919640448, 0.295033204897043] ***
*** starting iteration: 3; err: [Inf, 0.40425495811733886, 0.3017107919640448, 0.295033204897043] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40425495811733886, 0.3017107919640448, 0.295033204897043, 0.2919482229329154] ***
*** starting iteration: 4; err: [Inf, 0.40425495811733886, 0.3017107919640448, 0.295033204897043, 0.2919482229329154] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40425495811733886, 0.3017107919640448, 0.295033204897043, 0.2919482229329154, 0.2912894796658268] ***
*** finished computation of 3 references, err: [Inf, 0.40425495811733886, 0.3017107919640448, 0.295033204897043, 0.2919482229329154, 0.2912894796658268] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [1, 165, 21]]
** centroid: 1, normalized-entropy: 0.5086113313826895, [(2, 165), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [267, 15, 0]]
** centroid: 2, normalized-entropy: 0.2998025130558691, [(1, 267), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [144, 54, 0]]
** centroid: 3, normalized-entropy: 0.8453509366224364, [(1, 144), (2, 54)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.42864654443297967] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42864654443297967, 0.34649418511342767] ***
*** starting iteration: 2; err: [Inf, 0.42864654443297967, 0.34649418511342767] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373] ***
*** starting iteration: 3; err: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743] ***
*** starting iteration: 4; err: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743, 0.3026276681728583] ***
*** starting iteration: 5; err: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743, 0.3026276681728583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743, 0.3026276681728583, 0.3014191194734853] ***
*** starting iteration: 6; err: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743, 0.3026276681728583, 0.3014191194734853] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743, 0.3026276681728583, 0.3014191194734853, 0.30166635422854277] ***
*** finished computation of 3 references, err: [Inf, 0.42864654443297967, 0.34649418511342767, 0.33677062776213373, 0.32401360847569743, 0.3026276681728583, 0.3014191194734853, 0.30166635422854277] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 179, 26]]
** centroid: 1, normalized-entropy: 0.5486778712031519, [(2, 179), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [160, 32, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 160), (2, 32)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [232, 38, 0]]
** centroid: 3, normalized-entropy: 0.5861754623084124, [(1, 232), (2, 38)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4435629711497586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4435629711497586, 0.303132410775087] ***
*** starting iteration: 2; err: [Inf, 0.4435629711497586, 0.303132410775087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4435629711497586, 0.303132410775087, 0.2981135427165922] ***
*** starting iteration: 3; err: [Inf, 0.4435629711497586, 0.303132410775087, 0.2981135427165922] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4435629711497586, 0.303132410775087, 0.2981135427165922, 0.2971923900376614] ***
*** finished computation of 3 references, err: [Inf, 0.4435629711497586, 0.303132410775087, 0.2981135427165922, 0.2971923900376614] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 11, 0]]
** centroid: 1, normalized-entropy: 0.25956151908601227, [(1, 240), (2, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [144, 54, 0]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(1, 144), (2, 54)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [2, 186, 29]]
** centroid: 3, normalized-entropy: 0.40441035788181046, [(1, 2), (2, 186), (3, 29)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9329868790946635, 0.9280148411884938, 0.9250058441675207, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.87397876918835, 0.8639507771244297, 0.8629977282671893, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 16
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3974874124109924] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3974874124109924, 0.3251936282734799] ***
*** starting iteration: 2; err: [Inf, 0.3974874124109924, 0.3251936282734799] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3974874124109924, 0.3251936282734799, 0.31361195850032225] ***
*** starting iteration: 3; err: [Inf, 0.3974874124109924, 0.3251936282734799, 0.31361195850032225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3974874124109924, 0.3251936282734799, 0.31361195850032225, 0.31010417690830633] ***
*** starting iteration: 4; err: [Inf, 0.3974874124109924, 0.3251936282734799, 0.31361195850032225, 0.31010417690830633] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3974874124109924, 0.3251936282734799, 0.31361195850032225, 0.31010417690830633, 0.3094755442919316] ***
*** finished computation of 3 references, err: [Inf, 0.3974874124109924, 0.3251936282734799, 0.31361195850032225, 0.31010417690830633, 0.3094755442919316] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [126, 54, 0]]
** centroid: 1, normalized-entropy: 0.8812908992306927, [(1, 126), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [252, 5, 0]]
** centroid: 2, normalized-entropy: 0.13837092586152097, [(1, 252), (2, 5)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [8, 192, 29]]
** centroid: 3, normalized-entropy: 0.4793507220316056, [(1, 8), (2, 192), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4961760541231468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171] ***
*** starting iteration: 2; err: [Inf, 0.4961760541231468, 0.3249025645385171] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276] ***
*** starting iteration: 3; err: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186] ***
*** starting iteration: 4; err: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265] ***
*** starting iteration: 5; err: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265, 0.29654760569797595] ***
*** starting iteration: 6; err: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265, 0.29654760569797595] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265, 0.29654760569797595, 0.2938214063231109] ***
*** starting iteration: 7; err: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265, 0.29654760569797595, 0.2938214063231109] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265, 0.29654760569797595, 0.2938214063231109, 0.2928353516535758] ***
*** finished computation of 3 references, err: [Inf, 0.4961760541231468, 0.3249025645385171, 0.31914381439273276, 0.3151809612772186, 0.30839639692951265, 0.29654760569797595, 0.2938214063231109, 0.2928353516535758] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 161, 21]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(2, 161), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [176, 47, 0]]
** centroid: 2, normalized-entropy: 0.7429373846332498, [(1, 176), (2, 47)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [236, 26, 0]]
** centroid: 3, normalized-entropy: 0.4665711224494238, [(1, 236), (2, 26)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3622563909348296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622563909348296, 0.3146011995953107] ***
*** starting iteration: 2; err: [Inf, 0.3622563909348296, 0.3146011995953107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622563909348296, 0.3146011995953107, 0.3067237087420706] ***
*** starting iteration: 3; err: [Inf, 0.3622563909348296, 0.3146011995953107, 0.3067237087420706] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622563909348296, 0.3146011995953107, 0.3067237087420706, 0.30449396955209607] ***
*** starting iteration: 4; err: [Inf, 0.3622563909348296, 0.3146011995953107, 0.3067237087420706, 0.30449396955209607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622563909348296, 0.3146011995953107, 0.3067237087420706, 0.30449396955209607, 0.3038316367073976] ***
*** finished computation of 3 references, err: [Inf, 0.3622563909348296, 0.3146011995953107, 0.3067237087420706, 0.30449396955209607, 0.3038316367073976] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [73, 177, 26]]
** centroid: 1, normalized-entropy: 0.7820738731429118, [(1, 73), (2, 177), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [213, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [106, 72, 0]]
** centroid: 3, normalized-entropy: 0.9735190023846809, [(1, 106), (2, 72)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3146495563845086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3146495563845086, 0.25132608658133504] ***
*** starting iteration: 2; err: [Inf, 0.3146495563845086, 0.25132608658133504] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3146495563845086, 0.25132608658133504, 0.24657745154954874] ***
*** starting iteration: 3; err: [Inf, 0.3146495563845086, 0.25132608658133504, 0.24657745154954874] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3146495563845086, 0.25132608658133504, 0.24657745154954874, 0.24569019329854408] ***
*** finished computation of 3 references, err: [Inf, 0.3146495563845086, 0.25132608658133504, 0.24657745154954874, 0.24569019329854408] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 175, 29]]
** centroid: 1, normalized-entropy: 0.5898596879060195, [(2, 175), (3, 29)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [121, 51, 0]]
** centroid: 2, normalized-entropy: 0.8769848468487711, [(1, 121), (2, 51)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [265, 25, 0]]
** centroid: 3, normalized-entropy: 0.4236805715709106, [(1, 265), (2, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3622115656686039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622115656686039, 0.2369915344144987] ***
*** starting iteration: 2; err: [Inf, 0.3622115656686039, 0.2369915344144987] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622115656686039, 0.2369915344144987, 0.23420424199756654] ***
*** starting iteration: 3; err: [Inf, 0.3622115656686039, 0.2369915344144987, 0.23420424199756654] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3622115656686039, 0.2369915344144987, 0.23420424199756654, 0.23376525704214152] ***
*** finished computation of 3 references, err: [Inf, 0.3622115656686039, 0.2369915344144987, 0.23420424199756654, 0.23376525704214152] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [84, 120, 19]]
** centroid: 1, normalized-entropy: 0.8292864854514217, [(1, 84), (2, 120), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [112, 114, 2]]
** centroid: 3, normalized-entropy: 0.6711258186942548, [(1, 112), (2, 114), (3, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3043060816036931] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3043060816036931, 0.24753901507632844] ***
*** starting iteration: 2; err: [Inf, 0.3043060816036931, 0.24753901507632844] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3043060816036931, 0.24753901507632844, 0.24217470043312306] ***
*** starting iteration: 3; err: [Inf, 0.3043060816036931, 0.24753901507632844, 0.24217470043312306] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3043060816036931, 0.24753901507632844, 0.24217470043312306, 0.2404922878179794] ***
*** starting iteration: 4; err: [Inf, 0.3043060816036931, 0.24753901507632844, 0.24217470043312306, 0.2404922878179794] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3043060816036931, 0.24753901507632844, 0.24217470043312306, 0.2404922878179794, 0.24035713176844806] ***
*** finished computation of 3 references, err: [Inf, 0.3043060816036931, 0.24753901507632844, 0.24217470043312306, 0.2404922878179794, 0.24035713176844806] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 188, 26]]
** centroid: 1, normalized-entropy: 0.5336439173027161, [(2, 188), (3, 26)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [248, 17, 0]]
** centroid: 2, normalized-entropy: 0.34370683897055854, [(1, 248), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [144, 44, 0]]
** centroid: 3, normalized-entropy: 0.7849920887641585, [(1, 144), (2, 44)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 16)
[0.9329868790946635, 0.9280148411884938, 0.9250058441675207, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.87397876918835, 0.8720307133480786, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 17
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.45159383773784134] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45159383773784134, 0.2853875357221376] ***
*** starting iteration: 2; err: [Inf, 0.45159383773784134, 0.2853875357221376] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484] ***
*** starting iteration: 3; err: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484, 0.27703825219649003] ***
*** starting iteration: 4; err: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484, 0.27703825219649003] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484, 0.27703825219649003, 0.27580603344684784] ***
*** starting iteration: 5; err: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484, 0.27703825219649003, 0.27580603344684784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484, 0.27703825219649003, 0.27580603344684784, 0.27521634755471536] ***
*** finished computation of 3 references, err: [Inf, 0.45159383773784134, 0.2853875357221376, 0.2800643668627484, 0.27703825219649003, 0.27580603344684784, 0.27521634755471536] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [109, 119, 0]]
** centroid: 1, normalized-entropy: 0.9986119210317141, [(1, 109), (2, 119)]
*** center 2: selecting labels [1] (freq >= 2) [from [228, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [49, 132, 29]]
** centroid: 3, normalized-entropy: 0.8236015907226182, [(1, 49), (2, 132), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2735206355233265] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2735206355233265, 0.23516070992983262] ***
*** starting iteration: 2; err: [Inf, 0.2735206355233265, 0.23516070992983262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2735206355233265, 0.23516070992983262, 0.23229590743344494] ***
*** starting iteration: 3; err: [Inf, 0.2735206355233265, 0.23516070992983262, 0.23229590743344494] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2735206355233265, 0.23516070992983262, 0.23229590743344494, 0.23122372310133887] ***
*** starting iteration: 4; err: [Inf, 0.2735206355233265, 0.23516070992983262, 0.23229590743344494, 0.23122372310133887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2735206355233265, 0.23516070992983262, 0.23229590743344494, 0.23122372310133887, 0.23075206675378235] ***
*** finished computation of 3 references, err: [Inf, 0.2735206355233265, 0.23516070992983262, 0.23229590743344494, 0.23122372310133887, 0.23075206675378235] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [266, 7, 0]]
** centroid: 1, normalized-entropy: 0.17203694935311387, [(1, 266), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [145, 56, 0]]
** centroid: 2, normalized-entropy: 0.8535457524356883, [(1, 145), (2, 56)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [1, 171, 21]]
** centroid: 3, normalized-entropy: 0.49802788653447644, [(2, 171), (3, 21)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3781405874853325] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3781405874853325, 0.2836117997403903] ***
*** starting iteration: 2; err: [Inf, 0.3781405874853325, 0.2836117997403903] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394] ***
*** starting iteration: 3; err: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394, 0.23793073361837255] ***
*** starting iteration: 4; err: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394, 0.23793073361837255] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394, 0.23793073361837255, 0.2288014937828908] ***
*** starting iteration: 5; err: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394, 0.23793073361837255, 0.2288014937828908] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394, 0.23793073361837255, 0.2288014937828908, 0.22782836503152368] ***
*** finished computation of 3 references, err: [Inf, 0.3781405874853325, 0.2836117997403903, 0.26865904085684394, 0.23793073361837255, 0.2288014937828908, 0.22782836503152368] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [143, 58, 0]]
** centroid: 1, normalized-entropy: 0.8668502042301284, [(1, 143), (2, 58)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [249, 4, 0]]
** centroid: 2, normalized-entropy: 0.1172209221846178, [(1, 249), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 187, 26]]
** centroid: 3, normalized-entropy: 0.5352697297532726, [(2, 187), (3, 26)]
finished with 5 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9329868790946635, 0.9280148411884938, 0.9250058441675207, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.875072677467887, 0.87397876918835, 0.8720307133480786, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 18
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.33123728392475116] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33123728392475116, 0.25070466845528455] ***
*** starting iteration: 2; err: [Inf, 0.33123728392475116, 0.25070466845528455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33123728392475116, 0.25070466845528455, 0.24495121694866334] ***
*** starting iteration: 3; err: [Inf, 0.33123728392475116, 0.25070466845528455, 0.24495121694866334] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33123728392475116, 0.25070466845528455, 0.24495121694866334, 0.24362231384369884] ***
*** finished computation of 3 references, err: [Inf, 0.33123728392475116, 0.25070466845528455, 0.24495121694866334, 0.24362231384369884] ***
*** center 1: selecting labels [1] (freq >= 1) [from [199, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [102, 76, 0]]
** centroid: 2, normalized-entropy: 0.9845543528607513, [(1, 102), (2, 76)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [85, 175, 29]]
** centroid: 3, normalized-entropy: 0.8141218432262579, [(1, 85), (2, 175), (3, 29)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30039199979799885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30039199979799885, 0.2820081703540781] ***
*** starting iteration: 2; err: [Inf, 0.30039199979799885, 0.2820081703540781] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30039199979799885, 0.2820081703540781, 0.2763204748618013] ***
*** starting iteration: 3; err: [Inf, 0.30039199979799885, 0.2820081703540781, 0.2763204748618013] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30039199979799885, 0.2820081703540781, 0.2763204748618013, 0.2688740396870766] ***
*** finished computation of 3 references, err: [Inf, 0.30039199979799885, 0.2820081703540781, 0.2763204748618013, 0.2688740396870766] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [5, 121, 21]]
** centroid: 1, normalized-entropy: 0.5035466528271919, [(1, 5), (2, 121), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [267, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [140, 113, 0]]
** centroid: 3, normalized-entropy: 0.9917688904049365, [(1, 140), (2, 113)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42907057722089353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42907057722089353, 0.26809700159844696] ***
*** starting iteration: 2; err: [Inf, 0.42907057722089353, 0.26809700159844696] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42907057722089353, 0.26809700159844696, 0.24554161908387065] ***
*** starting iteration: 3; err: [Inf, 0.42907057722089353, 0.26809700159844696, 0.24554161908387065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42907057722089353, 0.26809700159844696, 0.24554161908387065, 0.24069558107747935] ***
*** finished computation of 3 references, err: [Inf, 0.42907057722089353, 0.26809700159844696, 0.24554161908387065, 0.24069558107747935] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [111, 82, 0]]
** centroid: 1, normalized-entropy: 0.9836517235709581, [(1, 111), (2, 82)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [86, 167, 26]]
** centroid: 2, normalized-entropy: 0.8111201876075917, [(1, 86), (2, 167), (3, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 18)
[0.9329868790946635, 0.9280148411884938, 0.9250058441675207, 0.9099908291525057, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.875072677467887, 0.87397876918835, 0.8720307133480786, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 18
iteration 5 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9329868790946635, 0.9280148411884938, 0.9250058441675207, 0.9099908291525057, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.875072677467887, 0.87397876918835, 0.8720307133480786, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 19
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.17855661025958824] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17855661025958824, 0.15417913912848621] ***
*** starting iteration: 2; err: [Inf, 0.17855661025958824, 0.15417913912848621] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17855661025958824, 0.15417913912848621, 0.14902661599403433] ***
*** starting iteration: 3; err: [Inf, 0.17855661025958824, 0.15417913912848621, 0.14902661599403433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17855661025958824, 0.15417913912848621, 0.14902661599403433, 0.14715610994809158] ***
*** starting iteration: 4; err: [Inf, 0.17855661025958824, 0.15417913912848621, 0.14902661599403433, 0.14715610994809158] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17855661025958824, 0.15417913912848621, 0.14902661599403433, 0.14715610994809158, 0.1465151874878508] ***
*** finished computation of 7 references, err: [Inf, 0.17855661025958824, 0.15417913912848621, 0.14902661599403433, 0.14715610994809158, 0.1465151874878508] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 65, 18]]
** centroid: 1, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 29, 0]]
** centroid: 2, normalized-entropy: 0.9029416720373132, [(1, 62), (2, 29)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [24, 61, 0]]
** centroid: 3, normalized-entropy: 0.8586370819183629, [(1, 24), (2, 61)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [111, 38, 0]]
** centroid: 4, normalized-entropy: 0.8191590796855307, [(1, 111), (2, 38)]
*** center 5: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 58, 11]]
** centroid: 7, normalized-entropy: 0.6329208984823799, [(2, 58), (3, 11)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18969118759535936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18969118759535936, 0.1515329107907468] ***
*** starting iteration: 2; err: [Inf, 0.18969118759535936, 0.1515329107907468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433] ***
*** starting iteration: 3; err: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433, 0.14608918103309854] ***
*** starting iteration: 4; err: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433, 0.14608918103309854] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433, 0.14608918103309854, 0.14443736823451617] ***
*** starting iteration: 5; err: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433, 0.14608918103309854, 0.14443736823451617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433, 0.14608918103309854, 0.14443736823451617, 0.14389618095345627] ***
*** finished computation of 7 references, err: [Inf, 0.18969118759535936, 0.1515329107907468, 0.14823762769217433, 0.14608918103309854, 0.14443736823451617, 0.14389618095345627] ***
*** center 1: selecting labels [1] (freq >= 1) [from [90, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 92, 0]]
** centroid: 2, normalized-entropy: 0.0857426825355026, [(1, 1), (2, 92)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 76, 21]]
** centroid: 3, normalized-entropy: 0.7537153483720096, [(2, 76), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [90, 22, 0]]
** centroid: 4, normalized-entropy: 0.7147274731317893, [(1, 90), (2, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 33, 0]]
** centroid: 5, normalized-entropy: 0.9666186325481027, [(1, 51), (2, 33)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [97, 1, 0]]
** centroid: 6, normalized-entropy: 0.08214305133815322, [(1, 97), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [83, 10, 0]]
** centroid: 7, normalized-entropy: 0.49241092131589825, [(1, 83), (2, 10)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20587314441004234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20587314441004234, 0.15547797282999926] ***
*** starting iteration: 2; err: [Inf, 0.20587314441004234, 0.15547797282999926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568] ***
*** starting iteration: 3; err: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568, 0.14684896030487016] ***
*** starting iteration: 4; err: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568, 0.14684896030487016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568, 0.14684896030487016, 0.1455714794363117] ***
*** starting iteration: 5; err: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568, 0.14684896030487016, 0.1455714794363117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568, 0.14684896030487016, 0.1455714794363117, 0.14500469276807207] ***
*** finished computation of 7 references, err: [Inf, 0.20587314441004234, 0.15547797282999926, 0.14963511069482568, 0.14684896030487016, 0.1455714794363117, 0.14500469276807207] ***
*** center 1: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [110, 7, 0]]
** centroid: 2, normalized-entropy: 0.32676597648839795, [(1, 110), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 70, 1]]
** centroid: 3, normalized-entropy: 0.10679203237584184, [(2, 70), (3, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [18, 88, 0]]
** centroid: 4, normalized-entropy: 0.6572729784684466, [(1, 18), (2, 88)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 55, 25]]
** centroid: 5, normalized-entropy: 0.8960382325345574, [(2, 55), (3, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [100, 5, 0]]
** centroid: 6, normalized-entropy: 0.2761954276479391, [(1, 100), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [59, 24, 0]]
** centroid: 7, normalized-entropy: 0.8676293117125105, [(1, 59), (2, 24)]
finished with 10 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 19)
[0.9329868790946635, 0.9319918721116326, 0.9280148411884938, 0.9250058441675207, 0.9099908291525057, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.875072677467887, 0.87397876918835, 0.8720307133480786, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 20
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.2561672125144529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2561672125144529, 0.19797659328266107] ***
*** starting iteration: 2; err: [Inf, 0.2561672125144529, 0.19797659328266107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2561672125144529, 0.19797659328266107, 0.19157344453643682] ***
*** starting iteration: 3; err: [Inf, 0.2561672125144529, 0.19797659328266107, 0.19157344453643682] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2561672125144529, 0.19797659328266107, 0.19157344453643682, 0.19058142678166093] ***
*** finished computation of 7 references, err: [Inf, 0.2561672125144529, 0.19797659328266107, 0.19157344453643682, 0.19058142678166093] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 121, 29]]
** centroid: 1, normalized-entropy: 0.7083926867030441, [(2, 121), (3, 29)]
*** center 2: selecting labels [1] (freq >= 1) [from [95, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 41, 0]]
** centroid: 4, normalized-entropy: 0.969803406471299, [(1, 62), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 25, 0]]
** centroid: 5, normalized-entropy: 0.8152560766360704, [(1, 74), (2, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [23, 64, 0]]
** centroid: 7, normalized-entropy: 0.8332661971210122, [(1, 23), (2, 64)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24110779513617506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24110779513617506, 0.19106282782496542] ***
*** starting iteration: 2; err: [Inf, 0.24110779513617506, 0.19106282782496542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24110779513617506, 0.19106282782496542, 0.18575665253358356] ***
*** starting iteration: 3; err: [Inf, 0.24110779513617506, 0.19106282782496542, 0.18575665253358356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24110779513617506, 0.19106282782496542, 0.18575665253358356, 0.18339980798710634] ***
*** starting iteration: 4; err: [Inf, 0.24110779513617506, 0.19106282782496542, 0.18575665253358356, 0.18339980798710634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24110779513617506, 0.19106282782496542, 0.18575665253358356, 0.18339980798710634, 0.1827771807196962] ***
*** finished computation of 7 references, err: [Inf, 0.24110779513617506, 0.19106282782496542, 0.18575665253358356, 0.18339980798710634, 0.1827771807196962] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [95, 2, 0]]
** centroid: 1, normalized-entropy: 0.14489961753310668, [(1, 95), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 70, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 83, 21]]
** centroid: 4, normalized-entropy: 0.7257576154473545, [(2, 83), (3, 21)]
*** center 5: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [79, 32, 0]]
** centroid: 6, normalized-entropy: 0.8664998383682039, [(1, 79), (2, 32)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [63, 47, 0]]
** centroid: 7, normalized-entropy: 0.9846841570760806, [(1, 63), (2, 47)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.22778079153151662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22778079153151662, 0.20420016935919] ***
*** starting iteration: 2; err: [Inf, 0.22778079153151662, 0.20420016935919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602] ***
*** starting iteration: 3; err: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194] ***
*** starting iteration: 4; err: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194, 0.18915217803201934] ***
*** starting iteration: 5; err: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194, 0.18915217803201934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194, 0.18915217803201934, 0.1871699789340707] ***
*** starting iteration: 6; err: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194, 0.18915217803201934, 0.1871699789340707] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194, 0.18915217803201934, 0.1871699789340707, 0.18649781529820975] ***
*** finished computation of 7 references, err: [Inf, 0.22778079153151662, 0.20420016935919, 0.19550396423965602, 0.1915143629776194, 0.18915217803201934, 0.1871699789340707, 0.18649781529820975] ***
*** center 1: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [28, 68, 0]]
** centroid: 3, normalized-entropy: 0.8708644692353648, [(1, 28), (2, 68)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 94, 26]]
** centroid: 4, normalized-entropy: 0.7540340561971327, [(2, 94), (3, 26)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [93, 6, 0]]
** centroid: 5, normalized-entropy: 0.32984607020714635, [(1, 93), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [34, 81, 0]]
** centroid: 6, normalized-entropy: 0.8759110349777134, [(1, 34), (2, 81)]
*** center 7: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 20)
[0.9329868790946635, 0.9319918721116326, 0.9280148411884938, 0.9250058441675207, 0.9099908291525057, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8790287293281306, 0.875072677467887, 0.87397876918835, 0.8720307133480786, 0.8669957382532233, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 21
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.2066387352820307] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066387352820307, 0.16197994081429332] ***
*** starting iteration: 2; err: [Inf, 0.2066387352820307, 0.16197994081429332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115] ***
*** starting iteration: 3; err: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115, 0.1500658103720741] ***
*** starting iteration: 4; err: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115, 0.1500658103720741] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115, 0.1500658103720741, 0.14749676614647378] ***
*** starting iteration: 5; err: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115, 0.1500658103720741, 0.14749676614647378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115, 0.1500658103720741, 0.14749676614647378, 0.14690357489041514] ***
*** finished computation of 7 references, err: [Inf, 0.2066387352820307, 0.16197994081429332, 0.15467689956074115, 0.1500658103720741, 0.14749676614647378, 0.14690357489041514] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 110, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 43, 0]]
** centroid: 3, normalized-entropy: 0.9821770638877816, [(1, 59), (2, 43)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [80, 5, 0]]
** centroid: 4, normalized-entropy: 0.32275695889739825, [(1, 80), (2, 5)]
*** center 5: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 73, 29]]
** centroid: 6, normalized-entropy: 0.8612621884720756, [(2, 73), (3, 29)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [78, 20, 0]]
** centroid: 7, normalized-entropy: 0.7300166301457938, [(1, 78), (2, 20)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23081931716174647] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23081931716174647, 0.15949131053351592] ***
*** starting iteration: 2; err: [Inf, 0.23081931716174647, 0.15949131053351592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188] ***
*** starting iteration: 3; err: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628] ***
*** starting iteration: 4; err: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628, 0.1452397703984822] ***
*** starting iteration: 5; err: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628, 0.1452397703984822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628, 0.1452397703984822, 0.143801673328032] ***
*** starting iteration: 6; err: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628, 0.1452397703984822, 0.143801673328032] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628, 0.1452397703984822, 0.143801673328032, 0.1431286910903463] ***
*** finished computation of 7 references, err: [Inf, 0.23081931716174647, 0.15949131053351592, 0.15123456030961188, 0.14710708423147628, 0.1452397703984822, 0.143801673328032, 0.1431286910903463] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [73, 16, 0]]
** centroid: 1, normalized-entropy: 0.6795851972782937, [(1, 73), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [45, 50, 0]]
** centroid: 2, normalized-entropy: 0.9980008838722993, [(1, 45), (2, 50)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 58, 2]]
** centroid: 3, normalized-entropy: 0.2108423003185322, [(2, 58), (3, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [107, 40, 0]]
** centroid: 5, normalized-entropy: 0.8444744445614174, [(1, 107), (2, 40)]
*** center 6: selecting labels [1] (freq >= 2) [from [121, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 70, 19]]
** centroid: 7, normalized-entropy: 0.748088105780153, [(2, 70), (3, 19)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.196041457641261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.196041457641261, 0.15006014382860428] ***
*** starting iteration: 2; err: [Inf, 0.196041457641261, 0.15006014382860428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.196041457641261, 0.15006014382860428, 0.14659243283201306] ***
*** starting iteration: 3; err: [Inf, 0.196041457641261, 0.15006014382860428, 0.14659243283201306] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.196041457641261, 0.15006014382860428, 0.14659243283201306, 0.14513427261235207] ***
*** starting iteration: 4; err: [Inf, 0.196041457641261, 0.15006014382860428, 0.14659243283201306, 0.14513427261235207] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.196041457641261, 0.15006014382860428, 0.14659243283201306, 0.14513427261235207, 0.14452854781432534] ***
*** finished computation of 7 references, err: [Inf, 0.196041457641261, 0.15006014382860428, 0.14659243283201306, 0.14513427261235207, 0.14452854781432534] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 97, 26]]
** centroid: 1, normalized-entropy: 0.7441163072594041, [(2, 97), (3, 26)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [83, 37, 0]]
** centroid: 4, normalized-entropy: 0.8912402011913028, [(1, 83), (2, 37)]
*** center 5: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [14, 70, 0]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(1, 14), (2, 70)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [55, 45, 0]]
** centroid: 7, normalized-entropy: 0.9927744539878083, [(1, 55), (2, 45)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 21)
[0.9329868790946635, 0.9319918721116326, 0.9280148411884938, 0.9250058441675207, 0.9099908291525057, 0.9039848231464997, 0.9010237782692873, 0.8879478280675887, 0.8859578141015266, 0.8810037582492672, 0.8799667931404459, 0.8790287293281306, 0.875072677467887, 0.87397876918835, 0.8720307133480786, 0.8669957382532233, 0.8639507771244297, 0.8629977282671893, 0.832026637415859, 0.8279596962231692, 0.8099686512860166]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.3, 2) => 0.9329868790946635
finished with 21
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.19115348356310277] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19115348356310277, 0.15511357184592633] ***
*** starting iteration: 2; err: [Inf, 0.19115348356310277, 0.15511357184592633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19115348356310277, 0.15511357184592633, 0.15020698390575127] ***
*** starting iteration: 3; err: [Inf, 0.19115348356310277, 0.15511357184592633, 0.15020698390575127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19115348356310277, 0.15511357184592633, 0.15020698390575127, 0.14875735630095005] ***
*** starting iteration: 4; err: [Inf, 0.19115348356310277, 0.15511357184592633, 0.15020698390575127, 0.14875735630095005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19115348356310277, 0.15511357184592633, 0.15020698390575127, 0.14875735630095005, 0.14802271260973066] ***
*** finished computation of 7 references, err: [Inf, 0.19115348356310277, 0.15511357184592633, 0.15020698390575127, 0.14875735630095005, 0.14802271260973066] ***
*** center 1: selecting labels [1] (freq >= 2) [from [178, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 104, 38]]
** centroid: 2, normalized-entropy: 0.8380078505079931, [(2, 104), (3, 38)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [95, 15, 0]]
** centroid: 3, normalized-entropy: 0.5746356978376794, [(1, 95), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [150, 4, 0]]
** centroid: 4, normalized-entropy: 0.17378132267943294, [(1, 150), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [22, 120, 0]]
** centroid: 5, normalized-entropy: 0.6220403090607189, [(1, 22), (2, 120)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [28, 124, 0]]
** centroid: 6, normalized-entropy: 0.6892019851173655, [(1, 28), (2, 124)]
*** center 7: selecting labels [1] (freq >= 2) [from [122, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20578811300359667] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20578811300359667, 0.1521872193813324] ***
*** starting iteration: 2; err: [Inf, 0.20578811300359667, 0.1521872193813324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20578811300359667, 0.1521872193813324, 0.14705929563194514] ***
*** starting iteration: 3; err: [Inf, 0.20578811300359667, 0.1521872193813324, 0.14705929563194514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20578811300359667, 0.1521872193813324, 0.14705929563194514, 0.1462652733307332] ***
*** finished computation of 7 references, err: [Inf, 0.20578811300359667, 0.1521872193813324, 0.14705929563194514, 0.1462652733307332] ***
*** center 1: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 50, 18]]
** centroid: 2, normalized-entropy: 0.8337649072106652, [(2, 50), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 33, 0]]
** centroid: 3, normalized-entropy: 0.9964196342978481, [(1, 38), (2, 33)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [85, 8, 0]]
** centroid: 4, normalized-entropy: 0.42304881571335795, [(1, 85), (2, 8)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 41, 0]]
** centroid: 5, normalized-entropy: 0.9915528503834039, [(1, 33), (2, 41)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 60, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18870957432128488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18870957432128488, 0.15352555620623753] ***
*** starting iteration: 2; err: [Inf, 0.18870957432128488, 0.15352555620623753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18870957432128488, 0.15352555620623753, 0.14837328117480503] ***
*** starting iteration: 3; err: [Inf, 0.18870957432128488, 0.15352555620623753, 0.14837328117480503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18870957432128488, 0.15352555620623753, 0.14837328117480503, 0.14701787052862347] ***
*** starting iteration: 4; err: [Inf, 0.18870957432128488, 0.15352555620623753, 0.14837328117480503, 0.14701787052862347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18870957432128488, 0.15352555620623753, 0.14837328117480503, 0.14701787052862347, 0.14641372149810195] ***
*** finished computation of 7 references, err: [Inf, 0.18870957432128488, 0.15352555620623753, 0.14837328117480503, 0.14701787052862347, 0.14641372149810195] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [3, 52, 0]]
** centroid: 1, normalized-entropy: 0.30540057087920036, [(1, 3), (2, 52)]
*** center 2: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 11, 0]]
** centroid: 3, normalized-entropy: 0.5516699920020824, [(1, 75), (2, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [64, 16, 0]]
** centroid: 5, normalized-entropy: 0.7219280948873623, [(1, 64), (2, 16)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 63, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 27, 18]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(2, 27), (3, 18)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18468517095781864] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18468517095781864, 0.1470243811160326] ***
*** starting iteration: 2; err: [Inf, 0.18468517095781864, 0.1470243811160326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18468517095781864, 0.1470243811160326, 0.14471036012144758] ***
*** starting iteration: 3; err: [Inf, 0.18468517095781864, 0.1470243811160326, 0.14471036012144758] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18468517095781864, 0.1470243811160326, 0.14471036012144758, 0.14387343641836195] ***
*** finished computation of 7 references, err: [Inf, 0.18468517095781864, 0.1470243811160326, 0.14471036012144758, 0.14387343641836195] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 15, 0]]
** centroid: 1, normalized-entropy: 0.7612401496918493, [(1, 53), (2, 15)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 13, 0]]
** centroid: 2, normalized-entropy: 0.6216297820565386, [(1, 71), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 53, 17]]
** centroid: 4, normalized-entropy: 0.7997594113291759, [(2, 53), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 42, 0]]
** centroid: 5, normalized-entropy: 0.9756797868933086, [(1, 29), (2, 42)]
*** center 6: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1937214649077505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937214649077505, 0.1523805024009198] ***
*** starting iteration: 2; err: [Inf, 0.1937214649077505, 0.1523805024009198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937214649077505, 0.1523805024009198, 0.1474880488384515] ***
*** starting iteration: 3; err: [Inf, 0.1937214649077505, 0.1523805024009198, 0.1474880488384515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937214649077505, 0.1523805024009198, 0.1474880488384515, 0.14640105653181673] ***
*** starting iteration: 4; err: [Inf, 0.1937214649077505, 0.1523805024009198, 0.1474880488384515, 0.14640105653181673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1937214649077505, 0.1523805024009198, 0.1474880488384515, 0.14640105653181673, 0.14621595806255935] ***
*** finished computation of 7 references, err: [Inf, 0.1937214649077505, 0.1523805024009198, 0.1474880488384515, 0.14640105653181673, 0.14621595806255935] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [76, 3, 0]]
** centroid: 1, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 60, 19]]
** centroid: 2, normalized-entropy: 0.7958812735955936, [(2, 60), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 9, 0]]
** centroid: 3, normalized-entropy: 0.5801954953637372, [(1, 56), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [51, 30, 0]]
** centroid: 4, normalized-entropy: 0.9509560484549724, [(1, 51), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [4, 79, 0]]
** centroid: 5, normalized-entropy: 0.27866980356389914, [(1, 4), (2, 79)]
*** center 6: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18511559093557298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18511559093557298, 0.1483403609059751] ***
*** starting iteration: 2; err: [Inf, 0.18511559093557298, 0.1483403609059751] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18511559093557298, 0.1483403609059751, 0.14463007151149213] ***
*** starting iteration: 3; err: [Inf, 0.18511559093557298, 0.1483403609059751, 0.14463007151149213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18511559093557298, 0.1483403609059751, 0.14463007151149213, 0.14366849399916828] ***
*** finished computation of 7 references, err: [Inf, 0.18511559093557298, 0.1483403609059751, 0.14463007151149213, 0.14366849399916828] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [49, 28, 0]]
** centroid: 1, normalized-entropy: 0.9456603046006401, [(1, 49), (2, 28)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 3, 0]]
** centroid: 2, normalized-entropy: 0.2899860470332091, [(1, 56), (2, 3)]
*** center 3: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 19]]
** centroid: 4, normalized-entropy: 0.8060914696192223, [(2, 58), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 3, 0]]
** centroid: 5, normalized-entropy: 0.23292785546981223, [(1, 76), (2, 3)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 58, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [44, 17, 0]]
** centroid: 7, normalized-entropy: 0.8536576732793314, [(1, 44), (2, 17)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18828708183579146] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18828708183579146, 0.1552031230919529] ***
*** starting iteration: 2; err: [Inf, 0.18828708183579146, 0.1552031230919529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897] ***
*** starting iteration: 3; err: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515] ***
*** starting iteration: 4; err: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515, 0.14533175382390617] ***
*** starting iteration: 5; err: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515, 0.14533175382390617] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515, 0.14533175382390617, 0.1439326222203672] ***
*** starting iteration: 6; err: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515, 0.14533175382390617, 0.1439326222203672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515, 0.14533175382390617, 0.1439326222203672, 0.14299894142430275] ***
*** finished computation of 7 references, err: [Inf, 0.18828708183579146, 0.1552031230919529, 0.14882072532828897, 0.14681833169050515, 0.14533175382390617, 0.1439326222203672, 0.14299894142430275] ***
*** center 1: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 64, 24]]
** centroid: 2, normalized-entropy: 0.8453509366224364, [(2, 64), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 5, 0]]
** centroid: 3, normalized-entropy: 0.4340811200043348, [(1, 51), (2, 5)]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [5, 55, 0]]
** centroid: 5, normalized-entropy: 0.4138168503036336, [(1, 5), (2, 55)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 52, 0]]
** centroid: 7, normalized-entropy: 0.8380078505079931, [(1, 19), (2, 52)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19199099395330996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19199099395330996, 0.15315098309889436] ***
*** starting iteration: 2; err: [Inf, 0.19199099395330996, 0.15315098309889436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19199099395330996, 0.15315098309889436, 0.15004614731762558] ***
*** starting iteration: 3; err: [Inf, 0.19199099395330996, 0.15315098309889436, 0.15004614731762558] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19199099395330996, 0.15315098309889436, 0.15004614731762558, 0.1496515042744577] ***
*** finished computation of 7 references, err: [Inf, 0.19199099395330996, 0.15315098309889436, 0.15004614731762558, 0.1496515042744577] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 19]]
** centroid: 2, normalized-entropy: 0.8325582396745668, [(2, 53), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 5, 0]]
** centroid: 3, normalized-entropy: 0.3712323266408756, [(1, 65), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [12, 54, 0]]
** centroid: 4, normalized-entropy: 0.6840384356390419, [(1, 12), (2, 54)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 62, 0]]
** centroid: 5, normalized-entropy: 0.8160172973428256, [(1, 21), (2, 62)]
*** center 6: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [48, 1, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.17532450044713915] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17532450044713915, 0.14622318762540817] ***
*** starting iteration: 2; err: [Inf, 0.17532450044713915, 0.14622318762540817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17532450044713915, 0.14622318762540817, 0.14382315328530967] ***
*** starting iteration: 3; err: [Inf, 0.17532450044713915, 0.14622318762540817, 0.14382315328530967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17532450044713915, 0.14622318762540817, 0.14382315328530967, 0.1430547500513494] ***
*** finished computation of 7 references, err: [Inf, 0.17532450044713915, 0.14622318762540817, 0.14382315328530967, 0.1430547500513494] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 7, 0]]
** centroid: 1, normalized-entropy: 0.3685567775377064, [(1, 92), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [54, 6, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 54), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 32, 21]]
** centroid: 3, normalized-entropy: 0.9687003436508602, [(2, 32), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 4, 0]]
** centroid: 5, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [5, 72, 0]]
** centroid: 7, normalized-entropy: 0.34673146824966367, [(1, 5), (2, 72)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18710566552169622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18710566552169622, 0.1520670519210398] ***
*** starting iteration: 2; err: [Inf, 0.18710566552169622, 0.1520670519210398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18710566552169622, 0.1520670519210398, 0.14801498820818962] ***
*** starting iteration: 3; err: [Inf, 0.18710566552169622, 0.1520670519210398, 0.14801498820818962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18710566552169622, 0.1520670519210398, 0.14801498820818962, 0.14718785955943167] ***
*** finished computation of 7 references, err: [Inf, 0.18710566552169622, 0.1520670519210398, 0.14801498820818962, 0.14718785955943167] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 48, 0]]
** centroid: 1, normalized-entropy: 0.9852281360342514, [(1, 36), (2, 48)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [55, 6, 0]]
** centroid: 2, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
*** center 3: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 65, 18]]
** centroid: 4, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 1, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 67, 0]]
** centroid: 6, normalized-entropy: 0.18927843126120178, [(1, 2), (2, 67)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [54, 9, 0]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(1, 54), (2, 9)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1901254231594503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1901254231594503, 0.15240127297583966] ***
*** starting iteration: 2; err: [Inf, 0.1901254231594503, 0.15240127297583966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1901254231594503, 0.15240127297583966, 0.14935690392926335] ***
*** starting iteration: 3; err: [Inf, 0.1901254231594503, 0.15240127297583966, 0.14935690392926335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1901254231594503, 0.15240127297583966, 0.14935690392926335, 0.14841322846338154] ***
*** finished computation of 7 references, err: [Inf, 0.1901254231594503, 0.15240127297583966, 0.14935690392926335, 0.14841322846338154] ***
*** center 1: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 55, 15]]
** centroid: 2, normalized-entropy: 0.7495952572594798, [(2, 55), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [59, 12, 0]]
** centroid: 3, normalized-entropy: 0.6554444445609846, [(1, 59), (2, 12)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [23, 51, 0]]
** centroid: 5, normalized-entropy: 0.8941071841443881, [(1, 23), (2, 51)]
*** center 6: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [15, 52, 0]]
** centroid: 7, normalized-entropy: 0.7671903206448686, [(1, 15), (2, 52)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20122871936298906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20122871936298906, 0.15601266386173665] ***
*** starting iteration: 2; err: [Inf, 0.20122871936298906, 0.15601266386173665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20122871936298906, 0.15601266386173665, 0.1509594310587272] ***
*** starting iteration: 3; err: [Inf, 0.20122871936298906, 0.15601266386173665, 0.1509594310587272] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20122871936298906, 0.15601266386173665, 0.1509594310587272, 0.14994721891917287] ***
*** starting iteration: 4; err: [Inf, 0.20122871936298906, 0.15601266386173665, 0.1509594310587272, 0.14994721891917287] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20122871936298906, 0.15601266386173665, 0.1509594310587272, 0.14994721891917287, 0.14965878416784106] ***
*** finished computation of 7 references, err: [Inf, 0.20122871936298906, 0.15601266386173665, 0.1509594310587272, 0.14994721891917287, 0.14965878416784106] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [15, 54, 0]]
** centroid: 1, normalized-entropy: 0.7553754125614286, [(1, 15), (2, 54)]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [51, 1, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [64, 15, 0]]
** centroid: 4, normalized-entropy: 0.7012065844539666, [(1, 64), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 52, 24]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(2, 52), (3, 24)]
*** center 6: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [9, 56, 0]]
** centroid: 7, normalized-entropy: 0.5801954953637372, [(1, 9), (2, 56)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18754192766174674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18754192766174674, 0.1556976147927344] ***
*** starting iteration: 2; err: [Inf, 0.18754192766174674, 0.1556976147927344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18754192766174674, 0.1556976147927344, 0.15193848024588077] ***
*** starting iteration: 3; err: [Inf, 0.18754192766174674, 0.1556976147927344, 0.15193848024588077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18754192766174674, 0.1556976147927344, 0.15193848024588077, 0.1507162650451064] ***
*** starting iteration: 4; err: [Inf, 0.18754192766174674, 0.1556976147927344, 0.15193848024588077, 0.1507162650451064] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18754192766174674, 0.1556976147927344, 0.15193848024588077, 0.1507162650451064, 0.15004754082672297] ***
*** finished computation of 7 references, err: [Inf, 0.18754192766174674, 0.1556976147927344, 0.15193848024588077, 0.1507162650451064, 0.15004754082672297] ***
*** center 1: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [51, 12, 0]]
** centroid: 2, normalized-entropy: 0.7024665512903904, [(1, 51), (2, 12)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 54, 19]]
** centroid: 3, normalized-entropy: 0.8271595195340525, [(2, 54), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [7, 57, 0]]
** centroid: 6, normalized-entropy: 0.49802788653447644, [(1, 7), (2, 57)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [6, 72, 0]]
** centroid: 7, normalized-entropy: 0.3912435636292556, [(1, 6), (2, 72)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19022659762389957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19022659762389957, 0.14951200726255776] ***
*** starting iteration: 2; err: [Inf, 0.19022659762389957, 0.14951200726255776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19022659762389957, 0.14951200726255776, 0.14646194798499346] ***
*** starting iteration: 3; err: [Inf, 0.19022659762389957, 0.14951200726255776, 0.14646194798499346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19022659762389957, 0.14951200726255776, 0.14646194798499346, 0.14567476923950015] ***
*** finished computation of 7 references, err: [Inf, 0.19022659762389957, 0.14951200726255776, 0.14646194798499346, 0.14567476923950015] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 2, 0]]
** centroid: 1, normalized-entropy: 0.2713895875081112, [(1, 41), (2, 2)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 17, 0]]
** centroid: 2, normalized-entropy: 0.7314625617214586, [(1, 66), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 67, 14]]
** centroid: 3, normalized-entropy: 0.6641593279528072, [(2, 67), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [46, 36, 0]]
** centroid: 5, normalized-entropy: 0.9892452969285004, [(1, 46), (2, 36)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18944645908474922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18944645908474922, 0.1480573565340601] ***
*** starting iteration: 2; err: [Inf, 0.18944645908474922, 0.1480573565340601] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18944645908474922, 0.1480573565340601, 0.14495681864931248] ***
*** starting iteration: 3; err: [Inf, 0.18944645908474922, 0.1480573565340601, 0.14495681864931248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18944645908474922, 0.1480573565340601, 0.14495681864931248, 0.1439622890749015] ***
*** finished computation of 7 references, err: [Inf, 0.18944645908474922, 0.1480573565340601, 0.14495681864931248, 0.1439622890749015] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [89, 6, 0]]
** centroid: 1, normalized-entropy: 0.3398550782221443, [(1, 89), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [40, 32, 0]]
** centroid: 2, normalized-entropy: 0.9910760598382222, [(1, 40), (2, 32)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 55, 12]]
** centroid: 4, normalized-entropy: 0.678114052360606, [(2, 55), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 35, 0]]
** centroid: 5, normalized-entropy: 0.9998484829291058, [(1, 34), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19441812208294867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19441812208294867, 0.15031761201471092] ***
*** starting iteration: 2; err: [Inf, 0.19441812208294867, 0.15031761201471092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19441812208294867, 0.15031761201471092, 0.14773423727042972] ***
*** starting iteration: 3; err: [Inf, 0.19441812208294867, 0.15031761201471092, 0.14773423727042972] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19441812208294867, 0.15031761201471092, 0.14773423727042972, 0.14721517493762076] ***
*** finished computation of 7 references, err: [Inf, 0.19441812208294867, 0.15031761201471092, 0.14773423727042972, 0.14721517493762076] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [73, 5, 0]]
** centroid: 1, normalized-entropy: 0.34351974100740135, [(1, 73), (2, 5)]
*** center 2: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 35, 21]]
** centroid: 3, normalized-entropy: 0.954434002924965, [(2, 35), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [13, 64, 0]]
** centroid: 5, normalized-entropy: 0.6550239908788728, [(1, 13), (2, 64)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [52, 12, 0]]
** centroid: 6, normalized-entropy: 0.6962122601251459, [(1, 52), (2, 12)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 69, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19159531706012786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19159531706012786, 0.14808938462287188] ***
*** starting iteration: 2; err: [Inf, 0.19159531706012786, 0.14808938462287188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19159531706012786, 0.14808938462287188, 0.1461638475526124] ***
*** starting iteration: 3; err: [Inf, 0.19159531706012786, 0.14808938462287188, 0.1461638475526124] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19159531706012786, 0.14808938462287188, 0.1461638475526124, 0.1459089814964682] ***
*** finished computation of 7 references, err: [Inf, 0.19159531706012786, 0.14808938462287188, 0.1461638475526124, 0.1459089814964682] ***
*** center 1: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 63, 19]]
** centroid: 2, normalized-entropy: 0.7809756883263416, [(2, 63), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 26, 0]]
** centroid: 3, normalized-entropy: 0.9811522341999134, [(1, 36), (2, 26)]
*** center 4: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [18, 56, 0]]
** centroid: 5, normalized-entropy: 0.8003922080453356, [(1, 18), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [2, 50, 0]]
** centroid: 6, normalized-entropy: 0.23519338181924157, [(1, 2), (2, 50)]
*** center 7: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20060724301077426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20060724301077426, 0.15133879357017577] ***
*** starting iteration: 2; err: [Inf, 0.20060724301077426, 0.15133879357017577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20060724301077426, 0.15133879357017577, 0.1478097215294838] ***
*** starting iteration: 3; err: [Inf, 0.20060724301077426, 0.15133879357017577, 0.1478097215294838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20060724301077426, 0.15133879357017577, 0.1478097215294838, 0.14723770206607878] ***
*** finished computation of 7 references, err: [Inf, 0.20060724301077426, 0.15133879357017577, 0.1478097215294838, 0.14723770206607878] ***
*** center 1: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 17]]
** centroid: 2, normalized-entropy: 0.7997594113291759, [(2, 53), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [50, 26, 0]]
** centroid: 3, normalized-entropy: 0.9268190639645774, [(1, 50), (2, 26)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [65, 4, 0]]
** centroid: 4, normalized-entropy: 0.3193373865339728, [(1, 65), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [24, 49, 0]]
** centroid: 5, normalized-entropy: 0.9136617865655933, [(1, 24), (2, 49)]
*** center 6: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 50, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19263946809247137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19263946809247137, 0.1512655277545564] ***
*** starting iteration: 2; err: [Inf, 0.19263946809247137, 0.1512655277545564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19263946809247137, 0.1512655277545564, 0.1480605555921793] ***
*** starting iteration: 3; err: [Inf, 0.19263946809247137, 0.1512655277545564, 0.1480605555921793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19263946809247137, 0.1512655277545564, 0.1480605555921793, 0.14766937246127054] ***
*** finished computation of 7 references, err: [Inf, 0.19263946809247137, 0.1512655277545564, 0.1480605555921793, 0.14766937246127054] ***
*** center 1: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 51, 21]]
** centroid: 2, normalized-entropy: 0.8708644692353648, [(2, 51), (3, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [56, 12, 0]]
** centroid: 3, normalized-entropy: 0.6722948170756378, [(1, 56), (2, 12)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [6, 66, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 6), (2, 66)]
*** center 5: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [19, 61, 0]]
** centroid: 6, normalized-entropy: 0.79085809055281, [(1, 19), (2, 61)]
*** center 7: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18369916212931275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369916212931275, 0.15364724154025317] ***
*** starting iteration: 2; err: [Inf, 0.18369916212931275, 0.15364724154025317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369916212931275, 0.15364724154025317, 0.14914908678084612] ***
*** starting iteration: 3; err: [Inf, 0.18369916212931275, 0.15364724154025317, 0.14914908678084612] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369916212931275, 0.15364724154025317, 0.14914908678084612, 0.14775566752953456] ***
*** starting iteration: 4; err: [Inf, 0.18369916212931275, 0.15364724154025317, 0.14914908678084612, 0.14775566752953456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18369916212931275, 0.15364724154025317, 0.14914908678084612, 0.14775566752953456, 0.1473390272492543] ***
*** finished computation of 7 references, err: [Inf, 0.18369916212931275, 0.15364724154025317, 0.14914908678084612, 0.14775566752953456, 0.1473390272492543] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [33, 50, 0]]
** centroid: 1, normalized-entropy: 0.9695235828220429, [(1, 33), (2, 50)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [65, 9, 0]]
** centroid: 2, normalized-entropy: 0.5340042729285396, [(1, 65), (2, 9)]
*** center 3: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 52, 22]]
** centroid: 4, normalized-entropy: 0.8779620013943914, [(2, 52), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 6, 0]]
** centroid: 5, normalized-entropy: 0.4178642624458583, [(1, 65), (2, 6)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 66, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [67, 1, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1952197045031935] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1952197045031935, 0.14911665454506873] ***
*** starting iteration: 2; err: [Inf, 0.1952197045031935, 0.14911665454506873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1952197045031935, 0.14911665454506873, 0.14567209225147962] ***
*** starting iteration: 3; err: [Inf, 0.1952197045031935, 0.14911665454506873, 0.14567209225147962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1952197045031935, 0.14911665454506873, 0.14567209225147962, 0.14468428062088787] ***
*** finished computation of 7 references, err: [Inf, 0.1952197045031935, 0.14911665454506873, 0.14567209225147962, 0.14468428062088787] ***
*** center 1: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 2, 0]]
** centroid: 2, normalized-entropy: 0.21357981533827744, [(1, 57), (2, 2)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 65, 25]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(2, 65), (3, 25)]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 25, 0]]
** centroid: 5, normalized-entropy: 0.961236604722876, [(1, 40), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 29, 0]]
** centroid: 6, normalized-entropy: 0.9372930661967526, [(1, 53), (2, 29)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 52, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18951534087071195] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18951534087071195, 0.1515721515007317] ***
*** starting iteration: 2; err: [Inf, 0.18951534087071195, 0.1515721515007317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18951534087071195, 0.1515721515007317, 0.1471512710400857] ***
*** starting iteration: 3; err: [Inf, 0.18951534087071195, 0.1515721515007317, 0.1471512710400857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18951534087071195, 0.1515721515007317, 0.1471512710400857, 0.14593866819888354] ***
*** starting iteration: 4; err: [Inf, 0.18951534087071195, 0.1515721515007317, 0.1471512710400857, 0.14593866819888354] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18951534087071195, 0.1515721515007317, 0.1471512710400857, 0.14593866819888354, 0.1457841745521873] ***
*** finished computation of 7 references, err: [Inf, 0.18951534087071195, 0.1515721515007317, 0.1471512710400857, 0.14593866819888354, 0.1457841745521873] ***
*** center 1: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 11, 0]]
** centroid: 2, normalized-entropy: 0.5475844288749033, [(1, 76), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 39, 20]]
** centroid: 3, normalized-entropy: 0.9238422284571813, [(2, 39), (3, 20)]
*** center 4: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [41, 42, 0]]
** centroid: 5, normalized-entropy: 0.9998952874186191, [(1, 41), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [16, 35, 0]]
** centroid: 6, normalized-entropy: 0.8974271930876951, [(1, 16), (2, 35)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 49, 1]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19293028754275293] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19293028754275293, 0.1548243221528828] ***
*** starting iteration: 2; err: [Inf, 0.19293028754275293, 0.1548243221528828] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19293028754275293, 0.1548243221528828, 0.14917389783402904] ***
*** starting iteration: 3; err: [Inf, 0.19293028754275293, 0.1548243221528828, 0.14917389783402904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19293028754275293, 0.1548243221528828, 0.14917389783402904, 0.14846003988943995] ***
*** finished computation of 7 references, err: [Inf, 0.19293028754275293, 0.1548243221528828, 0.14917389783402904, 0.14846003988943995] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 30, 0]]
** centroid: 1, normalized-entropy: 0.9826154285526119, [(1, 41), (2, 30)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [58, 4, 0]]
** centroid: 2, normalized-entropy: 0.3451173149449528, [(1, 58), (2, 4)]
*** center 3: selecting labels [1] (freq >= 2) [from [68, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 72, 20]]
** centroid: 4, normalized-entropy: 0.7553754125614286, [(2, 72), (3, 20)]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [53, 26, 0]]
** centroid: 6, normalized-entropy: 0.9140185106642174, [(1, 53), (2, 26)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 71, 0]]
** centroid: 7, normalized-entropy: 0.18116640155354563, [(1, 2), (2, 71)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18625283886864782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18625283886864782, 0.1519397151232697] ***
*** starting iteration: 2; err: [Inf, 0.18625283886864782, 0.1519397151232697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18625283886864782, 0.1519397151232697, 0.1481269039195031] ***
*** starting iteration: 3; err: [Inf, 0.18625283886864782, 0.1519397151232697, 0.1481269039195031] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18625283886864782, 0.1519397151232697, 0.1481269039195031, 0.1469596954882145] ***
*** starting iteration: 4; err: [Inf, 0.18625283886864782, 0.1519397151232697, 0.1481269039195031, 0.1469596954882145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18625283886864782, 0.1519397151232697, 0.1481269039195031, 0.1469596954882145, 0.14612012156657875] ***
*** finished computation of 7 references, err: [Inf, 0.18625283886864782, 0.1519397151232697, 0.1481269039195031, 0.1469596954882145, 0.14612012156657875] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 22, 0]]
** centroid: 3, normalized-entropy: 0.8296071030882032, [(1, 62), (2, 22)]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [35, 35, 0]]
** centroid: 5, normalized-entropy: 1.0, [(1, 35), (2, 35)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 55, 15]]
** centroid: 6, normalized-entropy: 0.7495952572594798, [(2, 55), (3, 15)]
*** center 7: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19486140568181873] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486140568181873, 0.14984114621719347] ***
*** starting iteration: 2; err: [Inf, 0.19486140568181873, 0.14984114621719347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486140568181873, 0.14984114621719347, 0.14686966926977038] ***
*** starting iteration: 3; err: [Inf, 0.19486140568181873, 0.14984114621719347, 0.14686966926977038] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486140568181873, 0.14984114621719347, 0.14686966926977038, 0.14575479307491332] ***
*** starting iteration: 4; err: [Inf, 0.19486140568181873, 0.14984114621719347, 0.14686966926977038, 0.14575479307491332] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19486140568181873, 0.14984114621719347, 0.14686966926977038, 0.14575479307491332, 0.1452906164461747] ***
*** finished computation of 7 references, err: [Inf, 0.19486140568181873, 0.14984114621719347, 0.14686966926977038, 0.14575479307491332, 0.1452906164461747] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 65, 22]]
** centroid: 1, normalized-entropy: 0.8158009273789572, [(2, 65), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [61, 3, 0]]
** centroid: 3, normalized-entropy: 0.2729708579140699, [(1, 61), (2, 3)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [43, 38, 0]]
** centroid: 4, normalized-entropy: 0.9972496329704711, [(1, 43), (2, 38)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [55, 21, 0]]
** centroid: 5, normalized-entropy: 0.8503821170987139, [(1, 55), (2, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20203594837337732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20203594837337732, 0.1489292225651443] ***
*** starting iteration: 2; err: [Inf, 0.20203594837337732, 0.1489292225651443] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20203594837337732, 0.1489292225651443, 0.14534462626464664] ***
*** starting iteration: 3; err: [Inf, 0.20203594837337732, 0.1489292225651443, 0.14534462626464664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20203594837337732, 0.1489292225651443, 0.14534462626464664, 0.1448582712896168] ***
*** finished computation of 7 references, err: [Inf, 0.20203594837337732, 0.1489292225651443, 0.14534462626464664, 0.1448582712896168] ***
*** center 1: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 68, 19]]
** centroid: 2, normalized-entropy: 0.7572182549240017, [(2, 68), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [67, 23, 0]]
** centroid: 3, normalized-entropy: 0.8199653102187632, [(1, 67), (2, 23)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [46, 2, 0]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(1, 46), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [42, 35, 0]]
** centroid: 5, normalized-entropy: 0.9940302114769566, [(1, 42), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [7, 42, 0]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(1, 7), (2, 42)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18561628369800748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18561628369800748, 0.15281718900986016] ***
*** starting iteration: 2; err: [Inf, 0.18561628369800748, 0.15281718900986016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18561628369800748, 0.15281718900986016, 0.14901083873771132] ***
*** starting iteration: 3; err: [Inf, 0.18561628369800748, 0.15281718900986016, 0.14901083873771132] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18561628369800748, 0.15281718900986016, 0.14901083873771132, 0.14740581042692066] ***
*** starting iteration: 4; err: [Inf, 0.18561628369800748, 0.15281718900986016, 0.14901083873771132, 0.14740581042692066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18561628369800748, 0.15281718900986016, 0.14901083873771132, 0.14740581042692066, 0.14654681635648012] ***
*** finished computation of 7 references, err: [Inf, 0.18561628369800748, 0.15281718900986016, 0.14901083873771132, 0.14740581042692066, 0.14654681635648012] ***
*** center 1: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 53, 16]]
** centroid: 2, normalized-entropy: 0.7812812090702043, [(2, 53), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 19, 0]]
** centroid: 3, normalized-entropy: 0.9065795484987461, [(1, 40), (2, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [17, 59, 0]]
** centroid: 5, normalized-entropy: 0.7668379316856329, [(1, 17), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 50, 0]]
** centroid: 6, normalized-entropy: 0.5787946246321198, [(1, 8), (2, 50)]
*** center 7: selecting labels [1] (freq >= 2) [from [59, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19311780915781857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19311780915781857, 0.1457684153234586] ***
*** starting iteration: 2; err: [Inf, 0.19311780915781857, 0.1457684153234586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19311780915781857, 0.1457684153234586, 0.14410873543517663] ***
*** starting iteration: 3; err: [Inf, 0.19311780915781857, 0.1457684153234586, 0.14410873543517663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19311780915781857, 0.1457684153234586, 0.14410873543517663, 0.14356386034190655] ***
*** finished computation of 7 references, err: [Inf, 0.19311780915781857, 0.1457684153234586, 0.14410873543517663, 0.14356386034190655] ***
*** center 1: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 41, 19]]
** centroid: 2, normalized-entropy: 0.9007196798623592, [(2, 41), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [60, 14, 0]]
** centroid: 3, normalized-entropy: 0.699772221773307, [(1, 60), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 20, 0]]
** centroid: 4, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 35, 0]]
** centroid: 5, normalized-entropy: 0.9973487979180449, [(1, 31), (2, 35)]
*** center 6: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 61, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18453801085427404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453801085427404, 0.15028178434073924] ***
*** starting iteration: 2; err: [Inf, 0.18453801085427404, 0.15028178434073924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453801085427404, 0.15028178434073924, 0.1481577179376036] ***
*** starting iteration: 3; err: [Inf, 0.18453801085427404, 0.15028178434073924, 0.1481577179376036] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18453801085427404, 0.15028178434073924, 0.1481577179376036, 0.14787772983312608] ***
*** finished computation of 7 references, err: [Inf, 0.18453801085427404, 0.15028178434073924, 0.1481577179376036, 0.14787772983312608] ***
*** center 1: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 44, 19]]
** centroid: 2, normalized-entropy: 0.8832225588099292, [(2, 44), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [51, 2, 0]]
** centroid: 3, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [54, 7, 0]]
** centroid: 4, normalized-entropy: 0.5140912790181233, [(1, 54), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [21, 56, 0]]
** centroid: 5, normalized-entropy: 0.8453509366224364, [(1, 21), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 61, 0]]
** centroid: 6, normalized-entropy: 0.5535072654547254, [(1, 9), (2, 61)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1933631667010486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1933631667010486, 0.1512801914480515] ***
*** starting iteration: 2; err: [Inf, 0.1933631667010486, 0.1512801914480515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1933631667010486, 0.1512801914480515, 0.147047285661567] ***
*** starting iteration: 3; err: [Inf, 0.1933631667010486, 0.1512801914480515, 0.147047285661567] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1933631667010486, 0.1512801914480515, 0.147047285661567, 0.1453716940637678] ***
*** starting iteration: 4; err: [Inf, 0.1933631667010486, 0.1512801914480515, 0.147047285661567, 0.1453716940637678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1933631667010486, 0.1512801914480515, 0.147047285661567, 0.1453716940637678, 0.14477099014539271] ***
*** finished computation of 7 references, err: [Inf, 0.1933631667010486, 0.1512801914480515, 0.147047285661567, 0.1453716940637678, 0.14477099014539271] ***
*** center 1: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [56, 27, 0]]
** centroid: 2, normalized-entropy: 0.9100534290139191, [(1, 56), (2, 27)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 75, 14]]
** centroid: 3, normalized-entropy: 0.6278191534832795, [(2, 75), (3, 14)]
*** center 4: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [25, 39, 0]]
** centroid: 5, normalized-entropy: 0.9652016987500656, [(1, 25), (2, 39)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 51, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [44, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18675776676274836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18675776676274836, 0.15040465330332517] ***
*** starting iteration: 2; err: [Inf, 0.18675776676274836, 0.15040465330332517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18675776676274836, 0.15040465330332517, 0.14660584711283445] ***
*** starting iteration: 3; err: [Inf, 0.18675776676274836, 0.15040465330332517, 0.14660584711283445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18675776676274836, 0.15040465330332517, 0.14660584711283445, 0.1456678437748924] ***
*** finished computation of 7 references, err: [Inf, 0.18675776676274836, 0.15040465330332517, 0.14660584711283445, 0.1456678437748924] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [39, 34, 0]]
** centroid: 1, normalized-entropy: 0.9966132830150962, [(1, 39), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 15, 0]]
** centroid: 2, normalized-entropy: 0.7219280948873623, [(1, 60), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 67, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [60, 13, 0]]
** centroid: 5, normalized-entropy: 0.6758635715876156, [(1, 60), (2, 13)]
*** center 6: selecting labels [1] (freq >= 2) [from [70, 1, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 54, 18]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(2, 54), (3, 18)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 367,3 => 38,1 => 595), Dict(2 => 366,3 => 21,1 => 613))
[ Info: ===== scores for single classifier: {"micro_f1":0.946,"precision":0.946,"recall":0.946,"macro_recall":0.956691240487673,"macro_f1":0.9322647380625616,"accuracy":0.946,"class_f1":{"2":0.923943661971831,"3":0.9130434782608696,"1":0.9598070739549839},"class_precision":{"2":0.9534883720930233,"3":0.84,"1":0.9461172741679873},"class_recall":{"2":0.8961748633879781,"3":1.0,"1":0.9738988580750407}}
[ Info: ===== scores for 1: {"micro_f1":0.977,"precision":0.977,"recall":0.977,"macro_recall":0.9677602844773171,"macro_f1":0.9608185320488073,"accuracy":0.977,"class_f1":{"2":0.9685362517099864,"3":0.9302325581395349,"1":0.9836867862969005},"class_precision":{"2":0.9698630136986301,"3":0.9090909090909091,"1":0.9836867862969005},"class_recall":{"2":0.9672131147540983,"3":0.9523809523809523,"1":0.9836867862969005}}
[ Info: ===== scores for 5: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9834698710691544,"macro_f1":0.9672924072534208,"accuracy":0.975,"class_f1":{"2":0.9662618083670714,"3":0.9545454545454545,"1":0.9810699588477367},"class_precision":{"2":0.9546666666666667,"3":0.9130434782608695,"1":0.9900332225913622},"class_recall":{"2":0.9781420765027322,"3":1.0,"1":0.9722675367047309}}
[ Info: ===== scores for 7: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9827492965112307,"macro_f1":0.965886582672865,"accuracy":0.973,"class_f1":{"2":0.963758389261745,"3":0.9545454545454545,"1":0.9793559042113955},"class_precision":{"2":0.9472295514511874,"3":0.9130434782608695,"1":0.9916387959866221},"class_recall":{"2":0.9808743169398907,"3":1.0,"1":0.967373572593801}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9838368440914372,"macro_f1":0.9673122753164117,"accuracy":0.975,"class_f1":{"2":0.9663526244952894,"3":0.9545454545454545,"1":0.9810387469084915},"class_precision":{"2":0.9522546419098143,"3":0.9130434782608695,"1":0.9916666666666667},"class_recall":{"2":0.9808743169398907,"3":1.0,"1":0.9706362153344209}}
[ Info: ===== scores for 11: {"micro_f1":0.974,"precision":0.974,"recall":0.974,"macro_recall":0.982926097279051,"macro_f1":0.966578555260909,"accuracy":0.974,"class_f1":{"2":0.9649595687331537,"3":0.9545454545454545,"1":0.9802306425041187},"class_precision":{"2":0.9521276595744681,"3":0.9130434782608695,"1":0.9900166389351082},"class_recall":{"2":0.9781420765027322,"3":1.0,"1":0.9706362153344209}}
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.982, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.982, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.981, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.981, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.982,"k":3,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.982,"precision":0.982,"recall":0.982,"macro_recall":0.971947045516965,"macro_f1":0.9644814916848111,"accuracy":0.982,"class_f1":{"2":0.9754768392370572,"3":0.9302325581395349,"1":0.9877350776778414},"class_precision":{"2":0.9728260869565217,"3":0.9090909090909091,"1":0.9901639344262295},"class_recall":{"2":0.9781420765027322,"3":0.9523809523809523,"1":0.9853181076672104}}
Test Summary: | Pass  Total
AKNC          |    8      8
[338, 1, 4, 2, 1, 2, 9, 10, 6, 11, 1, 2, 2, 4, 9, 10, 1, 5, 2, 2, 20, 8, 16, 16, 22, 4, 11, 2, 2, 4, 4, 101, 16, 8, 23, 25, 4, 2, 8, 4, 5, 13, 3, 5, 6, 16, 16, 2, 5, 10, 26, 9, 11, 11, 69, 18, 5, 9, 20, 12, 54, 363, 3, 39, 4, 4, 11, 16, 10, 10, 13, 12, 62, 16, 21, 14, 20, 25, 11, 2, 12, 21, 7, 24, 2, 18, 2, 22, 5, 35, 3, 33, 17, 22, 92, 3, 17, 17, 4, 22, 10, 9, 29, 6, 42, 21, 41, 33, 19, 4, 34, 13, 122, 15, 38, 21, 8, 64, 19, 43, 11, 19, 17, 20, 26, 5, 21, 35, 2, 33, 16, 26, 57, 65, 4, 15, 270, 101, 18, 21, 2, 10, 21, 10, 6, 18, 26, 10, 18, 121, 11, 65, 8, 25, 7, 29, 129, 3, 14, 14, 11, 9, 36, 8, 7, 2, 5, 34, 28, 279, 17, 57, 14, 18, 23, 1, 12, 19, 8, 39, 43, 30, 77, 17, 28, 9, 52, 15, 11, 8, 67, 34, 75, 17, 16, 18, 16, 4, 517, 6, 94, 11, 8, 1, 10, 36, 37, 17, 227, 45, 6, 30, 80, 42, 4, 10, 16, 6, 10, 8, 9, 25, 14, 18, 7, 37, 60, 352, 7, 63, 10, 22, 15, 22, 56, 50, 28, 5, 1, 812, 37, 4, 7, 37, 62, 41, 12, 1, 17, 24, 59, 45, 17, 18, 16, 5, 55, 28, 11, 26, 14, 4, 10, 5, 220, 76, 94, 139, 4, 24, 12, 4, 44, 52, 95, 11, 28, 19, 31, 135, 28, 2, 36, 7, 31, 36, 1, 6, 5, 30, 8, 34, 32, 13, 37, 47, 34, 20, 28, 23]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6409999999999999, speedup = 0.24972939183075885, eval_ratio = 0.075252)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3733568948412697,"recall":0.3706597222222221,"f1":null,"seconds":0.00022974424064159393,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":468.2734375,"distances_sum":1804.0037448633252}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5399305555555554,"recall":0.5399305555555554,"f1":null,"seconds":0.0003230404108762741,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":602.7890625,"distances_sum":1705.0557239625534}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6284722222222214,"recall":0.6284722222222214,"f1":null,"seconds":0.0003598406910896301,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":742.09375,"distances_sum":1656.1289732026125}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7083333333333324,"recall":0.7083333333333324,"f1":null,"seconds":0.0005025658756494522,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":866.984375,"distances_sum":1625.257722408913}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7612847222222217,"recall":0.7612847222222217,"f1":null,"seconds":0.0007079485803842545,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":980.1484375,"distances_sum":1611.2268970463788}
KCenters.DeloneInvIndex> optimize! step region_expansion=7, performance {"precision":0.7994791666666662,"recall":0.7994791666666662,"f1":0.7994791666666662,"seconds":0.0006310176104307175,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":1098.9765625,"distances_sum":1597.54207582228}
KCenters.DeloneInvIndex> reached performance {"precision":0.8342013888888884,"recall":0.8342013888888884,"f1":0.8342013888888884,"seconds":0.0007884986698627472,"exhaustive_search_seconds":0.0003635454922914505,"evaluations":1203.8984375,"distances_sum":1587.2636818105607}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8519999999999996, speedup = 0.3895709299938411, eval_ratio = 0.118622)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
