Julia Version 1.6.0-DEV.185
Commit cbd854b0f4 (2020-06-06 13:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_8dH2e7/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_8dH2e7/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172262932538037
curgen: 20 fitness: 0.2172262932538037
curgen: 30 fitness: 0.21723118227874463
curgen: 40 fitness: 0.21723118227874463
curgen: 50 fitness: 0.21723326033316376
CoordinateCreature{Array{Float64,1}}([0.22263933224863014], -0.21723326033316376) 0.22263933224863014 -0.21723326033316376
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257810003771637
curgen: 100 fitness: 3.2580102373277855
curgen: 150 fitness: 3.2580186958772064
curgen: 200 fitness: 3.258321076586335
curgen: 250 fitness: 3.2584232432825413
curgen: 300 fitness: 3.2584669393547827
curgen: 350 fitness: 3.2584679432799377
curgen: 400 fitness: 3.2584847498976335
curgen: 450 fitness: 3.25848588459083
curgen: 500 fitness: 3.2584872828851976
CoordinateCreature{Array{Float64,1}}([0.22265049967116934, -0.22273924322546848, -0.22261962248479866, 0.22273385999141657, -0.22249640470583437, 0.22287821431496646, -0.22268827633477897, -0.22259270892550903, -0.22243511415449171, 0.22264821476858224, -0.22241166234071938, -0.22253987571710726, 0.22287687863261446, 0.2226465026027622, 0.2224555317792495], -3.2584872828851976) [0.22265049967116934, -0.22273924322546848, -0.22261962248479866, 0.22273385999141657, -0.22249640470583437, 0.22287821431496646, -0.22268827633477897, -0.22259270892550903, -0.22243511415449171, 0.22264821476858224, -0.22241166234071938, -0.22253987571710726, 0.22287687863261446, 0.2226465026027622, 0.2224555317792495] -3.2584872828851976
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.006721349915949304
curgen: 100 fitness: -0.002741859117804779
curgen: 150 fitness: -0.0021820308469102656
curgen: 200 fitness: -0.0021820308469102656
curgen: 250 fitness: -0.002088048243876983
curgen: 300 fitness: -0.0019321003601930897
curgen: 350 fitness: -0.001929744543645029
curgen: 400 fitness: -0.001929744543645029
curgen: 450 fitness: -0.001929744543645029
curgen: 500 fitness: -0.001760856772449415
CoordinateCreature{Array{Float64,1}}([0.002358156202997619, -0.0004029097349666148, 0.0008666868390794693, -0.0002392964759495653, 1.6579706870729883e-5, -0.00040457501754258556, -4.60139074156124e-5, -5.4165228589232836e-5, -6.554912369695213e-5, -0.00010942578843169975, -0.001322550751533722, 0.000514202969813986, 0.00020757320626487634, -0.00029613105166086844, -0.00012043555975164364], 0.001760856772449415) [0.002358156202997619, -0.0004029097349666148, 0.0008666868390794693, -0.0002392964759495653, 1.6579706870729883e-5, -0.00040457501754258556, -4.60139074156124e-5, -5.4165228589232836e-5, -6.554912369695213e-5, -0.00010942578843169975, -0.001322550751533722, 0.000514202969813986, 0.00020757320626487634, -0.00029613105166086844, -0.00012043555975164364] 0.001760856772449415
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
