Julia Version 1.6.0-DEV.185
Commit cbd854b0f4 (2020-06-06 13:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_m9tvGB/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_m9tvGB/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.07192039186312028 -0.09831131128349996; 0.07192039186312028 0.0 0.07110917988247838; 0.09831131128349996 -0.07110917988247838 0.0])
dAA = so3([0.0 -0.03486569844218925 0.04619594799444203; 0.03486569844218925 0.0 0.09693608950094648; -0.04619594799444203 -0.09693608950094648 0.0])
dAA = so3([0.0 0.15197035576550288 -0.11448084610627007; -0.15197035576550288 0.0 0.03585939228761517; 0.11448084610627007 -0.03585939228761517 0.0])
dAA = Quaternion(0.9992697202387588, [0.01886380048039077, -0.03299514427491296, -0.003937473767120788])
dAA = SO3([0.9993047166898773 0.028109810109160784 -0.024493300655304365; -0.027770981920110793 0.99951534803074 0.014065618158540162; 0.02487681178441262 -0.013375635559325673 0.9996010387193618])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9896015500103446 -0.09991279958134394 0.10347079151597208; 0.07211026860063911 0.9670563815024139 0.24413533983797037; -0.12445433451458106 -0.23413540414742026 0.9642052328966365]), [-0.7110917988247837, -0.9831131128349996, 0.7192039186312028])
xj = SE3(SO3([0.9862343863811299 0.014890236274832824 -0.16468155932925765; -0.030500904533899812 0.9952291502594839 -0.09267487953269489; 0.1625159375016804 0.09642208946846793 0.9819833759898814]), [-0.3585939228761517, -1.1448084610627007, -1.5197035576550288])
Dx = SE3(SO3([0.9535538361679803 0.07450149526468845 -0.29186402438919073; -0.16608426766518408 0.9383791507365739 -0.3030851126284917; 0.25129882125359837 0.33748199458079486 0.9071685652459087]), [0.61581428942287, 0.3326199388135991, -2.1617686191642718])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
