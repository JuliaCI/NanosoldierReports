Julia Version 1.6.0-DEV.180
Commit d825de85f8 (2020-06-05 17:56 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_QWUHc1/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_QWUHc1/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.021561650960408518 0.048290613579738434; -0.021561650960408518 0.0 0.20741301294228834; -0.048290613579738434 -0.20741301294228834 0.0])
dAA = so3([0.0 -0.003675095270211777 -0.008520937957285035; 0.003675095270211777 0.0 -0.09800672719979144; 0.008520937957285035 0.09800672719979144 0.0])
dAA = so3([0.0 0.07665884211004965 0.13619766930262486; -0.07665884211004965 0.0 0.08246382127264246; -0.13619766930262486 -0.08246382127264246 0.0])
dAA = Quaternion(0.9994052624210014, [0.029987456039063363, -0.002028077157533408, 0.016904461794390153])
dAA = SO3([0.999099759556701 0.005129671825225834 0.042111244587493504; -0.011709781731723178 0.9874440463900711 0.1575345557666596; -0.04077439718178086 -0.15788585027091206 0.9866151766614446])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9997322533709218 -0.011691836338694635 -0.019968037783625454; 0.006498696156863031 0.9700925917265645 -0.2426481618011926; 0.022207848120875822 0.24245342736341377 0.969908834397117]), [-2.0741301294228833, 0.4829061357973843, -0.21561650960408515])
xj = SE3(SO3([0.9963851488753235 -0.08471551884840302 -0.00631790843123108; 0.08282279108040033 0.985277658863441 -0.14956042331522443; 0.018894982888372963 0.14849651784073134 0.9887324025290288]), [-0.8246382127264246, 1.3619766930262487, -0.7665884211004965])
Dx = SE3(SO3([0.9970762271747748 -0.07499202830401602 0.014669454446790079; 0.07327735732351623 0.9928045273408581 0.0947079690162182; -0.021666243481473745 -0.09335612557483777 0.995397010097507]), [1.2426342813701965, 0.7045859518528512, -0.7726472810730993])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
