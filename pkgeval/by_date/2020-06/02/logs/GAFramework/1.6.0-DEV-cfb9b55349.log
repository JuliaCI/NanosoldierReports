Julia Version 1.6.0-DEV.139
Commit cfb9b55349 (2020-06-01 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_fAnM4e/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_fAnM4e/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172203610947819
curgen: 20 fitness: 0.2172203610947819
curgen: 30 fitness: 0.21722978838965806
curgen: 40 fitness: 0.21722978838965806
curgen: 50 fitness: 0.21723123182751602
CoordinateCreature{Array{Float64,1}}([-0.22278095724631064], -0.21723123182751602) -0.22278095724631064 -0.21723123182751602
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578994695277035
curgen: 100 fitness: 3.2582897505465844
curgen: 150 fitness: 3.2583050020935387
curgen: 200 fitness: 3.258336926860047
curgen: 250 fitness: 3.2583659227451647
curgen: 300 fitness: 3.258378975974951
curgen: 350 fitness: 3.258429833171517
curgen: 400 fitness: 3.258437345087397
curgen: 450 fitness: 3.2584442995156717
curgen: 500 fitness: 3.2584705717451365
CoordinateCreature{Array{Float64,1}}([-0.22246415603210995, -0.22252172935844583, 0.22242952510856587, -0.22255400234434533, -0.22255560913216832, 0.22312486250664174, -0.2226737351937509, -0.22241403458543246, -0.22222457986441396, 0.2224154185346318, 0.222139416595144, -0.22279000072319718, -0.22238197891495048, 0.222556698782823, 0.2225831958097769], -3.2584705717451365) [-0.22246415603210995, -0.22252172935844583, 0.22242952510856587, -0.22255400234434533, -0.22255560913216832, 0.22312486250664174, -0.2226737351937509, -0.22241403458543246, -0.22222457986441396, 0.2224154185346318, 0.222139416595144, -0.22279000072319718, -0.22238197891495048, 0.222556698782823, 0.2225831958097769] -3.2584705717451365
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0031430191419588027
curgen: 100 fitness: -0.002831694114547645
curgen: 150 fitness: -0.001706880579575909
curgen: 200 fitness: -0.001706880579575909
curgen: 250 fitness: -0.0015833961580824507
curgen: 300 fitness: -0.001519951545759568
curgen: 350 fitness: -0.0014789155562198175
curgen: 400 fitness: -0.0013602963775269927
curgen: 450 fitness: -0.0010303207853326057
curgen: 500 fitness: -0.0010303207853326057
CoordinateCreature{Array{Float64,1}}([5.244640290991674e-5, 0.0006504145112449496, 0.0006633821260105509, -0.0005265128118788133, 0.00037027828895368556, -0.00019680977834259702, -0.0003378109326310303, 0.00021543451077198073, 0.0010487180869502993, -0.00032146533700997564, 0.0001905120694919626, -0.00032815119679148274, 0.00012561625184452006, -0.0014911569392391825, -0.0003570327415296507], 0.0010303207853326057) [5.244640290991674e-5, 0.0006504145112449496, 0.0006633821260105509, -0.0005265128118788133, 0.00037027828895368556, -0.00019680977834259702, -0.0003378109326310303, 0.00021543451077198073, 0.0010487180869502993, -0.00032146533700997564, 0.0001905120694919626, -0.00032815119679148274, 0.00012561625184452006, -0.0014911569392391825, -0.0003570327415296507] 0.0010303207853326057
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
