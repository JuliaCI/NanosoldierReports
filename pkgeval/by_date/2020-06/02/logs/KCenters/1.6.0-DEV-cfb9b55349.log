Julia Version 1.6.0-DEV.139
Commit cfb9b55349 (2020-06-01 16:09 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Reexport ──────────────────── v0.2.0
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Missings ──────────────────── v0.4.3
  Installed DataAPI ───────────────────── v1.3.0
  Installed KCenters ──────────────────── v0.2.2
  Installed Tables ────────────────────── v1.0.4
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed InvertedIndices ───────────── v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed Compat ────────────────────── v3.10.0
  Installed Parsers ───────────────────── v1.0.4
  Installed OrderedCollections ────────── v1.2.0
  Installed DataStructures ────────────── v0.17.17
  Installed MLDataUtils ───────────────── v0.5.1
  Installed JSON ──────────────────────── v0.21.0
  Installed DataFrames ────────────────── v0.20.2
  Installed LearnBase ─────────────────── v0.2.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed MLDataPattern ─────────────── v0.5.3
  Installed StatsBase ─────────────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.10.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.4
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_99zL3H/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_99zL3H/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.10.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9360659371813138
[ Info: 0.8307796732584636
[ Info: 0.5552099955578645
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32454605169594286
mean(cdnet.distances) = 0.3822216494381428
mean(crand.distances) = 0.3431133935848872
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8755582958707968,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7109375,"distances_sum":2359.2250301932963}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8732980561105571,"seconds":4.731118679046631e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.546875,"distances_sum":2350.612122771184}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7900390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7900390625,"f1":0.8755582958707968,"seconds":5.846843123435974e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7109375,"distances_sum":2359.2250301932963}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9442625083250088,"seconds":5.68293035030365e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8671875,"distances_sum":2860.2494908512003}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.95448717948718,"seconds":6.934814155101776e-5,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9140625,"distances_sum":2925.5413242818645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9600305944055947,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9453125,"distances_sum":2987.2971943748703}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9600305944055947,"seconds":6.224960088729858e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9453125,"distances_sum":2987.2971943748703}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9654990842490847,"seconds":6.817467510700226e-5,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.9765625,"distances_sum":3014.5314395555715}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9716796875, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9844322344322348,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":9.0,"distances_sum":3183.550472171684}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9580078125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9769917582417584,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":9.0,"distances_sum":3099.8068044455167}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9760416666666669,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.984375,"distances_sum":3102.4336860347094}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9716796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9844322344322348,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":9.0,"distances_sum":3183.550472171684}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9716796875,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.9716796875,"f1":0.9844322344322348,"seconds":6.541609764099121e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":9.0,"distances_sum":3183.550472171684}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4892578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.4892578125,"f1":0.6387140637140643,"seconds":3.883615136146545e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":6.65625,"distances_sum":1402.5335380320812}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.619140625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.619140625,"f1":0.7511705308580315,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":7.328125,"distances_sum":1842.3295023599153}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1416015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1416015625,"f1":null,"seconds":2.8945505619049072e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":4.46875,"distances_sum":464.0326896461431}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.619140625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.619140625,"f1":0.7511705308580315,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":7.328125,"distances_sum":1842.3295023599153}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7265625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7265625,"f1":0.8292977855477863,"seconds":4.954636096954346e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":7.96875,"distances_sum":2150.861292278537}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87109375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.87109375,"f1":0.9247596153846162,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.640625,"distances_sum":2616.6314291252065}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.802734375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.802734375,"f1":0.8814310689310696,"seconds":5.37186861038208e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.390625,"distances_sum":2362.629015832974}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7568359375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7568359375,"f1":0.8537415709290719,"seconds":5.418434739112854e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.2734375,"distances_sum":2223.079705076096}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.720703125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.720703125,"f1":0.8250556734931744,"seconds":4.772096872329712e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.015625,"distances_sum":2128.629943289088}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.72265625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.72265625,"f1":0.8282873376623385,"seconds":5.166977643966675e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.140625,"distances_sum":2074.7516410847225}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87109375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.87109375,"f1":0.9247596153846162,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.640625,"distances_sum":2616.6314291252065}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9552541208791213,"seconds":5.6996941566467285e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.796875,"distances_sum":2850.345701123037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":11}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410261,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.765625,"distances_sum":2944.028240143841}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9355998168498174,"seconds":5.301088094711304e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.5859375,"distances_sum":2778.2843450024766}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410261,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.765625,"distances_sum":2944.028240143841}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":8,"bsize":11},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9631410256410261,"seconds":5.718320608139038e-6,"exhaustive_search_seconds":1.1082738637924194e-6,"evaluations":8.765625,"distances_sum":2944.028240143841}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.17578125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.17578125,"f1":null,"seconds":3.077089786529541e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":4.703125,"distances_sum":449.5249436512036}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6298828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":null,"recall":0.6298828125,"f1":null,"seconds":4.578381776809692e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.28125,"distances_sum":1706.2822533542926}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6298828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":null,"recall":0.6298828125,"f1":null,"seconds":4.578381776809692e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":7.28125,"distances_sum":1706.2822533542926}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7939453125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.7939453125,"f1":0.8762742465867474,"seconds":5.502253770828247e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1640625,"distances_sum":2277.9719183385064}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8017578125,"f1":0.8822838619713628,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1953125,"distances_sum":2308.27773217132}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8017578125,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8017578125,"f1":0.8822838619713628,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1953125,"distances_sum":2308.27773217132}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9590659340659345,"seconds":5.6438148021698e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.828125,"distances_sum":2797.479062552246}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9282509157509163,"seconds":5.6587159633636475e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.609375,"distances_sum":2566.497064786647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":10}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9703353937728941,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2875.6812631931793}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.892578125,"f1":0.9384271978021984,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7421875,"distances_sum":2604.011284576317}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9370421245421252,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.609375,"distances_sum":2717.0550605881617}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.966689560439561,"seconds":7.500872015953064e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.90625,"distances_sum":2856.2037843416583}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9697573260073266,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2882.122073883221}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703353937728941,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2875.6812631931793}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":10},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9703353937728941,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.9140625,"distances_sum":2875.6812631931793}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6874928890553896,"seconds":4.278495907783508e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":7.1640625,"distances_sum":1343.4113818090796}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5556640625,"f1":null,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":7.1484375,"distances_sum":1405.478856701327}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5556640625,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5556640625,"f1":null,"seconds":4.120171070098877e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":7.1484375,"distances_sum":1405.478856701327}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.916065705128206,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.3671875,"distances_sum":2396.714173143448}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.669921875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.669921875,"f1":0.7897883366633375,"seconds":4.369765520095825e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":7.5546875,"distances_sum":1770.4414246672818}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8667384698634706,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.078125,"distances_sum":2122.3236052613247}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8030655108780115,"seconds":4.736706614494324e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":7.78125,"distances_sum":1816.3864105754787}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8525390625,"state":{"ssize":3,"bsize":6},"perf":{"precision":1.0,"recall":0.8525390625,"f1":0.916065705128206,"seconds":5.45009970664978e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.3671875,"distances_sum":2396.714173143448}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8935546875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8935546875,"f1":0.9405219780219787,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.5625,"distances_sum":2605.778564391859}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454215,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.8671875,"distances_sum":2848.951795953073}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9208984375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9555689102564109,"seconds":5.798414349555969e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.78125,"distances_sum":2742.3256841564207}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.921328671328672,"seconds":5.379319190979004e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.515625,"distances_sum":2459.534394910573}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9228515625, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.9555548618048622,"seconds":5.709007382392883e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.828125,"distances_sum":2743.1768789468642}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.949696657509158,"seconds":5.695968866348267e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.734375,"distances_sum":2710.1083090922893}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9423828125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454215,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.8671875,"distances_sum":2848.951795953073}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9423828125,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.9423828125,"f1":0.9681204212454215,"seconds":5.964189767837524e-6,"exhaustive_search_seconds":3.6712735891342163e-6,"evaluations":8.8671875,"distances_sum":2848.951795953073}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6923828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6923828125,"f1":0.8075318778443786,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.2578125,"distances_sum":1855.1407752864152}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6951964701964707,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.7421875,"distances_sum":1377.502939296456}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6923828125,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6923828125,"f1":0.8075318778443786,"seconds":5.1818788051605225e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.2578125,"distances_sum":1855.1407752864152}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.826171875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.826171875,"f1":0.8990899725274731,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.5859375,"distances_sum":2335.7254172718594}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534283424908434,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2744.309237590917}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9315418956043963,"seconds":6.604939699172974e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8671875,"distances_sum":2604.4841459215163}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.91796875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.91796875,"f1":0.9534283424908434,"seconds":6.211921572685242e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.921875,"distances_sum":2744.309237590917}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9599609375, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9599609375,"f1":0.9779590201465203,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9609375,"distances_sum":2958.3814933307654}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9560546875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9560546875,"f1":0.9756696428571432,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9765625,"distances_sum":2933.5173940775385}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9921875,"distances_sum":2989.867821069193}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9658203125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9658203125,"f1":0.9813072344322346,"seconds":6.170943379402161e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9765625,"distances_sum":2994.286106363387}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596611721611724,"seconds":6.686896085739136e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2817.7729702159486}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.958714202464203,"seconds":6.1746686697006226e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9375,"distances_sum":2808.1950827033743}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9630036630036636,"seconds":6.329268217086792e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9609375,"distances_sum":2818.918175649682}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9921875,"distances_sum":2989.867821069193}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9826636904761907,"seconds":6.465241312980652e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9921875,"distances_sum":2989.867821069193}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3955078125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3955078125,"f1":null,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.6328125,"distances_sum":880.7616083154853}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3955078125,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3955078125,"f1":null,"seconds":4.023313522338867e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":6.6328125,"distances_sum":880.7616083154853}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8578931485181492,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5,"distances_sum":1822.5720379664408}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.625, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.625,"f1":0.7533818611943619,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.34375,"distances_sum":1360.2645246104569}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.54296875,"f1":0.6871952700077706,"seconds":4.503875970840454e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":7.8828125,"distances_sum":1220.3260565268931}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7646484375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7646484375,"f1":0.8578931485181492,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5,"distances_sum":1822.5720379664408}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8525390625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8525390625,"f1":0.9132045038295047,"seconds":5.880370736122131e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.84375,"distances_sum":2138.0354724959734}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9517170329670335,"seconds":6.688758730888367e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8046875,"distances_sum":2391.2920597227494}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7900390625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7900390625,"f1":0.8743568931068939,"seconds":6.2622129917144775e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.5703125,"distances_sum":1911.319794215857}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9130859375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9517170329670335,"seconds":6.688758730888367e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8046875,"distances_sum":2391.2920597227494}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9130859375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9130859375,"f1":0.9517170329670335,"seconds":6.688758730888367e-6,"exhaustive_search_seconds":1.5869736671447754e-6,"evaluations":8.8046875,"distances_sum":2391.2920597227494}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6796875, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6796875,"f1":0.7972340159840167,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.3984375,"distances_sum":1520.9664806619735}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7830913877788884,"seconds":4.742294549942017e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.4375,"distances_sum":1538.1541317671224}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6796875,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6796875,"f1":0.7972340159840167,"seconds":4.636123776435852e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.3984375,"distances_sum":1520.9664806619735}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8531114718614726,"seconds":4.969537258148193e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.3515625,"distances_sum":1788.2264761304748}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9459191849816855,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.78125,"distances_sum":2413.778947069516}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9459191849816855,"seconds":6.010755896568298e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.78125,"distances_sum":2413.778947069516}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597355769230773,"seconds":5.58607280254364e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.9296875,"distances_sum":2450.8385965244456}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9782566391941394,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.9765625,"distances_sum":2586.2842448906745}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786286630036634,"seconds":6.582587957382202e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.9921875,"distances_sum":2562.202538980225}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9782566391941394,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.9765625,"distances_sum":2586.2842448906745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":4,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9782566391941394,"seconds":6.126239895820618e-6,"exhaustive_search_seconds":2.0712614059448242e-6,"evaluations":8.9765625,"distances_sum":2586.2842448906745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7994597416472424,"seconds":4.6174973249435425e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.078125,"distances_sum":1551.3988671081993}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8685449966699973,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.4296875,"distances_sum":1856.2409482704359}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5380859375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5380859375,"f1":0.6860216172716178,"seconds":4.956498742103577e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":7.65625,"distances_sum":1198.8743275435538}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8685449966699973,"seconds":5.04031777381897e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.4296875,"distances_sum":1856.2409482704359}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9466460622710626,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.90625,"distances_sum":2414.7877700755816}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9069170412920419,"seconds":5.522742867469788e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.6640625,"distances_sum":2122.197619512141}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9013671875, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.9013671875,"f1":0.9444826007326014,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9609375,"distances_sum":2355.7607892463943}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":7,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.9466460622710626,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.90625,"distances_sum":2414.7877700755816}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":11,"bsize":10}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681204212454215,"seconds":6.055459380149841e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.953125,"distances_sum":2551.730915284811}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967839972527473,"seconds":6.074085831642151e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.984375,"distances_sum":2536.047224148044}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9754464285714289,"seconds":6.057322025299072e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.984375,"distances_sum":2587.1137500842215}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9760645604395608,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.96875,"distances_sum":2597.5255168490744}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9661458333333337,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.9609375,"distances_sum":2517.804807379384}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9760645604395608,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.96875,"distances_sum":2597.5255168490744}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9760645604395608,"seconds":5.666166543960571e-6,"exhaustive_search_seconds":1.3969838619232178e-6,"evaluations":8.96875,"distances_sum":2597.5255168490744}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.66796875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.66796875,"f1":0.7897876429126438,"seconds":4.6193599700927734e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.03125,"distances_sum":1435.3159159671804}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8713609307359317,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.265625,"distances_sum":1802.4531329178142}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7124762390387397,"seconds":4.2710453271865845e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":7.703125,"distances_sum":1183.7328771653458}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.78515625,"state":{"ssize":2,"bsize":5},"perf":{"precision":1.0,"recall":0.78515625,"f1":0.8713609307359317,"seconds":5.209818482398987e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.265625,"distances_sum":1802.4531329178142}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.881233870296371,"seconds":5.232170224189758e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.25,"distances_sum":1901.0798899545227}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":6,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9347184065934072,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2208.6658014342447}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.884765625,"state":{"ssize":6,"bsize":7},"perf":{"precision":1.0,"recall":0.884765625,"f1":0.9347184065934072,"seconds":5.425885319709778e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.8359375,"distances_sum":2208.6658014342447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":9,"bsize":11}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9745364010989013,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2504.2697052458775}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9652930402930407,"seconds":5.720183253288269e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.9140625,"distances_sum":2434.9331393510315}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.916015625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9523179945054949,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.859375,"distances_sum":2347.967118490154}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9052734375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.9052734375,"f1":0.9462313727938734,"seconds":5.731359124183655e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.875,"distances_sum":2316.0858526160623}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9340003746253751,"seconds":5.610287189483643e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.7890625,"distances_sum":2230.3340085967843}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9745364010989013,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2504.2697052458775}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":9,"bsize":11},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9745364010989013,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.2814998626708984e-6,"evaluations":8.953125,"distances_sum":2504.2697052458775}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5556640625, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5556640625,"f1":0.6993131868131873,"seconds":4.153698682785034e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.75,"distances_sum":1250.0210691628304}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2509765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2509765625,"f1":null,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":7.2890625,"distances_sum":544.219095107593}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8728015040515047,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.421875,"distances_sum":1906.0036646258834}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7880859375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7880859375,"f1":0.8728015040515047,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.421875,"distances_sum":1906.0036646258834}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9679544413919418,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2545.0719934487424}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9415438727938734,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.953125,"distances_sum":2334.5969202639985}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9204727564102568,"seconds":5.820766091346741e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.828125,"distances_sum":2202.4002241129538}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84375, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.84375,"f1":0.9083453005328015,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.671875,"distances_sum":2135.104287320351}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8173828125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.8173828125,"f1":0.8941964285714294,"seconds":5.325302481651306e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.5,"distances_sum":1992.4176488022222}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7890625,"f1":0.8725394397269406,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.375,"distances_sum":1913.9095211447805}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.943359375,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.943359375,"f1":0.9679544413919418,"seconds":5.854293704032898e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9375,"distances_sum":2545.0719934487424}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9677734375, conf: {"ssize":2,"bsize":12}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597071,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2647.9991798819815}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.951171875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.951171875,"f1":0.9728823260073262,"seconds":6.182119250297546e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":9.0,"distances_sum":2560.4033368800733}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":7,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.969328067765568,"seconds":6.427988409996033e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9609375,"distances_sum":2539.4801261382886}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9756353021978027,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2597.8217576258817}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9687328296703299,"seconds":6.141141057014465e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.953125,"distances_sum":2543.842143639368}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9677734375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597071,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2647.9991798819815}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9677734375,"state":{"ssize":2,"bsize":12},"perf":{"precision":1.0,"recall":0.9677734375,"f1":0.9819597069597071,"seconds":6.124377250671387e-6,"exhaustive_search_seconds":1.2721866369247437e-6,"evaluations":8.9921875,"distances_sum":2647.9991798819815}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3681640625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.200024366378784e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.375,"distances_sum":800.8774594556988}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3681640625,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3681640625,"f1":null,"seconds":3.200024366378784e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":5.375,"distances_sum":800.8774594556988}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7783203125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7783203125,"f1":0.867754641192142,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.984375,"distances_sum":1896.1913106383088}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.546875, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.546875,"f1":0.6896834068709076,"seconds":4.1387975215911865e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.859375,"distances_sum":1171.4834981325766}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":6,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7934761419136427,"seconds":4.656612873077393e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.515625,"distances_sum":1594.1974322325316}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5244140625, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5244140625,"f1":null,"seconds":4.101544618606567e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.640625,"distances_sum":1140.6325630995882}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7783203125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7783203125,"f1":0.867754641192142,"seconds":5.6121498346328735e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.984375,"distances_sum":1896.1913106383088}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8564453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8564453125,"f1":0.9145032051282058,"seconds":5.520880222320557e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.421875,"distances_sum":2211.973750994111}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.85546875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.85546875,"f1":0.9138741466866472,"seconds":5.0961971282958984e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.53125,"distances_sum":2263.753536692547}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.9201179029304036,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.515625,"distances_sum":2287.376011759101}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.861328125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9201179029304036,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.515625,"distances_sum":2287.376011759101}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.861328125,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.861328125,"f1":0.9201179029304036,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.515625,"distances_sum":2287.376011759101}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5615234375, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5615234375,"f1":null,"seconds":4.773959517478943e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":6.8671875,"distances_sum":1258.2976482562021}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7392578125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7392578125,"f1":0.8395073676323684,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.6640625,"distances_sum":1795.4286771905902}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7392578125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7392578125,"f1":0.8395073676323684,"seconds":4.824250936508179e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":7.6640625,"distances_sum":1795.4286771905902}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9529876373626378,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8203125,"distances_sum":2499.6389259902962}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9529876373626378,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8203125,"distances_sum":2499.6389259902962}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9597527472527476,"seconds":6.269663572311401e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2525.358009633037}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2609.3410615378752}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2609.3410615378752}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9462890625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9462890625,"f1":0.9702209249084253,"seconds":5.595386028289795e-6,"exhaustive_search_seconds":1.2256205081939697e-6,"evaluations":8.8515625,"distances_sum":2609.3410615378752}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7041015625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.7041015625,"f1":0.8141920579420587,"seconds":4.753470420837402e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.046875,"distances_sum":1558.4698053993857}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4248046875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4248046875,"f1":null,"seconds":3.7010759115219116e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.5390625,"distances_sum":888.7536224170635}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7080078125, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.7080078125,"f1":0.8190231643356651,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0,"distances_sum":1571.008710523788}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7080078125,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.7080078125,"f1":0.8190231643356651,"seconds":4.693865776062012e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0,"distances_sum":1571.008710523788}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.876953125,"f1":0.9297161172161178,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2160.9523178927616}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8505859375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8505859375,"f1":0.913833562271063,"seconds":5.837529897689819e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6015625,"distances_sum":2048.9324798485673}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9199347527472533,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7109375,"distances_sum":2118.16095725858}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.876953125,"f1":0.9297161172161178,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.7734375,"distances_sum":2160.9523178927616}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9665381493506499,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2415.5368328219643}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.951608287545788,"seconds":6.195157766342163e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8203125,"distances_sum":2336.2926646735446}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.9546588827838828,"seconds":6.362795829772949e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9140625,"distances_sum":2313.865397084829}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665381493506499,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2415.5368328219643}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9404296875,"state":{"ssize":2,"bsize":9},"perf":{"precision":1.0,"recall":0.9404296875,"f1":0.9665381493506499,"seconds":6.312504410743713e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.9375,"distances_sum":2415.5368328219643}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8503335206460214,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0,"distances_sum":1843.9956721346293}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7548828125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7548828125,"f1":0.8503335206460214,"seconds":4.872679710388184e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.0,"distances_sum":1843.9956721346293}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8515625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8515625,"f1":0.9122804279054286,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.5390625,"distances_sum":2202.974366633919}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9304690101565108,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.640625,"distances_sum":2330.5674105944913}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9304690101565108,"seconds":5.433335900306702e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.640625,"distances_sum":2330.5674105944913}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9501953125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2605.756372312639}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9531135531135535,"seconds":5.617737770080566e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8203125,"distances_sum":2463.0514420795043}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2605.756372312639}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9501953125,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9501953125,"f1":0.9724358974358978,"seconds":5.999580025672913e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.875,"distances_sum":2605.756372312639}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8074368339993349,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9140625,"distances_sum":1728.3647658556424}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8074368339993349,"seconds":4.472211003303528e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.9140625,"distances_sum":1728.3647658556424}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.765625,"f1":0.8588286713286724,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.125,"distances_sum":1910.8753617986747}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.765625,"f1":0.8588286713286724,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.125,"distances_sum":1910.8753617986747}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9335279304029312,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2339.046270614619}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.861328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.861328125,"f1":0.919785943223444,"seconds":5.487352609634399e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.75,"distances_sum":2257.11810131541}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.78515625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.78515625,"f1":0.8711460414585422,"seconds":4.906207323074341e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.3125,"distances_sum":1974.55105133373}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7822265625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7822265625,"f1":0.868003871128872,"seconds":5.0924718379974365e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.2421875,"distances_sum":1947.8620355878309}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.9018028846153855,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.5234375,"distances_sum":2144.497126349452}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9335279304029312,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2339.046270614619}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8818359375,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.8818359375,"f1":0.9335279304029312,"seconds":5.62518835067749e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8125,"distances_sum":2339.046270614619}}, n: 9
mean(cfft.distances) = 0.32613629783958004
mean(cdnet.distances) = 0.3589813170486267
mean(crand.distances) = 0.3897145886365638
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8577777777777778
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8777777777777778
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8755555555555556
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8844444444444445
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9222222222222222
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8911111111111111
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8888888888888888
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8955555555555555
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8577777777777778
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.8822222222222221
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8911111111111111
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8777777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9244444444444445
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8777777777777779
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8644444444444445
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8822222222222221
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8977777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9066666666666666
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8733333333333334
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8933333333333334
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8088888888888889
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8555555555555555
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8333333333333334
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.9022222222222221
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9866666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9533333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 18]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 5: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 9, 11]]
** centroid: 6, normalized-entropy: 0.9927744539878083, [(2, 9), (3, 11)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 3]]
** centroid: 8, normalized-entropy: 1.0, [(2, 3), (3, 3)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 14, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 20, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 3, 1, 2, 3, 3, 2, 3, 2, 3, 2, 1]
acc = 0.9866666666666667
*** finished computation of 12 references, err: [Inf, 0.5732726110021273] ***
*** center 1: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.3036299136368142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3036299136368142, 0.24725814626134676] ***
*** starting iteration: 2; err: [Inf, 0.3036299136368142, 0.24725814626134676] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3036299136368142, 0.24725814626134676, 0.23368882132810018] ***
*** starting iteration: 3; err: [Inf, 0.3036299136368142, 0.24725814626134676, 0.23368882132810018] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3036299136368142, 0.24725814626134676, 0.23368882132810018, 0.23043923869985958] ***
*** starting iteration: 4; err: [Inf, 0.3036299136368142, 0.24725814626134676, 0.23368882132810018, 0.23043923869985958] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3036299136368142, 0.24725814626134676, 0.23368882132810018, 0.23043923869985958, 0.23038214387587164] ***
*** finished computation of 3 references, err: [Inf, 0.3036299136368142, 0.24725814626134676, 0.23368882132810018, 0.23043923869985958, 0.23038214387587164] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [243, 14, 0]]
** centroid: 1, normalized-entropy: 0.30510934575025467, [(1, 243), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [159, 39, 0]]
** centroid: 2, normalized-entropy: 0.7158259310602146, [(1, 159), (2, 39)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 190, 22]]
** centroid: 3, normalized-entropy: 0.4808446942193282, [(2, 190), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.33435093823993495] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33435093823993495, 0.22871616051422022] ***
*** starting iteration: 2; err: [Inf, 0.33435093823993495, 0.22871616051422022] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33435093823993495, 0.22871616051422022, 0.2271745030780782] ***
*** starting iteration: 3; err: [Inf, 0.33435093823993495, 0.22871616051422022, 0.2271745030780782] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33435093823993495, 0.22871616051422022, 0.2271745030780782, 0.22679575386832745] ***
*** finished computation of 3 references, err: [Inf, 0.33435093823993495, 0.22871616051422022, 0.2271745030780782, 0.22679575386832745] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [223, 27, 0]]
** centroid: 1, normalized-entropy: 0.49385372369952046, [(1, 223), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 187, 19]]
** centroid: 2, normalized-entropy: 0.4438797176957611, [(2, 187), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [176, 35, 0]]
** centroid: 3, normalized-entropy: 0.6481851106349664, [(1, 176), (2, 35)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18147729532429585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18147729532429585, 0.1647661551665347] ***
*** starting iteration: 2; err: [Inf, 0.18147729532429585, 0.1647661551665347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18147729532429585, 0.1647661551665347, 0.15640495574121382] ***
*** starting iteration: 3; err: [Inf, 0.18147729532429585, 0.1647661551665347, 0.15640495574121382] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18147729532429585, 0.1647661551665347, 0.15640495574121382, 0.15513891794413956] ***
*** starting iteration: 4; err: [Inf, 0.18147729532429585, 0.1647661551665347, 0.15640495574121382, 0.15513891794413956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18147729532429585, 0.1647661551665347, 0.15640495574121382, 0.15513891794413956, 0.15446842330621202] ***
*** finished computation of 7 references, err: [Inf, 0.18147729532429585, 0.1647661551665347, 0.15640495574121382, 0.15513891794413956, 0.15446842330621202] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [70, 10, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 70), (2, 10)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 131, 17]]
** centroid: 2, normalized-entropy: 0.5144176798001543, [(2, 131), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 6, 0]]
** centroid: 3, normalized-entropy: 0.3843115441264972, [(1, 74), (2, 6)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [115, 38, 0]]
** centroid: 4, normalized-entropy: 0.8086780298203682, [(1, 115), (2, 38)]
*** center 5: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [8, 61, 0]]
** centroid: 6, normalized-entropy: 0.5175827525559071, [(1, 8), (2, 61)]
*** center 7: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18336487417227995] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18336487417227995, 0.1562597178162887] ***
*** starting iteration: 2; err: [Inf, 0.18336487417227995, 0.1562597178162887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18336487417227995, 0.1562597178162887, 0.15136251872373296] ***
*** starting iteration: 3; err: [Inf, 0.18336487417227995, 0.1562597178162887, 0.15136251872373296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18336487417227995, 0.1562597178162887, 0.15136251872373296, 0.1502638869462952] ***
*** starting iteration: 4; err: [Inf, 0.18336487417227995, 0.1562597178162887, 0.15136251872373296, 0.1502638869462952] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18336487417227995, 0.1562597178162887, 0.15136251872373296, 0.1502638869462952, 0.15007749423971106] ***
*** finished computation of 7 references, err: [Inf, 0.18336487417227995, 0.1562597178162887, 0.15136251872373296, 0.1502638869462952, 0.15007749423971106] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [63, 39, 0]]
** centroid: 1, normalized-entropy: 0.9596868937742168, [(1, 63), (2, 39)]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 94, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 68, 22]]
** centroid: 3, normalized-entropy: 0.80235344282919, [(2, 68), (3, 22)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 12, 0]]
** centroid: 4, normalized-entropy: 0.634309554640566, [(1, 63), (2, 12)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [103, 30, 0]]
** centroid: 5, normalized-entropy: 0.7701976823573773, [(1, 103), (2, 30)]
*** center 6: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22531027990397529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22531027990397529, 0.16600779729030993] ***
*** starting iteration: 2; err: [Inf, 0.22531027990397529, 0.16600779729030993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934] ***
*** starting iteration: 3; err: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934, 0.1523710765416498] ***
*** starting iteration: 4; err: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934, 0.1523710765416498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934, 0.1523710765416498, 0.15071652675357491] ***
*** starting iteration: 5; err: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934, 0.1523710765416498, 0.15071652675357491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934, 0.1523710765416498, 0.15071652675357491, 0.14972557447085538] ***
*** finished computation of 7 references, err: [Inf, 0.22531027990397529, 0.16600779729030993, 0.15629706208522934, 0.1523710765416498, 0.15071652675357491, 0.14972557447085538] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [25, 73, 0]]
** centroid: 1, normalized-entropy: 0.8192649712314392, [(1, 25), (2, 73)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [123, 3, 0]]
** centroid: 2, normalized-entropy: 0.1623261801753929, [(1, 123), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [87, 4, 0]]
** centroid: 3, normalized-entropy: 0.26014536394771426, [(1, 87), (2, 4)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 92, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 17, 0]]
** centroid: 5, normalized-entropy: 0.7564041945982506, [(1, 61), (2, 17)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 60, 19]]
** centroid: 6, normalized-entropy: 0.7958812735955936, [(2, 60), (3, 19)]
*** center 7: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18753330204489027] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18753330204489027, 0.15279050165624428] ***
*** starting iteration: 2; err: [Inf, 0.18753330204489027, 0.15279050165624428] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18753330204489027, 0.15279050165624428, 0.1492761739071] ***
*** starting iteration: 3; err: [Inf, 0.18753330204489027, 0.15279050165624428, 0.1492761739071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18753330204489027, 0.15279050165624428, 0.1492761739071, 0.1483470210358053] ***
*** finished computation of 7 references, err: [Inf, 0.18753330204489027, 0.15279050165624428, 0.1492761739071, 0.1483470210358053] ***
*** center 1: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 66, 17]]
** centroid: 2, normalized-entropy: 0.7314625617214586, [(2, 66), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [54, 22, 0]]
** centroid: 3, normalized-entropy: 0.8680403986166402, [(1, 54), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [116, 16, 0]]
** centroid: 4, normalized-entropy: 0.5328350630342235, [(1, 116), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 93, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [54, 49, 0]]
** centroid: 7, normalized-entropy: 0.9982994837029028, [(1, 54), (2, 49)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.21910847228221494] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404] ***
*** starting iteration: 2; err: [Inf, 0.21910847228221494, 0.17366894953519404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193] ***
*** starting iteration: 3; err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399] ***
*** starting iteration: 4; err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857] ***
*** starting iteration: 5; err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447] ***
*** starting iteration: 6; err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447, 0.15511696252027998] ***
*** starting iteration: 7; err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447, 0.15511696252027998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447, 0.15511696252027998, 0.15411269344316833] ***
*** starting iteration: 8; err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447, 0.15511696252027998, 0.15411269344316833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447, 0.15511696252027998, 0.15411269344316833, 0.15362966859244045] ***
*** finished computation of 7 references, err: [Inf, 0.21910847228221494, 0.17366894953519404, 0.16593344655234193, 0.1615063417144399, 0.1583651845626857, 0.15633380311545447, 0.15511696252027998, 0.15411269344316833, 0.15362966859244045] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [65, 35, 0]]
** centroid: 1, normalized-entropy: 0.9340680553754911, [(1, 65), (2, 35)]
*** center 2: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 13, 0]]
** centroid: 3, normalized-entropy: 0.6261776539736496, [(1, 70), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [86, 6, 0]]
** centroid: 4, normalized-entropy: 0.3478169135710632, [(1, 86), (2, 6)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 143, 22]]
** centroid: 5, normalized-entropy: 0.5665095065529052, [(2, 143), (3, 22)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [65, 46, 0]]
** centroid: 6, normalized-entropy: 0.9787603904449517, [(1, 65), (2, 46)]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2597401132576748] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273] ***
*** starting iteration: 2; err: [Inf, 0.2597401132576748, 0.16937436205593273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344] ***
*** starting iteration: 3; err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257] ***
*** starting iteration: 4; err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763] ***
*** starting iteration: 5; err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529] ***
*** starting iteration: 6; err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529, 0.15440041186410872] ***
*** starting iteration: 7; err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529, 0.15440041186410872] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529, 0.15440041186410872, 0.1530739894720434] ***
*** starting iteration: 8; err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529, 0.15440041186410872, 0.1530739894720434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529, 0.15440041186410872, 0.1530739894720434, 0.15220875076941218] ***
*** finished computation of 7 references, err: [Inf, 0.2597401132576748, 0.16937436205593273, 0.16154486756643344, 0.15936103569430257, 0.15754824284899763, 0.155956721455529, 0.15440041186410872, 0.1530739894720434, 0.15220875076941218] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 54, 0]]
** centroid: 1, normalized-entropy: 0.9668701645630143, [(1, 35), (2, 54)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 75, 11]]
** centroid: 2, normalized-entropy: 0.5516699920020824, [(2, 75), (3, 11)]
*** center 3: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [67, 20, 0]]
** centroid: 4, normalized-entropy: 0.7778108790853029, [(1, 67), (2, 20)]
*** center 5: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 78, 8]]
** centroid: 6, normalized-entropy: 0.446481346896803, [(2, 78), (3, 8)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [87, 22, 0]]
** centroid: 7, normalized-entropy: 0.725582675704817, [(1, 87), (2, 22)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23503954637398547] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23503954637398547, 0.20417246536852363] ***
*** finished computation of 7 references, err: [Inf, 0.23503954637398547, 0.20417246536852363] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [67, 33, 0]]
** centroid: 1, normalized-entropy: 0.9149263727797277, [(1, 67), (2, 33)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 111, 17]]
** centroid: 2, normalized-entropy: 0.5651013322959568, [(2, 111), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [55, 9, 0]]
** centroid: 3, normalized-entropy: 0.5858732928619204, [(1, 55), (2, 9)]
*** center 4: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [114, 47, 0]]
** centroid: 5, normalized-entropy: 0.8711955262908312, [(1, 114), (2, 47)]
*** center 6: selecting labels [1] (freq >= 2) [from [119, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 46, 0]]
** centroid: 7, normalized-entropy: 0.6769418697808861, [(1, 10), (2, 46)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2679576447611951] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2679576447611951, 0.20474110219929217] ***
*** finished computation of 7 references, err: [Inf, 0.2679576447611951, 0.20474110219929217] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [87, 42, 0]]
** centroid: 1, normalized-entropy: 0.9103480624345157, [(1, 87), (2, 42)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 145, 22]]
** centroid: 2, normalized-entropy: 0.5621814561735371, [(2, 145), (3, 22)]
*** center 3: selecting labels [1] (freq >= 2) [from [27, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 23, 0]]
** centroid: 4, normalized-entropy: 0.8027381019527042, [(1, 71), (2, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [91, 33, 0]]
** centroid: 5, normalized-entropy: 0.8358550346053404, [(1, 91), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2673258743537911] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2673258743537911, 0.22362555320635774] ***
*** finished computation of 7 references, err: [Inf, 0.2673258743537911, 0.22362555320635774] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [54, 5, 0]]
** centroid: 1, normalized-entropy: 0.4186843105268563, [(1, 54), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [26, 52, 4]]
** centroid: 2, normalized-entropy: 0.7285312499360596, [(1, 26), (2, 52), (3, 4)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [38, 89, 15]]
** centroid: 3, normalized-entropy: 0.8037654558022598, [(1, 38), (2, 89), (3, 15)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [40, 103, 0]]
** centroid: 4, normalized-entropy: 0.8550693920555504, [(1, 40), (2, 103)]
*** center 5: selecting labels [1] (freq >= 2) [from [60, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.43213699920824516] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43213699920824516, 0.3040893872495036] ***
*** finished computation of 3 references, err: [Inf, 0.43213699920824516, 0.3040893872495036] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [73, 171, 17]]
** centroid: 1, normalized-entropy: 0.7384697332348822, [(1, 73), (2, 171), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [159, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [171, 75, 0]]
** centroid: 3, normalized-entropy: 0.8871723027673716, [(1, 171), (2, 75)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4102592943724932] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4102592943724932, 0.30074951166602626] ***
*** finished computation of 3 references, err: [Inf, 0.4102592943724932, 0.30074951166602626] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [173, 22, 0]]
** centroid: 1, normalized-entropy: 0.5083652932820523, [(1, 173), (2, 22)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 210, 22]]
** centroid: 2, normalized-entropy: 0.4523816230590106, [(2, 210), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [229, 11, 0]]
** centroid: 3, normalized-entropy: 0.2684263652784751, [(1, 229), (2, 11)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36854623795125346] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36854623795125346, 0.3084096686699535] ***
*** finished computation of 3 references, err: [Inf, 0.36854623795125346, 0.3084096686699535] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [105, 168, 19]]
** centroid: 1, normalized-entropy: 0.7860975101723436, [(1, 105), (2, 168), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [79, 81, 0]]
** centroid: 3, normalized-entropy: 0.9998872865145767, [(1, 79), (2, 81)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.32688477257261045] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32688477257261045, 0.23204957957550124] ***
*** starting iteration: 2; err: [Inf, 0.32688477257261045, 0.23204957957550124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32688477257261045, 0.23204957957550124, 0.2309956298385923] ***
*** starting iteration: 3; err: [Inf, 0.32688477257261045, 0.23204957957550124, 0.2309956298385923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32688477257261045, 0.23204957957550124, 0.2309956298385923, 0.23105527733329562] ***
*** finished computation of 3 references, err: [Inf, 0.32688477257261045, 0.23204957957550124, 0.2309956298385923, 0.23105527733329562] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 165, 17]]
** centroid: 1, normalized-entropy: 0.44773951024366665, [(2, 165), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [206, 41, 0]]
** centroid: 2, normalized-entropy: 0.6484533012644979, [(1, 206), (2, 41)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [197, 40, 0]]
** centroid: 3, normalized-entropy: 0.6548979652341214, [(1, 197), (2, 40)]
finished with 5 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3640576592360999] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3640576592360999, 0.23477781111111995] ***
*** starting iteration: 2; err: [Inf, 0.3640576592360999, 0.23477781111111995] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3640576592360999, 0.23477781111111995, 0.23375863843140887] ***
*** starting iteration: 3; err: [Inf, 0.3640576592360999, 0.23477781111111995, 0.23375863843140887] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3640576592360999, 0.23477781111111995, 0.23375863843140887, 0.2336773821089914] ***
*** finished computation of 3 references, err: [Inf, 0.3640576592360999, 0.23477781111111995, 0.23375863843140887, 0.2336773821089914] ***
*** center 1: selecting labels [1] (freq >= 1) [from [214, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [72, 178, 22]]
** centroid: 2, normalized-entropy: 0.757967567068825, [(1, 72), (2, 178), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 65, 0]]
** centroid: 3, normalized-entropy: 0.9419469739249298, [(1, 116), (2, 65)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.322063685929601] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.322063685929601, 0.26748517194813093] ***
*** starting iteration: 2; err: [Inf, 0.322063685929601, 0.26748517194813093] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593] ***
*** starting iteration: 3; err: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593, 0.23672309030277439] ***
*** starting iteration: 4; err: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593, 0.23672309030277439] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593, 0.23672309030277439, 0.2349565710838901] ***
*** starting iteration: 5; err: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593, 0.23672309030277439, 0.2349565710838901] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593, 0.23672309030277439, 0.2349565710838901, 0.23445896479277417] ***
*** finished computation of 3 references, err: [Inf, 0.322063685929601, 0.26748517194813093, 0.24537758591460593, 0.23672309030277439, 0.2349565710838901, 0.23445896479277417] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [120, 95, 0]]
** centroid: 1, normalized-entropy: 0.9902246902198684, [(1, 120), (2, 95)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [226, 1, 0]]
** centroid: 2, normalized-entropy: 0.040819652463459234, [(1, 226), (2, 1)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [53, 153, 19]]
** centroid: 3, normalized-entropy: 0.7386926150540739, [(1, 53), (2, 153), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.17060931699697274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17060931699697274, 0.15091798982971735] ***
*** starting iteration: 2; err: [Inf, 0.17060931699697274, 0.15091798982971735] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17060931699697274, 0.15091798982971735, 0.148261721222172] ***
*** starting iteration: 3; err: [Inf, 0.17060931699697274, 0.15091798982971735, 0.148261721222172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17060931699697274, 0.15091798982971735, 0.148261721222172, 0.14678475823898046] ***
*** starting iteration: 4; err: [Inf, 0.17060931699697274, 0.15091798982971735, 0.148261721222172, 0.14678475823898046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.17060931699697274, 0.15091798982971735, 0.148261721222172, 0.14678475823898046, 0.14583345806413517] ***
*** finished computation of 7 references, err: [Inf, 0.17060931699697274, 0.15091798982971735, 0.148261721222172, 0.14678475823898046, 0.14583345806413517] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 93, 17]]
** centroid: 1, normalized-entropy: 0.6210993704855443, [(2, 93), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [19, 66, 0]]
** centroid: 2, normalized-entropy: 0.7665599404543365, [(1, 19), (2, 66)]
*** center 3: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [65, 41, 0]]
** centroid: 4, normalized-entropy: 0.9626983787500768, [(1, 65), (2, 41)]
*** center 5: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [72, 46, 0]]
** centroid: 6, normalized-entropy: 0.9646900825612559, [(1, 72), (2, 46)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23952703701815325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23952703701815325, 0.16348598004951292] ***
*** starting iteration: 2; err: [Inf, 0.23952703701815325, 0.16348598004951292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372] ***
*** starting iteration: 3; err: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372, 0.15337164348586166] ***
*** starting iteration: 4; err: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372, 0.15337164348586166] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372, 0.15337164348586166, 0.15167215013823498] ***
*** starting iteration: 5; err: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372, 0.15337164348586166, 0.15167215013823498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372, 0.15337164348586166, 0.15167215013823498, 0.1507490793539063] ***
*** finished computation of 7 references, err: [Inf, 0.23952703701815325, 0.16348598004951292, 0.15603846290834372, 0.15337164348586166, 0.15167215013823498, 0.1507490793539063] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 35, 0]]
** centroid: 1, normalized-entropy: 0.9464220508835531, [(1, 61), (2, 35)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 135, 22]]
** centroid: 2, normalized-entropy: 0.5845723335293169, [(2, 135), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [69, 35, 0]]
** centroid: 3, normalized-entropy: 0.9214676689990972, [(1, 69), (2, 35)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [76, 38, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 76), (2, 38)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2583261127464998] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678] ***
*** starting iteration: 2; err: [Inf, 0.2583261127464998, 0.17606028911414678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764] ***
*** starting iteration: 3; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483] ***
*** starting iteration: 4; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685] ***
*** starting iteration: 5; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284] ***
*** starting iteration: 6; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187] ***
*** starting iteration: 7; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985] ***
*** starting iteration: 8; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985, 0.14971845100439715] ***
*** starting iteration: 9; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985, 0.14971845100439715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985, 0.14971845100439715, 0.1487027627836237] ***
*** starting iteration: 10; err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985, 0.14971845100439715, 0.1487027627836237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985, 0.14971845100439715, 0.1487027627836237, 0.1474591687229508] ***
*** finished computation of 7 references, err: [Inf, 0.2583261127464998, 0.17606028911414678, 0.16556439359673764, 0.16107026818927483, 0.15814884998060685, 0.1554490604439284, 0.15310400356315187, 0.15120975786995985, 0.14971845100439715, 0.1487027627836237, 0.1474591687229508] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [73, 36, 0]]
** centroid: 1, normalized-entropy: 0.915207326151564, [(1, 73), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [112, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 75, 0]]
** centroid: 3, normalized-entropy: 0.7578784625383954, [(1, 21), (2, 75)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 106, 19]]
** centroid: 4, normalized-entropy: 0.6148227571490692, [(2, 106), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 32, 0]]
** centroid: 5, normalized-entropy: 0.9819407868640977, [(1, 44), (2, 32)]
*** center 6: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31319245275154756] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31319245275154756, 0.26576334320417083] ***
*** finished computation of 3 references, err: [Inf, 0.31319245275154756, 0.26576334320417083] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [312, 29, 0]]
** centroid: 1, normalized-entropy: 0.41970728050886125, [(1, 312), (2, 29)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [65, 96, 7]]
** centroid: 2, normalized-entropy: 0.7460276195732569, [(1, 65), (2, 96), (3, 7)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [26, 121, 10]]
** centroid: 3, normalized-entropy: 0.6134176040182002, [(1, 26), (2, 121), (3, 10)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.37942550173434225] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37942550173434225, 0.2390538796369193] ***
*** finished computation of 3 references, err: [Inf, 0.37942550173434225, 0.2390538796369193] ***
*** center 1: selecting labels [1] (freq >= 2) [from [192, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [137, 105, 0]]
** centroid: 2, normalized-entropy: 0.9873501185946978, [(1, 137), (2, 105)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [73, 138, 22]]
** centroid: 3, normalized-entropy: 0.8161856447806725, [(1, 73), (2, 138), (3, 22)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2889288094193525] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2889288094193525, 0.23417479408181635] ***
*** finished computation of 3 references, err: [Inf, 0.2889288094193525, 0.23417479408181635] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [178, 60, 0]]
** centroid: 1, normalized-entropy: 0.814590929490591, [(1, 178), (2, 60)]
*** center 2: selecting labels [1] (freq >= 2) [from [209, 1, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [12, 188, 19]]
** centroid: 3, normalized-entropy: 0.4571661944264845, [(1, 12), (2, 188), (3, 19)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23239952151512577] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23239952151512577, 0.1665239123943578] ***
*** finished computation of 7 references, err: [Inf, 0.23239952151512577, 0.1665239123943578] ***
*** center 1: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [77, 41, 0]]
** centroid: 3, normalized-entropy: 0.9317769830665124, [(1, 77), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [62, 43, 0]]
** centroid: 4, normalized-entropy: 0.9762497491311086, [(1, 62), (2, 43)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 134, 17]]
** centroid: 5, normalized-entropy: 0.5076575881820506, [(2, 134), (3, 17)]
*** center 6: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [99, 28, 0]]
** centroid: 7, normalized-entropy: 0.7610292284611874, [(1, 99), (2, 28)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18593650042516427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18593650042516427, 0.16306926525212584] ***
*** finished computation of 7 references, err: [Inf, 0.18593650042516427, 0.16306926525212584] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [3, 133, 12]]
** centroid: 1, normalized-entropy: 0.3447608920912414, [(1, 3), (2, 133), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 20, 0]]
** centroid: 2, normalized-entropy: 0.7732266742876346, [(1, 68), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 14, 0]]
** centroid: 3, normalized-entropy: 0.6365048555378351, [(1, 73), (2, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [107, 6, 0]]
** centroid: 4, normalized-entropy: 0.2994113292359872, [(1, 107), (2, 6)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 70, 10]]
** centroid: 5, normalized-entropy: 0.5435644431995963, [(2, 70), (3, 10)]
*** center 6: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18275364009716522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18275364009716522, 0.16171495499148003] ***
*** finished computation of 7 references, err: [Inf, 0.18275364009716522, 0.16171495499148003] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 35, 9]]
** centroid: 1, normalized-entropy: 0.7309263775906009, [(2, 35), (3, 9)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [148, 14, 0]]
** centroid: 2, normalized-entropy: 0.42440514472480345, [(1, 148), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 59, 10]]
** centroid: 3, normalized-entropy: 0.5969995167604553, [(2, 59), (3, 10)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [33, 56, 0]]
** centroid: 4, normalized-entropy: 0.951274087437692, [(1, 33), (2, 56)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 83, 0]]
** centroid: 5, normalized-entropy: 0.21832103023746746, [(1, 3), (2, 83)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 2, 0]]
** centroid: 6, normalized-entropy: 0.17378132267943294, [(1, 75), (2, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [140, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2791158934934876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2791158934934876, 0.2264234267319231] ***
*** starting iteration: 2; err: [Inf, 0.2791158934934876, 0.2264234267319231] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2791158934934876, 0.2264234267319231, 0.21085247352849357] ***
*** starting iteration: 3; err: [Inf, 0.2791158934934876, 0.2264234267319231, 0.21085247352849357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2791158934934876, 0.2264234267319231, 0.21085247352849357, 0.20118942304182932] ***
*** finished computation of 7 references, err: [Inf, 0.2791158934934876, 0.2264234267319231, 0.21085247352849357, 0.20118942304182932] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [100, 57, 0]]
** centroid: 1, normalized-entropy: 0.9451917693702082, [(1, 100), (2, 57)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 94, 17]]
** centroid: 2, normalized-entropy: 0.6176751423955683, [(2, 94), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 42, 0]]
** centroid: 3, normalized-entropy: 0.48890859144051524, [(1, 5), (2, 42)]
*** center 4: selecting labels [1] (freq >= 1) [from [149, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [34, 53, 0]]
** centroid: 6, normalized-entropy: 0.9653168212008997, [(1, 34), (2, 53)]
*** center 7: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28980593696080226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28980593696080226, 0.2326145284104746] ***
*** starting iteration: 2; err: [Inf, 0.28980593696080226, 0.2326145284104746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28980593696080226, 0.2326145284104746, 0.22140372102742253] ***
*** starting iteration: 3; err: [Inf, 0.28980593696080226, 0.2326145284104746, 0.22140372102742253] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28980593696080226, 0.2326145284104746, 0.22140372102742253, 0.21630527263275465] ***
*** finished computation of 7 references, err: [Inf, 0.28980593696080226, 0.2326145284104746, 0.22140372102742253, 0.21630527263275465] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [19, 63, 1]]
** centroid: 1, normalized-entropy: 0.546164834261163, [(1, 19), (2, 63), (3, 1)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 1, 0]]
** centroid: 2, normalized-entropy: 0.12229159706937456, [(1, 59), (2, 1)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [1, 119, 21]]
** centroid: 3, normalized-entropy: 0.4204174055999886, [(1, 1), (2, 119), (3, 21)]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [121, 13, 0]]
** centroid: 5, normalized-entropy: 0.4594610707110552, [(1, 121), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 47, 0]]
** centroid: 6, normalized-entropy: 0.9893257549491837, [(1, 60), (2, 47)]
*** center 7: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2740560204256326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2740560204256326, 0.20594465815234578] ***
*** starting iteration: 2; err: [Inf, 0.2740560204256326, 0.20594465815234578] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2740560204256326, 0.20594465815234578, 0.19674864096002936] ***
*** starting iteration: 3; err: [Inf, 0.2740560204256326, 0.20594465815234578, 0.19674864096002936] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2740560204256326, 0.20594465815234578, 0.19674864096002936, 0.1947486781929878] ***
*** finished computation of 7 references, err: [Inf, 0.2740560204256326, 0.20594465815234578, 0.19674864096002936, 0.1947486781929878] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [3, 76, 0]]
** centroid: 1, normalized-entropy: 0.23292785546981223, [(1, 3), (2, 76)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [50, 39, 0]]
** centroid: 2, normalized-entropy: 0.9889525767600615, [(1, 50), (2, 39)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [108, 2, 0]]
** centroid: 3, normalized-entropy: 0.13110652958234514, [(1, 108), (2, 2)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 38, 19]]
** centroid: 4, normalized-entropy: 0.9182958340544894, [(2, 38), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [113, 1, 0]]
** centroid: 5, normalized-entropy: 0.07253718299881001, [(1, 113), (2, 1)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 93, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36401642262851736] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36401642262851736, 0.29695816661228425] ***
*** finished computation of 3 references, err: [Inf, 0.36401642262851736, 0.29695816661228425] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [138, 85, 0]]
** centroid: 1, normalized-entropy: 0.958861314238278, [(1, 138), (2, 85)]
*** center 2: selecting labels [1] (freq >= 1) [from [186, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [79, 161, 17]]
** centroid: 3, normalized-entropy: 0.760263833509474, [(1, 79), (2, 161), (3, 17)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.34225892244504463] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34225892244504463, 0.30503980819040954] ***
*** finished computation of 3 references, err: [Inf, 0.34225892244504463, 0.30503980819040954] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [197, 44, 0]]
** centroid: 1, normalized-entropy: 0.6856727401596413, [(1, 197), (2, 44)]
*** center 2: selecting labels [1] (freq >= 1) [from [183, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [22, 199, 22]]
** centroid: 3, normalized-entropy: 0.5447965417325322, [(1, 22), (2, 199), (3, 22)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46439163362072583] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46439163362072583, 0.3048137150470285] ***
*** finished computation of 3 references, err: [Inf, 0.46439163362072583, 0.3048137150470285] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [127, 113, 0]]
** centroid: 1, normalized-entropy: 0.9975440207210967, [(1, 127), (2, 113)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [46, 136, 19]]
** centroid: 2, normalized-entropy: 0.7507498138668387, [(1, 46), (2, 136), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [226, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3142236443879726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3142236443879726, 0.23862459894700405] ***
*** starting iteration: 2; err: [Inf, 0.3142236443879726, 0.23862459894700405] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3142236443879726, 0.23862459894700405, 0.2340106379524623] ***
*** starting iteration: 3; err: [Inf, 0.3142236443879726, 0.23862459894700405, 0.2340106379524623] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3142236443879726, 0.23862459894700405, 0.2340106379524623, 0.23375578779397202] ***
*** finished computation of 3 references, err: [Inf, 0.3142236443879726, 0.23862459894700405, 0.2340106379524623, 0.23375578779397202] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [71, 182, 17]]
** centroid: 1, normalized-entropy: 0.7202008757918189, [(1, 71), (2, 182), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [144, 64, 0]]
** centroid: 3, normalized-entropy: 0.8904916402194913, [(1, 144), (2, 64)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 13)
[0.9410098721475967, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.8999808191424958, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.3683074698154185] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803] ***
*** starting iteration: 2; err: [Inf, 0.3683074698154185, 0.33561801884110803] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387] ***
*** starting iteration: 3; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041] ***
*** starting iteration: 4; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455] ***
*** starting iteration: 5; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804] ***
*** starting iteration: 6; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124] ***
*** starting iteration: 7; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039] ***
*** starting iteration: 8; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039, 0.31801724347618743] ***
*** starting iteration: 9; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039, 0.31801724347618743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039, 0.31801724347618743, 0.31232346907571273] ***
*** starting iteration: 10; err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039, 0.31801724347618743, 0.31232346907571273] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039, 0.31801724347618743, 0.31232346907571273, 0.2986309527085294] ***
*** finished computation of 3 references, err: [Inf, 0.3683074698154185, 0.33561801884110803, 0.3319223658475387, 0.3293368476401041, 0.3271023838923455, 0.32473322937639804, 0.3223445015888124, 0.3202776403611039, 0.31801724347618743, 0.31232346907571273, 0.2986309527085294] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [156, 62, 0]]
** centroid: 1, normalized-entropy: 0.8613819514443714, [(1, 156), (2, 62)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [51, 184, 17]]
** centroid: 2, normalized-entropy: 0.668882131291048, [(1, 51), (2, 184), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [196, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3800753020755444] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800753020755444, 0.319439087174777] ***
*** starting iteration: 2; err: [Inf, 0.3800753020755444, 0.319439087174777] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800753020755444, 0.319439087174777, 0.2942035555285562] ***
*** starting iteration: 3; err: [Inf, 0.3800753020755444, 0.319439087174777, 0.2942035555285562] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800753020755444, 0.319439087174777, 0.2942035555285562, 0.2930894711961051] ***
*** starting iteration: 4; err: [Inf, 0.3800753020755444, 0.319439087174777, 0.2942035555285562, 0.2930894711961051] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3800753020755444, 0.319439087174777, 0.2942035555285562, 0.2930894711961051, 0.2928873030049936] ***
*** finished computation of 3 references, err: [Inf, 0.3800753020755444, 0.319439087174777, 0.2942035555285562, 0.2930894711961051, 0.2928873030049936] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [179, 29, 0]]
** centroid: 1, normalized-entropy: 0.5827259056939698, [(1, 179), (2, 29)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 187, 22]]
** centroid: 2, normalized-entropy: 0.48546076074591343, [(2, 187), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [223, 27, 0]]
** centroid: 3, normalized-entropy: 0.49385372369952046, [(1, 223), (2, 27)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.40823276303541] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40823276303541, 0.2937761231107746] ***
*** starting iteration: 2; err: [Inf, 0.40823276303541, 0.2937761231107746] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40823276303541, 0.2937761231107746, 0.28904234842471277] ***
*** starting iteration: 3; err: [Inf, 0.40823276303541, 0.2937761231107746, 0.28904234842471277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40823276303541, 0.2937761231107746, 0.28904234842471277, 0.2879981563218508] ***
*** starting iteration: 4; err: [Inf, 0.40823276303541, 0.2937761231107746, 0.28904234842471277, 0.2879981563218508] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40823276303541, 0.2937761231107746, 0.28904234842471277, 0.2879981563218508, 0.28783499828932146] ***
*** finished computation of 3 references, err: [Inf, 0.40823276303541, 0.2937761231107746, 0.28904234842471277, 0.2879981563218508, 0.28783499828932146] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [155, 37, 0]]
** centroid: 1, normalized-entropy: 0.7071028270452293, [(1, 155), (2, 37)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [244, 15, 0]]
** centroid: 2, normalized-entropy: 0.3191122672252718, [(1, 244), (2, 15)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 197, 19]]
** centroid: 3, normalized-entropy: 0.4296336540693285, [(2, 197), (3, 19)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9410098721475967, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.8999808191424958, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.38451060847305263] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38451060847305263, 0.30746019358789994] ***
*** starting iteration: 2; err: [Inf, 0.38451060847305263, 0.30746019358789994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38451060847305263, 0.30746019358789994, 0.2960373322958353] ***
*** starting iteration: 3; err: [Inf, 0.38451060847305263, 0.30746019358789994, 0.2960373322958353] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38451060847305263, 0.30746019358789994, 0.2960373322958353, 0.2936339236159196] ***
*** starting iteration: 4; err: [Inf, 0.38451060847305263, 0.30746019358789994, 0.2960373322958353, 0.2936339236159196] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38451060847305263, 0.30746019358789994, 0.2960373322958353, 0.2936339236159196, 0.2933591907268678] ***
*** finished computation of 3 references, err: [Inf, 0.38451060847305263, 0.30746019358789994, 0.2960373322958353, 0.2936339236159196, 0.2933591907268678] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [244, 12, 0]]
** centroid: 1, normalized-entropy: 0.2729708579140699, [(1, 244), (2, 12)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 191, 22]]
** centroid: 2, normalized-entropy: 0.4793274523157513, [(2, 191), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [158, 40, 0]]
** centroid: 3, normalized-entropy: 0.7259501452943735, [(1, 158), (2, 40)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3979083449681704] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3979083449681704, 0.2906581759229414] ***
*** starting iteration: 2; err: [Inf, 0.3979083449681704, 0.2906581759229414] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3979083449681704, 0.2906581759229414, 0.2879830199130427] ***
*** starting iteration: 3; err: [Inf, 0.3979083449681704, 0.2906581759229414, 0.2879830199130427] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3979083449681704, 0.2906581759229414, 0.2879830199130427, 0.2876156630745713] ***
*** finished computation of 3 references, err: [Inf, 0.3979083449681704, 0.2906581759229414, 0.2879830199130427, 0.2876156630745713] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [226, 28, 0]]
** centroid: 1, normalized-entropy: 0.5006280595145071, [(1, 226), (2, 28)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 187, 19]]
** centroid: 2, normalized-entropy: 0.4438797176957611, [(2, 187), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [173, 34, 0]]
** centroid: 3, normalized-entropy: 0.6443834793173693, [(1, 173), (2, 34)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.44400155003946107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44400155003946107, 0.2946092532667983] ***
*** starting iteration: 2; err: [Inf, 0.44400155003946107, 0.2946092532667983] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44400155003946107, 0.2946092532667983, 0.2926329841848474] ***
*** starting iteration: 3; err: [Inf, 0.44400155003946107, 0.2946092532667983, 0.2926329841848474] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44400155003946107, 0.2946092532667983, 0.2926329841848474, 0.2923401686483183] ***
*** finished computation of 3 references, err: [Inf, 0.44400155003946107, 0.2946092532667983, 0.2926329841848474, 0.2923401686483183] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [69, 173, 17]]
** centroid: 1, normalized-entropy: 0.728827657730437, [(1, 69), (2, 173), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [119, 73, 0]]
** centroid: 3, normalized-entropy: 0.9581890286800805, [(1, 119), (2, 73)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9410098721475967, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.9109948271624918, 0.8999808191424958, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.23142412711108276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23142412711108276, 0.19835950466510546] ***
*** starting iteration: 2; err: [Inf, 0.23142412711108276, 0.19835950466510546] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356] ***
*** starting iteration: 3; err: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825] ***
*** starting iteration: 4; err: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825, 0.18858057193530797] ***
*** starting iteration: 5; err: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825, 0.18858057193530797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825, 0.18858057193530797, 0.1873789697426844] ***
*** starting iteration: 6; err: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825, 0.18858057193530797, 0.1873789697426844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825, 0.18858057193530797, 0.1873789697426844, 0.1867072454418752] ***
*** finished computation of 7 references, err: [Inf, 0.23142412711108276, 0.19835950466510546, 0.19326835867666356, 0.19014866632554825, 0.18858057193530797, 0.1873789697426844, 0.1867072454418752] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 89, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [118, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [104, 1, 0]]
** centroid: 3, normalized-entropy: 0.07761951112637416, [(1, 104), (2, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 62, 17]]
** centroid: 4, normalized-entropy: 0.751286576718343, [(2, 62), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 25, 0]]
** centroid: 5, normalized-entropy: 0.8566727035015875, [(1, 64), (2, 25)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [30, 67, 0]]
** centroid: 6, normalized-entropy: 0.892338681064176, [(1, 30), (2, 67)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [87, 2, 0]]
** centroid: 7, normalized-entropy: 0.1551032721030341, [(1, 87), (2, 2)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.29362595490301435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29362595490301435, 0.21941749314390782] ***
*** starting iteration: 2; err: [Inf, 0.29362595490301435, 0.21941749314390782] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395] ***
*** starting iteration: 3; err: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858] ***
*** starting iteration: 4; err: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858, 0.19391617098211616] ***
*** starting iteration: 5; err: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858, 0.19391617098211616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858, 0.19391617098211616, 0.1907203239311968] ***
*** starting iteration: 6; err: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858, 0.19391617098211616, 0.1907203239311968] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858, 0.19391617098211616, 0.1907203239311968, 0.18990575320839972] ***
*** finished computation of 7 references, err: [Inf, 0.29362595490301435, 0.21941749314390782, 0.20559279960119395, 0.19747720520546858, 0.19391617098211616, 0.1907203239311968, 0.18990575320839972] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 39, 0]]
** centroid: 1, normalized-entropy: 0.9973806632063373, [(1, 44), (2, 39)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 111, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 59, 22]]
** centroid: 4, normalized-entropy: 0.8437582063121657, [(2, 59), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [88, 1, 0]]
** centroid: 5, normalized-entropy: 0.08887969568457589, [(1, 88), (2, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [77, 33, 0]]
** centroid: 6, normalized-entropy: 0.8812908992306927, [(1, 77), (2, 33)]
*** center 7: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2386727686007989] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386727686007989, 0.20429731157749356] ***
*** starting iteration: 2; err: [Inf, 0.2386727686007989, 0.20429731157749356] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668] ***
*** starting iteration: 3; err: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413] ***
*** starting iteration: 4; err: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413, 0.19201450755001456] ***
*** starting iteration: 5; err: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413, 0.19201450755001456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413, 0.19201450755001456, 0.19100434087479357] ***
*** starting iteration: 6; err: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413, 0.19201450755001456, 0.19100434087479357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413, 0.19201450755001456, 0.19100434087479357, 0.19047221091381836] ***
*** finished computation of 7 references, err: [Inf, 0.2386727686007989, 0.20429731157749356, 0.19558172049824668, 0.19362409307022413, 0.19201450755001456, 0.19100434087479357, 0.19047221091381836] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 50, 19]]
** centroid: 1, normalized-entropy: 0.849054424254048, [(2, 50), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [24, 67, 0]]
** centroid: 2, normalized-entropy: 0.8323322690121193, [(1, 24), (2, 67)]
*** center 3: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [73, 21, 0]]
** centroid: 4, normalized-entropy: 0.7663350359691776, [(1, 73), (2, 21)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 91, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 20, 0]]
** centroid: 7, normalized-entropy: 0.6987003526563345, [(1, 86), (2, 20)]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9410098721475967, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.9109948271624918, 0.8999808191424958, 0.8850047652442862, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.24407595397020737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469] ***
*** starting iteration: 2; err: [Inf, 0.24407595397020737, 0.20711357741268469] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557] ***
*** starting iteration: 3; err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584] ***
*** starting iteration: 4; err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677] ***
*** starting iteration: 5; err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324] ***
*** starting iteration: 6; err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324, 0.19202340466974377] ***
*** starting iteration: 7; err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324, 0.19202340466974377] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324, 0.19202340466974377, 0.19098594298055913] ***
*** starting iteration: 8; err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324, 0.19202340466974377, 0.19098594298055913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324, 0.19202340466974377, 0.19098594298055913, 0.19043982170896978] ***
*** finished computation of 7 references, err: [Inf, 0.24407595397020737, 0.20711357741268469, 0.20232404509486557, 0.19951933789746584, 0.19766050061999677, 0.19579040558656324, 0.19202340466974377, 0.19098594298055913, 0.19043982170896978] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 112, 17]]
** centroid: 1, normalized-entropy: 0.5623077238596306, [(2, 112), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [74, 41, 0]]
** centroid: 3, normalized-entropy: 0.9397580401106037, [(1, 74), (2, 41)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [79, 22, 0]]
** centroid: 4, normalized-entropy: 0.756170148929897, [(1, 79), (2, 22)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [109, 5, 0]]
** centroid: 6, normalized-entropy: 0.2597169275408663, [(1, 109), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 3, 0]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(1, 60), (2, 3)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3549224004404957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3549224004404957, 0.2345335110882367] ***
*** starting iteration: 2; err: [Inf, 0.3549224004404957, 0.2345335110882367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515] ***
*** starting iteration: 3; err: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878] ***
*** starting iteration: 4; err: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878, 0.19109215590868261] ***
*** starting iteration: 5; err: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878, 0.19109215590868261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878, 0.19109215590868261, 0.1879190125975987] ***
*** starting iteration: 6; err: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878, 0.19109215590868261, 0.1879190125975987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878, 0.19109215590868261, 0.1879190125975987, 0.18703985655599314] ***
*** finished computation of 7 references, err: [Inf, 0.3549224004404957, 0.2345335110882367, 0.2109229047859515, 0.19839788804380878, 0.19109215590868261, 0.1879190125975987, 0.18703985655599314] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 103, 22]]
** centroid: 1, normalized-entropy: 0.6712478853829507, [(2, 103), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [67, 26, 0]]
** centroid: 2, normalized-entropy: 0.8548640967818041, [(1, 67), (2, 26)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 79, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [89, 3, 0]]
** centroid: 4, normalized-entropy: 0.20731018585948177, [(1, 89), (2, 3)]
*** center 5: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [89, 32, 0]]
** centroid: 6, normalized-entropy: 0.8334064161505499, [(1, 89), (2, 32)]
*** center 7: selecting labels [1] (freq >= 1) [from [86, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2354744021254389] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354744021254389, 0.20528498791839586] ***
*** starting iteration: 2; err: [Inf, 0.2354744021254389, 0.20528498791839586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727] ***
*** starting iteration: 3; err: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727, 0.19300175565148311] ***
*** starting iteration: 4; err: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727, 0.19300175565148311] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727, 0.19300175565148311, 0.19179158984799347] ***
*** starting iteration: 5; err: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727, 0.19300175565148311, 0.19179158984799347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727, 0.19300175565148311, 0.19179158984799347, 0.19111159814848402] ***
*** finished computation of 7 references, err: [Inf, 0.2354744021254389, 0.20528498791839586, 0.19542613405122727, 0.19300175565148311, 0.19179158984799347, 0.19111159814848402] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [122, 3, 0]]
** centroid: 1, normalized-entropy: 0.1633455431834022, [(1, 122), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [60, 43, 0]]
** centroid: 2, normalized-entropy: 0.98025955447738, [(1, 60), (2, 43)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 107, 19]]
** centroid: 4, normalized-entropy: 0.6118228576241159, [(2, 107), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [43, 20, 0]]
** centroid: 5, normalized-entropy: 0.9015982354056711, [(1, 43), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [19, 76, 0]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(1, 19), (2, 76)]
*** center 7: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 17)
[0.9410098721475967, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.9109948271624918, 0.8999808191424958, 0.893989798181415, 0.8850047652442862, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 18
iteration 6 finished
*** starting iteration: 1; err: [Inf, 0.1994157688022387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1994157688022387, 0.16030699054517591] ***
*** starting iteration: 2; err: [Inf, 0.1994157688022387, 0.16030699054517591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1994157688022387, 0.16030699054517591, 0.15474485578406993] ***
*** starting iteration: 3; err: [Inf, 0.1994157688022387, 0.16030699054517591, 0.15474485578406993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1994157688022387, 0.16030699054517591, 0.15474485578406993, 0.15093211326104877] ***
*** finished computation of 7 references, err: [Inf, 0.1994157688022387, 0.16030699054517591, 0.15474485578406993, 0.15093211326104877] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 108, 17]]
** centroid: 1, normalized-entropy: 0.5736665363828041, [(2, 108), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [21, 75, 0]]
** centroid: 4, normalized-entropy: 0.7578784625383954, [(1, 21), (2, 75)]
*** center 5: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [80, 7, 0]]
** centroid: 6, normalized-entropy: 0.40379715049939235, [(1, 80), (2, 7)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [19, 56, 0]]
** centroid: 7, normalized-entropy: 0.8165187119538281, [(1, 19), (2, 56)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.19660998191586745] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19660998191586745, 0.16177893403028815] ***
*** starting iteration: 2; err: [Inf, 0.19660998191586745, 0.16177893403028815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19660998191586745, 0.16177893403028815, 0.15277729897914843] ***
*** starting iteration: 3; err: [Inf, 0.19660998191586745, 0.16177893403028815, 0.15277729897914843] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19660998191586745, 0.16177893403028815, 0.15277729897914843, 0.14940754004867227] ***
*** finished computation of 7 references, err: [Inf, 0.19660998191586745, 0.16177893403028815, 0.15277729897914843, 0.14940754004867227] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [5, 71, 0]]
** centroid: 1, normalized-entropy: 0.35001059292688486, [(1, 5), (2, 71)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 119, 22]]
** centroid: 2, normalized-entropy: 0.624722916628114, [(2, 119), (3, 22)]
*** center 3: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [98, 39, 0]]
** centroid: 4, normalized-entropy: 0.8617382781509058, [(1, 98), (2, 39)]
*** center 5: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [67, 14, 0]]
** centroid: 6, normalized-entropy: 0.6641593279528072, [(1, 67), (2, 14)]
*** center 7: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19981866157048198] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19981866157048198, 0.15112380194233388] ***
*** starting iteration: 2; err: [Inf, 0.19981866157048198, 0.15112380194233388] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19981866157048198, 0.15112380194233388, 0.14679419448406533] ***
*** starting iteration: 3; err: [Inf, 0.19981866157048198, 0.15112380194233388, 0.14679419448406533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19981866157048198, 0.15112380194233388, 0.14679419448406533, 0.14585477086321647] ***
*** finished computation of 7 references, err: [Inf, 0.19981866157048198, 0.15112380194233388, 0.14679419448406533, 0.14585477086321647] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [46, 57, 0]]
** centroid: 1, normalized-entropy: 0.9917570244063947, [(1, 46), (2, 57)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 95, 19]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(2, 95), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 64, 0]]
** centroid: 5, normalized-entropy: 0.9111178649415465, [(1, 31), (2, 64)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [50, 33, 0]]
** centroid: 6, normalized-entropy: 0.9695235828220429, [(1, 50), (2, 33)]
*** center 7: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9410098721475967, 0.9320068571565577, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.9109948271624918, 0.8999808191424958, 0.893989798181415, 0.8850047652442862, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 18
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9410098721475967, 0.9320068571565577, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.9109948271624918, 0.8999808191424958, 0.893989798181415, 0.8850047652442862, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 18
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9410098721475967, 0.9320068571565577, 0.9300348252444061, 0.9220477962992933, 0.9179988371605138, 0.9110188032343721, 0.9109948271624918, 0.8999808191424958, 0.893989798181415, 0.8850047652442862, 0.8819777861694029, 0.8739937542332751, 0.8730586874299449, 0.8699627771484059, 0.851036665407923, 0.8229756702810594, 0.8080655505805207, 0.7879765993538448]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :dnet, 0.6, 1) => 0.9410098721475967
finished with 19
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.2247061662896125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2247061662896125, 0.19626337723308676] ***
*** starting iteration: 2; err: [Inf, 0.2247061662896125, 0.19626337723308676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865] ***
*** starting iteration: 3; err: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444] ***
*** starting iteration: 4; err: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444, 0.186889822424918] ***
*** starting iteration: 5; err: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444, 0.186889822424918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444, 0.186889822424918, 0.1852011418518227] ***
*** starting iteration: 6; err: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444, 0.186889822424918, 0.1852011418518227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444, 0.186889822424918, 0.1852011418518227, 0.18437987583893556] ***
*** finished computation of 7 references, err: [Inf, 0.2247061662896125, 0.19626337723308676, 0.19123940001585865, 0.18821695320449444, 0.186889822424918, 0.1852011418518227, 0.18437987583893556] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [48, 50, 0]]
** centroid: 1, normalized-entropy: 0.9996995428565171, [(1, 48), (2, 50)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 96, 17]]
** centroid: 2, normalized-entropy: 0.6109464989595527, [(2, 96), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [27, 64, 0]]
** centroid: 3, normalized-entropy: 0.8772236230732716, [(1, 27), (2, 64)]
*** center 4: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [80, 36, 0]]
** centroid: 5, normalized-entropy: 0.8935711016541908, [(1, 80), (2, 36)]
*** center 6: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26892131010930553] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26892131010930553, 0.23402589168315796] ***
*** starting iteration: 2; err: [Inf, 0.26892131010930553, 0.23402589168315796] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117] ***
*** starting iteration: 3; err: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373] ***
*** starting iteration: 4; err: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373, 0.19083872861878157] ***
*** starting iteration: 5; err: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373, 0.19083872861878157] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373, 0.19083872861878157, 0.18791483815011012] ***
*** starting iteration: 6; err: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373, 0.19083872861878157, 0.18791483815011012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373, 0.19083872861878157, 0.18791483815011012, 0.1874195771966258] ***
*** finished computation of 7 references, err: [Inf, 0.26892131010930553, 0.23402589168315796, 0.20663782870718117, 0.19789543247752373, 0.19083872861878157, 0.18791483815011012, 0.1874195771966258] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [82, 8, 0]]
** centroid: 1, normalized-entropy: 0.43275015878875417, [(1, 82), (2, 8)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 96, 22]]
** centroid: 2, normalized-entropy: 0.693965967334286, [(2, 96), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 30, 0]]
** centroid: 3, normalized-entropy: 0.8079869552387523, [(1, 91), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [71, 24, 0]]
** centroid: 4, normalized-entropy: 0.8154224977821039, [(1, 71), (2, 24)]
*** center 5: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 85, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.38734777682814103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738] ***
*** starting iteration: 2; err: [Inf, 0.38734777682814103, 0.237768166163738] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477] ***
*** starting iteration: 3; err: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724] ***
*** starting iteration: 4; err: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543] ***
*** starting iteration: 5; err: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543, 0.18856977207049996] ***
*** starting iteration: 6; err: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543, 0.18856977207049996] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543, 0.18856977207049996, 0.1866577908597786] ***
*** starting iteration: 7; err: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543, 0.18856977207049996, 0.1866577908597786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543, 0.18856977207049996, 0.1866577908597786, 0.18583400850358797] ***
*** finished computation of 7 references, err: [Inf, 0.38734777682814103, 0.237768166163738, 0.21443735007643477, 0.19787007506735724, 0.1911832372737543, 0.18856977207049996, 0.1866577908597786, 0.18583400850358797] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 118, 19]]
** centroid: 1, normalized-entropy: 0.5807875385800493, [(2, 118), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 37, 0]]
** centroid: 2, normalized-entropy: 0.9478176755411893, [(1, 64), (2, 37)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [48, 52, 0]]
** centroid: 3, normalized-entropy: 0.998845535995202, [(1, 48), (2, 52)]
*** center 4: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [47, 42, 0]]
** centroid: 5, normalized-entropy: 0.9977221075331744, [(1, 47), (2, 42)]
*** center 6: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
finished with 10 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.2811534780273214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2811534780273214, 0.2083164496915415] ***
*** starting iteration: 2; err: [Inf, 0.2811534780273214, 0.2083164496915415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2811534780273214, 0.2083164496915415, 0.19629088743962347] ***
*** starting iteration: 3; err: [Inf, 0.2811534780273214, 0.2083164496915415, 0.19629088743962347] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2811534780273214, 0.2083164496915415, 0.19629088743962347, 0.19362771089654415] ***
*** finished computation of 7 references, err: [Inf, 0.2811534780273214, 0.2083164496915415, 0.19629088743962347, 0.19362771089654415] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 64, 0]]
** centroid: 1, normalized-entropy: 0.9522656254366643, [(1, 108), (2, 64)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 95, 29]]
** centroid: 2, normalized-entropy: 0.7846984744986523, [(2, 95), (3, 29)]
*** center 3: selecting labels [1] (freq >= 1) [from [195, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [156, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [56, 70, 0]]
** centroid: 5, normalized-entropy: 0.9910760598382222, [(1, 56), (2, 70)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [1, 137, 0]]
** centroid: 6, normalized-entropy: 0.06192738891155935, [(1, 1), (2, 137)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [86, 3, 0]]
** centroid: 7, normalized-entropy: 0.21265863988163503, [(1, 86), (2, 3)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2411045961761847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2411045961761847, 0.2020355582423508] ***
*** starting iteration: 2; err: [Inf, 0.2411045961761847, 0.2020355582423508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2411045961761847, 0.2020355582423508, 0.19615846352558583] ***
*** starting iteration: 3; err: [Inf, 0.2411045961761847, 0.2020355582423508, 0.19615846352558583] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2411045961761847, 0.2020355582423508, 0.19615846352558583, 0.1935416812049225] ***
*** finished computation of 7 references, err: [Inf, 0.2411045961761847, 0.2020355582423508, 0.19615846352558583, 0.1935416812049225] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [35, 5, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 35), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [83, 3, 0]]
** centroid: 2, normalized-entropy: 0.21832103023746746, [(1, 83), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [70, 9, 0]]
** centroid: 3, normalized-entropy: 0.511639783631173, [(1, 70), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 37, 0]]
** centroid: 4, normalized-entropy: 0.994605981300523, [(1, 44), (2, 37)]
*** center 5: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 55, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 73, 13]]
** centroid: 7, normalized-entropy: 0.6127425554686624, [(2, 73), (3, 13)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24054406182095409] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24054406182095409, 0.20245718464255333] ***
*** starting iteration: 2; err: [Inf, 0.24054406182095409, 0.20245718464255333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24054406182095409, 0.20245718464255333, 0.1941405091173947] ***
*** starting iteration: 3; err: [Inf, 0.24054406182095409, 0.20245718464255333, 0.1941405091173947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24054406182095409, 0.20245718464255333, 0.1941405091173947, 0.18925069190189242] ***
*** finished computation of 7 references, err: [Inf, 0.24054406182095409, 0.20245718464255333, 0.1941405091173947, 0.18925069190189242] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [49, 36, 0]]
** centroid: 1, normalized-entropy: 0.9830605548016024, [(1, 49), (2, 36)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 62, 0]]
** centroid: 2, normalized-entropy: 0.6652735227649414, [(1, 13), (2, 62)]
*** center 3: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 62, 15]]
** centroid: 5, normalized-entropy: 0.7114160189012126, [(2, 62), (3, 15)]
*** center 6: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [36, 24, 0]]
** centroid: 7, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 24)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2237477957997471] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237477957997471, 0.20384636508766563] ***
*** starting iteration: 2; err: [Inf, 0.2237477957997471, 0.20384636508766563] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237477957997471, 0.20384636508766563, 0.19689813381433488] ***
*** starting iteration: 3; err: [Inf, 0.2237477957997471, 0.20384636508766563, 0.19689813381433488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2237477957997471, 0.20384636508766563, 0.19689813381433488, 0.19023346837516875] ***
*** finished computation of 7 references, err: [Inf, 0.2237477957997471, 0.20384636508766563, 0.19689813381433488, 0.19023346837516875] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [69, 28, 0]]
** centroid: 1, normalized-entropy: 0.8669837150190186, [(1, 69), (2, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 85, 13]]
** centroid: 3, normalized-entropy: 0.5646695797525669, [(2, 85), (3, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [29, 42, 0]]
** centroid: 4, normalized-entropy: 0.9756797868933086, [(1, 29), (2, 42)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [31, 25, 0]]
** centroid: 5, normalized-entropy: 0.9917033083725819, [(1, 31), (2, 25)]
*** center 6: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24999341701343655] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24999341701343655, 0.20092983670905232] ***
*** starting iteration: 2; err: [Inf, 0.24999341701343655, 0.20092983670905232] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24999341701343655, 0.20092983670905232, 0.19722513086721302] ***
*** starting iteration: 3; err: [Inf, 0.24999341701343655, 0.20092983670905232, 0.19722513086721302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24999341701343655, 0.20092983670905232, 0.19722513086721302, 0.1943857458420098] ***
*** finished computation of 7 references, err: [Inf, 0.24999341701343655, 0.20092983670905232, 0.19722513086721302, 0.1943857458420098] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 2, 0]]
** centroid: 1, normalized-entropy: 0.2108423003185322, [(1, 58), (2, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [64, 15, 0]]
** centroid: 3, normalized-entropy: 0.7012065844539666, [(1, 64), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 16, 0]]
** centroid: 4, normalized-entropy: 0.7320666900931937, [(1, 62), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [38, 11, 0]]
** centroid: 5, normalized-entropy: 0.7682814090975241, [(1, 38), (2, 11)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 70, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 73, 15]]
** centroid: 7, normalized-entropy: 0.6587435307694671, [(2, 73), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24699766994081437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24699766994081437, 0.21055335796903818] ***
*** starting iteration: 2; err: [Inf, 0.24699766994081437, 0.21055335796903818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24699766994081437, 0.21055335796903818, 0.19481484907679258] ***
*** starting iteration: 3; err: [Inf, 0.24699766994081437, 0.21055335796903818, 0.19481484907679258] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24699766994081437, 0.21055335796903818, 0.19481484907679258, 0.18870986505970358] ***
*** finished computation of 7 references, err: [Inf, 0.24699766994081437, 0.21055335796903818, 0.19481484907679258, 0.18870986505970358] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [81, 2, 0]]
** centroid: 1, normalized-entropy: 0.1638605128691586, [(1, 81), (2, 2)]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 86, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 11, 0]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(1, 66), (2, 11)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 49, 11]]
** centroid: 5, normalized-entropy: 0.6873150928309273, [(2, 49), (3, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [68, 24, 0]]
** centroid: 6, normalized-entropy: 0.828055725379504, [(1, 68), (2, 24)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [32, 23, 0]]
** centroid: 7, normalized-entropy: 0.980597440991727, [(1, 32), (2, 23)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4216255169780925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216255169780925, 0.2626576656214893] ***
*** starting iteration: 2; err: [Inf, 0.4216255169780925, 0.2626576656214893] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216255169780925, 0.2626576656214893, 0.22861784611828626] ***
*** starting iteration: 3; err: [Inf, 0.4216255169780925, 0.2626576656214893, 0.22861784611828626] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.4216255169780925, 0.2626576656214893, 0.22861784611828626, 0.2003289804905653] ***
*** finished computation of 7 references, err: [Inf, 0.4216255169780925, 0.2626576656214893, 0.22861784611828626, 0.2003289804905653] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [39, 27, 0]]
** centroid: 1, normalized-entropy: 0.976020648236615, [(1, 39), (2, 27)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 50, 15]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(2, 50), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 20, 0]]
** centroid: 3, normalized-entropy: 0.8577435372751958, [(1, 51), (2, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 14, 0]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(1, 49), (2, 14)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 5]]
** centroid: 6, normalized-entropy: 0.340373285759646, [(2, 74), (3, 5)]
*** center 7: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2619834155431017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2619834155431017, 0.19567917982675134] ***
*** starting iteration: 2; err: [Inf, 0.2619834155431017, 0.19567917982675134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2619834155431017, 0.19567917982675134, 0.19065983752906324] ***
*** starting iteration: 3; err: [Inf, 0.2619834155431017, 0.19567917982675134, 0.19065983752906324] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2619834155431017, 0.19567917982675134, 0.19065983752906324, 0.1890419089514762] ***
*** finished computation of 7 references, err: [Inf, 0.2619834155431017, 0.19567917982675134, 0.19065983752906324, 0.1890419089514762] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [23, 34, 0]]
** centroid: 1, normalized-entropy: 0.9729661265889024, [(1, 23), (2, 34)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [14, 73, 0]]
** centroid: 2, normalized-entropy: 0.6365048555378351, [(1, 14), (2, 73)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 59, 14]]
** centroid: 3, normalized-entropy: 0.7051819722888517, [(2, 59), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [60, 30, 0]]
** centroid: 5, normalized-entropy: 0.9182958340544894, [(1, 60), (2, 30)]
*** center 6: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [26, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25016524709761145] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25016524709761145, 0.21148985150363298] ***
*** starting iteration: 2; err: [Inf, 0.25016524709761145, 0.21148985150363298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25016524709761145, 0.21148985150363298, 0.19549670505104585] ***
*** starting iteration: 3; err: [Inf, 0.25016524709761145, 0.21148985150363298, 0.19549670505104585] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25016524709761145, 0.21148985150363298, 0.19549670505104585, 0.19023516247421504] ***
*** finished computation of 7 references, err: [Inf, 0.25016524709761145, 0.21148985150363298, 0.19549670505104585, 0.19023516247421504] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [70, 1, 0]]
** centroid: 1, normalized-entropy: 0.10679203237584184, [(1, 70), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [6, 68, 0]]
** centroid: 4, normalized-entropy: 0.40597703847557104, [(1, 6), (2, 68)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 28, 0]]
** centroid: 5, normalized-entropy: 0.9886994082884974, [(1, 36), (2, 28)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 85, 11]]
** centroid: 6, normalized-entropy: 0.5135877363803757, [(2, 85), (3, 11)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 10, 0]]
** centroid: 7, normalized-entropy: 0.5916727785823274, [(1, 60), (2, 10)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.31925730473175645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31925730473175645, 0.23160692857578397] ***
*** starting iteration: 2; err: [Inf, 0.31925730473175645, 0.23160692857578397] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31925730473175645, 0.23160692857578397, 0.2026282739005983] ***
*** starting iteration: 3; err: [Inf, 0.31925730473175645, 0.23160692857578397, 0.2026282739005983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31925730473175645, 0.23160692857578397, 0.2026282739005983, 0.19331991437636314] ***
*** finished computation of 7 references, err: [Inf, 0.31925730473175645, 0.23160692857578397, 0.2026282739005983, 0.19331991437636314] ***
*** center 1: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [109, 7, 0]]
** centroid: 2, normalized-entropy: 0.3288122377561222, [(1, 109), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 73, 14]]
** centroid: 3, normalized-entropy: 0.6365048555378351, [(2, 73), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [43, 5, 0]]
** centroid: 4, normalized-entropy: 0.4820661480830933, [(1, 43), (2, 5)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [23, 42, 0]]
** centroid: 5, normalized-entropy: 0.937456170782005, [(1, 23), (2, 42)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 58, 1]]
** centroid: 6, normalized-entropy: 0.12394986771100755, [(2, 58), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 3, 0]]
** centroid: 7, normalized-entropy: 0.40597703847557104, [(1, 34), (2, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27388524458929897] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27388524458929897, 0.21444410587940366] ***
*** starting iteration: 2; err: [Inf, 0.27388524458929897, 0.21444410587940366] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27388524458929897, 0.21444410587940366, 0.195488104457967] ***
*** starting iteration: 3; err: [Inf, 0.27388524458929897, 0.21444410587940366, 0.195488104457967] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27388524458929897, 0.21444410587940366, 0.195488104457967, 0.1853522021365352] ***
*** finished computation of 7 references, err: [Inf, 0.27388524458929897, 0.21444410587940366, 0.195488104457967, 0.1853522021365352] ***
*** center 1: selecting labels [1] (freq >= 1) [from [97, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [71, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [38, 30, 0]]
** centroid: 4, normalized-entropy: 0.9899927915575186, [(1, 38), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [45, 31, 0]]
** centroid: 5, normalized-entropy: 0.9753817903274211, [(1, 45), (2, 31)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 59, 12]]
** centroid: 6, normalized-entropy: 0.6554444445609846, [(2, 59), (3, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.30352181959711017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30352181959711017, 0.21812011463940142] ***
*** starting iteration: 2; err: [Inf, 0.30352181959711017, 0.21812011463940142] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30352181959711017, 0.21812011463940142, 0.19522146517876535] ***
*** starting iteration: 3; err: [Inf, 0.30352181959711017, 0.21812011463940142, 0.19522146517876535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30352181959711017, 0.21812011463940142, 0.19522146517876535, 0.187227080386132] ***
*** finished computation of 7 references, err: [Inf, 0.30352181959711017, 0.21812011463940142, 0.19522146517876535, 0.187227080386132] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [9, 42, 0]]
** centroid: 1, normalized-entropy: 0.6722948170756378, [(1, 9), (2, 42)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 63, 16]]
** centroid: 2, normalized-entropy: 0.7269625813353975, [(2, 63), (3, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [45, 16, 0]]
** centroid: 3, normalized-entropy: 0.8301899714180444, [(1, 45), (2, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [70, 15, 0]]
** centroid: 5, normalized-entropy: 0.6722948170756378, [(1, 70), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [19, 40, 0]]
** centroid: 6, normalized-entropy: 0.9065795484987461, [(1, 19), (2, 40)]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2602744943704456] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602744943704456, 0.21297704783733934] ***
*** starting iteration: 2; err: [Inf, 0.2602744943704456, 0.21297704783733934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602744943704456, 0.21297704783733934, 0.19915616685152054] ***
*** starting iteration: 3; err: [Inf, 0.2602744943704456, 0.21297704783733934, 0.19915616685152054] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2602744943704456, 0.21297704783733934, 0.19915616685152054, 0.19451449156925082] ***
*** finished computation of 7 references, err: [Inf, 0.2602744943704456, 0.21297704783733934, 0.19915616685152054, 0.19451449156925082] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 32, 0]]
** centroid: 1, normalized-entropy: 0.9389320105807949, [(1, 58), (2, 32)]
*** center 2: selecting labels [1] (freq >= 1) [from [88, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [32, 40, 0]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(1, 32), (2, 40)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [36, 25, 0]]
** centroid: 4, normalized-entropy: 0.9764143081154868, [(1, 36), (2, 25)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [37, 11, 0]]
** centroid: 5, normalized-entropy: 0.7765557854444601, [(1, 37), (2, 11)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 74, 17]]
** centroid: 6, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.48287383147422225] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48287383147422225, 0.3019054166525602] ***
*** starting iteration: 2; err: [Inf, 0.48287383147422225, 0.3019054166525602] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48287383147422225, 0.3019054166525602, 0.24899381135590373] ***
*** starting iteration: 3; err: [Inf, 0.48287383147422225, 0.3019054166525602, 0.24899381135590373] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.48287383147422225, 0.3019054166525602, 0.24899381135590373, 0.21470245043933392] ***
*** finished computation of 7 references, err: [Inf, 0.48287383147422225, 0.3019054166525602, 0.24899381135590373, 0.21470245043933392] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 117, 12]]
** centroid: 1, normalized-entropy: 0.446481346896803, [(2, 117), (3, 12)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [38, 25, 0]]
** centroid: 2, normalized-entropy: 0.9690632527820694, [(1, 38), (2, 25)]
*** center 3: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [24, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [113, 26, 0]]
** centroid: 5, normalized-entropy: 0.6952600984459203, [(1, 113), (2, 26)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [51, 12, 0]]
** centroid: 6, normalized-entropy: 0.7024665512903904, [(1, 51), (2, 12)]
*** center 7: selecting labels [1] (freq >= 1) [from [9, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24016492261365055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24016492261365055, 0.20602486797608435] ***
*** starting iteration: 2; err: [Inf, 0.24016492261365055, 0.20602486797608435] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24016492261365055, 0.20602486797608435, 0.20116060020029544] ***
*** starting iteration: 3; err: [Inf, 0.24016492261365055, 0.20602486797608435, 0.20116060020029544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24016492261365055, 0.20602486797608435, 0.20116060020029544, 0.1980011248458177] ***
*** finished computation of 7 references, err: [Inf, 0.24016492261365055, 0.20602486797608435, 0.20116060020029544, 0.1980011248458177] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 28, 0]]
** centroid: 1, normalized-entropy: 0.9063701886077911, [(1, 59), (2, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [24, 30, 0]]
** centroid: 3, normalized-entropy: 0.9910760598382222, [(1, 24), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 2, 0]]
** centroid: 4, normalized-entropy: 0.2222848306856879, [(1, 54), (2, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [41, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 98, 17]]
** centroid: 6, normalized-entropy: 0.6043732420352782, [(2, 98), (3, 17)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [64, 25, 0]]
** centroid: 7, normalized-entropy: 0.8566727035015875, [(1, 64), (2, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2724653314650059] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2724653314650059, 0.21772833423130214] ***
*** starting iteration: 2; err: [Inf, 0.2724653314650059, 0.21772833423130214] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2724653314650059, 0.21772833423130214, 0.20176426662132144] ***
*** starting iteration: 3; err: [Inf, 0.2724653314650059, 0.21772833423130214, 0.20176426662132144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2724653314650059, 0.21772833423130214, 0.20176426662132144, 0.1951724290214479] ***
*** finished computation of 7 references, err: [Inf, 0.2724653314650059, 0.21772833423130214, 0.20176426662132144, 0.1951724290214479] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 91, 21]]
** centroid: 1, normalized-entropy: 0.6962122601251459, [(2, 91), (3, 21)]
*** center 2: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [50, 36, 0]]
** centroid: 3, normalized-entropy: 0.9807983646944296, [(1, 50), (2, 36)]
*** center 4: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [44, 16, 0]]
** centroid: 5, normalized-entropy: 0.8366407419411671, [(1, 44), (2, 16)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [40, 39, 0]]
** centroid: 7, normalized-entropy: 0.9998844148717589, [(1, 40), (2, 39)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2927007225379348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2927007225379348, 0.1993479505535215] ***
*** starting iteration: 2; err: [Inf, 0.2927007225379348, 0.1993479505535215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2927007225379348, 0.1993479505535215, 0.188899189542979] ***
*** starting iteration: 3; err: [Inf, 0.2927007225379348, 0.1993479505535215, 0.188899189542979] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2927007225379348, 0.1993479505535215, 0.188899189542979, 0.18651016737148166] ***
*** finished computation of 7 references, err: [Inf, 0.2927007225379348, 0.1993479505535215, 0.188899189542979, 0.18651016737148166] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 24, 0]]
** centroid: 1, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [76, 6, 0]]
** centroid: 2, normalized-entropy: 0.3776463213737003, [(1, 76), (2, 6)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 58, 11]]
** centroid: 3, normalized-entropy: 0.6329208984823799, [(2, 58), (3, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 8, 0]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(1, 60), (2, 8)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 80, 1]]
** centroid: 5, normalized-entropy: 0.09597040299587173, [(2, 80), (3, 1)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [51, 9, 0]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(1, 51), (2, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [80, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.307944605069235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307944605069235, 0.20944521132856608] ***
*** starting iteration: 2; err: [Inf, 0.307944605069235, 0.20944521132856608] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307944605069235, 0.20944521132856608, 0.1964672053111717] ***
*** starting iteration: 3; err: [Inf, 0.307944605069235, 0.20944521132856608, 0.1964672053111717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.307944605069235, 0.20944521132856608, 0.1964672053111717, 0.19100705714337526] ***
*** finished computation of 7 references, err: [Inf, 0.307944605069235, 0.20944521132856608, 0.1964672053111717, 0.19100705714337526] ***
*** center 1: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [25, 48, 0]]
** centroid: 2, normalized-entropy: 0.9271587399898307, [(1, 25), (2, 48)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 13, 0]]
** centroid: 3, normalized-entropy: 0.7039260680195971, [(1, 55), (2, 13)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [59, 1, 0]]
** centroid: 4, normalized-entropy: 0.12229159706937456, [(1, 59), (2, 1)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 99, 10]]
** centroid: 5, normalized-entropy: 0.4422615143479816, [(2, 99), (3, 10)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [51, 27, 0]]
** centroid: 6, normalized-entropy: 0.9305861291319927, [(1, 51), (2, 27)]
*** center 7: selecting labels [1] (freq >= 1) [from [46, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2781923706382513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781923706382513, 0.20977417371608317] ***
*** starting iteration: 2; err: [Inf, 0.2781923706382513, 0.20977417371608317] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781923706382513, 0.20977417371608317, 0.2009388401582837] ***
*** starting iteration: 3; err: [Inf, 0.2781923706382513, 0.20977417371608317, 0.2009388401582837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781923706382513, 0.20977417371608317, 0.2009388401582837, 0.1971600404214114] ***
*** finished computation of 7 references, err: [Inf, 0.2781923706382513, 0.20977417371608317, 0.2009388401582837, 0.1971600404214114] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 14, 0]]
** centroid: 1, normalized-entropy: 0.7706290693639406, [(1, 48), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [33, 28, 0]]
** centroid: 2, normalized-entropy: 0.995148095654003, [(1, 33), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [35, 43, 0]]
** centroid: 3, normalized-entropy: 0.9923985003332222, [(1, 35), (2, 43)]
*** center 4: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 82, 14]]
** centroid: 5, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 6: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [71, 14, 0]]
** centroid: 7, normalized-entropy: 0.6454495903301855, [(1, 71), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27266545135714115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27266545135714115, 0.211429457757622] ***
*** starting iteration: 2; err: [Inf, 0.27266545135714115, 0.211429457757622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27266545135714115, 0.211429457757622, 0.20216941649466752] ***
*** starting iteration: 3; err: [Inf, 0.27266545135714115, 0.211429457757622, 0.20216941649466752] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27266545135714115, 0.211429457757622, 0.20216941649466752, 0.19104126017075032] ***
*** finished computation of 7 references, err: [Inf, 0.27266545135714115, 0.211429457757622, 0.20216941649466752, 0.19104126017075032] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 50, 15]]
** centroid: 1, normalized-entropy: 0.7793498372920851, [(2, 50), (3, 15)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [19, 38, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 19), (2, 38)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [3, 80, 0]]
** centroid: 3, normalized-entropy: 0.2243269603450881, [(1, 3), (2, 80)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [60, 24, 0]]
** centroid: 4, normalized-entropy: 0.8631205685666311, [(1, 60), (2, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [38, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25646210940368475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25646210940368475, 0.20479079999215902] ***
*** starting iteration: 2; err: [Inf, 0.25646210940368475, 0.20479079999215902] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25646210940368475, 0.20479079999215902, 0.1972111730761826] ***
*** starting iteration: 3; err: [Inf, 0.25646210940368475, 0.20479079999215902, 0.1972111730761826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25646210940368475, 0.20479079999215902, 0.1972111730761826, 0.19409220832400023] ***
*** finished computation of 7 references, err: [Inf, 0.25646210940368475, 0.20479079999215902, 0.1972111730761826, 0.19409220832400023] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [11, 55, 0]]
** centroid: 1, normalized-entropy: 0.6500224216483541, [(1, 11), (2, 55)]
*** center 2: selecting labels [1] (freq >= 1) [from [111, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 31, 12]]
** centroid: 4, normalized-entropy: 0.8541802051521676, [(2, 31), (3, 12)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [83, 18, 0]]
** centroid: 5, normalized-entropy: 0.6761627418829197, [(1, 83), (2, 18)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [25, 34, 0]]
** centroid: 7, normalized-entropy: 0.9831491282282879, [(1, 25), (2, 34)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.36366326132183896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36366326132183896, 0.22153546925261616] ***
*** starting iteration: 2; err: [Inf, 0.36366326132183896, 0.22153546925261616] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36366326132183896, 0.22153546925261616, 0.1937319000251591] ***
*** starting iteration: 3; err: [Inf, 0.36366326132183896, 0.22153546925261616, 0.1937319000251591] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36366326132183896, 0.22153546925261616, 0.1937319000251591, 0.18940445014555007] ***
*** finished computation of 7 references, err: [Inf, 0.36366326132183896, 0.22153546925261616, 0.1937319000251591, 0.18940445014555007] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 28, 0]]
** centroid: 1, normalized-entropy: 0.9640787648082293, [(1, 44), (2, 28)]
*** center 2: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 82, 9]]
** centroid: 3, normalized-entropy: 0.4655024490815131, [(2, 82), (3, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [16, 59, 0]]
** centroid: 4, normalized-entropy: 0.7478061583312324, [(1, 16), (2, 59)]
*** center 5: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [34, 19, 0]]
** centroid: 7, normalized-entropy: 0.9414231081869789, [(1, 34), (2, 19)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24168444375507533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24168444375507533, 0.20336782245524226] ***
*** starting iteration: 2; err: [Inf, 0.24168444375507533, 0.20336782245524226] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24168444375507533, 0.20336782245524226, 0.19347067212779076] ***
*** starting iteration: 3; err: [Inf, 0.24168444375507533, 0.20336782245524226, 0.19347067212779076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24168444375507533, 0.20336782245524226, 0.19347067212779076, 0.1876932025719434] ***
*** finished computation of 7 references, err: [Inf, 0.24168444375507533, 0.20336782245524226, 0.19347067212779076, 0.1876932025719434] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 37, 11]]
** centroid: 1, normalized-entropy: 0.7765557854444601, [(2, 37), (3, 11)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [65, 18, 0]]
** centroid: 2, normalized-entropy: 0.7544062039636575, [(1, 65), (2, 18)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 52, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [26, 39, 0]]
** centroid: 4, normalized-entropy: 0.9709505944546688, [(1, 26), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [22, 48, 0]]
** centroid: 5, normalized-entropy: 0.8980587934501658, [(1, 22), (2, 48)]
*** center 6: selecting labels [1] (freq >= 1) [from [101, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2685755047760904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2685755047760904, 0.22139149028435348] ***
*** starting iteration: 2; err: [Inf, 0.2685755047760904, 0.22139149028435348] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2685755047760904, 0.22139149028435348, 0.20663918560557068] ***
*** starting iteration: 3; err: [Inf, 0.2685755047760904, 0.22139149028435348, 0.20663918560557068] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2685755047760904, 0.22139149028435348, 0.20663918560557068, 0.20074042451754212] ***
*** finished computation of 7 references, err: [Inf, 0.2685755047760904, 0.22139149028435348, 0.20663918560557068, 0.20074042451754212] ***
*** center 1: selecting labels [1] (freq >= 1) [from [34, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [69, 18, 0]]
** centroid: 2, normalized-entropy: 0.7355085815538399, [(1, 69), (2, 18)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 65, 16]]
** centroid: 3, normalized-entropy: 0.7169622516889513, [(2, 65), (3, 16)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 86, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 5, 0]]
** centroid: 5, normalized-entropy: 0.340373285759646, [(1, 74), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [73, 3, 0]]
** centroid: 6, normalized-entropy: 0.23987382528036535, [(1, 73), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.256541621199809] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.256541621199809, 0.21387592459190638] ***
*** starting iteration: 2; err: [Inf, 0.256541621199809, 0.21387592459190638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.256541621199809, 0.21387592459190638, 0.20349490717984736] ***
*** starting iteration: 3; err: [Inf, 0.256541621199809, 0.21387592459190638, 0.20349490717984736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.256541621199809, 0.21387592459190638, 0.20349490717984736, 0.19736385562829672] ***
*** finished computation of 7 references, err: [Inf, 0.256541621199809, 0.21387592459190638, 0.20349490717984736, 0.19736385562829672] ***
*** center 1: selecting labels [1] (freq >= 1) [from [107, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 48, 9]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(2, 48), (3, 9)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [87, 11, 0]]
** centroid: 3, normalized-entropy: 0.5066503344840895, [(1, 87), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [32, 17, 0]]
** centroid: 4, normalized-entropy: 0.9313043685793762, [(1, 32), (2, 17)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 39, 6]]
** centroid: 5, normalized-entropy: 0.5665095065529052, [(2, 39), (3, 6)]
*** center 6: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 63, 0]]
** centroid: 7, normalized-entropy: 0.7642045065086204, [(1, 18), (2, 63)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.321035520773381] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.321035520773381, 0.2695290573053062] ***
*** starting iteration: 2; err: [Inf, 0.321035520773381, 0.2695290573053062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.321035520773381, 0.2695290573053062, 0.23050912097282708] ***
*** starting iteration: 3; err: [Inf, 0.321035520773381, 0.2695290573053062, 0.23050912097282708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.321035520773381, 0.2695290573053062, 0.23050912097282708, 0.20796645757672377] ***
*** finished computation of 7 references, err: [Inf, 0.321035520773381, 0.2695290573053062, 0.23050912097282708, 0.20796645757672377] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [23, 62, 0]]
** centroid: 1, normalized-entropy: 0.8423074510400833, [(1, 23), (2, 62)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [3, 106, 19]]
** centroid: 2, normalized-entropy: 0.47997449424278477, [(1, 3), (2, 106), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 22, 0]]
** centroid: 3, normalized-entropy: 0.9081783472997053, [(1, 46), (2, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [36, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [53, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25398814624920485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25398814624920485, 0.23657240185700357] ***
*** starting iteration: 2; err: [Inf, 0.25398814624920485, 0.23657240185700357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25398814624920485, 0.23657240185700357, 0.20390579911321402] ***
*** starting iteration: 3; err: [Inf, 0.25398814624920485, 0.23657240185700357, 0.20390579911321402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25398814624920485, 0.23657240185700357, 0.20390579911321402, 0.1980400933586061] ***
*** finished computation of 7 references, err: [Inf, 0.25398814624920485, 0.23657240185700357, 0.20390579911321402, 0.1980400933586061] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 17, 0]]
** centroid: 1, normalized-entropy: 0.8536576732793314, [(1, 44), (2, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 98, 10]]
** centroid: 3, normalized-entropy: 0.44506485705083854, [(2, 98), (3, 10)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [71, 33, 0]]
** centroid: 4, normalized-entropy: 0.9014296082981941, [(1, 71), (2, 33)]
*** center 5: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 34, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [33, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23449102723877877] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23449102723877877, 0.21095650708116592] ***
*** starting iteration: 2; err: [Inf, 0.23449102723877877, 0.21095650708116592] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23449102723877877, 0.21095650708116592, 0.20212571957986802] ***
*** starting iteration: 3; err: [Inf, 0.23449102723877877, 0.21095650708116592, 0.20212571957986802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23449102723877877, 0.21095650708116592, 0.20212571957986802, 0.19483940884843468] ***
*** finished computation of 7 references, err: [Inf, 0.23449102723877877, 0.21095650708116592, 0.20212571957986802, 0.19483940884843468] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 107, 18]]
** centroid: 1, normalized-entropy: 0.5946193440950124, [(2, 107), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [93, 13, 0]]
** centroid: 2, normalized-entropy: 0.5369064378756415, [(1, 93), (2, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 30, 0]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(1, 40), (2, 30)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 22, 0]]
** centroid: 6, normalized-entropy: 0.9528588097297789, [(1, 37), (2, 22)]
*** center 7: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.28596264523640275] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28596264523640275, 0.21935311333462595] ***
*** starting iteration: 2; err: [Inf, 0.28596264523640275, 0.21935311333462595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28596264523640275, 0.21935311333462595, 0.20301162215694785] ***
*** starting iteration: 3; err: [Inf, 0.28596264523640275, 0.21935311333462595, 0.20301162215694785] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28596264523640275, 0.21935311333462595, 0.20301162215694785, 0.19966714728623627] ***
*** finished computation of 7 references, err: [Inf, 0.28596264523640275, 0.21935311333462595, 0.20301162215694785, 0.19966714728623627] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [15, 36, 0]]
** centroid: 1, normalized-entropy: 0.8739810481273581, [(1, 15), (2, 36)]
*** center 2: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 67, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [52, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 4, 0]]
** centroid: 5, normalized-entropy: 0.5328350630342235, [(1, 29), (2, 4)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 53, 14]]
** centroid: 6, normalized-entropy: 0.7394809367166378, [(2, 53), (3, 14)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [84, 29, 0]]
** centroid: 7, normalized-entropy: 0.8216292954053165, [(1, 84), (2, 29)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26808576405234635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26808576405234635, 0.18978169138543308] ***
*** starting iteration: 2; err: [Inf, 0.26808576405234635, 0.18978169138543308] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26808576405234635, 0.18978169138543308, 0.1825349195310846] ***
*** starting iteration: 3; err: [Inf, 0.26808576405234635, 0.18978169138543308, 0.1825349195310846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26808576405234635, 0.18978169138543308, 0.1825349195310846, 0.18115611454285682] ***
*** finished computation of 7 references, err: [Inf, 0.26808576405234635, 0.18978169138543308, 0.1825349195310846, 0.18115611454285682] ***
*** center 1: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [7, 42, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 7), (2, 42)]
*** center 3: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [42, 39, 0]]
** centroid: 5, normalized-entropy: 0.9990102708804813, [(1, 42), (2, 39)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [32, 42, 0]]
** centroid: 6, normalized-entropy: 0.9867867202680318, [(1, 32), (2, 42)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 66, 15]]
** centroid: 7, normalized-entropy: 0.6912898694057888, [(2, 66), (3, 15)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26901066182367506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26901066182367506, 0.2104950949382037] ***
*** starting iteration: 2; err: [Inf, 0.26901066182367506, 0.2104950949382037] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26901066182367506, 0.2104950949382037, 0.20343014333583415] ***
*** starting iteration: 3; err: [Inf, 0.26901066182367506, 0.2104950949382037, 0.20343014333583415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26901066182367506, 0.2104950949382037, 0.20343014333583415, 0.20120637690089643] ***
*** finished computation of 7 references, err: [Inf, 0.26901066182367506, 0.2104950949382037, 0.20343014333583415, 0.20120637690089643] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 92, 15]]
** centroid: 1, normalized-entropy: 0.5847281182574745, [(2, 92), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [48, 32, 0]]
** centroid: 3, normalized-entropy: 0.9709505944546688, [(1, 48), (2, 32)]
*** center 4: selecting labels [1] (freq >= 1) [from [35, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [83, 10, 0]]
** centroid: 5, normalized-entropy: 0.49241092131589825, [(1, 83), (2, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [10, 55, 0]]
** centroid: 7, normalized-entropy: 0.6193821946787638, [(1, 10), (2, 55)]
finished with 9 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 369,3 => 29,1 => 602), Dict(2 => 374,3 => 33,1 => 593))
[ Info: ===== scores for single classifier: {"micro_f1":0.944,"precision":0.944,"recall":0.944,"macro_recall":0.9168708210965923,"macro_f1":0.8577887816318168,"accuracy":0.944,"class_f1":{"2":0.9224376731301939,"3":0.6744186046511628,"1":0.9765100671140939},"class_precision":{"2":0.9568965517241379,"3":0.5471698113207547,"1":0.9716193656093489},"class_recall":{"2":0.8903743315508021,"3":0.8787878787878788,"1":0.9814502529510961}}
[ Info: ===== scores for 1: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9625903915656916,"macro_f1":0.9540879161553968,"accuracy":0.975,"class_f1":{"2":0.9665327978580991,"3":0.9117647058823529,"1":0.9839662447257385},"class_precision":{"2":0.967828418230563,"3":0.8857142857142857,"1":0.9847972972972973},"class_recall":{"2":0.9652406417112299,"3":0.9393939393939394,"1":0.9831365935919055}}
[ Info: ===== scores for 5: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9789943878823951,"macro_f1":0.95751125782872,"accuracy":0.972,"class_f1":{"2":0.9623655913978495,"3":0.9295774647887324,"1":0.980590717299578},"class_precision":{"2":0.9675675675675676,"3":0.868421052631579,"1":0.981418918918919},"class_recall":{"2":0.9572192513368984,"3":1.0,"1":0.9797639123102867}}
[ Info: ===== scores for 7: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9786652358321836,"macro_f1":0.9495507403323834,"accuracy":0.972,"class_f1":{"2":0.9622641509433963,"3":0.9041095890410958,"1":0.9822784810126582},"class_precision":{"2":0.970108695652174,"3":0.825,"1":0.9831081081081081},"class_recall":{"2":0.9545454545454546,"3":1.0,"1":0.9814502529510961}}
[ Info: ===== scores for 9: {"micro_f1":0.973,"precision":0.973,"recall":0.973,"macro_recall":0.9798856534795429,"macro_f1":0.9503158348431917,"accuracy":0.973,"class_f1":{"2":0.9637583892617448,"3":0.9041095890410958,"1":0.9830795262267343},"class_precision":{"2":0.967654986522911,"3":0.825,"1":0.9864176570458404},"class_recall":{"2":0.9598930481283422,"3":1.0,"1":0.9797639123102867}}
[ Info: ===== scores for 11: {"micro_f1":0.969,"precision":0.969,"recall":0.969,"macro_recall":0.9766497431411626,"macro_f1":0.9553107636107895,"accuracy":0.969,"class_f1":{"2":0.9582772543741588,"3":0.9295774647887324,"1":0.9780775716694773},"class_precision":{"2":0.964769647696477,"3":0.868421052631579,"1":0.9780775716694773},"class_recall":{"2":0.9518716577540107,"3":1.0,"1":0.9780775716694773}}
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.966, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.973, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.975,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9625903915656916,"macro_f1":0.9540879161553968,"accuracy":0.975,"class_f1":{"2":0.9665327978580991,"3":0.9117647058823529,"1":0.9839662447257385},"class_precision":{"2":0.967828418230563,"3":0.8857142857142857,"1":0.9847972972972973},"class_recall":{"2":0.9652406417112299,"3":0.9393939393939394,"1":0.9831365935919055}}
Test Summary: | Pass  Total
AKNC          |    8      8
[538, 1, 2, 5, 1, 1, 3, 7, 3, 10, 2, 3, 3, 7, 2, 12, 3, 4, 9, 2, 32, 3, 6, 2, 20, 23, 4, 2, 23, 3, 12, 7, 52, 14, 1, 30, 5, 10, 3, 16, 14, 29, 5, 11, 3, 28, 2, 13, 17, 38, 27, 6, 6, 1, 7, 7, 21, 103, 13, 2, 2, 5, 2, 32, 18, 17, 3, 6, 9, 18, 8, 8, 1, 11, 15, 9, 12, 62, 23, 68, 8, 65, 4, 265, 3, 35, 87, 66, 1, 7, 4, 48, 13, 28, 14, 61, 4, 30, 59, 28, 5, 8, 37, 10, 24, 18, 10, 111, 23, 2, 11, 13, 10, 38, 5, 19, 23, 11, 96, 5, 1135, 27, 33, 7, 28, 112, 19, 7, 41, 11, 9, 10, 84, 40, 2, 4, 153, 78, 11, 1, 78, 13, 18, 74, 24, 14, 22, 15, 23, 22, 3, 33, 22, 3, 23, 21, 5, 11, 32, 6, 24, 24, 73, 14, 29, 11, 26, 10, 20, 45, 69, 30, 43, 21, 23, 32, 10, 98, 8, 125, 164, 10, 2, 144, 5, 16, 10, 40, 88, 53, 2, 26, 3, 29, 25, 31, 19, 16, 14, 19, 29, 5, 69, 4, 5, 79, 24, 3, 29, 39, 22, 106, 190, 28, 54, 55, 24, 183, 28, 6, 8, 18, 26, 25, 5, 7, 37, 118, 58, 7, 29, 78, 10, 16, 64, 9, 5, 22, 72, 4, 22, 10, 93, 3, 31, 43, 3, 40, 48, 29, 24, 17, 5, 3, 21, 24, 60, 22, 11, 41, 104, 70, 21, 7, 7, 9, 5, 49, 70, 12, 3, 105, 2, 109, 29, 21, 33, 13, 3, 3, 5, 8, 17, 19, 6, 127, 13, 61, 6, 14, 5, 8, 45, 8, 103, 18, 10, 77, 10, 13]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.5859999999999999, speedup = 0.2976916820224878, eval_ratio = 0.069819)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.44009176587301563,"recall":0.4218749999999998,"f1":null,"seconds":0.00019401498138904572,"exhaustive_search_seconds":0.00039103999733924866,"evaluations":541.1015625,"distances_sum":1690.724071434267}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5685763888888885,"recall":0.5685763888888885,"f1":0.5685763888888885,"seconds":0.00045076943933963776,"exhaustive_search_seconds":0.00039103999733924866,"evaluations":676.96875,"distances_sum":1656.1309467024098}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.694444444444444,"recall":0.694444444444444,"f1":0.694444444444444,"seconds":0.0003888271749019623,"exhaustive_search_seconds":0.00039103999733924866,"evaluations":847.8828125,"distances_sum":1600.8674519070196}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7725694444444439,"recall":0.7725694444444439,"f1":0.7725694444444439,"seconds":0.00048386678099632263,"exhaustive_search_seconds":0.00039103999733924866,"evaluations":969.859375,"distances_sum":1577.7180353395281}
KCenters.DeloneInvIndex> reached performance {"precision":0.8246527777777769,"recall":0.8246527777777769,"f1":0.8246527777777769,"seconds":0.0005933456122875214,"exhaustive_search_seconds":0.00039103999733924866,"evaluations":1087.5703125,"distances_sum":1561.8239427939075}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.713, speedup = 0.6329039511173664, eval_ratio = 0.089048)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
