Julia Version 1.6.0-DEV.144
Commit 8c8f7a66a2 (2020-06-02 16:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_h8tueI/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_h8tueI/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.02266508988614635 0.050812362653921785; -0.02266508988614635 0.0 0.1354160214170684; -0.050812362653921785 -0.1354160214170684 0.0])
dAA = so3([0.0 -0.03995025217058003 0.028871816963869035; 0.03995025217058003 0.0 -0.07886512390056594; -0.028871816963869035 0.07886512390056594 0.0])
dAA = so3([0.0 -0.05526695474681723 -0.09114574163840358; 0.05526695474681723 0.0 0.04002865992779178; 0.09114574163840358 -0.04002865992779178 0.0])
dAA = Quaternion(0.9977525803885309, [-0.03512984422763622, 0.05588326336894458, 0.011521425597882329])
dAA = SO3([0.98183579750552 0.18492530690239575 0.042439340284160576; -0.18684739172807893 0.9812664857517869 0.04694822834519258; -0.03296238676300399 -0.054025131257529196 0.9979953738627715])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9924416276170526 -0.09189464615484519 0.08133258744741462; 0.10606177388326002 0.975685671546918 -0.19180294695018643; -0.061729376260835266 0.19897950735217834 0.9780575850942176]), [-1.354160214170684, 0.5081236265392178, -0.22665089886146347])
xj = SE3(SO3([0.9596320942171692 -0.07123557128296903 0.27208773793090907; 0.022927918468913077 0.9839879852239557 0.17675394052066642; -0.28032223298028447 -0.1633803486313132 0.9458997343154599]), [-0.40028659927791777, -0.9114574163840358, 0.5526695474681723])
Dx = SE3(SO3([0.9721147297966293 0.0437517318986562 0.23038823335468844; -0.12159299002668497 0.9340998044923347 0.3356675438938838; -0.2005195673464232 -0.3543209578944633 0.9133720829475538]), [0.747993634262406, -1.3176519630167118, 1.1120811104160577])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
