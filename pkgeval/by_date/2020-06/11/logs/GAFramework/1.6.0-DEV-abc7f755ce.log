Julia Version 1.6.0-DEV.212
Commit abc7f755ce (2020-06-11 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_LkpeMv/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_LkpeMv/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721234233008835
curgen: 20 fitness: 0.21721234233008835
curgen: 30 fitness: 0.21722124045536068
curgen: 40 fitness: 0.21722124045536068
curgen: 50 fitness: 0.21723072144189787
CoordinateCreature{Array{Float64,1}}([-0.222804570601275], -0.21723072144189787) -0.222804570601275 -0.21723072144189787
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2572081514755493
curgen: 100 fitness: 3.257420924250131
curgen: 150 fitness: 3.257824478847225
curgen: 200 fitness: 3.2581953044160716
curgen: 250 fitness: 3.258231787078859
curgen: 300 fitness: 3.2582537329648096
curgen: 350 fitness: 3.258354230533919
curgen: 400 fitness: 3.2583876366321314
curgen: 450 fitness: 3.258463557104453
curgen: 500 fitness: 3.258463557104453
CoordinateCreature{Array{Float64,1}}([-0.22252233794994838, 0.22222573392153008, -0.22264251960481965, -0.22266329168190033, 0.22251215187729542, 0.22246365828045858, 0.2230227610884715, -0.2221944101014468, 0.22207263454853654, -0.22257109685277343, 0.22247648891676375, -0.2228511336811313, 0.22248198990699236, 0.2225199906849155, 0.22287751331625422], -3.258463557104453) [-0.22252233794994838, 0.22222573392153008, -0.22264251960481965, -0.22266329168190033, 0.22251215187729542, 0.22246365828045858, 0.2230227610884715, -0.2221944101014468, 0.22207263454853654, -0.22257109685277343, 0.22247648891676375, -0.2228511336811313, 0.22248198990699236, 0.2225199906849155, 0.22287751331625422] -3.258463557104453
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0016791056123111048
curgen: 100 fitness: -0.001173733518356812
curgen: 150 fitness: -0.0010843878170874177
curgen: 200 fitness: -0.0010745616582994444
curgen: 250 fitness: -0.0009880984904953038
curgen: 300 fitness: -0.0009880984904953038
curgen: 350 fitness: -0.0007585764059854228
curgen: 400 fitness: -0.0007585764059854228
curgen: 450 fitness: -0.0007580303795577947
curgen: 500 fitness: -0.0007580303795577947
CoordinateCreature{Array{Float64,1}}([-0.000363867927508886, 0.0005734189957135455, 0.00016004803362587496, -2.991908999650944e-5, 0.0003732882370726352, -0.00026406566437267825, 0.00017102863177286516, 7.381144647153988e-5, 0.0008694912502399156, 0.0005724138143096812, 8.377239902532003e-5, 0.0002460467534478618, 0.0003056868080106882, 0.0011144428387909542, -0.000776356149036033], 0.0007580303795577947) [-0.000363867927508886, 0.0005734189957135455, 0.00016004803362587496, -2.991908999650944e-5, 0.0003732882370726352, -0.00026406566437267825, 0.00017102863177286516, 7.381144647153988e-5, 0.0008694912502399156, 0.0005724138143096812, 8.377239902532003e-5, 0.0002460467534478618, 0.0003056868080106882, 0.0011144428387909542, -0.000776356149036033] 0.0007580303795577947
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
