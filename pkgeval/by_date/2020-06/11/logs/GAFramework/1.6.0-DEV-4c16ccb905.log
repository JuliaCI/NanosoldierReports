Julia Version 1.6.0-DEV.207
Commit 4c16ccb905 (2020-06-10 16:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_YmeaWl/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_YmeaWl/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722964682628593
curgen: 20 fitness: 0.21722964682628593
curgen: 30 fitness: 0.21722964682628593
curgen: 40 fitness: 0.21723347200249454
curgen: 50 fitness: 0.21723347200249454
CoordinateCreature{Array{Float64,1}}([-0.22248877370251688], -0.21723347200249454) -0.22248877370251688 -0.21723347200249454
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2571431271482427
curgen: 100 fitness: 3.2581950092999756
curgen: 150 fitness: 3.2582156359705854
curgen: 200 fitness: 3.2582254567630726
curgen: 250 fitness: 3.2583273392422023
curgen: 300 fitness: 3.2583287786626074
curgen: 350 fitness: 3.258335735004351
curgen: 400 fitness: 3.2583917270418294
curgen: 450 fitness: 3.2583996213891586
curgen: 500 fitness: 3.2583996213891586
CoordinateCreature{Array{Float64,1}}([-0.22236175969773075, -0.2226999713317447, 0.2226716699118548, -0.22226855422565447, 0.22208669340027326, 0.2227137004273241, -0.22357525666911035, 0.2223716402366761, 0.22222945150794074, -0.22266824471187663, 0.22310419619389546, 0.22272971470345046, 0.22263299522955465, 0.22306329551948337, 0.2221413092365], -3.2583996213891586) [-0.22236175969773075, -0.2226999713317447, 0.2226716699118548, -0.22226855422565447, 0.22208669340027326, 0.2227137004273241, -0.22357525666911035, 0.2223716402366761, 0.22222945150794074, -0.22266824471187663, 0.22310419619389546, 0.22272971470345046, 0.22263299522955465, 0.22306329551948337, 0.2221413092365] -3.2583996213891586
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002311472891790345
curgen: 100 fitness: -0.0014542304680844609
curgen: 150 fitness: -0.0012528505482691799
curgen: 200 fitness: -0.00115426889851733
curgen: 250 fitness: -0.00115426889851733
curgen: 300 fitness: -0.0011532505109244084
curgen: 350 fitness: -0.0008743539751492335
curgen: 400 fitness: -0.0008743539751492335
curgen: 450 fitness: -0.0008743539751492335
curgen: 500 fitness: -0.0008600595595567029
CoordinateCreature{Array{Float64,1}}([-0.00045921848882231765, -7.471137878532069e-5, 0.00018310769711565956, -3.827301613852627e-5, 0.00013356757872832244, -3.739420247250207e-5, -0.0002790577489630981, 0.0011450524649883765, -5.679894237473342e-5, -0.00023601878629358336, -0.00030115406464887445, -0.00013985684633312408, 0.00010480899269275706, 0.0015759330855302511, -0.00010829659944804038], 0.0008600595595567029) [-0.00045921848882231765, -7.471137878532069e-5, 0.00018310769711565956, -3.827301613852627e-5, 0.00013356757872832244, -3.739420247250207e-5, -0.0002790577489630981, 0.0011450524649883765, -5.679894237473342e-5, -0.00023601878629358336, -0.00030115406464887445, -0.00013985684633312408, 0.00010480899269275706, 0.0015759330855302511, -0.00010829659944804038] 0.0008600595595567029
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
