Julia Version 1.6.0-DEV.207
Commit 4c16ccb905 (2020-06-10 16:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_yt2r7D/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_yt2r7D/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.17056288053991192 0.017749803801925996; -0.17056288053991192 0.0 0.17007001221803353; -0.017749803801925996 -0.17007001221803353 0.0])
dAA = so3([0.0 0.16133611735789266 -0.06892992274649634; -0.16133611735789266 0.0 -0.09618964535714347; 0.06892992274649634 0.09618964535714347 0.0])
dAA = so3([0.0 -0.054547909371585074 0.16166748317275098; 0.054547909371585074 0.0 -0.1782196891255784; -0.16166748317275098 0.1782196891255784 0.0])
dAA = Quaternion(0.9974176023989374, [-0.01439234751134077, 0.05543717112832866, -0.04333251452612207])
dAA = SO3([0.9769150059890283 0.16784034963278519 0.13216159846415967; -0.1492247919099691 0.9788360650216311 -0.1400425624315554; -0.15286933162961028 0.11708789368723868 0.9812855815709322])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9057993414471667 0.36643830836340874 -0.21272169423366893; -0.4070210966185883 0.892024210139346 -0.19653660074570792; 0.11773436176954011 0.264604940787279 0.9571430642122836]), [-1.7007001221803353, 0.17749803801925995, -1.705628805399119])
xj = SE3(SO3([0.9385880935878489 0.2054707982196838 0.2771897214077274; -0.22831129447918583 0.9721747016167576 0.05244332511966538; -0.2587012628271575 -0.11250822465639758 0.9593829037440158]), [1.782196891255784, 1.6166748317275097, 0.5454790937158507])
Dx = SE3(SO3([0.9126419624434237 -0.2228263834666333 0.3426850612714216; 0.0718217988087066 0.9127255099215545 0.4022111047128356; -0.4024006431447378 -0.3424624743962743 0.8489953922295942]), [2.8340632560722567, 3.1557017048170706, 1.1308936439843356])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
