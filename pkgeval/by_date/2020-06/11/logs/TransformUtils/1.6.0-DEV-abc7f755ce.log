Julia Version 1.6.0-DEV.212
Commit abc7f755ce (2020-06-11 14:44 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_L6wwsZ/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_L6wwsZ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.021750289010189054 -0.10431326097540312; -0.021750289010189054 0.0 0.07851108711313054; 0.10431326097540312 -0.07851108711313054 0.0])
dAA = so3([0.0 0.02179499705993827 -0.0698932046385996; -0.02179499705993827 0.0 0.10169192383709268; 0.0698932046385996 -0.10169192383709268 0.0])
dAA = so3([0.0 0.0006474737081650702 -0.020187537624656724; -0.0006474737081650702 0.0 -0.0018077207910061736; 0.020187537624656724 0.0018077207910061736 0.0])
dAA = Quaternion(0.9977053725809127, [-0.004355514378171646, -0.05454936438362384, 0.03986710251606705])
dAA = SO3([0.9984594421638492 -0.055208853361433795 0.005543001386513953; 0.055468994475185544 0.9956560291890261 -0.07478142945580239; -0.0013903257773019485 0.07497368905194017 0.9971845430732348])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9833862764468932 0.07563080743344872 -0.16501942995562383; -0.03157055686451999 0.9664746716257895 0.2548136751532117; 0.1787588633751584 -0.24537051589950037 0.9528056353171063]), [-0.7851108711313054, -1.0431326097540312, -0.21750289010189053])
xj = SE3(SO3([0.9433190518849704 -0.19320103600239685 -0.26985649156253566; 0.20202903991233753 0.9793665033636453 0.005051645411761549; 0.2633124254245125 -0.059284161264772865 0.9628873012145258]), [0.018077207910061736, -0.20187537624656723, -0.006474737081650701])
Dx = SE3(SO3([0.96833827052318 -0.23150796256956765 -0.09340801414795336; 0.2019908259004043 0.9464675546240432 -0.25179133085961586; 0.14669935273289103 0.22495161993386853 0.9632632395128963]), [0.801008327780944, 0.8220194846698706, 0.2828910218769467])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
