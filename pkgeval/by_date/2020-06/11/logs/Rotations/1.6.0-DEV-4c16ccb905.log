Julia Version 1.6.0-DEV.207
Commit 4c16ccb905 (2020-06-10 16:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rotations ──── v1.0.1
  Installed StaticArrays ─ v0.12.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [6038ab10] + Rotations v1.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [6038ab10] + Rotations v1.0.1
  [90137ffa] + StaticArrays v0.12.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing Rotations
Status `/tmp/jl_Lx5ABU/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [f6369f11] ForwardDiff v0.10.10
  [6038ab10] Rotations v1.0.1
  [90137ffa] StaticArrays v0.12.3
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Lx5ABU/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [f6369f11] ForwardDiff v0.10.10
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [69de0a69] Parsers v1.0.5
  [6038ab10] Rotations v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 200933  200933
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:         | Pass  Total
Principal Value (MRP) | 2000   2000
Test Summary:                    | Pass  Total
Principal Value (UnitQuaternion) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                     | Pass  Total
Principal Value (Rotation Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
Test Summary:    | Pass  Total
Unit Quaternions |   70     70
Test Summary:              | Pass  Total
RodriguesParam basic tests |   23     23
Test Summary:   | Pass  Total
MRP basic tests |   23     23
Test Summary: | Pass  Total
kinematics    |    9      9
Test Summary:   | Pass  Total
Quaternion Maps |   35     35
Test Summary:  | Pass  Total
Rotation Error |   24     24
Test Summary: | Pass  Total
Deprecations  |    3      3
WARNING: using BenchmarkTools.params in module Main conflicts with an existing identifier.
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.730252727 seconds)
done (took 3.205348834 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.029918049 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.021422158 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.983610411 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.014196523 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.000780075 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.053415341 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.048035106 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.984240841 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.029055716 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.031541333 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.992042339 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.187402839 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.984263239 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.984327917 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.045446337 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.015325088 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.048091614 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.019853859 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.018778554 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.974261758 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.073837113 seconds)
done (took 22.205718922 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.949880825 seconds)
  (2/20) tuning "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.006102933 seconds)
  (3/20) tuning "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 1.086079955 seconds)
  (4/20) tuning "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.137734184 seconds)
  (5/20) tuning "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.999438895 seconds)
  (6/20) tuning "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.989519922 seconds)
  (7/20) tuning "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 0.957940961 seconds)
  (8/20) tuning "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 0.996337077 seconds)
  (9/20) tuning "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.939512028 seconds)
  (10/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.996393831 seconds)
  (11/20) tuning "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 0.897750254 seconds)
  (12/20) tuning "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.991917341 seconds)
  (13/20) tuning "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.000634494 seconds)
  (14/20) tuning "MRP{Float64} -> RotationVec{Float64}"...
  done (took 1.060862373 seconds)
  (15/20) tuning "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.048416004 seconds)
  (16/20) tuning "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 0.996158572 seconds)
  (17/20) tuning "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.02350013 seconds)
  (18/20) tuning "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.94399388 seconds)
  (19/20) tuning "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.978615166 seconds)
  (20/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 0.970800023 seconds)
done (took 20.6500713 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.031926437 seconds)
done (took 1.921987177 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.799802217 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.628950451 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.534135243 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.807287693 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.581598384 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.922657744 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.884836809 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.170702203 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.884924301 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.808459402 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.474881508 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.913793729 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.685757036 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.556548913 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.793985159 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.165123017 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.52907249 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.848008572 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.889999409 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.264884598 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.850363192 seconds)
done (took 35.679220512 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.018126294 seconds)
  (2/20) benchmarking "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.426615565 seconds)
  (3/20) benchmarking "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 2.114036503 seconds)
  (4/20) benchmarking "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.218922181 seconds)
  (5/20) benchmarking "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.819992382 seconds)
  (6/20) benchmarking "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.831830311 seconds)
  (7/20) benchmarking "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.37149888 seconds)
  (8/20) benchmarking "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 1.957039954 seconds)
  (9/20) benchmarking "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.146893648 seconds)
  (10/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.223174889 seconds)
  (11/20) benchmarking "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 0.805671952 seconds)
  (12/20) benchmarking "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.123247206 seconds)
  (13/20) benchmarking "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.151223074 seconds)
  (14/20) benchmarking "MRP{Float64} -> RotationVec{Float64}"...
  done (took 2.104634047 seconds)
  (15/20) benchmarking "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.889474967 seconds)
  (16/20) benchmarking "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.543575947 seconds)
  (17/20) benchmarking "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.726841774 seconds)
  (18/20) benchmarking "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 0.958679608 seconds)
  (19/20) benchmarking "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.547303001 seconds)
  (20/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.802174008 seconds)
done (took 28.514212831 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 9.940 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 50.124 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 47.799 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  26.508 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 48.672 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  37.430 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 48.998 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 66.124 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   20.301 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 61.227 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 48.639 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  41.152 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 68.270 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  26.077 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  34.767 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 64.657 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   21.845 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  41.648 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 64.683 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 51.823 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   20.999 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 58.728 ns

Group: Non-Euler conversions
UnitQuaternion{Float64} -> RotMatrix{3,Float64,9} 8.344 ns
UnitQuaternion{Float64} -> RotationVec{Float64}   41.765 ns
RotMatrix{3,Float64,9} -> RotationVec{Float64}    82.845 ns
UnitQuaternion{Float64} -> MRP{Float64}           2.886 ns
MRP{Float64} -> UnitQuaternion{Float64}           5.789 ns
UnitQuaternion{Float64} -> AngleAxis{Float64}     39.475 ns
RotMatrix{3,Float64,9} -> MRP{Float64}            21.021 ns
MRP{Float64} -> AngleAxis{Float64}                96.171 ns
MRP{Float64} -> RotMatrix{3,Float64,9}            35.639 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}      27.930 ns
AngleAxis{Float64} -> RotationVec{Float64}        2.862 ns
AngleAxis{Float64} -> UnitQuaternion{Float64}     17.804 ns
RotMatrix{3,Float64,9} -> UnitQuaternion{Float64} 19.350 ns
MRP{Float64} -> RotationVec{Float64}              91.001 ns
RotationVec{Float64} -> MRP{Float64}              86.143 ns
AngleAxis{Float64} -> MRP{Float64}                55.267 ns
RotationVec{Float64} -> RotMatrix{3,Float64,9}    69.931 ns
RotationVec{Float64} -> AngleAxis{Float64}        13.991 ns
RotationVec{Float64} -> UnitQuaternion{Float64}   37.429 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}      59.769 ns

    Testing Rotations tests passed 
