Julia Version 1.6.0-DEV.192
Commit 07385aba13 (2020-06-08 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Reexport ──────────────────── v0.2.0
  Installed Compat ────────────────────── v3.11.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed CategoricalArrays ─────────── v0.7.7
  Installed MLDataUtils ───────────────── v0.5.1
  Installed MLDataPattern ─────────────── v0.5.3
  Installed Missings ──────────────────── v0.4.3
  Installed MappedArrays ──────────────── v0.2.2
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed Tables ────────────────────── v1.0.4
  Installed JSON ──────────────────────── v0.21.0
  Installed DataFrames ────────────────── v0.20.2
  Installed SimilaritySearch ──────────── v0.3.19
  Installed TableTraits ───────────────── v1.0.0
  Installed StatsBase ─────────────────── v0.32.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed LearnBase ─────────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed Parsers ───────────────────── v1.0.5
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed DataStructures ────────────── v0.17.17
  Installed OrderedCollections ────────── v1.2.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.11.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.5
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_yp8irR/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_yp8irR/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.11.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.5
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0723782532413801
[ Info: 0.9326678744951884
[ Info: 0.8326150393486023
[ Info: 0.5568768373628458
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3281933227926493
mean(cdnet.distances) = 0.37754681843022503
mean(crand.distances) = 0.3375794859478871
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8576381951381961,"seconds":6.804242730140686e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.421875,"distances_sum":2264.616825345809}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7802734375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7802734375,"f1":0.8684757950382958,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.40625,"distances_sum":2376.1207570110705}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7802734375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7802734375,"f1":0.8684757950382958,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.40625,"distances_sum":2376.1207570110705}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9058894230769238,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.640625,"distances_sum":2608.6570635371204}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8349609375,"state":{"ssize":2,"bsize":6},"perf":{"precision":1.0,"recall":0.8349609375,"f1":0.9058894230769238,"seconds":6.679445505142212e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.640625,"distances_sum":2608.6570635371204}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9450637903762906,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.765625,"distances_sum":3011.828953867805}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9450637903762906,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.765625,"distances_sum":3011.828953867805}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9450637903762906,"seconds":6.5248459577560425e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.765625,"distances_sum":3011.828953867805}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2001953125, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2001953125,"f1":null,"seconds":4.0978193283081055e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":5.296875,"distances_sum":515.7830187479851}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6552734375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6552734375,"f1":0.7792171370296378,"seconds":8.996576070785522e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.8046875,"distances_sum":1686.129241168838}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6552734375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6552734375,"f1":0.7792171370296378,"seconds":8.996576070785522e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":7.8046875,"distances_sum":1686.129241168838}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9502632783882793,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.71875,"distances_sum":2735.070701041038}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.919921875, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.919921875,"f1":0.955196886446887,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2743.313681763183}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.919921875,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.955196886446887,"seconds":6.387010216712952e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7890625,"distances_sum":2743.313681763183}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9720982142857144,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2883.868007855046}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9557692307692311,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.7734375,"distances_sum":2773.820676144686}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9365234375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.965012591575092,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8828125,"distances_sum":2821.1049773084756}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9654590201465209,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.8359375,"distances_sum":2845.0281214119345}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720982142857144,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2883.868007855046}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":2,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9720982142857144,"seconds":5.627050995826721e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":8.9140625,"distances_sum":2883.868007855046}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.53125,"distances_sum":556.739932019371}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.697265625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.697265625,"f1":0.8128189518814527,"seconds":5.50244003534317e-5,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.8515625,"distances_sum":1771.8596603788012}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.697265625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.697265625,"f1":0.8128189518814527,"seconds":5.50244003534317e-5,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":7.8515625,"distances_sum":1771.8596603788012}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9430548618048622,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.71875,"distances_sum":2704.2612045791993}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9430548618048622,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.71875,"distances_sum":2704.2612045791993}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9430548618048622,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.71875,"distances_sum":2704.2612045791993}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9033203125,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9430548618048622,"seconds":6.323680281639099e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.71875,"distances_sum":2704.2612045791993}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5654296875, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5654296875,"f1":0.7042048229548232,"seconds":4.202127456665039e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.6640625,"distances_sum":1392.3832876840477}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19921875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.19921875,"f1":null,"seconds":3.5427510738372803e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.6953125,"distances_sum":511.27960506650476}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.3266842365264893e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":5.640625,"distances_sum":470.1053084100006}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5654296875,"state":{"ssize":4,"bsize":3},"perf":{"precision":1.0,"recall":0.5654296875,"f1":0.7042048229548232,"seconds":4.202127456665039e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.6640625,"distances_sum":1392.3832876840477}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8839290917415928,"seconds":5.591660737991333e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.1796875,"distances_sum":2255.7772981058074}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6982421875, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6982421875,"f1":0.8133829711954721,"seconds":4.8074871301651e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.671875,"distances_sum":1800.38024727101}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5947265625, conf: {"ssize":7,"bsize":3}, perf: {"precision":1.0,"recall":0.5947265625,"f1":0.7264256576756584,"seconds":4.293397068977356e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.03125,"distances_sum":1517.2273782127572}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9342204670329675,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6796875,"distances_sum":2653.5193148180447}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7861328125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7861328125,"f1":0.8759672619047627,"seconds":5.142763257026672e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.0703125,"distances_sum":2133.9827268601634}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.801679917304918,"seconds":5.057081580162048e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.59375,"distances_sum":1782.3382627466435}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8876953125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8876953125,"f1":0.9342204670329675,"seconds":5.671754479408264e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.6796875,"distances_sum":2653.5193148180447}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9707989926739933,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.90625,"distances_sum":2958.179212882501}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9649038461538466,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.859375,"distances_sum":2915.349492406364}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.948740842490843,"seconds":5.85801899433136e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.7578125,"distances_sum":2782.9720637852}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739933,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.90625,"distances_sum":2958.179212882501}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.947265625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.947265625,"f1":0.9707989926739933,"seconds":6.489455699920654e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.90625,"distances_sum":2958.179212882501}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.475695848464966e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.0078125,"distances_sum":472.0090179545714}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.23046875, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.23046875,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.2890625,"distances_sum":595.813358802865}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.23046875,"state":{"ssize":3,"bsize":1},"perf":{"precision":null,"recall":0.23046875,"f1":null,"seconds":3.4980475902557373e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":6.2890625,"distances_sum":595.813358802865}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6005859375, conf: {"ssize":8,"bsize":3}, perf: {"precision":1.0,"recall":0.6005859375,"f1":0.7363268675768682,"seconds":4.405155777931213e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.3203125,"distances_sum":1467.740113938675}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8604229104229113,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.953125,"distances_sum":2087.9628309037194}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.767578125,"state":{"ssize":7,"bsize":5},"perf":{"precision":1.0,"recall":0.767578125,"f1":0.8604229104229113,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":7.953125,"distances_sum":2087.9628309037194}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9281879578754584,"seconds":5.885958671569824e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.6015625,"distances_sum":2616.1541011069517}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8733636155511163,"seconds":5.334615707397461e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.03125,"distances_sum":2189.8112928863306}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.957949862637363,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8671875,"distances_sum":2814.963191670152}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":10,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8719754204129213,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.03125,"distances_sum":2135.682455621893}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8795818764568772,"seconds":5.29363751411438e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.15625,"distances_sum":2197.544634551427}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.957949862637363,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8671875,"distances_sum":2814.963191670152}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.957949862637363,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.516193151473999e-6,"evaluations":8.8671875,"distances_sum":2814.963191670152}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2138671875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.484375,"distances_sum":333.79538109792145}}, beam: 1, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2138671875,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2138671875,"f1":null,"seconds":3.7141144275665283e-6,"exhaustive_search_seconds":1.5068799257278442e-6,"evaluations":6.484375,"distances_sum":333.79538109792145}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.41796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.41796875,"f1":null,"seconds":3.768131136894226e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":5.4609375,"distances_sum":720.2958961855239}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8450648310023317,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.875,"distances_sum":1464.2327613227023}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.51953125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.51953125,"f1":null,"seconds":4.466623067855835e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":6.8671875,"distances_sum":942.6571860988151}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7470703125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7470703125,"f1":0.8450648310023317,"seconds":5.194917321205139e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":7.875,"distances_sum":1464.2327613227023}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.822265625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.822265625,"f1":0.8959623709623716,"seconds":5.6978315114974976e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.3828125,"distances_sum":1649.1098411698747}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9558493589743597,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.71875,"distances_sum":2047.3812147885822}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.86328125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.86328125,"f1":0.9202641108891118,"seconds":5.638226866722107e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.375,"distances_sum":1848.6783500077054}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9026593198468207,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.4375,"distances_sum":1684.4923919068724}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9558493589743597,"seconds":5.8747828006744385e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.71875,"distances_sum":2047.3812147885822}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":7,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9745936355311359,"seconds":6.109476089477539e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.8984375,"distances_sum":2122.058062645859}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96875, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.96875,"f1":0.9827037545787547,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2184.966891734457}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9619848901098906,"seconds":5.751848220825195e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.828125,"distances_sum":2049.545820725612}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9827037545787547,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2184.966891734457}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96875,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.96875,"f1":0.9827037545787547,"seconds":6.237998604774475e-6,"exhaustive_search_seconds":1.4677643775939941e-6,"evaluations":8.9296875,"distances_sum":2184.966891734457}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.568359375,"f1":0.7099966006216012,"seconds":3.9692968130111694e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":7.171875,"distances_sum":1171.2378098676663}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6943359375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6943359375,"f1":0.8097397394272402,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3203125,"distances_sum":1494.1543754001275}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6943359375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6943359375,"f1":0.8097397394272402,"seconds":4.675239324569702e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.3203125,"distances_sum":1494.1543754001275}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8720703125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8720703125,"f1":0.9264454295704301,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2008.5388380553227}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8720703125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8720703125,"f1":0.9264454295704301,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.7578125,"distances_sum":2008.5388380553227}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.965630723443224,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9453125,"distances_sum":2260.024402353393}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616472069597074,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.875,"distances_sum":2242.489136948797}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965630723443224,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9453125,"distances_sum":2260.024402353393}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.965630723443224,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":8.9453125,"distances_sum":2260.024402353393}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.24609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.24609375,"f1":null,"seconds":3.205612301826477e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":6.890625,"distances_sum":459.7373791315908}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6951102716727723,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.0,"distances_sum":1059.345443429219}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4619140625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.4619140625,"f1":null,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.046875,"distances_sum":850.6089850132059}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.55078125,"f1":0.6951102716727723,"seconds":4.297122359275818e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.0,"distances_sum":1059.345443429219}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8621373418248427,"seconds":5.234032869338989e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.65625,"distances_sum":1599.7483803403647}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8828125,"f1":0.9318166208791215,"seconds":5.505979061126709e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.75,"distances_sum":1937.1795207253651}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.93946053946054,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2000.3842794604047}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.564453125, conf: {"ssize":5,"bsize":3}, perf: {"precision":null,"recall":0.564453125,"f1":null,"seconds":4.380941390991211e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.296875,"distances_sum":1114.152493106108}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5791015625, conf: {"ssize":7,"bsize":3}, perf: {"precision":null,"recall":0.5791015625,"f1":null,"seconds":4.1853636503219604e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":7.3828125,"distances_sum":1182.6709703213949}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.89453125,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.89453125,"f1":0.93946053946054,"seconds":5.584210157394409e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.765625,"distances_sum":2000.3842794604047}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9476679570429576,"seconds":5.550682544708252e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.84375,"distances_sum":2054.922820569561}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9666323260073264,"seconds":5.77978789806366e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.953125,"distances_sum":2160.586282254505}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846156,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2193.246715414372}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9600503663003669,"seconds":5.925074219703674e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.8828125,"distances_sum":2124.3439293803294}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846156,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2193.246715414372}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":5,"bsize":10},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9716346153846156,"seconds":6.200745701789856e-6,"exhaustive_search_seconds":1.3113021850585938e-6,"evaluations":8.9140625,"distances_sum":2193.246715414372}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.6875,"distances_sum":457.2460920932564}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2333984375,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2333984375,"f1":null,"seconds":3.5651028156280518e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":6.6875,"distances_sum":457.2460920932564}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.150390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.150390625,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.8515625,"distances_sum":301.4425955660715}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.150390625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.150390625,"f1":null,"seconds":3.03611159324646e-6,"exhaustive_search_seconds":1.30385160446167e-6,"evaluations":4.8515625,"distances_sum":301.4425955660715}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2392578125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2392578125,"f1":null,"seconds":3.462657332420349e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":5.6796875,"distances_sum":529.9011122857123}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7763671875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7763671875,"f1":0.8660402097902107,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.2421875,"distances_sum":1794.0143121531648}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7763671875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7763671875,"f1":0.8660402097902107,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.2421875,"distances_sum":1794.0143121531648}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.9532795329670335,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2325.465324939141}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9451694139194144,"seconds":5.492940545082092e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.7109375,"distances_sum":2306.93429006339}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.9532795329670335,"seconds":5.7015568017959595e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2325.465324939141}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9659455128205133,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8984375,"distances_sum":2430.815532577253}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":4,"bsize":13}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.978794642857143,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2485.629446598992}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.962093635531136,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.859375,"distances_sum":2374.105136679922}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9423828125, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.9423828125,"f1":0.967839972527473,"seconds":6.3907355070114136e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8828125,"distances_sum":2424.1501462047227}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":4,"bsize":12}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9702609890109893,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.875,"distances_sum":2440.713253584439}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9559008699633706,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.796875,"distances_sum":2352.366107251977}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9646634615384618,"seconds":5.5246055126190186e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.84375,"distances_sum":2434.2400099672736}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.978794642857143,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2485.629446598992}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":4,"bsize":13},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.978794642857143,"seconds":6.42240047454834e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.9609375,"distances_sum":2485.629446598992}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2060546875, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2060546875,"f1":null,"seconds":3.0007213354110718e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.9296875,"distances_sum":458.24352571176485}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.75390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.75390625,"f1":0.8492060023310031,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.671875,"distances_sum":1744.5187370068716}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1875, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1875,"f1":null,"seconds":3.1813979148864746e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":4.7109375,"distances_sum":394.1339690372747}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7929131632256641,"seconds":4.5709311962127686e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.3203125,"distances_sum":1497.5955667591331}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.75390625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.75390625,"f1":0.8492060023310031,"seconds":4.8335641622543335e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.671875,"distances_sum":1744.5187370068716}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9485920329670335,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6796875,"distances_sum":2368.8458402621095}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9091796875,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.9091796875,"f1":0.9485920329670335,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.6796875,"distances_sum":2368.8458402621095}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.95703125, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.95703125,"f1":0.9764709249084252,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9296875,"distances_sum":2543.0430002615194}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9519059065934071,"seconds":6.3050538301467896e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.703125,"distances_sum":2417.0586393611397}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9536916208791216,"seconds":5.969777703285217e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7734375,"distances_sum":2419.960487856089}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9540064102564106,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.7265625,"distances_sum":2416.535863128071}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.95703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764709249084252,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9296875,"distances_sum":2543.0430002615194}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.95703125,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.95703125,"f1":0.9764709249084252,"seconds":6.148591637611389e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.9296875,"distances_sum":2543.0430002615194}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3671875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.3671875,"f1":null,"seconds":4.999339580535889e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":5.671875,"distances_sum":817.2655393230547}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":2,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6919668872793878,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1015625,"distances_sum":1221.3913381640996}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.55078125,"state":{"ssize":2,"bsize":3},"perf":{"precision":1.0,"recall":0.55078125,"f1":0.6919668872793878,"seconds":5.504116415977478e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.1015625,"distances_sum":1221.3913381640996}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.681640625, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.681640625,"f1":0.7989526098901107,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.5546875,"distances_sum":1599.0865704836522}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.681640625,"state":{"ssize":7,"bsize":4},"perf":{"precision":1.0,"recall":0.681640625,"f1":0.7989526098901107,"seconds":5.081295967102051e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.5546875,"distances_sum":1599.0865704836522}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9463973526473535,"seconds":5.9176236391067505e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.6796875,"distances_sum":2374.9201977891576}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.685546875, conf: {"ssize":10,"bsize":4}, perf: {"precision":1.0,"recall":0.685546875,"f1":0.799576812076813,"seconds":5.019828677177429e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.6640625,"distances_sum":1607.749121732583}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9169921875, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.9169921875,"f1":0.953611492673993,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8046875,"distances_sum":2392.5676240823923}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.835867778055279,"seconds":6.389804184436798e-5,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":7.953125,"distances_sum":1748.5358873705839}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9169921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.953611492673993,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8046875,"distances_sum":2392.5676240823923}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9169921875,"state":{"ssize":8,"bsize":8},"perf":{"precision":1.0,"recall":0.9169921875,"f1":0.953611492673993,"seconds":6.068497896194458e-6,"exhaustive_search_seconds":1.218169927597046e-6,"evaluations":8.8046875,"distances_sum":2392.5676240823923}}, n: 9
mean(cfft.distances) = 0.33575411679146816
mean(cdnet.distances) = 0.9054047611035237
mean(crand.distances) = 0.3619304356652638
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8688888888888888
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8844444444444445
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8422222222222223
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.888888888888889
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.94
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.9066666666666666
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9311111111111111
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8955555555555555
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8933333333333334
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9333333333333332
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8688888888888888
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8666666666666666
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8799999999999999
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8555555555555555
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8733333333333334
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8577777777777778
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9044444444444445
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8911111111111111
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8688888888888888
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8955555555555555
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8799999999999999
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.9666666666666667
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 19, 1]]
** centroid: 1, normalized-entropy: 0.2863969571159561, [(2, 19), (3, 1)]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 3: selecting labels [1] (freq >= 1) [from [18, 0, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [4, 0, 0]]
*** center 8: selecting labels [3] (freq >= 1) [from [0, 0, 9]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 15]]
** centroid: 9, normalized-entropy: 0.5225593745369407, [(2, 2), (3, 15)]
*** center 10: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 11: selecting labels [1] (freq >= 1) [from [21, 0, 0]]
*** center 12: selecting labels [2] (freq >= 1) [from [0, 13, 0]]
finished with 13 centroids; started with 12
nc.class_map = [2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 2]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5686026857296625] ***
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 8]]
** centroid: 9, normalized-entropy: 0.8453509366224364, [(2, 3), (3, 8)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 10]]
*** center 11: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 11, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
*** center 12: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.24674149463512562] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034] ***
*** starting iteration: 2; err: [Inf, 0.24674149463512562, 0.20945697163956034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638] ***
*** starting iteration: 3; err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298] ***
*** starting iteration: 4; err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128] ***
*** starting iteration: 5; err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187] ***
*** starting iteration: 6; err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187, 0.18668758725836962] ***
*** starting iteration: 7; err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187, 0.18668758725836962] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187, 0.18668758725836962, 0.1854941662744963] ***
*** starting iteration: 8; err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187, 0.18668758725836962, 0.1854941662744963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187, 0.18668758725836962, 0.1854941662744963, 0.18526566858814508] ***
*** finished computation of 7 references, err: [Inf, 0.24674149463512562, 0.20945697163956034, 0.1981288838401638, 0.19364717597975298, 0.19102448227818128, 0.1884401234233187, 0.18668758725836962, 0.1854941662744963, 0.18526566858814508] ***
*** center 1: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [50, 50, 0]]
** centroid: 2, normalized-entropy: 1.0, [(1, 50), (2, 50)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 21, 0]]
** centroid: 3, normalized-entropy: 0.7578784625383954, [(1, 75), (2, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [63, 21, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 63), (2, 21)]
*** center 5: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 86, 0]]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 76, 25]]
** centroid: 7, normalized-entropy: 0.8073313266519867, [(2, 76), (3, 25)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3504346014507327] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851] ***
*** starting iteration: 2; err: [Inf, 0.3504346014507327, 0.2599867027576851] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834] ***
*** starting iteration: 3; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487] ***
*** starting iteration: 4; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118] ***
*** starting iteration: 5; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765] ***
*** starting iteration: 6; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248] ***
*** starting iteration: 7; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878] ***
*** starting iteration: 8; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878, 0.1842369982132177] ***
*** starting iteration: 9; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878, 0.1842369982132177] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878, 0.1842369982132177, 0.1829318671977368] ***
*** starting iteration: 10; err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878, 0.1842369982132177, 0.1829318671977368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878, 0.1842369982132177, 0.1829318671977368, 0.18250364424993118] ***
*** finished computation of 7 references, err: [Inf, 0.3504346014507327, 0.2599867027576851, 0.23410225262260834, 0.21378962329492487, 0.20044606053752118, 0.19316606254580765, 0.18844647912205248, 0.1859162486621878, 0.1842369982132177, 0.1829318671977368, 0.18250364424993118] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [58, 46, 0]]
** centroid: 1, normalized-entropy: 0.990374836448575, [(1, 58), (2, 46)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 105, 23]]
** centroid: 2, normalized-entropy: 0.6793929348105144, [(2, 105), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [69, 44, 0]]
** centroid: 3, normalized-entropy: 0.9643986196033757, [(1, 69), (2, 44)]
*** center 4: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [16, 65, 0]]
** centroid: 6, normalized-entropy: 0.7169622516889513, [(1, 16), (2, 65)]
*** center 7: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.246496156059105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403] ***
*** starting iteration: 2; err: [Inf, 0.246496156059105, 0.21710389343298403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134] ***
*** starting iteration: 3; err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763] ***
*** starting iteration: 4; err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549] ***
*** starting iteration: 5; err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836] ***
*** starting iteration: 6; err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836, 0.18785773812286344] ***
*** starting iteration: 7; err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836, 0.18785773812286344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836, 0.18785773812286344, 0.1866338109887991] ***
*** starting iteration: 8; err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836, 0.18785773812286344, 0.1866338109887991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836, 0.18785773812286344, 0.1866338109887991, 0.1863526629180699] ***
*** finished computation of 7 references, err: [Inf, 0.246496156059105, 0.21710389343298403, 0.20571074007858134, 0.19854158190856763, 0.1953399842772549, 0.1900400303288836, 0.18785773812286344, 0.1866338109887991, 0.1863526629180699] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 65, 24]]
** centroid: 1, normalized-entropy: 0.8409805336163159, [(2, 65), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [74, 10, 0]]
** centroid: 3, normalized-entropy: 0.5266170655714281, [(1, 74), (2, 10)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [69, 27, 0]]
** centroid: 5, normalized-entropy: 0.8571484374283717, [(1, 69), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [45, 74, 0]]
** centroid: 6, normalized-entropy: 0.9567258440526692, [(1, 45), (2, 74)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [2, 94, 0]]
** centroid: 7, normalized-entropy: 0.14609425012013613, [(1, 2), (2, 94)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25832416831554883] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25832416831554883, 0.20611230735932742] ***
*** starting iteration: 2; err: [Inf, 0.25832416831554883, 0.20611230735932742] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25832416831554883, 0.20611230735932742, 0.20200078982395586] ***
*** starting iteration: 3; err: [Inf, 0.25832416831554883, 0.20611230735932742, 0.20200078982395586] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25832416831554883, 0.20611230735932742, 0.20200078982395586, 0.19808877904217007] ***
*** finished computation of 7 references, err: [Inf, 0.25832416831554883, 0.20611230735932742, 0.20200078982395586, 0.19808877904217007] ***
*** center 1: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
*** center 2: selecting labels [2] (freq >= 2) [from [0, 80, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [36, 66, 0]]
** centroid: 3, normalized-entropy: 0.9366673818775627, [(1, 36), (2, 66)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 52, 25]]
** centroid: 4, normalized-entropy: 0.9093934226727598, [(2, 52), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [90, 14, 0]]
** centroid: 5, normalized-entropy: 0.5699613760403499, [(1, 90), (2, 14)]
*** center 6: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [65, 42, 0]]
** centroid: 7, normalized-entropy: 0.9664086723492078, [(1, 65), (2, 42)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3164971655016874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3164971655016874, 0.2079491635737033] ***
*** starting iteration: 2; err: [Inf, 0.3164971655016874, 0.2079491635737033] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3164971655016874, 0.2079491635737033, 0.19958750155616156] ***
*** starting iteration: 3; err: [Inf, 0.3164971655016874, 0.2079491635737033, 0.19958750155616156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3164971655016874, 0.2079491635737033, 0.19958750155616156, 0.1958209160335552] ***
*** finished computation of 7 references, err: [Inf, 0.3164971655016874, 0.2079491635737033, 0.19958750155616156, 0.1958209160335552] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [86, 16, 0]]
** centroid: 2, normalized-entropy: 0.6267511370265896, [(1, 86), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [110, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 82, 23]]
** centroid: 4, normalized-entropy: 0.7584246665423688, [(2, 82), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 94, 0]]
** centroid: 6, normalized-entropy: 0.5336439173027161, [(1, 13), (2, 94)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 68, 0]]
** centroid: 7, normalized-entropy: 0.9463439981707659, [(1, 39), (2, 68)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2889010597046917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2889010597046917, 0.2162126118524595] ***
*** starting iteration: 2; err: [Inf, 0.2889010597046917, 0.2162126118524595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2889010597046917, 0.2162126118524595, 0.2039512645738057] ***
*** starting iteration: 3; err: [Inf, 0.2889010597046917, 0.2162126118524595, 0.2039512645738057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2889010597046917, 0.2162126118524595, 0.2039512645738057, 0.1998839835905801] ***
*** finished computation of 7 references, err: [Inf, 0.2889010597046917, 0.2162126118524595, 0.2039512645738057, 0.1998839835905801] ***
*** center 1: selecting labels [1] (freq >= 2) [from [137, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 39, 0]]
** centroid: 2, normalized-entropy: 0.9876925088958032, [(1, 30), (2, 39)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 66, 8]]
** centroid: 3, normalized-entropy: 0.4941829348497886, [(2, 66), (3, 8)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 54, 16]]
** centroid: 4, normalized-entropy: 0.775512658133148, [(2, 54), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [14, 46, 0]]
** centroid: 5, normalized-entropy: 0.7837769474847011, [(1, 14), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [102, 65, 0]]
** centroid: 6, normalized-entropy: 0.9642953539833812, [(1, 102), (2, 65)]
*** center 7: selecting labels [1] (freq >= 2) [from [90, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25171451240654913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25171451240654913, 0.21767227444518078] ***
*** starting iteration: 2; err: [Inf, 0.25171451240654913, 0.21767227444518078] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25171451240654913, 0.21767227444518078, 0.2003733307338535] ***
*** starting iteration: 3; err: [Inf, 0.25171451240654913, 0.21767227444518078, 0.2003733307338535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25171451240654913, 0.21767227444518078, 0.2003733307338535, 0.1943403930310999] ***
*** finished computation of 7 references, err: [Inf, 0.25171451240654913, 0.21767227444518078, 0.2003733307338535, 0.1943403930310999] ***
*** center 1: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [99, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [129, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 61, 25]]
** centroid: 4, normalized-entropy: 0.869620774054375, [(2, 61), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [7, 89, 0]]
** centroid: 5, normalized-entropy: 0.3767150026960246, [(1, 7), (2, 89)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 27, 0]]
** centroid: 6, normalized-entropy: 0.9505668528932193, [(1, 46), (2, 27)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [13, 76, 0]]
** centroid: 7, normalized-entropy: 0.5999108763872215, [(1, 13), (2, 76)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36431426929402116] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36431426929402116, 0.21859866801671674] ***
*** starting iteration: 2; err: [Inf, 0.36431426929402116, 0.21859866801671674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36431426929402116, 0.21859866801671674, 0.19835903661638343] ***
*** starting iteration: 3; err: [Inf, 0.36431426929402116, 0.21859866801671674, 0.19835903661638343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.36431426929402116, 0.21859866801671674, 0.19835903661638343, 0.18976567728470067] ***
*** finished computation of 7 references, err: [Inf, 0.36431426929402116, 0.21859866801671674, 0.19835903661638343, 0.18976567728470067] ***
*** center 1: selecting labels [1] (freq >= 2) [from [115, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [88, 1, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [70, 51, 0]]
** centroid: 3, normalized-entropy: 0.9821400668060496, [(1, 70), (2, 51)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 103, 23]]
** centroid: 4, normalized-entropy: 0.68560151644291, [(2, 103), (3, 23)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [56, 42, 0]]
** centroid: 5, normalized-entropy: 0.9852281360342514, [(1, 56), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [12, 61, 0]]
** centroid: 6, normalized-entropy: 0.644694043811662, [(1, 12), (2, 61)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [43, 2, 0]]
** centroid: 7, normalized-entropy: 0.2623112196143368, [(1, 43), (2, 2)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42458530667627503] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42458530667627503, 0.24211824062661544] ***
*** starting iteration: 2; err: [Inf, 0.42458530667627503, 0.24211824062661544] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42458530667627503, 0.24211824062661544, 0.2126755540746486] ***
*** starting iteration: 3; err: [Inf, 0.42458530667627503, 0.24211824062661544, 0.2126755540746486] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.42458530667627503, 0.24211824062661544, 0.2126755540746486, 0.19841942879283378] ***
*** finished computation of 7 references, err: [Inf, 0.42458530667627503, 0.24211824062661544, 0.2126755540746486, 0.19841942879283378] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [44, 32, 0]]
** centroid: 1, normalized-entropy: 0.9819407868640977, [(1, 44), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [70, 12, 0]]
** centroid: 2, normalized-entropy: 0.6006085754131871, [(1, 70), (2, 12)]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 101, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [135, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [29, 81, 0]]
** centroid: 5, normalized-entropy: 0.8321842672305305, [(1, 29), (2, 81)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 44, 24]]
** centroid: 6, normalized-entropy: 0.9366673818775627, [(2, 44), (3, 24)]
*** center 7: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3634179434906859] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3634179434906859, 0.2993656095710245] ***
*** finished computation of 3 references, err: [Inf, 0.3634179434906859, 0.2993656095710245] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [90, 144, 25]]
** centroid: 1, normalized-entropy: 0.8368246967654078, [(1, 90), (2, 144), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [184, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [113, 110, 0]]
** centroid: 3, normalized-entropy: 0.9998694459264538, [(1, 113), (2, 110)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.36177212722610674] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36177212722610674, 0.30966993002709686] ***
*** finished computation of 3 references, err: [Inf, 0.36177212722610674, 0.30966993002709686] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [136, 121, 0]]
** centroid: 1, normalized-entropy: 0.9975412880255041, [(1, 136), (2, 121)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [213, 3, 0]]
** centroid: 2, normalized-entropy: 0.1055910363751953, [(1, 213), (2, 3)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [35, 136, 23]]
** centroid: 3, normalized-entropy: 0.7379969534503851, [(1, 35), (2, 136), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4173240530467976] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4173240530467976, 0.2870938505738627] ***
*** finished computation of 3 references, err: [Inf, 0.4173240530467976, 0.2870938505738627] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [118, 72, 0]]
** centroid: 1, normalized-entropy: 0.9572951876544017, [(1, 118), (2, 72)]
*** center 2: selecting labels [1] (freq >= 2) [from [196, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [59, 198, 24]]
** centroid: 3, normalized-entropy: 0.7141095233585614, [(1, 59), (2, 198), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.208068467027091] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.208068467027091, 0.16707110727784802] ***
*** starting iteration: 2; err: [Inf, 0.208068467027091, 0.16707110727784802] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.208068467027091, 0.16707110727784802, 0.1608293639921077] ***
*** starting iteration: 3; err: [Inf, 0.208068467027091, 0.16707110727784802, 0.1608293639921077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.208068467027091, 0.16707110727784802, 0.1608293639921077, 0.15818374758123424] ***
*** finished computation of 7 references, err: [Inf, 0.208068467027091, 0.16707110727784802, 0.1608293639921077, 0.15818374758123424] ***
*** center 1: selecting labels [2] (freq >= 2) [from [1, 65, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [144, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [61, 15, 0]]
** centroid: 4, normalized-entropy: 0.7166336117927455, [(1, 61), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [101, 47, 0]]
** centroid: 5, normalized-entropy: 0.901716637339894, [(1, 101), (2, 47)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 58, 25]]
** centroid: 6, normalized-entropy: 0.8827586787955116, [(2, 58), (3, 25)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [26, 69, 0]]
** centroid: 7, normalized-entropy: 0.846701711600821, [(1, 26), (2, 69)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23385504259961076] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23385504259961076, 0.18855924231685822] ***
*** starting iteration: 2; err: [Inf, 0.23385504259961076, 0.18855924231685822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23385504259961076, 0.18855924231685822, 0.1759662048477886] ***
*** starting iteration: 3; err: [Inf, 0.23385504259961076, 0.18855924231685822, 0.1759662048477886] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23385504259961076, 0.18855924231685822, 0.1759662048477886, 0.16532399345920987] ***
*** finished computation of 7 references, err: [Inf, 0.23385504259961076, 0.18855924231685822, 0.1759662048477886, 0.16532399345920987] ***
*** center 1: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [127, 47, 0]]
** centroid: 2, normalized-entropy: 0.8416295231538201, [(1, 127), (2, 47)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [23, 18, 0]]
** centroid: 3, normalized-entropy: 0.9892452969285004, [(1, 23), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [23, 70, 0]]
** centroid: 4, normalized-entropy: 0.8069896049203007, [(1, 23), (2, 70)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 125, 23]]
** centroid: 5, normalized-entropy: 0.6232036320338675, [(2, 125), (3, 23)]
*** center 6: selecting labels [1] (freq >= 2) [from [126, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [22, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3507306659035664] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507306659035664, 0.21665722171034568] ***
*** starting iteration: 2; err: [Inf, 0.3507306659035664, 0.21665722171034568] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507306659035664, 0.21665722171034568, 0.17541637657715686] ***
*** starting iteration: 3; err: [Inf, 0.3507306659035664, 0.21665722171034568, 0.17541637657715686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3507306659035664, 0.21665722171034568, 0.17541637657715686, 0.1634356210195366] ***
*** finished computation of 7 references, err: [Inf, 0.3507306659035664, 0.21665722171034568, 0.17541637657715686, 0.1634356210195366] ***
*** center 1: selecting labels [1] (freq >= 2) [from [90, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [118, 49, 0]]
** centroid: 2, normalized-entropy: 0.873089548843259, [(1, 118), (2, 49)]
*** center 3: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 132, 24]]
** centroid: 4, normalized-entropy: 0.6193821946787638, [(2, 132), (3, 24)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [65, 13, 0]]
** centroid: 5, normalized-entropy: 0.6500224216483541, [(1, 65), (2, 13)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 50, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 25, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2333806402339424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333806402339424, 0.16019670763290725] ***
*** finished computation of 7 references, err: [Inf, 0.2333806402339424, 0.16019670763290725] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [30, 75, 0]]
** centroid: 1, normalized-entropy: 0.8631205685666311, [(1, 30), (2, 75)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [151, 10, 0]]
** centroid: 2, normalized-entropy: 0.33577155769871286, [(1, 151), (2, 10)]
*** center 3: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 42, 25]]
** centroid: 4, normalized-entropy: 0.9530483471581301, [(2, 42), (3, 25)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 91, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [112, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 36, 0]]
** centroid: 7, normalized-entropy: 0.9601186626422924, [(1, 58), (2, 36)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.218949266580929] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.218949266580929, 0.16899077334291843] ***
*** finished computation of 7 references, err: [Inf, 0.218949266580929, 0.16899077334291843] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [51, 14, 0]]
** centroid: 1, normalized-entropy: 0.7516499461153354, [(1, 51), (2, 14)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [5, 117, 21]]
** centroid: 3, normalized-entropy: 0.51260008109388, [(1, 5), (2, 117), (3, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [107, 3, 0]]
** centroid: 5, normalized-entropy: 0.1805246676420577, [(1, 107), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [33, 13, 0]]
** centroid: 6, normalized-entropy: 0.8589810370425965, [(1, 33), (2, 13)]
*** center 7: selecting labels [1, 2, 3] (freq >= 2) [from [38, 113, 2]]
** centroid: 7, normalized-entropy: 0.5702238851356776, [(1, 38), (2, 113), (3, 2)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.18702940332160137] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18702940332160137, 0.1596997876817743] ***
*** finished computation of 7 references, err: [Inf, 0.18702940332160137, 0.1596997876817743] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [75, 6, 0]]
** centroid: 1, normalized-entropy: 0.38094658570539014, [(1, 75), (2, 6)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [16, 86, 0]]
** centroid: 2, normalized-entropy: 0.6267511370265896, [(1, 16), (2, 86)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 6, 0]]
** centroid: 3, normalized-entropy: 0.2863969571159561, [(1, 114), (2, 6)]
*** center 4: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 102, 24]]
** centroid: 5, normalized-entropy: 0.7024665512903904, [(2, 102), (3, 24)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [14, 70, 0]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(1, 14), (2, 70)]
*** center 7: selecting labels [1] (freq >= 2) [from [45, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37429225934507165] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37429225934507165, 0.30405926269789535] ***
*** finished computation of 3 references, err: [Inf, 0.37429225934507165, 0.30405926269789535] ***
*** center 1: selecting labels [1] (freq >= 1) [from [181, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [155, 103, 0]]
** centroid: 2, normalized-entropy: 0.9704953286117103, [(1, 155), (2, 103)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [51, 151, 25]]
** centroid: 3, normalized-entropy: 0.7733400317471308, [(1, 51), (2, 151), (3, 25)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3884647823088262] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3884647823088262, 0.32078670695105727] ***
*** finished computation of 3 references, err: [Inf, 0.3884647823088262, 0.32078670695105727] ***
*** center 1: selecting labels [1] (freq >= 1) [from [188, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [37, 157, 23]]
** centroid: 2, normalized-entropy: 0.7042265213333424, [(1, 37), (2, 157), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [159, 103, 0]]
** centroid: 3, normalized-entropy: 0.9667896267661376, [(1, 159), (2, 103)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.366597477998026] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.366597477998026, 0.3086328758680816] ***
*** finished computation of 3 references, err: [Inf, 0.366597477998026, 0.3086328758680816] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [234, 21, 0]]
** centroid: 1, normalized-entropy: 0.4104161417181887, [(1, 234), (2, 21)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [42, 153, 24]]
** centroid: 2, normalized-entropy: 0.7368959739235442, [(1, 42), (2, 153), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [97, 96, 0]]
** centroid: 3, normalized-entropy: 0.9999806343593635, [(1, 97), (2, 96)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3213232711360261] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3213232711360261, 0.246222134559295] ***
*** finished computation of 3 references, err: [Inf, 0.3213232711360261, 0.246222134559295] ***
*** center 1: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [65, 94, 6]]
** centroid: 2, normalized-entropy: 0.735503991148503, [(1, 65), (2, 94), (3, 6)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [120, 160, 19]]
** centroid: 3, normalized-entropy: 0.7974836263633936, [(1, 120), (2, 160), (3, 19)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.24697214838625609] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.24697214838625609, 0.23725504329989383] ***
*** finished computation of 3 references, err: [Inf, 0.24697214838625609, 0.23725504329989383] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [93, 155, 21]]
** centroid: 1, normalized-entropy: 0.8045964692449501, [(1, 93), (2, 155), (3, 21)]
*** center 2: selecting labels [1] (freq >= 2) [from [182, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [109, 105, 2]]
** centroid: 3, normalized-entropy: 0.6727809298177765, [(1, 109), (2, 105), (3, 2)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3223130447871011] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3223130447871011, 0.24309443949681261] ***
*** finished computation of 3 references, err: [Inf, 0.3223130447871011, 0.24309443949681261] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 117, 24]]
** centroid: 1, normalized-entropy: 0.6581912658132184, [(2, 117), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [217, 87, 0]]
** centroid: 2, normalized-entropy: 0.8637409950906532, [(1, 217), (2, 87)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [156, 66, 0]]
** centroid: 3, normalized-entropy: 0.8779620013943914, [(1, 156), (2, 66)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 10)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8780187373001743, 0.8769907632183082, 0.8650027272781764, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 11
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.4072635652995235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4072635652995235, 0.3036465132343317] ***
*** finished computation of 3 references, err: [Inf, 0.4072635652995235, 0.3036465132343317] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [71, 179, 25]]
** centroid: 1, normalized-entropy: 0.7710481771957975, [(1, 71), (2, 179), (3, 25)]
*** center 2: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [114, 75, 0]]
** centroid: 3, normalized-entropy: 0.9690632527820694, [(1, 114), (2, 75)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.475230787530251] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.475230787530251, 0.31015398019276885] ***
*** finished computation of 3 references, err: [Inf, 0.475230787530251, 0.31015398019276885] ***
*** center 1: selecting labels [1] (freq >= 2) [from [136, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [97, 203, 23]]
** centroid: 2, normalized-entropy: 0.7657776523317926, [(1, 97), (2, 203), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [151, 57, 0]]
** centroid: 3, normalized-entropy: 0.8472000717686057, [(1, 151), (2, 57)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4022748984335021] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4022748984335021, 0.29021241896223093] ***
*** finished computation of 3 references, err: [Inf, 0.4022748984335021, 0.29021241896223093] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [95, 55, 0]]
** centroid: 1, normalized-entropy: 0.9480782435939054, [(1, 95), (2, 55)]
*** center 2: selecting labels [1] (freq >= 2) [from [225, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [53, 215, 24]]
** centroid: 3, normalized-entropy: 0.6740326799576142, [(1, 53), (2, 215), (3, 24)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 11)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 11
iteration 3 finished
generating 4 configurations using top 12 configurations, starting with 11)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 11
iteration 4 finished
generating 4 configurations using top 12 configurations, starting with 11)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 12
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.348775091280744] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.348775091280744, 0.3038390680907054] ***
*** starting iteration: 2; err: [Inf, 0.348775091280744, 0.3038390680907054] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.348775091280744, 0.3038390680907054, 0.29997877176576954] ***
*** starting iteration: 3; err: [Inf, 0.348775091280744, 0.3038390680907054, 0.29997877176576954] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.348775091280744, 0.3038390680907054, 0.29997877176576954, 0.29990823178443016] ***
*** finished computation of 3 references, err: [Inf, 0.348775091280744, 0.3038390680907054, 0.29997877176576954, 0.29990823178443016] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 174, 25]]
** centroid: 1, normalized-entropy: 0.5453252586238155, [(2, 174), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [227, 13, 0]]
** centroid: 2, normalized-entropy: 0.30383966664655226, [(1, 227), (2, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [160, 67, 0]]
** centroid: 3, normalized-entropy: 0.8752865007594228, [(1, 160), (2, 67)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3799885176066337] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799885176066337, 0.3006738089485795] ***
*** starting iteration: 2; err: [Inf, 0.3799885176066337, 0.3006738089485795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799885176066337, 0.3006738089485795, 0.29939580545376715] ***
*** starting iteration: 3; err: [Inf, 0.3799885176066337, 0.3006738089485795, 0.29939580545376715] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3799885176066337, 0.3006738089485795, 0.29939580545376715, 0.2993347403583587] ***
*** finished computation of 3 references, err: [Inf, 0.3799885176066337, 0.3006738089485795, 0.29939580545376715, 0.2993347403583587] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [83, 147, 23]]
** centroid: 1, normalized-entropy: 0.8184015320278413, [(1, 83), (2, 147), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [98, 113, 0]]
** centroid: 2, normalized-entropy: 0.9963513807630779, [(1, 98), (2, 113)]
*** center 3: selecting labels [1] (freq >= 1) [from [203, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.39231789157889235] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39231789157889235, 0.30708085750529857] ***
*** starting iteration: 2; err: [Inf, 0.39231789157889235, 0.30708085750529857] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39231789157889235, 0.30708085750529857, 0.3006021760242141] ***
*** starting iteration: 3; err: [Inf, 0.39231789157889235, 0.30708085750529857, 0.3006021760242141] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39231789157889235, 0.30708085750529857, 0.3006021760242141, 0.29856683912294646] ***
*** finished computation of 3 references, err: [Inf, 0.39231789157889235, 0.30708085750529857, 0.3006021760242141, 0.29856683912294646] ***
*** center 1: selecting labels [1] (freq >= 1) [from [202, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [119, 127, 0]]
** centroid: 2, normalized-entropy: 0.9992369888607426, [(1, 119), (2, 127)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [52, 143, 24]]
** centroid: 3, normalized-entropy: 0.7846426783249856, [(1, 52), (2, 143), (3, 24)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 12)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8810457163750577, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 12
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 12)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8810457163750577, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 13
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.36377613051226726] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36377613051226726, 0.2421617575308627] ***
*** finished computation of 3 references, err: [Inf, 0.36377613051226726, 0.2421617575308627] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 162, 25]]
** centroid: 1, normalized-entropy: 0.8114859784619457, [(1, 85), (2, 162), (3, 25)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [62, 90, 0]]
** centroid: 2, normalized-entropy: 0.9753817903274211, [(1, 62), (2, 90)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [240, 2, 0]]
** centroid: 3, normalized-entropy: 0.06905438212565047, [(1, 240), (2, 2)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.288525278706556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.288525278706556, 0.26106060218942845] ***
*** finished computation of 3 references, err: [Inf, 0.288525278706556, 0.26106060218942845] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [167, 102, 0]]
** centroid: 1, normalized-entropy: 0.9574623561467384, [(1, 167), (2, 102)]
*** center 2: selecting labels [1] (freq >= 2) [from [163, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [54, 158, 23]]
** centroid: 3, normalized-entropy: 0.7575943359859028, [(1, 54), (2, 158), (3, 23)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30386256821163143] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30386256821163143, 0.2669125811533368] ***
*** finished computation of 3 references, err: [Inf, 0.30386256821163143, 0.2669125811533368] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [222, 20, 0]]
** centroid: 1, normalized-entropy: 0.41142983137595496, [(1, 222), (2, 20)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [46, 135, 24]]
** centroid: 2, normalized-entropy: 0.7842006408473233, [(1, 46), (2, 135), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [105, 115, 0]]
** centroid: 3, normalized-entropy: 0.9985090989176322, [(1, 105), (2, 115)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8810457163750577, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.8550436664209119, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 3, 1.0, :rand, 0.6, 2) => 0.9260278242314172
finished with 14
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.3178593688252922] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3178593688252922, 0.174296550009422] ***
*** starting iteration: 2; err: [Inf, 0.3178593688252922, 0.174296550009422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017] ***
*** starting iteration: 3; err: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017, 0.15459580904896464] ***
*** starting iteration: 4; err: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017, 0.15459580904896464] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017, 0.15459580904896464, 0.153120875180987] ***
*** starting iteration: 5; err: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017, 0.15459580904896464, 0.153120875180987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017, 0.15459580904896464, 0.153120875180987, 0.1523112525286673] ***
*** finished computation of 7 references, err: [Inf, 0.3178593688252922, 0.174296550009422, 0.15870259484932017, 0.15459580904896464, 0.153120875180987, 0.1523112525286673] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [109, 4, 0]]
** centroid: 1, normalized-entropy: 0.22077992347107292, [(1, 109), (2, 4)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 16, 0]]
** centroid: 2, normalized-entropy: 0.7424875695421234, [(1, 60), (2, 16)]
*** center 3: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 53, 25]]
** centroid: 4, normalized-entropy: 0.9049382594235603, [(2, 53), (3, 25)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [11, 88, 0]]
** centroid: 5, normalized-entropy: 0.5032583347756457, [(1, 11), (2, 88)]
*** center 6: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 93, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1701694220210938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012] ***
*** starting iteration: 2; err: [Inf, 0.1701694220210938, 0.15804479178495012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246] ***
*** starting iteration: 3; err: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224] ***
*** starting iteration: 4; err: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022] ***
*** starting iteration: 5; err: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022, 0.14594693267278128] ***
*** starting iteration: 6; err: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022, 0.14594693267278128] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022, 0.14594693267278128, 0.1449013584170552] ***
*** starting iteration: 7; err: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022, 0.14594693267278128, 0.1449013584170552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022, 0.14594693267278128, 0.1449013584170552, 0.14403787891574574] ***
*** finished computation of 7 references, err: [Inf, 0.1701694220210938, 0.15804479178495012, 0.15241932665309246, 0.14850420281961224, 0.14724689733022, 0.14594693267278128, 0.1449013584170552, 0.14403787891574574] ***
*** center 1: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [78, 22, 0]]
** centroid: 2, normalized-entropy: 0.7601675029619658, [(1, 78), (2, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [63, 35, 0]]
** centroid: 3, normalized-entropy: 0.940285958670631, [(1, 63), (2, 35)]
*** center 4: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 86, 2]]
** centroid: 5, normalized-entropy: 0.1564910629057016, [(2, 86), (3, 2)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 85, 21]]
** centroid: 6, normalized-entropy: 0.7181384220154764, [(2, 85), (3, 21)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [87, 32, 0]]
** centroid: 7, normalized-entropy: 0.8398926865109739, [(1, 87), (2, 32)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2931062627819016] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414] ***
*** starting iteration: 2; err: [Inf, 0.2931062627819016, 0.20549234413406414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994] ***
*** starting iteration: 3; err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162] ***
*** starting iteration: 4; err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513] ***
*** starting iteration: 5; err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684] ***
*** starting iteration: 6; err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684, 0.14814382666411965] ***
*** starting iteration: 7; err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684, 0.14814382666411965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684, 0.14814382666411965, 0.14627299952300507] ***
*** starting iteration: 8; err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684, 0.14814382666411965, 0.14627299952300507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684, 0.14814382666411965, 0.14627299952300507, 0.14557157614375876] ***
*** finished computation of 7 references, err: [Inf, 0.2931062627819016, 0.20549234413406414, 0.18302454181277994, 0.16448696499559162, 0.15540870888709513, 0.1508374440733684, 0.14814382666411965, 0.14627299952300507, 0.14557157614375876] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 75, 24]]
** centroid: 1, normalized-entropy: 0.7990485210442682, [(2, 75), (3, 24)]
*** center 2: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [41, 83, 0]]
** centroid: 3, normalized-entropy: 0.9155841733615834, [(1, 41), (2, 83)]
*** center 4: selecting labels [1] (freq >= 2) [from [96, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [86, 18, 0]]
** centroid: 6, normalized-entropy: 0.6646953053493416, [(1, 86), (2, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [47, 24, 0]]
** centroid: 7, normalized-entropy: 0.9229192878686723, [(1, 47), (2, 24)]
finished with 11 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 14)
[0.9310118501735268, 0.9260278242314172, 0.917009824195453, 0.9140038241834648, 0.9119988251724779, 0.9039878201554848, 0.8810457163750577, 0.8780187373001743, 0.8769907632183082, 0.8650147153141164, 0.8650027272781764, 0.8550436664209119, 0.846046645447843, 0.8090245934557311]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :dnet, 0.6, 2) => 0.9310118501735268
finished with 14
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.22975846251798793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004] ***
*** starting iteration: 2; err: [Inf, 0.22975846251798793, 0.18273173538642004] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756] ***
*** starting iteration: 3; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727] ***
*** starting iteration: 4; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473] ***
*** starting iteration: 5; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803] ***
*** starting iteration: 6; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357] ***
*** starting iteration: 7; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727] ***
*** starting iteration: 8; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727, 0.14898599069658666] ***
*** starting iteration: 9; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727, 0.14898599069658666] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727, 0.14898599069658666, 0.14785232971282675] ***
*** starting iteration: 10; err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727, 0.14898599069658666, 0.14785232971282675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727, 0.14898599069658666, 0.14785232971282675, 0.14753452700050548] ***
*** finished computation of 7 references, err: [Inf, 0.22975846251798793, 0.18273173538642004, 0.16924246114026756, 0.16052984246704727, 0.15677314966870473, 0.15424795828852803, 0.15242412328906357, 0.15075141429621727, 0.14898599069658666, 0.14785232971282675, 0.14753452700050548] ***
*** center 1: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [183, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [103, 40, 0]]
** centroid: 3, normalized-entropy: 0.8550693920555504, [(1, 103), (2, 40)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [126, 26, 0]]
** centroid: 4, normalized-entropy: 0.6601070987550468, [(1, 126), (2, 26)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 128, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 97, 36]]
** centroid: 6, normalized-entropy: 0.842433971260027, [(2, 97), (3, 36)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 101, 0]]
** centroid: 7, normalized-entropy: 0.6303074079971902, [(1, 19), (2, 101)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1943662496835459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1943662496835459, 0.15134100954979657] ***
*** starting iteration: 2; err: [Inf, 0.1943662496835459, 0.15134100954979657] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1943662496835459, 0.15134100954979657, 0.14583402850013227] ***
*** starting iteration: 3; err: [Inf, 0.1943662496835459, 0.15134100954979657, 0.14583402850013227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1943662496835459, 0.15134100954979657, 0.14583402850013227, 0.1446333115240559] ***
*** starting iteration: 4; err: [Inf, 0.1943662496835459, 0.15134100954979657, 0.14583402850013227, 0.1446333115240559] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1943662496835459, 0.15134100954979657, 0.14583402850013227, 0.1446333115240559, 0.14404551577381788] ***
*** finished computation of 7 references, err: [Inf, 0.1943662496835459, 0.15134100954979657, 0.14583402850013227, 0.1446333115240559, 0.14404551577381788] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 78, 20]]
** centroid: 1, normalized-entropy: 0.7300166301457938, [(2, 78), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [48, 30, 0]]
** centroid: 2, normalized-entropy: 0.961236604722876, [(1, 48), (2, 30)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [39, 50, 0]]
** centroid: 3, normalized-entropy: 0.9889525767600615, [(1, 39), (2, 50)]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [13, 48, 0]]
** centroid: 6, normalized-entropy: 0.7473944462440388, [(1, 13), (2, 48)]
*** center 7: selecting labels [1] (freq >= 2) [from [46, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2313914492186159] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2313914492186159, 0.16749735692888498] ***
*** starting iteration: 2; err: [Inf, 0.2313914492186159, 0.16749735692888498] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904] ***
*** starting iteration: 3; err: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904, 0.15092798393964768] ***
*** starting iteration: 4; err: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904, 0.15092798393964768] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904, 0.15092798393964768, 0.14905997277237476] ***
*** starting iteration: 5; err: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904, 0.15092798393964768, 0.14905997277237476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904, 0.15092798393964768, 0.14905997277237476, 0.14833551890589297] ***
*** finished computation of 7 references, err: [Inf, 0.2313914492186159, 0.16749735692888498, 0.15618729954212904, 0.15092798393964768, 0.14905997277237476, 0.14833551890589297] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [43, 48, 0]]
** centroid: 1, normalized-entropy: 0.9978211842997324, [(1, 43), (2, 48)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 51, 17]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 51), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [52, 11, 0]]
** centroid: 3, normalized-entropy: 0.6681273338436138, [(1, 52), (2, 11)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 5, 0]]
** centroid: 4, normalized-entropy: 0.34351974100740135, [(1, 73), (2, 5)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 77, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [60, 2, 0]]
** centroid: 6, normalized-entropy: 0.2055925081850832, [(1, 60), (2, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2172847845759243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172847845759243, 0.16326296900585294] ***
*** starting iteration: 2; err: [Inf, 0.2172847845759243, 0.16326296900585294] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025] ***
*** starting iteration: 3; err: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025, 0.15172369423508644] ***
*** starting iteration: 4; err: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025, 0.15172369423508644] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025, 0.15172369423508644, 0.1501353506417945] ***
*** starting iteration: 5; err: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025, 0.15172369423508644, 0.1501353506417945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025, 0.15172369423508644, 0.1501353506417945, 0.14980575503129512] ***
*** finished computation of 7 references, err: [Inf, 0.2172847845759243, 0.16326296900585294, 0.15523784234561025, 0.15172369423508644, 0.1501353506417945, 0.14980575503129512] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [36, 39, 0]]
** centroid: 1, normalized-entropy: 0.998845535995202, [(1, 36), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 23, 0]]
** centroid: 2, normalized-entropy: 0.7861044688447759, [(1, 75), (2, 23)]
*** center 3: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 10]]
** centroid: 4, normalized-entropy: 0.6024308020404452, [(2, 58), (3, 10)]
*** center 5: selecting labels [1] (freq >= 2) [from [51, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 47, 6]]
** centroid: 6, normalized-entropy: 0.5095157180881823, [(2, 47), (3, 6)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 44, 0]]
** centroid: 7, normalized-entropy: 0.6912898694057888, [(1, 10), (2, 44)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1996205243896693] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1996205243896693, 0.15721395402448252] ***
*** starting iteration: 2; err: [Inf, 0.1996205243896693, 0.15721395402448252] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609] ***
*** starting iteration: 3; err: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609, 0.1495907863881439] ***
*** starting iteration: 4; err: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609, 0.1495907863881439] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609, 0.1495907863881439, 0.147770065988414] ***
*** starting iteration: 5; err: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609, 0.1495907863881439, 0.147770065988414] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609, 0.1495907863881439, 0.147770065988414, 0.14710288009559735] ***
*** finished computation of 7 references, err: [Inf, 0.1996205243896693, 0.15721395402448252, 0.1523453749101609, 0.1495907863881439, 0.147770065988414, 0.14710288009559735] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 1, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 79, 15]]
** centroid: 2, normalized-entropy: 0.6332905746550958, [(2, 79), (3, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [47, 31, 0]]
** centroid: 4, normalized-entropy: 0.9694309156463241, [(1, 47), (2, 31)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [33, 50, 0]]
** centroid: 5, normalized-entropy: 0.9695235828220429, [(1, 33), (2, 50)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [29, 30, 0]]
** centroid: 6, normalized-entropy: 0.9997927658541268, [(1, 29), (2, 30)]
*** center 7: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27125428411737085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27125428411737085, 0.17768596176803111] ***
*** starting iteration: 2; err: [Inf, 0.27125428411737085, 0.17768596176803111] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297] ***
*** starting iteration: 3; err: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775] ***
*** starting iteration: 4; err: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775, 0.14548888215888292] ***
*** starting iteration: 5; err: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775, 0.14548888215888292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775, 0.14548888215888292, 0.14410844460409133] ***
*** starting iteration: 6; err: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775, 0.14548888215888292, 0.14410844460409133] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775, 0.14548888215888292, 0.14410844460409133, 0.14366291987756266] ***
*** finished computation of 7 references, err: [Inf, 0.27125428411737085, 0.17768596176803111, 0.16303964412864297, 0.15044567101448775, 0.14548888215888292, 0.14410844460409133, 0.14366291987756266] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [20, 65, 0]]
** centroid: 1, normalized-entropy: 0.787126586201269, [(1, 20), (2, 65)]
*** center 2: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 64, 21]]
** centroid: 3, normalized-entropy: 0.806583102274714, [(2, 64), (3, 21)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [31, 39, 0]]
** centroid: 4, normalized-entropy: 0.9905577004075262, [(1, 31), (2, 39)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [34, 30, 0]]
** centroid: 5, normalized-entropy: 0.9971803988942641, [(1, 34), (2, 30)]
*** center 6: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22637402018345892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338] ***
*** starting iteration: 2; err: [Inf, 0.22637402018345892, 0.17016882209852338] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963] ***
*** starting iteration: 3; err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497] ***
*** starting iteration: 4; err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721] ***
*** starting iteration: 5; err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833] ***
*** starting iteration: 6; err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833, 0.15361064799688756] ***
*** starting iteration: 7; err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833, 0.15361064799688756] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833, 0.15361064799688756, 0.15186995391361416] ***
*** starting iteration: 8; err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833, 0.15361064799688756, 0.15186995391361416] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833, 0.15361064799688756, 0.15186995391361416, 0.15111613718234002] ***
*** finished computation of 7 references, err: [Inf, 0.22637402018345892, 0.17016882209852338, 0.16350714096426963, 0.16028911631647497, 0.15824655260890721, 0.15671249205432833, 0.15361064799688756, 0.15186995391361416, 0.15111613718234002] ***
*** center 1: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [76, 14, 0]]
** centroid: 2, normalized-entropy: 0.6235702082127973, [(1, 76), (2, 14)]
*** center 3: selecting labels [2] (freq >= 2) [from [1, 52, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [71, 1, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 83, 0]]
** centroid: 5, normalized-entropy: 0.35620480393132253, [(1, 6), (2, 83)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [43, 13, 0]]
** centroid: 6, normalized-entropy: 0.7817281222714539, [(1, 43), (2, 13)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 27, 16]]
** centroid: 7, normalized-entropy: 0.9522656254366643, [(2, 27), (3, 16)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26943081481009723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26943081481009723, 0.16944579868018628] ***
*** starting iteration: 2; err: [Inf, 0.26943081481009723, 0.16944579868018628] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458] ***
*** starting iteration: 3; err: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458, 0.14508473526127635] ***
*** starting iteration: 4; err: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458, 0.14508473526127635] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458, 0.14508473526127635, 0.14397568960487842] ***
*** starting iteration: 5; err: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458, 0.14508473526127635, 0.14397568960487842] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458, 0.14508473526127635, 0.14397568960487842, 0.1435386718995869] ***
*** finished computation of 7 references, err: [Inf, 0.26943081481009723, 0.16944579868018628, 0.14738477492332458, 0.14508473526127635, 0.14397568960487842, 0.1435386718995869] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [53, 19, 0]]
** centroid: 1, normalized-entropy: 0.8325582396745668, [(1, 53), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [73, 27, 0]]
** centroid: 2, normalized-entropy: 0.8414646362081756, [(1, 73), (2, 27)]
*** center 3: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 62, 18]]
** centroid: 5, normalized-entropy: 0.7691928290130138, [(2, 62), (3, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [1, 70, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [42, 14, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 42), (2, 14)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.26904484643554316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26904484643554316, 0.17115338422497733] ***
*** starting iteration: 2; err: [Inf, 0.26904484643554316, 0.17115338422497733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465] ***
*** starting iteration: 3; err: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465, 0.1512364452648908] ***
*** starting iteration: 4; err: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465, 0.1512364452648908] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465, 0.1512364452648908, 0.14993018537573516] ***
*** starting iteration: 5; err: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465, 0.1512364452648908, 0.14993018537573516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465, 0.1512364452648908, 0.14993018537573516, 0.14910357330087573] ***
*** finished computation of 7 references, err: [Inf, 0.26904484643554316, 0.17115338422497733, 0.15563261761609465, 0.1512364452648908, 0.14993018537573516, 0.14910357330087573] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 23, 18]]
** centroid: 1, normalized-entropy: 0.9892452969285004, [(2, 23), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 21, 0]]
** centroid: 2, normalized-entropy: 0.7973265101474423, [(1, 66), (2, 21)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [28, 47, 0]]
** centroid: 3, normalized-entropy: 0.9531971725430559, [(1, 28), (2, 47)]
*** center 4: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 49, 0]]
** centroid: 5, normalized-entropy: 0.5851569902762294, [(1, 8), (2, 49)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 50, 2]]
** centroid: 6, normalized-entropy: 0.23519338181924157, [(2, 50), (3, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2680560975763947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2680560975763947, 0.20055754032637924] ***
*** starting iteration: 2; err: [Inf, 0.2680560975763947, 0.20055754032637924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718] ***
*** starting iteration: 3; err: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718, 0.14681479967664926] ***
*** starting iteration: 4; err: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718, 0.14681479967664926] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718, 0.14681479967664926, 0.14555551885813475] ***
*** starting iteration: 5; err: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718, 0.14681479967664926, 0.14555551885813475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718, 0.14681479967664926, 0.14555551885813475, 0.14525698990095406] ***
*** finished computation of 7 references, err: [Inf, 0.2680560975763947, 0.20055754032637924, 0.1549300374686718, 0.14681479967664926, 0.14555551885813475, 0.14525698990095406] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [41, 54, 0]]
** centroid: 1, normalized-entropy: 0.9864497419502243, [(1, 41), (2, 54)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 60, 19]]
** centroid: 4, normalized-entropy: 0.7958812735955936, [(2, 60), (3, 19)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [31, 27, 0]]
** centroid: 5, normalized-entropy: 0.9965663713274552, [(1, 31), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 55, 0]]
** centroid: 6, normalized-entropy: 0.6193821946787638, [(1, 10), (2, 55)]
*** center 7: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2502923796772957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474] ***
*** starting iteration: 2; err: [Inf, 0.2502923796772957, 0.17225528527237474] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387] ***
*** starting iteration: 3; err: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316] ***
*** starting iteration: 4; err: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053] ***
*** starting iteration: 5; err: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053, 0.14648610473237933] ***
*** starting iteration: 6; err: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053, 0.14648610473237933] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053, 0.14648610473237933, 0.14503257164219394] ***
*** starting iteration: 7; err: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053, 0.14648610473237933, 0.14503257164219394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053, 0.14648610473237933, 0.14503257164219394, 0.14405452597700058] ***
*** finished computation of 7 references, err: [Inf, 0.2502923796772957, 0.17225528527237474, 0.15953309550881387, 0.15215340873785316, 0.14849367936328053, 0.14648610473237933, 0.14503257164219394, 0.14405452597700058] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [42, 25, 0]]
** centroid: 3, normalized-entropy: 0.9530483471581301, [(1, 42), (2, 25)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 15, 0]]
** centroid: 4, normalized-entropy: 0.8595316914502928, [(1, 38), (2, 15)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 70, 21]]
** centroid: 5, normalized-entropy: 0.7793498372920851, [(2, 70), (3, 21)]
*** center 6: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 26, 0]]
** centroid: 7, normalized-entropy: 0.8589810370425965, [(1, 66), (2, 26)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21902218088321387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21902218088321387, 0.1576277797129005] ***
*** starting iteration: 2; err: [Inf, 0.21902218088321387, 0.1576277797129005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817] ***
*** starting iteration: 3; err: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138] ***
*** starting iteration: 4; err: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138, 0.14775024173036216] ***
*** starting iteration: 5; err: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138, 0.14775024173036216] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138, 0.14775024173036216, 0.14660967538971453] ***
*** starting iteration: 6; err: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138, 0.14775024173036216, 0.14660967538971453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138, 0.14775024173036216, 0.14660967538971453, 0.14593041711486876] ***
*** finished computation of 7 references, err: [Inf, 0.21902218088321387, 0.1576277797129005, 0.15054862104728817, 0.14916590828169138, 0.14775024173036216, 0.14660967538971453, 0.14593041711486876] ***
*** center 1: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [34, 36, 0]]
** centroid: 2, normalized-entropy: 0.9994110647387552, [(1, 34), (2, 36)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [49, 13, 0]]
** centroid: 3, normalized-entropy: 0.7408656862339816, [(1, 49), (2, 13)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 72, 14]]
** centroid: 4, normalized-entropy: 0.6409441847875289, [(2, 72), (3, 14)]
*** center 5: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [7, 67, 0]]
** centroid: 6, normalized-entropy: 0.45162282218200417, [(1, 7), (2, 67)]
*** center 7: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19215402479097246] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462] ***
*** starting iteration: 2; err: [Inf, 0.19215402479097246, 0.16633577060699462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023] ***
*** starting iteration: 3; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645] ***
*** starting iteration: 4; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816] ***
*** starting iteration: 5; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767] ***
*** starting iteration: 6; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017] ***
*** starting iteration: 7; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017, 0.14462503402866422] ***
*** starting iteration: 8; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017, 0.14462503402866422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017, 0.14462503402866422, 0.14355513701960446] ***
*** starting iteration: 9; err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017, 0.14462503402866422, 0.14355513701960446] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017, 0.14462503402866422, 0.14355513701960446, 0.14305047748610378] ***
*** finished computation of 7 references, err: [Inf, 0.19215402479097246, 0.16633577060699462, 0.15775812757574023, 0.1542909022420645, 0.15157113392464816, 0.14856336665339767, 0.1461489093611017, 0.14462503402866422, 0.14355513701960446, 0.14305047748610378] ***
*** center 1: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [83, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 14]]
** centroid: 3, normalized-entropy: 0.7771529943226336, [(2, 47), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [44, 15, 0]]
** centroid: 4, normalized-entropy: 0.8179252501386403, [(1, 44), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [24, 56, 0]]
** centroid: 5, normalized-entropy: 0.8812908992306927, [(1, 24), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [75, 6, 0]]
** centroid: 6, normalized-entropy: 0.38094658570539014, [(1, 75), (2, 6)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 70, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21380591361597182] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21380591361597182, 0.1628835137365386] ***
*** starting iteration: 2; err: [Inf, 0.21380591361597182, 0.1628835137365386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365] ***
*** starting iteration: 3; err: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365, 0.1486935835555196] ***
*** starting iteration: 4; err: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365, 0.1486935835555196] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365, 0.1486935835555196, 0.1468168574795127] ***
*** starting iteration: 5; err: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365, 0.1486935835555196, 0.1468168574795127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365, 0.1486935835555196, 0.1468168574795127, 0.1461293195420876] ***
*** finished computation of 7 references, err: [Inf, 0.21380591361597182, 0.1628835137365386, 0.15239335775375365, 0.1486935835555196, 0.1468168574795127, 0.1461293195420876] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 59, 13]]
** centroid: 1, normalized-entropy: 0.6812908868842175, [(2, 59), (3, 13)]
*** center 2: selecting labels [1] (freq >= 2) [from [80, 1, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [77, 6, 0]]
** centroid: 4, normalized-entropy: 0.3744088453489206, [(1, 77), (2, 6)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [48, 17, 0]]
** centroid: 5, normalized-entropy: 0.829059069399666, [(1, 48), (2, 17)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 69, 3]]
** centroid: 6, normalized-entropy: 0.24988229283318547, [(2, 69), (3, 3)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [38, 34, 0]]
** centroid: 7, normalized-entropy: 0.9977724720899819, [(1, 38), (2, 34)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27970635156519713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805] ***
*** starting iteration: 2; err: [Inf, 0.27970635156519713, 0.18932211245875805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093] ***
*** starting iteration: 3; err: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775] ***
*** starting iteration: 4; err: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678] ***
*** starting iteration: 5; err: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678, 0.14773513332568108] ***
*** starting iteration: 6; err: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678, 0.14773513332568108] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678, 0.14773513332568108, 0.14646060550026596] ***
*** starting iteration: 7; err: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678, 0.14773513332568108, 0.14646060550026596] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678, 0.14773513332568108, 0.14646060550026596, 0.14624146840162575] ***
*** finished computation of 7 references, err: [Inf, 0.27970635156519713, 0.18932211245875805, 0.1684920057170093, 0.15667416038084775, 0.15114834065269678, 0.14773513332568108, 0.14646060550026596, 0.14624146840162575] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 74, 21]]
** centroid: 1, normalized-entropy: 0.762084924805724, [(2, 74), (3, 21)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [7, 63, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 7), (2, 63)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [40, 40, 0]]
** centroid: 3, normalized-entropy: 1.0, [(1, 40), (2, 40)]
*** center 4: selecting labels [1] (freq >= 2) [from [64, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [47, 32, 0]]
** centroid: 6, normalized-entropy: 0.9738354819891416, [(1, 47), (2, 32)]
*** center 7: selecting labels [1] (freq >= 2) [from [54, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2014933040868491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213] ***
*** starting iteration: 2; err: [Inf, 0.2014933040868491, 0.16564195981249213] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557] ***
*** starting iteration: 3; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517] ***
*** starting iteration: 4; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656] ***
*** starting iteration: 5; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248] ***
*** starting iteration: 6; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339] ***
*** starting iteration: 7; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339, 0.14831377449352295] ***
*** starting iteration: 8; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339, 0.14831377449352295] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339, 0.14831377449352295, 0.14706792808137834] ***
*** starting iteration: 9; err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339, 0.14831377449352295, 0.14706792808137834] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339, 0.14831377449352295, 0.14706792808137834, 0.14672543232981117] ***
*** finished computation of 7 references, err: [Inf, 0.2014933040868491, 0.16564195981249213, 0.1560457259118557, 0.15374311283044517, 0.15229752470366656, 0.15122652679309248, 0.15001538273133339, 0.14831377449352295, 0.14706792808137834, 0.14672543232981117] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [70, 23, 0]]
** centroid: 1, normalized-entropy: 0.8069896049203007, [(1, 70), (2, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [31, 30, 0]]
** centroid: 4, normalized-entropy: 0.999806132804711, [(1, 31), (2, 30)]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 47, 18]]
** centroid: 5, normalized-entropy: 0.8512243352621381, [(2, 47), (3, 18)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 75, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [39, 11, 0]]
** centroid: 7, normalized-entropy: 0.7601675029619658, [(1, 39), (2, 11)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2495487493830733] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643] ***
*** starting iteration: 2; err: [Inf, 0.2495487493830733, 0.19049644522182643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148] ***
*** starting iteration: 3; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787] ***
*** starting iteration: 4; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402] ***
*** starting iteration: 5; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005] ***
*** starting iteration: 6; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725] ***
*** starting iteration: 7; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273] ***
*** starting iteration: 8; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273, 0.1470754774212837] ***
*** starting iteration: 9; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273, 0.1470754774212837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273, 0.1470754774212837, 0.14575364798121154] ***
*** starting iteration: 10; err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273, 0.1470754774212837, 0.14575364798121154] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273, 0.1470754774212837, 0.14575364798121154, 0.1446059778574854] ***
*** finished computation of 7 references, err: [Inf, 0.2495487493830733, 0.19049644522182643, 0.17689382695034148, 0.16993314010556787, 0.16260560182761402, 0.155619748394005, 0.15117828874103725, 0.14866274002101273, 0.1470754774212837, 0.14575364798121154, 0.1446059778574854] ***
*** center 1: selecting labels [1] (freq >= 2) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [37, 15, 0]]
** centroid: 2, normalized-entropy: 0.8667256130949592, [(1, 37), (2, 15)]
*** center 3: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [28, 37, 0]]
** centroid: 4, normalized-entropy: 0.9861260846302384, [(1, 28), (2, 37)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [71, 12, 0]]
** centroid: 5, normalized-entropy: 0.5961045458832345, [(1, 71), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 69, 0]]
** centroid: 6, normalized-entropy: 0.24988229283318547, [(1, 3), (2, 69)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 62, 14]]
** centroid: 7, normalized-entropy: 0.6892019851173655, [(2, 62), (3, 14)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2468810302995844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847] ***
*** starting iteration: 2; err: [Inf, 0.2468810302995844, 0.17170567993912847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896] ***
*** starting iteration: 3; err: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888] ***
*** starting iteration: 4; err: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485] ***
*** starting iteration: 5; err: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485, 0.14922595301596447] ***
*** starting iteration: 6; err: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485, 0.14922595301596447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485, 0.14922595301596447, 0.1469431815771386] ***
*** starting iteration: 7; err: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485, 0.14922595301596447, 0.1469431815771386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485, 0.14922595301596447, 0.1469431815771386, 0.14596295069344342] ***
*** finished computation of 7 references, err: [Inf, 0.2468810302995844, 0.17170567993912847, 0.16086788593418896, 0.1550796440783888, 0.1519877728987485, 0.14922595301596447, 0.1469431815771386, 0.14596295069344342] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 56, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [60, 18, 0]]
** centroid: 2, normalized-entropy: 0.7793498372920851, [(1, 60), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [44, 35, 0]]
** centroid: 3, normalized-entropy: 0.9906174973781801, [(1, 44), (2, 35)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [78, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 32, 18]]
** centroid: 6, normalized-entropy: 0.9426831892554921, [(2, 32), (3, 18)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [11, 57, 0]]
** centroid: 7, normalized-entropy: 0.6385146263620961, [(1, 11), (2, 57)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2764331894516945] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267] ***
*** starting iteration: 2; err: [Inf, 0.2764331894516945, 0.21248024639487267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172] ***
*** starting iteration: 3; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467] ***
*** starting iteration: 4; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107] ***
*** starting iteration: 5; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337] ***
*** starting iteration: 6; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561] ***
*** starting iteration: 7; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572] ***
*** starting iteration: 8; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572, 0.15615253116749228] ***
*** starting iteration: 9; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572, 0.15615253116749228] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572, 0.15615253116749228, 0.15400784409698098] ***
*** starting iteration: 10; err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572, 0.15615253116749228, 0.15400784409698098] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572, 0.15615253116749228, 0.15400784409698098, 0.15264150292426348] ***
*** finished computation of 7 references, err: [Inf, 0.2764331894516945, 0.21248024639487267, 0.1948419398784172, 0.17948175195185467, 0.16717091490887107, 0.16110404966585337, 0.1597357653323561, 0.1587090203985572, 0.15615253116749228, 0.15400784409698098, 0.15264150292426348] ***
*** center 1: selecting labels [1] (freq >= 2) [from [84, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [41, 29, 0]]
** centroid: 2, normalized-entropy: 0.9786961448300948, [(1, 41), (2, 29)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 63, 20]]
** centroid: 3, normalized-entropy: 0.7966394665488286, [(2, 63), (3, 20)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [28, 33, 0]]
** centroid: 4, normalized-entropy: 0.995148095654003, [(1, 28), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [61, 20, 0]]
** centroid: 5, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [3, 48, 0]]
** centroid: 6, normalized-entropy: 0.32275695889739825, [(1, 3), (2, 48)]
*** center 7: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21789809489436449] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21789809489436449, 0.1601731035131961] ***
*** starting iteration: 2; err: [Inf, 0.21789809489436449, 0.1601731035131961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925] ***
*** starting iteration: 3; err: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313] ***
*** starting iteration: 4; err: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313, 0.1497347017098218] ***
*** starting iteration: 5; err: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313, 0.1497347017098218] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313, 0.1497347017098218, 0.14861382997129113] ***
*** starting iteration: 6; err: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313, 0.1497347017098218, 0.14861382997129113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313, 0.1497347017098218, 0.14861382997129113, 0.14786752196401357] ***
*** finished computation of 7 references, err: [Inf, 0.21789809489436449, 0.1601731035131961, 0.15299676751717925, 0.15099051878601313, 0.1497347017098218, 0.14861382997129113, 0.14786752196401357] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [77, 11, 0]]
** centroid: 1, normalized-entropy: 0.5435644431995963, [(1, 77), (2, 11)]
*** center 2: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [54, 11, 0]]
** centroid: 3, normalized-entropy: 0.6559420757694151, [(1, 54), (2, 11)]
*** center 4: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 72, 16]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(2, 72), (3, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [36, 24, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 36), (2, 24)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 79, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27880669026914984] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27880669026914984, 0.15507397400587797] ***
*** starting iteration: 2; err: [Inf, 0.27880669026914984, 0.15507397400587797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27880669026914984, 0.15507397400587797, 0.14382448366098105] ***
*** starting iteration: 3; err: [Inf, 0.27880669026914984, 0.15507397400587797, 0.14382448366098105] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27880669026914984, 0.15507397400587797, 0.14382448366098105, 0.14198149057477713] ***
*** starting iteration: 4; err: [Inf, 0.27880669026914984, 0.15507397400587797, 0.14382448366098105, 0.14198149057477713] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27880669026914984, 0.15507397400587797, 0.14382448366098105, 0.14198149057477713, 0.14158276621624827] ***
*** finished computation of 7 references, err: [Inf, 0.27880669026914984, 0.15507397400587797, 0.14382448366098105, 0.14198149057477713, 0.14158276621624827] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [2, 46, 0]]
** centroid: 1, normalized-entropy: 0.24988229283318547, [(1, 2), (2, 46)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 71, 20]]
** centroid: 2, normalized-entropy: 0.7597659876428757, [(2, 71), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [32, 60, 0]]
** centroid: 5, normalized-entropy: 0.9321115676166747, [(1, 32), (2, 60)]
*** center 6: selecting labels [1] (freq >= 2) [from [81, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [32, 22, 0]]
** centroid: 7, normalized-entropy: 0.975119064940866, [(1, 32), (2, 22)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24820375140756368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24820375140756368, 0.16824666726775467] ***
*** starting iteration: 2; err: [Inf, 0.24820375140756368, 0.16824666726775467] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126] ***
*** starting iteration: 3; err: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257] ***
*** starting iteration: 4; err: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257, 0.1526093539800495] ***
*** starting iteration: 5; err: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257, 0.1526093539800495] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257, 0.1526093539800495, 0.15143456100975164] ***
*** starting iteration: 6; err: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257, 0.1526093539800495, 0.15143456100975164] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257, 0.1526093539800495, 0.15143456100975164, 0.15075017220154405] ***
*** finished computation of 7 references, err: [Inf, 0.24820375140756368, 0.16824666726775467, 0.15849632719159126, 0.1550827150773257, 0.1526093539800495, 0.15143456100975164, 0.15075017220154405] ***
*** center 1: selecting labels [1] (freq >= 2) [from [50, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [30, 69, 0]]
** centroid: 2, normalized-entropy: 0.8849636363831529, [(1, 30), (2, 69)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [72, 2, 0]]
** centroid: 3, normalized-entropy: 0.1792560669283214, [(1, 72), (2, 2)]
*** center 4: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 59, 15]]
** centroid: 5, normalized-entropy: 0.7273006785144036, [(2, 59), (3, 15)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [74, 19, 0]]
** centroid: 6, normalized-entropy: 0.7304472862481346, [(1, 74), (2, 19)]
*** center 7: selecting labels [2] (freq >= 2) [from [0, 58, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19528264907747508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19528264907747508, 0.15933100050408394] ***
*** starting iteration: 2; err: [Inf, 0.19528264907747508, 0.15933100050408394] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19528264907747508, 0.15933100050408394, 0.15293084275443106] ***
*** starting iteration: 3; err: [Inf, 0.19528264907747508, 0.15933100050408394, 0.15293084275443106] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19528264907747508, 0.15933100050408394, 0.15293084275443106, 0.15027014798112215] ***
*** starting iteration: 4; err: [Inf, 0.19528264907747508, 0.15933100050408394, 0.15293084275443106, 0.15027014798112215] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19528264907747508, 0.15933100050408394, 0.15293084275443106, 0.15027014798112215, 0.1493393449112773] ***
*** finished computation of 7 references, err: [Inf, 0.19528264907747508, 0.15933100050408394, 0.15293084275443106, 0.15027014798112215, 0.1493393449112773] ***
*** center 1: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [71, 30, 0]]
** centroid: 2, normalized-entropy: 0.8776296673746861, [(1, 71), (2, 30)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 85, 18]]
** centroid: 3, normalized-entropy: 0.6684725699243225, [(2, 85), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 37, 0]]
** centroid: 5, normalized-entropy: 0.9989047442823606, [(1, 40), (2, 37)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [17, 34, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 17), (2, 34)]
*** center 7: selecting labels [1] (freq >= 2) [from [38, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23007265559537335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549] ***
*** starting iteration: 2; err: [Inf, 0.23007265559537335, 0.16615253937337549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894] ***
*** starting iteration: 3; err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434] ***
*** starting iteration: 4; err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595] ***
*** starting iteration: 5; err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352] ***
*** starting iteration: 6; err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352, 0.15218751183897256] ***
*** starting iteration: 7; err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352, 0.15218751183897256] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352, 0.15218751183897256, 0.1508409936353564] ***
*** starting iteration: 8; err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352, 0.15218751183897256, 0.1508409936353564] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352, 0.15218751183897256, 0.1508409936353564, 0.149888258470688] ***
*** finished computation of 7 references, err: [Inf, 0.23007265559537335, 0.16615253937337549, 0.1580231024324894, 0.15664674207754434, 0.15538304485869595, 0.15340531433839352, 0.15218751183897256, 0.1508409936353564, 0.149888258470688] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [7, 57, 0]]
** centroid: 1, normalized-entropy: 0.49802788653447644, [(1, 7), (2, 57)]
*** center 2: selecting labels [1] (freq >= 2) [from [67, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [28, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 2) [from [0, 79, 19]]
** centroid: 5, normalized-entropy: 0.7095128863456239, [(2, 79), (3, 19)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 27, 0]]
** centroid: 6, normalized-entropy: 0.9505668528932193, [(1, 46), (2, 27)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 36, 0]]
** centroid: 7, normalized-entropy: 0.9601186626422924, [(1, 58), (2, 36)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.203200177825056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798] ***
*** starting iteration: 2; err: [Inf, 0.203200177825056, 0.16468507957318798] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884] ***
*** starting iteration: 3; err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882] ***
*** starting iteration: 4; err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517] ***
*** starting iteration: 5; err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487] ***
*** starting iteration: 6; err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487, 0.1489592792512849] ***
*** starting iteration: 7; err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487, 0.1489592792512849] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487, 0.1489592792512849, 0.14790378257725387] ***
*** starting iteration: 8; err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487, 0.1489592792512849, 0.14790378257725387] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487, 0.1489592792512849, 0.14790378257725387, 0.14744380407780408] ***
*** finished computation of 7 references, err: [Inf, 0.203200177825056, 0.16468507957318798, 0.15832076204381884, 0.1549371110200882, 0.15281379011366517, 0.1508559519215487, 0.1489592792512849, 0.14790378257725387, 0.14744380407780408] ***
*** center 1: selecting labels [2] (freq >= 2) [from [0, 62, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [79, 15, 0]]
** centroid: 2, normalized-entropy: 0.6332905746550958, [(1, 79), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [5, 68, 0]]
** centroid: 3, normalized-entropy: 0.3602750564216625, [(1, 5), (2, 68)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 33, 20]]
** centroid: 4, normalized-entropy: 0.9561550236844027, [(2, 33), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [63, 3, 0]]
** centroid: 5, normalized-entropy: 0.2667649878030262, [(1, 63), (2, 3)]
*** center 6: selecting labels [1] (freq >= 2) [from [66, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [86, 0, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22470312803052367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815] ***
*** starting iteration: 2; err: [Inf, 0.22470312803052367, 0.17736025782860815] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374] ***
*** starting iteration: 3; err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003] ***
*** starting iteration: 4; err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653] ***
*** starting iteration: 5; err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077] ***
*** starting iteration: 6; err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077, 0.15105914809927345] ***
*** starting iteration: 7; err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077, 0.15105914809927345] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077, 0.15105914809927345, 0.1495200904980302] ***
*** starting iteration: 8; err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077, 0.15105914809927345, 0.1495200904980302] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077, 0.15105914809927345, 0.1495200904980302, 0.14861936983093618] ***
*** finished computation of 7 references, err: [Inf, 0.22470312803052367, 0.17736025782860815, 0.16459721594676374, 0.15850933799427003, 0.15491307440772653, 0.1526917993077077, 0.15105914809927345, 0.1495200904980302, 0.14861936983093618] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 66, 15]]
** centroid: 2, normalized-entropy: 0.6912898694057888, [(2, 66), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [62, 38, 0]]
** centroid: 3, normalized-entropy: 0.9580420222262997, [(1, 62), (2, 38)]
*** center 4: selecting labels [1] (freq >= 2) [from [94, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [23, 33, 0]]
** centroid: 5, normalized-entropy: 0.9768740126265281, [(1, 23), (2, 33)]
*** center 6: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [19, 53, 0]]
** centroid: 7, normalized-entropy: 0.8325582396745668, [(1, 19), (2, 53)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2241715404074639] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2241715404074639, 0.18127378434315325] ***
*** starting iteration: 2; err: [Inf, 0.2241715404074639, 0.18127378434315325] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697] ***
*** starting iteration: 3; err: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097] ***
*** starting iteration: 4; err: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097, 0.15250901989918203] ***
*** starting iteration: 5; err: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097, 0.15250901989918203] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097, 0.15250901989918203, 0.15125974095333367] ***
*** starting iteration: 6; err: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097, 0.15250901989918203, 0.15125974095333367] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097, 0.15250901989918203, 0.15125974095333367, 0.15043870089575648] ***
*** finished computation of 7 references, err: [Inf, 0.2241715404074639, 0.18127378434315325, 0.16242630747705697, 0.15499214955978097, 0.15250901989918203, 0.15125974095333367, 0.15043870089575648] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [86, 15, 0]]
** centroid: 1, normalized-entropy: 0.6061112071230008, [(1, 86), (2, 15)]
*** center 2: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 3: selecting labels [2] (freq >= 2) [from [0, 64, 1]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [39, 29, 0]]
** centroid: 4, normalized-entropy: 0.9843432030984676, [(1, 39), (2, 29)]
*** center 5: selecting labels [1] (freq >= 2) [from [72, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [48, 17, 0]]
** centroid: 6, normalized-entropy: 0.829059069399666, [(1, 48), (2, 17)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 57, 17]]
** centroid: 7, normalized-entropy: 0.77753986416076, [(2, 57), (3, 17)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27030110992398115] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673] ***
*** starting iteration: 2; err: [Inf, 0.27030110992398115, 0.17329026458598673] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662] ***
*** starting iteration: 3; err: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102] ***
*** starting iteration: 4; err: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775] ***
*** starting iteration: 5; err: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775, 0.1518637238703668] ***
*** starting iteration: 6; err: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775, 0.1518637238703668] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775, 0.1518637238703668, 0.1497043883036822] ***
*** starting iteration: 7; err: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775, 0.1518637238703668, 0.1497043883036822] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775, 0.1518637238703668, 0.1497043883036822, 0.14897715997695923] ***
*** finished computation of 7 references, err: [Inf, 0.27030110992398115, 0.17329026458598673, 0.15944233763031662, 0.15536236150097102, 0.15361293790023775, 0.1518637238703668, 0.1497043883036822, 0.14897715997695923] ***
*** center 1: selecting labels [1] (freq >= 2) [from [53, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [47, 11, 0]]
** centroid: 2, normalized-entropy: 0.7007495497162061, [(1, 47), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 69, 20]]
** centroid: 3, normalized-entropy: 0.7686913027030167, [(2, 69), (3, 20)]
*** center 4: selecting labels [2] (freq >= 2) [from [0, 66, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [40, 16, 0]]
** centroid: 5, normalized-entropy: 0.8631205685666311, [(1, 40), (2, 16)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [85, 28, 0]]
** centroid: 6, normalized-entropy: 0.8077527023327313, [(1, 85), (2, 28)]
*** center 7: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21728425810392946] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784] ***
*** starting iteration: 2; err: [Inf, 0.21728425810392946, 0.16723536609159784] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508] ***
*** starting iteration: 3; err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694] ***
*** starting iteration: 4; err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224] ***
*** starting iteration: 5; err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437] ***
*** starting iteration: 6; err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437, 0.14470273629855365] ***
*** starting iteration: 7; err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437, 0.14470273629855365] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437, 0.14470273629855365, 0.14356795867625624] ***
*** starting iteration: 8; err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437, 0.14470273629855365, 0.14356795867625624] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437, 0.14470273629855365, 0.14356795867625624, 0.14287616953626275] ***
*** finished computation of 7 references, err: [Inf, 0.21728425810392946, 0.16723536609159784, 0.15575676959380508, 0.15116330065205694, 0.14812867227569224, 0.14590980026498437, 0.14470273629855365, 0.14356795867625624, 0.14287616953626275] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 63, 17]]
** centroid: 1, normalized-entropy: 0.7462343013654809, [(2, 63), (3, 17)]
*** center 2: selecting labels [1] (freq >= 2) [from [65, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [38, 28, 0]]
** centroid: 3, normalized-entropy: 0.9833761901392238, [(1, 38), (2, 28)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [49, 13, 0]]
** centroid: 4, normalized-entropy: 0.7408656862339816, [(1, 49), (2, 13)]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 58, 1]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [62, 31, 0]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(1, 62), (2, 31)]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1960470969453454] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1960470969453454, 0.15194943538680672] ***
*** starting iteration: 2; err: [Inf, 0.1960470969453454, 0.15194943538680672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1960470969453454, 0.15194943538680672, 0.14639395079296083] ***
*** starting iteration: 3; err: [Inf, 0.1960470969453454, 0.15194943538680672, 0.14639395079296083] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1960470969453454, 0.15194943538680672, 0.14639395079296083, 0.14444352039694786] ***
*** starting iteration: 4; err: [Inf, 0.1960470969453454, 0.15194943538680672, 0.14639395079296083, 0.14444352039694786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1960470969453454, 0.15194943538680672, 0.14639395079296083, 0.14444352039694786, 0.14383426228258758] ***
*** finished computation of 7 references, err: [Inf, 0.1960470969453454, 0.15194943538680672, 0.14639395079296083, 0.14444352039694786, 0.14383426228258758] ***
*** center 1: selecting labels [1] (freq >= 2) [from [47, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 82, 14]]
** centroid: 2, normalized-entropy: 0.5993142373098089, [(2, 82), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [65, 27, 0]]
** centroid: 3, normalized-entropy: 0.8731720603476306, [(1, 65), (2, 27)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [38, 31, 0]]
** centroid: 4, normalized-entropy: 0.992563136012236, [(1, 38), (2, 31)]
*** center 5: selecting labels [1] (freq >= 2) [from [57, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [14, 62, 0]]
** centroid: 6, normalized-entropy: 0.6892019851173655, [(1, 14), (2, 62)]
*** center 7: selecting labels [1] (freq >= 2) [from [63, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23830977937206627] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23830977937206627, 0.16526283366978167] ***
*** starting iteration: 2; err: [Inf, 0.23830977937206627, 0.16526283366978167] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276] ***
*** starting iteration: 3; err: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276, 0.14877129630744457] ***
*** starting iteration: 4; err: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276, 0.14877129630744457] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276, 0.14877129630744457, 0.1465587043557316] ***
*** starting iteration: 5; err: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276, 0.14877129630744457, 0.1465587043557316] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276, 0.14877129630744457, 0.1465587043557316, 0.14577602742798626] ***
*** finished computation of 7 references, err: [Inf, 0.23830977937206627, 0.16526283366978167, 0.1534014013875276, 0.14877129630744457, 0.1465587043557316, 0.14577602742798626] ***
*** center 1: selecting labels [1] (freq >= 2) [from [52, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 63, 23]]
** centroid: 2, normalized-entropy: 0.8377698690066789, [(2, 63), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [75, 21, 0]]
** centroid: 3, normalized-entropy: 0.7578784625383954, [(1, 75), (2, 21)]
*** center 4: selecting labels [1] (freq >= 2) [from [80, 0, 0]]
*** center 5: selecting labels [2] (freq >= 2) [from [0, 59, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [50, 17, 0]]
** centroid: 6, normalized-entropy: 0.8171387756817725, [(1, 50), (2, 17)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [46, 14, 0]]
** centroid: 7, normalized-entropy: 0.7837769474847011, [(1, 46), (2, 14)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 392,3 => 36,1 => 572), Dict(2 => 368,3 => 28,1 => 604))
[ Info: ===== scores for single classifier: {"micro_f1":0.915,"precision":0.915,"recall":0.915,"macro_recall":0.9414111239082446,"macro_f1":0.8721747999873514,"accuracy":0.915,"class_f1":{"2":0.8874172185430462,"3":0.7887323943661972,"1":0.9403747870528109},"class_precision":{"2":0.8656330749354005,"3":0.6511627906976745,"1":0.968421052631579},"class_recall":{"2":0.9103260869565217,"3":1.0,"1":0.9139072847682119}}
[ Info: ===== scores for 1: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9823099625683845,"macro_f1":0.9606728017335326,"accuracy":0.975,"class_f1":{"2":0.96617050067659,"3":0.9333333333333333,"1":0.9825145711906743},"class_precision":{"2":0.9622641509433962,"3":0.875,"1":0.9882747068676717},"class_recall":{"2":0.970108695652174,"3":1.0,"1":0.9768211920529801}}
[ Info: ===== scores for 5: {"micro_f1":0.97,"precision":0.97,"recall":0.97,"macro_recall":0.9777809770611383,"macro_f1":0.9343936993747438,"accuracy":0.97,"class_f1":{"2":0.9591280653950953,"3":0.8615384615384616,"1":0.9825145711906743},"class_precision":{"2":0.9617486338797814,"3":0.7567567567567568,"1":0.9882747068676717},"class_recall":{"2":0.9565217391304348,"3":1.0,"1":0.9768211920529801}}
[ Info: ===== scores for 7: {"micro_f1":0.964,"precision":0.964,"recall":0.964,"macro_recall":0.973761877339476,"macro_f1":0.9181831595514459,"accuracy":0.964,"class_f1":{"2":0.9510869565217391,"3":0.8235294117647058,"1":0.979933110367893},"class_precision":{"2":0.9510869565217391,"3":0.7,"1":0.9898648648648649},"class_recall":{"2":0.9510869565217391,"3":1.0,"1":0.9701986754966887}}
[ Info: ===== scores for 9: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9719502831365774,"macro_f1":0.9093873310672268,"accuracy":0.962,"class_f1":{"2":0.9482288828337875,"3":0.8,"1":0.979933110367893},"class_precision":{"2":0.9508196721311475,"3":0.6666666666666666,"1":0.9898648648648649},"class_recall":{"2":0.9456521739130435,"3":1.0,"1":0.9701986754966887}}
[ Info: ===== scores for 11: {"micro_f1":0.962,"precision":0.962,"recall":0.962,"macro_recall":0.9715963624148191,"macro_f1":0.9058683742116522,"accuracy":0.962,"class_f1":{"2":0.9480874316939891,"3":0.7887323943661972,"1":0.9807852965747702},"class_precision":{"2":0.9532967032967034,"3":0.6511627906976745,"1":0.9898819561551433},"class_recall":{"2":0.9429347826086957,"3":1.0,"1":0.9718543046357616}}
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.973, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.975, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.97, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.967, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.964, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.975,"k":1,"kernel":"direct_kernel","dist":"l2_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.9823099625683845,"macro_f1":0.9606728017335326,"accuracy":0.975,"class_f1":{"2":0.96617050067659,"3":0.9333333333333333,"1":0.9825145711906743},"class_precision":{"2":0.9622641509433962,"3":0.875,"1":0.9882747068676717},"class_recall":{"2":0.970108695652174,"3":1.0,"1":0.9768211920529801}}
Test Summary: | Pass  Total
AKNC          |    8      8
[64, 2, 4, 3, 9, 1, 2, 8, 3, 5, 1, 5, 10, 8, 1, 11, 1, 6, 7, 46, 13, 16, 1, 6, 2, 2, 7, 12, 3, 4, 5, 1, 60, 4, 24, 1, 28, 4, 25, 7, 11, 16, 12, 2, 7, 3, 3, 9, 78, 16, 15, 112, 3, 11, 12, 1, 10, 22, 23, 5, 26, 7, 5, 10, 15, 10, 12, 13, 6, 1, 12, 49, 43, 4, 64, 65, 4, 3, 5, 13, 39, 6, 43, 11, 4, 8, 41, 15, 6, 13, 103, 2, 12, 17, 5, 6, 12, 55, 1, 5, 45, 128, 48, 164, 33, 2, 5, 14, 5, 11, 27, 10, 66, 26, 10, 49, 4, 3, 33, 20, 9, 7, 24, 9, 36, 5, 16, 7, 12, 61, 143, 23, 37, 5, 7, 13, 73, 16, 8, 213, 126, 29, 52, 3, 19, 23, 70, 4, 10, 43, 28, 14, 15, 6, 7, 5, 7, 2, 12, 10, 15, 4, 24, 9, 8, 8, 210, 30, 6, 14, 21, 28, 8, 19, 14, 4, 31, 123, 883, 34, 39, 6, 8, 79, 23, 4, 13, 4, 35, 17, 3, 4, 17, 48, 4, 38, 20, 41, 79, 6, 119, 3, 50, 28, 18, 2, 4, 220, 12, 14, 869, 23, 23, 2, 13, 15, 32, 23, 9, 20, 120, 7, 2, 19, 153, 9, 3, 8, 8, 74, 14, 79, 30, 17, 6, 190, 11, 90, 14, 21, 11, 16, 17, 7, 43, 46, 60, 15, 40, 377, 19, 158, 12, 20, 20, 29, 6, 60, 8, 21, 13, 2, 7, 35, 29, 114, 6, 3, 44, 14, 6, 10, 108, 19, 69, 10, 7, 47, 24, 28, 1, 13, 10, 21, 26, 44, 111, 75, 9, 11, 31, 20, 73, 9, 3, 16, 14, 73, 18, 11]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6970000000000002, speedup = 0.3241070423642363, eval_ratio = 0.0939)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3651041666666668,"recall":0.36024305555555564,"f1":null,"seconds":0.00020045414566993713,"exhaustive_search_seconds":0.0003592967987060547,"evaluations":530.9375,"distances_sum":1753.9407252016604}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5295138888888888,"recall":0.5295138888888888,"f1":null,"seconds":0.00037268176674842834,"exhaustive_search_seconds":0.0003592967987060547,"evaluations":704.4375,"distances_sum":1665.3883517091033}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6519097222222217,"recall":0.6519097222222217,"f1":null,"seconds":0.000482264906167984,"exhaustive_search_seconds":0.0003592967987060547,"evaluations":862.1328125,"distances_sum":1603.4423087078953}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7291666666666657,"recall":0.7291666666666657,"f1":0.7291666666666657,"seconds":0.0006475038826465607,"exhaustive_search_seconds":0.0003592967987060547,"evaluations":998.6328125,"distances_sum":1565.6352105632698}
KCenters.DeloneInvIndex> optimize! step region_expansion=6, performance {"precision":0.7847222222222212,"recall":0.7847222222222212,"f1":0.7847222222222212,"seconds":0.0008005760610103607,"exhaustive_search_seconds":0.0003592967987060547,"evaluations":1157.109375,"distances_sum":1546.7289830927448}
KCenters.DeloneInvIndex> reached performance {"precision":0.8298611111111102,"recall":0.8298611111111102,"f1":0.8298611111111102,"seconds":0.0007267668843269348,"exhaustive_search_seconds":0.0003592967987060547,"evaluations":1283.5078125,"distances_sum":1535.5756210287384}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.8499999999999999, speedup = 0.5799966750642608, eval_ratio = 0.132997)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
