Julia Version 1.6.0-DEV.186
Commit 98e678fd98 (2020-06-06 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_LuxfC6/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_LuxfC6/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2172184280155865
curgen: 20 fitness: 0.21723055102664657
curgen: 30 fitness: 0.21723055102664657
curgen: 40 fitness: 0.21723268622024244
curgen: 50 fitness: 0.21723268622024244
CoordinateCreature{Array{Float64,1}}([0.22240236658973592], -0.21723268622024244) 0.22240236658973592 -0.21723268622024244
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2580763928976366
curgen: 100 fitness: 3.258198469900336
curgen: 150 fitness: 3.2582506146801995
curgen: 200 fitness: 3.2583491525510038
curgen: 250 fitness: 3.2583705453465854
curgen: 300 fitness: 3.2583835631675475
curgen: 350 fitness: 3.2583952820761546
curgen: 400 fitness: 3.2584536328058644
curgen: 450 fitness: 3.2584560573990813
curgen: 500 fitness: 3.258477450730106
CoordinateCreature{Array{Float64,1}}([0.22291764838469985, -0.22248067077071584, -0.2223947018540406, 0.22269310770483922, -0.2225791955778472, 0.2226117283412945, 0.22282714932650435, -0.22238907500350555, -0.22304871131835094, -0.22239529689512816, 0.22271858041904616, 0.2225367772907952, -0.22244671544535025, 0.22258635216690506, -0.22250724502371713], -3.258477450730106) [0.22291764838469985, -0.22248067077071584, -0.2223947018540406, 0.22269310770483922, -0.2225791955778472, 0.2226117283412945, 0.22282714932650435, -0.22238907500350555, -0.22304871131835094, -0.22239529689512816, 0.22271858041904616, 0.2225367772907952, -0.22244671544535025, 0.22258635216690506, -0.22250724502371713] -3.258477450730106
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002365093978482946
curgen: 100 fitness: -0.0022994355667265154
curgen: 150 fitness: -0.0019791236884998398
curgen: 200 fitness: -0.0019791236884998398
curgen: 250 fitness: -0.001061321235511059
curgen: 300 fitness: -0.0008680845922981462
curgen: 350 fitness: -0.000845986217598238
curgen: 400 fitness: -0.0008455391388793032
curgen: 450 fitness: -0.00042127662248958586
curgen: 500 fitness: -0.00027321307399574835
CoordinateCreature{Array{Float64,1}}([-0.0008237844778267195, -0.0004211630306977011, 5.000472368948397e-5, -6.642439477074096e-5, -0.0002113161756437769, -0.0003493891799040559, -0.0001688740752956572, -0.0001655017937817031, 0.00039913216710194227, 0.000191522603646427, -0.00027625415282519984, 9.384993596863074e-6, -9.816300841757835e-5, -9.771530686623514e-5, -3.7652230160776124e-6], 0.00027321307399574835) [-0.0008237844778267195, -0.0004211630306977011, 5.000472368948397e-5, -6.642439477074096e-5, -0.0002113161756437769, -0.0003493891799040559, -0.0001688740752956572, -0.0001655017937817031, 0.00039913216710194227, 0.000191522603646427, -0.00027625415282519984, 9.384993596863074e-6, -9.816300841757835e-5, -9.771530686623514e-5, -3.7652230160776124e-6] 0.00027321307399574835
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
