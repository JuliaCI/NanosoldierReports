Julia Version 1.6.0-DEV.192
Commit 07385aba13 (2020-06-08 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed FileIO ────── v1.3.0
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_jGYX9W/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_jGYX9W/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723337249396182
curgen: 20 fitness: 0.21723337249396182
curgen: 30 fitness: 0.21723337249396182
curgen: 40 fitness: 0.21723337249396182
curgen: 50 fitness: 0.21723337249396182
CoordinateCreature{Array{Float64,1}}([0.22247218170131483], -0.21723337249396182) 0.22247218170131483 -0.21723337249396182
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257801071745651
curgen: 100 fitness: 3.2580285522728922
curgen: 150 fitness: 3.258034547987388
curgen: 200 fitness: 3.2582226689296285
curgen: 250 fitness: 3.258255472381367
curgen: 300 fitness: 3.2582780280808903
curgen: 350 fitness: 3.2583533347866394
curgen: 400 fitness: 3.258423025340134
curgen: 450 fitness: 3.2584366949515267
curgen: 500 fitness: 3.2584484052802356
CoordinateCreature{Array{Float64,1}}([-0.22298424517283702, -0.22253330965227822, -0.22280832117495714, 0.2225911737316087, 0.22278174880578666, -0.22300146236243354, 0.22289930928141874, -0.22234872578632722, -0.22268067573158493, -0.22216943761594427, -0.22250193734746196, -0.22212168787250033, 0.22259021285490746, 0.2226407341284265, 0.22264366084055082], -3.2584580699338757) [-0.22298424517283702, -0.22253330965227822, -0.22280832117495714, 0.2225911737316087, 0.22278174880578666, -0.22300146236243354, 0.22289930928141874, -0.22234872578632722, -0.22268067573158493, -0.22216943761594427, -0.22250193734746196, -0.22212168787250033, 0.22259021285490746, 0.2226407341284265, 0.22264366084055082] -3.2584580699338757
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0046545202881986825
curgen: 100 fitness: -0.004093760234241017
curgen: 150 fitness: -0.0034547348052456073
curgen: 200 fitness: -0.002765108951706452
curgen: 250 fitness: -0.0027413758510874686
curgen: 300 fitness: -0.0027413758510874686
curgen: 350 fitness: -0.0027383704180579116
curgen: 400 fitness: -0.0027383704180579116
curgen: 450 fitness: -0.0016098616909800967
curgen: 500 fitness: -0.0006905044126597204
CoordinateCreature{Array{Float64,1}}([0.0005411882291124811, 0.0007827437821223866, -0.0006342323413804879, 0.00022747644403446534, -0.001215993804013895, -0.0004901256814645281, -0.0003850763271873554, -0.00012890549335017241, -1.6080406286021507e-5, -1.2777605255358043e-5, 4.3267195483432993e-5, -1.664965478443206e-5, 0.00048353298029526646, 3.2341408913346944e-7, -2.836951701873239e-5], 0.0006905044126597204) [0.0005411882291124811, 0.0007827437821223866, -0.0006342323413804879, 0.00022747644403446534, -0.001215993804013895, -0.0004901256814645281, -0.0003850763271873554, -0.00012890549335017241, -1.6080406286021507e-5, -1.2777605255358043e-5, 4.3267195483432993e-5, -1.664965478443206e-5, 0.00048353298029526646, 3.2341408913346944e-7, -2.836951701873239e-5] 0.0006905044126597204
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
