Julia Version 1.6.0-DEV.192
Commit 07385aba13 (2020-06-08 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_XvFlLR/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_XvFlLR/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.10658640996067766 0.06723359751102014; -0.10658640996067766 0.0 0.059063278103885564; -0.06723359751102014 -0.059063278103885564 0.0])
dAA = so3([0.0 -0.005891288736592042 -0.12007922788323251; 0.005891288736592042 0.0 0.14586770546878317; 0.12007922788323251 -0.14586770546878317 0.0])
dAA = so3([0.0 -0.07327991909262342 -0.0432018550423908; 0.07327991909262342 0.0 0.08996224127599906; 0.0432018550423908 -0.08996224127599906 0.0])
dAA = Quaternion(0.9984109484281753, [0.030501377374276935, 0.04736742066625966, 0.0012535934145705382])
dAA = SO3([0.9838425167296574 0.13260494978079151 -0.12029060465675495; -0.13721700010529458 0.990059943977653 -0.030867494441081833; 0.11500172675728629 0.04687466932790456 0.992258720404231])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9556664395470776 0.03953928590447329 -0.29178468293174015; 0.06791154044450297 0.9346299428141189 0.3490772015897506; 0.2865129647989188 -0.35341691366633976 0.8905092959294094]), [-0.5906327810388556, 0.6723359751102013, -1.0658640996067765])
xj = SE3(SO3([0.9720991662419951 0.004658721810956692 0.23452400154932113; 0.03138551771487157 0.9882296611912278 -0.14972336497567976; -0.23246109409831858 0.15290661546499304 0.9605110133036754]), [-0.8996224127599906, -0.4320185504239079, 0.7327991909262341])
Dx = SE3(SO3([0.8645308706743257 0.11537411042460621 0.48915763133658974; 0.1499256339123127 0.8697734501432026 -0.47012386636075093; -0.47969644354225055 0.47977386347082385 0.7346484614992368]), [0.1450509138158126, -1.6800580653017176, 1.3063798348511493])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
