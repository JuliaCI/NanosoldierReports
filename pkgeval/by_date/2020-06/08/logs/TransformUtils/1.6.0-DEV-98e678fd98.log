Julia Version 1.6.0-DEV.186
Commit 98e678fd98 (2020-06-06 18:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_wIiHsO/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_wIiHsO/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.1572494858395995 -0.10506738606118371; 0.1572494858395995 0.0 0.12148737111373727; 0.10506738606118371 -0.12148737111373727 0.0])
dAA = so3([0.0 0.11378828055412829 0.06312844792732646; -0.11378828055412829 0.0 0.12063431872832052; -0.06312844792732646 -0.12063431872832052 0.0])
dAA = so3([0.0 -0.20311224887344903 -0.014152660717916652; 0.20311224887344903 0.0 0.03471366519739085; 0.014152660717916652 -0.03471366519739085 0.0])
dAA = Quaternion(0.992724016416682, [-0.022863896514280328, 0.08636050952394321, 0.08073494819767048])
dAA = SO3([0.9981826159703869 -0.013979332463500093 -0.058617774082525574; 0.01587221303823698 0.9993633800392795 0.03195164298960859; 0.05813379419738484 -0.03282396838198447 0.997769035935609])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9479465341579352 0.25182154800777784 0.19489298688491835; -0.2986427328980904 0.9154612910183817 0.26970936716050053; -0.11049835503354047 -0.3138734340557103 0.9430130332762943]), [-1.2148737111373726, -1.050673860611837, 1.5724948583959948])
xj = SE3(SO3([0.8288663803220263 -0.3923139102500358 0.39883620622529853; 0.3581958646066848 0.9197773583241191 0.16032882988712474; -0.4297397423447493 0.009970302835513803 0.9028977499755089]), [-0.3471366519739085, -0.1415266071791665, 2.03112248873449])
Dx = SE3(SO3([0.7262339552089955 -0.6476791375336803 0.23042564333234858; 0.67152475231454 0.7400980585271681 -0.03618522893684917; -0.14710115339586738 0.18101546499662502 0.9724169126982835]), [0.5003805186971451, 0.9068529785683723, 0.8468132304999592])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
