Julia Version 1.6.0-DEV.220
Commit 1e76111203 (2020-06-12 16:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.3.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.3.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_57Z5bG/Project.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_57Z5bG/Manifest.toml`
  [5789e2e9] FileIO v1.3.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723107704495384
curgen: 20 fitness: 0.21723212730493288
curgen: 30 fitness: 0.21723212730493288
curgen: 40 fitness: 0.21723212730493288
curgen: 50 fitness: 0.2172327612572105
CoordinateCreature{Array{Float64,1}}([0.22240829132838594], -0.2172327612572105) 0.22240829132838594 -0.2172327612572105
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257982692737173
curgen: 100 fitness: 3.258040285227575
curgen: 150 fitness: 3.258402177462527
curgen: 200 fitness: 3.258402177462527
curgen: 250 fitness: 3.25842721609566
curgen: 300 fitness: 3.2584361012288965
curgen: 350 fitness: 3.2584368947018456
curgen: 400 fitness: 3.2584368947018456
curgen: 450 fitness: 3.2584550517634767
curgen: 500 fitness: 3.2584791549529712
CoordinateCreature{Array{Float64,1}}([0.22238618260645715, 0.22272367124859008, 0.22272659513034504, 0.22222379694937447, -0.2225442140898364, -0.22249428739451887, 0.22259507824128857, 0.22253152565746126, 0.2223949021406918, -0.22258017711933445, -0.2223479097178152, 0.22219910043630858, 0.2224812787012739, 0.22275929558614843, 0.22291629979340363], -3.2584791549529712) [0.22238618260645715, 0.22272367124859008, 0.22272659513034504, 0.22222379694937447, -0.2225442140898364, -0.22249428739451887, 0.22259507824128857, 0.22253152565746126, 0.2223949021406918, -0.22258017711933445, -0.2223479097178152, 0.22219910043630858, 0.2224812787012739, 0.22275929558614843, 0.22291629979340363] -3.2584791549529712
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0013203243110240237
curgen: 100 fitness: -0.0013071783816371862
curgen: 150 fitness: -0.0013071783816371862
curgen: 200 fitness: -0.0010904898168746513
curgen: 250 fitness: -0.0010904898168746513
curgen: 300 fitness: -0.0010904898168746513
curgen: 350 fitness: -0.0010904898168746513
curgen: 400 fitness: -0.0010904898168746513
curgen: 450 fitness: -0.0010904898168746513
curgen: 500 fitness: -0.0009648526614682851
CoordinateCreature{Array{Float64,1}}([0.00023408571779357355, -0.0011937833447010348, 7.564435770312142e-5, -0.0008648511989533469, -0.001006278047704044, -0.00026229273317066645, 0.00010812299082007572, -0.0007614994572588951, -0.000508460140502761, 0.00042540497758883355, -0.00035958725084866625, 0.00021236372005700743, 0.000511025724761879, -1.7958700822336138e-5, -0.00028536728230104964], 0.0009648526614682851) [0.00023408571779357355, -0.0011937833447010348, 7.564435770312142e-5, -0.0008648511989533469, -0.001006278047704044, -0.00026229273317066645, 0.00010812299082007572, -0.0007614994572588951, -0.000508460140502761, 0.00042540497758883355, -0.00035958725084866625, 0.00021236372005700743, 0.000511025724761879, -1.7958700822336138e-5, -0.00028536728230104964] 0.0009648526614682851
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
