Julia Version 1.6.0-DEV.220
Commit 1e76111203 (2020-06-12 16:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_BTB1hJ/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_BTB1hJ/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0461749909086166 -0.017550696298576644; -0.0461749909086166 0.0 0.028692839501949553; 0.017550696298576644 -0.028692839501949553 0.0])
dAA = so3([0.0 -0.06632679005275254 0.056365795802558766; 0.06632679005275254 0.0 -0.06074123357525777; -0.056365795802558766 0.06074123357525777 0.0])
dAA = so3([0.0 0.006845104831515181 -0.08407391210821077; -0.006845104831515181 0.0 -0.11060438618996193; 0.08407391210821077 0.11060438618996193 0.0])
dAA = Quaternion(0.9946408379954362, [-0.001955007932097941, -0.025125728540084047, -0.1002720255158528])
dAA = SO3([0.9826566785483348 0.05738367379080864 -0.17633197692598102; -0.06224005376714377 0.9978158291050914 -0.022130225809567795; 0.1746769240953644 0.03272132591429434 0.984081951373458])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9764625154636682 -0.1532413916628581 0.15178284414121354; 0.17451442854737081 0.9748706560024071 -0.1384626963995038; -0.1267504245482042 0.1616919291327402 0.9786674869076744]), [-0.2869283950194955, -0.17550696298576643, -0.4617499090861659])
xj = SE3(SO3([0.868815181528314 0.4800896691410812 -0.12113665807644618; -0.4804442343430038 0.876571843308784 0.028198248257744064; 0.11972267133875474 0.033700342761576046 0.9922352386734029]), [1.1060438618996193, -0.8407391210821077, -0.06845104831515181])
Dx = SE3(SO3([0.7493461072026806 0.6174924675409187 -0.23913064243299437; -0.5821512437320676 0.7864236323310869 0.20648922473675552; 0.3155635293271322 -0.015521695828971158 0.9487774954736211]), [1.194241786463774, -0.7983830660315403, 0.6884479369810885])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
