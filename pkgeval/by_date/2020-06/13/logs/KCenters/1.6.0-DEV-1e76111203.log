Julia Version 1.6.0-DEV.220
Commit 1e76111203 (2020-06-12 16:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed LearnBase ─────────────────── v0.2.2
  Installed PooledArrays ──────────────── v0.5.3
  Installed Reexport ──────────────────── v0.2.0
  Installed DataValueInterfaces ───────── v1.0.0
  Installed DataAPI ───────────────────── v1.3.0
  Installed KCenters ──────────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.17
  Installed MLDataUtils ───────────────── v0.5.1
  Installed Compat ────────────────────── v3.12.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed InvertedIndices ───────────── v1.0.0
  Installed MappedArrays ──────────────── v0.2.2
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Parsers ───────────────────── v1.0.5
  Installed MLDataPattern ─────────────── v0.5.3
  Installed SimilaritySearch ──────────── v0.3.19
  Installed JSON ──────────────────────── v0.21.0
  Installed CategoricalArrays ─────────── v0.7.7
  Installed OrderedCollections ────────── v1.2.0
  Installed DataFrames ────────────────── v0.20.2
  Installed Missings ──────────────────── v0.4.3
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed TableTraits ───────────────── v1.0.0
  Installed Tables ────────────────────── v1.0.4
  Installed StatsBase ─────────────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.12.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.5
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_sjNl06/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_sjNl06/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.12.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.5
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9360659371813138
[ Info: 0.8321307849884033
[ Info: 0.5568768373628458
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.32713686463733516
mean(cdnet.distances) = 0.37693116153279943
mean(crand.distances) = 0.34195522305866083
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.173828125, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.173828125,"f1":null,"seconds":3.214925527572632e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":4.6484375,"distances_sum":498.3912162755884}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.517578125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.517578125,"f1":null,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.0234375,"distances_sum":1502.3886417990475}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3642578125, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3642578125,"f1":null,"seconds":3.721565008163452e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":5.890625,"distances_sum":1069.8539670074656}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.517578125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.517578125,"f1":null,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.0234375,"distances_sum":1502.3886417990475}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.82421875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.82421875,"f1":0.8959452006327014,"seconds":5.843117833137512e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.40625,"distances_sum":2567.4251896670385}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6474609375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6474609375,"f1":0.7768221361971368,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":7.8515625,"distances_sum":1914.0466099162193}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8251953125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8251953125,"f1":0.8940538628038632,"seconds":5.388632416725159e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.3515625,"distances_sum":2578.340961902839}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9101570304695309,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4140625,"distances_sum":2663.9549405744756}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9101570304695309,"seconds":6.277114152908325e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.4140625,"distances_sum":2663.9549405744756}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9345867673992682,"seconds":6.0461461544036865e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7578125,"distances_sum":2777.359725140042}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9508413461538466,"seconds":6.9588422775268555e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.7890625,"distances_sum":2913.834442649908}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":6,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9580586080586084,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2938.6587309019114}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9436527014652019,"seconds":5.8002769947052e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.6953125,"distances_sum":2868.8699805745414}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9580586080586084,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2938.6587309019114}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":6,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9580586080586084,"seconds":5.738809704780579e-6,"exhaustive_search_seconds":1.4845281839370728e-6,"evaluations":8.84375,"distances_sum":2938.6587309019114}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2021484375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2021484375,"f1":null,"seconds":4.537403583526611e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":4.5625,"distances_sum":551.3819659040224}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5537109375, conf: {"ssize":5,"bsize":3}, perf: {"precision":1.0,"recall":0.5537109375,"f1":0.6920036560661565,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.0546875,"distances_sum":1440.267395704325}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5537109375,"state":{"ssize":5,"bsize":3},"perf":{"precision":1.0,"recall":0.5537109375,"f1":0.6920036560661565,"seconds":4.805624485015869e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":7.0546875,"distances_sum":1440.267395704325}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8466611513486523,"seconds":6.683170795440674e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.078125,"distances_sum":2066.286407224413}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7705078125, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7705078125,"f1":0.8608686452436461,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.1875,"distances_sum":2168.8712835921933}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7705078125,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7705078125,"f1":0.8608686452436461,"seconds":5.1781535148620605e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.1875,"distances_sum":2168.8712835921933}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9581730769230773,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6953125,"distances_sum":2848.6815463555045}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9481658966033972,"seconds":6.9122761487960815e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.7265625,"distances_sum":2787.3276297725647}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8759765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8759765625,"f1":0.9274553571428578,"seconds":6.798654794692993e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.734375,"distances_sum":2598.0382978222597}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9427941849816855,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.8515625,"distances_sum":2677.1280086526135}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9581730769230773,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6953125,"distances_sum":2848.6815463555045}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":7,"bsize":9},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9581730769230773,"seconds":5.677342414855957e-6,"exhaustive_search_seconds":1.4994293451309204e-6,"evaluations":8.6953125,"distances_sum":2848.6815463555045}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.6787109375,"f1":0.7970241563991571,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.765625,"distances_sum":1940.2281597613346}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6533203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6533203125,"f1":0.7771941600066609,"seconds":4.863366484642029e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.65625,"distances_sum":1843.0771756836214}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6787109375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.6787109375,"f1":0.7970241563991571,"seconds":5.017966032028198e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.765625,"distances_sum":1940.2281597613346}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8291015625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8291015625,"f1":0.9003033424908433,"seconds":5.558133125305176e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3046875,"distances_sum":2473.2458694393767}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":2,"bsize":7}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9066620879120889,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3046875,"distances_sum":2560.8901543843285}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8467844655344663,"seconds":5.127862095832825e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.875,"distances_sum":2202.9974899376516}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":2,"bsize":7},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9066620879120889,"seconds":5.280598998069763e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.3046875,"distances_sum":2560.8901543843285}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9605540293040297,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2908.9039617119843}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9605540293040297,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2908.9039617119843}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.931640625,"state":{"ssize":4,"bsize":10},"perf":{"precision":1.0,"recall":0.931640625,"f1":0.9605540293040297,"seconds":5.9586018323898315e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2908.9039617119843}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8015009296259304,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.9296875,"distances_sum":1891.6492274790037}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6884765625,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.6884765625,"f1":0.8015009296259304,"seconds":4.7497451305389404e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":7.9296875,"distances_sum":1891.6492274790037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.859375,"f1":0.9193738553113561,"seconds":5.66430389881134e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.5625,"distances_sum":2589.081513660657}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":4,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9444826007326014,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.703125,"distances_sum":2785.6556057858825}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.783203125, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.783203125,"f1":0.8717693764568772,"seconds":4.950910806655884e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.3046875,"distances_sum":2225.2253170865}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90234375,"state":{"ssize":4,"bsize":8},"perf":{"precision":1.0,"recall":0.90234375,"f1":0.9444826007326014,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.703125,"distances_sum":2785.6556057858825}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9482543498168504,"seconds":6.457790732383728e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.7734375,"distances_sum":2800.073801347891}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692536630036633,"seconds":6.282702088356018e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2951.242665693866}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2985.5554833816527}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2985.5554833816527}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.973717948717949,"seconds":6.1783939599990845e-6,"exhaustive_search_seconds":1.4621764421463013e-6,"evaluations":8.8984375,"distances_sum":2985.5554833816527}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3779296875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.8203125,"distances_sum":979.4493286776853}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1474609375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.1474609375,"f1":null,"seconds":3.3974647521972656e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":4.8046875,"distances_sum":409.64419371303444}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1552734375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1552734375,"f1":null,"seconds":3.3285468816757202e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":4.8203125,"distances_sum":417.1985916066661}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.3779296875,"state":{"ssize":1,"bsize":2},"perf":{"precision":null,"recall":0.3779296875,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":5.8203125,"distances_sum":979.4493286776853}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6689453125, conf: {"ssize":7,"bsize":4}, perf: {"precision":1.0,"recall":0.6689453125,"f1":0.7915605228105237,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.453125,"distances_sum":1863.3439699500802}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.662109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.662109375,"f1":0.7824387418137426,"seconds":4.811212420463562e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.3359375,"distances_sum":1866.4870693881383}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6689453125,"state":{"ssize":7,"bsize":4},"perf":{"precision":1.0,"recall":0.6689453125,"f1":0.7915605228105237,"seconds":4.762783646583557e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.453125,"distances_sum":1863.3439699500802}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.728515625, conf: {"ssize":9,"bsize":5}, perf: {"precision":1.0,"recall":0.728515625,"f1":0.8332375957375967,"seconds":5.122274160385132e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.734375,"distances_sum":2070.928038407349}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7353515625, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7353515625,"f1":0.8384230352980361,"seconds":5.3979456424713135e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":7.8046875,"distances_sum":2151.3123747667278}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8212890625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.8212890625,"f1":0.8954415376290384,"seconds":5.563721060752869e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.2265625,"distances_sum":2426.7766083600627}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9111328125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9111328125,"f1":0.9496394230769238,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.75,"distances_sum":2847.255124330843}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9359520687645693,"seconds":6.964430212974548e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.5859375,"distances_sum":2712.7938716894273}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9111328125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9496394230769238,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.75,"distances_sum":2847.255124330843}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9111328125,"state":{"ssize":5,"bsize":8},"perf":{"precision":1.0,"recall":0.9111328125,"f1":0.9496394230769238,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4528632164001465e-6,"evaluations":8.75,"distances_sum":2847.255124330843}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.673828125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.673828125,"f1":0.7957662129537136,"seconds":7.82310962677002e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.8515625,"distances_sum":1724.4288848120937}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2177734375, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.2177734375,"f1":null,"seconds":3.5688281059265137e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":6.375,"distances_sum":540.4069577610468}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.693359375, conf: {"ssize":5,"bsize":4}, perf: {"precision":1.0,"recall":0.693359375,"f1":0.8088047369297378,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.90625,"distances_sum":1797.6520773519883}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.693359375,"state":{"ssize":5,"bsize":4},"perf":{"precision":1.0,"recall":0.693359375,"f1":0.8088047369297378,"seconds":5.2247196435928345e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":7.90625,"distances_sum":1797.6520773519883}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8408203125, conf: {"ssize":9,"bsize":6}, perf: {"precision":1.0,"recall":0.8408203125,"f1":0.9074690934065941,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.40625,"distances_sum":2323.7354767024685}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8596476440226448,"seconds":5.461275577545166e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.1796875,"distances_sum":2071.489485510327}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8408203125,"state":{"ssize":9,"bsize":6},"perf":{"precision":1.0,"recall":0.8408203125,"f1":0.9074690934065941,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.40625,"distances_sum":2323.7354767024685}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8798828125, conf: {"ssize":9,"bsize":7}, perf: {"precision":1.0,"recall":0.8798828125,"f1":0.9305694305694311,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.640625,"distances_sum":2489.45983448118}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8740234375, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8740234375,"f1":0.9289320054945062,"seconds":5.7891011238098145e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.640625,"distances_sum":2468.1641099500935}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9305694305694311,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.640625,"distances_sum":2489.45983448118}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8798828125,"state":{"ssize":9,"bsize":7},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9305694305694311,"seconds":5.9604644775390625e-6,"exhaustive_search_seconds":1.391395926475525e-6,"evaluations":8.640625,"distances_sum":2489.45983448118}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.19140625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.19140625,"f1":null,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.21875,"distances_sum":414.18818027329104}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.19140625,"state":{"ssize":2,"bsize":1},"perf":{"precision":null,"recall":0.19140625,"f1":null,"seconds":3.6582350730895996e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":5.21875,"distances_sum":414.18818027329104}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9861142113095237,"recall":0.759765625,"f1":0.8529142081876463,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6484375,"distances_sum":1542.0617166449308}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.353515625, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.353515625,"f1":null,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":6.21875,"distances_sum":674.2108281277683}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.650390625, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9781901041666665,"recall":0.650390625,"f1":0.7706349856740486,"seconds":6.3534826040267944e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.0234375,"distances_sum":1293.3581625020377}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7431640625, conf: {"ssize":2,"bsize":5}, perf: {"precision":0.9840866815476191,"recall":0.7431640625,"f1":0.8381765586843715,"seconds":5.640089511871338e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.4765625,"distances_sum":1533.9224376889385}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.759765625,"state":{"ssize":1,"bsize":5},"perf":{"precision":0.9861142113095237,"recall":0.759765625,"f1":0.8529142081876463,"seconds":5.543231964111328e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6484375,"distances_sum":1542.0617166449308}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8828125, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9755115327380953,"recall":0.8828125,"f1":0.923499742445055,"seconds":5.921348929405212e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9375,"distances_sum":1939.7317632000609}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9833519345238095,"recall":0.8193359375,"f1":0.8872758751665009,"seconds":5.54695725440979e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.7265625,"distances_sum":1741.623464577038}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9854631696428572,"recall":0.923828125,"f1":0.950155248397436,"seconds":6.355345249176025e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.9296875,"distances_sum":2122.52688963923}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8017578125, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.985556175595238,"recall":0.8017578125,"f1":0.8771229421620051,"seconds":5.297362804412842e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.6953125,"distances_sum":1641.874483511272}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":6,"bsize":9}, perf: {"precision":0.981742931547619,"recall":0.908203125,"f1":0.9406657795329673,"seconds":5.774199962615967e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.921875,"distances_sum":2045.9775894548266}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":0.9868861607142858,"recall":0.9345703125,"f1":0.9573703640109891,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.96875,"distances_sum":2134.79342653459}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9868861607142858,"recall":0.9345703125,"f1":0.9573703640109891,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.96875,"distances_sum":2134.79342653459}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":0.9868861607142858,"recall":0.9345703125,"f1":0.9573703640109891,"seconds":5.8766454458236694e-6,"exhaustive_search_seconds":1.4603137969970703e-6,"evaluations":8.96875,"distances_sum":2134.79342653459}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.55078125, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.55078125,"f1":0.6867670523920528,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.0078125,"distances_sum":1137.1870024490208}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7216796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7216796875,"f1":0.8239014457764465,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.25,"distances_sum":1498.4775461163101}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6328125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6328125,"f1":0.7608506077256085,"seconds":4.479661583900452e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":7.875,"distances_sum":1265.8546257580442}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7216796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7216796875,"f1":0.8239014457764465,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.25,"distances_sum":1498.4775461163101}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9468635531135535,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":2109.154658212167}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9354624542124547,"seconds":5.835667252540588e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7109375,"distances_sum":2018.3213149527246}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9331075174825181,"seconds":5.422160029411316e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":2014.8791798843797}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.814453125, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.814453125,"f1":0.8902191558441567,"seconds":5.17629086971283e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.609375,"distances_sum":1736.4733268802518}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8578281093906103,"seconds":4.9192458391189575e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.5078125,"distances_sum":1629.7352893377945}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9328671328671333,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.7421875,"distances_sum":1992.0915015529956}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9468635531135535,"seconds":5.4370611906051636e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.6953125,"distances_sum":2109.154658212167}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.96484375, conf: {"ssize":1,"bsize":13}, perf: {"precision":1.0,"recall":0.96484375,"f1":0.9803228021978025,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2299.9305786745977}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673363095238099,"seconds":5.288049578666687e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.84375,"distances_sum":2233.042435875692}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9541015625, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9541015625,"f1":0.9742788461538463,"seconds":5.597248673439026e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.921875,"distances_sum":2260.114671566024}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9701465201465206,"seconds":5.766749382019043e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8125,"distances_sum":2240.3656252079822}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.947265625, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.947265625,"f1":0.9706845238095244,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.875,"distances_sum":2223.5515406847067}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9522035256410262,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.8203125,"distances_sum":2110.460815444175}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9404296875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9404296875,"f1":0.9664835164835169,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.90625,"distances_sum":2194.3372810672035}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.96484375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9803228021978025,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2299.9305786745977}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.96484375,"state":{"ssize":1,"bsize":13},"perf":{"precision":1.0,"recall":0.96484375,"f1":0.9803228021978025,"seconds":5.593523383140564e-6,"exhaustive_search_seconds":1.257285475730896e-6,"evaluations":8.953125,"distances_sum":2299.9305786745977}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.375, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.375,"f1":0.5323378010878009,"seconds":3.7159770727157593e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":6.0390625,"distances_sum":728.1928482258061}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.533203125, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.533203125,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.359375,"distances_sum":1022.4530501472786}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.533203125,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.533203125,"f1":null,"seconds":4.28222119808197e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":7.359375,"distances_sum":1022.4530501472786}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6494140625, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.6494140625,"f1":0.7776494338994346,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.171875,"distances_sum":1287.3895105283318}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6494140625,"state":{"ssize":3,"bsize":4},"perf":{"precision":1.0,"recall":0.6494140625,"f1":0.7776494338994346,"seconds":5.401670932769775e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.171875,"distances_sum":1287.3895105283318}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.65625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.65625,"f1":0.7819191225441232,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.15625,"distances_sum":1319.0280855175226}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.83203125, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.83203125,"f1":0.8998447732822739,"seconds":5.455687642097473e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6640625,"distances_sum":1768.7348306072195}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.929601648351649,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.703125,"distances_sum":1962.1598381473061}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7529296875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7529296875,"f1":0.8510848526473536,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.6953125,"distances_sum":1533.8482696426274}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7996066433566441,"seconds":4.90434467792511e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.328125,"distances_sum":1333.8713589819263}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8779296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.929601648351649,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.703125,"distances_sum":1962.1598381473061}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8779296875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.8779296875,"f1":0.929601648351649,"seconds":5.4426491260528564e-6,"exhaustive_search_seconds":1.2349337339401245e-6,"evaluations":8.703125,"distances_sum":1962.1598381473061}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.2353515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6328125,"distances_sum":523.1820918008762}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.2353515625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.2353515625,"f1":null,"seconds":3.5222619771957397e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6328125,"distances_sum":523.1820918008762}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.181640625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.181640625,"f1":null,"seconds":2.855435013771057e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.625,"distances_sum":419.3682987220457}}, beam: 2, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.181640625,"state":{"ssize":1,"bsize":1},"perf":{"precision":null,"recall":0.181640625,"f1":null,"seconds":2.855435013771057e-6,"exhaustive_search_seconds":1.2740492820739746e-6,"evaluations":4.625,"distances_sum":419.3682987220457}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.4365234375, conf: {"ssize":3,"bsize":2}, perf: {"precision":null,"recall":0.4365234375,"f1":null,"seconds":4.159286618232727e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":5.8046875,"distances_sum":869.4059357137787}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6337890625, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6337890625,"f1":0.7656296828171836,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.4453125,"distances_sum":1286.1416512918531}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6337890625,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6337890625,"f1":0.7656296828171836,"seconds":4.431232810020447e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.4453125,"distances_sum":1286.1416512918531}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.767578125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.767578125,"f1":0.8605977355977364,"seconds":4.98257577419281e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7265625,"distances_sum":1701.1825325542961}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7919921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7919921875,"f1":0.8772581585081594,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7734375,"distances_sum":1771.4848915670043}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7919921875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7919921875,"f1":0.8772581585081594,"seconds":5.029141902923584e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.7734375,"distances_sum":1771.4848915670043}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120885,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2422.200127452525}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8955078125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.8955078125,"f1":0.9405620421245426,"seconds":5.636364221572876e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.65625,"distances_sum":2222.4249385539233}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9443359375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120885,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2422.200127452525}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9443359375,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9443359375,"f1":0.9691620879120885,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2422.200127452525}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6980545496170502,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5078125,"distances_sum":1100.7334623505926}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.552734375,"state":{"ssize":3,"bsize":3},"perf":{"precision":1.0,"recall":0.552734375,"f1":0.6980545496170502,"seconds":4.2691826820373535e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.5078125,"distances_sum":1100.7334623505926}}, beam: 2, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5732421875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5732421875,"f1":0.7151159604284609,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6171875,"distances_sum":1115.3321806252575}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":4,"bsize":3}, perf: {"precision":1.0,"recall":0.5673828125,"f1":0.7067741286491294,"seconds":4.263594746589661e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6015625,"distances_sum":1148.2728994109973}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5732421875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5732421875,"f1":0.7151159604284609,"seconds":4.420056939125061e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":6.6171875,"distances_sum":1115.3321806252575}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9045704295704303,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0625,"distances_sum":1906.583926814542}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7744140625,"f1":0.865774850149851,"seconds":5.101785063743591e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.65625,"distances_sum":1666.4857943926354}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6728515625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6728515625,"f1":0.7921890609390617,"seconds":4.848465323448181e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.4375,"distances_sum":1376.7195457010228}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8925657675657682,"seconds":5.343928933143616e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":7.96875,"distances_sum":1859.3547137721948}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8369140625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9045704295704303,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0625,"distances_sum":1906.583926814542}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8369140625,"state":{"ssize":1,"bsize":6},"perf":{"precision":1.0,"recall":0.8369140625,"f1":0.9045704295704303,"seconds":5.491077899932861e-6,"exhaustive_search_seconds":1.2423843145370483e-6,"evaluations":8.0625,"distances_sum":1906.583926814542}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6416015625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6416015625,"f1":0.7727428821178829,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.390625,"distances_sum":1300.5171376538142}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6416015625,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.6416015625,"f1":0.7727428821178829,"seconds":4.595145583152771e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.390625,"distances_sum":1300.5171376538142}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.837890625, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.837890625,"f1":0.9073775183150191,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0546875,"distances_sum":1903.8651232710392}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7646484375, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.7646484375,"f1":0.8588349150849158,"seconds":4.868954420089722e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.7265625,"distances_sum":1652.0084426269154}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.658203125, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.658203125,"f1":0.7837501040626047,"seconds":4.610046744346619e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":7.4921875,"distances_sum":1350.7309980000193}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.837890625,"state":{"ssize":6,"bsize":6},"perf":{"precision":1.0,"recall":0.837890625,"f1":0.9073775183150191,"seconds":5.260109901428223e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.0546875,"distances_sum":1903.8651232710392}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2302.820487820895}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.849609375, conf: {"ssize":10,"bsize":7}, perf: {"precision":1.0,"recall":0.849609375,"f1":0.9124229936729943,"seconds":5.463138222694397e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.3828125,"distances_sum":1995.3378603817428}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9572973901098906,"seconds":5.580484867095947e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.78125,"distances_sum":2302.3303147386237}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2302.820487820895}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":8,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9635645604395608,"seconds":5.735084414482117e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8671875,"distances_sum":2302.820487820895}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7752466283716292,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.3515625,"distances_sum":1292.1452470992383}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.44921875, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.44921875,"f1":null,"seconds":3.509223461151123e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":5.84375,"distances_sum":860.805284580563}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7752466283716292,"seconds":4.498288035392761e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.3515625,"distances_sum":1292.1452470992383}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.748046875, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.748046875,"f1":0.8462166305916313,"seconds":5.032867193222046e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6875,"distances_sum":1607.5904940679343}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.875, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.875,"f1":0.9284886988011996,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5859375,"distances_sum":2083.1253986477595}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.759765625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.759765625,"f1":0.8535183566433574,"seconds":4.94346022605896e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.6875,"distances_sum":1672.1534409933167}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.677734375, conf: {"ssize":3,"bsize":4}, perf: {"precision":1.0,"recall":0.677734375,"f1":0.7960185647685656,"seconds":4.552304744720459e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.59375,"distances_sum":1448.2539940038023}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.875,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.875,"f1":0.9284886988011996,"seconds":5.552545189857483e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5859375,"distances_sum":2083.1253986477595}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8203125,"distances_sum":2347.9994594481705}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9350560897435908,"seconds":5.448237061500549e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5390625,"distances_sum":2116.638089677501}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9495993589743598,"seconds":5.602836608886719e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.7890625,"distances_sum":2219.4000156919783}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9588198260073264,"seconds":5.790963768959045e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8203125,"distances_sum":2301.837000512648}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8837890625, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8837890625,"f1":0.9349015567765577,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.6015625,"distances_sum":2114.844794631177}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8203125,"distances_sum":2347.9994594481705}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9375,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9375,"f1":0.9648122710622715,"seconds":5.668029189109802e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8203125,"distances_sum":2347.9994594481705}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.646484375, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.646484375,"f1":0.7746586746586754,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.5546875,"distances_sum":1334.3490081675425}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.552734375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.552734375,"f1":0.6946253399378405,"seconds":3.857538104057312e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.59375,"distances_sum":1056.0638920191252}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.646484375,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.646484375,"f1":0.7746586746586754,"seconds":4.706904292106628e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.5546875,"distances_sum":1334.3490081675425}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.787109375, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.787109375,"f1":0.8739843489843498,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8046875,"distances_sum":1708.831087798942}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.787109375,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.787109375,"f1":0.8739843489843498,"seconds":5.003064870834351e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.8046875,"distances_sum":1708.831087798942}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9577209249084255,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2270.42400965425}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8466796875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8466796875,"f1":0.9102257117882123,"seconds":3.25031578540802e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.0546875,"distances_sum":1956.6740230707208}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577209249084255,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2270.42400965425}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9248046875,"state":{"ssize":2,"bsize":8},"perf":{"precision":1.0,"recall":0.9248046875,"f1":0.9577209249084255,"seconds":3.4421682357788086e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.828125,"distances_sum":2270.42400965425}}, n: 9
mean(cfft.distances) = 0.32884378498875544
mean(cdnet.distances) = 0.5756119260854842
mean(crand.distances) = 0.33852166151913843
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.8666666666666667
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.9066666666666666
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8777777777777779
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.8977777777777778
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.8533333333333332
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.88
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9422222222222222
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444445
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.9199999999999999
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.9111111111111111
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8711111111111111
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9333333333333332
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.9066666666666666
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9311111111111111
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9333333333333332
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8533333333333332
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.8711111111111111
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.8777777777777778
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8577777777777778
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.8866666666666667
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9355555555555556
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8888888888888888
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.9022222222222221
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.8977777777777778
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.9
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.8933333333333334
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.8933333333333332
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8577777777777778
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9733333333333334
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.94
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [3] (freq >= 1) [from [0, 0, 22]]
*** center 2: selecting labels [1] (freq >= 1) [from [20, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 9, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 9, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 10: selecting labels [2, 3] (freq >= 1) [from [0, 3, 15]]
** centroid: 10, normalized-entropy: 0.6500224216483541, [(2, 3), (3, 15)]
*** center 11: selecting labels [1] (freq >= 1) [from [22, 0, 0]]
*** center 12: selecting labels [3] (freq >= 1) [from [0, 0, 5]]
finished with 14 centroids; started with 12
nc.class_map = [3, 1, 2, 1, 3, 2, 3, 2, 2, 3, 2, 3, 1, 3]
acc = 0.9666666666666667
*** finished computation of 12 references, err: [Inf, 0.5576255004604658] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 1, 22]]
** centroid: 1, normalized-entropy: 0.2580186686648155, [(2, 1), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [11, 0, 0]]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 4, 0]]
*** center 4: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 5: selecting labels [1] (freq >= 1) [from [7, 0, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 12, 6]]
** centroid: 6, normalized-entropy: 0.9182958340544894, [(2, 12), (3, 6)]
*** center 7: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 8: selecting labels [2, 3] (freq >= 1) [from [0, 3, 2]]
** centroid: 8, normalized-entropy: 0.9709505944546688, [(2, 3), (3, 2)]
*** center 9: selecting labels [2] (freq >= 1) [from [0, 12, 0]]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 13]]
*** center 11: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 12: selecting labels [1] (freq >= 1) [from [32, 0, 0]]
finished with 14 centroids; started with 12
acc = 0.9666666666666667
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4805483721495905] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4805483721495905, 0.24879094325397555] ***
*** starting iteration: 2; err: [Inf, 0.4805483721495905, 0.24879094325397555] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923] ***
*** starting iteration: 3; err: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923, 0.2298366026533348] ***
*** starting iteration: 4; err: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923, 0.2298366026533348] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923, 0.2298366026533348, 0.2287131023520531] ***
*** starting iteration: 5; err: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923, 0.2298366026533348, 0.2287131023520531] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923, 0.2298366026533348, 0.2287131023520531, 0.22834307812406002] ***
*** finished computation of 3 references, err: [Inf, 0.4805483721495905, 0.24879094325397555, 0.23310242241909923, 0.2298366026533348, 0.2287131023520531, 0.22834307812406002] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [6, 172, 22]]
** centroid: 1, normalized-entropy: 0.43482552258845625, [(1, 6), (2, 172), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [142, 60, 0]]
** centroid: 2, normalized-entropy: 0.8776296673746861, [(1, 142), (2, 60)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [262, 2, 0]]
** centroid: 3, normalized-entropy: 0.06425462540840794, [(1, 262), (2, 2)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32332671876868296] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885] ***
*** starting iteration: 2; err: [Inf, 0.32332671876868296, 0.3030477637191885] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052] ***
*** starting iteration: 3; err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586] ***
*** starting iteration: 4; err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808] ***
*** starting iteration: 5; err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173] ***
*** starting iteration: 6; err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173, 0.23042676401236603] ***
*** starting iteration: 7; err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173, 0.23042676401236603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173, 0.23042676401236603, 0.22910959264780137] ***
*** starting iteration: 8; err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173, 0.23042676401236603, 0.22910959264780137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173, 0.23042676401236603, 0.22910959264780137, 0.22893258062019564] ***
*** finished computation of 3 references, err: [Inf, 0.32332671876868296, 0.3030477637191885, 0.2845146958025052, 0.26815979921634586, 0.24982493650307808, 0.23501983535723173, 0.23042676401236603, 0.22910959264780137, 0.22893258062019564] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [236, 11, 0]]
** centroid: 1, normalized-entropy: 0.26270930666805914, [(1, 236), (2, 11)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 184, 18]]
** centroid: 2, normalized-entropy: 0.43348846324460666, [(2, 184), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [172, 46, 0]]
** centroid: 3, normalized-entropy: 0.7434073165779199, [(1, 172), (2, 46)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30669051727400104] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30669051727400104, 0.24405435210225107] ***
*** starting iteration: 2; err: [Inf, 0.30669051727400104, 0.24405435210225107] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30669051727400104, 0.24405435210225107, 0.23814710112905751] ***
*** starting iteration: 3; err: [Inf, 0.30669051727400104, 0.24405435210225107, 0.23814710112905751] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30669051727400104, 0.24405435210225107, 0.23814710112905751, 0.23737616248211002] ***
*** finished computation of 3 references, err: [Inf, 0.30669051727400104, 0.24405435210225107, 0.23814710112905751, 0.23737616248211002] ***
*** center 1: selecting labels [1] (freq >= 2) [from [233, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [152, 54, 0]]
** centroid: 2, normalized-entropy: 0.829952434172285, [(1, 152), (2, 54)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [11, 193, 24]]
** centroid: 3, normalized-entropy: 0.4772426464128076, [(1, 11), (2, 193), (3, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2666110116862566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2666110116862566, 0.23420600352183757] ***
*** starting iteration: 2; err: [Inf, 0.2666110116862566, 0.23420600352183757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2666110116862566, 0.23420600352183757, 0.2331910045669266] ***
*** starting iteration: 3; err: [Inf, 0.2666110116862566, 0.23420600352183757, 0.2331910045669266] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2666110116862566, 0.23420600352183757, 0.2331910045669266, 0.23291447548078256] ***
*** finished computation of 3 references, err: [Inf, 0.2666110116862566, 0.23420600352183757, 0.2331910045669266, 0.23291447548078256] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [58, 163, 22]]
** centroid: 1, normalized-entropy: 0.753003901092316, [(1, 58), (2, 163), (3, 22)]
*** center 2: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [154, 71, 0]]
** centroid: 3, normalized-entropy: 0.8994826456532716, [(1, 154), (2, 71)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2952510924895351] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2952510924895351, 0.23180107806908382] ***
*** starting iteration: 2; err: [Inf, 0.2952510924895351, 0.23180107806908382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2952510924895351, 0.23180107806908382, 0.2297855876051057] ***
*** starting iteration: 3; err: [Inf, 0.2952510924895351, 0.23180107806908382, 0.2297855876051057] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2952510924895351, 0.23180107806908382, 0.2297855876051057, 0.22942686785917277] ***
*** finished computation of 3 references, err: [Inf, 0.2952510924895351, 0.23180107806908382, 0.2297855876051057, 0.22942686785917277] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 182, 18]]
** centroid: 1, normalized-entropy: 0.4364698170641031, [(2, 182), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [221, 20, 0]]
** centroid: 2, normalized-entropy: 0.4126195124820211, [(1, 221), (2, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [187, 39, 0]]
** centroid: 3, normalized-entropy: 0.6635420131469765, [(1, 187), (2, 39)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28164054394379884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28164054394379884, 0.24381354504238362] ***
*** starting iteration: 2; err: [Inf, 0.28164054394379884, 0.24381354504238362] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28164054394379884, 0.24381354504238362, 0.2404433923467681] ***
*** starting iteration: 3; err: [Inf, 0.28164054394379884, 0.24381354504238362, 0.2404433923467681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.28164054394379884, 0.24381354504238362, 0.2404433923467681, 0.2395315676944322] ***
*** finished computation of 3 references, err: [Inf, 0.28164054394379884, 0.24381354504238362, 0.2404433923467681, 0.2395315676944322] ***
*** center 1: selecting labels [1] (freq >= 2) [from [205, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [87, 139, 23]]
** centroid: 2, normalized-entropy: 0.8309260295968167, [(1, 87), (2, 139), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [104, 108, 1]]
** centroid: 3, normalized-entropy: 0.9997431860710851, [(1, 104), (2, 108)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.22408594338254104] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22408594338254104, 0.15983205801295536] ***
*** starting iteration: 2; err: [Inf, 0.22408594338254104, 0.15983205801295536] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22408594338254104, 0.15983205801295536, 0.152156960786888] ***
*** starting iteration: 3; err: [Inf, 0.22408594338254104, 0.15983205801295536, 0.152156960786888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22408594338254104, 0.15983205801295536, 0.152156960786888, 0.1494280274275008] ***
*** finished computation of 7 references, err: [Inf, 0.22408594338254104, 0.15983205801295536, 0.152156960786888, 0.1494280274275008] ***
*** center 1: selecting labels [1] (freq >= 2) [from [58, 0, 0]]
*** center 2: selecting labels [1] (freq >= 2) [from [106, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [71, 19, 0]]
** centroid: 3, normalized-entropy: 0.7436012269934466, [(1, 71), (2, 19)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 100, 22]]
** centroid: 4, normalized-entropy: 0.6807937753703207, [(2, 100), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [46, 69, 0]]
** centroid: 6, normalized-entropy: 0.9709505944546688, [(1, 46), (2, 69)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [56, 46, 0]]
** centroid: 7, normalized-entropy: 0.9930554830121975, [(1, 56), (2, 46)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19872927240332006] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19872927240332006, 0.16016631915528645] ***
*** starting iteration: 2; err: [Inf, 0.19872927240332006, 0.16016631915528645] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19872927240332006, 0.16016631915528645, 0.15439243827886442] ***
*** starting iteration: 3; err: [Inf, 0.19872927240332006, 0.16016631915528645, 0.15439243827886442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19872927240332006, 0.16016631915528645, 0.15439243827886442, 0.1525245811189825] ***
*** finished computation of 7 references, err: [Inf, 0.19872927240332006, 0.16016631915528645, 0.15439243827886442, 0.1525245811189825] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 120, 18]]
** centroid: 1, normalized-entropy: 0.5586293734521991, [(2, 120), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [23, 93, 0]]
** centroid: 2, normalized-entropy: 0.7184663880382773, [(1, 23), (2, 93)]
*** center 3: selecting labels [1] (freq >= 2) [from [97, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [77, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [99, 1, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [64, 27, 0]]
** centroid: 7, normalized-entropy: 0.8772236230732716, [(1, 64), (2, 27)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.20409052410669837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20409052410669837, 0.16997623548604202] ***
*** starting iteration: 2; err: [Inf, 0.20409052410669837, 0.16997623548604202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20409052410669837, 0.16997623548604202, 0.15603326615281235] ***
*** starting iteration: 3; err: [Inf, 0.20409052410669837, 0.16997623548604202, 0.15603326615281235] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20409052410669837, 0.16997623548604202, 0.15603326615281235, 0.152881923133041] ***
*** finished computation of 7 references, err: [Inf, 0.20409052410669837, 0.16997623548604202, 0.15603326615281235, 0.152881923133041] ***
*** center 1: selecting labels [1] (freq >= 2) [from [124, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 60, 10]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(2, 60), (3, 10)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [25, 42, 0]]
** centroid: 3, normalized-entropy: 0.9530483471581301, [(1, 25), (2, 42)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 73, 14]]
** centroid: 4, normalized-entropy: 0.6365048555378351, [(2, 73), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [54, 43, 0]]
** centroid: 5, normalized-entropy: 0.9907034651869471, [(1, 54), (2, 43)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [114, 29, 0]]
** centroid: 6, normalized-entropy: 0.7274873474533534, [(1, 114), (2, 29)]
*** center 7: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27846766813649787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27846766813649787, 0.20188417390000085] ***
*** starting iteration: 2; err: [Inf, 0.27846766813649787, 0.20188417390000085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27846766813649787, 0.20188417390000085, 0.19123165694054206] ***
*** starting iteration: 3; err: [Inf, 0.27846766813649787, 0.20188417390000085, 0.19123165694054206] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27846766813649787, 0.20188417390000085, 0.19123165694054206, 0.18822915956109493] ***
*** finished computation of 7 references, err: [Inf, 0.27846766813649787, 0.20188417390000085, 0.19123165694054206, 0.18822915956109493] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 67, 22]]
** centroid: 1, normalized-entropy: 0.8067955503968327, [(2, 67), (3, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [33, 66, 0]]
** centroid: 2, normalized-entropy: 0.9182958340544894, [(1, 33), (2, 66)]
*** center 3: selecting labels [1] (freq >= 2) [from [99, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 38, 0]]
** centroid: 4, normalized-entropy: 0.9270425482501284, [(1, 73), (2, 38)]
*** center 5: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [5, 63, 0]]
** centroid: 6, normalized-entropy: 0.378958787501346, [(1, 5), (2, 63)]
*** center 7: selecting labels [1] (freq >= 2) [from [109, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25628796741163923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25628796741163923, 0.19434211242907698] ***
*** starting iteration: 2; err: [Inf, 0.25628796741163923, 0.19434211242907698] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25628796741163923, 0.19434211242907698, 0.19181644217553792] ***
*** starting iteration: 3; err: [Inf, 0.25628796741163923, 0.19434211242907698, 0.19181644217553792] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25628796741163923, 0.19434211242907698, 0.19181644217553792, 0.1904809847585801] ***
*** finished computation of 7 references, err: [Inf, 0.25628796741163923, 0.19434211242907698, 0.19181644217553792, 0.1904809847585801] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [63, 19, 0]]
** centroid: 1, normalized-entropy: 0.7809756883263416, [(1, 63), (2, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [64, 8, 0]]
** centroid: 2, normalized-entropy: 0.5032583347756457, [(1, 64), (2, 8)]
*** center 3: selecting labels [1] (freq >= 2) [from [103, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 83, 18]]
** centroid: 4, normalized-entropy: 0.6761627418829197, [(2, 83), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 34, 0]]
** centroid: 5, normalized-entropy: 0.8921212805771683, [(1, 76), (2, 34)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [10, 97, 0]]
** centroid: 6, normalized-entropy: 0.447907858914932, [(1, 10), (2, 97)]
*** center 7: selecting labels [1] (freq >= 2) [from [92, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24274680145068103] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24274680145068103, 0.21058905365453778] ***
*** starting iteration: 2; err: [Inf, 0.24274680145068103, 0.21058905365453778] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24274680145068103, 0.21058905365453778, 0.20225135200291125] ***
*** starting iteration: 3; err: [Inf, 0.24274680145068103, 0.21058905365453778, 0.20225135200291125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24274680145068103, 0.21058905365453778, 0.20225135200291125, 0.19996794331623338] ***
*** finished computation of 7 references, err: [Inf, 0.24274680145068103, 0.21058905365453778, 0.20225135200291125, 0.19996794331623338] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 15, 23]]
** centroid: 1, normalized-entropy: 0.9677884628267678, [(2, 15), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [90, 15, 0]]
** centroid: 2, normalized-entropy: 0.5916727785823274, [(1, 90), (2, 15)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [17, 80, 0]]
** centroid: 3, normalized-entropy: 0.6695920597928519, [(1, 17), (2, 80)]
*** center 4: selecting labels [1] (freq >= 2) [from [125, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [151, 0, 0]]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 62, 1]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [13, 75, 0]]
** centroid: 7, normalized-entropy: 0.6041234581483739, [(1, 13), (2, 75)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.4852441995804598] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4852441995804598, 0.3414295840723155] ***
*** starting iteration: 2; err: [Inf, 0.4852441995804598, 0.3414295840723155] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4852441995804598, 0.3414295840723155, 0.30816101645295685] ***
*** starting iteration: 3; err: [Inf, 0.4852441995804598, 0.3414295840723155, 0.30816101645295685] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4852441995804598, 0.3414295840723155, 0.30816101645295685, 0.2977403994739145] ***
*** finished computation of 3 references, err: [Inf, 0.4852441995804598, 0.3414295840723155, 0.30816101645295685, 0.2977403994739145] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [240, 24, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 240), (2, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [170, 60, 0]]
** centroid: 2, normalized-entropy: 0.828055725379504, [(1, 170), (2, 60)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 150, 22]]
** centroid: 3, normalized-entropy: 0.5516699920020824, [(2, 150), (3, 22)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4349884271909339] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4349884271909339, 0.33861277912599574] ***
*** starting iteration: 2; err: [Inf, 0.4349884271909339, 0.33861277912599574] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4349884271909339, 0.33861277912599574, 0.3371276673965569] ***
*** starting iteration: 3; err: [Inf, 0.4349884271909339, 0.33861277912599574, 0.3371276673965569] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4349884271909339, 0.33861277912599574, 0.3371276673965569, 0.3368930376122246] ***
*** finished computation of 3 references, err: [Inf, 0.4349884271909339, 0.33861277912599574, 0.3371276673965569, 0.3368930376122246] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [208, 5, 0]]
** centroid: 1, normalized-entropy: 0.1605260434756786, [(1, 208), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [92, 93, 18]]
** centroid: 2, normalized-entropy: 0.8475440119875443, [(1, 92), (2, 93), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [108, 143, 0]]
** centroid: 3, normalized-entropy: 0.9859282097556953, [(1, 108), (2, 143)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3388695925742254] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388695925742254, 0.2987695060519577] ***
*** starting iteration: 2; err: [Inf, 0.3388695925742254, 0.2987695060519577] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388695925742254, 0.2987695060519577, 0.2959644764974557] ***
*** starting iteration: 3; err: [Inf, 0.3388695925742254, 0.2987695060519577, 0.2959644764974557] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3388695925742254, 0.2987695060519577, 0.2959644764974557, 0.2951651669011034] ***
*** finished computation of 3 references, err: [Inf, 0.3388695925742254, 0.2987695060519577, 0.2959644764974557, 0.2951651669011034] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 164, 24]]
** centroid: 1, normalized-entropy: 0.5509844433017146, [(2, 164), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [247, 8, 0]]
** centroid: 2, normalized-entropy: 0.20122909881409184, [(1, 247), (2, 8)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [149, 75, 0]]
** centroid: 3, normalized-entropy: 0.9197767464502239, [(1, 149), (2, 75)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5459417922599884] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5459417922599884, 0.30967592928200605] ***
*** starting iteration: 2; err: [Inf, 0.5459417922599884, 0.30967592928200605] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5459417922599884, 0.30967592928200605, 0.2954305590608636] ***
*** starting iteration: 3; err: [Inf, 0.5459417922599884, 0.30967592928200605, 0.2954305590608636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5459417922599884, 0.30967592928200605, 0.2954305590608636, 0.29396964836440553] ***
*** starting iteration: 4; err: [Inf, 0.5459417922599884, 0.30967592928200605, 0.2954305590608636, 0.29396964836440553] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5459417922599884, 0.30967592928200605, 0.2954305590608636, 0.29396964836440553, 0.29341380783376303] ***
*** finished computation of 3 references, err: [Inf, 0.5459417922599884, 0.30967592928200605, 0.2954305590608636, 0.29396964836440553, 0.29341380783376303] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [86, 146, 22]]
** centroid: 1, normalized-entropy: 0.8163467445352718, [(1, 86), (2, 146), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [223, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [101, 88, 0]]
** centroid: 3, normalized-entropy: 0.9965845289934886, [(1, 101), (2, 88)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.46294327965355303] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46294327965355303, 0.3450616126072997] ***
*** starting iteration: 2; err: [Inf, 0.46294327965355303, 0.3450616126072997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46294327965355303, 0.3450616126072997, 0.34131267747242766] ***
*** starting iteration: 3; err: [Inf, 0.46294327965355303, 0.3450616126072997, 0.34131267747242766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46294327965355303, 0.3450616126072997, 0.34131267747242766, 0.3398326411536117] ***
*** starting iteration: 4; err: [Inf, 0.46294327965355303, 0.3450616126072997, 0.34131267747242766, 0.3398326411536117] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.46294327965355303, 0.3450616126072997, 0.34131267747242766, 0.3398326411536117, 0.33945480615425594] ***
*** finished computation of 3 references, err: [Inf, 0.46294327965355303, 0.3450616126072997, 0.34131267747242766, 0.3398326411536117, 0.33945480615425594] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [123, 119, 0]]
** centroid: 1, normalized-entropy: 0.999802915000331, [(1, 123), (2, 119)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [67, 98, 18]]
** centroid: 2, normalized-entropy: 0.8469107297208169, [(1, 67), (2, 98), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [218, 24, 0]]
** centroid: 3, normalized-entropy: 0.46637033306518266, [(1, 218), (2, 24)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.41353407544481835] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41353407544481835, 0.29887921448358556] ***
*** starting iteration: 2; err: [Inf, 0.41353407544481835, 0.29887921448358556] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41353407544481835, 0.29887921448358556, 0.294638898650902] ***
*** starting iteration: 3; err: [Inf, 0.41353407544481835, 0.29887921448358556, 0.294638898650902] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.41353407544481835, 0.29887921448358556, 0.294638898650902, 0.2945739548999643] ***
*** finished computation of 3 references, err: [Inf, 0.41353407544481835, 0.29887921448358556, 0.294638898650902, 0.2945739548999643] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [150, 79, 0]]
** centroid: 1, normalized-entropy: 0.9295029903660562, [(1, 150), (2, 79)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [246, 8, 0]]
** centroid: 2, normalized-entropy: 0.20183992963258704, [(1, 246), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 160, 24]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(2, 160), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.38232305132037214] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.38232305132037214, 0.32972964157165774] ***
*** finished computation of 3 references, err: [Inf, 0.38232305132037214, 0.32972964157165774] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [133, 123, 22]]
** centroid: 1, normalized-entropy: 0.8321833508234229, [(1, 133), (2, 123), (3, 22)]
*** center 2: selecting labels [1] (freq >= 1) [from [161, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [116, 111, 0]]
** centroid: 3, normalized-entropy: 0.9996500000677426, [(1, 116), (2, 111)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4488460633183258] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4488460633183258, 0.31372963078320026] ***
*** finished computation of 3 references, err: [Inf, 0.4488460633183258, 0.31372963078320026] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [127, 78, 0]]
** centroid: 1, normalized-entropy: 0.9583858151575415, [(1, 127), (2, 78)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [216, 8, 0]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(1, 216), (2, 8)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [65, 155, 18]]
** centroid: 3, normalized-entropy: 0.7546099773122562, [(1, 65), (2, 155), (3, 18)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3815547710681136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3815547710681136, 0.3079644725497427] ***
*** finished computation of 3 references, err: [Inf, 0.3815547710681136, 0.3079644725497427] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [168, 32, 0]]
** centroid: 1, normalized-entropy: 0.634309554640566, [(1, 168), (2, 32)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [12, 194, 24]]
** centroid: 2, normalized-entropy: 0.485599118142344, [(1, 12), (2, 194), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [216, 21, 0]]
** centroid: 3, normalized-entropy: 0.43180499427520785, [(1, 216), (2, 21)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.5434405359057793] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5434405359057793, 0.3317384822378019] ***
*** starting iteration: 2; err: [Inf, 0.5434405359057793, 0.3317384822378019] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823] ***
*** starting iteration: 3; err: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153] ***
*** starting iteration: 4; err: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153, 0.2955039957280945] ***
*** starting iteration: 5; err: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153, 0.2955039957280945] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153, 0.2955039957280945, 0.2944151820477193] ***
*** starting iteration: 6; err: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153, 0.2955039957280945, 0.2944151820477193] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153, 0.2955039957280945, 0.2944151820477193, 0.2936340258428799] ***
*** finished computation of 3 references, err: [Inf, 0.5434405359057793, 0.3317384822378019, 0.3034140531535823, 0.2972857396974153, 0.2955039957280945, 0.2944151820477193, 0.2936340258428799] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [186, 54, 0]]
** centroid: 1, normalized-entropy: 0.7691928290130138, [(1, 186), (2, 54)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 176, 22]]
** centroid: 2, normalized-entropy: 0.3997697698830267, [(1, 4), (2, 176), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [220, 4, 0]]
** centroid: 3, normalized-entropy: 0.12923377484588472, [(1, 220), (2, 4)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.441887110523388] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.441887110523388, 0.3186325602976234] ***
*** starting iteration: 2; err: [Inf, 0.441887110523388, 0.3186325602976234] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.441887110523388, 0.3186325602976234, 0.2969773751481072] ***
*** starting iteration: 3; err: [Inf, 0.441887110523388, 0.3186325602976234, 0.2969773751481072] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.441887110523388, 0.3186325602976234, 0.2969773751481072, 0.2943866647489514] ***
*** starting iteration: 4; err: [Inf, 0.441887110523388, 0.3186325602976234, 0.2969773751481072, 0.2943866647489514] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.441887110523388, 0.3186325602976234, 0.2969773751481072, 0.2943866647489514, 0.2938711448800171] ***
*** finished computation of 3 references, err: [Inf, 0.441887110523388, 0.3186325602976234, 0.2969773751481072, 0.2943866647489514, 0.2938711448800171] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [90, 174, 18]]
** centroid: 1, normalized-entropy: 0.7628340855504145, [(1, 90), (2, 174), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [139, 67, 0]]
** centroid: 2, normalized-entropy: 0.9099918627694404, [(1, 139), (2, 67)]
*** center 3: selecting labels [1] (freq >= 2) [from [179, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36864793829751136] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36864793829751136, 0.3011786885785757] ***
*** starting iteration: 2; err: [Inf, 0.36864793829751136, 0.3011786885785757] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36864793829751136, 0.3011786885785757, 0.2961151894880808] ***
*** starting iteration: 3; err: [Inf, 0.36864793829751136, 0.3011786885785757, 0.2961151894880808] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36864793829751136, 0.3011786885785757, 0.2961151894880808, 0.295013252039743] ***
*** starting iteration: 4; err: [Inf, 0.36864793829751136, 0.3011786885785757, 0.2961151894880808, 0.295013252039743] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36864793829751136, 0.3011786885785757, 0.2961151894880808, 0.295013252039743, 0.2944070493615326] ***
*** finished computation of 3 references, err: [Inf, 0.36864793829751136, 0.3011786885785757, 0.2961151894880808, 0.295013252039743, 0.2944070493615326] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 163, 24]]
** centroid: 1, normalized-entropy: 0.5528741970161213, [(2, 163), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [156, 64, 0]]
** centroid: 2, normalized-entropy: 0.8698926856041562, [(1, 156), (2, 64)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [240, 20, 0]]
** centroid: 3, normalized-entropy: 0.3912435636292556, [(1, 240), (2, 20)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.23256153399138704] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23256153399138704, 0.18782802244768418] ***
*** starting iteration: 2; err: [Inf, 0.23256153399138704, 0.18782802244768418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23256153399138704, 0.18782802244768418, 0.1823079782514379] ***
*** starting iteration: 3; err: [Inf, 0.23256153399138704, 0.18782802244768418, 0.1823079782514379] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23256153399138704, 0.18782802244768418, 0.1823079782514379, 0.18066707291714346] ***
*** finished computation of 7 references, err: [Inf, 0.23256153399138704, 0.18782802244768418, 0.1823079782514379, 0.18066707291714346] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [71, 47, 0]]
** centroid: 1, normalized-entropy: 0.9699504941611515, [(1, 71), (2, 47)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [75, 7, 0]]
** centroid: 2, normalized-entropy: 0.42080948947668984, [(1, 75), (2, 7)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 85, 18]]
** centroid: 3, normalized-entropy: 0.6684725699243225, [(2, 85), (3, 18)]
*** center 4: selecting labels [1] (freq >= 2) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [8, 76, 0]]
** centroid: 5, normalized-entropy: 0.45371633918694493, [(1, 8), (2, 76)]
*** center 6: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [58, 26, 0]]
** centroid: 7, normalized-entropy: 0.8926230133850988, [(1, 58), (2, 26)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2512550277466505] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512550277466505, 0.18937952429296329] ***
*** starting iteration: 2; err: [Inf, 0.2512550277466505, 0.18937952429296329] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512550277466505, 0.18937952429296329, 0.185621688441224] ***
*** starting iteration: 3; err: [Inf, 0.2512550277466505, 0.18937952429296329, 0.185621688441224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2512550277466505, 0.18937952429296329, 0.185621688441224, 0.18549525517149307] ***
*** finished computation of 7 references, err: [Inf, 0.2512550277466505, 0.18937952429296329, 0.185621688441224, 0.18549525517149307] ***
*** center 1: selecting labels [1] (freq >= 2) [from [95, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 86, 24]]
** centroid: 2, normalized-entropy: 0.7568336324184036, [(2, 86), (3, 24)]
*** center 3: selecting labels [1] (freq >= 2) [from [73, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [84, 28, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 84), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [45, 63, 0]]
** centroid: 5, normalized-entropy: 0.9798687566511527, [(1, 45), (2, 63)]
*** center 6: selecting labels [1] (freq >= 2) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [10, 70, 0]]
** centroid: 7, normalized-entropy: 0.5435644431995963, [(1, 10), (2, 70)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2548146493402212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548146493402212, 0.17590665400647712] ***
*** starting iteration: 2; err: [Inf, 0.2548146493402212, 0.17590665400647712] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917] ***
*** starting iteration: 3; err: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007] ***
*** starting iteration: 4; err: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007, 0.15027276304544876] ***
*** starting iteration: 5; err: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007, 0.15027276304544876] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007, 0.15027276304544876, 0.14924636279308312] ***
*** starting iteration: 6; err: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007, 0.15027276304544876, 0.14924636279308312] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007, 0.15027276304544876, 0.14924636279308312, 0.14854386330417194] ***
*** finished computation of 7 references, err: [Inf, 0.2548146493402212, 0.17590665400647712, 0.16066896751090917, 0.15456624063817007, 0.15027276304544876, 0.14924636279308312, 0.14854386330417194] ***
*** center 1: selecting labels [1] (freq >= 1) [from [92, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 59, 22]]
** centroid: 2, normalized-entropy: 0.8437582063121657, [(2, 59), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [26, 64, 0]]
** centroid: 3, normalized-entropy: 0.8672816222000259, [(1, 26), (2, 64)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [8, 97, 0]]
** centroid: 4, normalized-entropy: 0.38861174916944274, [(1, 8), (2, 97)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [131, 6, 0]]
** centroid: 5, normalized-entropy: 0.25943216905006755, [(1, 131), (2, 6)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [86, 8, 0]]
** centroid: 6, normalized-entropy: 0.4199210973757179, [(1, 86), (2, 8)]
*** center 7: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1975143867833861] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082] ***
*** starting iteration: 2; err: [Inf, 0.1975143867833861, 0.16113121503883082] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692] ***
*** starting iteration: 3; err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867] ***
*** starting iteration: 4; err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333] ***
*** starting iteration: 5; err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499] ***
*** starting iteration: 6; err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499, 0.14973918406357026] ***
*** starting iteration: 7; err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499, 0.14973918406357026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499, 0.14973918406357026, 0.1483631117626846] ***
*** starting iteration: 8; err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499, 0.14973918406357026, 0.1483631117626846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499, 0.14973918406357026, 0.1483631117626846, 0.1473887800455451] ***
*** finished computation of 7 references, err: [Inf, 0.1975143867833861, 0.16113121503883082, 0.15638777357124692, 0.15404948901986867, 0.15249684771503333, 0.1511783778047499, 0.14973918406357026, 0.1483631117626846, 0.1473887800455451] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [67, 40, 0]]
** centroid: 1, normalized-entropy: 0.9535688597080136, [(1, 67), (2, 40)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 40, 18]]
** centroid: 2, normalized-entropy: 0.8935711016541908, [(2, 40), (3, 18)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 76, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [139, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [6, 69, 0]]
** centroid: 5, normalized-entropy: 0.4021791902022729, [(1, 6), (2, 69)]
*** center 6: selecting labels [1] (freq >= 1) [from [118, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [78, 16, 0]]
** centroid: 7, normalized-entropy: 0.6581912658132184, [(1, 78), (2, 16)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2388238195693637] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837] ***
*** starting iteration: 2; err: [Inf, 0.2388238195693637, 0.17797102190894837] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853] ***
*** starting iteration: 3; err: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762] ***
*** starting iteration: 4; err: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094] ***
*** starting iteration: 5; err: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094, 0.1474993260880315] ***
*** starting iteration: 6; err: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094, 0.1474993260880315] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094, 0.1474993260880315, 0.14640602929799676] ***
*** starting iteration: 7; err: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094, 0.1474993260880315, 0.14640602929799676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094, 0.1474993260880315, 0.14640602929799676, 0.14587404672196064] ***
*** finished computation of 7 references, err: [Inf, 0.2388238195693637, 0.17797102190894837, 0.16290532933712853, 0.15511727593615762, 0.1504731115353094, 0.1474993260880315, 0.14640602929799676, 0.14587404672196064] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 88, 24]]
** centroid: 1, normalized-entropy: 0.7495952572594798, [(2, 88), (3, 24)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [96, 4, 0]]
** centroid: 2, normalized-entropy: 0.24229218908241482, [(1, 96), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [78, 40, 0]]
** centroid: 3, normalized-entropy: 0.9238422284571813, [(1, 78), (2, 40)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [1, 74, 0]]
** centroid: 4, normalized-entropy: 0.10215803640865054, [(1, 1), (2, 74)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 41, 0]]
** centroid: 5, normalized-entropy: 0.9786239947589973, [(1, 58), (2, 41)]
*** center 6: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.30382388122323845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.30382388122323845, 0.23673506921671847] ***
*** finished computation of 7 references, err: [Inf, 0.30382388122323845, 0.23673506921671847] ***
*** center 1: selecting labels [1] (freq >= 1) [from [141, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [74, 48, 0]]
** centroid: 2, normalized-entropy: 0.9669852958320848, [(1, 74), (2, 48)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [38, 92, 2]]
** centroid: 3, normalized-entropy: 0.61310636222801, [(1, 38), (2, 92), (3, 2)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2, 3] (freq >= 1) [from [23, 45, 5]]
** centroid: 5, normalized-entropy: 0.7698400708381136, [(1, 23), (2, 45), (3, 5)]
*** center 6: selecting labels [1, 2, 3] (freq >= 1) [from [36, 49, 15]]
** centroid: 6, normalized-entropy: 0.9119722237214367, [(1, 36), (2, 49), (3, 15)]
*** center 7: selecting labels [1] (freq >= 1) [from [28, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2714610112973418] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2714610112973418, 0.21271506210473523] ***
*** finished computation of 7 references, err: [Inf, 0.2714610112973418, 0.21271506210473523] ***
*** center 1: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [13, 139, 0]]
** centroid: 2, normalized-entropy: 0.4213582670988374, [(1, 13), (2, 139)]
*** center 3: selecting labels [1] (freq >= 1) [from [103, 0, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 1) [from [11, 61, 8]]
** centroid: 4, normalized-entropy: 0.6461156191184856, [(1, 11), (2, 61), (3, 8)]
*** center 5: selecting labels [1, 2, 3] (freq >= 1) [from [4, 41, 10]]
** centroid: 5, normalized-entropy: 0.6549724343023622, [(1, 4), (2, 41), (3, 10)]
*** center 6: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [48, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31681843797607845] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.31681843797607845, 0.22359393258066637] ***
*** finished computation of 7 references, err: [Inf, 0.31681843797607845, 0.22359393258066637] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [1, 49, 15]]
** centroid: 1, normalized-entropy: 0.5603604212893615, [(1, 1), (2, 49), (3, 15)]
*** center 2: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [113, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [39, 86, 0]]
** centroid: 4, normalized-entropy: 0.8954686411420222, [(1, 39), (2, 86)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [144, 24, 0]]
** centroid: 5, normalized-entropy: 0.5916727785823274, [(1, 144), (2, 24)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 88, 9]]
** centroid: 6, normalized-entropy: 0.44569317772256106, [(2, 88), (3, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1956425447502193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1956425447502193, 0.14808283236252517] ***
*** starting iteration: 2; err: [Inf, 0.1956425447502193, 0.14808283236252517] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1956425447502193, 0.14808283236252517, 0.14467482139180238] ***
*** starting iteration: 3; err: [Inf, 0.1956425447502193, 0.14808283236252517, 0.14467482139180238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1956425447502193, 0.14808283236252517, 0.14467482139180238, 0.1442904570797184] ***
*** finished computation of 7 references, err: [Inf, 0.1956425447502193, 0.14808283236252517, 0.14467482139180238, 0.1442904570797184] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 14, 0]]
** centroid: 1, normalized-entropy: 0.607171654871303, [(1, 80), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [79, 26, 0]]
** centroid: 2, normalized-entropy: 0.8074825483550796, [(1, 79), (2, 26)]
*** center 3: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 69, 22]]
** centroid: 4, normalized-entropy: 0.7979519684655734, [(2, 69), (3, 22)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [63, 37, 0]]
** centroid: 5, normalized-entropy: 0.950672092687066, [(1, 63), (2, 37)]
*** center 6: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 88, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20588874509711674] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20588874509711674, 0.15183555100230442] ***
*** starting iteration: 2; err: [Inf, 0.20588874509711674, 0.15183555100230442] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20588874509711674, 0.15183555100230442, 0.14798338518225249] ***
*** starting iteration: 3; err: [Inf, 0.20588874509711674, 0.15183555100230442, 0.14798338518225249] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20588874509711674, 0.15183555100230442, 0.14798338518225249, 0.14705541591694776] ***
*** finished computation of 7 references, err: [Inf, 0.20588874509711674, 0.15183555100230442, 0.14798338518225249, 0.14705541591694776] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [99, 7, 0]]
** centroid: 1, normalized-entropy: 0.3509601730322126, [(1, 99), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [119, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 58, 18]]
** centroid: 3, normalized-entropy: 0.7897492536625221, [(2, 58), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [114, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [72, 17, 0]]
** centroid: 5, normalized-entropy: 0.7035821005719904, [(1, 72), (2, 17)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 65, 0]]
** centroid: 6, normalized-entropy: 0.19364280468389852, [(1, 2), (2, 65)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 94, 0]]
** centroid: 7, normalized-entropy: 0.14609425012013613, [(1, 2), (2, 94)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1902991327613514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902991327613514, 0.15364869551473426] ***
*** starting iteration: 2; err: [Inf, 0.1902991327613514, 0.15364869551473426] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902991327613514, 0.15364869551473426, 0.14908078216390497] ***
*** starting iteration: 3; err: [Inf, 0.1902991327613514, 0.15364869551473426, 0.14908078216390497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902991327613514, 0.15364869551473426, 0.14908078216390497, 0.14773373050137661] ***
*** starting iteration: 4; err: [Inf, 0.1902991327613514, 0.15364869551473426, 0.14908078216390497, 0.14773373050137661] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1902991327613514, 0.15364869551473426, 0.14908078216390497, 0.14773373050137661, 0.14715540170462904] ***
*** finished computation of 7 references, err: [Inf, 0.1902991327613514, 0.15364869551473426, 0.14908078216390497, 0.14773373050137661, 0.14715540170462904] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 92, 23]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(2, 92), (3, 23)]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [80, 12, 0]]
** centroid: 3, normalized-entropy: 0.5586293734521991, [(1, 80), (2, 12)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [77, 47, 0]]
** centroid: 4, normalized-entropy: 0.9573556679485173, [(1, 77), (2, 47)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [86, 12, 0]]
** centroid: 5, normalized-entropy: 0.5363596511250623, [(1, 86), (2, 12)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 83, 1]]
** centroid: 6, normalized-entropy: 0.09317131799548928, [(2, 83), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [84, 1, 0]]
** centroid: 7, normalized-entropy: 0.0922772477445739, [(1, 84), (2, 1)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23736734057611622] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23736734057611622, 0.1910154593174343] ***
*** starting iteration: 2; err: [Inf, 0.23736734057611622, 0.1910154593174343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23736734057611622, 0.1910154593174343, 0.18518855335196485] ***
*** starting iteration: 3; err: [Inf, 0.23736734057611622, 0.1910154593174343, 0.18518855335196485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23736734057611622, 0.1910154593174343, 0.18518855335196485, 0.18347873721780764] ***
*** finished computation of 7 references, err: [Inf, 0.23736734057611622, 0.1910154593174343, 0.18518855335196485, 0.18347873721780764] ***
*** center 1: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 62, 22]]
** centroid: 2, normalized-entropy: 0.8296071030882032, [(2, 62), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [73, 18, 0]]
** centroid: 3, normalized-entropy: 0.7175106531195438, [(1, 73), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [73, 59, 0]]
** centroid: 4, normalized-entropy: 0.9918703867024693, [(1, 73), (2, 59)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [12, 95, 0]]
** centroid: 5, normalized-entropy: 0.5063657452787739, [(1, 12), (2, 95)]
*** center 6: selecting labels [1] (freq >= 2) [from [102, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [88, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9550148951346555, 0.9339998681316047, 0.9249818680956405, 0.9240108371844898, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 15
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.21047284299865723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21047284299865723, 0.16120292028333913] ***
*** finished computation of 7 references, err: [Inf, 0.21047284299865723, 0.16120292028333913] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 45, 22]]
** centroid: 2, normalized-entropy: 0.9132401614300725, [(2, 45), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [61, 67, 0]]
** centroid: 3, normalized-entropy: 0.9984144269374468, [(1, 61), (2, 67)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [3, 88, 0]]
** centroid: 4, normalized-entropy: 0.20905980566852464, [(1, 3), (2, 88)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [40, 34, 0]]
** centroid: 5, normalized-entropy: 0.9952525494396791, [(1, 40), (2, 34)]
*** center 6: selecting labels [1] (freq >= 1) [from [147, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [117, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23733013977521453] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23733013977521453, 0.1799781529855603] ***
*** finished computation of 7 references, err: [Inf, 0.23733013977521453, 0.1799781529855603] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [4, 155, 18]]
** centroid: 1, normalized-entropy: 0.3953407601099794, [(1, 4), (2, 155), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [2, 54, 0]]
** centroid: 2, normalized-entropy: 0.2222848306856879, [(1, 2), (2, 54)]
*** center 3: selecting labels [1] (freq >= 1) [from [158, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 32, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1805771006406683] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1805771006406683, 0.15047748927030477] ***
*** finished computation of 7 references, err: [Inf, 0.1805771006406683, 0.15047748927030477] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [50, 59, 0]]
** centroid: 1, normalized-entropy: 0.995076532106423, [(1, 50), (2, 59)]
*** center 2: selecting labels [1] (freq >= 1) [from [121, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 16, 0]]
** centroid: 3, normalized-entropy: 0.8431619569518377, [(1, 43), (2, 16)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [94, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [88, 30, 0]]
** centroid: 6, normalized-entropy: 0.8179252501386403, [(1, 88), (2, 30)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 70, 24]]
** centroid: 7, normalized-entropy: 0.8196004346196011, [(2, 70), (3, 24)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 15)
[0.9550148951346555, 0.9349918781056505, 0.9339998681316047, 0.9249818680956405, 0.9240108371844898, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 16
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.25620202426644817] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25620202426644817, 0.2287391370858762] ***
*** starting iteration: 2; err: [Inf, 0.25620202426644817, 0.2287391370858762] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25620202426644817, 0.2287391370858762, 0.2165177322203271] ***
*** starting iteration: 3; err: [Inf, 0.25620202426644817, 0.2287391370858762, 0.2165177322203271] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25620202426644817, 0.2287391370858762, 0.2165177322203271, 0.2083309884186605] ***
*** finished computation of 7 references, err: [Inf, 0.25620202426644817, 0.2287391370858762, 0.2165177322203271, 0.2083309884186605] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [37, 85, 5]]
** centroid: 1, normalized-entropy: 0.687590775894823, [(1, 37), (2, 85), (3, 5)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [2, 95, 0]]
** centroid: 2, normalized-entropy: 0.14489961753310668, [(1, 2), (2, 95)]
*** center 3: selecting labels [1] (freq >= 2) [from [79, 0, 0]]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [3, 53, 17]]
** centroid: 4, normalized-entropy: 0.6398807704325256, [(1, 3), (2, 53), (3, 17)]
*** center 5: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [101, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [119, 1, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2291225021414604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2291225021414604, 0.20618789081323496] ***
*** starting iteration: 2; err: [Inf, 0.2291225021414604, 0.20618789081323496] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2291225021414604, 0.20618789081323496, 0.1974962089501176] ***
*** starting iteration: 3; err: [Inf, 0.2291225021414604, 0.20618789081323496, 0.1974962089501176] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2291225021414604, 0.20618789081323496, 0.1974962089501176, 0.19253588732711782] ***
*** finished computation of 7 references, err: [Inf, 0.2291225021414604, 0.20618789081323496, 0.1974962089501176, 0.19253588732711782] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 65, 18]]
** centroid: 1, normalized-entropy: 0.7544062039636575, [(2, 65), (3, 18)]
*** center 2: selecting labels [1] (freq >= 2) [from [135, 0, 0]]
*** center 3: selecting labels [1] (freq >= 2) [from [62, 0, 0]]
*** center 4: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [76, 35, 0]]
** centroid: 5, normalized-entropy: 0.8992140950457247, [(1, 76), (2, 35)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [9, 82, 0]]
** centroid: 6, normalized-entropy: 0.4655024490815131, [(1, 9), (2, 82)]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [21, 59, 0]]
** centroid: 7, normalized-entropy: 0.8304955225035798, [(1, 21), (2, 59)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2408300880342722] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408300880342722, 0.20156701571745114] ***
*** starting iteration: 2; err: [Inf, 0.2408300880342722, 0.20156701571745114] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408300880342722, 0.20156701571745114, 0.19728030329025623] ***
*** starting iteration: 3; err: [Inf, 0.2408300880342722, 0.20156701571745114, 0.19728030329025623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2408300880342722, 0.20156701571745114, 0.19728030329025623, 0.1951165217180168] ***
*** finished computation of 7 references, err: [Inf, 0.2408300880342722, 0.20156701571745114, 0.19728030329025623, 0.1951165217180168] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [74, 14, 0]]
** centroid: 1, normalized-entropy: 0.6321302781219708, [(1, 74), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [68, 55, 0]]
** centroid: 2, normalized-entropy: 0.9919270464052614, [(1, 68), (2, 55)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 118, 24]]
** centroid: 3, normalized-entropy: 0.6554444445609846, [(2, 118), (3, 24)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [99, 2, 0]]
** centroid: 4, normalized-entropy: 0.1403272709905931, [(1, 99), (2, 2)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [44, 27, 0]]
** centroid: 5, normalized-entropy: 0.9582407282588409, [(1, 44), (2, 27)]
*** center 6: selecting labels [1] (freq >= 2) [from [76, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [35, 31, 0]]
** centroid: 7, normalized-entropy: 0.9973487979180449, [(1, 35), (2, 31)]
finished with 12 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 16)
[0.9550148951346555, 0.9349918781056505, 0.9339998681316047, 0.927031822241403, 0.9249818680956405, 0.9240108371844898, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 17
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.3817811206615231] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3817811206615231, 0.29654945136542926] ***
*** starting iteration: 2; err: [Inf, 0.3817811206615231, 0.29654945136542926] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3817811206615231, 0.29654945136542926, 0.2877271551325604] ***
*** starting iteration: 3; err: [Inf, 0.3817811206615231, 0.29654945136542926, 0.2877271551325604] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3817811206615231, 0.29654945136542926, 0.2877271551325604, 0.28595589173191394] ***
*** starting iteration: 4; err: [Inf, 0.3817811206615231, 0.29654945136542926, 0.2877271551325604, 0.28595589173191394] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3817811206615231, 0.29654945136542926, 0.2877271551325604, 0.28595589173191394, 0.28577357968287515] ***
*** finished computation of 3 references, err: [Inf, 0.3817811206615231, 0.29654945136542926, 0.2877271551325604, 0.28595589173191394, 0.28577357968287515] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [263, 5, 0]]
** centroid: 1, normalized-entropy: 0.13383047904615933, [(1, 263), (2, 5)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 167, 22]]
** centroid: 2, normalized-entropy: 0.5189296599184945, [(2, 167), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [147, 62, 0]]
** centroid: 3, normalized-entropy: 0.8771581467462808, [(1, 147), (2, 62)]
finished with 5 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32159665532304027] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32159665532304027, 0.2938809079918145] ***
*** starting iteration: 2; err: [Inf, 0.32159665532304027, 0.2938809079918145] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32159665532304027, 0.2938809079918145, 0.2941198618077244] ***
*** finished computation of 3 references, err: [Inf, 0.32159665532304027, 0.2938809079918145, 0.2941198618077244] ***
*** center 1: selecting labels [1] (freq >= 2) [from [215, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [68, 133, 18]]
** centroid: 2, normalized-entropy: 0.7931843706016377, [(1, 68), (2, 133), (3, 18)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [125, 108, 0]]
** centroid: 3, normalized-entropy: 0.9961565917941281, [(1, 125), (2, 108)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.4049889751286923] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164] ***
*** starting iteration: 2; err: [Inf, 0.4049889751286923, 0.3497148623782164] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636] ***
*** starting iteration: 3; err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997] ***
*** starting iteration: 4; err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686] ***
*** starting iteration: 5; err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087] ***
*** starting iteration: 6; err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087, 0.3269546937554896] ***
*** starting iteration: 7; err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087, 0.3269546937554896] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087, 0.3269546937554896, 0.3257936416012326] ***
*** starting iteration: 8; err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087, 0.3269546937554896, 0.3257936416012326] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087, 0.3269546937554896, 0.3257936416012326, 0.3248449637787766] ***
*** finished computation of 3 references, err: [Inf, 0.4049889751286923, 0.3497148623782164, 0.33990939146932636, 0.33466610914260997, 0.33062063990512686, 0.3284273821584087, 0.3269546937554896, 0.3257936416012326, 0.3248449637787766] ***
*** center 1: selecting labels [1] (freq >= 2) [from [239, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [66, 140, 1]]
** centroid: 2, normalized-entropy: 0.904803273542669, [(1, 66), (2, 140)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [91, 107, 23]]
** centroid: 3, normalized-entropy: 0.8665670593076649, [(1, 91), (2, 107), (3, 23)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9550148951346555, 0.9349918781056505, 0.9339998681316047, 0.927031822241403, 0.9249818680956405, 0.9240108371844898, 0.9229888571205936, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 18
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.2244016739583087] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2244016739583087, 0.18948372662998736] ***
*** starting iteration: 2; err: [Inf, 0.2244016739583087, 0.18948372662998736] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194] ***
*** starting iteration: 3; err: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957] ***
*** starting iteration: 4; err: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957, 0.18099782687808755] ***
*** starting iteration: 5; err: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957, 0.18099782687808755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957, 0.18099782687808755, 0.17990820087364007] ***
*** starting iteration: 6; err: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957, 0.18099782687808755, 0.17990820087364007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957, 0.18099782687808755, 0.17990820087364007, 0.18010385748769703] ***
*** finished computation of 7 references, err: [Inf, 0.2244016739583087, 0.18948372662998736, 0.185972997855194, 0.18478965482742957, 0.18099782687808755, 0.17990820087364007, 0.18010385748769703] ***
*** center 1: selecting labels [1] (freq >= 1) [from [106, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 82, 18]]
** centroid: 2, normalized-entropy: 0.6800770457282798, [(2, 82), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 33, 0]]
** centroid: 4, normalized-entropy: 0.9081783472997053, [(1, 69), (2, 33)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [55, 43, 0]]
** centroid: 5, normalized-entropy: 0.9891571023188154, [(1, 55), (2, 43)]
*** center 6: selecting labels [1] (freq >= 1) [from [89, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [8, 83, 0]]
** centroid: 7, normalized-entropy: 0.4294619720471057, [(1, 8), (2, 83)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23369997795412523] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23369997795412523, 0.19012796796030468] ***
*** starting iteration: 2; err: [Inf, 0.23369997795412523, 0.19012796796030468] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23369997795412523, 0.19012796796030468, 0.18681197384982048] ***
*** starting iteration: 3; err: [Inf, 0.23369997795412523, 0.19012796796030468, 0.18681197384982048] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23369997795412523, 0.19012796796030468, 0.18681197384982048, 0.18594632474509803] ***
*** finished computation of 7 references, err: [Inf, 0.23369997795412523, 0.19012796796030468, 0.18681197384982048, 0.18594632474509803] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [108, 5, 0]]
** centroid: 1, normalized-entropy: 0.26144010659136985, [(1, 108), (2, 5)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [68, 21, 0]]
** centroid: 2, normalized-entropy: 0.7882487221644084, [(1, 68), (2, 21)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 77, 22]]
** centroid: 3, normalized-entropy: 0.7642045065086204, [(2, 77), (3, 22)]
*** center 4: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [28, 73, 0]]
** centroid: 5, normalized-entropy: 0.8516458330898723, [(1, 28), (2, 73)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [42, 58, 0]]
** centroid: 6, normalized-entropy: 0.9814538950336533, [(1, 42), (2, 58)]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24727835477297677] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24727835477297677, 0.19393635474737436] ***
*** starting iteration: 2; err: [Inf, 0.24727835477297677, 0.19393635474737436] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24727835477297677, 0.19393635474737436, 0.1888181753219224] ***
*** starting iteration: 3; err: [Inf, 0.24727835477297677, 0.19393635474737436, 0.1888181753219224] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24727835477297677, 0.19393635474737436, 0.1888181753219224, 0.18789064744836476] ***
*** finished computation of 7 references, err: [Inf, 0.24727835477297677, 0.19393635474737436, 0.1888181753219224, 0.18789064744836476] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [97, 6, 0]]
** centroid: 1, normalized-entropy: 0.32046828741158423, [(1, 97), (2, 6)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 46, 24]]
** centroid: 2, normalized-entropy: 0.927526588431676, [(2, 46), (3, 24)]
*** center 3: selecting labels [1] (freq >= 1) [from [104, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [93, 24, 0]]
** centroid: 4, normalized-entropy: 0.7320666900931937, [(1, 93), (2, 24)]
*** center 5: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 99, 0]]
** centroid: 6, normalized-entropy: 0.1403272709905931, [(1, 2), (2, 99)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [4, 72, 0]]
** centroid: 7, normalized-entropy: 0.2974722489192896, [(1, 4), (2, 72)]
finished with 9 centroids; started with 7
generating 4 configurations using top 12 configurations, starting with 18)
[0.9550148951346555, 0.9379918840996685, 0.9349918781056505, 0.9339998681316047, 0.927031822241403, 0.9249818680956405, 0.9240108371844898, 0.9229888571205936, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 18
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9550148951346555, 0.9379918840996685, 0.9349918781056505, 0.9339998681316047, 0.927031822241403, 0.9249818680956405, 0.9240108371844898, 0.9229888571205936, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 18
iteration 7 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9550148951346555, 0.9379918840996685, 0.9349918781056505, 0.9339998681316047, 0.927031822241403, 0.9249818680956405, 0.9240108371844898, 0.9229888571205936, 0.9210168252084419, 0.9039818261375148, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 20
iteration 8 finished
*** starting iteration: 1; err: [Inf, 0.39996112065666634] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.39996112065666634, 0.32951668807579476] ***
*** finished computation of 3 references, err: [Inf, 0.39996112065666634, 0.32951668807579476] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [126, 119, 0]]
** centroid: 1, normalized-entropy: 0.9994110647387552, [(1, 126), (2, 119)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [18, 94, 22]]
** centroid: 2, normalized-entropy: 0.7418531078103453, [(1, 18), (2, 94), (3, 22)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [266, 21, 0]]
** centroid: 3, normalized-entropy: 0.3776463213737003, [(1, 266), (2, 21)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32440607057607873] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32440607057607873, 0.29244645082739473] ***
*** finished computation of 3 references, err: [Inf, 0.32440607057607873, 0.29244645082739473] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [9, 204, 18]]
** centroid: 1, normalized-entropy: 0.39601435037437277, [(1, 9), (2, 204), (3, 18)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [211, 4, 0]]
** centroid: 2, normalized-entropy: 0.13353271555589716, [(1, 211), (2, 4)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [188, 33, 0]]
** centroid: 3, normalized-entropy: 0.6081391654809121, [(1, 188), (2, 33)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3382881372787248] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3382881372787248, 0.30290423369948294] ***
*** finished computation of 3 references, err: [Inf, 0.3382881372787248, 0.30290423369948294] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [199, 22, 0]]
** centroid: 1, normalized-entropy: 0.46755959514615253, [(1, 199), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [197, 66, 0]]
** centroid: 2, normalized-entropy: 0.8127812694802716, [(1, 197), (2, 66)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 159, 24]]
** centroid: 3, normalized-entropy: 0.5605769426145328, [(2, 159), (3, 24)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.31070597239353276] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31070597239353276, 0.24388234291991986] ***
*** finished computation of 3 references, err: [Inf, 0.31070597239353276, 0.24388234291991986] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [131, 117, 3]]
** centroid: 1, normalized-entropy: 0.6809302054347136, [(1, 131), (2, 117), (3, 3)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [121, 117, 19]]
** centroid: 2, normalized-entropy: 0.8241851634797903, [(1, 121), (2, 117), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [158, 0, 0]]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.25078171034618607] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.25078171034618607, 0.2333972959858093] ***
*** finished computation of 3 references, err: [Inf, 0.25078171034618607, 0.2333972959858093] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [121, 163, 18]]
** centroid: 1, normalized-entropy: 0.7895280289830117, [(1, 121), (2, 163), (3, 18)]
*** center 2: selecting labels [1] (freq >= 1) [from [188, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [99, 78, 0]]
** centroid: 3, normalized-entropy: 0.9898220559635807, [(1, 99), (2, 78)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3051593873511603] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3051593873511603, 0.27302702021543523] ***
*** finished computation of 3 references, err: [Inf, 0.3051593873511603, 0.27302702021543523] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [86, 18, 0]]
** centroid: 1, normalized-entropy: 0.6646953053493416, [(1, 86), (2, 18)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [136, 148, 24]]
** centroid: 2, normalized-entropy: 0.8301173699554092, [(1, 136), (2, 148), (3, 24)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [174, 81, 0]]
** centroid: 3, normalized-entropy: 0.9018043446575508, [(1, 174), (2, 81)]
finished with 7 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 20)
[0.9550148951346555, 0.9379918840996685, 0.9349918781056505, 0.9339998681316047, 0.927031822241403, 0.9249818680956405, 0.9240108371844898, 0.9229888571205936, 0.9210168252084419, 0.9160058261854669, 0.9039818261375148, 0.9019918121714529, 0.8960187732642821, 0.8899827971684259, 0.8899588210965458, 0.8809857761953571, 0.8770117422812035, 0.8759927592262922, 0.8410686135237033, 0.7870115624606643]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l2_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :fft, 0.6, 1) => 0.9550148951346555
finished with 20
iteration 9 finished
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.19324320058058947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19324320058058947, 0.15156009602639825] ***
*** starting iteration: 2; err: [Inf, 0.19324320058058947, 0.15156009602639825] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19324320058058947, 0.15156009602639825, 0.14745421928772703] ***
*** starting iteration: 3; err: [Inf, 0.19324320058058947, 0.15156009602639825, 0.14745421928772703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19324320058058947, 0.15156009602639825, 0.14745421928772703, 0.1467254389526788] ***
*** finished computation of 7 references, err: [Inf, 0.19324320058058947, 0.15156009602639825, 0.14745421928772703, 0.1467254389526788] ***
*** center 1: selecting labels [1] (freq >= 1) [from [192, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 94, 32]]
** centroid: 2, normalized-entropy: 0.8175072881213616, [(2, 94), (3, 32)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [102, 22, 0]]
** centroid: 3, normalized-entropy: 0.674398887071447, [(1, 102), (2, 22)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [25, 121, 0]]
** centroid: 4, normalized-entropy: 0.660517322889647, [(1, 25), (2, 121)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [21, 124, 0]]
** centroid: 5, normalized-entropy: 0.5967435150747519, [(1, 21), (2, 124)]
*** center 6: selecting labels [1] (freq >= 1) [from [144, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [123, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20023380675353109] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20023380675353109, 0.15528657775558533] ***
*** starting iteration: 2; err: [Inf, 0.20023380675353109, 0.15528657775558533] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652] ***
*** starting iteration: 3; err: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652, 0.1488300733193755] ***
*** starting iteration: 4; err: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652, 0.1488300733193755] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652, 0.1488300733193755, 0.14733864458464085] ***
*** starting iteration: 5; err: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652, 0.1488300733193755, 0.14733864458464085] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652, 0.1488300733193755, 0.14733864458464085, 0.1466429106593132] ***
*** finished computation of 7 references, err: [Inf, 0.20023380675353109, 0.15528657775558533, 0.15079485096223652, 0.1488300733193755, 0.14733864458464085, 0.1466429106593132] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [68, 5, 0]]
** centroid: 1, normalized-entropy: 0.3602750564216625, [(1, 68), (2, 5)]
*** center 2: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 12]]
** centroid: 3, normalized-entropy: 0.6840384356390419, [(2, 54), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 3, 0]]
** centroid: 5, normalized-entropy: 0.2795055456366802, [(1, 59), (2, 3)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [6, 67, 0]]
** centroid: 6, normalized-entropy: 0.4098553703184051, [(1, 6), (2, 67)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19198883043974638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19198883043974638, 0.15166200527735055] ***
*** starting iteration: 2; err: [Inf, 0.19198883043974638, 0.15166200527735055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19198883043974638, 0.15166200527735055, 0.14453861438855528] ***
*** starting iteration: 3; err: [Inf, 0.19198883043974638, 0.15166200527735055, 0.14453861438855528] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19198883043974638, 0.15166200527735055, 0.14453861438855528, 0.14346393327461557] ***
*** starting iteration: 4; err: [Inf, 0.19198883043974638, 0.15166200527735055, 0.14453861438855528, 0.14346393327461557] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19198883043974638, 0.15166200527735055, 0.14453861438855528, 0.14346393327461557, 0.1432185048982501] ***
*** finished computation of 7 references, err: [Inf, 0.19198883043974638, 0.15166200527735055, 0.14453861438855528, 0.14346393327461557, 0.1432185048982501] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [45, 43, 0]]
** centroid: 1, normalized-entropy: 0.9996273710574612, [(1, 45), (2, 43)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 10, 0]]
** centroid: 2, normalized-entropy: 0.625262405223423, [(1, 54), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 57, 20]]
** centroid: 4, normalized-entropy: 0.8263541679009075, [(2, 57), (3, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [4, 64, 0]]
** centroid: 5, normalized-entropy: 0.32275695889739825, [(1, 4), (2, 64)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [64, 3, 0]]
** centroid: 6, normalized-entropy: 0.26377743669413856, [(1, 64), (2, 3)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1978690500454977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1978690500454977, 0.1459781854446046] ***
*** starting iteration: 2; err: [Inf, 0.1978690500454977, 0.1459781854446046] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1978690500454977, 0.1459781854446046, 0.1421872979644686] ***
*** starting iteration: 3; err: [Inf, 0.1978690500454977, 0.1459781854446046, 0.1421872979644686] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1978690500454977, 0.1459781854446046, 0.1421872979644686, 0.14165273143700324] ***
*** finished computation of 7 references, err: [Inf, 0.1978690500454977, 0.1459781854446046, 0.1421872979644686, 0.14165273143700324] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 53, 17]]
** centroid: 2, normalized-entropy: 0.7997594113291759, [(2, 53), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [59, 7, 0]]
** centroid: 3, normalized-entropy: 0.48791799258948565, [(1, 59), (2, 7)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [57, 27, 0]]
** centroid: 4, normalized-entropy: 0.9059282160429994, [(1, 57), (2, 27)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 41, 0]]
** centroid: 5, normalized-entropy: 0.9969562518473082, [(1, 36), (2, 41)]
*** center 6: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 50, 0]]
** centroid: 7, normalized-entropy: 0.13923299905509884, [(1, 1), (2, 50)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18571798720862717] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18571798720862717, 0.1501708127115853] ***
*** starting iteration: 2; err: [Inf, 0.18571798720862717, 0.1501708127115853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18571798720862717, 0.1501708127115853, 0.14746137098502368] ***
*** starting iteration: 3; err: [Inf, 0.18571798720862717, 0.1501708127115853, 0.14746137098502368] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18571798720862717, 0.1501708127115853, 0.14746137098502368, 0.1467577497586608] ***
*** finished computation of 7 references, err: [Inf, 0.18571798720862717, 0.1501708127115853, 0.14746137098502368, 0.1467577497586608] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 92, 17]]
** centroid: 1, normalized-entropy: 0.6245644324971011, [(2, 92), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [52, 5, 0]]
** centroid: 3, normalized-entropy: 0.4288109647301171, [(1, 52), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 18, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 54), (2, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [86, 2, 0]]
** centroid: 5, normalized-entropy: 0.1564910629057016, [(1, 86), (2, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 5, 0]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(1, 60), (2, 5)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 54, 0]]
** centroid: 7, normalized-entropy: 0.13110652958234514, [(1, 1), (2, 54)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19126459760963918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19126459760963918, 0.1470553136933595] ***
*** starting iteration: 2; err: [Inf, 0.19126459760963918, 0.1470553136933595] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19126459760963918, 0.1470553136933595, 0.14400247189030052] ***
*** starting iteration: 3; err: [Inf, 0.19126459760963918, 0.1470553136933595, 0.14400247189030052] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19126459760963918, 0.1470553136933595, 0.14400247189030052, 0.14365764127112926] ***
*** finished computation of 7 references, err: [Inf, 0.19126459760963918, 0.1470553136933595, 0.14400247189030052, 0.14365764127112926] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [34, 56, 0]]
** centroid: 1, normalized-entropy: 0.9564574047992596, [(1, 34), (2, 56)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [59, 19, 0]]
** centroid: 2, normalized-entropy: 0.8009591077369054, [(1, 59), (2, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 77, 15]]
** centroid: 4, normalized-entropy: 0.6415410585827175, [(2, 77), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [29, 33, 0]]
** centroid: 5, normalized-entropy: 0.9969954265557693, [(1, 29), (2, 33)]
*** center 6: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19013148269336672] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19013148269336672, 0.1477028270699084] ***
*** starting iteration: 2; err: [Inf, 0.19013148269336672, 0.1477028270699084] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19013148269336672, 0.1477028270699084, 0.14311708541121335] ***
*** starting iteration: 3; err: [Inf, 0.19013148269336672, 0.1477028270699084, 0.14311708541121335] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19013148269336672, 0.1477028270699084, 0.14311708541121335, 0.1425116853583604] ***
*** finished computation of 7 references, err: [Inf, 0.19013148269336672, 0.1477028270699084, 0.14311708541121335, 0.1425116853583604] ***
*** center 1: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [64, 5, 0]]
** centroid: 2, normalized-entropy: 0.3750514064240124, [(1, 64), (2, 5)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 46, 12]]
** centroid: 3, normalized-entropy: 0.7355085815538399, [(2, 46), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [20, 59, 0]]
** centroid: 5, normalized-entropy: 0.8162554088088008, [(1, 20), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 76, 0]]
** centroid: 6, normalized-entropy: 0.2863969571159561, [(1, 4), (2, 76)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [51, 13, 0]]
** centroid: 7, normalized-entropy: 0.7281342378690551, [(1, 51), (2, 13)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18966398672480136] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18966398672480136, 0.15046815748978407] ***
*** starting iteration: 2; err: [Inf, 0.18966398672480136, 0.15046815748978407] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18966398672480136, 0.15046815748978407, 0.14557504261564463] ***
*** starting iteration: 3; err: [Inf, 0.18966398672480136, 0.15046815748978407, 0.14557504261564463] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18966398672480136, 0.15046815748978407, 0.14557504261564463, 0.14473272150568664] ***
*** finished computation of 7 references, err: [Inf, 0.18966398672480136, 0.15046815748978407, 0.14557504261564463, 0.14473272150568664] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 62, 0]]
** centroid: 1, normalized-entropy: 0.43055186701043935, [(1, 6), (2, 62)]
*** center 2: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [66, 5, 0]]
** centroid: 3, normalized-entropy: 0.3674984948272913, [(1, 66), (2, 5)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [90, 1, 0]]
** centroid: 4, normalized-entropy: 0.08728058888363333, [(1, 90), (2, 1)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [82, 4, 0]]
** centroid: 5, normalized-entropy: 0.2713895875081112, [(1, 82), (2, 4)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 39, 18]]
** centroid: 7, normalized-entropy: 0.8997437586982626, [(2, 39), (3, 18)]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19728112580627202] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19728112580627202, 0.14815332000982015] ***
*** starting iteration: 2; err: [Inf, 0.19728112580627202, 0.14815332000982015] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985] ***
*** starting iteration: 3; err: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985, 0.141750645512715] ***
*** starting iteration: 4; err: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985, 0.141750645512715] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985, 0.141750645512715, 0.1406709822844714] ***
*** starting iteration: 5; err: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985, 0.141750645512715, 0.1406709822844714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985, 0.141750645512715, 0.1406709822844714, 0.1402314687371254] ***
*** finished computation of 7 references, err: [Inf, 0.19728112580627202, 0.14815332000982015, 0.1430903664994985, 0.141750645512715, 0.1406709822844714, 0.1402314687371254] ***
*** center 1: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 4, 0]]
** centroid: 2, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 57, 15]]
** centroid: 3, normalized-entropy: 0.7382848661434506, [(2, 57), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [16, 56, 0]]
** centroid: 5, normalized-entropy: 0.7642045065086204, [(1, 16), (2, 56)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [9, 57, 0]]
** centroid: 6, normalized-entropy: 0.5746356978376794, [(1, 9), (2, 57)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [56, 5, 0]]
** centroid: 7, normalized-entropy: 0.4090731390438265, [(1, 56), (2, 5)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18921095191780476] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18921095191780476, 0.15478949216380716] ***
*** starting iteration: 2; err: [Inf, 0.18921095191780476, 0.15478949216380716] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18921095191780476, 0.15478949216380716, 0.14947311032190919] ***
*** starting iteration: 3; err: [Inf, 0.18921095191780476, 0.15478949216380716, 0.14947311032190919] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18921095191780476, 0.15478949216380716, 0.14947311032190919, 0.14843959798291326] ***
*** starting iteration: 4; err: [Inf, 0.18921095191780476, 0.15478949216380716, 0.14947311032190919, 0.14843959798291326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18921095191780476, 0.15478949216380716, 0.14947311032190919, 0.14843959798291326, 0.147907608050853] ***
*** finished computation of 7 references, err: [Inf, 0.18921095191780476, 0.15478949216380716, 0.14947311032190919, 0.14843959798291326, 0.147907608050853] ***
*** center 1: selecting labels [1] (freq >= 1) [from [105, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [37, 14, 0]]
** centroid: 2, normalized-entropy: 0.8478617451660525, [(1, 37), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 46, 12]]
** centroid: 3, normalized-entropy: 0.7355085815538399, [(2, 46), (3, 12)]
*** center 4: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [11, 71, 0]]
** centroid: 5, normalized-entropy: 0.5687008669370753, [(1, 11), (2, 71)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 51, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1932513419277966] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1932513419277966, 0.14903236610349269] ***
*** starting iteration: 2; err: [Inf, 0.1932513419277966, 0.14903236610349269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1932513419277966, 0.14903236610349269, 0.145650249379687] ***
*** starting iteration: 3; err: [Inf, 0.1932513419277966, 0.14903236610349269, 0.145650249379687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1932513419277966, 0.14903236610349269, 0.145650249379687, 0.1453349494105205] ***
*** finished computation of 7 references, err: [Inf, 0.1932513419277966, 0.14903236610349269, 0.145650249379687, 0.1453349494105205] ***
*** center 1: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 55, 13]]
** centroid: 2, normalized-entropy: 0.7039260680195971, [(2, 55), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 18, 0]]
** centroid: 3, normalized-entropy: 0.8512243352621381, [(1, 47), (2, 18)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [66, 4, 0]]
** centroid: 4, normalized-entropy: 0.3159971329784246, [(1, 66), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [18, 49, 0]]
** centroid: 5, normalized-entropy: 0.8395304981054318, [(1, 18), (2, 49)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [11, 58, 0]]
** centroid: 6, normalized-entropy: 0.6329208984823799, [(1, 11), (2, 58)]
*** center 7: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18136637210659684] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18136637210659684, 0.15337516474816948] ***
*** starting iteration: 2; err: [Inf, 0.18136637210659684, 0.15337516474816948] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18136637210659684, 0.15337516474816948, 0.1485410507458728] ***
*** starting iteration: 3; err: [Inf, 0.18136637210659684, 0.15337516474816948, 0.1485410507458728] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18136637210659684, 0.15337516474816948, 0.1485410507458728, 0.1474500724291429] ***
*** starting iteration: 4; err: [Inf, 0.18136637210659684, 0.15337516474816948, 0.1485410507458728, 0.1474500724291429] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18136637210659684, 0.15337516474816948, 0.1485410507458728, 0.1474500724291429, 0.14709025083109736] ***
*** finished computation of 7 references, err: [Inf, 0.18136637210659684, 0.15337516474816948, 0.1485410507458728, 0.1474500724291429, 0.14709025083109736] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 75, 16]]
** centroid: 1, normalized-entropy: 0.6708561590207726, [(2, 75), (3, 16)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [33, 8, 0]]
** centroid: 3, normalized-entropy: 0.7120640548905481, [(1, 33), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [49, 28, 0]]
** centroid: 4, normalized-entropy: 0.9456603046006401, [(1, 49), (2, 28)]
*** center 5: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [82, 2, 0]]
** centroid: 6, normalized-entropy: 0.1623261801753929, [(1, 82), (2, 2)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 72, 0]]
** centroid: 7, normalized-entropy: 0.24229218908241482, [(1, 3), (2, 72)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19464378693699838] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19464378693699838, 0.15651598286116497] ***
*** starting iteration: 2; err: [Inf, 0.19464378693699838, 0.15651598286116497] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19464378693699838, 0.15651598286116497, 0.15287899343902245] ***
*** starting iteration: 3; err: [Inf, 0.19464378693699838, 0.15651598286116497, 0.15287899343902245] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19464378693699838, 0.15651598286116497, 0.15287899343902245, 0.15177026868052781] ***
*** starting iteration: 4; err: [Inf, 0.19464378693699838, 0.15651598286116497, 0.15287899343902245, 0.15177026868052781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19464378693699838, 0.15651598286116497, 0.15287899343902245, 0.15177026868052781, 0.15091378438659012] ***
*** finished computation of 7 references, err: [Inf, 0.19464378693699838, 0.15651598286116497, 0.15287899343902245, 0.15177026868052781, 0.15091378438659012] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [81, 1, 0]]
** centroid: 1, normalized-entropy: 0.09501724567107643, [(1, 81), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 40, 16]]
** centroid: 2, normalized-entropy: 0.8631205685666311, [(2, 40), (3, 16)]
*** center 3: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [69, 3, 0]]
** centroid: 4, normalized-entropy: 0.24988229283318547, [(1, 69), (2, 3)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 49, 0]]
** centroid: 5, normalized-entropy: 0.14144054254182067, [(1, 1), (2, 49)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [9, 76, 0]]
** centroid: 6, normalized-entropy: 0.48736957102366285, [(1, 9), (2, 76)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18167598755285144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18167598755285144, 0.15195496684871615] ***
*** starting iteration: 2; err: [Inf, 0.18167598755285144, 0.15195496684871615] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634] ***
*** starting iteration: 3; err: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634, 0.14678103426564484] ***
*** starting iteration: 4; err: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634, 0.14678103426564484] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634, 0.14678103426564484, 0.14567692978866398] ***
*** starting iteration: 5; err: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634, 0.14678103426564484, 0.14567692978866398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634, 0.14678103426564484, 0.14567692978866398, 0.14539533569291235] ***
*** finished computation of 7 references, err: [Inf, 0.18167598755285144, 0.15195496684871615, 0.14798768897634, 0.14678103426564484, 0.14567692978866398, 0.14539533569291235] ***
*** center 1: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 20, 0]]
** centroid: 2, normalized-entropy: 0.868533960265235, [(1, 49), (2, 20)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 13]]
** centroid: 3, normalized-entropy: 0.709825885194168, [(2, 54), (3, 13)]
*** center 4: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [19, 42, 0]]
** centroid: 5, normalized-entropy: 0.8948692308065576, [(1, 19), (2, 42)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [15, 64, 0]]
** centroid: 6, normalized-entropy: 0.7012065844539666, [(1, 15), (2, 64)]
*** center 7: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20096507603116334] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20096507603116334, 0.14974327892251313] ***
*** starting iteration: 2; err: [Inf, 0.20096507603116334, 0.14974327892251313] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20096507603116334, 0.14974327892251313, 0.14471077628992499] ***
*** starting iteration: 3; err: [Inf, 0.20096507603116334, 0.14974327892251313, 0.14471077628992499] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20096507603116334, 0.14974327892251313, 0.14471077628992499, 0.14399893618002535] ***
*** finished computation of 7 references, err: [Inf, 0.20096507603116334, 0.14974327892251313, 0.14471077628992499, 0.14399893618002535] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 1, 0]]
** centroid: 1, normalized-entropy: 0.098959095355743, [(1, 77), (2, 1)]
*** center 2: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 42, 16]]
** centroid: 3, normalized-entropy: 0.8497511372532974, [(2, 42), (3, 16)]
*** center 4: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [64, 12, 0]]
** centroid: 5, normalized-entropy: 0.6292492238560344, [(1, 64), (2, 12)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [3, 64, 0]]
** centroid: 6, normalized-entropy: 0.26377743669413856, [(1, 3), (2, 64)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18697864917293192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18697864917293192, 0.14587225528806447] ***
*** starting iteration: 2; err: [Inf, 0.18697864917293192, 0.14587225528806447] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18697864917293192, 0.14587225528806447, 0.14106026883609593] ***
*** starting iteration: 3; err: [Inf, 0.18697864917293192, 0.14587225528806447, 0.14106026883609593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18697864917293192, 0.14587225528806447, 0.14106026883609593, 0.14037958383373916] ***
*** finished computation of 7 references, err: [Inf, 0.18697864917293192, 0.14587225528806447, 0.14106026883609593, 0.14037958383373916] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [1, 70, 0]]
** centroid: 1, normalized-entropy: 0.10679203237584184, [(1, 1), (2, 70)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [51, 17, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 51), (2, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 65, 11]]
** centroid: 4, normalized-entropy: 0.5965109917085881, [(2, 65), (3, 11)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 27, 0]]
** centroid: 5, normalized-entropy: 0.8976844934141643, [(1, 59), (2, 27)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [75, 1, 0]]
** centroid: 6, normalized-entropy: 0.10106696361212422, [(1, 75), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 3, 0]]
** centroid: 7, normalized-entropy: 0.2863969571159561, [(1, 57), (2, 3)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20423741640523077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20423741640523077, 0.14987194043584168] ***
*** starting iteration: 2; err: [Inf, 0.20423741640523077, 0.14987194043584168] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20423741640523077, 0.14987194043584168, 0.14547913937084378] ***
*** starting iteration: 3; err: [Inf, 0.20423741640523077, 0.14987194043584168, 0.14547913937084378] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20423741640523077, 0.14987194043584168, 0.14547913937084378, 0.1450337220672518] ***
*** finished computation of 7 references, err: [Inf, 0.20423741640523077, 0.14987194043584168, 0.14547913937084378, 0.1450337220672518] ***
*** center 1: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [78, 4, 0]]
** centroid: 2, normalized-entropy: 0.2811937964320427, [(1, 78), (2, 4)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 49, 11]]
** centroid: 3, normalized-entropy: 0.6873150928309273, [(2, 49), (3, 11)]
*** center 4: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [61, 20, 0]]
** centroid: 5, normalized-entropy: 0.8063495153650776, [(1, 61), (2, 20)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 55, 0]]
** centroid: 6, normalized-entropy: 0.4138168503036336, [(1, 5), (2, 55)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 51, 0]]
** centroid: 7, normalized-entropy: 0.13709947889981755, [(1, 1), (2, 51)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20036124169826508] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20036124169826508, 0.15309114192798734] ***
*** starting iteration: 2; err: [Inf, 0.20036124169826508, 0.15309114192798734] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20036124169826508, 0.15309114192798734, 0.1480469250236638] ***
*** starting iteration: 3; err: [Inf, 0.20036124169826508, 0.15309114192798734, 0.1480469250236638] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20036124169826508, 0.15309114192798734, 0.1480469250236638, 0.1473231383524835] ***
*** finished computation of 7 references, err: [Inf, 0.20036124169826508, 0.15309114192798734, 0.1480469250236638, 0.1473231383524835] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [80, 1, 0]]
** centroid: 1, normalized-entropy: 0.09597040299587173, [(1, 80), (2, 1)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 42, 14]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(2, 42), (3, 14)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [65, 1, 0]]
** centroid: 3, normalized-entropy: 0.11327430349709665, [(1, 65), (2, 1)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [70, 5, 0]]
** centroid: 4, normalized-entropy: 0.3533593350214213, [(1, 70), (2, 5)]
*** center 5: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [15, 75, 0]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(1, 15), (2, 75)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [2, 63, 0]]
** centroid: 7, normalized-entropy: 0.19823496409776642, [(1, 2), (2, 63)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20264253196306525] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20264253196306525, 0.1520593846454285] ***
*** starting iteration: 2; err: [Inf, 0.20264253196306525, 0.1520593846454285] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20264253196306525, 0.1520593846454285, 0.1462617664784193] ***
*** starting iteration: 3; err: [Inf, 0.20264253196306525, 0.1520593846454285, 0.1462617664784193] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20264253196306525, 0.1520593846454285, 0.1462617664784193, 0.14487532782740892] ***
*** starting iteration: 4; err: [Inf, 0.20264253196306525, 0.1520593846454285, 0.1462617664784193, 0.14487532782740892] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20264253196306525, 0.1520593846454285, 0.1462617664784193, 0.14487532782740892, 0.14404776327102445] ***
*** finished computation of 7 references, err: [Inf, 0.20264253196306525, 0.1520593846454285, 0.1462617664784193, 0.14487532782740892, 0.14404776327102445] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 13]]
** centroid: 2, normalized-entropy: 0.6402569436810504, [(2, 67), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 9, 0]]
** centroid: 3, normalized-entropy: 0.6098403047164005, [(1, 51), (2, 9)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [64, 21, 0]]
** centroid: 4, normalized-entropy: 0.806583102274714, [(1, 64), (2, 21)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [34, 29, 0]]
** centroid: 5, normalized-entropy: 0.9954515828457716, [(1, 34), (2, 29)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 58, 0]]
** centroid: 6, normalized-entropy: 0.3451173149449528, [(1, 4), (2, 58)]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20438115257024764] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20438115257024764, 0.155507717769593] ***
*** starting iteration: 2; err: [Inf, 0.20438115257024764, 0.155507717769593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20438115257024764, 0.155507717769593, 0.15146854014182462] ***
*** starting iteration: 3; err: [Inf, 0.20438115257024764, 0.155507717769593, 0.15146854014182462] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20438115257024764, 0.155507717769593, 0.15146854014182462, 0.1509531743079424] ***
*** finished computation of 7 references, err: [Inf, 0.20438115257024764, 0.155507717769593, 0.15146854014182462, 0.1509531743079424] ***
*** center 1: selecting labels [1] (freq >= 1) [from [91, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 39, 17]]
** centroid: 2, normalized-entropy: 0.8856128713989709, [(2, 39), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [87, 4, 0]]
** centroid: 4, normalized-entropy: 0.26014536394771426, [(1, 87), (2, 4)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 15, 0]]
** centroid: 5, normalized-entropy: 0.7273006785144036, [(1, 59), (2, 15)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 55, 0]]
** centroid: 6, normalized-entropy: 0.3576467062456333, [(1, 4), (2, 55)]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18664774947054685] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18664774947054685, 0.15051087120361625] ***
*** starting iteration: 2; err: [Inf, 0.18664774947054685, 0.15051087120361625] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18664774947054685, 0.15051087120361625, 0.14735645690374077] ***
*** starting iteration: 3; err: [Inf, 0.18664774947054685, 0.15051087120361625, 0.14735645690374077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18664774947054685, 0.15051087120361625, 0.14735645690374077, 0.1466848200317472] ***
*** finished computation of 7 references, err: [Inf, 0.18664774947054685, 0.15051087120361625, 0.14735645690374077, 0.1466848200317472] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 75, 13]]
** centroid: 1, normalized-entropy: 0.6041234581483739, [(2, 75), (3, 13)]
*** center 2: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 6, 0]]
** centroid: 3, normalized-entropy: 0.4637773498877517, [(1, 55), (2, 6)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [88, 6, 0]]
** centroid: 5, normalized-entropy: 0.3424637724817958, [(1, 88), (2, 6)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 60, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [33, 39, 0]]
** centroid: 7, normalized-entropy: 0.9949848281859699, [(1, 33), (2, 39)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18579218743368983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18579218743368983, 0.14827932532364502] ***
*** starting iteration: 2; err: [Inf, 0.18579218743368983, 0.14827932532364502] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18579218743368983, 0.14827932532364502, 0.14535494216158987] ***
*** starting iteration: 3; err: [Inf, 0.18579218743368983, 0.14827932532364502, 0.14535494216158987] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18579218743368983, 0.14827932532364502, 0.14535494216158987, 0.14440348029322922] ***
*** finished computation of 7 references, err: [Inf, 0.18579218743368983, 0.14827932532364502, 0.14535494216158987, 0.14440348029322922] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [55, 9, 0]]
** centroid: 1, normalized-entropy: 0.5858732928619204, [(1, 55), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [53, 23, 0]]
** centroid: 2, normalized-entropy: 0.8844839729019952, [(1, 53), (2, 23)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 51, 15]]
** centroid: 3, normalized-entropy: 0.7732266742876346, [(2, 51), (3, 15)]
*** center 4: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 50, 0]]
** centroid: 5, normalized-entropy: 0.9807983646944296, [(1, 36), (2, 50)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 54, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1795981119312346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1795981119312346, 0.14628056363761424] ***
*** starting iteration: 2; err: [Inf, 0.1795981119312346, 0.14628056363761424] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1795981119312346, 0.14628056363761424, 0.1427217188840732] ***
*** starting iteration: 3; err: [Inf, 0.1795981119312346, 0.14628056363761424, 0.1427217188840732] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1795981119312346, 0.14628056363761424, 0.1427217188840732, 0.14195849091932178] ***
*** finished computation of 7 references, err: [Inf, 0.1795981119312346, 0.14628056363761424, 0.1427217188840732, 0.14195849091932178] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 81, 17]]
** centroid: 1, normalized-entropy: 0.665580063146735, [(2, 81), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [49, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [52, 28, 0]]
** centroid: 4, normalized-entropy: 0.9340680553754911, [(1, 52), (2, 28)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 11, 0]]
** centroid: 5, normalized-entropy: 0.6274303352684106, [(1, 59), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [4, 56, 0]]
** centroid: 6, normalized-entropy: 0.3533593350214213, [(1, 4), (2, 56)]
*** center 7: selecting labels [1] (freq >= 1) [from [82, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18853052013681737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18853052013681737, 0.14997977810073643] ***
*** starting iteration: 2; err: [Inf, 0.18853052013681737, 0.14997977810073643] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18853052013681737, 0.14997977810073643, 0.1455485129803419] ***
*** starting iteration: 3; err: [Inf, 0.18853052013681737, 0.14997977810073643, 0.1455485129803419] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18853052013681737, 0.14997977810073643, 0.1455485129803419, 0.14470168616855517] ***
*** finished computation of 7 references, err: [Inf, 0.18853052013681737, 0.14997977810073643, 0.1455485129803419, 0.14470168616855517] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [30, 55, 0]]
** centroid: 1, normalized-entropy: 0.9366673818775627, [(1, 30), (2, 55)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [46, 4, 0]]
** centroid: 2, normalized-entropy: 0.4021791902022729, [(1, 46), (2, 4)]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 59, 12]]
** centroid: 4, normalized-entropy: 0.6554444445609846, [(2, 59), (3, 12)]
*** center 5: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [60, 12, 0]]
** centroid: 6, normalized-entropy: 0.6500224216483541, [(1, 60), (2, 12)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [1, 47, 0]]
** centroid: 7, normalized-entropy: 0.14609425012013613, [(1, 1), (2, 47)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19787988353520633] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19787988353520633, 0.1494724101955071] ***
*** starting iteration: 2; err: [Inf, 0.19787988353520633, 0.1494724101955071] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19787988353520633, 0.1494724101955071, 0.14380786703363993] ***
*** starting iteration: 3; err: [Inf, 0.19787988353520633, 0.1494724101955071, 0.14380786703363993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19787988353520633, 0.1494724101955071, 0.14380786703363993, 0.1427691228929907] ***
*** starting iteration: 4; err: [Inf, 0.19787988353520633, 0.1494724101955071, 0.14380786703363993, 0.1427691228929907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19787988353520633, 0.1494724101955071, 0.14380786703363993, 0.1427691228929907, 0.14265517417714] ***
*** finished computation of 7 references, err: [Inf, 0.19787988353520633, 0.1494724101955071, 0.14380786703363993, 0.1427691228929907, 0.14265517417714] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [6, 60, 0]]
** centroid: 1, normalized-entropy: 0.43949698692151346, [(1, 6), (2, 60)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [46, 38, 0]]
** centroid: 3, normalized-entropy: 0.9934472383802028, [(1, 46), (2, 38)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 61, 15]]
** centroid: 4, normalized-entropy: 0.7166336117927455, [(2, 61), (3, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [59, 10, 0]]
** centroid: 5, normalized-entropy: 0.5969995167604553, [(1, 59), (2, 10)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [63, 11, 0]]
** centroid: 6, normalized-entropy: 0.6064481901491525, [(1, 63), (2, 11)]
*** center 7: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18438478585891427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18438478585891427, 0.15127114617824555] ***
*** starting iteration: 2; err: [Inf, 0.18438478585891427, 0.15127114617824555] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18438478585891427, 0.15127114617824555, 0.145568904845044] ***
*** starting iteration: 3; err: [Inf, 0.18438478585891427, 0.15127114617824555, 0.145568904845044] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18438478585891427, 0.15127114617824555, 0.145568904845044, 0.14459024138469248] ***
*** finished computation of 7 references, err: [Inf, 0.18438478585891427, 0.15127114617824555, 0.145568904845044, 0.14459024138469248] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [20, 63, 0]]
** centroid: 1, normalized-entropy: 0.7966394665488286, [(1, 20), (2, 63)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [54, 10, 0]]
** centroid: 2, normalized-entropy: 0.625262405223423, [(1, 54), (2, 10)]
*** center 3: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 48, 16]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(2, 48), (3, 16)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [87, 1, 0]]
** centroid: 5, normalized-entropy: 0.08970338978685011, [(1, 87), (2, 1)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 61, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.18820290141366422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18820290141366422, 0.15280572450347243] ***
*** starting iteration: 2; err: [Inf, 0.18820290141366422, 0.15280572450347243] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18820290141366422, 0.15280572450347243, 0.14772778286412358] ***
*** starting iteration: 3; err: [Inf, 0.18820290141366422, 0.15280572450347243, 0.14772778286412358] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18820290141366422, 0.15280572450347243, 0.14772778286412358, 0.14547069476358593] ***
*** starting iteration: 4; err: [Inf, 0.18820290141366422, 0.15280572450347243, 0.14772778286412358, 0.14547069476358593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.18820290141366422, 0.15280572450347243, 0.14772778286412358, 0.14547069476358593, 0.14448218525294215] ***
*** finished computation of 7 references, err: [Inf, 0.18820290141366422, 0.15280572450347243, 0.14772778286412358, 0.14547069476358593, 0.14448218525294215] ***
*** center 1: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [48, 16, 0]]
** centroid: 2, normalized-entropy: 0.8112781244591328, [(1, 48), (2, 16)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 58, 20]]
** centroid: 3, normalized-entropy: 0.8212809417449864, [(2, 58), (3, 20)]
*** center 4: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [8, 65, 0]]
** centroid: 5, normalized-entropy: 0.4986751363204345, [(1, 8), (2, 65)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [47, 37, 0]]
** centroid: 6, normalized-entropy: 0.9897525351939971, [(1, 47), (2, 37)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2071812941841781] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071812941841781, 0.14828438392374665] ***
*** starting iteration: 2; err: [Inf, 0.2071812941841781, 0.14828438392374665] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071812941841781, 0.14828438392374665, 0.14264041705615818] ***
*** starting iteration: 3; err: [Inf, 0.2071812941841781, 0.14828438392374665, 0.14264041705615818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071812941841781, 0.14828438392374665, 0.14264041705615818, 0.14162420466635375] ***
*** starting iteration: 4; err: [Inf, 0.2071812941841781, 0.14828438392374665, 0.14264041705615818, 0.14162420466635375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2071812941841781, 0.14828438392374665, 0.14264041705615818, 0.14162420466635375, 0.14124425770132804] ***
*** finished computation of 7 references, err: [Inf, 0.2071812941841781, 0.14828438392374665, 0.14264041705615818, 0.14162420466635375, 0.14124425770132804] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [13, 64, 0]]
** centroid: 1, normalized-entropy: 0.6550239908788728, [(1, 13), (2, 64)]
*** center 2: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 15, 0]]
** centroid: 3, normalized-entropy: 0.7982441335646697, [(1, 47), (2, 15)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [83, 6, 0]]
** centroid: 4, normalized-entropy: 0.35620480393132253, [(1, 83), (2, 6)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 39, 18]]
** centroid: 5, normalized-entropy: 0.8997437586982626, [(2, 39), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [3, 60, 0]]
** centroid: 7, normalized-entropy: 0.2761954276479391, [(1, 3), (2, 60)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1835017640031874] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1835017640031874, 0.15188705572672187] ***
*** starting iteration: 2; err: [Inf, 0.1835017640031874, 0.15188705572672187] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1835017640031874, 0.15188705572672187, 0.14769815779291093] ***
*** starting iteration: 3; err: [Inf, 0.1835017640031874, 0.15188705572672187, 0.14769815779291093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1835017640031874, 0.15188705572672187, 0.14769815779291093, 0.1468326810505241] ***
*** finished computation of 7 references, err: [Inf, 0.1835017640031874, 0.15188705572672187, 0.14769815779291093, 0.1468326810505241] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [93, 9, 0]]
** centroid: 1, normalized-entropy: 0.43055186701043935, [(1, 93), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [57, 8, 0]]
** centroid: 2, normalized-entropy: 0.5381411852224502, [(1, 57), (2, 8)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 54, 14]]
** centroid: 3, normalized-entropy: 0.7335379291086666, [(2, 54), (3, 14)]
*** center 4: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [5, 61, 0]]
** centroid: 5, normalized-entropy: 0.38705142139219795, [(1, 5), (2, 61)]
*** center 6: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
finished with 8 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.1874517092630267] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754] ***
*** starting iteration: 2; err: [Inf, 0.1874517092630267, 0.15076730912178754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983] ***
*** starting iteration: 3; err: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654] ***
*** starting iteration: 4; err: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827] ***
*** starting iteration: 5; err: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827, 0.14114426417602227] ***
*** starting iteration: 6; err: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827, 0.14114426417602227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827, 0.14114426417602227, 0.13995650621131062] ***
*** starting iteration: 7; err: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827, 0.14114426417602227, 0.13995650621131062] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827, 0.14114426417602227, 0.13995650621131062, 0.13964278624393045] ***
*** finished computation of 7 references, err: [Inf, 0.1874517092630267, 0.15076730912178754, 0.14561058166529983, 0.14365620352560654, 0.14228608056157827, 0.14114426417602227, 0.13995650621131062, 0.13964278624393045] ***
*** center 1: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 44, 17]]
** centroid: 2, normalized-entropy: 0.8536576732793314, [(2, 44), (3, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [51, 2, 0]]
** centroid: 3, normalized-entropy: 0.23181305002459035, [(1, 51), (2, 2)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 20, 0]]
** centroid: 4, normalized-entropy: 0.8014698931335286, [(1, 62), (2, 20)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 59, 0]]
** centroid: 5, normalized-entropy: 0.12229159706937456, [(1, 1), (2, 59)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [25, 51, 0]]
** centroid: 6, normalized-entropy: 0.9138472873262908, [(1, 25), (2, 51)]
*** center 7: selecting labels [1] (freq >= 1) [from [85, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.19043641055561603] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19043641055561603, 0.1523309324271977] ***
*** starting iteration: 2; err: [Inf, 0.19043641055561603, 0.1523309324271977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19043641055561603, 0.1523309324271977, 0.1475236874539405] ***
*** starting iteration: 3; err: [Inf, 0.19043641055561603, 0.1523309324271977, 0.1475236874539405] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19043641055561603, 0.1523309324271977, 0.1475236874539405, 0.14641448566224427] ***
*** starting iteration: 4; err: [Inf, 0.19043641055561603, 0.1523309324271977, 0.1475236874539405, 0.14641448566224427] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.19043641055561603, 0.1523309324271977, 0.1475236874539405, 0.14641448566224427, 0.14614830729179085] ***
*** finished computation of 7 references, err: [Inf, 0.19043641055561603, 0.1523309324271977, 0.1475236874539405, 0.14641448566224427, 0.14614830729179085] ***
*** center 1: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 11, 0]]
** centroid: 2, normalized-entropy: 0.6500224216483541, [(1, 55), (2, 11)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 45, 18]]
** centroid: 3, normalized-entropy: 0.8631205685666311, [(2, 45), (3, 18)]
*** center 4: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [14, 63, 0]]
** centroid: 5, normalized-entropy: 0.6840384356390419, [(1, 14), (2, 63)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [5, 63, 0]]
** centroid: 6, normalized-entropy: 0.378958787501346, [(1, 5), (2, 63)]
*** center 7: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
finished with 10 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 361,3 => 32,1 => 607), Dict(2 => 380,3 => 36,1 => 584))
[ Info: ===== scores for single classifier: {"micro_f1":0.938,"precision":0.938,"recall":0.938,"macro_recall":0.9548065368901706,"macro_f1":0.9204814640579914,"accuracy":0.938,"class_f1":{"2":0.9182058047493402,"3":0.888888888888889,"1":0.954349698535745},"class_precision":{"2":0.9206349206349206,"3":0.8,"1":0.9601386481802426},"class_recall":{"2":0.9157894736842105,"3":1.0,"1":0.9486301369863014}}
[ Info: ===== scores for 1: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9727529440038452,"macro_f1":0.9420624472535497,"accuracy":0.963,"class_f1":{"2":0.9511228533685601,"3":0.9,"1":0.9750644883920894},"class_precision":{"2":0.9549071618037135,"3":0.8181818181818182,"1":0.9792746113989638},"class_recall":{"2":0.9473684210526315,"3":1.0,"1":0.9708904109589042}}
[ Info: ===== scores for 5: {"micro_f1":0.958,"precision":0.958,"recall":0.958,"macro_recall":0.9705118961788032,"macro_f1":0.9351458709858526,"accuracy":0.958,"class_f1":{"2":0.9451697127937337,"3":0.888888888888889,"1":0.971379011274935},"class_precision":{"2":0.9378238341968912,"3":0.8,"1":0.984182776801406},"class_recall":{"2":0.9526315789473684,"3":1.0,"1":0.958904109589041}}
[ Info: ===== scores for 7: {"micro_f1":0.959,"precision":0.959,"recall":0.959,"macro_recall":0.9713890891612592,"macro_f1":0.9358853638514656,"accuracy":0.959,"class_f1":{"2":0.9465449804432856,"3":0.888888888888889,"1":0.9722222222222222},"class_precision":{"2":0.937984496124031,"3":0.8,"1":0.9859154929577465},"class_recall":{"2":0.9552631578947368,"3":1.0,"1":0.958904109589041}}
[ Info: ===== scores for 9: {"micro_f1":0.961,"precision":0.961,"recall":0.961,"macro_recall":0.9725306416726749,"macro_f1":0.9373039876455107,"accuracy":0.961,"class_f1":{"2":0.9490196078431372,"3":0.888888888888889,"1":0.974003466204506},"class_precision":{"2":0.9428571428571428,"3":0.8,"1":0.9859649122807017},"class_recall":{"2":0.9552631578947368,"3":1.0,"1":0.9623287671232876}}
[ Info: ===== scores for 11: {"micro_f1":0.963,"precision":0.963,"recall":0.963,"macro_recall":0.9739786109108387,"macro_f1":0.9387531480915109,"accuracy":0.963,"class_f1":{"2":0.9516339869281045,"3":0.888888888888889,"1":0.9757365684575391},"class_precision":{"2":0.9454545454545454,"3":0.8,"1":0.987719298245614},"class_recall":{"2":0.9578947368421052,"3":1.0,"1":0.964041095890411}}
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.965, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.961, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.961, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.957, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.958, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.963, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.959, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.965,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.965,"precision":0.965,"recall":0.965,"macro_recall":0.9742009132420092,"macro_f1":0.9506496935029487,"accuracy":0.965,"class_f1":{"2":0.9537648612945839,"3":0.923076923076923,"1":0.9751072961373389},"class_precision":{"2":0.9575596816976127,"3":0.8571428571428571,"1":0.9776247848537005},"class_recall":{"2":0.95,"3":1.0,"1":0.9726027397260274}}
Test Summary: | Pass  Total
AKNC          |    8      8
[955, 1, 1, 2, 1, 3, 1, 3, 3, 3, 2, 7, 1, 1, 3, 8, 2, 4, 1, 2, 1, 2, 4, 7, 6, 5, 10, 7, 3, 7, 1, 10, 7, 5, 4, 4, 10, 5, 7, 3, 5, 47, 24, 2, 14, 11, 8, 27, 11, 8, 26, 6, 6, 14, 12, 30, 4, 10, 209, 1, 14, 17, 4, 3, 3, 8, 30, 11, 13, 2, 24, 49, 11, 10, 37, 38, 39, 173, 4, 12, 3, 30, 7, 47, 26, 96, 21, 11, 8, 36, 4, 25, 9, 36, 4, 40, 13, 8, 15, 3, 8, 2, 2, 22, 4, 4, 35, 78, 9, 7, 10, 71, 56, 5, 5, 6, 13, 17, 13, 5, 7, 19, 8, 45, 5, 10, 13, 46, 12, 7, 30, 30, 95, 57, 7, 15, 130, 13, 75, 89, 11, 31, 27, 2, 10, 10, 139, 4, 40, 3, 37, 7, 33, 5, 9, 9, 44, 37, 16, 12, 17, 7, 21, 19, 28, 23, 159, 19, 7, 54, 19, 5, 27, 58, 16, 7, 22, 36, 11, 14, 49, 6, 16, 3, 10, 5, 11, 4, 24, 30, 46, 32, 4, 51, 10, 67, 48, 5, 14, 141, 7, 20, 1, 6, 15, 97, 4, 6, 31, 101, 20, 39, 7, 8, 64, 362, 336, 68, 52, 17, 13, 9, 11, 129, 17, 226, 36, 9, 44, 16, 17, 8, 35, 15, 25, 56, 8, 31, 2, 3, 33, 26, 208, 32, 6, 30, 1, 313, 9, 4, 23, 27, 25, 12, 97, 238, 12, 27, 90, 158, 69, 8, 12, 10, 215, 4, 11, 20, 86, 25, 43, 20, 15, 95, 2, 71, 36, 30, 14, 52, 10, 7, 3, 7, 51, 11, 224, 2, 9, 6, 44, 9, 90, 12, 22, 7, 21, 7, 29, 2]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.6249999999999999, speedup = 0.2640861725457595, eval_ratio = 0.07471699999999999)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.3955481150793653,"recall":0.3819444444444447,"f1":null,"seconds":0.0001971963793039322,"exhaustive_search_seconds":0.00035596080124378204,"evaluations":538.7734375,"distances_sum":1747.161147607933}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.5747767857142856,"recall":0.573784722222222,"f1":null,"seconds":0.0002970900386571884,"exhaustive_search_seconds":0.00035596080124378204,"evaluations":675.9921875,"distances_sum":1657.3730583366055}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6788194444444441,"recall":0.6788194444444441,"f1":0.6788194444444441,"seconds":0.00041205063462257385,"exhaustive_search_seconds":0.00035596080124378204,"evaluations":810.1015625,"distances_sum":1615.4718121116377}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7395833333333333,"recall":0.7395833333333333,"f1":0.7395833333333333,"seconds":0.000501515343785286,"exhaustive_search_seconds":0.00035596080124378204,"evaluations":937.1328125,"distances_sum":1591.035787019274}
KCenters.DeloneInvIndex> reached performance {"precision":0.8020833333333328,"recall":0.8020833333333328,"f1":0.8020833333333328,"seconds":0.0006896033883094788,"exhaustive_search_seconds":0.00035596080124378204,"evaluations":1036.84375,"distances_sum":1570.083788906917}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7559999999999998, speedup = 0.4044385176404735, eval_ratio = 0.098558)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
