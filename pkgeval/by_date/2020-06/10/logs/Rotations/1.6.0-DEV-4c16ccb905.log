Julia Version 1.6.0-DEV.207
Commit 4c16ccb905 (2020-06-10 16:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed Rotations ──── v1.0.1
  Installed StaticArrays ─ v0.12.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [6038ab10] + Rotations v1.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [6038ab10] + Rotations v1.0.1
  [90137ffa] + StaticArrays v0.12.3
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing Rotations
Status `/tmp/jl_7WQz3S/Project.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [f6369f11] ForwardDiff v0.10.10
  [6038ab10] Rotations v1.0.1
  [90137ffa] StaticArrays v0.12.3
  [b77e0a4c] InteractiveUtils
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_7WQz3S/Manifest.toml`
  [6e4b80f9] BenchmarkTools v0.5.0
  [bbf7d656] CommonSubexpressions v0.2.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [f6369f11] ForwardDiff v0.10.10
  [682c06a0] JSON v0.21.0
  [77ba4419] NaNMath v0.3.3
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [69de0a69] Parsers v1.0.5
  [6038ab10] Rotations v1.0.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.active_repl
Skipping Base.active_repl_backend
Test Summary: | Pass  Total
Util          |  201    201
Test Summary: | Pass  Total
2d Rotations  | 3524   3524
Test Summary:   |   Pass   Total
Rotations Tests | 200933  200933
Test Summary:     | Pass  Total
Derivative checks |   73     73
Test Summary:         | Pass  Total
Principal Value (MRP) | 2000   2000
Test Summary:                    | Pass  Total
Principal Value (UnitQuaternion) | 2000   2000
Test Summary:                | Pass  Total
Principal Value (Angle Axis) | 2000   2000
Test Summary:                     | Pass  Total
Principal Value (Rotation Vector) | 2002   2002
Test Summary:          | Pass  Total
Principal Value (RotX) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotY) | 2000   2000
Test Summary:          | Pass  Total
Principal Value (RotZ) | 2000   2000
Test Summary:           | Pass  Total
Principal Value (RotXY) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZX) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotXZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotYZ) | 3000   3000
Test Summary:           | Pass  Total
Principal Value (RotZY) | 3000   3000
Test Summary:            | Pass  Total
Principal Value (RotXYX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXYZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYXZ) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZXY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotXZY) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotYZX) | 4000   4000
Test Summary:            | Pass  Total
Principal Value (RotZYX) | 4000   4000
Test Summary:    | Pass  Total
Unit Quaternions |   70     70
Test Summary:              | Pass  Total
RodriguesParam basic tests |   23     23
Test Summary:   | Pass  Total
MRP basic tests |   23     23
Test Summary: | Pass  Total
kinematics    |    9      9
Test Summary:   | Pass  Total
Quaternion Maps |   35     35
Test Summary:  | Pass  Total
Rotation Error |   24     24
Test Summary: | Pass  Total
Deprecations  |    3      3
WARNING: using BenchmarkTools.params in module Main conflicts with an existing identifier.
(1/3) tuning "Composition"...
  (1/1) tuning "RotMatrix{3} * RotMatrix{3}"...
  done (took 2.635873946 seconds)
done (took 4.473616704 seconds)
(2/3) tuning "Euler conversions"...
  (1/21) tuning "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.709019571 seconds)
  (2/21) tuning "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.43597484 seconds)
  (3/21) tuning "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.268660596 seconds)
  (4/21) tuning "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.297915736 seconds)
  (5/21) tuning "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.444110965 seconds)
  (6/21) tuning "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.513817019 seconds)
  (7/21) tuning "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.418408632 seconds)
  (8/21) tuning "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.271949579 seconds)
  (9/21) tuning "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.311824534 seconds)
  (10/21) tuning "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.175775566 seconds)
  (11/21) tuning "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.707591361 seconds)
  (12/21) tuning "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.316103425 seconds)
  (13/21) tuning "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.465256688 seconds)
  (14/21) tuning "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.170857622 seconds)
  (15/21) tuning "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.151348605 seconds)
  (16/21) tuning "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.156481182 seconds)
  (17/21) tuning "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.406286947 seconds)
  (18/21) tuning "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.787377732 seconds)
  (19/21) tuning "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.628948749 seconds)
  (20/21) tuning "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.002534184 seconds)
  (21/21) tuning "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.533880289 seconds)
done (took 31.981060383 seconds)
(3/3) tuning "Non-Euler conversions"...
  (1/20) tuning "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.69365923 seconds)
  (2/20) tuning "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.356067143 seconds)
  (3/20) tuning "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 1.054967012 seconds)
  (4/20) tuning "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.493410852 seconds)
  (5/20) tuning "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 1.270423885 seconds)
  (6/20) tuning "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.188162728 seconds)
  (7/20) tuning "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.407959291 seconds)
  (8/20) tuning "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 1.325673793 seconds)
  (9/20) tuning "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.196290221 seconds)
  (10/20) tuning "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.606097871 seconds)
  (11/20) tuning "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 1.386541956 seconds)
  (12/20) tuning "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.565511416 seconds)
  (13/20) tuning "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.458419334 seconds)
  (14/20) tuning "MRP{Float64} -> RotationVec{Float64}"...
  done (took 1.217489631 seconds)
  (15/20) tuning "RotationVec{Float64} -> MRP{Float64}"...
  done (took 1.288395173 seconds)
  (16/20) tuning "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.457646253 seconds)
  (17/20) tuning "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.211275589 seconds)
  (18/20) tuning "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.807427039 seconds)
  (19/20) tuning "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.663219386 seconds)
  (20/20) tuning "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.677007361 seconds)
done (took 29.48196653 seconds)
(1/3) benchmarking "Composition"...
  (1/1) benchmarking "RotMatrix{3} * RotMatrix{3}"...
  done (took 1.12409793 seconds)
done (took 2.186790346 seconds)
(2/3) benchmarking "Euler conversions"...
  (1/21) benchmarking "RotZXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.959589374 seconds)
  (2/21) benchmarking "RotZYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.830768698 seconds)
  (3/21) benchmarking "RotXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.585365597 seconds)
  (4/21) benchmarking "RotYZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.787059273 seconds)
  (5/21) benchmarking "RotZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.475242279 seconds)
  (6/21) benchmarking "RotZYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.004563886 seconds)
  (7/21) benchmarking "RotYZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.902043621 seconds)
  (8/21) benchmarking "RotZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.291018233 seconds)
  (9/21) benchmarking "RotYXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.920160458 seconds)
  (10/21) benchmarking "RotXZY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.931885045 seconds)
  (11/21) benchmarking "RotYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.514140247 seconds)
  (12/21) benchmarking "RotXYX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.887759293 seconds)
  (13/21) benchmarking "RotXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.522866394 seconds)
  (14/21) benchmarking "RotZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.581946106 seconds)
  (15/21) benchmarking "RotXYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.800927898 seconds)
  (16/21) benchmarking "RotX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.265679185 seconds)
  (17/21) benchmarking "RotYZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.876480918 seconds)
  (18/21) benchmarking "RotZXY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 2.03089736 seconds)
  (19/21) benchmarking "RotXZX{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.921671571 seconds)
  (20/21) benchmarking "RotY{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.326942133 seconds)
  (21/21) benchmarking "RotYXZ{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.900044059 seconds)
done (took 37.114457255 seconds)
(3/3) benchmarking "Non-Euler conversions"...
  (1/20) benchmarking "UnitQuaternion{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 0.948587094 seconds)
  (2/20) benchmarking "UnitQuaternion{Float64} -> RotationVec{Float64}"...
  done (took 1.499376691 seconds)
  (3/20) benchmarking "RotMatrix{3,Float64,9} -> RotationVec{Float64}"...
  done (took 1.801032569 seconds)
  (4/20) benchmarking "RotMatrix{3,Float64,9} -> MRP{Float64}"...
  done (took 1.282876732 seconds)
  (5/20) benchmarking "UnitQuaternion{Float64} -> MRP{Float64}"...
  done (took 0.941110718 seconds)
  (6/20) benchmarking "MRP{Float64} -> UnitQuaternion{Float64}"...
  done (took 0.87375304 seconds)
  (7/20) benchmarking "UnitQuaternion{Float64} -> AngleAxis{Float64}"...
  done (took 1.547035435 seconds)
  (8/20) benchmarking "MRP{Float64} -> AngleAxis{Float64}"...
  done (took 2.273081984 seconds)
  (9/20) benchmarking "MRP{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.160959308 seconds)
  (10/20) benchmarking "AngleAxis{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.242469164 seconds)
  (11/20) benchmarking "AngleAxis{Float64} -> RotationVec{Float64}"...
  done (took 0.835396411 seconds)
  (12/20) benchmarking "AngleAxis{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.092433491 seconds)
  (13/20) benchmarking "RotMatrix{3,Float64,9} -> UnitQuaternion{Float64}"...
  done (took 1.233924382 seconds)
  (14/20) benchmarking "MRP{Float64} -> RotationVec{Float64}"...
  done (took 2.072459189 seconds)
  (15/20) benchmarking "RotationVec{Float64} -> MRP{Float64}"...
  done (took 2.019381042 seconds)
  (16/20) benchmarking "AngleAxis{Float64} -> MRP{Float64}"...
  done (took 1.722233062 seconds)
  (17/20) benchmarking "RotationVec{Float64} -> RotMatrix{3,Float64,9}"...
  done (took 1.872014529 seconds)
  (18/20) benchmarking "RotationVec{Float64} -> AngleAxis{Float64}"...
  done (took 1.048514794 seconds)
  (19/20) benchmarking "RotationVec{Float64} -> UnitQuaternion{Float64}"...
  done (took 1.475419048 seconds)
  (20/20) benchmarking "RotMatrix{3,Float64,9} -> AngleAxis{Float64}"...
  done (took 1.792540422 seconds)
done (took 29.501038518 seconds)

Group: Composition
RotMatrix{3} * RotMatrix{3} 10.576 ns

Group: Euler conversions
RotZXZ{Float64} -> RotMatrix{3,Float64,9} 55.551 ns
RotZYX{Float64} -> RotMatrix{3,Float64,9} 49.033 ns
RotXZ{Float64} -> RotMatrix{3,Float64,9}  26.564 ns
RotYZX{Float64} -> RotMatrix{3,Float64,9} 64.617 ns
RotZY{Float64} -> RotMatrix{3,Float64,9}  39.064 ns
RotZYZ{Float64} -> RotMatrix{3,Float64,9} 69.150 ns
RotYZY{Float64} -> RotMatrix{3,Float64,9} 51.748 ns
RotZ{Float64} -> RotMatrix{3,Float64,9}   14.190 ns
RotYXY{Float64} -> RotMatrix{3,Float64,9} 66.706 ns
RotXZY{Float64} -> RotMatrix{3,Float64,9} 64.888 ns
RotYX{Float64} -> RotMatrix{3,Float64,9}  31.362 ns
RotXYX{Float64} -> RotMatrix{3,Float64,9} 65.382 ns
RotXY{Float64} -> RotMatrix{3,Float64,9}  38.461 ns
RotZX{Float64} -> RotMatrix{3,Float64,9}  38.327 ns
RotXYZ{Float64} -> RotMatrix{3,Float64,9} 66.503 ns
RotX{Float64} -> RotMatrix{3,Float64,9}   20.658 ns
RotYZ{Float64} -> RotMatrix{3,Float64,9}  45.889 ns
RotZXY{Float64} -> RotMatrix{3,Float64,9} 62.123 ns
RotXZX{Float64} -> RotMatrix{3,Float64,9} 68.278 ns
RotY{Float64} -> RotMatrix{3,Float64,9}   21.142 ns
RotYXZ{Float64} -> RotMatrix{3,Float64,9} 64.177 ns

Group: Non-Euler conversions
UnitQuaternion{Float64} -> RotMatrix{3,Float64,9} 7.576 ns
UnitQuaternion{Float64} -> RotationVec{Float64}   42.354 ns
RotMatrix{3,Float64,9} -> RotationVec{Float64}    83.045 ns
UnitQuaternion{Float64} -> MRP{Float64}           2.803 ns
MRP{Float64} -> UnitQuaternion{Float64}           5.881 ns
UnitQuaternion{Float64} -> AngleAxis{Float64}     38.315 ns
RotMatrix{3,Float64,9} -> MRP{Float64}            21.070 ns
MRP{Float64} -> AngleAxis{Float64}                102.710 ns
MRP{Float64} -> RotMatrix{3,Float64,9}            35.374 ns
AngleAxis{Float64} -> RotMatrix{3,Float64,9}      30.396 ns
AngleAxis{Float64} -> RotationVec{Float64}        2.855 ns
AngleAxis{Float64} -> UnitQuaternion{Float64}     17.993 ns
RotMatrix{3,Float64,9} -> UnitQuaternion{Float64} 36.597 ns
MRP{Float64} -> RotationVec{Float64}              90.935 ns
RotationVec{Float64} -> MRP{Float64}              105.798 ns
AngleAxis{Float64} -> MRP{Float64}                63.296 ns
RotationVec{Float64} -> RotMatrix{3,Float64,9}    86.240 ns
RotationVec{Float64} -> AngleAxis{Float64}        12.280 ns
RotationVec{Float64} -> UnitQuaternion{Float64}   56.263 ns
RotMatrix{3,Float64,9} -> AngleAxis{Float64}      81.392 ns

    Testing Rotations tests passed 
