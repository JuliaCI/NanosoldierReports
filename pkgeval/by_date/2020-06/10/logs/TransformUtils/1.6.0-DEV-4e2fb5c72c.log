Julia Version 1.6.0-DEV.203
Commit 4e2fb5c72c (2020-06-09 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_jXZk4w/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_jXZk4w/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 -0.053817307150333 -0.17699277248344816; 0.053817307150333 0.0 -0.1555129543223247; 0.17699277248344816 0.1555129543223247 0.0])
dAA = so3([0.0 0.02748492843584875 -0.21739571612100433; -0.02748492843584875 0.0 -0.0469566775370488; 0.21739571612100433 0.0469566775370488 0.0])
dAA = so3([0.0 -0.00397525954143485 0.003866711533600007; 0.00397525954143485 0.0 -0.021786901888919016; -0.003866711533600007 0.021786901888919016 0.0])
dAA = Quaternion(0.9969810664932907, [-0.03289125642360867, -0.050298600400917826, 0.04916267997664676])
dAA = SO3([0.9732204269817943 0.06347668384375185 0.22093598872427758; -0.058433809844984114 0.997861407902479 -0.02929335224726641; -0.22232294162405727 0.015598757228784732 0.9748482899408211])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.8538330374501322 0.03409888698665056 -0.5194289268657962; -0.09624853876008575 0.9909883659415503 -0.09315727215330158; 0.5115714641623683 0.12953503184377443 0.8494205746154275]), [1.5551295432232468, -1.7699277248344816, 0.5381730715033299])
xj = SE3(SO3([0.9387586453108163 -0.22716079983083123 -0.25909491865804307; 0.26969682732199296 0.952393422143353 0.14216325400934038; 0.2144663777533719 -0.20333406128410986 0.955332105780528]), [0.21786901888919014, 0.03866711533600007, 0.0397525954143485])
Dx = SE3(SO3([0.8853000989012247 -0.3896437743603682 0.2538138372659936; 0.32705795223333894 0.9097259865987326 0.25579625718117455; -0.33057046263454426 -0.1434446179163551 0.9328166008516434]), [-1.570849518651089, 1.682134437578113, 0.10275943015441502])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
