Julia Version 1.6.0-DEV.207
Commit 4c16ccb905 (2020-06-10 16:41 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed TransformUtils ─ v0.2.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.5
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.5
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_GA1zsU/Project.toml`
  [9b8138ad] TransformUtils v0.2.5
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_GA1zsU/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.5
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/bw4xv/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.02326146704246078 -0.16661979045109288; -0.02326146704246078 0.0 0.09530058282564366; 0.16661979045109288 -0.09530058282564366 0.0])
dAA = so3([0.0 0.08825368635361613 0.06498163837124243; -0.08825368635361613 0.0 -0.05652671863503738; -0.06498163837124243 0.05652671863503738 0.0])
dAA = so3([0.0 -0.20993007968870067 0.03616207789937175; 0.20993007968870067 0.0 -0.14970929037208788; -0.03616207789937175 0.14970929037208788 0.0])
dAA = Quaternion(0.9964952941621237, [-0.050416489609941655, -0.05672696481088965, 0.035176096308392864])
dAA = SO3([0.9983360457170943 0.02354433016518947 -0.05263843024852198; -0.02747254531085124 0.9967904462535112 -0.07519352041146503; 0.0506991033066581 0.07651451349122422 0.9957786551985851])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.9627609487069607 0.2285440160687855 0.1444264115874364; -0.20576777427345894 0.9659460501897387 -0.1568688981072718; -0.1753595697856827 0.12130894790572325 0.977002129190406]), [-0.9530058282564365, -1.6661979045109285, -0.23261467042460776])
xj = SE3(SO3([0.9449898117092187 -0.14962430195655546 -0.290872521957281; 0.2207553530371533 0.9479235624259719 0.22958221599918496; 0.2413738384150553 -0.28116452134234166 0.928808474373008]), [1.4970929037208789, 0.3616207789937175, 2.0993007968870065])
Dx = SE3(SO3([0.8220477375241899 -0.28979966702148013 -0.490156781270646; 0.45849033442668624 0.847339509864058 0.2679596392381567; 0.3376745925719997 -0.44500776174981144 0.8294238732480259]), [1.5326759493649713, 2.8016010637480577, 2.3140436621071876])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
