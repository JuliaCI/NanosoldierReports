Julia Version 1.6.0-DEV.203
Commit 4e2fb5c72c (2020-06-09 12:13 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
  Installed DataValueInterfaces ───────── v1.0.0
  Installed Reexport ──────────────────── v0.2.0
  Installed Missings ──────────────────── v0.4.3
  Installed LearnBase ─────────────────── v0.2.2
  Installed TableTraits ───────────────── v1.0.0
  Installed KCenters ──────────────────── v0.2.2
  Installed DataStructures ────────────── v0.17.17
  Installed CategoricalArrays ─────────── v0.7.7
  Installed SortingAlgorithms ─────────── v0.3.1
  Installed Tables ────────────────────── v1.0.4
  Installed DataAPI ───────────────────── v1.3.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed OrderedCollections ────────── v1.2.0
  Installed MLLabelUtils ──────────────── v0.5.2
  Installed MappedArrays ──────────────── v0.2.2
  Installed Parsers ───────────────────── v1.0.5
  Installed InvertedIndices ───────────── v1.0.0
  Installed PooledArrays ──────────────── v0.5.3
  Installed Compat ────────────────────── v3.11.0
  Installed MLDataPattern ─────────────── v0.5.3
  Installed StatsBase ─────────────────── v0.32.2
  Installed MLDataUtils ───────────────── v0.5.1
  Installed SimilaritySearch ──────────── v0.3.19
  Installed DataFrames ────────────────── v0.20.2
  Installed JSON ──────────────────────── v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [5d8de97f] + KCenters v0.2.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [324d7699] + CategoricalArrays v0.7.7
  [34da2185] + Compat v3.11.0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.20.2
  [864edb3b] + DataStructures v0.17.17
  [e2d170a0] + DataValueInterfaces v1.0.0
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5d8de97f] + KCenters v0.2.2
  [7f8f8fb0] + LearnBase v0.2.2
  [9920b226] + MLDataPattern v0.5.3
  [cc2ba9b6] + MLDataUtils v0.5.1
  [66a33bbf] + MLLabelUtils v0.5.2
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.2.0
  [69de0a69] + Parsers v1.0.5
  [2dfb63ee] + PooledArrays v0.5.3
  [189a3867] + Reexport v0.2.0
  [053f045d] + SimilaritySearch v0.3.19
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.4
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing KCenters
Status `/tmp/jl_nszVEw/Project.toml`
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [cc2ba9b6] MLDataUtils v0.5.1
  [053f045d] SimilaritySearch v0.3.19
  [2913bbd2] StatsBase v0.32.2
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_nszVEw/Manifest.toml`
  [324d7699] CategoricalArrays v0.7.7
  [34da2185] Compat v3.11.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.20.2
  [864edb3b] DataStructures v0.17.17
  [e2d170a0] DataValueInterfaces v1.0.0
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5d8de97f] KCenters v0.2.2
  [7f8f8fb0] LearnBase v0.2.2
  [9920b226] MLDataPattern v0.5.3
  [cc2ba9b6] MLDataUtils v0.5.1
  [66a33bbf] MLLabelUtils v0.5.2
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.2.0
  [69de0a69] Parsers v1.0.5
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [053f045d] SimilaritySearch v0.3.19
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.4
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
Scores        |    9      9
Test Summary:        | Pass  Total
Clustering with enet |    4      4
[ Info: 1.0716527590155602
[ Info: 0.9364293802777927
[ Info: 0.8326150393486023
[ Info: 0.5541281573474407
Test Summary:        |
Clustering with dnet | No tests
mean(cfft.distances) = 0.3276126202692588
mean(cdnet.distances) = 0.3778487801303466
mean(crand.distances) = 0.3905100360264381
Test Summary:            |
Clustering with KCenters | No tests
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3583984375, conf: {"ssize":2,"bsize":2}, perf: {"precision":null,"recall":0.3583984375,"f1":null,"seconds":4.144385457038879e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":5.4375,"distances_sum":1006.2434880722464}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7958984375, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.7958984375,"f1":0.8767919580419588,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.3359375,"distances_sum":2360.343220107865}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5224609375, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5224609375,"f1":0.6720612720612728,"seconds":4.073604941368103e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":6.5078125,"distances_sum":1502.6598960307447}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7958984375,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.7958984375,"f1":0.8767919580419588,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.3359375,"distances_sum":2360.343220107865}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.9571288086913093,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8203125,"distances_sum":2922.2193959140877}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.896484375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.896484375,"f1":0.9393720862470867,"seconds":5.83939254283905e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.609375,"distances_sum":2773.513969608591}, best_list's length: 8, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.9571288086913093,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8203125,"distances_sum":2922.2193959140877}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":5,"bsize":13}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9755208333333338,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.921875,"distances_sum":3059.4105287290545}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9578697344322348,"seconds":6.070360541343689e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.8359375,"distances_sum":2919.5764834463434}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9375, conf: {"ssize":9,"bsize":10}, perf: {"precision":1.0,"recall":0.9375,"f1":0.964048451548452,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.84375,"distances_sum":2970.1137431582824}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.955078125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755208333333338,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.921875,"distances_sum":3059.4105287290545}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.955078125,"state":{"ssize":5,"bsize":13},"perf":{"precision":1.0,"recall":0.955078125,"f1":0.9755208333333338,"seconds":6.603077054023743e-6,"exhaustive_search_seconds":1.6558915376663208e-6,"evaluations":8.921875,"distances_sum":3059.4105287290545}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2119140625, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2119140625,"f1":null,"seconds":4.060566425323486e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":5.984375,"distances_sum":500.8666124511452}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7607421875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7607421875,"f1":0.8546890609390618,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.203125,"distances_sum":1849.1332626260512}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7607421875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7607421875,"f1":0.8546890609390618,"seconds":5.496665835380554e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.203125,"distances_sum":1849.1332626260512}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8447265625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8447265625,"f1":0.910616987179488,"seconds":5.891546607017517e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.609375,"distances_sum":2180.1577335423717}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9554773351648357,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.84375,"distances_sum":2472.5098347890744}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8916015625, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8916015625,"f1":0.9383298992673998,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.734375,"distances_sum":2383.712254094665}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9554773351648357,"seconds":6.297603249549866e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.84375,"distances_sum":2472.5098347890744}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9638965201465206,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.859375,"distances_sum":2559.7069819994913}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":7,"bsize":9}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9589342948717953,"seconds":6.031244993209839e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.8984375,"distances_sum":2522.9403327114533}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9638965201465206,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.859375,"distances_sum":2559.7069819994913}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9345703125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9638965201465206,"seconds":5.513429641723633e-6,"exhaustive_search_seconds":1.514330506324768e-6,"evaluations":8.859375,"distances_sum":2559.7069819994913}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7841796875, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7841796875,"f1":0.8707995129870139,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.3828125,"distances_sum":1880.3181237326432}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.412109375, conf: {"ssize":1,"bsize":2}, perf: {"precision":null,"recall":0.412109375,"f1":null,"seconds":3.5446137189865112e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":6.328125,"distances_sum":934.0006481939237}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5703125, conf: {"ssize":3,"bsize":3}, perf: {"precision":1.0,"recall":0.5703125,"f1":0.7098030441780446,"seconds":4.2282044887542725e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":7.2734375,"distances_sum":1278.910263640416}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7841796875,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.7841796875,"f1":0.8707995129870139,"seconds":5.217269062995911e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.3828125,"distances_sum":1880.3181237326432}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9110805860805868,"seconds":5.3085386753082275e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.5703125,"distances_sum":2090.223243896755}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9072265625, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.947000915750916,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8203125,"distances_sum":2367.3999346579185}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9072265625,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9072265625,"f1":0.947000915750916,"seconds":5.736947059631348e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.8203125,"distances_sum":2367.3999346579185}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.923828125, conf: {"ssize":3,"bsize":9}, perf: {"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.84375,"distances_sum":2424.2007174159908}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.84375,"distances_sum":2424.2007174159908}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.923828125,"state":{"ssize":3,"bsize":9},"perf":{"precision":1.0,"recall":0.923828125,"f1":0.956644917582418,"seconds":6.128102540969849e-6,"exhaustive_search_seconds":1.2274831533432007e-6,"evaluations":8.84375,"distances_sum":2424.2007174159908}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.71484375, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.71484375,"f1":0.8223323551448559,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1015625,"distances_sum":1729.2562708742385}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2109375, conf: {"ssize":4,"bsize":1}, perf: {"precision":null,"recall":0.2109375,"f1":null,"seconds":3.7550926208496094e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":5.8828125,"distances_sum":528.8630621280189}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8223323551448559,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1015625,"distances_sum":1729.2562708742385}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.71484375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8223323551448559,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1015625,"distances_sum":1729.2562708742385}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.71484375,"state":{"ssize":4,"bsize":4},"perf":{"precision":1.0,"recall":0.71484375,"f1":0.8223323551448559,"seconds":5.15766441822052e-6,"exhaustive_search_seconds":1.430511474609375e-6,"evaluations":8.1015625,"distances_sum":1729.2562708742385}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2255859375, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.2255859375,"f1":null,"seconds":3.345310688018799e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":4.9765625,"distances_sum":393.70580167432286}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.38671875, conf: {"ssize":4,"bsize":2}, perf: {"precision":null,"recall":0.38671875,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.5078125,"distances_sum":621.4063674619307}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.38671875,"state":{"ssize":4,"bsize":2},"perf":{"precision":null,"recall":0.38671875,"f1":null,"seconds":3.863126039505005e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.5078125,"distances_sum":621.4063674619307}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7548828125, conf: {"ssize":7,"bsize":5}, perf: {"precision":1.0,"recall":0.7548828125,"f1":0.8513039044289054,"seconds":5.39049506187439e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.0078125,"distances_sum":1390.185257223522}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":3,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8649126914751921,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1796875,"distances_sum":1436.991721968156}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.3984375, conf: {"ssize":6,"bsize":2}, perf: {"precision":null,"recall":0.3984375,"f1":null,"seconds":3.634020686149597e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":5.640625,"distances_sum":670.1453617098435}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.54296875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.54296875,"f1":null,"seconds":4.127621650695801e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":6.6171875,"distances_sum":880.3821671882048}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6884765625, conf: {"ssize":4,"bsize":4}, perf: {"precision":1.0,"recall":0.6884765625,"f1":0.8034018065268076,"seconds":4.870817065238953e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":7.453125,"distances_sum":1188.6386972618209}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":3,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8649126914751921,"seconds":5.299225449562073e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.1796875,"distances_sum":1436.991721968156}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9461569680319686,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6875,"distances_sum":1916.2051376946079}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9391311813186821,"seconds":5.856156349182129e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6640625,"distances_sum":1874.569963258205}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90234375, conf: {"ssize":7,"bsize":8}, perf: {"precision":1.0,"recall":0.90234375,"f1":0.9454670329670336,"seconds":5.824491381645203e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6328125,"distances_sum":1923.810582786868}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.84765625, conf: {"ssize":8,"bsize":6}, perf: {"precision":1.0,"recall":0.84765625,"f1":0.9127346611721618,"seconds":5.673617124557495e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.4140625,"distances_sum":1671.8296990101849}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9424565018315025,"seconds":6.008893251419067e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6171875,"distances_sum":1904.4790835320211}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.884765625, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.884765625,"f1":0.9332131410256416,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.484375,"distances_sum":1813.065528252477}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.90625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9461569680319686,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6875,"distances_sum":1916.2051376946079}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.90625,"state":{"ssize":3,"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9461569680319686,"seconds":6.018206477165222e-6,"exhaustive_search_seconds":1.4379620552062988e-6,"evaluations":8.6875,"distances_sum":1916.2051376946079}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8666442932067939,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2109375,"distances_sum":1729.3307952048026}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6787109375, conf: {"ssize":2,"bsize":4}, perf: {"precision":null,"recall":0.6787109375,"f1":null,"seconds":4.984438419342041e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":7.765625,"distances_sum":1428.8922778939962}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":5,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8666442932067939,"seconds":5.329027771949768e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.2109375,"distances_sum":1729.3307952048026}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":9,"bsize":9}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633704,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2319.791671831752}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":3,"bsize":8}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9583562271062279,"seconds":6.232410669326782e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8046875,"distances_sum":2288.559176129275}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":9,"bsize":9},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9637133699633704,"seconds":6.098300218582153e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8359375,"distances_sum":2319.791671831752}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.955078125, conf: {"ssize":6,"bsize":10}, perf: {"precision":1.0,"recall":0.955078125,"f1":0.9748168498168501,"seconds":6.3944607973098755e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.90625,"distances_sum":2388.081809907999}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":11,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9375,"distances_sum":2403.8036595501912}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9443359375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9443359375,"f1":0.9692364926739931,"seconds":6.115064024925232e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9296875,"distances_sum":2347.5058794047186}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9462890625, conf: {"ssize":6,"bsize":11}, perf: {"precision":1.0,"recall":0.9462890625,"f1":0.9703869047619051,"seconds":6.256625056266785e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.8984375,"distances_sum":2359.6505749493135}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":11,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9375,"distances_sum":2403.8036595501912}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":11,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9786458333333337,"seconds":6.34416937828064e-6,"exhaustive_search_seconds":1.3820827007293701e-6,"evaluations":8.9375,"distances_sum":2403.8036595501912}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":1.0,"recall":0.5546875,"f1":0.6916984057609065,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.8125,"distances_sum":1250.9628225520037}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":1.0,"recall":0.5546875,"f1":0.6916984057609065,"seconds":4.727393388748169e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.8125,"distances_sum":1250.9628225520037}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8369140625, conf: {"ssize":2,"bsize":6}, perf: {"precision":1.0,"recall":0.8369140625,"f1":0.9037348068598078,"seconds":6.096437573432922e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.3984375,"distances_sum":2058.197306449495}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9106232309357317,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.40625,"distances_sum":2148.487625131805}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.568359375, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.568359375,"f1":null,"seconds":4.582107067108154e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.84375,"distances_sum":1249.9292734423327}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5673828125, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.5673828125,"f1":null,"seconds":4.719942808151245e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":6.921875,"distances_sum":1258.4369143810075}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.771484375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.771484375,"f1":0.8623465076590086,"seconds":5.375593900680542e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.2578125,"distances_sum":1824.8869436096668}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.7895245379620387,"seconds":5.247071385383606e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":7.6875,"distances_sum":1470.6030266572316}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8486328125,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8486328125,"f1":0.9106232309357317,"seconds":6.157904863357544e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.40625,"distances_sum":2148.487625131805}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9592319139194145,"seconds":5.733221769332886e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.8515625,"distances_sum":2454.200354220654}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.971783424908425,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2546.5183000957622}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9374420718170724,"seconds":5.589798092842102e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.546875,"distances_sum":2302.165465612126}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9505265567765575,"seconds":5.792826414108276e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.75,"distances_sum":2438.8989280523847}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.971783424908425,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2546.5183000957622}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.971783424908425,"seconds":6.075948476791382e-6,"exhaustive_search_seconds":1.5385448932647705e-6,"evaluations":8.890625,"distances_sum":2546.5183000957622}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.775390625, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.775390625,"f1":0.8655084498834507,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1875,"distances_sum":1827.8455151210696}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1884765625, conf: {"ssize":2,"bsize":1}, perf: {"precision":null,"recall":0.1884765625,"f1":null,"seconds":2.948567271232605e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":5.4140625,"distances_sum":408.1173311153344}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.775390625,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.775390625,"f1":0.8655084498834507,"seconds":5.1371753215789795e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.1875,"distances_sum":1827.8455151210696}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.912109375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.912109375,"f1":0.9504922161172163,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7578125,"distances_sum":2394.4888331422585}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8037109375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.8037109375,"f1":0.8859062812187819,"seconds":5.282461643218994e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.3515625,"distances_sum":1930.5050650287544}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.912109375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.912109375,"f1":0.9504922161172163,"seconds":5.453824996948242e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.7578125,"distances_sum":2394.4888331422585}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.90625,"distances_sum":2526.3329311674042}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":5,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714114010989015,"seconds":5.804002285003662e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8828125,"distances_sum":2530.174323018093}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.943359375, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.943359375,"f1":0.9681375915750918,"seconds":5.554407835006714e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.8515625,"distances_sum":2491.623175578152}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9140625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.9140625,"f1":0.9519974816849821,"seconds":5.802139639854431e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.796875,"distances_sum":2404.390920371419}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.90625,"distances_sum":2526.3329311674042}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":4,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9711309523809528,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.3671815395355225e-6,"evaluations":8.90625,"distances_sum":2526.3329311674042}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1923828125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.1923828125,"f1":null,"seconds":3.343448042869568e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":5.1328125,"distances_sum":481.2652716215936}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7724609375, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7724609375,"f1":0.864303404928406,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3671875,"distances_sum":1882.465599706148}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7724609375,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7724609375,"f1":0.864303404928406,"seconds":5.062669515609741e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.3671875,"distances_sum":1882.465599706148}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.9353167665667673,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.625,"distances_sum":2381.285988189068}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.888671875, conf: {"ssize":8,"bsize":7}, perf: {"precision":1.0,"recall":0.888671875,"f1":0.934781364468865,"seconds":5.424022674560547e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.703125,"distances_sum":2355.124394164182}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.888671875,"state":{"ssize":3,"bsize":7},"perf":{"precision":1.0,"recall":0.888671875,"f1":0.9353167665667673,"seconds":5.46872615814209e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.625,"distances_sum":2381.285988189068}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9296875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9296875,"f1":0.9607028388278391,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.8515625,"distances_sum":2534.8551580566022}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9599015567765574,"seconds":5.796551704406738e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.84375,"distances_sum":2544.1870956959924}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.89453125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.89453125,"f1":0.9397951007326015,"seconds":5.574896931648254e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.75,"distances_sum":2372.185080199201}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":10,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9691620879120881,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2562.002000757482}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9453125,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9691620879120881,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2562.002000757482}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9453125,"state":{"ssize":10,"bsize":11},"perf":{"precision":1.0,"recall":0.9453125,"f1":0.9691620879120881,"seconds":5.986541509628296e-6,"exhaustive_search_seconds":1.3131648302078247e-6,"evaluations":8.890625,"distances_sum":2562.002000757482}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7578125, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.7578125,"f1":0.8523006507381515,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.7578125,"distances_sum":1928.726446620416}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.466796875, conf: {"ssize":1,"bsize":2}, perf: {"precision":1.0,"recall":0.466796875,"f1":0.6176469363969368,"seconds":3.4552067518234253e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":6.203125,"distances_sum":1017.6920298117859}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.7578125,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.7578125,"f1":0.8523006507381515,"seconds":5.321577191352844e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.7578125,"distances_sum":1928.726446620416}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9056407134532142,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.296875,"distances_sum":2244.9285812486555}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8388671875, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8388671875,"f1":0.9069571053946062,"seconds":5.3551048040390015e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3125,"distances_sum":2228.6631109201835}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8388671875,"state":{"ssize":4,"bsize":6},"perf":{"precision":1.0,"recall":0.8388671875,"f1":0.9056407134532142,"seconds":5.291774868965149e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.296875,"distances_sum":2244.9285812486555}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9267578125, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9267578125,"f1":0.9588598901098904,"seconds":5.772337317466736e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.7734375,"distances_sum":2654.5785479565075}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.841796875, conf: {"ssize":7,"bsize":6}, perf: {"precision":1.0,"recall":0.841796875,"f1":0.90749510905761,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.2265625,"distances_sum":2257.7816904391625}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.927734375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.927734375,"f1":0.9591231684981689,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2633.7603943914255}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":5,"bsize":6}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9124058233433242,"seconds":5.284324288368225e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3046875,"distances_sum":2272.96629790243}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9091796875, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.9091796875,"f1":0.9476278929403932,"seconds":5.692243576049805e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.75,"distances_sum":2536.084301388805}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8779296875, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.8779296875,"f1":0.9286401098901106,"seconds":5.1390379667282104e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.4453125,"distances_sum":2419.9817510365892}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.927734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591231684981689,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2633.7603943914255}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.927734375,"state":{"ssize":5,"bsize":9},"perf":{"precision":1.0,"recall":0.927734375,"f1":0.9591231684981689,"seconds":5.632638931274414e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.796875,"distances_sum":2633.7603943914255}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6865234375, conf: {"ssize":2,"bsize":4}, perf: {"precision":1.0,"recall":0.6865234375,"f1":0.8009204337329344,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.984375,"distances_sum":1662.123106945379}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.2099609375, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.2099609375,"f1":null,"seconds":3.1422823667526245e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":5.2265625,"distances_sum":532.8655209570925}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6865234375,"state":{"ssize":2,"bsize":4},"perf":{"precision":1.0,"recall":0.6865234375,"f1":0.8009204337329344,"seconds":4.801899194717407e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":7.984375,"distances_sum":1662.123106945379}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8349609375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.8349609375,"f1":0.9012310606060613,"seconds":5.451962351799011e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.609375,"distances_sum":2130.8781447784518}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.880859375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.880859375,"f1":0.9276187354312365,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.59375,"distances_sum":2370.365870736644}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.880859375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.880859375,"f1":0.9276187354312365,"seconds":5.416572093963623e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.59375,"distances_sum":2370.365870736644}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.90625, conf: {"ssize":5,"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9466975732600738,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.7421875,"distances_sum":2462.5447467563145}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8984375, conf: {"ssize":5,"bsize":7}, perf: {"precision":1.0,"recall":0.8984375,"f1":0.9413232600732608,"seconds":5.3513795137405396e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.703125,"distances_sum":2427.0344165959727}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9521484375, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.875,"distances_sum":2644.4655891180832}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8994140625, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.8994140625,"f1":0.9425480769230776,"seconds":5.949288606643677e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.6953125,"distances_sum":2454.951398284109}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.875,"distances_sum":2644.4655891180832}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9521484375,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9521484375,"f1":0.9738839285714289,"seconds":5.7034194469451904e-6,"exhaustive_search_seconds":1.383945345878601e-6,"evaluations":8.875,"distances_sum":2644.4655891180832}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6640625,"f1":0.785668498168499,"seconds":4.7888606786727905e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":7.4921875,"distances_sum":1590.0215845691566}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.76953125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.76953125,"f1":0.8630614177489188,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1015625,"distances_sum":1967.0427794819234}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.76953125,"state":{"ssize":1,"bsize":5},"perf":{"precision":1.0,"recall":0.76953125,"f1":0.8630614177489188,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.1015625,"distances_sum":1967.0427794819234}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8271484375, conf: {"ssize":4,"bsize":6}, perf: {"precision":1.0,"recall":0.8271484375,"f1":0.9012019230769237,"seconds":5.500391125679016e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.3203125,"distances_sum":2168.286915535505}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8818359375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8818359375,"f1":0.9328010531135538,"seconds":5.928799510002136e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.6171875,"distances_sum":2424.32701674713}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.818359375, conf: {"ssize":1,"bsize":6}, perf: {"precision":1.0,"recall":0.818359375,"f1":0.8936589452214458,"seconds":5.725771188735962e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.2890625,"distances_sum":2154.522868010516}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7998046875, conf: {"ssize":3,"bsize":6}, perf: {"precision":1.0,"recall":0.7998046875,"f1":0.8796167374292382,"seconds":5.446374416351318e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.2265625,"distances_sum":2094.5302106054055}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91796875, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.91796875,"f1":0.9534455128205132,"seconds":5.908310413360596e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.7890625,"distances_sum":2606.7356828526895}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9345703125, conf: {"ssize":1,"bsize":8}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9632097069597074,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2674.134708718539}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9345703125,"state":{"ssize":1,"bsize":8},"perf":{"precision":1.0,"recall":0.9345703125,"f1":0.9632097069597074,"seconds":5.759298801422119e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8203125,"distances_sum":2674.134708718539}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9609375, conf: {"ssize":1,"bsize":12}, perf: {"precision":1.0,"recall":0.9609375,"f1":0.9783138736263739,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2787.669442886046}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.958984375, conf: {"ssize":5,"bsize":12}, perf: {"precision":1.0,"recall":0.958984375,"f1":0.977604166666667,"seconds":5.97536563873291e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.953125,"distances_sum":2764.0562641671586}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9671531593406596,"seconds":5.980953574180603e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8671875,"distances_sum":2689.445137745558}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94140625, conf: {"ssize":4,"bsize":10}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9673763736263739,"seconds":5.982816219329834e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.8671875,"distances_sum":2677.292553467075}, best_list's length: 11, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783138736263739,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2787.669442886046}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9609375,"state":{"ssize":1,"bsize":12},"perf":{"precision":1.0,"recall":0.9609375,"f1":0.9783138736263739,"seconds":6.0927122831344604e-6,"exhaustive_search_seconds":1.2665987014770508e-6,"evaluations":8.9296875,"distances_sum":2787.669442886046}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.513671875, conf: {"ssize":2,"bsize":3}, perf: {"precision":null,"recall":0.513671875,"f1":null,"seconds":4.231929779052734e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.1484375,"distances_sum":933.517772404507}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5458984375, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.4765625,"distances_sum":987.6716434556531}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5458984375,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.5458984375,"f1":null,"seconds":4.425644874572754e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":7.4765625,"distances_sum":987.6716434556531}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7890625, conf: {"ssize":2,"bsize":6}, perf: {"precision":0.9859561011904762,"recall":0.7890625,"f1":0.8710754089660344,"seconds":5.537644028663635e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":1515.898882941309}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.744140625, conf: {"ssize":1,"bsize":5}, perf: {"precision":0.9873883928571429,"recall":0.744140625,"f1":0.8400625416250422,"seconds":5.304813385009766e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.6953125,"distances_sum":1416.0679042002303}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.626953125, conf: {"ssize":2,"bsize":4}, perf: {"precision":0.9768229166666665,"recall":0.626953125,"f1":0.753130723443224,"seconds":4.522502422332764e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.28125,"distances_sum":1176.2334129300682}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8056640625, conf: {"ssize":1,"bsize":6}, perf: {"precision":0.9863002232142857,"recall":0.8056640625,"f1":0.8814352964743594,"seconds":5.289912223815918e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.90625,"distances_sum":1560.2358393932395}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8193359375, conf: {"ssize":4,"bsize":6}, perf: {"precision":0.9838169642857141,"recall":0.8193359375,"f1":0.888018231768232,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":1632.8151750669726}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.630859375, conf: {"ssize":5,"bsize":4}, perf: {"precision":0.9781249999999999,"recall":0.630859375,"f1":0.7566724941724947,"seconds":4.652887582778931e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.3203125,"distances_sum":1160.0298180714437}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8193359375,"state":{"ssize":4,"bsize":6},"perf":{"precision":0.9838169642857141,"recall":0.8193359375,"f1":0.888018231768232,"seconds":5.427747964859009e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":1632.8151750669726}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.892578125, conf: {"ssize":1,"bsize":8}, perf: {"precision":0.9827845982142858,"recall":0.892578125,"f1":0.9304995135073265,"seconds":5.716457962989807e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.921875,"distances_sum":1912.443888840645}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.857421875, conf: {"ssize":1,"bsize":7}, perf: {"precision":0.9793712797619049,"recall":0.857421875,"f1":0.9083321626290379,"seconds":5.599111318588257e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8828125,"distances_sum":1807.3499912922082}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.921875, conf: {"ssize":1,"bsize":10}, perf: {"precision":0.9813988095238095,"recall":0.921875,"f1":0.9476791437728942,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.96875,"distances_sum":2034.2624993617178}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":4,"bsize":9}, perf: {"precision":0.9872581845238095,"recall":0.91015625,"f1":0.9438487293956047,"seconds":5.932524800300598e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8671875,"distances_sum":2003.3311085778375}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.853515625, conf: {"ssize":5,"bsize":7}, perf: {"precision":0.9839099702380953,"recall":0.853515625,"f1":0.9073191131784887,"seconds":5.688518285751343e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.8125,"distances_sum":1797.6018642174236}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9813988095238095,"recall":0.921875,"f1":0.9476791437728942,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.96875,"distances_sum":2034.2624993617178}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.921875,"state":{"ssize":1,"bsize":10},"perf":{"precision":0.9813988095238095,"recall":0.921875,"f1":0.9476791437728942,"seconds":6.159767508506775e-6,"exhaustive_search_seconds":1.2498348951339722e-6,"evaluations":8.96875,"distances_sum":2034.2624993617178}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.205078125, conf: {"ssize":3,"bsize":1}, perf: {"precision":null,"recall":0.205078125,"f1":null,"seconds":3.4011900424957275e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.28125,"distances_sum":376.75666214102023}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.701171875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.701171875,"f1":0.818309815184816,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5703125,"distances_sum":1307.3231299692459}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1953125, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1953125,"f1":null,"seconds":3.3527612686157227e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":6.1953125,"distances_sum":339.53466361471385}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.701171875,"state":{"ssize":1,"bsize":4},"perf":{"precision":1.0,"recall":0.701171875,"f1":0.818309815184816,"seconds":4.911795258522034e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.5703125,"distances_sum":1307.3231299692459}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9033203125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9445398351648356,"seconds":5.770474672317505e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.765625,"distances_sum":1930.6766692096028}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.904296875, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.904296875,"f1":0.9442453379953387,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8359375,"distances_sum":1948.4481391644078}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.755859375, conf: {"ssize":2,"bsize":5}, perf: {"precision":1.0,"recall":0.755859375,"f1":0.8527737887112897,"seconds":4.997476935386658e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.671875,"distances_sum":1427.2702244054717}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7880859375, conf: {"ssize":6,"bsize":5}, perf: {"precision":1.0,"recall":0.7880859375,"f1":0.8757154304029312,"seconds":5.435198545455933e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.828125,"distances_sum":1497.1943842076334}, best_list's length: 13, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.904296875,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.904296875,"f1":0.9442453379953387,"seconds":5.545094609260559e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8359375,"distances_sum":1948.4481391644078}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":8,"bsize":9}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9714285714285716,"seconds":6.0014426708221436e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9609375,"distances_sum":2093.0418217613037}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.94921875, conf: {"ssize":1,"bsize":11}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9721726190476194,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.96875,"distances_sum":2103.730111764021}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.91015625, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9482600732600739,"seconds":5.973502993583679e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.8828125,"distances_sum":1947.9237795240645}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.93359375, conf: {"ssize":8,"bsize":8}, perf: {"precision":1.0,"recall":0.93359375,"f1":0.9627804487179491,"seconds":5.729496479034424e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9609375,"distances_sum":2037.7193256244075}, best_list's length: 10, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.939453125, conf: {"ssize":4,"bsize":9}, perf: {"precision":1.0,"recall":0.939453125,"f1":0.9661858974358979,"seconds":5.7406723499298096e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.9609375,"distances_sum":2065.8577978909316}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.908203125, conf: {"ssize":3,"bsize":7}, perf: {"precision":1.0,"recall":0.908203125,"f1":0.9477392399267404,"seconds":5.60469925403595e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.84375,"distances_sum":1939.8461340736326}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9721726190476194,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.96875,"distances_sum":2103.730111764021}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.94921875,"state":{"ssize":1,"bsize":11},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9721726190476194,"seconds":6.498768925666809e-6,"exhaustive_search_seconds":1.4360994100570679e-6,"evaluations":8.96875,"distances_sum":2103.730111764021}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.560546875, conf: {"ssize":1,"bsize":3}, perf: {"precision":null,"recall":0.560546875,"f1":null,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.6953125,"distances_sum":1150.6329096640352}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.560546875,"state":{"ssize":1,"bsize":3},"perf":{"precision":null,"recall":0.560546875,"f1":null,"seconds":4.258006811141968e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":7.6953125,"distances_sum":1150.6329096640352}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6875, conf: {"ssize":1,"bsize":4}, perf: {"precision":1.0,"recall":0.6875,"f1":0.800884185259186,"seconds":4.591420292854309e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.140625,"distances_sum":1407.9061903984266}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.900390625, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.900390625,"f1":0.9419960248085252,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2075.1997833316855}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8876953125, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8876953125,"f1":0.9342548076923086,"seconds":5.606561899185181e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.765625,"distances_sum":2031.264380078665}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.7470703125, conf: {"ssize":1,"bsize":5}, perf: {"precision":1.0,"recall":0.7470703125,"f1":0.8454191641691648,"seconds":5.206093192100525e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.53125,"distances_sum":1581.5269245577467}, best_list's length: 9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.900390625,"state":{"ssize":4,"bsize":7},"perf":{"precision":1.0,"recall":0.900390625,"f1":0.9419960248085252,"seconds":5.681067705154419e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2075.1997833316855}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9130859375, conf: {"ssize":5,"bsize":9}, perf: {"precision":1.0,"recall":0.9130859375,"f1":0.9494536713286716,"seconds":5.409121513366699e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8359375,"distances_sum":2126.894332234081}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9499516108891115,"seconds":5.587935447692871e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8046875,"distances_sum":2143.682516638662}, best_list's length: 8, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9150390625, conf: {"ssize":2,"bsize":9}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9517170329670336,"seconds":5.4817646741867065e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8125,"distances_sum":2156.9550580010323}, best_list's length: 11, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.92578125, conf: {"ssize":1,"bsize":9}, perf: {"precision":1.0,"recall":0.92578125,"f1":0.9585622710622715,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2170.5770425530777}, best_list's length: 12, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9585622710622715,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2170.5770425530777}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.92578125,"state":{"ssize":1,"bsize":9},"perf":{"precision":1.0,"recall":0.92578125,"f1":0.9585622710622715,"seconds":5.9194862842559814e-6,"exhaustive_search_seconds":1.3597309589385986e-6,"evaluations":8.8671875,"distances_sum":2170.5770425530777}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.1416015625, conf: {"ssize":5,"bsize":1}, perf: {"precision":null,"recall":0.1416015625,"f1":null,"seconds":2.941116690635681e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":4.4453125,"distances_sum":283.520489129601}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.5361328125, conf: {"ssize":4,"bsize":3}, perf: {"precision":null,"recall":0.5361328125,"f1":null,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9140625,"distances_sum":1030.6957509731137}, best_list's length: 3, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.5361328125,"state":{"ssize":4,"bsize":3},"perf":{"precision":null,"recall":0.5361328125,"f1":null,"seconds":4.392117261886597e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":6.9140625,"distances_sum":1030.6957509731137}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8330078125, conf: {"ssize":6,"bsize":6}, perf: {"precision":1.0,"recall":0.8330078125,"f1":0.9045875999001008,"seconds":5.50784170627594e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.390625,"distances_sum":1890.5195198536849}, best_list's length: 4, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8486328125, conf: {"ssize":4,"bsize":7}, perf: {"precision":1.0,"recall":0.8486328125,"f1":0.9102543290043298,"seconds":5.466863512992859e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.546875,"distances_sum":1963.6932763705627}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8642578125, conf: {"ssize":7,"bsize":7}, perf: {"precision":1.0,"recall":0.8642578125,"f1":0.9206647519147525,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.625,"distances_sum":2003.7544122853722}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8642578125,"state":{"ssize":7,"bsize":7},"perf":{"precision":1.0,"recall":0.8642578125,"f1":0.9206647519147525,"seconds":5.539506673812866e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.625,"distances_sum":2003.7544122853722}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.931640625, conf: {"ssize":10,"bsize":9}, perf: {"precision":1.0,"recall":0.931640625,"f1":0.9616643772893778,"seconds":5.634501576423645e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.828125,"distances_sum":2240.473088294248}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9248046875, conf: {"ssize":5,"bsize":10}, perf: {"precision":1.0,"recall":0.9248046875,"f1":0.9575950091575095,"seconds":5.844980478286743e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8125,"distances_sum":2200.3972896410737}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9453125, conf: {"ssize":4,"bsize":11}, perf: {"precision":1.0,"recall":0.9453125,"f1":0.9696256868131871,"seconds":5.884096026420593e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.890625,"distances_sum":2272.2364327838445}, best_list's length: 7, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9482421875, conf: {"ssize":2,"bsize":11}, perf: {"precision":1.0,"recall":0.9482421875,"f1":0.9709077380952383,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2297.6021526282634}, best_list's length: 9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8857421875, conf: {"ssize":6,"bsize":8}, perf: {"precision":1.0,"recall":0.8857421875,"f1":0.9334223068598073,"seconds":5.641952157020569e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.6484375,"distances_sum":2089.117543504071}, best_list's length: 10, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9482421875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9709077380952383,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2297.6021526282634}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9482421875,"state":{"ssize":2,"bsize":11},"perf":{"precision":1.0,"recall":0.9482421875,"f1":0.9709077380952383,"seconds":5.794689059257507e-6,"exhaustive_search_seconds":1.2889504432678223e-6,"evaluations":8.8828125,"distances_sum":2297.6021526282634}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.6640625, conf: {"ssize":3,"bsize":4}, perf: {"precision":null,"recall":0.6640625,"f1":null,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0390625,"distances_sum":1318.5661057392301}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.6640625,"state":{"ssize":3,"bsize":4},"perf":{"precision":null,"recall":0.6640625,"f1":null,"seconds":4.8764050006866455e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.0390625,"distances_sum":1318.5661057392301}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.87890625, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.87890625,"f1":0.9287348068598075,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7890625,"distances_sum":1988.9145934638457}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.87890625,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.87890625,"f1":0.9287348068598075,"seconds":5.5711716413497925e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.7890625,"distances_sum":1988.9145934638457}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9384765625, conf: {"ssize":1,"bsize":10}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.9650698260073264,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2220.5674129919225}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9650698260073264,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2220.5674129919225}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9384765625,"state":{"ssize":1,"bsize":10},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.9650698260073264,"seconds":5.926936864852905e-6,"exhaustive_search_seconds":1.3522803783416748e-6,"evaluations":8.921875,"distances_sum":2220.5674129919225}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.99, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.69921875, conf: {"ssize":4,"bsize":5}, perf: {"precision":1.0,"recall":0.69921875,"f1":0.8118329587079595,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.8046875,"distances_sum":1538.7541605608167}, best_list's length: 2, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.69921875,"state":{"ssize":4,"bsize":5},"perf":{"precision":1.0,"recall":0.69921875,"f1":0.8118329587079595,"seconds":5.085021257400513e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":7.8046875,"distances_sum":1538.7541605608167}}, beam: 3, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.8896484375, conf: {"ssize":1,"bsize":7}, perf: {"precision":1.0,"recall":0.8896484375,"f1":0.9368246336996343,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2159.068355852144}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.751953125, conf: {"ssize":5,"bsize":5}, perf: {"precision":1.0,"recall":0.751953125,"f1":0.8505161505161514,"seconds":5.193054676055908e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.0390625,"distances_sum":1694.1255827772122}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8896484375,"state":{"ssize":1,"bsize":7},"perf":{"precision":1.0,"recall":0.8896484375,"f1":0.9368246336996343,"seconds":5.476176738739014e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.71875,"distances_sum":2159.068355852144}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.99, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9287109375, conf: {"ssize":2,"bsize":10}, perf: {"precision":1.0,"recall":0.9287109375,"f1":0.9596211080586083,"seconds":5.515292286872864e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.828125,"distances_sum":2310.387501333698}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 0.9306640625, conf: {"ssize":3,"bsize":11}, perf: {"precision":1.0,"recall":0.9306640625,"f1":0.9604624542124548,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8046875,"distances_sum":2307.649581529357}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.9306640625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9604624542124548,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8046875,"distances_sum":2307.649581529357}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.9306640625,"state":{"ssize":3,"bsize":11},"perf":{"precision":1.0,"recall":0.9306640625,"f1":0.9604624542124548,"seconds":5.662441253662109e-6,"exhaustive_search_seconds":1.2647360563278198e-6,"evaluations":8.8046875,"distances_sum":2307.649581529357}}, n: 9
mean(cfft.distances) = 0.34340664262886006
mean(cdnet.distances) = 0.36534676251075604
mean(crand.distances) = 0.34479858085026543
Test Summary:                                      |
Clustering with KCenters with an approximate index | No tests
===> k=3
===> (k=3, initial=fft, maxiters=0); macro-recall: 0.888888888888889
===> (k=3, initial=fft, maxiters=3); macro-recall: 0.8866666666666667
===> (k=3, initial=fft, maxiters=10); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=0); macro-recall: 0.8733333333333334
===> (k=3, initial=dnet, maxiters=3); macro-recall: 0.8955555555555555
===> (k=3, initial=dnet, maxiters=10); macro-recall: 0.9022222222222221
===> (k=3, initial=rand, maxiters=0); macro-recall: 0.931111111111111
===> (k=3, initial=rand, maxiters=3); macro-recall: 0.888888888888889
===> (k=3, initial=rand, maxiters=10); macro-recall: 0.8933333333333334
===> k=5
===> (k=5, initial=fft, maxiters=0); macro-recall: 0.9355555555555556
===> (k=5, initial=fft, maxiters=3); macro-recall: 0.9466666666666667
===> (k=5, initial=fft, maxiters=10); macro-recall: 0.9444444444444443
===> (k=5, initial=dnet, maxiters=0); macro-recall: 0.84
===> (k=5, initial=dnet, maxiters=3); macro-recall: 0.8866666666666667
===> (k=5, initial=dnet, maxiters=10); macro-recall: 0.8844444444444445
===> (k=5, initial=rand, maxiters=0); macro-recall: 0.8666666666666667
===> (k=5, initial=rand, maxiters=3); macro-recall: 0.9244444444444445
===> (k=5, initial=rand, maxiters=10); macro-recall: 0.8866666666666667
===> k=7
===> (k=7, initial=fft, maxiters=0); macro-recall: 0.8977777777777778
===> (k=7, initial=fft, maxiters=3); macro-recall: 0.9199999999999999
===> (k=7, initial=fft, maxiters=10); macro-recall: 0.9377777777777778
===> (k=7, initial=dnet, maxiters=0); macro-recall: 0.8755555555555555
===> (k=7, initial=dnet, maxiters=3); macro-recall: 0.86
===> (k=7, initial=dnet, maxiters=10); macro-recall: 0.88
===> (k=7, initial=rand, maxiters=0); macro-recall: 0.8822222222222224
===> (k=7, initial=rand, maxiters=3); macro-recall: 0.9111111111111111
===> (k=7, initial=rand, maxiters=10); macro-recall: 0.9133333333333332
===> k=11
===> (k=11, initial=fft, maxiters=0); macro-recall: 0.8911111111111111
===> (k=11, initial=fft, maxiters=3); macro-recall: 0.8977777777777778
===> (k=11, initial=fft, maxiters=10); macro-recall: 0.9022222222222221
===> (k=11, initial=dnet, maxiters=0); macro-recall: 0.9044444444444445
===> (k=11, initial=dnet, maxiters=3); macro-recall: 0.8822222222222224
===> (k=11, initial=dnet, maxiters=10); macro-recall: 0.9066666666666666
===> (k=11, initial=rand, maxiters=0); macro-recall: 0.9088888888888889
===> (k=11, initial=rand, maxiters=3); macro-recall: 0.8488888888888889
===> (k=11, initial=rand, maxiters=10); macro-recall: 0.8844444444444445
Test Summary:                             | Pass  Total
One class classifier with DeloneHistogram |  144    144
[ Info: ("XXXXXX==== split_entropy>", (KCenters.gaussian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.laplacian_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.cauchy_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.sigmoid_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.tanh_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.98
[ Info: ("XXXXXX==== split_entropy>", (KCenters.relu_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.92
[ Info: ("XXXXXX==== split_entropy>", (KCenters.direct_kernel, SimilaritySearch.l2_distance))
*** center 1: selecting labels [1] (freq >= 1) [from [27, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 18, 0]]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 20]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 7, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [23, 0, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 19, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 2, 7]]
** centroid: 9, normalized-entropy: 0.7642045065086204, [(2, 2), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 6]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 9]]
** centroid: 12, normalized-entropy: 0.46899559358928133, [(2, 1), (3, 9)]
finished with 14 centroids; started with 12
nc.class_map = [1, 3, 2, 3, 2, 3, 2, 1, 2, 2, 3, 3, 3, 3]
acc = 0.9733333333333334
*** finished computation of 12 references, err: [Inf, 0.585012555172046] ***
*** center 1: selecting labels [1] (freq >= 1) [from [42, 0, 0]]
*** center 2: selecting labels [3] (freq >= 1) [from [0, 0, 4]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 3, 1]]
** centroid: 3, normalized-entropy: 0.8112781244591328, [(2, 3), (3, 1)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 15, 2]]
** centroid: 4, normalized-entropy: 0.5225593745369407, [(2, 15), (3, 2)]
*** center 5: selecting labels [3] (freq >= 1) [from [0, 0, 12]]
*** center 6: selecting labels [1] (freq >= 1) [from [8, 0, 0]]
*** center 7: selecting labels [2] (freq >= 1) [from [0, 5, 0]]
*** center 8: selecting labels [2] (freq >= 1) [from [0, 23, 0]]
*** center 9: selecting labels [2, 3] (freq >= 1) [from [0, 3, 7]]
** centroid: 9, normalized-entropy: 0.8812908992306927, [(2, 3), (3, 7)]
*** center 10: selecting labels [3] (freq >= 1) [from [0, 0, 3]]
*** center 11: selecting labels [3] (freq >= 1) [from [0, 0, 8]]
*** center 12: selecting labels [2, 3] (freq >= 1) [from [0, 1, 13]]
** centroid: 12, normalized-entropy: 0.3712323266408756, [(2, 1), (3, 13)]
finished with 15 centroids; started with 12
acc = 0.9333333333333333
Test Summary: | Pass  Total
KNC           |    8      8
iteration 1 finished
*** starting iteration: 1; err: [Inf, 0.4032999936857627] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4032999936857627, 0.3227827051995663] ***
*** finished computation of 3 references, err: [Inf, 0.4032999936857627, 0.3227827051995663] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [61, 158, 3]]
** centroid: 1, normalized-entropy: 0.5963511056689191, [(1, 61), (2, 158), (3, 3)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [269, 8, 0]]
** centroid: 2, normalized-entropy: 0.188748030570012, [(1, 269), (2, 8)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [70, 77, 20]]
** centroid: 3, normalized-entropy: 0.8880154185586305, [(1, 70), (2, 77), (3, 20)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4656966772243573] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4656966772243573, 0.32452380301422445] ***
*** finished computation of 3 references, err: [Inf, 0.4656966772243573, 0.32452380301422445] ***
*** center 1: selecting labels [1] (freq >= 2) [from [154, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [33, 228, 19]]
** centroid: 2, normalized-entropy: 0.5478378661733794, [(1, 33), (2, 228), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [221, 12, 0]]
** centroid: 3, normalized-entropy: 0.29274401746904316, [(1, 221), (2, 12)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3511892452646142] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3511892452646142, 0.30144823304006785] ***
*** finished computation of 3 references, err: [Inf, 0.3511892452646142, 0.30144823304006785] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [238, 7, 0]]
** centroid: 1, normalized-entropy: 0.18717625687320805, [(1, 238), (2, 7)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [40, 144, 20]]
** centroid: 2, normalized-entropy: 0.7218265779933811, [(1, 40), (2, 144), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [124, 94, 0]]
** centroid: 3, normalized-entropy: 0.9862958176866949, [(1, 124), (2, 94)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3724971595513928] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3724971595513928, 0.32597407482441393] ***
*** starting iteration: 2; err: [Inf, 0.3724971595513928, 0.32597407482441393] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3724971595513928, 0.32597407482441393, 0.32357308968017856] ***
*** starting iteration: 3; err: [Inf, 0.3724971595513928, 0.32597407482441393, 0.32357308968017856] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3724971595513928, 0.32597407482441393, 0.32357308968017856, 0.32276827268031155] ***
*** finished computation of 3 references, err: [Inf, 0.3724971595513928, 0.32597407482441393, 0.32357308968017856, 0.32276827268031155] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [71, 111, 23]]
** centroid: 1, normalized-entropy: 0.8600320077818764, [(1, 71), (2, 111), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [97, 131, 0]]
** centroid: 2, normalized-entropy: 0.9838989663859814, [(1, 97), (2, 131)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [232, 1, 0]]
** centroid: 3, normalized-entropy: 0.03993038984914418, [(1, 232), (2, 1)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3569842907704826] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3569842907704826, 0.3150383702333042] ***
*** starting iteration: 2; err: [Inf, 0.3569842907704826, 0.3150383702333042] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544] ***
*** starting iteration: 3; err: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366] ***
*** starting iteration: 4; err: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366, 0.2993028219956821] ***
*** starting iteration: 5; err: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366, 0.2993028219956821] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366, 0.2993028219956821, 0.2980234191405295] ***
*** starting iteration: 6; err: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366, 0.2993028219956821, 0.2980234191405295] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366, 0.2993028219956821, 0.2980234191405295, 0.2975379281395954] ***
*** finished computation of 3 references, err: [Inf, 0.3569842907704826, 0.3150383702333042, 0.30503167187155544, 0.30136298836101366, 0.2993028219956821, 0.2980234191405295, 0.2975379281395954] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [113, 88, 0]]
** centroid: 1, normalized-entropy: 0.988811864348091, [(1, 113), (2, 88)]
*** center 2: selecting labels [1] (freq >= 1) [from [209, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [86, 152, 19]]
** centroid: 3, normalized-entropy: 0.7914636561732484, [(1, 86), (2, 152), (3, 19)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.45276025982854284] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45276025982854284, 0.3054753332531479] ***
*** starting iteration: 2; err: [Inf, 0.45276025982854284, 0.3054753332531479] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45276025982854284, 0.3054753332531479, 0.3009764831541092] ***
*** starting iteration: 3; err: [Inf, 0.45276025982854284, 0.3054753332531479, 0.3009764831541092] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45276025982854284, 0.3054753332531479, 0.3009764831541092, 0.3001067347522976] ***
*** finished computation of 3 references, err: [Inf, 0.45276025982854284, 0.3054753332531479, 0.3009764831541092, 0.3001067347522976] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [5, 193, 20]]
** centroid: 1, normalized-entropy: 0.37645023487955886, [(1, 5), (2, 193), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [149, 45, 0]]
** centroid: 2, normalized-entropy: 0.781410270621677, [(1, 149), (2, 45)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [248, 7, 0]]
** centroid: 3, normalized-entropy: 0.1814429685045511, [(1, 248), (2, 7)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3167897567259095] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3167897567259095, 0.24120440930295653] ***
*** finished computation of 3 references, err: [Inf, 0.3167897567259095, 0.24120440930295653] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [97, 185, 19]]
** centroid: 1, normalized-entropy: 0.7632191302007708, [(1, 97), (2, 185), (3, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [184, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [127, 55, 0]]
** centroid: 3, normalized-entropy: 0.8839609068804469, [(1, 127), (2, 55)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3108526126410382] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3108526126410382, 0.25035475241299576] ***
*** finished computation of 3 references, err: [Inf, 0.3108526126410382, 0.25035475241299576] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [133, 199, 20]]
** centroid: 1, normalized-entropy: 0.7765463770214183, [(1, 133), (2, 199), (3, 20)]
*** center 2: selecting labels [1] (freq >= 1) [from [170, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [99, 46, 0]]
** centroid: 3, normalized-entropy: 0.9013562943838728, [(1, 99), (2, 46)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.47166593343176105] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47166593343176105, 0.3101280322829793] ***
*** finished computation of 3 references, err: [Inf, 0.47166593343176105, 0.3101280322829793] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 155, 23]]
** centroid: 1, normalized-entropy: 0.5552772073325881, [(2, 155), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [216, 24, 0]]
** centroid: 2, normalized-entropy: 0.46899559358928133, [(1, 216), (2, 24)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [184, 64, 0]]
** centroid: 3, normalized-entropy: 0.8238116333123173, [(1, 184), (2, 64)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.45414379665734894] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.45414379665734894, 0.3192144862461327] ***
*** finished computation of 3 references, err: [Inf, 0.45414379665734894, 0.3192144862461327] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [133, 190, 19]]
** centroid: 1, normalized-entropy: 0.7777220320701351, [(1, 133), (2, 190), (3, 19)]
*** center 2: selecting labels [1] (freq >= 2) [from [145, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [130, 50, 0]]
** centroid: 3, normalized-entropy: 0.8524051786494784, [(1, 130), (2, 50)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.378268810669784] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.378268810669784, 0.30226025454465416] ***
*** finished computation of 3 references, err: [Inf, 0.378268810669784, 0.30226025454465416] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [98, 86, 0]]
** centroid: 1, normalized-entropy: 0.996929708080541, [(1, 98), (2, 86)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [97, 159, 20]]
** centroid: 2, normalized-entropy: 0.7968328524941387, [(1, 97), (2, 159), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.31336572464812806] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.31336572464812806, 0.24665878309278158] ***
*** finished computation of 3 references, err: [Inf, 0.31336572464812806, 0.24665878309278158] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [68, 199, 23]]
** centroid: 1, normalized-entropy: 0.7277359999969873, [(1, 68), (2, 199), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [172, 44, 0]]
** centroid: 2, normalized-entropy: 0.7292739418449411, [(1, 172), (2, 44)]
*** center 3: selecting labels [1] (freq >= 2) [from [160, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.32339532500778] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32339532500778, 0.24246464958316696] ***
*** finished computation of 3 references, err: [Inf, 0.32339532500778, 0.24246464958316696] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [197, 22, 0]]
** centroid: 1, normalized-entropy: 0.47044137903986427, [(1, 197), (2, 22)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [207, 15, 0]]
** centroid: 2, normalized-entropy: 0.35678001438394347, [(1, 207), (2, 15)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [4, 203, 19]]
** centroid: 3, normalized-entropy: 0.34222811169225686, [(1, 4), (2, 203), (3, 19)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.30381541025742465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.30381541025742465, 0.2720948522072704] ***
*** finished computation of 3 references, err: [Inf, 0.30381541025742465, 0.2720948522072704] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [168, 7, 0]]
** centroid: 1, normalized-entropy: 0.24229218908241482, [(1, 168), (2, 7)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [214, 133, 1]]
** centroid: 2, normalized-entropy: 0.9603293194038989, [(1, 214), (2, 133)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [20, 105, 19]]
** centroid: 3, normalized-entropy: 0.7024536863675682, [(1, 20), (2, 105), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.2482690559881921] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2482690559881921, 0.21141684483443093] ***
*** starting iteration: 2; err: [Inf, 0.2482690559881921, 0.21141684483443093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2482690559881921, 0.21141684483443093, 0.20461647656072188] ***
*** starting iteration: 3; err: [Inf, 0.2482690559881921, 0.21141684483443093, 0.20461647656072188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2482690559881921, 0.21141684483443093, 0.20461647656072188, 0.20325177933953636] ***
*** starting iteration: 4; err: [Inf, 0.2482690559881921, 0.21141684483443093, 0.20461647656072188, 0.20325177933953636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2482690559881921, 0.21141684483443093, 0.20461647656072188, 0.20325177933953636, 0.2028083078935183] ***
*** finished computation of 7 references, err: [Inf, 0.2482690559881921, 0.21141684483443093, 0.20461647656072188, 0.20325177933953636, 0.2028083078935183] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 107, 23]]
** centroid: 1, normalized-entropy: 0.673299408918962, [(2, 107), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [71, 16, 0]]
** centroid: 2, normalized-entropy: 0.6885521684368613, [(1, 71), (2, 16)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [72, 5, 0]]
** centroid: 3, normalized-entropy: 0.34673146824966367, [(1, 72), (2, 5)]
*** center 4: selecting labels [1] (freq >= 1) [from [102, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 13, 0]]
** centroid: 5, normalized-entropy: 0.7408656862339816, [(1, 49), (2, 13)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [78, 51, 0]]
** centroid: 6, normalized-entropy: 0.9681647320759545, [(1, 78), (2, 51)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [28, 51, 0]]
** centroid: 7, normalized-entropy: 0.9379626436434424, [(1, 28), (2, 51)]
finished with 13 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25135438141972943] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25135438141972943, 0.21037446592153905] ***
*** starting iteration: 2; err: [Inf, 0.25135438141972943, 0.21037446592153905] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425] ***
*** starting iteration: 3; err: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805] ***
*** starting iteration: 4; err: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805, 0.19140561938640485] ***
*** starting iteration: 5; err: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805, 0.19140561938640485] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805, 0.19140561938640485, 0.18993897325843795] ***
*** starting iteration: 6; err: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805, 0.19140561938640485, 0.18993897325843795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805, 0.19140561938640485, 0.18993897325843795, 0.1891877602875188] ***
*** finished computation of 7 references, err: [Inf, 0.25135438141972943, 0.21037446592153905, 0.1991464183435425, 0.1947538954508805, 0.19140561938640485, 0.18993897325843795, 0.1891877602875188] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [77, 19, 0]]
** centroid: 1, normalized-entropy: 0.7177418091697444, [(1, 77), (2, 19)]
*** center 2: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [7, 74, 0]]
** centroid: 3, normalized-entropy: 0.42440514472480345, [(1, 7), (2, 74)]
*** center 4: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [125, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [7, 86, 0]]
** centroid: 6, normalized-entropy: 0.3852851190780996, [(1, 7), (2, 86)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 61, 19]]
** centroid: 7, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2715580882302121] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2715580882302121, 0.2159793532706205] ***
*** starting iteration: 2; err: [Inf, 0.2715580882302121, 0.2159793532706205] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663] ***
*** starting iteration: 3; err: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663, 0.19562615919299703] ***
*** starting iteration: 4; err: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663, 0.19562615919299703] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663, 0.19562615919299703, 0.19307474173449057] ***
*** starting iteration: 5; err: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663, 0.19562615919299703, 0.19307474173449057] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663, 0.19562615919299703, 0.19307474173449057, 0.19250995749984678] ***
*** finished computation of 7 references, err: [Inf, 0.2715580882302121, 0.2159793532706205, 0.20075800265513663, 0.19562615919299703, 0.19307474173449057, 0.19250995749984678] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [61, 61, 0]]
** centroid: 1, normalized-entropy: 1.0, [(1, 61), (2, 61)]
*** center 2: selecting labels [1] (freq >= 1) [from [54, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [98, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [78, 30, 0]]
** centroid: 4, normalized-entropy: 0.8524051786494784, [(1, 78), (2, 30)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [46, 46, 0]]
** centroid: 5, normalized-entropy: 1.0, [(1, 46), (2, 46)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 108, 20]]
** centroid: 6, normalized-entropy: 0.625262405223423, [(2, 108), (3, 20)]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.37992149758133087] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37992149758133087, 0.23870722198154073] ***
*** starting iteration: 2; err: [Inf, 0.37992149758133087, 0.23870722198154073] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37992149758133087, 0.23870722198154073, 0.23832791639553444] ***
*** finished computation of 3 references, err: [Inf, 0.37992149758133087, 0.23870722198154073, 0.23832791639553444] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [260, 5, 0]]
** centroid: 1, normalized-entropy: 0.13503620280212753, [(1, 260), (2, 5)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [17, 164, 23]]
** centroid: 2, normalized-entropy: 0.572189722525674, [(1, 17), (2, 164), (3, 23)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [123, 74, 0]]
** centroid: 3, normalized-entropy: 0.9549003818255702, [(1, 123), (2, 74)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4008724159313955] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4008724159313955, 0.23997979512022086] ***
*** starting iteration: 2; err: [Inf, 0.4008724159313955, 0.23997979512022086] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4008724159313955, 0.23997979512022086, 0.23912023472204536] ***
*** finished computation of 3 references, err: [Inf, 0.4008724159313955, 0.23997979512022086, 0.23912023472204536] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [224, 14, 0]]
** centroid: 1, normalized-entropy: 0.32275695889739825, [(1, 224), (2, 14)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [184, 53, 0]]
** centroid: 2, normalized-entropy: 0.7667382530909177, [(1, 184), (2, 53)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 173, 19]]
** centroid: 3, normalized-entropy: 0.4656848645931274, [(2, 173), (3, 19)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3027849855554895] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3027849855554895, 0.2473182515775285] ***
*** starting iteration: 2; err: [Inf, 0.3027849855554895, 0.2473182515775285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3027849855554895, 0.2473182515775285, 0.23840969666905668] ***
*** starting iteration: 3; err: [Inf, 0.3027849855554895, 0.2473182515775285, 0.23840969666905668] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3027849855554895, 0.2473182515775285, 0.23840969666905668, 0.23685730585473766] ***
*** starting iteration: 4; err: [Inf, 0.3027849855554895, 0.2473182515775285, 0.23840969666905668, 0.23685730585473766] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3027849855554895, 0.2473182515775285, 0.23840969666905668, 0.23685730585473766, 0.23669185080164779] ***
*** finished computation of 3 references, err: [Inf, 0.3027849855554895, 0.2473182515775285, 0.23840969666905668, 0.23685730585473766, 0.23669185080164779] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [102, 148, 20]]
** centroid: 1, normalized-entropy: 0.8101959794095955, [(1, 102), (2, 148), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [104, 97, 0]]
** centroid: 2, normalized-entropy: 0.9991249430255706, [(1, 104), (2, 97)]
*** center 3: selecting labels [1] (freq >= 2) [from [196, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3924497408364472] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3924497408364472, 0.3255345410591847] ***
*** finished computation of 3 references, err: [Inf, 0.3924497408364472, 0.3255345410591847] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [150, 129, 2]]
** centroid: 1, normalized-entropy: 0.6623699856250118, [(1, 150), (2, 129), (3, 2)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [195, 24, 0]]
** centroid: 2, normalized-entropy: 0.4986751363204345, [(1, 195), (2, 24)]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [55, 90, 21]]
** centroid: 3, normalized-entropy: 0.8733296080877614, [(1, 55), (2, 90), (3, 21)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3856344665337851] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3856344665337851, 0.32298175644302657] ***
*** finished computation of 3 references, err: [Inf, 0.3856344665337851, 0.32298175644302657] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [165, 164, 2]]
** centroid: 1, normalized-entropy: 0.6606956041280891, [(1, 165), (2, 164), (3, 2)]
*** center 2: selecting labels [1] (freq >= 1) [from [174, 0, 0]]
*** center 3: selecting labels [1, 2, 3] (freq >= 1) [from [69, 76, 17]]
** centroid: 3, normalized-entropy: 0.8694295879963438, [(1, 69), (2, 76), (3, 17)]
finished with 7 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.47957226752081533] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.47957226752081533, 0.30715529493864685] ***
*** finished computation of 3 references, err: [Inf, 0.47957226752081533, 0.30715529493864685] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [152, 77, 0]]
** centroid: 1, normalized-entropy: 0.921179571167108, [(1, 152), (2, 77)]
*** center 2: selecting labels [1, 2, 3] (freq >= 1) [from [91, 168, 20]]
** centroid: 2, normalized-entropy: 0.7826076290775743, [(1, 91), (2, 168), (3, 20)]
*** center 3: selecting labels [1] (freq >= 1) [from [159, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.43466714409588314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.43466714409588314, 0.29899103755296375] ***
*** finished computation of 3 references, err: [Inf, 0.43466714409588314, 0.29899103755296375] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [82, 176, 23]]
** centroid: 1, normalized-entropy: 0.7803605074814671, [(1, 82), (2, 176), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [202, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [116, 67, 0]]
** centroid: 3, normalized-entropy: 0.9476464437732824, [(1, 116), (2, 67)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4628267756312795] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4628267756312795, 0.30598850740117023] ***
*** finished computation of 3 references, err: [Inf, 0.4628267756312795, 0.30598850740117023] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [274, 6, 0]]
** centroid: 1, normalized-entropy: 0.14938813931814066, [(1, 274), (2, 6)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [4, 192, 19]]
** centroid: 2, normalized-entropy: 0.3546061146641102, [(1, 4), (2, 192), (3, 19)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [130, 42, 0]]
** centroid: 3, normalized-entropy: 0.8019325020834525, [(1, 130), (2, 42)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.44728207253087227] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.44728207253087227, 0.30188931477000597] ***
*** finished computation of 3 references, err: [Inf, 0.44728207253087227, 0.30188931477000597] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [257, 20, 0]]
** centroid: 1, normalized-entropy: 0.3740884799821344, [(1, 257), (2, 20)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [1, 179, 20]]
** centroid: 2, normalized-entropy: 0.4705864997996835, [(2, 179), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [144, 46, 0]]
** centroid: 3, normalized-entropy: 0.7985237652450764, [(1, 144), (2, 46)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3105747796659422] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3105747796659422, 0.22758505767834997] ***
*** finished computation of 7 references, err: [Inf, 0.3105747796659422, 0.22758505767834997] ***
*** center 1: selecting labels [1] (freq >= 2) [from [170, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [3, 84, 0]]
** centroid: 2, normalized-entropy: 0.21639693245126485, [(1, 3), (2, 84)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [109, 66, 0]]
** centroid: 3, normalized-entropy: 0.9559990930989409, [(1, 109), (2, 66)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [48, 16, 0]]
** centroid: 4, normalized-entropy: 0.8112781244591328, [(1, 48), (2, 16)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [70, 8, 0]]
** centroid: 5, normalized-entropy: 0.4770713062193298, [(1, 70), (2, 8)]
*** center 6: selecting labels [2, 3] (freq >= 2) [from [0, 34, 11]]
** centroid: 6, normalized-entropy: 0.80235344282919, [(2, 34), (3, 11)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 35, 12]]
** centroid: 7, normalized-entropy: 0.8196004346196011, [(2, 35), (3, 12)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2781559153375491] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2781559153375491, 0.20310220860972486] ***
*** finished computation of 7 references, err: [Inf, 0.2781559153375491, 0.20310220860972486] ***
*** center 1: selecting labels [1] (freq >= 2) [from [70, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [57, 46, 0]]
** centroid: 2, normalized-entropy: 0.9917570244063947, [(1, 57), (2, 46)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 47, 19]]
** centroid: 3, normalized-entropy: 0.8659653498997099, [(2, 47), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [141, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [74, 52, 0]]
** centroid: 5, normalized-entropy: 0.9778956822310348, [(1, 74), (2, 52)]
*** center 6: selecting labels [2] (freq >= 2) [from [0, 65, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [66, 30, 0]]
** centroid: 7, normalized-entropy: 0.8960382325345574, [(1, 66), (2, 30)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.27860648201735244] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.27860648201735244, 0.2082699364766121] ***
*** finished computation of 7 references, err: [Inf, 0.27860648201735244, 0.2082699364766121] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 71, 20]]
** centroid: 1, normalized-entropy: 0.7597659876428757, [(2, 71), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [79, 3, 0]]
** centroid: 2, normalized-entropy: 0.22641094842107634, [(1, 79), (2, 3)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [91, 19, 0]]
** centroid: 3, normalized-entropy: 0.6639057588563916, [(1, 91), (2, 19)]
*** center 4: selecting labels [1, 2] (freq >= 2) [from [78, 50, 0]]
** centroid: 4, normalized-entropy: 0.9652016987500656, [(1, 78), (2, 50)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [6, 102, 0]]
** centroid: 5, normalized-entropy: 0.3095434291503252, [(1, 6), (2, 102)]
*** center 6: selecting labels [1] (freq >= 2) [from [87, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3517594893795771] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517594893795771, 0.22436905688083209] ***
*** starting iteration: 2; err: [Inf, 0.3517594893795771, 0.22436905688083209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517594893795771, 0.22436905688083209, 0.20682087197183846] ***
*** starting iteration: 3; err: [Inf, 0.3517594893795771, 0.22436905688083209, 0.20682087197183846] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3517594893795771, 0.22436905688083209, 0.20682087197183846, 0.20003444941115897] ***
*** finished computation of 7 references, err: [Inf, 0.3517594893795771, 0.22436905688083209, 0.20682087197183846, 0.20003444941115897] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [21, 90, 0]]
** centroid: 1, normalized-entropy: 0.699772221773307, [(1, 21), (2, 90)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [92, 13, 0]]
** centroid: 2, normalized-entropy: 0.5402129815415571, [(1, 92), (2, 13)]
*** center 3: selecting labels [1] (freq >= 2) [from [61, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 110, 23]]
** centroid: 4, normalized-entropy: 0.6643689507115365, [(2, 110), (3, 23)]
*** center 5: selecting labels [1] (freq >= 2) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [78, 30, 0]]
** centroid: 6, normalized-entropy: 0.8524051786494784, [(1, 78), (2, 30)]
*** center 7: selecting labels [1] (freq >= 2) [from [93, 0, 0]]
finished with 7 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.28477685109780604] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28477685109780604, 0.20803329944847965] ***
*** starting iteration: 2; err: [Inf, 0.28477685109780604, 0.20803329944847965] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28477685109780604, 0.20803329944847965, 0.19440098164667344] ***
*** starting iteration: 3; err: [Inf, 0.28477685109780604, 0.20803329944847965, 0.19440098164667344] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.28477685109780604, 0.20803329944847965, 0.19440098164667344, 0.18829159054771133] ***
*** finished computation of 7 references, err: [Inf, 0.28477685109780604, 0.20803329944847965, 0.19440098164667344, 0.18829159054771133] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 92, 2]]
** centroid: 1, normalized-entropy: 0.14854949043034832, [(2, 92), (3, 2)]
*** center 2: selecting labels [1] (freq >= 2) [from [105, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [78, 27, 0]]
** centroid: 3, normalized-entropy: 0.8224042259549892, [(1, 78), (2, 27)]
*** center 4: selecting labels [2, 3] (freq >= 2) [from [0, 58, 17]]
** centroid: 4, normalized-entropy: 0.7721551435804817, [(2, 58), (3, 17)]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [82, 46, 0]]
** centroid: 5, normalized-entropy: 0.9421631690835511, [(1, 82), (2, 46)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [68, 17, 0]]
** centroid: 6, normalized-entropy: 0.7219280948873623, [(1, 68), (2, 17)]
*** center 7: selecting labels [1] (freq >= 2) [from [75, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.25294689896531863] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25294689896531863, 0.22050680910241321] ***
*** starting iteration: 2; err: [Inf, 0.25294689896531863, 0.22050680910241321] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25294689896531863, 0.22050680910241321, 0.2115439152382761] ***
*** starting iteration: 3; err: [Inf, 0.25294689896531863, 0.22050680910241321, 0.2115439152382761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25294689896531863, 0.22050680910241321, 0.2115439152382761, 0.20759565877760278] ***
*** finished computation of 7 references, err: [Inf, 0.25294689896531863, 0.22050680910241321, 0.2115439152382761, 0.20759565877760278] ***
*** center 1: selecting labels [2, 3] (freq >= 2) [from [0, 104, 20]]
** centroid: 1, normalized-entropy: 0.6373874992221911, [(2, 104), (3, 20)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [102, 56, 0]]
** centroid: 2, normalized-entropy: 0.9379626436434424, [(1, 102), (2, 56)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [110, 3, 0]]
** centroid: 3, normalized-entropy: 0.17677669701805485, [(1, 110), (2, 3)]
*** center 4: selecting labels [1] (freq >= 2) [from [104, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 2) [from [3, 80, 0]]
** centroid: 5, normalized-entropy: 0.2243269603450881, [(1, 3), (2, 80)]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [48, 2, 0]]
** centroid: 6, normalized-entropy: 0.24229218908241482, [(1, 48), (2, 2)]
*** center 7: selecting labels [1] (freq >= 2) [from [35, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.3393437699680482] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3393437699680482, 0.2368784581951506] ***
*** finished computation of 3 references, err: [Inf, 0.3393437699680482, 0.2368784581951506] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 1) [from [109, 163, 23]]
** centroid: 1, normalized-entropy: 0.8142881674885812, [(1, 109), (2, 163), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [112, 80, 0]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(1, 112), (2, 80)]
*** center 3: selecting labels [1] (freq >= 1) [from [179, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 13)
[0.9200158242074409, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8291045536554519, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 14
iteration 2 finished
*** starting iteration: 1; err: [Inf, 0.34939582316154566] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.34939582316154566, 0.251464124815119] ***
*** finished computation of 3 references, err: [Inf, 0.34939582316154566, 0.251464124815119] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [73, 222, 23]]
** centroid: 1, normalized-entropy: 0.7087788260383445, [(1, 73), (2, 222), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [217, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [110, 21, 0]]
** centroid: 3, normalized-entropy: 0.6350395330941944, [(1, 110), (2, 21)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.2962131844191202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.2962131844191202, 0.24484825198785745] ***
*** finished computation of 3 references, err: [Inf, 0.2962131844191202, 0.24484825198785745] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [9, 209, 19]]
** centroid: 1, normalized-entropy: 0.3981356918859259, [(1, 9), (2, 209), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [157, 27, 0]]
** centroid: 2, normalized-entropy: 0.601619455326583, [(1, 157), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [242, 4, 0]]
** centroid: 3, normalized-entropy: 0.11989294671951675, [(1, 242), (2, 4)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4401291806311549] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4401291806311549, 0.25962061454811464] ***
*** finished computation of 3 references, err: [Inf, 0.4401291806311549, 0.25962061454811464] ***
*** center 1: selecting labels [1] (freq >= 2) [from [111, 0, 0]]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [111, 162, 20]]
** centroid: 2, normalized-entropy: 0.7997289470798651, [(1, 111), (2, 162), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [180, 83, 0]]
** centroid: 3, normalized-entropy: 0.8995203955997694, [(1, 180), (2, 83)]
finished with 3 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 14)
[0.9200158242074409, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8291045536554519, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 15
iteration 3 finished
*** starting iteration: 1; err: [Inf, 0.32744134247426065] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.32744134247426065, 0.29831324528284686] ***
*** finished computation of 3 references, err: [Inf, 0.32744134247426065, 0.29831324528284686] ***
*** center 1: selecting labels [1] (freq >= 2) [from [206, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [124, 73, 0]]
** centroid: 2, normalized-entropy: 0.9510998636887936, [(1, 124), (2, 73)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [70, 170, 23]]
** centroid: 3, normalized-entropy: 0.7713835901917016, [(1, 70), (2, 170), (3, 23)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.37923294843092137] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.37923294843092137, 0.31742353537126905] ***
*** finished computation of 3 references, err: [Inf, 0.37923294843092137, 0.31742353537126905] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [291, 54, 0]]
** centroid: 1, normalized-entropy: 0.6259231316564361, [(1, 291), (2, 54)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [117, 17, 0]]
** centroid: 2, normalized-entropy: 0.5487791867822941, [(1, 117), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 169, 19]]
** centroid: 3, normalized-entropy: 0.4723588118525454, [(2, 169), (3, 19)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3371553422263202] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3371553422263202, 0.304159975535274] ***
*** finished computation of 3 references, err: [Inf, 0.3371553422263202, 0.304159975535274] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [100, 69, 0]]
** centroid: 1, normalized-entropy: 0.975590640452799, [(1, 100), (2, 69)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [65, 175, 20]]
** centroid: 2, normalized-entropy: 0.7376083683946462, [(1, 65), (2, 175), (3, 20)]
*** center 3: selecting labels [1] (freq >= 2) [from [237, 1, 0]]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 15)
[0.9200158242074409, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8759537981094868, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8291045536554519, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 16
iteration 4 finished
*** starting iteration: 1; err: [Inf, 0.4513132447346129] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4513132447346129, 0.29844527702772994] ***
*** starting iteration: 2; err: [Inf, 0.4513132447346129, 0.29844527702772994] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4513132447346129, 0.29844527702772994, 0.29695216361908006] ***
*** starting iteration: 3; err: [Inf, 0.4513132447346129, 0.29844527702772994, 0.29695216361908006] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4513132447346129, 0.29844527702772994, 0.29695216361908006, 0.2959221413832387] ***
*** starting iteration: 4; err: [Inf, 0.4513132447346129, 0.29844527702772994, 0.29695216361908006, 0.2959221413832387] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4513132447346129, 0.29844527702772994, 0.29695216361908006, 0.2959221413832387, 0.2952963086054556] ***
*** finished computation of 3 references, err: [Inf, 0.4513132447346129, 0.29844527702772994, 0.29695216361908006, 0.2959221413832387, 0.2952963086054556] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [92, 136, 19]]
** centroid: 1, normalized-entropy: 0.813499462247436, [(1, 92), (2, 136), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [109, 104, 0]]
** centroid: 2, normalized-entropy: 0.9996024742757982, [(1, 109), (2, 104)]
*** center 3: selecting labels [1] (freq >= 2) [from [207, 0, 0]]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.42045168236255465] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045168236255465, 0.3057412158675503] ***
*** starting iteration: 2; err: [Inf, 0.42045168236255465, 0.3057412158675503] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045168236255465, 0.3057412158675503, 0.3007297535361289] ***
*** starting iteration: 3; err: [Inf, 0.42045168236255465, 0.3057412158675503, 0.3007297535361289] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045168236255465, 0.3057412158675503, 0.3007297535361289, 0.2986741694042283] ***
*** starting iteration: 4; err: [Inf, 0.42045168236255465, 0.3057412158675503, 0.3007297535361289, 0.2986741694042283] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.42045168236255465, 0.3057412158675503, 0.3007297535361289, 0.2986741694042283, 0.29808389841728306] ***
*** finished computation of 3 references, err: [Inf, 0.42045168236255465, 0.3057412158675503, 0.3007297535361289, 0.2986741694042283, 0.29808389841728306] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [66, 164, 20]]
** centroid: 1, normalized-entropy: 0.7556998187566114, [(1, 66), (2, 164), (3, 20)]
*** center 2: selecting labels [1] (freq >= 2) [from [204, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [132, 81, 0]]
** centroid: 3, normalized-entropy: 0.9582407282588409, [(1, 132), (2, 81)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.4092096082164204] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4092096082164204, 0.31011055305868657] ***
*** starting iteration: 2; err: [Inf, 0.4092096082164204, 0.31011055305868657] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712] ***
*** starting iteration: 3; err: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712, 0.2956612489658881] ***
*** starting iteration: 4; err: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712, 0.2956612489658881] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712, 0.2956612489658881, 0.29458131244568314] ***
*** starting iteration: 5; err: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712, 0.2956612489658881, 0.29458131244568314] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712, 0.2956612489658881, 0.29458131244568314, 0.29437999027101575] ***
*** finished computation of 3 references, err: [Inf, 0.4092096082164204, 0.31011055305868657, 0.2986429290567712, 0.2956612489658881, 0.29458131244568314, 0.29437999027101575] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [88, 142, 23]]
** centroid: 1, normalized-entropy: 0.8278431191859288, [(1, 88), (2, 142), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [214, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [98, 101, 0]]
** centroid: 3, normalized-entropy: 0.9998360553113791, [(1, 98), (2, 101)]
finished with 4 centroids; started with 3
[ Info: precision is zero for label '3'; #classes=3 
generating 4 configurations using top 12 configurations, starting with 16)
[0.9200158242074409, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8759537981094868, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8291045536554519, 0.8259666852481223, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 17
iteration 5 finished
*** starting iteration: 1; err: [Inf, 0.5336376807593681] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5336376807593681, 0.33141387508505277] ***
*** starting iteration: 2; err: [Inf, 0.5336376807593681, 0.33141387508505277] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5336376807593681, 0.33141387508505277, 0.30788627852386496] ***
*** starting iteration: 3; err: [Inf, 0.5336376807593681, 0.33141387508505277, 0.30788627852386496] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.5336376807593681, 0.33141387508505277, 0.30788627852386496, 0.298895572000337] ***
*** finished computation of 3 references, err: [Inf, 0.5336376807593681, 0.33141387508505277, 0.30788627852386496, 0.298895572000337] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [89, 142, 23]]
** centroid: 1, normalized-entropy: 0.8283551728965785, [(1, 89), (2, 142), (3, 23)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [118, 101, 0]]
** centroid: 2, normalized-entropy: 0.9956489793151984, [(1, 118), (2, 101)]
*** center 3: selecting labels [1] (freq >= 2) [from [193, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.40685276150413] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40685276150413, 0.31000380942980565] ***
*** starting iteration: 2; err: [Inf, 0.40685276150413, 0.31000380942980565] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40685276150413, 0.31000380942980565, 0.3055601755584377] ***
*** starting iteration: 3; err: [Inf, 0.40685276150413, 0.31000380942980565, 0.3055601755584377] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.40685276150413, 0.31000380942980565, 0.3055601755584377, 0.30435024892472884] ***
*** finished computation of 3 references, err: [Inf, 0.40685276150413, 0.31000380942980565, 0.3055601755584377, 0.30435024892472884] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [6, 209, 19]]
** centroid: 1, normalized-entropy: 0.36293799438515967, [(1, 6), (2, 209), (3, 19)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [144, 27, 0]]
** centroid: 2, normalized-entropy: 0.6292492238560344, [(1, 144), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [258, 4, 0]]
** centroid: 3, normalized-entropy: 0.11397020802905504, [(1, 258), (2, 4)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.36623741182285] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36623741182285, 0.2969572989485119] ***
*** starting iteration: 2; err: [Inf, 0.36623741182285, 0.2969572989485119] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36623741182285, 0.2969572989485119, 0.29586565968995243] ***
*** starting iteration: 3; err: [Inf, 0.36623741182285, 0.2969572989485119, 0.29586565968995243] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.36623741182285, 0.2969572989485119, 0.29586565968995243, 0.2958137471245593] ***
*** finished computation of 3 references, err: [Inf, 0.36623741182285, 0.2969572989485119, 0.29586565968995243, 0.2958137471245593] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [235, 21, 0]]
** centroid: 1, normalized-entropy: 0.4092962956205902, [(1, 235), (2, 21)]
*** center 2: selecting labels [2, 3] (freq >= 2) [from [0, 187, 20]]
** centroid: 2, normalized-entropy: 0.4581834507518116, [(2, 187), (3, 20)]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [167, 37, 0]]
** centroid: 3, normalized-entropy: 0.6830704823075846, [(1, 167), (2, 37)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 17)
[0.9200158242074409, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8759537981094868, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8439277600954247, 0.8291045536554519, 0.8259666852481223, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 17
iteration 6 finished
generating 4 configurations using top 12 configurations, starting with 17)
[0.9200158242074409, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8759537981094868, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8439277600954247, 0.8291045536554519, 0.8259666852481223, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 18
iteration 7 finished
*** starting iteration: 1; err: [Inf, 0.3543381741278813] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3543381741278813, 0.24601934901956055] ***
*** starting iteration: 2; err: [Inf, 0.3543381741278813, 0.24601934901956055] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3543381741278813, 0.24601934901956055, 0.23683535315266982] ***
*** starting iteration: 3; err: [Inf, 0.3543381741278813, 0.24601934901956055, 0.23683535315266982] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3543381741278813, 0.24601934901956055, 0.23683535315266982, 0.23415762297641318] ***
*** finished computation of 3 references, err: [Inf, 0.3543381741278813, 0.24601934901956055, 0.23683535315266982, 0.23415762297641318] ***
*** center 1: selecting labels [1, 2, 3] (freq >= 2) [from [85, 150, 23]]
** centroid: 1, normalized-entropy: 0.816133738551521, [(1, 85), (2, 150), (3, 23)]
*** center 2: selecting labels [1] (freq >= 2) [from [216, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [99, 93, 0]]
** centroid: 3, normalized-entropy: 0.9992954443621548, [(1, 99), (2, 93)]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.3239253776781875] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3239253776781875, 0.2731521063703468] ***
*** starting iteration: 2; err: [Inf, 0.3239253776781875, 0.2731521063703468] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3239253776781875, 0.2731521063703468, 0.2469376932837996] ***
*** starting iteration: 3; err: [Inf, 0.3239253776781875, 0.2731521063703468, 0.2469376932837996] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.3239253776781875, 0.2731521063703468, 0.2469376932837996, 0.2383215942237152] ***
*** finished computation of 3 references, err: [Inf, 0.3239253776781875, 0.2731521063703468, 0.2469376932837996, 0.2383215942237152] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [155, 96, 0]]
** centroid: 1, normalized-entropy: 0.959767924919944, [(1, 155), (2, 96)]
*** center 2: selecting labels [1, 2, 3] (freq >= 2) [from [55, 144, 19]]
** centroid: 2, normalized-entropy: 0.7591693389413012, [(1, 55), (2, 144), (3, 19)]
*** center 3: selecting labels [1] (freq >= 2) [from [198, 0, 0]]
finished with 6 centroids; started with 3
*** starting iteration: 1; err: [Inf, 0.33354768720546224] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33354768720546224, 0.24709744032261532] ***
*** starting iteration: 2; err: [Inf, 0.33354768720546224, 0.24709744032261532] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33354768720546224, 0.24709744032261532, 0.2388414581567384] ***
*** starting iteration: 3; err: [Inf, 0.33354768720546224, 0.24709744032261532, 0.2388414581567384] ***
*** computing centroids ***
*** computing 3 nearest references ***
*** new score with 3 references: [Inf, 0.33354768720546224, 0.24709744032261532, 0.2388414581567384, 0.23747378761979235] ***
*** finished computation of 3 references, err: [Inf, 0.33354768720546224, 0.24709744032261532, 0.2388414581567384, 0.23747378761979235] ***
*** center 1: selecting labels [1] (freq >= 2) [from [225, 1, 0]]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [98, 86, 0]]
** centroid: 2, normalized-entropy: 0.996929708080541, [(1, 98), (2, 86)]
*** center 3: selecting labels [1, 2, 3] (freq >= 2) [from [79, 158, 20]]
** centroid: 3, normalized-entropy: 0.7831652715444181, [(1, 79), (2, 158), (3, 20)]
finished with 6 centroids; started with 3
generating 4 configurations using top 12 configurations, starting with 18)
[0.9200158242074409, 0.9169888451325576, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8759537981094868, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8439277600954247, 0.8291045536554519, 0.8259666852481223, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 18
iteration 8 finished
generating 4 configurations using top 12 configurations, starting with 18)
[0.9200158242074409, 0.9169888451325576, 0.9150138162114211, 0.9069878261495029, 0.9010177842513172, 0.8819358280436124, 0.880056703409997, 0.8759537981094868, 0.8649907392422364, 0.8589787392182603, 0.8520136903370435, 0.8500296703889519, 0.8439277600954247, 0.8291045536554519, 0.8259666852481223, 0.7899426372480264, 0.7699885514256772, 0.7689995384606162]
AKNC_Config(KCenters.direct_kernel, SimilaritySearch.l1_distance, Statistics.mean, KCenters.most_frequent_label, 1, 7, 10, 1.0, :rand, 0.3, 1) => 0.9200158242074409
finished with 19
iteration 9 finished
*** starting iteration: 1; err: [Inf, 0.29366991382690744] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29366991382690744, 0.2111524467023688] ***
*** starting iteration: 2; err: [Inf, 0.29366991382690744, 0.2111524467023688] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29366991382690744, 0.2111524467023688, 0.19451581534451326] ***
*** starting iteration: 3; err: [Inf, 0.29366991382690744, 0.2111524467023688, 0.19451581534451326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29366991382690744, 0.2111524467023688, 0.19451581534451326, 0.18600882733430904] ***
*** finished computation of 7 references, err: [Inf, 0.29366991382690744, 0.2111524467023688, 0.19451581534451326, 0.18600882733430904] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [92, 12, 0]]
** centroid: 1, normalized-entropy: 0.5159469300074472, [(1, 92), (2, 12)]
*** center 2: selecting labels [1] (freq >= 2) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [79, 115, 1]]
** centroid: 3, normalized-entropy: 0.9750157547407654, [(1, 79), (2, 115)]
*** center 4: selecting labels [1, 2, 3] (freq >= 2) [from [35, 116, 22]]
** centroid: 4, normalized-entropy: 0.7769279442984982, [(1, 35), (2, 116), (3, 22)]
*** center 5: selecting labels [1] (freq >= 2) [from [39, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [56, 0, 0]]
*** center 7: selecting labels [1] (freq >= 2) [from [30, 0, 0]]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.24511877511787847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24511877511787847, 0.18412213011542153] ***
*** starting iteration: 2; err: [Inf, 0.24511877511787847, 0.18412213011542153] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24511877511787847, 0.18412213011542153, 0.16779519893725386] ***
*** starting iteration: 3; err: [Inf, 0.24511877511787847, 0.18412213011542153, 0.16779519893725386] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24511877511787847, 0.18412213011542153, 0.16779519893725386, 0.15443617149885894] ***
*** finished computation of 7 references, err: [Inf, 0.24511877511787847, 0.18412213011542153, 0.16779519893725386, 0.15443617149885894] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [101, 59, 0]]
** centroid: 1, normalized-entropy: 0.949707471948113, [(1, 101), (2, 59)]
*** center 2: selecting labels [1, 2] (freq >= 2) [from [69, 33, 0]]
** centroid: 2, normalized-entropy: 0.9081783472997053, [(1, 69), (2, 33)]
*** center 3: selecting labels [2, 3] (freq >= 2) [from [0, 131, 19]]
** centroid: 3, normalized-entropy: 0.54822511745032, [(2, 131), (3, 19)]
*** center 4: selecting labels [1] (freq >= 2) [from [82, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [48, 0, 0]]
*** center 6: selecting labels [1] (freq >= 2) [from [36, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 2) [from [72, 17, 0]]
** centroid: 7, normalized-entropy: 0.7035821005719904, [(1, 72), (2, 17)]
finished with 9 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
*** starting iteration: 1; err: [Inf, 0.1851612860860507] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1851612860860507, 0.15794458033759956] ***
*** starting iteration: 2; err: [Inf, 0.1851612860860507, 0.15794458033759956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1851612860860507, 0.15794458033759956, 0.1559724011660918] ***
*** starting iteration: 3; err: [Inf, 0.1851612860860507, 0.15794458033759956, 0.1559724011660918] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.1851612860860507, 0.15794458033759956, 0.1559724011660918, 0.15511503695221296] ***
*** finished computation of 7 references, err: [Inf, 0.1851612860860507, 0.15794458033759956, 0.1559724011660918, 0.15511503695221296] ***
*** center 1: selecting labels [1, 2] (freq >= 2) [from [14, 91, 0]]
** centroid: 1, normalized-entropy: 0.5665095065529052, [(1, 14), (2, 91)]
*** center 2: selecting labels [1] (freq >= 2) [from [100, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 2) [from [97, 43, 0]]
** centroid: 3, normalized-entropy: 0.8898478016282408, [(1, 97), (2, 43)]
*** center 4: selecting labels [1] (freq >= 2) [from [49, 0, 0]]
*** center 5: selecting labels [1] (freq >= 2) [from [107, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 2) [from [35, 38, 0]]
** centroid: 6, normalized-entropy: 0.998781393072756, [(1, 35), (2, 38)]
*** center 7: selecting labels [2, 3] (freq >= 2) [from [0, 73, 20]]
** centroid: 7, normalized-entropy: 0.7510324165275097, [(2, 73), (3, 20)]
finished with 8 centroids; started with 7
[ Info: precision is zero for label '3'; #classes=3 
[ Info: ========== BEST MODEL ==========
*** starting iteration: 1; err: [Inf, 0.24100355044798927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24100355044798927, 0.20561258199065924] ***
*** starting iteration: 2; err: [Inf, 0.24100355044798927, 0.20561258199065924] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24100355044798927, 0.20561258199065924, 0.19736411528731695] ***
*** starting iteration: 3; err: [Inf, 0.24100355044798927, 0.20561258199065924, 0.19736411528731695] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24100355044798927, 0.20561258199065924, 0.19736411528731695, 0.19457149567152374] ***
*** starting iteration: 4; err: [Inf, 0.24100355044798927, 0.20561258199065924, 0.19736411528731695, 0.19457149567152374] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24100355044798927, 0.20561258199065924, 0.19736411528731695, 0.19457149567152374, 0.19359969558706508] ***
*** finished computation of 7 references, err: [Inf, 0.24100355044798927, 0.20561258199065924, 0.19736411528731695, 0.19457149567152374, 0.19359969558706508] ***
*** center 1: selecting labels [1] (freq >= 1) [from [166, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [126, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [34, 117, 0]]
** centroid: 3, normalized-entropy: 0.7694881247968017, [(1, 34), (2, 117)]
*** center 4: selecting labels [1] (freq >= 1) [from [141, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 89, 31]]
** centroid: 5, normalized-entropy: 0.8242209207918308, [(2, 89), (3, 31)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [128, 18, 0]]
** centroid: 6, normalized-entropy: 0.5387379148665815, [(1, 128), (2, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [10, 140, 0]]
** centroid: 7, normalized-entropy: 0.3533593350214213, [(1, 10), (2, 140)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2333751071896404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092] ***
*** starting iteration: 2; err: [Inf, 0.2333751071896404, 0.2015214487221092] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776] ***
*** starting iteration: 3; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687] ***
*** starting iteration: 4; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853] ***
*** starting iteration: 5; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188] ***
*** starting iteration: 6; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403] ***
*** starting iteration: 7; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403, 0.18758816412254237] ***
*** starting iteration: 8; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403, 0.18758816412254237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403, 0.18758816412254237, 0.1860855652783066] ***
*** starting iteration: 9; err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403, 0.18758816412254237, 0.1860855652783066] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403, 0.18758816412254237, 0.1860855652783066, 0.1851924569234252] ***
*** finished computation of 7 references, err: [Inf, 0.2333751071896404, 0.2015214487221092, 0.1971964004188776, 0.1943052278328687, 0.19271513894572853, 0.191693856485188, 0.18998659243248403, 0.18758816412254237, 0.1860855652783066, 0.1851924569234252] ***
*** center 1: selecting labels [1] (freq >= 1) [from [74, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [21, 32, 0]]
** centroid: 2, normalized-entropy: 0.9687003436508602, [(1, 21), (2, 32)]
*** center 3: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 66, 13]]
** centroid: 4, normalized-entropy: 0.6451006442088483, [(2, 66), (3, 13)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 61, 2]]
** centroid: 5, normalized-entropy: 0.20307392998664567, [(2, 61), (3, 2)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [62, 18, 0]]
** centroid: 6, normalized-entropy: 0.7691928290130138, [(1, 62), (2, 18)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [76, 10, 0]]
** centroid: 7, normalized-entropy: 0.5185697317883058, [(1, 76), (2, 10)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2953781172130257] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2953781172130257, 0.2045487802401185] ***
*** starting iteration: 2; err: [Inf, 0.2953781172130257, 0.2045487802401185] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2953781172130257, 0.2045487802401185, 0.19260970198735594] ***
*** starting iteration: 3; err: [Inf, 0.2953781172130257, 0.2045487802401185, 0.19260970198735594] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2953781172130257, 0.2045487802401185, 0.19260970198735594, 0.1880357879793737] ***
*** starting iteration: 4; err: [Inf, 0.2953781172130257, 0.2045487802401185, 0.19260970198735594, 0.1880357879793737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2953781172130257, 0.2045487802401185, 0.19260970198735594, 0.1880357879793737, 0.18721547579369507] ***
*** finished computation of 7 references, err: [Inf, 0.2953781172130257, 0.2045487802401185, 0.19260970198735594, 0.1880357879793737, 0.18721547579369507] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 25, 0]]
** centroid: 1, normalized-entropy: 0.8871723027673716, [(1, 57), (2, 25)]
*** center 2: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [25, 52, 0]]
** centroid: 3, normalized-entropy: 0.9093934226727598, [(1, 25), (2, 52)]
*** center 4: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [48, 45, 0]]
** centroid: 5, normalized-entropy: 0.9992492479956566, [(1, 48), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [36, 3, 0]]
** centroid: 6, normalized-entropy: 0.3912435636292556, [(1, 36), (2, 3)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 63, 15]]
** centroid: 7, normalized-entropy: 0.7062740891876008, [(2, 63), (3, 15)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23242016109451652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942] ***
*** starting iteration: 2; err: [Inf, 0.23242016109451652, 0.21113577819149942] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696] ***
*** starting iteration: 3; err: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793] ***
*** starting iteration: 4; err: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675] ***
*** starting iteration: 5; err: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675, 0.19241917878668754] ***
*** starting iteration: 6; err: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675, 0.19241917878668754] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675, 0.19241917878668754, 0.1902594115464017] ***
*** starting iteration: 7; err: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675, 0.19241917878668754, 0.1902594115464017] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675, 0.19241917878668754, 0.1902594115464017, 0.18933660925365983] ***
*** finished computation of 7 references, err: [Inf, 0.23242016109451652, 0.21113577819149942, 0.20372757129743696, 0.19753038090001793, 0.19424751299619675, 0.19241917878668754, 0.1902594115464017, 0.18933660925365983] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [28, 32, 0]]
** centroid: 1, normalized-entropy: 0.9967916319816367, [(1, 28), (2, 32)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [77, 6, 0]]
** centroid: 2, normalized-entropy: 0.3744088453489206, [(1, 77), (2, 6)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [63, 8, 0]]
** centroid: 3, normalized-entropy: 0.5079353563991225, [(1, 63), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 17, 0]]
** centroid: 4, normalized-entropy: 0.8536576732793314, [(1, 44), (2, 17)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 62, 1]]
** centroid: 5, normalized-entropy: 0.11759466565886466, [(2, 62), (3, 1)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 53, 9]]
** centroid: 6, normalized-entropy: 0.5975977764379984, [(2, 53), (3, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [100, 0, 0]]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2375897082593292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826] ***
*** starting iteration: 2; err: [Inf, 0.2375897082593292, 0.20010811396408826] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961] ***
*** starting iteration: 3; err: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723] ***
*** starting iteration: 4; err: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445] ***
*** starting iteration: 5; err: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445, 0.18823067747894676] ***
*** starting iteration: 6; err: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445, 0.18823067747894676] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445, 0.18823067747894676, 0.18333242441155018] ***
*** starting iteration: 7; err: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445, 0.18823067747894676, 0.18333242441155018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445, 0.18823067747894676, 0.18333242441155018, 0.18267108715418726] ***
*** finished computation of 7 references, err: [Inf, 0.2375897082593292, 0.20010811396408826, 0.1942242551445961, 0.19193670344352723, 0.1903623355757445, 0.18823067747894676, 0.18333242441155018, 0.18267108715418726] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [48, 38, 0]]
** centroid: 1, normalized-entropy: 0.9902246902198684, [(1, 48), (2, 38)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 42, 20]]
** centroid: 2, normalized-entropy: 0.9071657675730821, [(2, 42), (3, 20)]
*** center 3: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [58, 6, 0]]
** centroid: 4, normalized-entropy: 0.44886448872302936, [(1, 58), (2, 6)]
*** center 5: selecting labels [1] (freq >= 1) [from [68, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [61, 32, 0]]
** centroid: 7, normalized-entropy: 0.928675181093665, [(1, 61), (2, 32)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25815159363299606] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815159363299606, 0.20705411748867483] ***
*** starting iteration: 2; err: [Inf, 0.25815159363299606, 0.20705411748867483] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056] ***
*** starting iteration: 3; err: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743] ***
*** starting iteration: 4; err: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743, 0.19022322033531963] ***
*** starting iteration: 5; err: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743, 0.19022322033531963] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743, 0.19022322033531963, 0.18903553465753795] ***
*** starting iteration: 6; err: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743, 0.19022322033531963, 0.18903553465753795] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743, 0.19022322033531963, 0.18903553465753795, 0.18896030820161105] ***
*** finished computation of 7 references, err: [Inf, 0.25815159363299606, 0.20705411748867483, 0.19609524341952056, 0.19222629448957743, 0.19022322033531963, 0.18903553465753795, 0.18896030820161105] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [58, 16, 0]]
** centroid: 1, normalized-entropy: 0.7531979910695015, [(1, 58), (2, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [47, 34, 0]]
** centroid: 2, normalized-entropy: 0.9813387358307915, [(1, 47), (2, 34)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 61, 14]]
** centroid: 3, normalized-entropy: 0.6944460704939805, [(2, 61), (3, 14)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [45, 9, 0]]
** centroid: 4, normalized-entropy: 0.6500224216483541, [(1, 45), (2, 9)]
*** center 5: selecting labels [1] (freq >= 1) [from [87, 0, 0]]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 64, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25796074309572575] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796074309572575, 0.19556752462498844] ***
*** starting iteration: 2; err: [Inf, 0.25796074309572575, 0.19556752462498844] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796074309572575, 0.19556752462498844, 0.187009568403475] ***
*** starting iteration: 3; err: [Inf, 0.25796074309572575, 0.19556752462498844, 0.187009568403475] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796074309572575, 0.19556752462498844, 0.187009568403475, 0.18510314503405242] ***
*** starting iteration: 4; err: [Inf, 0.25796074309572575, 0.19556752462498844, 0.187009568403475, 0.18510314503405242] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25796074309572575, 0.19556752462498844, 0.187009568403475, 0.18510314503405242, 0.185023050442338] ***
*** finished computation of 7 references, err: [Inf, 0.25796074309572575, 0.19556752462498844, 0.187009568403475, 0.18510314503405242, 0.185023050442338] ***
*** center 1: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 58, 13]]
** centroid: 2, normalized-entropy: 0.6868088934028034, [(2, 58), (3, 13)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [5, 68, 0]]
** centroid: 3, normalized-entropy: 0.3602750564216625, [(1, 5), (2, 68)]
*** center 4: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 5: selecting labels [1] (freq >= 1) [from [83, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [46, 11, 0]]
** centroid: 6, normalized-entropy: 0.7076690004167966, [(1, 46), (2, 11)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [45, 50, 0]]
** centroid: 7, normalized-entropy: 0.9980008838722993, [(1, 45), (2, 50)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2506889963131398] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2506889963131398, 0.2019318237788975] ***
*** starting iteration: 2; err: [Inf, 0.2506889963131398, 0.2019318237788975] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337] ***
*** starting iteration: 3; err: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337, 0.18754128123261035] ***
*** starting iteration: 4; err: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337, 0.18754128123261035] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337, 0.18754128123261035, 0.18598561345599593] ***
*** starting iteration: 5; err: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337, 0.18754128123261035, 0.18598561345599593] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337, 0.18754128123261035, 0.18598561345599593, 0.18548807991854846] ***
*** finished computation of 7 references, err: [Inf, 0.2506889963131398, 0.2019318237788975, 0.19128529180586337, 0.18754128123261035, 0.18598561345599593, 0.18548807991854846] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 81, 17]]
** centroid: 1, normalized-entropy: 0.665580063146735, [(2, 81), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [43, 28, 0]]
** centroid: 2, normalized-entropy: 0.9675594819018211, [(1, 43), (2, 28)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [41, 33, 0]]
** centroid: 3, normalized-entropy: 0.9915528503834039, [(1, 41), (2, 33)]
*** center 4: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [36, 39, 0]]
** centroid: 5, normalized-entropy: 0.998845535995202, [(1, 36), (2, 39)]
*** center 6: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2596631440632045] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596631440632045, 0.2084439224563539] ***
*** starting iteration: 2; err: [Inf, 0.2596631440632045, 0.2084439224563539] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652] ***
*** starting iteration: 3; err: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518] ***
*** starting iteration: 4; err: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518, 0.19432173018716276] ***
*** starting iteration: 5; err: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518, 0.19432173018716276] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518, 0.19432173018716276, 0.1932374368943274] ***
*** starting iteration: 6; err: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518, 0.19432173018716276, 0.1932374368943274] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518, 0.19432173018716276, 0.1932374368943274, 0.19277153333276512] ***
*** finished computation of 7 references, err: [Inf, 0.2596631440632045, 0.2084439224563539, 0.20022469052858652, 0.19703206429630518, 0.19432173018716276, 0.1932374368943274, 0.19277153333276512] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 74, 17]]
** centroid: 1, normalized-entropy: 0.6947570868163001, [(2, 74), (3, 17)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [1, 57, 0]]
** centroid: 2, normalized-entropy: 0.12565805017256745, [(1, 1), (2, 57)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [71, 8, 0]]
** centroid: 3, normalized-entropy: 0.47299536229314826, [(1, 71), (2, 8)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [62, 16, 0]]
** centroid: 4, normalized-entropy: 0.7320666900931937, [(1, 62), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [37, 23, 0]]
** centroid: 6, normalized-entropy: 0.9603622703154779, [(1, 37), (2, 23)]
*** center 7: selecting labels [1] (freq >= 1) [from [78, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2596077573578805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596077573578805, 0.20765360775217415] ***
*** starting iteration: 2; err: [Inf, 0.2596077573578805, 0.20765360775217415] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888] ***
*** starting iteration: 3; err: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151] ***
*** starting iteration: 4; err: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151, 0.1947740118401125] ***
*** starting iteration: 5; err: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151, 0.1947740118401125] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151, 0.1947740118401125, 0.19364949081814847] ***
*** starting iteration: 6; err: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151, 0.1947740118401125, 0.19364949081814847] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151, 0.1947740118401125, 0.19364949081814847, 0.192753830851987] ***
*** finished computation of 7 references, err: [Inf, 0.2596077573578805, 0.20765360775217415, 0.2009882961846888, 0.1968669617595151, 0.1947740118401125, 0.19364949081814847, 0.192753830851987] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [36, 39, 0]]
** centroid: 1, normalized-entropy: 0.998845535995202, [(1, 36), (2, 39)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [49, 14, 0]]
** centroid: 2, normalized-entropy: 0.7642045065086204, [(1, 49), (2, 14)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 50, 17]]
** centroid: 3, normalized-entropy: 0.8171387756817725, [(2, 50), (3, 17)]
*** center 4: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [62, 5, 0]]
** centroid: 5, normalized-entropy: 0.3829576722723533, [(1, 62), (2, 5)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [2, 77, 0]]
** centroid: 6, normalized-entropy: 0.17033057560105982, [(1, 2), (2, 77)]
*** center 7: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.33919466944783927] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33919466944783927, 0.21133155433274806] ***
*** starting iteration: 2; err: [Inf, 0.33919466944783927, 0.21133155433274806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33919466944783927, 0.21133155433274806, 0.19546817705128341] ***
*** starting iteration: 3; err: [Inf, 0.33919466944783927, 0.21133155433274806, 0.19546817705128341] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33919466944783927, 0.21133155433274806, 0.19546817705128341, 0.19222032368090003] ***
*** starting iteration: 4; err: [Inf, 0.33919466944783927, 0.21133155433274806, 0.19546817705128341, 0.19222032368090003] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.33919466944783927, 0.21133155433274806, 0.19546817705128341, 0.19222032368090003, 0.19155614781659097] ***
*** finished computation of 7 references, err: [Inf, 0.33919466944783927, 0.21133155433274806, 0.19546817705128341, 0.19222032368090003, 0.19155614781659097] ***
*** center 1: selecting labels [1] (freq >= 1) [from [43, 0, 0]]
*** center 2: selecting labels [2] (freq >= 1) [from [0, 72, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [40, 21, 0]]
** centroid: 3, normalized-entropy: 0.9288391461883213, [(1, 40), (2, 21)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 84, 14]]
** centroid: 4, normalized-entropy: 0.5916727785823274, [(2, 84), (3, 14)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [74, 2, 0]]
** centroid: 5, normalized-entropy: 0.17556502585750275, [(1, 74), (2, 2)]
*** center 6: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [65, 18, 0]]
** centroid: 7, normalized-entropy: 0.7544062039636575, [(1, 65), (2, 18)]
finished with 10 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22994456403516234] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636] ***
*** starting iteration: 2; err: [Inf, 0.22994456403516234, 0.20523192738741636] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993] ***
*** starting iteration: 3; err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194] ***
*** starting iteration: 4; err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184] ***
*** starting iteration: 5; err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455] ***
*** starting iteration: 6; err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455, 0.1947715328782797] ***
*** starting iteration: 7; err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455, 0.1947715328782797] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455, 0.1947715328782797, 0.1928440417293459] ***
*** starting iteration: 8; err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455, 0.1947715328782797, 0.1928440417293459] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455, 0.1947715328782797, 0.1928440417293459, 0.19206648899987339] ***
*** finished computation of 7 references, err: [Inf, 0.22994456403516234, 0.20523192738741636, 0.2007761159799993, 0.19881671911408194, 0.1971508185081184, 0.19608064143918455, 0.1947715328782797, 0.1928440417293459, 0.19206648899987339] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [4, 62, 0]]
** centroid: 1, normalized-entropy: 0.32984607020714635, [(1, 4), (2, 62)]
*** center 2: selecting labels [1] (freq >= 1) [from [84, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [21, 60, 0]]
** centroid: 3, normalized-entropy: 0.8256265261578954, [(1, 21), (2, 60)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [51, 10, 0]]
** centroid: 4, normalized-entropy: 0.6436394131461666, [(1, 51), (2, 10)]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 35, 13]]
** centroid: 5, normalized-entropy: 0.842657877202239, [(2, 35), (3, 13)]
*** center 6: selecting labels [1] (freq >= 1) [from [93, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [60, 7, 0]]
** centroid: 7, normalized-entropy: 0.4830306801456181, [(1, 60), (2, 7)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23205225257016718] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23205225257016718, 0.19980540134385227] ***
*** starting iteration: 2; err: [Inf, 0.23205225257016718, 0.19980540134385227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23205225257016718, 0.19980540134385227, 0.1933499891543761] ***
*** starting iteration: 3; err: [Inf, 0.23205225257016718, 0.19980540134385227, 0.1933499891543761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23205225257016718, 0.19980540134385227, 0.1933499891543761, 0.19105561457108705] ***
*** starting iteration: 4; err: [Inf, 0.23205225257016718, 0.19980540134385227, 0.1933499891543761, 0.19105561457108705] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23205225257016718, 0.19980540134385227, 0.1933499891543761, 0.19105561457108705, 0.19027475623600185] ***
*** finished computation of 7 references, err: [Inf, 0.23205225257016718, 0.19980540134385227, 0.1933499891543761, 0.19105561457108705, 0.19027475623600185] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 76, 16]]
** centroid: 1, normalized-entropy: 0.6665783579949205, [(2, 76), (3, 16)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [72, 13, 0]]
** centroid: 2, normalized-entropy: 0.617151919200282, [(1, 72), (2, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 30, 0]]
** centroid: 4, normalized-entropy: 0.940285958670631, [(1, 54), (2, 30)]
*** center 5: selecting labels [1] (freq >= 1) [from [65, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [44, 1, 0]]
** centroid: 6, normalized-entropy: 0.1537421803287618, [(1, 44), (2, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [18, 52, 0]]
** centroid: 7, normalized-entropy: 0.8224042259549892, [(1, 18), (2, 52)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2228593156635761] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2228593156635761, 0.19840731899626554] ***
*** starting iteration: 2; err: [Inf, 0.2228593156635761, 0.19840731899626554] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172] ***
*** starting iteration: 3; err: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172, 0.18663844421692194] ***
*** starting iteration: 4; err: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172, 0.18663844421692194] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172, 0.18663844421692194, 0.18546320961788296] ***
*** starting iteration: 5; err: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172, 0.18663844421692194, 0.18546320961788296] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172, 0.18663844421692194, 0.18546320961788296, 0.18518031243607402] ***
*** finished computation of 7 references, err: [Inf, 0.2228593156635761, 0.19840731899626554, 0.1890347516015172, 0.18663844421692194, 0.18546320961788296, 0.18518031243607402] ***
*** center 1: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 18, 0]]
** centroid: 2, normalized-entropy: 0.7897492536625221, [(1, 58), (2, 18)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [67, 9, 0]]
** centroid: 3, normalized-entropy: 0.524805134842907, [(1, 67), (2, 9)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 68, 15]]
** centroid: 4, normalized-entropy: 0.6816559115981193, [(2, 68), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [45, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [48, 30, 0]]
** centroid: 6, normalized-entropy: 0.961236604722876, [(1, 48), (2, 30)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 64, 1]]
** centroid: 7, normalized-entropy: 0.11467550533614682, [(2, 64), (3, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.20863257775269448] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20863257775269448, 0.19415053513087333] ***
*** starting iteration: 2; err: [Inf, 0.20863257775269448, 0.19415053513087333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.20863257775269448, 0.19415053513087333, 0.1941311022937298] ***
*** finished computation of 7 references, err: [Inf, 0.20863257775269448, 0.19415053513087333, 0.1941311022937298] ***
*** center 1: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 63, 15]]
** centroid: 2, normalized-entropy: 0.7062740891876008, [(2, 63), (3, 15)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [30, 48, 0]]
** centroid: 3, normalized-entropy: 0.961236604722876, [(1, 30), (2, 48)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [54, 16, 0]]
** centroid: 4, normalized-entropy: 0.775512658133148, [(1, 54), (2, 16)]
*** center 5: selecting labels [1] (freq >= 1) [from [77, 0, 0]]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [12, 51, 0]]
** centroid: 7, normalized-entropy: 0.7024665512903904, [(1, 12), (2, 51)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.22753310575708746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22753310575708746, 0.21194535994529723] ***
*** starting iteration: 2; err: [Inf, 0.22753310575708746, 0.21194535994529723] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22753310575708746, 0.21194535994529723, 0.21016960166813806] ***
*** starting iteration: 3; err: [Inf, 0.22753310575708746, 0.21194535994529723, 0.21016960166813806] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.22753310575708746, 0.21194535994529723, 0.21016960166813806, 0.20927540092542768] ***
*** finished computation of 7 references, err: [Inf, 0.22753310575708746, 0.21194535994529723, 0.21016960166813806, 0.20927540092542768] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [41, 58, 0]]
** centroid: 1, normalized-entropy: 0.9786239947589973, [(1, 41), (2, 58)]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 67, 18]]
** centroid: 2, normalized-entropy: 0.7448423974714387, [(2, 67), (3, 18)]
*** center 3: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [34, 41, 0]]
** centroid: 4, normalized-entropy: 0.9937071066045081, [(1, 34), (2, 41)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [58, 17, 0]]
** centroid: 5, normalized-entropy: 0.7721551435804817, [(1, 58), (2, 17)]
*** center 6: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24050674480572343] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862] ***
*** starting iteration: 2; err: [Inf, 0.24050674480572343, 0.20835341498965862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333] ***
*** starting iteration: 3; err: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492] ***
*** starting iteration: 4; err: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938] ***
*** starting iteration: 5; err: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938, 0.19211011450737714] ***
*** starting iteration: 6; err: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938, 0.19211011450737714] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938, 0.19211011450737714, 0.18936555632017552] ***
*** starting iteration: 7; err: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938, 0.19211011450737714, 0.18936555632017552] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938, 0.19211011450737714, 0.18936555632017552, 0.18844203288853167] ***
*** finished computation of 7 references, err: [Inf, 0.24050674480572343, 0.20835341498965862, 0.20257860416453333, 0.1965506245214492, 0.19428197355940938, 0.19211011450737714, 0.18936555632017552, 0.18844203288853167] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [44, 11, 0]]
** centroid: 1, normalized-entropy: 0.7219280948873623, [(1, 44), (2, 11)]
*** center 2: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 30, 0]]
** centroid: 3, normalized-entropy: 0.9108783787500366, [(1, 62), (2, 30)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 7, 0]]
** centroid: 4, normalized-entropy: 0.54991090463341, [(1, 48), (2, 7)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [1, 73, 0]]
** centroid: 5, normalized-entropy: 0.10327508457163559, [(1, 1), (2, 73)]
*** center 6: selecting labels [1] (freq >= 1) [from [79, 0, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 64, 19]]
** centroid: 7, normalized-entropy: 0.776116265618875, [(2, 64), (3, 19)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2638347766753286] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2638347766753286, 0.19578514940477906] ***
*** starting iteration: 2; err: [Inf, 0.2638347766753286, 0.19578514940477906] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2638347766753286, 0.19578514940477906, 0.19037607630714773] ***
*** starting iteration: 3; err: [Inf, 0.2638347766753286, 0.19578514940477906, 0.19037607630714773] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2638347766753286, 0.19578514940477906, 0.19037607630714773, 0.18843187307287007] ***
*** starting iteration: 4; err: [Inf, 0.2638347766753286, 0.19578514940477906, 0.19037607630714773, 0.18843187307287007] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2638347766753286, 0.19578514940477906, 0.19037607630714773, 0.18843187307287007, 0.18748714114376344] ***
*** finished computation of 7 references, err: [Inf, 0.2638347766753286, 0.19578514940477906, 0.19037607630714773, 0.18843187307287007, 0.18748714114376344] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [54, 3, 0]]
** centroid: 1, normalized-entropy: 0.2974722489192896, [(1, 54), (2, 3)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 13, 0]]
** centroid: 2, normalized-entropy: 0.7039260680195971, [(1, 55), (2, 13)]
*** center 3: selecting labels [1] (freq >= 1) [from [67, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [35, 34, 0]]
** centroid: 5, normalized-entropy: 0.9998484829291058, [(1, 35), (2, 34)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 36, 0]]
** centroid: 6, normalized-entropy: 0.9943290455933883, [(1, 43), (2, 36)]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 84, 15]]
** centroid: 7, normalized-entropy: 0.6136190195993708, [(2, 84), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.21555501129850746] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737] ***
*** starting iteration: 2; err: [Inf, 0.21555501129850746, 0.204692073459737] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093] ***
*** starting iteration: 3; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156] ***
*** starting iteration: 4; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542] ***
*** starting iteration: 5; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094] ***
*** starting iteration: 6; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623] ***
*** starting iteration: 7; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623, 0.1904061609506607] ***
*** starting iteration: 8; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623, 0.1904061609506607] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623, 0.1904061609506607, 0.1888671483679209] ***
*** starting iteration: 9; err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623, 0.1904061609506607, 0.1888671483679209] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623, 0.1904061609506607, 0.1888671483679209, 0.18809084166400133] ***
*** finished computation of 7 references, err: [Inf, 0.21555501129850746, 0.204692073459737, 0.2027083281055093, 0.2014821054302156, 0.1997894979007542, 0.19755345777003094, 0.19345123724080623, 0.1904061609506607, 0.1888671483679209, 0.18809084166400133] ***
*** center 1: selecting labels [1] (freq >= 1) [from [73, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 61, 19]]
** centroid: 2, normalized-entropy: 0.79085809055281, [(2, 61), (3, 19)]
*** center 3: selecting labels [1] (freq >= 1) [from [57, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [5, 55, 0]]
** centroid: 4, normalized-entropy: 0.4138168503036336, [(1, 5), (2, 55)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [38, 45, 0]]
** centroid: 5, normalized-entropy: 0.9948631079048572, [(1, 38), (2, 45)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [52, 33, 0]]
** centroid: 6, normalized-entropy: 0.9636512739945752, [(1, 52), (2, 33)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [61, 1, 0]]
** centroid: 7, normalized-entropy: 0.11911602665564841, [(1, 61), (2, 1)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2649867411032319] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2649867411032319, 0.21071472462639212] ***
*** starting iteration: 2; err: [Inf, 0.2649867411032319, 0.21071472462639212] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211] ***
*** starting iteration: 3; err: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211, 0.18043188781477512] ***
*** starting iteration: 4; err: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211, 0.18043188781477512] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211, 0.18043188781477512, 0.1782588809132576] ***
*** starting iteration: 5; err: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211, 0.18043188781477512, 0.1782588809132576] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211, 0.18043188781477512, 0.1782588809132576, 0.177600279154256] ***
*** finished computation of 7 references, err: [Inf, 0.2649867411032319, 0.21071472462639212, 0.1879165932033211, 0.18043188781477512, 0.1782588809132576, 0.177600279154256] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 72, 12]]
** centroid: 1, normalized-entropy: 0.5916727785823274, [(2, 72), (3, 12)]
*** center 2: selecting labels [1] (freq >= 1) [from [66, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [55, 15, 0]]
** centroid: 3, normalized-entropy: 0.7495952572594798, [(1, 55), (2, 15)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 68, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [67, 11, 0]]
** centroid: 5, normalized-entropy: 0.5869185834047994, [(1, 67), (2, 11)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [59, 19, 0]]
** centroid: 6, normalized-entropy: 0.8009591077369054, [(1, 59), (2, 19)]
*** center 7: selecting labels [1] (freq >= 1) [from [56, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2827082439213991] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522] ***
*** starting iteration: 2; err: [Inf, 0.2827082439213991, 0.20545785010233522] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067] ***
*** starting iteration: 3; err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011] ***
*** starting iteration: 4; err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875] ***
*** starting iteration: 5; err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947] ***
*** starting iteration: 6; err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947, 0.18941478291153907] ***
*** starting iteration: 7; err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947, 0.18941478291153907] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947, 0.18941478291153907, 0.18772075824718923] ***
*** starting iteration: 8; err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947, 0.18941478291153907, 0.18772075824718923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947, 0.18941478291153907, 0.18772075824718923, 0.18698943213373423] ***
*** finished computation of 7 references, err: [Inf, 0.2827082439213991, 0.20545785010233522, 0.19682454198040067, 0.1948334782226011, 0.19353279811143875, 0.19135997617756947, 0.18941478291153907, 0.18772075824718923, 0.18698943213373423] ***
*** center 1: selecting labels [2, 3] (freq >= 1) [from [0, 60, 17]]
** centroid: 1, normalized-entropy: 0.7615877869576693, [(2, 60), (3, 17)]
*** center 2: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [43, 34, 0]]
** centroid: 3, normalized-entropy: 0.9901226308935799, [(1, 43), (2, 34)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [51, 24, 0]]
** centroid: 5, normalized-entropy: 0.9043814577244941, [(1, 51), (2, 24)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [59, 7, 0]]
** centroid: 6, normalized-entropy: 0.48791799258948565, [(1, 59), (2, 7)]
*** center 7: selecting labels [1] (freq >= 1) [from [72, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2558248597700149] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2558248597700149, 0.19681330611230805] ***
*** starting iteration: 2; err: [Inf, 0.2558248597700149, 0.19681330611230805] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2558248597700149, 0.19681330611230805, 0.19010974669829012] ***
*** starting iteration: 3; err: [Inf, 0.2558248597700149, 0.19681330611230805, 0.19010974669829012] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2558248597700149, 0.19681330611230805, 0.19010974669829012, 0.1880483911037445] ***
*** starting iteration: 4; err: [Inf, 0.2558248597700149, 0.19681330611230805, 0.19010974669829012, 0.1880483911037445] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2558248597700149, 0.19681330611230805, 0.19010974669829012, 0.1880483911037445, 0.18717588416859507] ***
*** finished computation of 7 references, err: [Inf, 0.2558248597700149, 0.19681330611230805, 0.19010974669829012, 0.1880483911037445, 0.18717588416859507] ***
*** center 1: selecting labels [1] (freq >= 1) [from [62, 0, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [58, 31, 0]]
** centroid: 2, normalized-entropy: 0.9325538428833382, [(1, 58), (2, 31)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [49, 37, 0]]
** centroid: 3, normalized-entropy: 0.985909442028652, [(1, 49), (2, 37)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 68, 15]]
** centroid: 4, normalized-entropy: 0.6816559115981193, [(2, 68), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [58, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [26, 46, 0]]
** centroid: 6, normalized-entropy: 0.943601631299382, [(1, 26), (2, 46)]
*** center 7: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23313869778998197] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23313869778998197, 0.20191503214277326] ***
*** starting iteration: 2; err: [Inf, 0.23313869778998197, 0.20191503214277326] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934] ***
*** starting iteration: 3; err: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934, 0.18977826581150292] ***
*** starting iteration: 4; err: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934, 0.18977826581150292] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934, 0.18977826581150292, 0.18842957845330238] ***
*** starting iteration: 5; err: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934, 0.18977826581150292, 0.18842957845330238] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934, 0.18977826581150292, 0.18842957845330238, 0.18799656747095286] ***
*** finished computation of 7 references, err: [Inf, 0.23313869778998197, 0.20191503214277326, 0.19450792387872934, 0.18977826581150292, 0.18842957845330238, 0.18799656747095286] ***
*** center 1: selecting labels [1] (freq >= 1) [from [75, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [69, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [47, 28, 0]]
** centroid: 3, normalized-entropy: 0.9531971725430559, [(1, 47), (2, 28)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [48, 15, 0]]
** centroid: 4, normalized-entropy: 0.7918583525674836, [(1, 48), (2, 15)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [54, 26, 0]]
** centroid: 5, normalized-entropy: 0.9097361225311661, [(1, 54), (2, 26)]
*** center 6: selecting labels [2] (freq >= 1) [from [0, 82, 0]]
*** center 7: selecting labels [2, 3] (freq >= 1) [from [0, 41, 15]]
** centroid: 7, normalized-entropy: 0.8383729377099398, [(2, 41), (3, 15)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.23039779992029072] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23039779992029072, 0.19876862949877977] ***
*** starting iteration: 2; err: [Inf, 0.23039779992029072, 0.19876862949877977] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237] ***
*** starting iteration: 3; err: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662] ***
*** starting iteration: 4; err: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662, 0.18755820055864753] ***
*** starting iteration: 5; err: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662, 0.18755820055864753] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662, 0.18755820055864753, 0.18631647714762947] ***
*** starting iteration: 6; err: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662, 0.18755820055864753, 0.18631647714762947] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662, 0.18755820055864753, 0.18631647714762947, 0.18563889165595174] ***
*** finished computation of 7 references, err: [Inf, 0.23039779992029072, 0.19876862949877977, 0.1935578531306237, 0.18970559422578662, 0.18755820055864753, 0.18631647714762947, 0.18563889165595174] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [46, 7, 0]]
** centroid: 1, normalized-entropy: 0.5631028237513912, [(1, 46), (2, 7)]
*** center 2: selecting labels [1] (freq >= 1) [from [50, 0, 0]]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [62, 12, 0]]
** centroid: 3, normalized-entropy: 0.6394571324851642, [(1, 62), (2, 12)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 86, 18]]
** centroid: 4, normalized-entropy: 0.6646953053493416, [(2, 86), (3, 18)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [9, 64, 0]]
** centroid: 5, normalized-entropy: 0.5387379148665815, [(1, 9), (2, 64)]
*** center 6: selecting labels [1] (freq >= 1) [from [70, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [57, 19, 0]]
** centroid: 7, normalized-entropy: 0.8112781244591328, [(1, 57), (2, 19)]
finished with 12 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.25554046867229047] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818] ***
*** starting iteration: 2; err: [Inf, 0.25554046867229047, 0.21485730730462818] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346] ***
*** starting iteration: 3; err: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488] ***
*** starting iteration: 4; err: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055] ***
*** starting iteration: 5; err: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055, 0.18603207096923144] ***
*** starting iteration: 6; err: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055, 0.18603207096923144] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055, 0.18603207096923144, 0.18398914588056506] ***
*** starting iteration: 7; err: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055, 0.18603207096923144, 0.18398914588056506] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055, 0.18603207096923144, 0.18398914588056506, 0.1829911640007049] ***
*** finished computation of 7 references, err: [Inf, 0.25554046867229047, 0.21485730730462818, 0.20475529398210346, 0.19619682135805488, 0.19003611793369055, 0.18603207096923144, 0.18398914588056506, 0.1829911640007049] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [57, 14, 0]]
** centroid: 1, normalized-entropy: 0.7162583911075451, [(1, 57), (2, 14)]
*** center 2: selecting labels [1] (freq >= 1) [from [61, 0, 0]]
*** center 3: selecting labels [1] (freq >= 1) [from [81, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [56, 15, 0]]
** centroid: 4, normalized-entropy: 0.743898745288434, [(1, 56), (2, 15)]
*** center 5: selecting labels [2] (freq >= 1) [from [0, 67, 0]]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 55, 16]]
** centroid: 6, normalized-entropy: 0.7698205808588191, [(2, 55), (3, 16)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [41, 37, 0]]
** centroid: 7, normalized-entropy: 0.9981021327390103, [(1, 41), (2, 37)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24327818414662034] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24327818414662034, 0.19956770538724958] ***
*** starting iteration: 2; err: [Inf, 0.24327818414662034, 0.19956770538724958] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233] ***
*** starting iteration: 3; err: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642] ***
*** starting iteration: 4; err: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642, 0.1866052297130227] ***
*** starting iteration: 5; err: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642, 0.1866052297130227] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642, 0.1866052297130227, 0.18551117383223026] ***
*** starting iteration: 6; err: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642, 0.1866052297130227, 0.18551117383223026] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642, 0.1866052297130227, 0.18551117383223026, 0.1851130914874375] ***
*** finished computation of 7 references, err: [Inf, 0.24327818414662034, 0.19956770538724958, 0.19210475843027233, 0.18829321767296642, 0.1866052297130227, 0.18551117383223026, 0.1851130914874375] ***
*** center 1: selecting labels [1] (freq >= 1) [from [40, 0, 0]]
*** center 2: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 63, 17]]
** centroid: 3, normalized-entropy: 0.7462343013654809, [(2, 63), (3, 17)]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [44, 46, 0]]
** centroid: 4, normalized-entropy: 0.9996437496778561, [(1, 44), (2, 46)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [49, 38, 0]]
** centroid: 5, normalized-entropy: 0.9884374283487116, [(1, 49), (2, 38)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [53, 28, 0]]
** centroid: 6, normalized-entropy: 0.9301497323974339, [(1, 53), (2, 28)]
*** center 7: selecting labels [1] (freq >= 1) [from [59, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.3094274291708134] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887] ***
*** starting iteration: 2; err: [Inf, 0.3094274291708134, 0.2254084209743887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656] ***
*** starting iteration: 3; err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113] ***
*** starting iteration: 4; err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887] ***
*** starting iteration: 5; err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127] ***
*** starting iteration: 6; err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127, 0.19148598138988018] ***
*** starting iteration: 7; err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127, 0.19148598138988018] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127, 0.19148598138988018, 0.1883284265110269] ***
*** starting iteration: 8; err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127, 0.19148598138988018, 0.1883284265110269] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127, 0.19148598138988018, 0.1883284265110269, 0.18749031368177385] ***
*** finished computation of 7 references, err: [Inf, 0.3094274291708134, 0.2254084209743887, 0.21110400726273656, 0.20546633273363113, 0.20053321470785887, 0.19577312956564127, 0.19148598138988018, 0.1883284265110269, 0.18749031368177385] ***
*** center 1: selecting labels [1] (freq >= 1) [from [47, 0, 0]]
*** center 2: selecting labels [2, 3] (freq >= 1) [from [0, 71, 17]]
** centroid: 2, normalized-entropy: 0.7080803256135676, [(2, 71), (3, 17)]
*** center 3: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 4: selecting labels [1, 2] (freq >= 1) [from [53, 50, 0]]
** centroid: 4, normalized-entropy: 0.9993879681484049, [(1, 53), (2, 50)]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [33, 39, 0]]
** centroid: 5, normalized-entropy: 0.9949848281859699, [(1, 33), (2, 39)]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [43, 24, 0]]
** centroid: 6, normalized-entropy: 0.9411864371816836, [(1, 43), (2, 24)]
*** center 7: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2932912706406787] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2932912706406787, 0.2152053098399192] ***
*** starting iteration: 2; err: [Inf, 0.2932912706406787, 0.2152053098399192] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832] ***
*** starting iteration: 3; err: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832, 0.19197398124448956] ***
*** starting iteration: 4; err: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832, 0.19197398124448956] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832, 0.19197398124448956, 0.19008021682407708] ***
*** starting iteration: 5; err: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832, 0.19197398124448956, 0.19008021682407708] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832, 0.19197398124448956, 0.19008021682407708, 0.18919043412059547] ***
*** finished computation of 7 references, err: [Inf, 0.2932912706406787, 0.2152053098399192, 0.19741062349639832, 0.19197398124448956, 0.19008021682407708, 0.18919043412059547] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [59, 27, 0]]
** centroid: 1, normalized-entropy: 0.8976844934141643, [(1, 59), (2, 27)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [35, 49, 0]]
** centroid: 2, normalized-entropy: 0.9798687566511527, [(1, 35), (2, 49)]
*** center 3: selecting labels [1] (freq >= 1) [from [64, 0, 0]]
*** center 4: selecting labels [1] (freq >= 1) [from [60, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 68, 18]]
** centroid: 5, normalized-entropy: 0.7401470427139037, [(2, 68), (3, 18)]
*** center 6: selecting labels [1] (freq >= 1) [from [44, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [35, 41, 0]]
** centroid: 7, normalized-entropy: 0.9954993847275952, [(1, 35), (2, 41)]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.29212441413104534] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29212441413104534, 0.20860998359695077] ***
*** starting iteration: 2; err: [Inf, 0.29212441413104534, 0.20860998359695077] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535] ***
*** starting iteration: 3; err: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535, 0.1853518055928871] ***
*** starting iteration: 4; err: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535, 0.1853518055928871] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535, 0.1853518055928871, 0.18392871266417204] ***
*** starting iteration: 5; err: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535, 0.1853518055928871, 0.18392871266417204] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535, 0.1853518055928871, 0.18392871266417204, 0.18349947937345132] ***
*** finished computation of 7 references, err: [Inf, 0.29212441413104534, 0.20860998359695077, 0.18992139698937535, 0.1853518055928871, 0.18392871266417204, 0.18349947937345132] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 63, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [63, 27, 0]]
** centroid: 2, normalized-entropy: 0.8812908992306927, [(1, 63), (2, 27)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [56, 28, 0]]
** centroid: 3, normalized-entropy: 0.9182958340544894, [(1, 56), (2, 28)]
*** center 4: selecting labels [2, 3] (freq >= 1) [from [0, 57, 15]]
** centroid: 4, normalized-entropy: 0.7382848661434506, [(2, 57), (3, 15)]
*** center 5: selecting labels [1] (freq >= 1) [from [55, 0, 0]]
*** center 6: selecting labels [1, 2] (freq >= 1) [from [51, 9, 0]]
** centroid: 6, normalized-entropy: 0.6098403047164005, [(1, 51), (2, 9)]
*** center 7: selecting labels [1] (freq >= 1) [from [76, 0, 0]]
finished with 11 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.24245252891257404] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24245252891257404, 0.20827530557848514] ***
*** starting iteration: 2; err: [Inf, 0.24245252891257404, 0.20827530557848514] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516] ***
*** starting iteration: 3; err: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516, 0.19011907138675452] ***
*** starting iteration: 4; err: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516, 0.19011907138675452] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516, 0.19011907138675452, 0.18881486983411014] ***
*** starting iteration: 5; err: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516, 0.19011907138675452, 0.18881486983411014] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516, 0.19011907138675452, 0.18881486983411014, 0.18830417563021182] ***
*** finished computation of 7 references, err: [Inf, 0.24245252891257404, 0.20827530557848514, 0.1944526205379516, 0.19011907138675452, 0.18881486983411014, 0.18830417563021182] ***
*** center 1: selecting labels [2] (freq >= 1) [from [0, 57, 0]]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [55, 17, 0]]
** centroid: 2, normalized-entropy: 0.7885131605379784, [(1, 55), (2, 17)]
*** center 3: selecting labels [2, 3] (freq >= 1) [from [0, 26, 20]]
** centroid: 3, normalized-entropy: 0.9876925088958032, [(2, 26), (3, 20)]
*** center 4: selecting labels [2] (freq >= 1) [from [0, 58, 0]]
*** center 5: selecting labels [1, 2] (freq >= 1) [from [92, 3, 0]]
** centroid: 5, normalized-entropy: 0.2022494245476988, [(1, 92), (2, 3)]
*** center 6: selecting labels [1] (freq >= 1) [from [96, 0, 0]]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [74, 2, 0]]
** centroid: 7, normalized-entropy: 0.17556502585750275, [(1, 74), (2, 2)]
finished with 9 centroids; started with 7
*** starting iteration: 1; err: [Inf, 0.2612242976054549] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786] ***
*** starting iteration: 2; err: [Inf, 0.2612242976054549, 0.21433939830213786] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375] ***
*** starting iteration: 3; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767] ***
*** starting iteration: 4; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725] ***
*** starting iteration: 5; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913] ***
*** starting iteration: 6; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862] ***
*** starting iteration: 7; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355] ***
*** starting iteration: 8; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355, 0.19237341541796923] ***
*** starting iteration: 9; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355, 0.19237341541796923] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355, 0.19237341541796923, 0.19122003040835261] ***
*** starting iteration: 10; err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355, 0.19237341541796923, 0.19122003040835261] ***
*** computing centroids ***
*** computing 7 nearest references ***
*** new score with 7 references: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355, 0.19237341541796923, 0.19122003040835261, 0.1903150654938072] ***
*** finished computation of 7 references, err: [Inf, 0.2612242976054549, 0.21433939830213786, 0.2081878756750375, 0.20353414064645767, 0.1998856021994725, 0.19625771019700913, 0.19450992819666862, 0.1933956022672355, 0.19237341541796923, 0.19122003040835261, 0.1903150654938072] ***
*** center 1: selecting labels [1, 2] (freq >= 1) [from [49, 9, 0]]
** centroid: 1, normalized-entropy: 0.6226343162547099, [(1, 49), (2, 9)]
*** center 2: selecting labels [1, 2] (freq >= 1) [from [62, 17, 0]]
** centroid: 2, normalized-entropy: 0.751286576718343, [(1, 62), (2, 17)]
*** center 3: selecting labels [1, 2] (freq >= 1) [from [84, 3, 0]]
** centroid: 3, normalized-entropy: 0.21639693245126485, [(1, 84), (2, 3)]
*** center 4: selecting labels [1] (freq >= 1) [from [63, 0, 0]]
*** center 5: selecting labels [2, 3] (freq >= 1) [from [0, 58, 15]]
** centroid: 5, normalized-entropy: 0.7327525499549903, [(2, 58), (3, 15)]
*** center 6: selecting labels [2, 3] (freq >= 1) [from [0, 76, 1]]
** centroid: 6, normalized-entropy: 0.1000009430103234, [(2, 76), (3, 1)]
*** center 7: selecting labels [1, 2] (freq >= 1) [from [47, 16, 0]]
** centroid: 7, normalized-entropy: 0.8175072881213616, [(1, 47), (2, 16)]
finished with 11 centroids; started with 7
[ Info: ("class distribution: ", Dict(2 => 364,3 => 31,1 => 605), Dict(2 => 379,3 => 28,1 => 593))
[ Info: ===== scores for single classifier: {"micro_f1":0.901,"precision":0.901,"recall":0.901,"macro_recall":0.9157853052543526,"macro_f1":0.8424188925950723,"accuracy":0.901,"class_f1":{"2":0.8537666174298375,"3":0.7368421052631579,"1":0.9366479550922213},"class_precision":{"2":0.9697986577181208,"3":0.5833333333333334,"1":0.8929663608562691},"class_recall":{"2":0.762532981530343,"3":1.0,"1":0.984822934232715}}
[ Info: ===== scores for 1: {"micro_f1":0.978,"precision":0.978,"recall":0.978,"macro_recall":0.9705777628897848,"macro_f1":0.9523507270351589,"accuracy":0.978,"class_f1":{"2":0.9704301075268817,"3":0.8999999999999999,"1":0.9866220735785953},"class_precision":{"2":0.989041095890411,"3":0.84375,"1":0.978441127694859},"class_recall":{"2":0.9525065963060686,"3":0.9642857142857143,"1":0.9949409780775716}}
[ Info: ===== scores for 5: {"micro_f1":0.972,"precision":0.972,"recall":0.972,"macro_recall":0.9662528998215348,"macro_f1":0.9185733657512559,"accuracy":0.972,"class_f1":{"2":0.9623655913978495,"3":0.8059701492537313,"1":0.9873843566021867},"class_precision":{"2":0.9808219178082191,"3":0.6923076923076923,"1":0.9848993288590604},"class_recall":{"2":0.9445910290237467,"3":0.9642857142857143,"1":0.9898819561551433}}
[ Info: ===== scores for 7: {"micro_f1":0.971,"precision":0.971,"recall":0.971,"macro_recall":0.9663255741323523,"macro_f1":0.9142399093132804,"accuracy":0.971,"class_f1":{"2":0.9612817089452604,"3":0.7941176470588236,"1":0.9873203719357567},"class_precision":{"2":0.972972972972973,"3":0.675,"1":0.9898305084745763},"class_recall":{"2":0.9498680738786279,"3":0.9642857142857143,"1":0.984822934232715}}
[ Info: ===== scores for 9: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.980868858464555,"macro_f1":0.9227119211012953,"accuracy":0.975,"class_f1":{"2":0.9667110519307589,"3":0.8115942028985507,"1":0.9898305084745763},"class_precision":{"2":0.9758064516129032,"3":0.6829268292682927,"1":0.9948892674616695},"class_recall":{"2":0.9577836411609498,"3":1.0,"1":0.984822934232715}}
[ Info: ===== scores for 11: {"micro_f1":0.975,"precision":0.975,"recall":0.975,"macro_recall":0.980551464535678,"macro_f1":0.9226880271728121,"accuracy":0.975,"class_f1":{"2":0.9666221628838451,"3":0.8115942028985507,"1":0.9898477157360406},"class_precision":{"2":0.9783783783783784,"3":0.6829268292682927,"1":0.9932088285229203},"class_recall":{"2":0.9551451187335093,"3":1.0,"1":0.9865092748735245}}
(score = 0.978, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.978, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.977, k = 1, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.976, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.976, k = 3, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.974, k = 5, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.971, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l1_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l1_distance)}(SimilaritySearch.l1_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.most_frequent_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
(score = 0.972, k = 7, kernel = KCenters.direct_kernel, dist = SimilaritySearch.l2_distance, summary = KCenters.mean_label, kernel_fun = KCenters.var"#fun#72"{typeof(l2_distance)}(SimilaritySearch.l2_distance))
[ Info: config: {"score":0.978,"k":1,"kernel":"direct_kernel","dist":"l1_distance","summary":"most_frequent_label","kernel_fun":"fun"}
[ Info: ===== scores optimized! B: {"micro_f1":0.978,"precision":0.978,"recall":0.978,"macro_recall":0.9705777628897848,"macro_f1":0.9523507270351589,"accuracy":0.978,"class_f1":{"2":0.9704301075268817,"3":0.8999999999999999,"1":0.9866220735785953},"class_precision":{"2":0.989041095890411,"3":0.84375,"1":0.978441127694859},"class_recall":{"2":0.9525065963060686,"3":0.9642857142857143,"1":0.9949409780775716}}
Test Summary: | Pass  Total
AKNC          |    8      8
[177, 1, 2, 1, 4, 4, 2, 2, 1, 6, 1, 4, 16, 6, 15, 5, 7, 1, 3, 1, 10, 2, 6, 4, 2, 1, 2, 6, 43, 6, 11, 11, 9, 10, 3, 3, 3, 24, 4, 20, 7, 6, 3, 2, 11, 24, 8, 68, 30, 11, 4, 3, 8, 34, 6, 2, 183, 5, 33, 3, 13, 9, 9, 94, 3, 7, 13, 19, 16, 1, 1, 17, 6, 17, 3, 33, 25, 16, 2, 6, 9, 35, 12, 9, 47, 6, 8, 13, 6, 14, 37, 47, 163, 22, 8, 62, 31, 2, 9, 19, 8, 9, 8, 14, 3, 13, 2, 47, 6, 13, 12, 13, 116, 22, 8, 28, 55, 5, 43, 9, 21, 4, 29, 16, 6, 4, 137, 34, 16, 7, 10, 52, 15, 27, 1651, 22, 2, 37, 6, 4, 11, 5, 5, 36, 121, 61, 10, 24, 51, 2, 28, 26, 20, 24, 2, 44, 3, 30, 3, 28, 91, 19, 5, 17, 16, 106, 1, 8, 4, 47, 6, 55, 16, 27, 9, 22, 53, 11, 6, 15, 31, 19, 17, 4, 120, 9, 45, 15, 12, 41, 15, 20, 50, 8, 70, 16, 1, 98, 25, 8, 22, 11, 67, 57, 10, 30, 5, 11, 4, 58, 30, 9, 25, 9, 30, 23, 24, 24, 14, 29, 4, 11, 59, 100, 45, 30, 4, 13, 74, 18, 39, 12, 29, 39, 13, 55, 55, 132, 6, 22, 4, 136, 18, 23, 93, 38, 29, 26, 39, 51, 91, 41, 69, 6, 35, 51, 1, 23, 319, 9, 13, 33, 35, 164, 2, 2, 6, 479, 55, 25, 36, 16, 28, 47, 98, 8, 17, 8, 19, 26, 48, 56, 46, 34, 9, 10, 1, 56, 8, 9, 25, 34, 20, 21, 15, 5, 20, 4, 4, 119]
┌ Info: before optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.652, speedup = 0.2784491727930668, eval_ratio = 0.09789199999999999)
KCenters.DeloneInvIndex> optimizing for recall=0.8
KCenters.DeloneInvIndex> optimize! step region_expansion=2, performance {"precision":0.44208829365079366,"recall":0.4348958333333333,"f1":null,"seconds":0.00029217079281806946,"exhaustive_search_seconds":0.0003553275018930435,"evaluations":710.8125,"distances_sum":1751.9693103929694}
KCenters.DeloneInvIndex> optimize! step region_expansion=3, performance {"precision":0.6024305555555555,"recall":0.6024305555555555,"f1":null,"seconds":0.00039450637996196747,"exhaustive_search_seconds":0.0003553275018930435,"evaluations":882.1484375,"distances_sum":1678.1473210409413}
KCenters.DeloneInvIndex> optimize! step region_expansion=4, performance {"precision":0.6892361111111108,"recall":0.6892361111111108,"f1":0.6892361111111108,"seconds":0.0004895348101854324,"exhaustive_search_seconds":0.0003553275018930435,"evaluations":1041.4921875,"distances_sum":1632.283667454009}
KCenters.DeloneInvIndex> optimize! step region_expansion=5, performance {"precision":0.7543402777777773,"recall":0.7543402777777773,"f1":0.7543402777777773,"seconds":0.0006050914525985718,"exhaustive_search_seconds":0.0003553275018930435,"evaluations":1183.6328125,"distances_sum":1606.9354357123664}
KCenters.DeloneInvIndex> reached performance {"precision":0.8046874999999993,"recall":0.8046874999999993,"f1":0.8046874999999993,"seconds":0.0007943641394376755,"exhaustive_search_seconds":0.0003553275018930435,"evaluations":1324.0234375,"distances_sum":1588.3216529849842}
┌ Info: after optimization
└   (recall = p.recall, speedup = p.exhaustive_search_seconds / p.seconds, eval_ratio = p.evaluations / length(X)) = (recall = 0.7739999999999996, speedup = 0.6253273763672778, eval_ratio = 0.12331199999999999)
Test Summary:                 | Pass  Total
Testing Delone Inverted Index |    1      1
    Testing KCenters tests passed 
