Julia Version 1.6.0-DEV.733
Commit 5da96913c2 (2020-08-26 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed MuladdMacro ───────────────── v0.2.2
  Installed UnPack ────────────────────── v1.0.2
  Installed RecursiveArrayTools ───────── v2.6.0
  Installed SciPyDiffEq ───────────────── v0.2.0
  Installed OrderedCollections ────────── v1.3.0
  Installed Conda ─────────────────────── v1.4.1
  Installed JSON ──────────────────────── v0.21.0
  Installed StaticArrays ──────────────── v0.12.4
  Installed RecursiveFactorization ────── v0.1.4
  Installed Reexport ──────────────────── v0.2.0
  Installed DocStringExtensions ───────── v0.8.2
  Installed CpuId ─────────────────────── v0.2.2
  Installed SIMDPirates ───────────────── v0.8.24
  Installed Roots ─────────────────────── v1.0.5
  Installed PyCall ────────────────────── v1.91.4
  Installed ChainRulesCore ────────────── v0.9.6
  Installed ArrayInterface ────────────── v2.12.0
  Installed MacroTools ────────────────── v0.5.5
  Installed TreeViews ─────────────────── v0.3.0
  Installed VersionParsing ────────────── v1.2.0
  Installed IteratorInterfaceExtensions ─ v1.0.0
  Installed LabelledArrays ────────────── v1.3.0
  Installed FunctionWrappers ──────────── v1.1.1
  Installed Parameters ────────────────── v0.12.1
  Installed DiffEqBase ────────────────── v6.45.1
  Installed SLEEFPirates ──────────────── v0.5.5
  Installed RecipesBase ───────────────── v1.0.2
  Installed Requires ──────────────────── v1.0.1
  Installed VectorizationBase ─────────── v0.12.32
  Installed Parsers ───────────────────── v1.0.10
  Installed ZygoteRules ───────────────── v0.2.0
  Installed TableTraits ───────────────── v1.0.0
  Installed OffsetArrays ──────────────── v1.1.2
  Installed IterativeSolvers ──────────── v0.8.4
  Installed LoopVectorization ─────────── v0.8.24
Updating `~/.julia/environments/v1.6/Project.toml`
  [505e40e9] + SciPyDiffEq v0.2.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [4fba245c] + ArrayInterface v2.12.0
  [d360d2e6] + ChainRulesCore v0.9.6
  [8f4d0f93] + Conda v1.4.1
  [adafc99b] + CpuId v0.2.2
  [2b5f629d] + DiffEqBase v6.45.1
  [ffbed154] + DocStringExtensions v0.8.2
  [069b7b12] + FunctionWrappers v1.1.1
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [2ee39098] + LabelledArrays v1.3.0
  [bdcacae8] + LoopVectorization v0.8.24
  [1914dd2f] + MacroTools v0.5.5
  [46d2c3a1] + MuladdMacro v0.2.2
  [6fe1bfb0] + OffsetArrays v1.1.2
  [bac558e1] + OrderedCollections v1.3.0
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [438e738f] + PyCall v1.91.4
  [3cdcf5f2] + RecipesBase v1.0.2
  [731186ca] + RecursiveArrayTools v2.6.0
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [505e40e9] + SciPyDiffEq v0.2.0
  [90137ffa] + StaticArrays v0.12.4
  [3783bdb8] + TableTraits v1.0.0
  [a2a6695c] + TreeViews v0.3.0
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [81def892] + VersionParsing v1.2.0
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda ───────→ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall ──────→ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing SciPyDiffEq
Status `/tmp/jl_qN2t98/Project.toml`
  [2b5f629d] DiffEqBase v6.45.1
  [438e738f] PyCall v1.91.4
  [189a3867] Reexport v0.2.0
  [505e40e9] SciPyDiffEq v0.2.0
  [8dfed614] Test
Status `/tmp/jl_qN2t98/Manifest.toml`
  [4fba245c] ArrayInterface v2.12.0
  [d360d2e6] ChainRulesCore v0.9.6
  [8f4d0f93] Conda v1.4.1
  [adafc99b] CpuId v0.2.2
  [2b5f629d] DiffEqBase v6.45.1
  [ffbed154] DocStringExtensions v0.8.2
  [069b7b12] FunctionWrappers v1.1.1
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [2ee39098] LabelledArrays v1.3.0
  [bdcacae8] LoopVectorization v0.8.24
  [1914dd2f] MacroTools v0.5.5
  [46d2c3a1] MuladdMacro v0.2.2
  [6fe1bfb0] OffsetArrays v1.1.2
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [438e738f] PyCall v1.91.4
  [3cdcf5f2] RecipesBase v1.0.2
  [731186ca] RecursiveArrayTools v2.6.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [505e40e9] SciPyDiffEq v0.2.0
  [90137ffa] StaticArrays v0.12.4
  [3783bdb8] TableTraits v1.0.0
  [a2a6695c] TreeViews v0.3.0
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.32
  [81def892] VersionParsing v1.2.0
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
ERROR: LoadError: InitError: PyError (PyImport_ImportModule

The Python package scipy.integrate could not be found by pyimport. Usually this means
that you did not install scipy.integrate in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the scipy.integrate module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the scipy.integrate module, you can use `pyimport_conda("scipy.integrate", PKG)`,
where PKG is the Anaconda package the contains the module scipy.integrate,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'scipy'",)

Stacktrace:
  [1] pyimport(name::String)
    @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
  [2] pyimport_conda(modulename::String, condapkg::String, channel::String)
    @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
  [3] __init__()
    @ SciPyDiffEq ~/.julia/packages/SciPyDiffEq/VrG9g/src/SciPyDiffEq.jl:18
  [4] _include_from_serialized(path::String, depmods::Vector{Any})
    @ Base ./loading.jl:698
  [5] _require_from_serialized(path::String)
    @ Base ./loading.jl:750
  [6] _require(pkg::Base.PkgId)
    @ Base ./loading.jl:1041
  [7] require(uuidkey::Base.PkgId)
    @ Base ./loading.jl:929
  [8] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:924
  [9] include(fname::String)
    @ Base.MainInclude ./client.jl:443
 [10] top-level scope
    @ none:6
during initialization of module SciPyDiffEq
in expression starting at /home/pkgeval/.julia/packages/SciPyDiffEq/VrG9g/test/runtests.jl:1
ERROR: Package SciPyDiffEq errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1580
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
