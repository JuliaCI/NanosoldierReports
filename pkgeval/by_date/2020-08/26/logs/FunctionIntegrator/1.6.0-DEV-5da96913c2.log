Julia Version 1.6.0-DEV.733
Commit 5da96913c2 (2020-08-26 17:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_alJveC/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_alJveC/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.011673 seconds (1.46 M allocations: 77.958 MiB, 5.12% gc time)
Running: chebyshev_quadrature with k=1
  1.681783 seconds (2.24 M allocations: 128.550 MiB, 3.64% gc time)
Running: chebyshev_quadrature with k=2
  0.278446 seconds (424.53 k allocations: 24.352 MiB)
Running: chebyshev_quadrature with k=3
  0.357910 seconds (544.36 k allocations: 29.837 MiB, 3.88% gc time)
Running: chebyshev_quadrature with k=4
  0.300466 seconds (487.28 k allocations: 26.406 MiB)
Running: jacobi_quadrature with α=β=1
 47.258516 seconds (39.35 M allocations: 3.137 GiB, 9.85% gc time)
Running: laguerre_quadrature with k=1
  3.303431 seconds (3.33 M allocations: 185.503 MiB, 1.90% gc time)
Running: legendre_quadrature
  0.212028 seconds (214.69 k allocations: 12.293 MiB)
Running: lobatto_quadrature
  0.420336 seconds (343.19 k allocations: 20.598 MiB, 4.86% gc time)
Running: radau_quadrature
  0.304152 seconds (325.62 k allocations: 19.607 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 87.501743 seconds (100.02 M allocations: 1.491 GiB, 0.28% gc time)
Running: rectangle_rule_midpoint.
  0.160655 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 88.822704 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rombergs_method
  0.746629 seconds (751.54 k allocations: 43.260 MiB, 4.73% gc time)
Running: simpsons_rule
  0.091841 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.091806 seconds (113.01 k allocations: 5.970 MiB)
Running: trapezoidal_rule
  0.363738 seconds (1.52 M allocations: 25.792 MiB, 4.40% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.116719 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.473096 seconds (256.55 k allocations: 12.930 MiB, 6.06% gc time)
Running: chebyshev_quadrature with k=2
  0.147665 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.148776 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.152767 seconds (65.31 k allocations: 2.150 MiB)
Running: jacobi_quadrature with α=β=1
  2.511801 seconds (513.71 k allocations: 162.392 MiB, 4.00% gc time)
Running: legendre_quadrature
  0.148907 seconds (43.20 k allocations: 2.481 MiB)
Running: lobatto_quadrature
  0.032630 seconds (16.78 k allocations: 1.036 MiB, 37.18% gc time)
Running: radau_quadrature
  0.020224 seconds (16.76 k allocations: 1.036 MiB)
Running: rectangle_rule_left
 31.513132 seconds (471.41 M allocations: 7.025 GiB, 2.15% gc time)
Running: rectangle_rule_midpoint
  0.000058 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.890171 seconds (476.96 M allocations: 7.107 GiB, 2.18% gc time)
Running: rombergs_method
  0.491499 seconds (338.95 k allocations: 19.215 MiB, 1.35% gc time)
Running: simpsons_rule
  0.000031 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.081051 seconds (19.88 k allocations: 1.193 MiB)
Running: trapezoidal_rule
  0.053165 seconds (18.33 k allocations: 1.098 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.025397 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.102288 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.114390 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.166263 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.141885 seconds (3.08 k allocations: 133.609 KiB)
Running: jacobi_quadrature with α=β=1
  0.360113 seconds (378.56 k allocations: 19.779 MiB, 8.29% gc time)
Running: legendre_quadrature
  0.073980 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000093 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000042 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.001265 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000402 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000568 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.089782 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000145 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027080 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024544 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.062640 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.182665 seconds (239.83 k allocations: 13.464 MiB)
Running: chebyshev_quadrature with k=2
  0.239804 seconds (295.00 k allocations: 16.537 MiB)
Running: chebyshev_quadrature with k=3
  0.219366 seconds (274.98 k allocations: 14.938 MiB)
Running: chebyshev_quadrature with k=4
  0.206638 seconds (275.02 k allocations: 14.870 MiB)
Running: jacobi_quadrature with α=β=1
  2.442851 seconds (465.17 k allocations: 164.155 MiB, 25.79% gc time)
Running: legendre_quadrature
  0.164623 seconds (192.58 k allocations: 11.142 MiB)
Running: lobatto_quadrature
  0.207492 seconds (203.78 k allocations: 11.793 MiB, 8.70% gc time)
Running: radau_quadrature
  0.195880 seconds (203.78 k allocations: 11.788 MiB)
Running: rectangle_rule_left
  1.301429 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.058260 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.374064 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.136715 seconds (139.53 k allocations: 8.040 MiB)
Running: simpsons_rule
  0.032128 seconds (28.99 k allocations: 1.801 MiB)
Running: simpsons38_rule
  0.035653 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.027770 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039258 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.237815 seconds (246.92 k allocations: 13.558 MiB, 7.56% gc time)
Running: chebyshev_quadrature with k=2
  0.219362 seconds (302.62 k allocations: 16.550 MiB)
Running: chebyshev_quadrature with k=3
  0.218314 seconds (282.39 k allocations: 14.972 MiB)
Running: chebyshev_quadrature with k=4
  0.224379 seconds (282.42 k allocations: 14.973 MiB, 7.75% gc time)
Running: hermite_quadrature with k=2
 17.139149 seconds (22.06 M allocations: 1.144 GiB, 7.56% gc time)
Running: jacobi_quadrature with α=β=1
  0.660039 seconds (475.17 k allocations: 50.409 MiB, 14.07% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.340470 seconds (287.89 k allocations: 15.869 MiB, 10.34% gc time)
Running: legendre_quadrature
  0.176823 seconds (199.64 k allocations: 11.430 MiB)
Running: lobatto_quadrature
  0.281797 seconds (225.18 k allocations: 37.594 MiB, 10.27% gc time)
Running: radau_quadrature
  0.214354 seconds (221.78 k allocations: 30.264 MiB)
Running: rectangle_rule_left
  0.030816 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.030702 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.029290 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.245371 seconds (142.35 k allocations: 8.101 MiB, 10.02% gc time)
Running: simpsons_rule
  0.039723 seconds (41.23 k allocations: 2.155 MiB)
Running: simpsons38_rule
  0.079781 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.047668 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.046668 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.212152 seconds (242.05 k allocations: 13.325 MiB)
Running: chebyshev_quadrature with k=2
  0.275456 seconds (297.34 k allocations: 16.285 MiB)
Running: chebyshev_quadrature with k=3
  0.333401 seconds (277.25 k allocations: 14.742 MiB, 9.19% gc time)
Running: chebyshev_quadrature with k=4
  0.254215 seconds (277.29 k allocations: 14.743 MiB)
Running: hermite_quadrature with k=2
  0.154067 seconds (177.31 k allocations: 10.132 MiB)
Running: jacobi_quadrature with α=β=1
 11.348572 seconds (467.77 k allocations: 1.176 GiB, 15.10% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.241345 seconds (282.75 k allocations: 15.664 MiB)
Running: legendre_quadrature
  0.200435 seconds (194.81 k allocations: 11.205 MiB)
Running: lobatto_quadrature
  0.221579 seconds (215.54 k allocations: 23.306 MiB)
Running: radau_quadrature
  0.241198 seconds (214.69 k allocations: 21.241 MiB, 7.59% gc time)
Running: rectangle_rule_left
  0.026511 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.025785 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.023476 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.112571 seconds (137.82 k allocations: 7.901 MiB)
Running: simpsons_rule
  0.032348 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.040896 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.034827 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034165 seconds (32.45 k allocations: 1.952 MiB)
Running: chebyshev_quadrature with k=1
  0.233289 seconds (240.38 k allocations: 13.548 MiB)
Running: chebyshev_quadrature with k=2
  0.252015 seconds (295.58 k allocations: 16.625 MiB, 8.18% gc time)
Running: chebyshev_quadrature with k=3
  0.210936 seconds (275.58 k allocations: 14.972 MiB)
Running: chebyshev_quadrature with k=4
  0.216403 seconds (275.61 k allocations: 14.781 MiB)
Running: jacobi_quadrature with α=β=1
  3.281543 seconds (465.82 k allocations: 195.209 MiB, 6.06% gc time)
Running: legendre_quadrature
  0.222391 seconds (193.14 k allocations: 11.111 MiB, 8.93% gc time)
Running: lobatto_quadrature
  0.209021 seconds (204.34 k allocations: 11.876 MiB)
Running: radau_quadrature
  0.308076 seconds (204.34 k allocations: 11.816 MiB)
Running: rectangle_rule_left
  0.400947 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.025392 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.138238 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.141666 seconds (150.88 k allocations: 8.790 MiB)
Running: simpsons_rule
  0.029626 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.034800 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.028592 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035864 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.269014 seconds (240.95 k allocations: 13.492 MiB, 8.29% gc time)
Running: chebyshev_quadrature with k=2
  0.273027 seconds (296.18 k allocations: 16.529 MiB)
Running: chebyshev_quadrature with k=3
  0.235928 seconds (276.12 k allocations: 14.907 MiB)
Running: chebyshev_quadrature with k=4
  0.222483 seconds (276.15 k allocations: 14.962 MiB)
Running: jacobi_quadrature with α=β=1
  1.073916 seconds (466.48 k allocations: 149.902 MiB, 8.02% gc time)
Running: legendre_quadrature
  0.154020 seconds (193.71 k allocations: 11.126 MiB)
Running: lobatto_quadrature
  0.183229 seconds (204.92 k allocations: 11.831 MiB)
Running: radau_quadrature
  0.173709 seconds (204.91 k allocations: 11.848 MiB)
Running: rectangle_rule_left
  1.302273 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.027343 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.487223 seconds (18.60 k allocations: 1.123 MiB, 1.44% gc time)
Running: rombergs_method
  0.187685 seconds (140.83 k allocations: 8.100 MiB)
Running: simpsons_rule
  0.044310 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.034656 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.023554 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.151672 seconds (152.73 k allocations: 9.080 MiB)
Running: chebyshev_quadrature with k=1
  0.141251 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.180441 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.183901 seconds (93.21 k allocations: 2.682 MiB)
Running: chebyshev_quadrature with k=4
  0.253949 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  1.721924 seconds (487.39 k allocations: 168.265 MiB, 7.23% gc time)
Running: legendre_quadrature
  0.108864 seconds (19.25 k allocations: 1.111 MiB)
Running: lobatto_quadrature
  0.000100 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000096 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 51.315815 seconds (590.00 M allocations: 8.792 GiB, 4.00% gc time)
Running: rectangle_rule_midpoint
  0.000038 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 52.538789 seconds (592.75 M allocations: 8.833 GiB, 4.02% gc time)
Running: rombergs_method
  0.160000 seconds (21.09 k allocations: 1.189 MiB, 23.02% gc time)
Running: simpsons_rule
  0.000073 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.028158 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.021531 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.661726 seconds (629.34 M allocations: 9.388 GiB, 5.94% gc time)
Running: chebyshev_quadrature with k=1
  0.514028 seconds (438.62 k allocations: 24.271 MiB)
Running: chebyshev_quadrature with k=2
 15.317632 seconds (495.96 k allocations: 4.042 GiB, 3.93% gc time)
Running: chebyshev_quadrature with k=3
  6.978537 seconds (290.07 k allocations: 1.643 GiB, 6.12% gc time)
Running: chebyshev_quadrature with k=4
  9.331837 seconds (290.10 k allocations: 2.262 GiB, 2.71% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 62.729529 seconds (504.68 k allocations: 13.255 GiB, 2.68% gc time)
Running: legendre_quadrature.
  7.551208 seconds (232.46 k allocations: 1.976 GiB, 3.03% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 65.929286 seconds (8.24 M allocations: 13.384 GiB, 4.37% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 65.770720 seconds (7.24 M allocations: 13.369 GiB, 2.25% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.542872 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.423198 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.036193 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.161711 seconds (455.79 k allocations: 153.652 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.561063 seconds (600.04 M allocations: 8.943 GiB, 9.35% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.368736 seconds (600.05 M allocations: 8.944 GiB, 7.99% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.431523 seconds (600.04 M allocations: 8.943 GiB, 8.75% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.070135 seconds (182.49 k allocations: 4.515 MiB)
Running: chebyshev_quadrature with k=1
  0.249058 seconds (257.54 k allocations: 13.991 MiB)
Running: chebyshev_quadrature with k=2
  0.244783 seconds (283.70 k allocations: 15.181 MiB)
Running: chebyshev_quadrature with k=3
  0.281368 seconds (260.23 k allocations: 13.433 MiB)
Running: chebyshev_quadrature with k=4
  0.246450 seconds (260.26 k allocations: 13.427 MiB)
Running: jacobi_quadrature with α=β=1
  0.373421 seconds (404.81 k allocations: 35.823 MiB)
Running: laguerre_quadrature with k=2
  0.194356 seconds (187.56 k allocations: 10.850 MiB)
Running: legendre_quadrature
  0.144950 seconds (151.36 k allocations: 8.429 MiB)
Running: lobatto_quadrature
  0.036339 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.032477 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.056405 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.050014 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.052867 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.258041 seconds (178.32 k allocations: 10.177 MiB)
Running: simpsons_rule
  0.001892 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.057069 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.206984 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002230 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.131321 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.135462 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.128402 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.126965 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  8.485642 seconds (401.65 k allocations: 906.506 MiB, 3.77% gc time)
Running: legendre_quadrature
  0.088786 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000192 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000159 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.494211 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000484 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.546859 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.090314 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000154 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000969 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.001070 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.114875 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.128339 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.123647 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.118463 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.100810 seconds (387.93 k allocations: 253.730 MiB)
Running: legendre_quadrature
  0.072544 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000121 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000066 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.622726 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001121 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.839451 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.101144 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000057 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001983 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
