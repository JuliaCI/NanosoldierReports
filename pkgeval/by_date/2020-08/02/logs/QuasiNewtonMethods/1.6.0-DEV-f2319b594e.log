Julia Version 1.6.0-DEV.568
Commit f2319b594e (2020-08-01 04:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.29
  Installed VectorizedRNG ─────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.1
  Installed SIMDPirates ───────── v0.8.21
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.21
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.21
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_0gDAnB/Project.toml`
  [bdcacae8] LoopVectorization v0.8.21
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_0gDAnB/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.21
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-1.722885167865229e-10, -3.2791902526696504e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.369172104811696e-13, -1.991740106177531e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [9.348077867343818e-13, 1.8558488079634117e-12, -4.576339307504895e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.6922019341336636e-12, 3.860023412016744e-12, -2.5258684033246936e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-3.485856048257574e-11, 8.897327319346005e-13, -7.11002368092295e-11, 5.906164446400908e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.3392622000860683e-11, 1.4811440962603228e-10, -5.996747542980074e-11, 2.9116864475042803e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-7.763234499691407e-12, -3.577216300953978e-11, -1.7705392707512146e-11, -8.429557052380687e-11, 2.336020266113792e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.609423705417612e-11, 4.3727244047886416e-12, 3.005018456292419e-11, 8.172129639660852e-12, -3.884004229348648e-12]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-6.816103237383686e-11, 1.8572032800534544e-11, 8.82738326879462e-11, -1.2479828281897198e-10, 3.0306868126217523e-11, 1.6491319421163553e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.467670429633472e-11, -2.570197388251927e-10, -6.370137750622007e-11, 3.168709739043152e-11, -5.376231682063803e-10, -1.5129886232756462e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.1046719095020308e-12, 1.7641443861293737e-12, 6.219691428555052e-12, 4.75264272381537e-12, 3.6259883984257613e-12, 1.148725559119157e-11, -2.5586199825511358e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.385580621933059e-11, 1.3741452420390488e-11, 1.5040635403806846e-11, -5.896960697526765e-11, 1.3972156764907595e-11, 2.1374013670083514e-11, 2.461586490198897e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.216560185923754e-11, -5.49653655923521e-11, -1.9691936969934432e-10, -1.2710954511163663e-10, 2.3733459642016896e-11, -1.0134026950936459e-10, -3.9121450523538215e-10, -2.465445625432494e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5080514614851381e-10, -1.383474446114974e-10, -1.0431100427865658e-10, -1.399358406928286e-11, 2.949358535175861e-10, -2.867831527808562e-10, -1.9368207038183982e-10, -2.110023267221095e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-1.962485729478658e-11, 2.4559021483128163e-11, 2.4977575563411847e-11, -1.2639300717154356e-10, -3.663092051908734e-11, 3.2619462686511724e-11, 3.8829606197055e-11, -2.593474324186218e-10, 6.531664098474721e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0334977318393612e-10, -2.2909507624291336e-10, 2.8954616482224083e-12, -1.069555555233137e-10, -2.0679657986022448e-10, -4.642308759628122e-10, -1.324773624133968e-11, -1.968009089026168e-10, 2.6165958288970614e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [3.477196308665498e-11, 9.25646226335175e-11, -4.334799186267446e-11, 1.0441647546599597e-10, 1.3083312211392695e-11, 7.85480569476249e-11, 1.8085821729130203e-10, -8.952694141584061e-11, 2.0967272362781841e-10, 3.551092753184548e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.677269930894681e-11, -3.156552796923506e-11, 1.1879230932265727e-10, -1.8626766795648564e-11, -1.830757767606883e-11, -1.4662315805935577e-10, -7.671796531383279e-11, 2.4751356519914225e-10, -6.111700034949763e-11, -2.3261614856551205e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5060253044651972e-10, 4.280820142810171e-11, 3.358802125319471e-11, -1.7035750587979237e-10, -8.481770841228808e-11, -2.9704549930897883e-10, 8.618084024192285e-11, 6.43771702613094e-11, -3.664034631256641e-10, -1.7834167476138418e-10, 3.3375968655491306e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.1283198254072886e-10, 2.7363333821028846e-10, -1.1403711308588527e-10, -2.1423451901370072e-10, -1.0098033520478111e-11, -6.110837391659629e-10, 5.395111024597554e-10, -2.3681756555760103e-10, -4.109025342202699e-10, -1.3234080498136791e-11, -8.838774157027274e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [1.2213829947427257e-10, -2.9203306439740118e-12, 8.079581448328099e-11, -8.23220380752332e-11, 2.03297156886606e-10, -1.4231837930367419e-11, 2.5760571453758985e-10, -8.264500195309665e-12, 1.5622036997342548e-10, -1.6355916621080269e-10, 4.0957637281735515e-10, -3.001465742613618e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.946953874844894e-12, -1.0969658514881075e-10, -1.4432577355449894e-10, -4.2232439767531105e-11, -1.733595489383788e-10, 5.293099292202896e-12, -6.713629652210784e-12, -2.1759138935095734e-10, -3.0130187234078676e-10, -8.553602270922056e-11, -3.5962000044520437e-10, 1.2851275599246037e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [6.035127952941366e-11, 3.355538069627073e-12, -1.3430700995797906e-11, 1.6751489084754212e-11, -1.0025424934667626e-11, 3.165712136876664e-11, 1.1965894941567967e-10, 8.169909193611602e-12, -2.7839397453988113e-11, 3.133848736069922e-11, -1.911204527971222e-11, 6.46787068347976e-11, -1.2919665337562947e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.9863446704989656e-12, -1.9995782807313844e-11, -1.2265188864546417e-11, 1.0757394974802992e-11, -6.284162079595035e-11, 2.192512837950744e-11, -1.1833978241782006e-11, -4.105338291537919e-11, -2.3499424628425913e-11, 2.57196486330713e-11, -1.3163792278447772e-10, 4.112066243067147e-11, 4.629630012686903e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [2.8534730134310848e-11, -9.053646721213227e-12, 1.0902612146423962e-11, 4.332756375902136e-12, -8.7762019873594e-12, 1.3100409645971922e-11, -2.3193336140536758e-11, 5.750400156045998e-11, -1.7841728094936116e-11, 2.0713875059641396e-11, 1.1908474206734354e-11, -1.7295609389123e-11, 2.376854268959505e-11, -4.621691918060833e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0638712133470563e-10, -3.538103143796434e-11, -4.8802961671867706e-11, 5.378342216033616e-11, 2.7435387295327018e-11, -5.518918655411653e-11, -5.5733417880787783e-11, -1.999131971075485e-10, -8.435341314338984e-11, -9.145795232257115e-11, 1.0687317697488652e-10, 4.429989708398807e-11, -1.1914691455672255e-10, -1.1205725236607122e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.1497669483162554e-10, 3.3511859953705425e-11, 2.506408414149064e-10, -2.9844371418619176e-10, 1.5335643865910242e-10, -2.1516899373352771e-10, -1.8956614056264698e-11, 2.214546324097455e-10, 7.937761559162482e-11, 5.165075034341271e-10, -6.089114767959813e-10, 3.09934966580272e-10, -4.3681824823949e-10, -4.289157917725106e-11, 5.0503379256383596e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.905997664726101e-11, -2.816580302322791e-11, 3.7453817824939506e-11, 1.9187762489991655e-11, -1.1841527758349457e-11, -6.447287148603209e-12, -1.1705081348623025e-11, -5.878542097548234e-11, -5.777611722379561e-11, 7.171330196342751e-11, 3.906297507683121e-11, -2.5140445281124357e-11, -1.3184675573540972e-11, -2.195332804433292e-11, -1.2003509297642267e-11]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.7108536809473662e-12, -3.7776781702802964e-11, 1.4592105301858282e-11, 3.6772029865517197e-10, -4.162299394039337e-10, -2.2807211674802375e-10, 1.9532819806045154e-10, 4.260656272236929e-10, -1.4660272995570267e-11, -7.362255249887539e-11, 1.0542011708025711e-11, 7.359510778570666e-10, -8.51712922411707e-10, -4.670742681511797e-10, 4.0680525614789076e-10, 8.560576691962751e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.183231456205249e-12, 2.7954971670851592e-11, 1.8400725387834882e-10, -9.116141175269377e-11, -5.248856904671584e-11, -8.926670513886847e-11, -1.6568524330295986e-11, 8.373968185537706e-12, 1.4226397837546756e-12, 5.3363091723213074e-11, 3.5821590138596093e-10, -1.824896900259887e-10, -1.1546885669844187e-10, -1.815246841729845e-10, -2.8235747073779294e-11, 2.4007462684494385e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [2.903965956591037e-11, 7.263478707386639e-11, -1.0073830658541283e-11, 7.428946346976772e-12, -1.0650735848827253e-10, -3.2173264052914874e-11, 1.287703277341734e-11, 9.088063634976606e-12, 5.094369370794993e-11, 1.361692980594853e-10, -2.6502577910036962e-11, 1.6172174710504805e-11, -2.095533746526712e-10, -7.493772269384635e-11, 2.527866804769019e-11, 1.3177015034671058e-11, -5.822009541134321e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.889966126990885e-11, 6.31459329270001e-11, -1.3037704249541093e-10, 1.4247047985804784e-11, 1.1062994964561312e-10, 6.834754984197389e-12, 3.4710456731090744e-11, -3.1202374017880175e-11, -7.111822242222843e-11, 1.2253131842498988e-10, -2.548418143177855e-10, 2.6620483595252153e-11, 2.2534218935277295e-10, 1.1482370609883219e-11, 6.78872513759643e-11, -6.197820034969936e-11, 5.409228620578688e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [5.965894445125741e-11, -1.4887868715618424e-11, 1.943547545124602e-10, -9.302891790241574e-12, 7.23163751104039e-11, 2.0182522320055796e-11, 6.292699694654402e-11, -4.0343173246526476e-11, -1.2491507828116255e-10, 1.1235412600285599e-10, -3.457423236596924e-11, 3.7263703234202694e-10, -2.0595636307518816e-11, 1.5399415076444711e-10, 4.3262504689778325e-11, 1.1985368253419892e-10, -6.94561075320621e-11, -2.5705393369435114e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.566036603317116e-11, 8.954614827416663e-12, -9.776934817296024e-11, 2.0291546221073986e-11, -5.995193230745599e-11, -3.199995823877089e-11, -4.749156623518047e-11, 6.3364868907456184e-12, 2.3363533330211794e-11, -1.27237331781771e-10, 1.919242542669508e-11, -1.965577700602239e-10, 3.921218905134083e-11, -1.2317447062315523e-10, -7.917966282633415e-11, -9.635170439281637e-11, 1.432809426660242e-11, 4.477040960182421e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2081757816417849e-10, -8.860678857303128e-11, -1.128291904350931e-10, -2.150947198131803e-10, 5.307088102313173e-12, 1.6383050471802107e-10, -2.5337143494397196e-10, 3.720734831347272e-11, 6.70197231045222e-11, -2.4336854753670423e-10, -1.688860162829542e-10, -2.2347068640016232e-10, -4.341987880351894e-10, 7.607470209336498e-12, 3.177316187930046e-10, -5.028988336874818e-10, 7.645084565410798e-11, 1.3427481349026493e-10, 2.8711255595226248e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4367840250884001e-11, -4.021349919725026e-11, -1.8168133664175912e-11, -2.2570612046024507e-11, 4.533173836307469e-11, -1.1976586389295107e-10, 1.0496270519411155e-11, 1.3020695632803836e-10, 8.067368995057222e-11, -2.8415825248373494e-11, -8.413869601042734e-11, -4.068356762587655e-11, -4.615863247181551e-11, 9.92477211525511e-11, -2.418968358952611e-10, 1.6962209414828067e-11, 2.667828180591414e-10, 1.6142398528984359e-10, -8.038125720588596e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-7.108214017392811e-11, -1.9333423750822476e-11, 7.972245086307339e-11, 8.1565865173161e-12, -3.3216096539945283e-11, -2.1565971231041203e-11, -1.521249792801882e-11, 1.3109513474773848e-12, -7.721900896484613e-11, 2.8790081429974634e-11, -1.4773637868614742e-10, -3.926436953349821e-11, 1.5293455390974486e-10, 1.6124435120445924e-11, -6.655564988022888e-11, -4.008882115158485e-11, -2.9806934698228815e-11, 3.8118397327480125e-12, -1.5552892307368893e-10, 5.7869486980166585e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.78808145646326e-11, 7.086287112656464e-11, 1.709503649749422e-10, -1.757449741290884e-11, -1.024402784821632e-12, -2.597427828376908e-10, 4.246381024586299e-12, -3.7489455984029973e-11, 2.9603874907024874e-11, 1.3247580810116233e-10, 1.8976620275168443e-10, 1.4386625224460659e-10, 3.349724941870136e-10, -3.701627893093473e-11, -3.146483074090156e-12, -5.241223011154261e-10, 7.0532468754436195e-12, -7.516842703836346e-11, 5.2550186424582535e-11, 2.699025447583381e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [3.363020972813047e-11, -4.221722971209374e-11, 6.319789136455256e-11, 7.082601172214709e-11, 8.131939566169422e-12, 2.4916513297057463e-11, -5.221278964739895e-11, 8.428635567270248e-11, 1.4480638910185917e-11, 8.29603052920902e-12, 6.677014496858646e-11, -7.655809319828677e-11, 1.2830492224225054e-10, 1.3823808764357182e-10, 1.4175993712228774e-11, 4.666489417104458e-11, -1.0442602338400775e-10, 1.6790457912918555e-10, 3.177014207267348e-11, 1.439515173728978e-11, 1.780797731498751e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1727641080483409e-10, 5.423728133280292e-11, -4.0527581290916714e-11, -1.395028537132248e-11, -1.3885226302079445e-11, 1.4772849610267258e-11, 4.89608353859694e-12, 1.4987566743229763e-11, 4.1210368451061186e-11, 5.7728710700644115e-11, -2.3321589104341456e-10, 1.0755352164437681e-10, -7.781497668446491e-11, -2.6926905150048697e-11, -2.831279655168828e-11, 2.999511750090278e-11, 6.087574888624658e-12, 3.6311176287995295e-11, 8.106848525812893e-11, 1.1350076434268885e-10, -1.3324452652341279e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-8.437839316144391e-11, 1.7030665766526454e-10, 2.933824294615306e-10, -2.1690726992318332e-10, -4.3751890999033094e-11, 4.952682708392331e-11, -2.0317025839489133e-10, 1.6799428514957526e-10, 2.1683543849349007e-11, -9.509870668722442e-11, -3.680901139446746e-10, -1.7774326455111122e-10, 3.270850257308666e-10, 5.823570514706944e-10, -4.2068237782189044e-10, -7.525413625586452e-11, 1.0231748781563965e-10, -4.0246850296909997e-10, 3.3217273376351386e-10, 4.258349228791758e-11, -1.8291157477534625e-10, -7.473517360523374e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [8.559042363742719e-11, -9.155565194873816e-12, 3.338063159219473e-11, 4.835465361452407e-12, -8.312905919183322e-12, -8.206557655654478e-11, -1.568423169118205e-11, -5.538236536040131e-11, 1.1363376906103895e-10, -1.828370788103939e-11, -3.433464623725513e-11, 1.7701662358149406e-10, -2.187161562972051e-11, 6.553824150046239e-11, 3.700151296470722e-12, -1.4920176205635016e-11, -1.5970968991751988e-10, -3.531719361404839e-11, -1.0871437083892488e-10, 2.2869550697635077e-10, -2.7823743309340898e-11, -6.866729407306593e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [5.4569682106375694e-12, -1.0821887830303467e-10, -4.2078895923225446e-11, 1.1784528908265202e-10, -1.6207568620529855e-10, 5.679212655707033e-11, 2.3042678876095124e-11, 3.1862001925730965e-10, -1.4319145869023941e-10, 1.8986190397640712e-10, -9.455880523034921e-11, 9.9333874459262e-12, -2.2637725027863098e-10, -9.141032375481473e-11, 2.3859780817758747e-10, -3.309829077480231e-10, 9.749601126429752e-11, 3.590194808111846e-11, 6.292086851544809e-10, -2.8710700483713936e-10, 3.818247940046149e-10, -1.9090917735553603e-10, 5.256683976995191e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4632739464559563e-13, -4.828915045607118e-12, 1.800337656732154e-11, 4.9749093733453265e-12, 1.2390977133236447e-11, -1.5095258376618403e-11, 1.691469186937411e-11, 2.4908297646675237e-11, -1.5970558209232877e-11, -9.469203199330423e-12, -3.840117113185215e-11, 1.957989326228926e-12, -8.24529333698365e-12, 3.3582914227281435e-11, 6.591394097199554e-12, 2.46418441207652e-11, -3.031330741976035e-11, 3.890465727351966e-11, 4.7448045492615165e-11, -2.691957767808617e-11, -1.837541230287343e-11, -7.823863779066187e-11, -1.430955354209118e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [2.7986502004750946e-12, 1.6606716002343092e-12, -1.1626810625386952e-11, 3.269118309390251e-11, -3.5917935292673064e-11, 1.2916334668489071e-11, -3.208122656417345e-11, -1.9887758107017817e-11, 7.966183268592886e-11, 1.8828938408432805e-11, -5.5934257225942474e-11, -3.4305336349405025e-11, 6.16884321402722e-12, 3.2815972161870377e-12, -2.4666713116516803e-11, 6.54167831015684e-11, -7.011657920941161e-11, 2.6729951585480194e-11, -6.394795803998932e-11, -4.0890846264574066e-11, 1.5651901996704964e-10, 3.699107686827574e-11, -1.1059519966494236e-10, -6.680567210537447e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7222223647195278e-11, 1.3426593170606793e-11, -4.137923337310667e-11, 8.385514504993807e-12, -5.1480375518053734e-11, -7.114275835107264e-11, 2.7542412794900883e-12, -1.5419332477506487e-11, 6.688205544946868e-11, 3.551492433473413e-11, -7.455036588055464e-12, 5.965894445125741e-11, 3.63689078852758e-11, 2.6644242367979132e-11, -7.571288040963964e-11, 2.0049295557100777e-11, -1.0362088964654959e-10, -1.4013523674805128e-10, 2.5415225479719084e-12, -3.0804692130459443e-11, 1.2731704579493908e-10, 7.273537327989743e-11, -1.550692907414941e-11, 1.2289302908641275e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
