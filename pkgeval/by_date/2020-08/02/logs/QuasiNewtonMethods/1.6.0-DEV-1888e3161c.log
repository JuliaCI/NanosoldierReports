Julia Version 1.6.0-DEV.572
Commit 1888e3161c (2020-08-02 15:45 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed QuasiNewtonMethods ── v0.1.1
  Installed VectorizationBase ─── v0.12.29
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.21
  Installed VectorizedRNG ─────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.1
  Installed SLEEFPirates ──────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.21
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_vaYNT7/Project.toml`
  [bdcacae8] LoopVectorization v0.8.21
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_vaYNT7/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.21
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-9.507794551666393e-11, -2.0127621791488082e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.403677505455562e-12, -1.0212608536619427e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-6.533662499919046e-12, -1.0115575044267189e-11, 6.753708703399752e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.016162792273235e-10, 3.8245162592431825e-10, -1.0926004545552814e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [7.865508244719877e-11, -1.0943690398335093e-11, 1.5365198002825764e-10, -2.4573565404750752e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2532286319810737e-10, -3.9862557699166246e-11, 2.4487523120342303e-10, -8.362943670903178e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [4.618305737835726e-12, 8.454348332520567e-12, 1.0827339025354377e-11, 1.620903411492236e-11, 3.657740776930041e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1851376263981592e-10, -1.6225076837628194e-10, -4.2280567935648605e-10, -3.380864477264822e-10, 1.5471468550742884e-10]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [6.623812609518609e-12, -2.1107560144173476e-11, 3.643618740056809e-11, 1.3665735210111052e-11, -4.10450562426945e-11, 7.503131449482225e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7125745266355352e-11, 2.156053113822054e-13, 2.630340389941921e-12, -3.608646714781116e-11, 6.208367153703875e-13, 1.6988632722814145e-12]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.0731506794314782e-9, -8.602483170250252e-10, -8.435702136821988e-10, 2.1566195496092178e-9, -1.7208912073130023e-9, -1.6731065421993208e-9, -6.128053620102492e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.89315254981193e-11, -1.17589160630871e-10, -1.0696155072764668e-10, 1.0866241240137242e-10, -2.3383195379977906e-10, -2.1209267675459387e-10, -6.178169087434071e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.2758460954387374e-11, 1.01072483715825e-11, 5.453637541563694e-12, 7.212896946384717e-12, 2.5285551430442865e-11, 1.911648617181072e-11, 1.003619409800649e-11, 1.4552137272971777e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0705547559552997e-11, -6.151856801750455e-12, -1.895086310099714e-10, -2.7793101153861244e-11, -3.434896811427279e-11, -8.652967231626008e-12, -3.968561035350149e-10, -5.000078129313579e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-2.227640294449884e-11, -1.5677126263824448e-11, -1.1852741010898171e-12, 4.724887148199741e-12, -4.5964232420203643e-11, -3.3250180386801276e-11, -1.9201307210892082e-12, 1.0265566174894047e-11, 3.728795050506051e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.8499202997522843e-11, 4.054245827944669e-11, -1.0520473381347983e-11, -6.791267548322821e-11, 5.360378807495181e-11, 7.086375930498434e-11, -1.7437495891670096e-11, -1.388468229279738e-10, -2.1767809776918057e-11]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [4.6767922867729794e-11, 9.9787067497914e-11, -2.457659631360798e-10, -6.888234427293582e-11, 2.3304469465301736e-10, 8.105782711709253e-11, 1.8691204139997808e-10, -5.060520891220222e-10, -1.4164469597233165e-10, 4.676121712066106e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3870239118650716e-11, -2.321776104707851e-11, -1.4693357641704097e-11, 1.5900392114076567e-11, 3.22732951474336e-11, 4.0769609910285e-11, -4.50479653579805e-11, -2.862710068995966e-11, 3.283862071157273e-11, 6.217049097756444e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-8.328471245988567e-11, 2.39437358828809e-11, 2.4616086946593896e-10, 5.487632570577716e-11, -3.197264675236511e-11, -1.6359147370081928e-10, 4.611799830911423e-11, 5.028173433174743e-10, 1.2014833572493444e-10, -6.693445797623099e-11, -8.323342015614799e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [5.01672037245271e-11, -1.4394485603475005e-11, -1.245070713196128e-11, -2.8129831797230054e-11, 6.308686906209005e-11, 1.0022738194948033e-10, -3.373368251402553e-11, -2.4757640382233603e-11, -5.405487168985701e-11, 1.1481748884989429e-10, 2.7928770407470438e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9735879597249095e-11, -3.686084770748721e-11, -1.3871015447364243e-11, -4.735767333841068e-12, 7.724376693829527e-11, 4.729550084903167e-14, -4.0876746432161326e-11, -7.369527210698834e-11, -2.7783775280454392e-11, -7.902567489281864e-12, 1.5885981419216932e-10, 7.824851877558103e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.6116219470063697e-11, -7.052569639398598e-11, 1.5579093570750047e-11, 2.3663737636070437e-11, -1.4134959869238628e-10, 6.930700457985495e-11, 2.475886162756069e-11, -1.4932177716531214e-10, 2.89113177842637e-11, 4.912181772454005e-11, -2.872067028647507e-10, 1.3883028060490687e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [5.303535388634373e-12, -2.596589609993316e-12, 2.0404122835770977e-11, 1.4914292023604503e-11, -9.726663918740996e-13, 3.8551384307083936e-12, 1.085442846715523e-11, -6.412537167932442e-12, 3.6340708220450324e-11, 3.001199289087708e-11, -2.35800268200137e-12, 8.04667443787821e-12, -4.0778491694482e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.978440048044376e-11, 2.0294654845542937e-11, 4.873212944289662e-12, 3.759614841669645e-11, 9.54289980370504e-11, -1.5000511943696893e-10, -1.3135859067148203e-10, 3.461142483729418e-11, 3.33422178755427e-12, 8.328471245988567e-11, 1.8800916379291266e-10, -3.032378792511281e-10, -8.012590591022217e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [8.480394164678273e-11, 9.762324282291956e-11, 1.525446435834965e-11, -2.058164749740854e-11, -4.351696780702241e-11, 4.239542050754608e-11, 2.3616886224431255e-11, 1.7134405005947428e-10, 1.9545165486078986e-10, 3.2544411610047064e-11, -3.6669556280344295e-11, -8.234402049112077e-11, 8.7981177898655e-11, 5.226130639357507e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1409984068677659e-11, -5.097589017566406e-11, -1.2471135235614383e-11, 3.561151373787652e-11, -3.382905067184083e-11, -6.420974862919593e-12, -2.7753022102672276e-11, -2.1095902802414912e-11, -1.0658973703669972e-10, -2.4435231615882458e-11, 6.950373609981852e-11, -6.75315359188744e-11, -9.825029678722785e-12, -6.035627553302447e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [7.763123477388945e-12, 1.2561640616581826e-10, -7.881062469294875e-11, -2.2319812664761685e-11, -7.280409608512173e-11, 1.7854828726626693e-11, -3.35839134280036e-11, 1.5049517188003847e-11, 2.5288282579083443e-10, -1.577498132121491e-10, -4.3965941998180824e-11, -1.3847289981328004e-10, 2.958833178468012e-11, -5.500289113058443e-11, 4.761080418802521e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.035283384164813e-11, 2.7571722682750988e-11, 7.430278614606323e-11, 1.6727730312027234e-11, 2.6612045900265002e-12, -2.5202506748200904e-11, -9.01868579816778e-11, 1.2195000564929614e-10, 5.0702331222396424e-11, 1.5795853514077862e-10, 3.21127568980728e-11, 2.774003249328416e-12, -5.0256576678009424e-11, -1.6911205769076787e-10, -4.438893697056301e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [3.535904902207676e-11, 1.8789858557966e-11, 2.3920865288573623e-11, -3.68913788406644e-11, 4.019740096339319e-11, 4.171951673015428e-11, 4.41671144102429e-11, 2.9459990003033454e-11, 7.272205060360193e-11, 3.715561192052519e-11, 4.8858916912308814e-11, -7.798173218276361e-11, 8.166045617485906e-11, 8.022715825006799e-11, 8.646550142543674e-11, 6.083844539261918e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.884182195994072e-11, -5.308276040949522e-11, -2.266731247146936e-11, 5.3224535889739855e-11, 2.826650025156141e-11, -6.943245978163759e-11, 6.1517235749875e-11, -5.5173421387166854e-11, -1.567634910770721e-10, -1.1303569191767338e-10, -4.426048416661388e-11, 1.04217967589193e-10, 5.920175460971677e-11, -1.4415757476626823e-10, 1.1947243194754265e-10, -1.1116574327729722e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.4118772817539593e-10, 1.248467995651481e-11, -1.726339071694838e-10, -1.1524547982588729e-10, 5.160316618457728e-12, -1.247348890842659e-10, -5.691302984445201e-11, 6.245071126897983e-11, 2.8778912586346905e-10, 2.0800472455562158e-11, -3.4072245025384973e-10, -2.4473423287929563e-10, -2.0246027077064355e-12, -2.5592961083731325e-10, -1.1655287845968587e-10, 1.0620215817880307e-10, 4.864109115487736e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.1390001709041826e-10, -2.8703805998731013e-10, 3.9059755430059795e-10, 8.267764251002063e-11, -9.037259829369759e-11, -4.0688374891573176e-10, 1.4890422228575062e-10, -8.75212124995528e-11, 6.377582906225143e-10, -5.767564204006703e-10, 7.877845042969511e-10, 1.6489942744613018e-10, -1.8380408306484242e-10, -8.163985043552202e-10, 2.979925195489841e-10, -1.7270651575529428e-10, -3.407873983007903e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4582880175927357e-10, -7.780298627579896e-11, -2.2499169194389879e-10, 4.7489123744526296e-11, 8.729594824785636e-11, -2.494238149353123e-11, -1.8803736345773814e-11, -8.528922013084639e-11, -3.4157454642524954e-11, -4.851647972259343e-10, -1.6346979325732036e-10, -4.520933627460977e-10, 9.208100948399078e-11, 1.759543621915327e-10, -5.168587779991185e-11, -3.9767633630560795e-11, -1.7305878952100784e-10, -6.773726024533744e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4504842599526455e-12, 2.6295410293641908e-11, -1.9858004129957862e-11, -4.537048514663411e-11, 5.847078377030357e-11, 2.9831248582468106e-11, -1.945277272596968e-11, -1.0816125772805663e-11, 2.4351631822128184e-12, -5.884959186630567e-12, 5.2474691258908024e-11, -3.7820968579183045e-11, -8.652967231626008e-11, 1.1720180381757928e-10, 5.7731819325113065e-11, -4.0531134004595515e-11, -2.4130475395622852e-11, 7.848832694890007e-12]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.9542145679452005e-12, 2.0052182136964802e-11, -1.3177459123880908e-11, -2.1853407972116656e-11, 6.515232797710269e-12, -9.35918009759007e-14, -4.741385062345671e-11, -3.841260642900579e-12, 3.3902880502978405e-11, 6.956879516906156e-12, 4.0254466426858926e-11, -1.9856782884630775e-11, -4.124711683317628e-11, 1.4216183785720204e-11, -9.702239012199243e-13, -9.269118805832477e-11, -4.9964477000230545e-12, 6.949441022641167e-11, -1.605937605120289e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.392264412762415e-11, 1.2722867204217891e-10, 6.396594365298824e-11, -5.648925771595259e-11, 5.327072116756426e-12, -1.01072483715825e-11, -7.587741546188909e-11, -1.534572469097384e-11, -7.586720141006253e-11, -1.067838040214042e-10, 2.515474495368153e-10, 1.3013923272353622e-10, -1.1627843132799853e-10, 1.5387469076699745e-11, -1.5903056649335667e-11, -1.574829155970292e-10, -3.381517288403302e-11, -1.4872381104424903e-10, -1.2458811760041044e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.6440182548649318e-11, -3.0680791240911276e-11, 1.4854339980274744e-11, -3.1469382655302525e-11, 4.071587511589314e-11, -6.514899730802881e-12, -4.330680258846087e-11, 6.18702866717058e-11, -2.0297985514616812e-11, -5.111577827676683e-12, 3.6446623496999564e-11, -6.296652088622068e-11, 2.76685341304983e-11, -5.889011500670449e-11, 8.100475845651545e-11, -1.5804468844748953e-11, -9.091694064267131e-11, 1.2738499144404614e-10, -3.99752453361657e-11, -1.0847989173612405e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.946710122221702e-12, 5.553157933491093e-11, -5.409717118709523e-11, -1.457345355504458e-11, -7.607969809697579e-11, 4.0597480932547114e-10, -1.792532788869039e-10, 1.8917090116588042e-10, -3.103173273899529e-10, -2.5389834679145906e-10, -2.7675195468646052e-11, 1.0577227982366821e-10, -9.739786754892066e-11, -3.4719338515287745e-11, -1.4605139320167382e-10, 8.017970731799551e-10, -3.5006986198737877e-10, 3.882321131243316e-10, -6.314171407950653e-10, -4.921958396408854e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [3.012701199622825e-11, -3.8392733436865e-11, 4.508105000411433e-11, 6.185052470186747e-11, 1.0138778705481855e-11, 5.90361093344427e-11, -2.2978285940666865e-11, 7.565637005768622e-11, -7.951939107186945e-11, 8.104628079763643e-12, 6.38182839907131e-11, -7.57914841997831e-11, 8.787259808684666e-11, 1.280295869321435e-10, 1.926658832474004e-11, 1.19942278331564e-10, -4.242695084144543e-11, 1.5569256994751868e-10, -1.5770396100123207e-10, 1.9876766899074028e-11, -4.969358258222201e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [4.296452082996893e-11, -4.1446956977608806e-11, -2.931599407673957e-11, 2.777400531783769e-11, -1.0399570093966304e-11, -8.188238975748163e-11, 3.700595385680572e-11, -1.641164981691645e-11, -7.605915897102022e-12, 5.5082605143752517e-11, 8.869727174953823e-11, -8.419565045159061e-11, -5.4127924364877344e-11, 4.973177425426911e-11, -1.83432158351593e-11, -1.5751500104244087e-10, 7.600897689030717e-11, -3.64278607278834e-11, -1.3280931909775973e-11, 1.0685297091583834e-10, 7.638334409421077e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.1153966639199098e-11, 2.5216717602916106e-11, 3.29616334227012e-11, -2.9018343283837567e-11, 4.691158572711629e-11, 1.2811751659569381e-11, -1.7123746864911027e-11, -3.2621683132560975e-12, -3.905686885019577e-11, -3.589395447534116e-11, 3.165490092271739e-11, 2.1793900017996748e-11, 5.4368509694313616e-11, 6.264078145079566e-11, -5.571698658002333e-11, 9.202727468959893e-11, 2.7222890608413763e-11, -3.361222411513154e-11, -7.65920660228403e-12, -8.378675531162116e-11, -7.69548869072878e-11, 6.412204101025054e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5084911098028897e-10, 2.7891466913843033e-11, -1.0249212589741319e-10, -1.8096657505850544e-10, -1.2235634727630895e-10, 1.8025336778748624e-10, 1.314501840710136e-10, -1.196742704934195e-11, 6.161049448394351e-11, -2.148977662486118e-10, -1.7939993934845688e-10, 3.0269187156761745e-10, 4.466094161159617e-11, -2.0594981275934288e-10, -3.6144243154012656e-10, -2.5244051293782377e-10, 3.7102099170738256e-10, 2.6676993947205574e-10, -1.8807178037150152e-11, 1.1604073257842629e-10, -4.3391645832002723e-10, -3.604382348143531e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [7.933786960734324e-11, -2.9964741798949035e-10, -3.1850477810735356e-10, -6.68994859509553e-11, -1.4044632123955125e-10, -8.881173574337708e-11, 6.687850273578988e-11, 2.3115931391259892e-10, -2.2691837298083328e-10, -2.402343879381874e-10, -1.3843104440525167e-10, 1.3868994841459426e-10, -6.022630172353161e-10, -6.263161100861225e-10, -1.3164525025644025e-10, -3.0588231947348277e-10, -1.811405470064642e-10, 1.4410628246253054e-10, 4.484030924345461e-10, -4.3912840030913003e-10, -4.662582542280802e-10, -2.8940183582903956e-10, 2.2378987551974205e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.979127972617789e-11, 9.30684418420924e-11, -1.493805079633148e-11, -2.874700477661918e-12, 1.603295274321681e-11, 1.683431172239125e-11, 5.225131438635344e-11, -3.5821678956438063e-11, -1.9613199953028015e-12, -1.7148504838360168e-11, 4.001243780749064e-13, -3.7948533204712476e-11, 1.856952369649889e-10, -2.8843039068249254e-11, -6.707856492482733e-12, 3.3295144419298595e-11, 3.348876731479322e-11, 1.0703549158108672e-10, -7.25186577454906e-11, -6.795008999915808e-12, -3.850786356451863e-11, 4.4497738826976274e-13, -2.507738461332565e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-8.471545687172011e-11, 1.560209739182028e-10, 3.7012837239558394e-11, 6.313571887517355e-11, -1.1226275464792934e-10, -1.0908030034784133e-10, -8.451306321433094e-11, -4.03531652537481e-11, -2.216533623311534e-10, 1.0596901134363179e-10, -1.8259849188240196e-10, 2.5410784587620583e-11, -1.8770096588127672e-10, 3.1370750441794826e-10, 6.186184897671865e-11, 1.2469181243091043e-10, -2.2494883733514826e-10, -1.9955648244973645e-10, -1.8186308015089026e-10, -6.67567112699885e-11, -4.285408694570947e-10, 2.0247781229443262e-10, -3.6247371770770087e-10, 5.139244585450342e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2679337579868388e-9, 6.252427464659149e-10, 1.2110172864510105e-9, 3.5137168730159374e-9, 5.900140376269292e-10, 7.914469080105846e-10, 1.2276024641266758e-10, -5.605501618433095e-9, -3.5635083772689313e-9, 4.594369329424808e-11, 9.660856559179365e-10, -1.463494214704042e-9, 2.53814125272811e-9, 1.2406433658185279e-9, 2.4295978562349774e-9, 7.03307634353223e-9, 1.202236754593855e-9, 1.5791066232395679e-9, 2.45361064798999e-10, -1.1231237384556891e-8, -7.135145030368051e-9, 9.082823382300376e-11, 1.9378321169938317e-9, -2.9279678681604082e-9]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
