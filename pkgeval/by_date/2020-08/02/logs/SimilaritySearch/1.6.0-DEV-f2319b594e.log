Julia Version 1.6.0-DEV.568
Commit f2319b594e (2020-08-01 04:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_AgAzmY/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_AgAzmY/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(3, 0.020286202f0), Item(38, 0.028780937f0), Item(15, 0.043875337f0), Item(49, 0.096737504f0)])
Vsorted = Item[Item(3, 0.020286202f0), Item(38, 0.028780937f0), Item(15, 0.043875337f0), Item(49, 0.096737504f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004739975929260254, 0.005281138420104981, 301.0, 46.8037426173687))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004598784446716309, 0.005045000712076823, 301.0, 69.13677489757538))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004887628555297852, 0.004898866017659505, 301.0, 37.869385719299316))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0045541206995646155, 0.004639736811319987, 301.0, 8.008000348636415))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004375775655110677, 0.005577301979064942, 301.0, 42.24913093447685))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00018228689829508465, 0.0001468658447265625, 301.0, 174.83943853527308))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.23464584350586e-5, 0.011447866757710775, 300.0, 30.48656087461859)
p = PerformanceResult(1.0, 1.0, 1.0, 6.247361501057943e-5, 3.056526184082031e-5, 300.0, 30.48656087461859)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003813910484313965, 0.0035965998967488607, 300.0, 1.9605114462792699)
p = PerformanceResult(1.0, 1.0, 1.0, 5.977153778076172e-5, 2.513726552327474e-5, 300.0, 1.9605114462792699)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.23464584350586e-5, 0.011447866757710775, 300.0, 30.48656087461859), PerformanceResult(1.0, 1.0, 1.0, 6.247361501057943e-5, 3.056526184082031e-5, 300.0, 30.48656087461859), PerformanceResult(1.0, 1.0, 1.0, 0.003813910484313965, 0.0035965998967488607, 300.0, 1.9605114462792699), PerformanceResult(1.0, 1.0, 1.0, 5.977153778076172e-5, 2.513726552327474e-5, 300.0, 1.9605114462792699))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.0057973066965738935, 0.0029090722401936848, 347.7, 28666.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00645913283030192, 0.002274195353190104, 303.53333333333336, 6962.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9238065083821616e-5, 7.700920104980468e-6, 95.43333333333334, 46.82759869098663))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.434253692626953e-5, 1.2501080830891926e-5, 84.5, 69.21203052997589))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5614102681477865e-5, 1.399517059326172e-5, 90.96666666666667, 37.869385719299316))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.109410603841146e-5, 0.0001589377721150716, 96.86666666666666, 42.254140332341194))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8166666666666664, 0.8166666666666664, 0.8166666666666664, 5.950927734375e-5, 0.0001470645268758138, 71.33333333333333, 182.46090701967478))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-03T05:46:06.915
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9159999999999997, 0.9139999999999998, 0.9148888888888885, 2.497673034667969e-5, 2.4580955505371092e-5, 152.34, 49.8389456984587))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.412557601928711e-5, 1.9829273223876954e-5, 155.8, 0.0))
*** advance 1 from 1000; 2020-08-03T05:46:07.558
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.918888888888889, 0.9180000000000001, 0.918421052631579, 2.37274169921875e-5, 2.680063247680664e-5, 152.91, 73.88525290414691))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3174285888671876e-5, 2.0658969879150392e-5, 156.26, 0.0))
*** advance 1 from 1000; 2020-08-03T05:46:08.212
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.89, 0.8870000000000001, 0.8883333333333333, 2.5761127471923827e-5, 3.154993057250977e-5, 153.01, 40.69641695916653))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4876594543457032e-5, 2.7849674224853516e-5, 156.44, 0.0))
*** advance 1 from 1000; 2020-08-03T05:46:08.806
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.916, 0.914, 0.914888888888889, 0.00010070085525512695, 0.0004986095428466797, 152.72, 44.66134173120372))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010337591171264648, 0.0005388307571411133, 156.09, 0.0))
*** advance 1 from 1000; 2020-08-03T05:46:09.360
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9560000000000001, 0.9560000000000001, 0.9560000000000001, 9.73367691040039e-5, 0.000399620532989502, 169.31, 189.59431304316968))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.663820266723632e-5, 0.00042965173721313475, 174.47, 0.0))
*** advance 1 from 1000; 2020-08-03T05:46:10.592
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9159999999999997, 0.9139999999999998, 0.9148888888888885, 3.497123718261719e-5, 8.147954940795898e-5, 152.34, 49.8489221164491))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.400802612304687e-5, 7.26008415222168e-5, 155.8, 0.01465128845302388))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:12.417
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7340000000000001, 0.7340000000000001, 0.7340000000000001, 0.0014628982543945313, 7.977008819580078e-5, 200.66, 188.58333548903465))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:13.307
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7420000000000002, 0.7420000000000002, 0.7420000000000002, 0.0015225434303283692, 8.408069610595704e-5, 208.41, 107.90873220562935))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:14.120
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6609999999999999, 0.6609999999999999, 0.6609999999999999, 0.0014843940734863281, 7.324934005737305e-5, 288.75, 5.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:14.989
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.934, 0.9329999999999999, 0.9334736842105263, 0.0015239334106445313, 1.9621849060058593e-5, 216.24, 609.6000202149153))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:15.988
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.554, 0.554, 0.554, 0.0015863704681396485, 0.0004517388343811035, 254.3, 2363.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:16.952
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.40399999999999997, 0.40399999999999997, NaN, 0.0015738844871520997, 0.0005450201034545898, 238.36, 3626.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-03T05:46:17.930
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5849999999999999, 0.5849999999999999, 0.5849999999999999, 0.0015861105918884278, 2.7709007263183593e-5, 241.28, 2364.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0578512396694215, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.9384765625,"f1":0.966277472527473,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5078125,"distances_sum":624.3536005914211}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0578512396694215,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.966277472527473,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5078125,"distances_sum":624.3536005914211}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0578512396694215,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.966277472527473,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5078125,"distances_sum":624.3536005914211}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0578512396694215,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.9384765625,"f1":0.966277472527473,"seconds":5.576759576797485e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.5078125,"distances_sum":624.3536005914211}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1011440888741504,"state":{"restarts":6},"perf":{"precision":0.909722222222221,"recall":0.909722222222221,"f1":0.909722222222221,"seconds":1.9712373614311218e-5,"exhaustive_search_seconds":6.649643182754517e-6,"evaluations":47.1171875,"distances_sum":285.5682938331738}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.1011440888741504,"state":{"restarts":6},"perf":{"precision":0.909722222222221,"recall":0.909722222222221,"f1":0.909722222222221,"seconds":1.9712373614311218e-5,"exhaustive_search_seconds":6.649643182754517e-6,"evaluations":47.1171875,"distances_sum":285.5682938331738}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555545, conf: {"restarts":1}, perf: {"precision":0.8524305555555545,"recall":0.8524305555555545,"f1":0.8524305555555545,"seconds":3.0448660254478455e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":66.4375,"distances_sum":125.40071979351342}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8628472222222211, conf: {"restarts":13}, perf: {"precision":0.8628472222222211,"recall":0.8628472222222211,"f1":0.8628472222222211,"seconds":5.610845983028412e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":148.984375,"distances_sum":125.70811756514013}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":7}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":4.227645695209503e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":110.2421875,"distances_sum":125.75260978750885}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8628472222222211,"state":{"restarts":13},"perf":{"precision":0.8628472222222211,"recall":0.8628472222222211,"f1":0.8628472222222211,"seconds":5.610845983028412e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":148.984375,"distances_sum":125.70811756514013}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8654513888888878, conf: {"restarts":21}, perf: {"precision":0.8654513888888878,"recall":0.8654513888888878,"f1":0.8654513888888878,"seconds":6.983987987041473e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":194.2109375,"distances_sum":125.64148232527077}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8654513888888878,"state":{"restarts":21},"perf":{"precision":0.8654513888888878,"recall":0.8654513888888878,"f1":0.8654513888888878,"seconds":6.983987987041473e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":194.2109375,"distances_sum":125.64148232527077}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8654513888888878,"state":{"restarts":21},"perf":{"precision":0.8654513888888878,"recall":0.8654513888888878,"f1":0.8654513888888878,"seconds":6.983987987041473e-5,"exhaustive_search_seconds":2.7023255825042725e-5,"evaluations":194.2109375,"distances_sum":125.64148232527077}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8550347222222212, conf: {"restarts":12}, perf: {"precision":0.8550347222222212,"recall":0.8550347222222212,"f1":0.8550347222222212,"seconds":0.00011505000293254852,"exhaustive_search_seconds":0.000325741246342659,"evaluations":229.0625,"distances_sum":55.98512350907549}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888878, conf: {"restarts":30}, perf: {"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":0.00015136413276195526,"exhaustive_search_seconds":0.000325741246342659,"evaluations":381.3203125,"distances_sum":55.90451915515587}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888878,"state":{"restarts":30},"perf":{"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":0.00015136413276195526,"exhaustive_search_seconds":0.000325741246342659,"evaluations":381.3203125,"distances_sum":55.90451915515587}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8576388888888878,"state":{"restarts":30},"perf":{"precision":0.8576388888888878,"recall":0.8576388888888878,"f1":0.8576388888888878,"seconds":0.00015136413276195526,"exhaustive_search_seconds":0.000325741246342659,"evaluations":381.3203125,"distances_sum":55.90451915515587}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(30), SatNeighborhood(32), 2020-08-03T05:46:24.690
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6150, 0.025973551f0), Item(8169, 0.027566671f0), Item(934, 0.029990604f0), Item(3642, 0.03008429f0), Item(2899, 0.043650918f0), Item(6572, 0.04589341f0), Item(8969, 0.04662258f0), Item(9714, 0.04666017f0), Item(2435, 0.047199722f0), Item(9048, 0.048533518f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.033183856502242,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9778102106227106,"seconds":0.0032958723604679108,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.7109375,"distances_sum":637.5077479481697}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.033183856502242,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9638671875,"f1":0.9778102106227106,"seconds":0.0032958723604679108,"exhaustive_search_seconds":2.086162567138672e-6,"evaluations":8.7109375,"distances_sum":637.5077479481697}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.088471849865952,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.0885298252105713e-5,"exhaustive_search_seconds":5.867332220077515e-6,"evaluations":32.0546875,"distances_sum":286.79139778018}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.088471849865952,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.0885298252105713e-5,"exhaustive_search_seconds":5.867332220077515e-6,"evaluations":32.0546875,"distances_sum":286.79139778018}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.078460958129007,"state":{"bsize":3},"perf":{"precision":0.9765624999999997,"recall":0.9765624999999997,"f1":0.9765624999999997,"seconds":3.286823630332947e-5,"exhaustive_search_seconds":3.147684037685394e-5,"evaluations":62.1328125,"distances_sum":124.34926335187629}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.078460958129007,"state":{"bsize":3},"perf":{"precision":0.9765624999999997,"recall":0.9765624999999997,"f1":0.9765624999999997,"seconds":3.286823630332947e-5,"exhaustive_search_seconds":3.147684037685394e-5,"evaluations":62.1328125,"distances_sum":124.34926335187629}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.96657033507772, conf: {"bsize":6}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.076879799365997e-5,"exhaustive_search_seconds":0.00036310218274593353,"evaluations":100.0234375,"distances_sum":54.456290839239955}, best_list's length: 2, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.96657033507772,"state":{"bsize":6},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.076879799365997e-5,"exhaustive_search_seconds":0.00036310218274593353,"evaluations":100.0234375,"distances_sum":54.456290839239955}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.96657033507772,"state":{"bsize":6},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.076879799365997e-5,"exhaustive_search_seconds":0.00036310218274593353,"evaluations":100.0234375,"distances_sum":54.456290839239955}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.96657033507772,"state":{"bsize":6},"perf":{"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":6.076879799365997e-5,"exhaustive_search_seconds":0.00036310218274593353,"evaluations":100.0234375,"distances_sum":54.456290839239955}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(6), SatNeighborhood(32), 2020-08-03T05:46:28.172
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(3231, 0.035870064f0), Item(2597, 0.036015823f0), Item(5049, 0.04963506f0), Item(389, 0.053491272f0), Item(5812, 0.05902482f0), Item(7876, 0.0591f0), Item(325, 0.065554745f0), Item(9896, 0.06805356f0), Item(850, 0.07254245f0), Item(2654, 0.073189884f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
