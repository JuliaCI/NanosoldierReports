Julia Version 1.6.0-DEV.636
Commit 8554a216e7 (2020-08-14 06:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed VectorizationBase ─── v0.12.31
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed SIMDPirates ───────── v0.8.24
  Installed CpuId ─────────────── v0.2.2
  Installed LoopVectorization ─── v0.8.23
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_dMWHDu/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_dMWHDu/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [4.5545485161113675e-9, 9.119866195561599e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.702016553892463e-12, -9.423795077623254e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [2.9594104944408173e-12, 6.235900684714579e-12, -1.2842504837351498e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.00612917575927e-13, -1.730615650785694e-12, 2.7069457786410567e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [1.0151235407818149e-10, -2.381839170340072e-11, 2.136653076689754e-10, -4.0138781187692985e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.427925107274859e-11, 2.99535951597818e-11, 1.8966406223341892e-10, 6.699685251021492e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [1.2987388942065081e-11, -7.83253462088851e-11, 2.0806023570685284e-11, -1.6674384095693995e-10, 5.641762612640377e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [8.810951968030167e-12, 9.212186569129699e-12, 3.1847635639792315e-11, 2.0305312986579338e-11, -9.593070782187851e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8853586186983193e-12, 3.1754598950328727e-12, -2.0347057372305244e-12, -5.729083873973195e-12, 6.366018823200648e-12, -3.119948743801615e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.749312302962608e-11, 5.022204874194358e-12, 8.489364766717244e-11, 1.5598256020155077e-10, 9.024558877968047e-12, 1.6287038384632524e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [6.057598866959779e-12, 2.441244983941715e-10, 1.7745649394385055e-10, -4.021005750587392e-12, 4.796543162655098e-10, 3.488347388724833e-10, 2.7956525983086067e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.957145639470582e-11, 1.191935439237568e-12, 1.5976553413565853e-11, 6.018341380809034e-11, 2.2672974608894947e-12, 2.6688651288964138e-11, -8.780753901760363e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2944501026623811e-10, -2.104816321235603e-11, 4.508415862858328e-11, 6.213984882208479e-11, -2.5160329375495394e-10, -3.879307985954483e-11, 8.560774311661135e-11, 1.2721246278601939e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.0281334651458565e-11, -4.0486169972098196e-11, 2.5650148671729767e-11, -2.9489632957790946e-11, -1.01648578443303e-10, -8.365330650406122e-11, 4.9178439098795934e-11, -4.797162667102839e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [3.1265878774888733e-11, -4.95777863207536e-11, -6.72889521879938e-11, -3.932931758043878e-11, 6.266120955444876e-11, -9.282197233062561e-11, -1.417023165473097e-10, -8.393552519692093e-11, -1.2750911437819923e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.657096764835387e-12, -1.6620038678638593e-12, -4.48607817560287e-12, 4.36295444217194e-12, -2.4156232569794156e-12, -5.8189009166653705e-12, -1.0520473381347983e-11, 9.275913370743183e-12, 3.169686735304822e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [2.0373036591081473e-11, 1.591904386089027e-11, -1.527378223897813e-11, 9.477973961224961e-12, -3.097500034243694e-11, 4.399103303853735e-11, 3.110689483776241e-11, -3.028910455782352e-11, 1.7110979300127838e-11, -5.890166132616059e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0300649222472202e-12, 4.560263278108323e-11, -1.7094659021665848e-11, 3.3484104378089796e-11, 4.212363791111784e-11, -1.1097789354153065e-12, 9.462142180893807e-11, -3.569544659853818e-11, 6.603118052339596e-11, 7.699063608868073e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.233413454177935e-11, 1.1290079982018142e-11, 2.7255975254547593e-12, 1.691025097727561e-11, -4.064304448547773e-12, 4.214362192556109e-11, 2.5313307006058494e-11, 6.910472194476824e-12, 3.036904061559653e-11, -7.72493180534184e-12, 1.0468870215163406e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4119150293367966e-11, -6.493316995204168e-11, -7.958067538282876e-11, 5.821876314371366e-11, -5.2645110493187985e-11, 2.5163426897734098e-11, -1.311359909550447e-10, -1.590171327947587e-10, 1.1065526273057458e-10, -1.0575451625527421e-10, 1.6977530492567894e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [8.859313282982839e-11, -6.813383190973354e-11, 3.189604136366597e-11, 5.768829858254776e-11, 5.315015094708997e-11, -2.3454904685138445e-11, 1.7698265075694053e-10, -1.4366663414477898e-10, 6.405032060285976e-11, 1.2008283256648156e-10, 1.0420841967118122e-10, -5.120970314465012e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.405275978389909e-11, 1.8782531086003473e-11, -6.742162383943651e-12, 1.9514834193046227e-11, 1.2962964035523328e-11, -7.442879645935818e-11, 4.8110404549106534e-11, 3.49265061316828e-11, -1.2327916465437738e-11, 3.878408705304537e-11, 2.5372814960178403e-11, -1.5525225549595234e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.7608137170554983e-11, -9.756973007313263e-12, -6.557066001278145e-11, 2.958944200770475e-11, -4.084255156300287e-11, -3.831379657981415e-13, 3.5985436852570274e-11, -9.60853618892088e-12, -1.3013079502854907e-10, 5.974953865006682e-11, -8.317291300130591e-11, -3.2076563627470023e-12, 7.23643367450677e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.826427897810845e-11, -2.5957236360341085e-11, 4.300937384016379e-11, 5.563616234383062e-11, -2.1637491798287556e-10, -3.587452557241022e-11, 3.93733934345164e-11, -5.604339214926313e-11, 9.907608067294404e-11, 1.154643047840409e-10, -4.423381660956238e-10, -7.32203186970537e-11, 4.272138198757602e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6522561924480215e-11, 1.1582801384690811e-10, -6.812050923343804e-11, -1.8065526852240055e-10, -6.78158640354809e-11, -6.142464314962126e-11, 1.01972874588796e-10, -5.5303206458745535e-11, 2.3256618852940392e-10, -1.3841949808579557e-10, -3.7016800735756306e-10, -1.3411027843801548e-10, -1.2172751695516126e-10, 1.9833690245718572e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.617361965524424e-11, 1.784550285321984e-11, -2.6582291923205048e-11, -6.152145459736857e-11, -1.4136625203775566e-10, 1.0406253636574547e-10, -8.800515871598691e-11, -7.770317722588516e-11, 3.876698961846614e-11, -5.1586845906115286e-11, -1.2944634253386766e-10, -2.7736168917158466e-10, 2.0558021951444516e-10, -1.8714840788192078e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-5.3733795191135414e-11, 2.2145618672197998e-11, -1.3721579428249697e-10, 1.7911894190092426e-11, 1.0339729072939008e-11, 6.524403239893672e-11, -7.914879862624957e-11, -1.041465802487096e-10, 4.706435241530471e-11, -2.6633151239963126e-10, 3.9009462327044275e-11, 1.3635537143841248e-11, 1.2286793804605622e-10, -1.5557943822130937e-10, 6.817879594223086e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.455258301698905e-11, 1.2311485164673286e-11, -5.014078041654102e-11, 1.7951196085164156e-11, 8.685407948405555e-11, 2.0049961690915552e-11, -6.361922100239781e-11, -6.980871436468306e-11, 2.623989914241065e-11, -1.0229228575298066e-10, 3.19309023666392e-11, 1.688000850208482e-10, 3.965494599356134e-11, -1.3433876233648334e-10, -2.878808302853031e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-8.71033245530839e-11, -1.4085710375866256e-10, -2.4339308346554844e-11, 1.5563106359195444e-12, -1.1514866837813997e-10, -5.266898028821743e-13, -3.2093883106654175e-11, 3.873124043707321e-12, -1.8629231490763232e-10, -2.8878632818418737e-10, -5.385769608068358e-11, 1.099298430062845e-11, -2.2418200629203966e-10, -1.1856071679972047e-12, -7.22751858361903e-11, 5.455191853798169e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.643841032882847e-11, -3.7219893833650985e-11, -3.06570324681843e-11, -2.2390866938337695e-11, 5.079048293055166e-11, -7.637002141791527e-12, 3.155253835984695e-13, -1.1002887490008106e-10, 1.405053851044613e-10, -7.800993184758909e-11, -5.589706475461753e-11, -4.15014689281179e-11, 1.1501644081590712e-10, -2.06575867522929e-11, 1.2492229473082261e-12, -2.292036560547217e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-6.051870116152713e-11, 3.573941143031334e-11, -5.2165383124247455e-11, -1.582645126063653e-11, 9.004685885827257e-11, -3.9026670783925965e-11, 8.462142098153436e-11, -7.708444993426156e-11, -1.1695044932480414e-10, 7.894884745951458e-11, -9.476885942660829e-11, -3.6677105796911746e-11, 1.896018897440399e-10, -8.895262304520202e-11, 1.7006662744734058e-10, -1.4658940727940717e-10, 8.140155216551648e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.681543793097262e-11, 1.9382495608510908e-11, 1.5796253194366727e-12, 1.1222578422120932e-11, 1.9453105792877068e-11, 1.6505241617892352e-11, -1.8969159576442962e-11, 2.6481039583359234e-12, -3.1251334853266144e-11, 3.976352580536968e-11, -1.9143575613611574e-12, 2.2247981235068437e-11, 4.185696234060288e-11, 3.0967672870474416e-11, -3.782085755688058e-11, 4.455991131635528e-12, 1.539435245945242e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-6.961686782602783e-11, -4.741085302129022e-11, 2.566720169738801e-10, -3.528566328014904e-11, 6.898792648257768e-11, -2.0662360711298788e-11, -3.621924982155633e-11, -6.185929546376201e-11, 4.531708341914964e-12, -1.3607703852613895e-10, -8.689904351655287e-11, 5.130531555153084e-10, -7.167577642519518e-11, 1.3296319600897277e-10, -4.0627390340830516e-11, -7.340805741051781e-11, -1.140968430846101e-10, 1.825717355075085e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.3754844192278597e-10, -1.196870380582027e-10, 2.081379513185766e-10, -2.7573598959662604e-10, 4.9865400697513e-10, -3.806898130065406e-10, -4.098258399309884e-10, 3.419424743356103e-10, -2.949755995018677e-10, 8.856850808314221e-10, -2.1795232285626298e-10, 4.072819859146648e-10, -5.667256663954845e-10, 9.94689663968984e-10, -7.831878479080956e-10, -8.416010111034211e-10, 6.767817417596689e-10, -6.03782690511423e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-4.7807646730291253e-11, -5.849738471397359e-10, -6.644845784720133e-10, -5.537851288650586e-10, -1.2235656932091388e-10, -1.0505286640594136e-9, -2.395795783982635e-10, 4.409304033003991e-10, 6.111466888114592e-11, -9.75680647385957e-11, -1.1723649828709881e-9, -1.3299170653624515e-9, -1.1115022235941296e-9, -2.444597857476083e-10, -2.09442185816755e-9, -4.753172300198116e-10, 8.720004718298924e-10, 1.1167244906573615e-10, 5.5294435696850996e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.993339489255959e-12, 3.0101254822056944e-11, 4.1135317374596525e-11, 2.2472024241437794e-11, -6.64945876138745e-12, 7.873102170208313e-11, -1.4729328867701952e-11, -5.168621086681924e-11, 1.0425416085979577e-10, 1.7252421713465083e-11, 5.728484353539898e-11, 8.916156701843647e-11, 4.292033395358885e-11, -1.3057999126431241e-11, 1.596349719079626e-10, -2.664679588093577e-11, -1.024873519384073e-10, 2.049009850679795e-10, -3.442990337276797e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-7.134182133938793e-11, 1.1188827642172328e-11, 1.2085443756859604e-11, 3.1749713969020377e-11, -9.656053734374836e-11, 5.452549522999561e-11, -5.2767790137409065e-11, -1.3291945322180254e-10, 6.368905403064673e-12, 2.473798943469774e-12, -1.3812995192097333e-10, 2.028066603543266e-11, 1.783218017692434e-11, 5.94220228578024e-11, -1.8402934731653886e-10, 1.1403855637581728e-10, -1.1222323070825269e-10, -2.5264546010816957e-10, 1.0047740417462592e-11, -8.137934770502397e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9899637493381306e-11, 5.378608669559526e-11, -5.932643265538218e-11, 2.2423840562169062e-11, -1.1504242003468335e-10, 4.825984056822108e-11, 7.09379222030293e-11, 1.942312977121219e-11, 7.003464475019427e-11, -4.25357526978587e-11, -3.762024025633082e-11, 1.0493961255519935e-10, -1.1449619030656777e-10, 4.5737857945482574e-11, -2.331917992037802e-10, 9.723666316574509e-11, 1.4489076605173068e-10, 3.9716896438335425e-11, 1.4292012018302103e-10, -8.756539937593288e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-8.549461139040204e-11, 2.3582025221458025e-11, 5.347278175804604e-12, -2.2998603022017505e-11, 1.0591327814779561e-10, -1.658883030941638e-10, 1.7740697799695226e-11, -2.9869551276817674e-11, -2.8762481285582453e-10, 6.536637897625042e-11, -1.7012569131225064e-10, 5.2063908739796716e-11, 1.0545120332494662e-11, -3.898315004136066e-11, 2.07449613043309e-10, -3.4730296416540796e-10, 3.4541924875952645e-11, -5.212630327378065e-11, -5.870801622620547e-10, 1.1730150184519061e-10, 6.594502721668505e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.034828275465088e-11, 2.1352031254195936e-11, 8.129785733501649e-11, 3.104672074982773e-11, -2.948619126641461e-11, 1.2117418179968809e-11, -2.8486102365832267e-11, 2.12754258654968e-11, -8.980372001587966e-12, -1.9555179697761105e-10, -1.3386314279273392e-10, 4.117040042217468e-11, 1.7055845624724952e-10, 5.302669414675165e-11, -5.727607277350444e-11, 2.3860025066824164e-11, -5.580302886443178e-11, 4.4297010504124046e-11, -1.3505196960750254e-11, -3.888522837058872e-10, 3.5211833449011465e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.0276957063126702e-10, 4.190647828750116e-12, -6.465539215128047e-11, -7.685274638902229e-11, -1.4300338690986791e-11, 1.3751666472217039e-11, -4.3922754322522906e-11, -3.8689051962137455e-11, 2.8946400831841856e-11, -1.13534404100335e-10, -1.7636503368834155e-10, 2.0420154456246564e-10, -1.9378942894832107e-12, -1.405519034491931e-10, -1.6274004366323425e-10, -2.171107738035971e-11, 3.799072167964823e-11, -6.790823459112971e-11, -6.710054734071491e-11, 4.568900813239907e-11, -2.240501117967142e-10, -3.568452200397587e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1512568676153023e-10, 4.103406503475071e-11, 6.306732913685664e-12, -6.753964054695416e-11, 3.0970781494943367e-12, 1.9877210988283878e-11, -1.242701497261578e-10, -7.924028100347869e-11, -3.336553255905983e-12, 5.540945480220216e-11, -7.512235278284152e-11, -2.3813795380078773e-10, 8.313305599472187e-11, 1.588773557159584e-11, -1.34746991342638e-10, 1.8989254613188677e-11, 3.72204489451633e-11, -2.514337626990937e-10, -1.6288004278663948e-10, -1.9226620295853536e-11, 1.265418880791458e-10, -1.5469059366779447e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-5.201283848066396e-11, -4.074751647209496e-11, 2.963096434882573e-11, -5.030309502274122e-12, -3.3762992401875636e-11, 1.3087753103491195e-11, 1.5732526392753243e-11, -2.1991519716380026e-11, -2.582767333336733e-11, 2.1040724718091042e-11, 8.092193581887841e-12, -1.027103957440545e-10, -7.840195159758423e-11, 5.859757123971576e-11, -9.882650253700831e-12, -6.41757758046424e-11, 2.359112905025995e-11, 3.27886606754646e-11, -3.9479419733368104e-11, -6.271139163516182e-11, 4.5203396581428024e-11, 1.7418066988739156e-11, -8.225642389447785e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8796242340357594e-10, 1.3164580536795256e-11, -7.068867713400095e-11, 2.9248159449934974e-11, -3.147493377042565e-11, 5.2337467693064355e-11, 5.913047829153584e-11, 3.604938569878868e-11, 9.087575136845771e-11, -6.81046330441859e-11, -4.252531660142722e-11, -3.7587166712427234e-10, 3.5610847604061746e-11, -1.3507794882627877e-10, 4.983413681713955e-11, -7.047862293774187e-11, 1.0812950534955235e-10, 1.1136114252963125e-10, 7.121858658365454e-11, 1.891147238808344e-10, -1.339227617691563e-10, -8.563083575552355e-11, -3.874012222127021e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [5.093703236980218e-13, 5.4791726711300726e-12, -7.174816296640074e-12, 9.787060051280605e-12, 8.940626017306386e-12, -8.802181206135629e-12, 5.2022830487885585e-12, -1.7557844067539463e-11, 1.3311574065255627e-12, -5.063061081500564e-12, -3.4985347951987933e-12, 1.2041256880479523e-11, 1.1091128016005314e-12, 1.1051382031723733e-11, -1.3868350912105143e-11, 1.939359783875716e-11, 1.735123156265672e-11, -1.721833786660909e-11, 9.874989714830917e-12, -3.5912273155247476e-11, 2.639444218743847e-12, -9.272915768576695e-12, -7.477685137757817e-12, 2.4356516803436534e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.098277686803158e-13, 1.2204681709704346e-11, 3.5927261166079916e-11, 1.2445156016838155e-11, -1.8205215113198392e-11, -2.3984148000977257e-12, -3.2652991421855404e-11, 1.4767520539749057e-11, 3.927103087164596e-11, -1.065580956804979e-11, -1.0950240714180381e-11, 1.8918200339612667e-11, -8.893996650272129e-13, 2.5654367519223342e-11, 7.175726679520267e-11, 2.327249504219253e-11, -3.3372415941812505e-11, -6.458833468059311e-12, -6.495737281397851e-11, 2.9080515773216575e-11, 8.184097843866311e-11, -1.8341772545227286e-11, -2.211264504836663e-11, 3.808864335042017e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
