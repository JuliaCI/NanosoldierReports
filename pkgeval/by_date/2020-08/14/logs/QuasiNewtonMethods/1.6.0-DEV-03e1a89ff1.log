Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed StackPointers ─────── v0.1.2
  Installed VectorizationBase ─── v0.12.31
  Installed QuasiNewtonMethods ── v0.1.1
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed OffsetArrays ──────── v1.1.2
  Installed UnPack ────────────── v1.0.2
  Installed SIMDPirates ───────── v0.8.24
  Installed SLEEFPirates ──────── v0.5.5
  Installed LoopVectorization ─── v0.8.23
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_Igq9Ls/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_Igq9Ls/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [2.0272672429655358e-13, 4.376499163072367e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [4.1983083676200295e-11, 8.294542830356022e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [9.941891754294829e-11, 1.9210188995089084e-10, 1.1314571501941373e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.020784119684322e-12, -1.6559087434586672e-11, -7.441491867155037e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2321255127289987e-12, 4.068301251436424e-12, -1.3710144131096058e-12, 7.538414337204813e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4930612302066493e-11, 4.8757442527858075e-11, -3.401245951550891e-11, 9.300848979876264e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-3.799371928181472e-11, -1.8994139594497028e-11, -7.879619179362862e-11, -3.314892804695546e-11, 8.689049479926325e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.120593169598123e-12, -3.212985433265203e-12, -1.5186629731545054e-11, -6.8047789625325095e-12, -1.5538126341141378e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [3.608544574262851e-10, 2.1607138300794304e-10, 1.1367351504532053e-11, 7.297522586213745e-10, 4.388935881394218e-10, 1.8132828571992832e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.904521647285947e-12, 2.3176349728259993e-11, 3.6942227055192234e-11, 2.2647661523933493e-11, 5.227951405117892e-11, 6.871503366312481e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-5.7038929135444505e-11, -6.014888587202449e-11, -2.460698311779197e-12, -1.0137557460154767e-10, -1.2566703233574117e-10, -2.9753977059954195e-13, 4.7596815377914936e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.2889290463012912e-10, 8.917933058683047e-11, -4.944800124917492e-11, 4.5114179059169146e-10, 1.7074053282328805e-10, -8.290268471711215e-11, -3.9723913047851056e-10]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.4005951953777185e-10, 1.5576007150741589e-10, 1.3013146116236385e-11, -1.2286727191224145e-11, 2.700482060191689e-10, 3.1665958744042655e-10, 3.799760506240091e-11, -4.1353698243540293e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.789602462006997e-11, 2.8245628058698458e-11, 4.282285637202676e-11, 7.738698570847191e-12, -2.015493327789386e-10, 5.394462654351173e-11, 8.488676428441977e-11, 1.1004086530874702e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-6.504563554443621e-11, -6.78602729564659e-11, 2.519962016833688e-10, 1.127773430198431e-10, -1.4534962122780826e-10, -1.4296752670617252e-10, 5.06132469269005e-10, 2.3225243950264485e-10, -3.2552882611724954e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5867307467942737e-12, -2.1172841258021435e-11, 2.1024959551141364e-11, -1.1715073355844652e-12, -1.7020829190528275e-12, -4.617328741574056e-11, 4.589439939195472e-11, -3.110289803487376e-12, 1.0083045509645672e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [2.5891955246493126e-11, -8.546940932774305e-12, -2.2709945035614965e-11, -1.4640288981127014e-11, 1.312132624775586e-10, 4.8365533800165394e-11, -8.80884254428338e-12, -3.4246161462192504e-11, -3.532540926443062e-11, 2.5418955829081824e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1826628565358988e-10, -1.1765255436557709e-11, -3.792250957701526e-10, 9.141820633828956e-11, 6.090550286330654e-11, 2.3143309491047148e-10, -1.6705414829232268e-11, -7.709661797861145e-10, 1.6689361004296188e-10, 1.1313527892298225e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-1.50650603103486e-11, 5.984324147334519e-12, -5.2781445880611955e-11, -1.6106449507446996e-11, 3.468159093245049e-11, -2.947309063472403e-11, 1.1670220345649795e-11, -1.0431910890673635e-10, -3.3684832700942025e-11, 7.028844173362359e-11, -9.342526752220692e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.554045780949309e-11, 7.522604761334151e-11, 6.930367391078107e-11, 1.866240495473903e-11, 1.3118173214365925e-11, -3.212630161897323e-11, 1.5222911819989804e-10, 1.4394774261461407e-10, 3.948064097869519e-11, 3.218381117164881e-11, -1.0969003483296547e-13]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [2.2053692205759035e-11, -1.0321599130946879e-10, -2.0490786845073217e-10, 1.4815770832399267e-10, 7.351741437844339e-11, 7.947376090555736e-11, 3.895705980028197e-11, -1.8673862456353163e-10, -4.171274436970407e-10, 3.092528455539423e-10, 1.540116922882362e-10, 1.6778556322094573e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.401612159668275e-10, 2.2028756596625954e-10, -4.186651025861465e-12, -2.568638635125353e-10, -1.0142098272325484e-10, -1.2101653013019131e-11, 2.747388982982102e-10, 4.469420389341394e-10, -2.8396063278535166e-11, -5.12125786222839e-10, -2.1878321376789245e-10, -1.8745893726190843e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [2.5876412124148374e-11, 1.369002688988985e-10, 1.1379874820249825e-10, -5.3203330629969514e-11, -1.5235623873621762e-10, -1.4974599338302141e-10, 5.386424639652887e-11, 2.8520430461753676e-10, 2.2449575531879873e-10, -9.5915941855651e-11, -3.0172131459949014e-10, -2.9680935487164106e-10, -5.308098405265582e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.966138445970046e-11, -2.539435328685613e-11, 1.3626655359644246e-11, -1.3670842236024328e-11, 3.3026914536549157e-12, 4.447375800964437e-11, 6.446798650472374e-11, -5.1377679888275907e-11, 2.8655078310180215e-11, -2.6847524203787998e-11, 7.499112442133082e-12, 8.048073318889237e-11, 3.72080144472875e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [7.821299163879303e-12, -2.94204660633568e-11, 1.166866603341532e-11, 5.557776461273534e-13, 3.098632461728812e-11, -7.997491557887315e-12, 1.0986567211546117e-10, 4.0769609910285e-12, -6.043920919296397e-11, 9.099387909827783e-12, -8.376521698494344e-12, 6.220957082803125e-11, -6.014300168999398e-12, 2.2768342766710248e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2231549934303985e-11, 4.402078701559731e-11, 1.0792700066986072e-11, 7.62034879642215e-12, 2.474465077284549e-11, -6.7126304514886215e-12, 3.034150708458583e-11, -4.3149483985871484e-11, 9.101341902351123e-11, 2.0935697619961502e-11, 2.1480817125052454e-11, 3.3570479729405633e-11, -1.0147882534283781e-11, 6.592615342526642e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.0047518372857667e-12, 7.059530737762998e-11, 7.836842286224055e-12, -2.5188962027300477e-11, -4.8031467692055685e-11, 1.8952395208771122e-11, -2.9065971851593986e-11, 2.9558577807620168e-12, 1.4416934313032925e-10, 1.588817966080569e-11, -5.1824655677989995e-11, -9.447487236968755e-11, 4.27238244782302e-11, -5.572142747212183e-11, -2.5435209494162336e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.087252675726404e-11, -2.349231920106831e-13, -5.6891602540076747e-11, -2.5173751971863112e-11, -2.3065993559612252e-11, 2.3033575047293198e-11, 2.1793900017996748e-11, -5.6688542748872806e-11, -2.07467376611703e-12, -1.1449030612453726e-10, -5.027722682626745e-11, -4.014244492367425e-11, 4.4102277385604793e-11, 3.91622290152327e-11, 6.727951529228449e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [2.317923630812402e-12, -1.5033418954146782e-11, -1.7621015757640635e-11, 1.15203402373254e-11, 1.556377249301022e-11, 9.422018720783853e-12, 1.8937962309450995e-11, -7.403189172805469e-12, 4.402034292638746e-12, -3.1190938720726535e-11, -3.5680125520798356e-11, 2.1826762619525653e-11, 2.9406255208641596e-11, 1.847610953120693e-11, 3.81235043533934e-11, -1.3534395826297896e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.288814079548956e-11, -8.691480868350254e-11, -4.8506754168897714e-12, 1.7330448187635739e-10, -3.382238933369308e-11, 6.460254553530831e-11, -8.401845885686043e-11, -2.0189305782736255e-10, 1.8247936495185968e-10, -1.6649415179870175e-10, -9.46509537413931e-12, 3.42310624290576e-10, -7.13996639589709e-11, 1.332862709091387e-10, -1.5478429649107284e-10, -4.095297434503209e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.2737144672314571e-11, 2.656919129151447e-11, 1.4947154625133408e-11, -3.174682738915635e-11, 8.813616503289268e-12, 4.475309012264006e-12, -4.3778869418531485e-11, 1.6252998946697517e-11, 2.635158757868794e-11, 5.218181442501191e-11, 2.8536284446545324e-11, -6.185907341915708e-11, 1.8775647703250797e-11, 9.01145824627747e-12, -8.3890894231331e-11, 3.531308578885728e-11, -1.2433387652777128e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.706379482158127e-11, 2.297273482554374e-12, -2.426059353410892e-12, -3.263567194267125e-11, 2.8312907573990742e-12, -1.644595570837737e-11, 7.632561249693026e-12, -1.7297607790567326e-11, -3.807132387123602e-11, 1.4714007789962125e-11, -7.627343201477288e-12, -6.637912441931348e-11, 1.8740564655672642e-13, -3.1146862866648917e-11, 2.12780904007559e-11, -3.4174219010196794e-11, 4.087818972209334e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8161250281423236e-11, 1.251421188896984e-11, -3.447775398512931e-11, -1.4353929156385448e-10, -2.0832224834066437e-12, 4.247713292215849e-13, 9.795164679360369e-11, -5.218725451783257e-11, -9.988021520968005e-11, -3.118583169481326e-11, 2.5438318118631287e-11, -7.258060819026468e-11, -2.8702673571245896e-10, 6.015854481233873e-12, -3.6256553315183737e-12, 2.0759749475018907e-10, -1.1177458958400166e-10, -1.9670742812394337e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.283373986728293e-12, 1.570321650490314e-11, 5.3045345893565354e-11, 7.806599811033266e-11, -4.381128793085054e-11, 4.739764136729718e-12, -8.533285189571416e-12, -2.7617574893668007e-11, -3.0441538179104555e-11, -1.7447487898891723e-11, 3.4608538257430155e-11, 1.0832890140477502e-10, 1.6055423657235224e-10, -9.102230080770823e-11, 1.0127898519840528e-11, -1.665700910535861e-11, -5.154465743117953e-11, -5.5522142439201616e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [8.523848293862102e-12, -5.007905201637186e-11, -1.1639023078657829e-11, -4.7017278959060604e-11, -7.49544870615182e-12, 1.3660850228802701e-11, 3.135802728593262e-11, -1.120348258609738e-11, 1.517452830057664e-11, 1.63193902835701e-11, -9.736333961285482e-11, -2.3084756328728417e-11, -9.484280028004832e-11, -1.5175305456693877e-11, 2.6544766384972718e-11, 6.667133511939483e-11, -3.2968072716244023e-11, 3.234923440231796e-11, 5.935918423460862e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.927636076956787e-11, 8.885780999889903e-12, 6.231282156932139e-11, -9.972001002722664e-11, -3.229583267483349e-11, -2.7369551069966747e-11, 2.0136114997626464e-11, -5.215827769688985e-13, -1.1299627900029918e-10, -9.304845782764914e-11, 3.663624958960554e-11, 1.1754552886600322e-10, -2.1655244264451312e-10, -5.6534887882264684e-11, -4.8677950559294914e-11, 3.5910829865315463e-11, -4.711231404996852e-12, -2.349380689992131e-10, -9.117262500524248e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-3.653188862529078e-12, -2.8610558366892747e-11, 5.524913859744629e-12, -5.292322136085659e-12, 2.109490360169275e-11, 1.453681619523195e-11, -2.1819879236772977e-11, 1.6580292694357013e-11, 2.28730367979324e-11, -3.890998634403786e-12, -8.83049189326357e-12, -5.992573104407484e-11, 1.0832001962057802e-11, -1.2444600905325842e-11, 4.3365311341858614e-11, 2.980971025579038e-11, -4.4503956075914175e-11, 3.056133124346161e-11, 4.603428749305749e-11, -1.11726183860128e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.653711081052506e-11, -1.4767342904065117e-10, 1.935918092499378e-11, 9.829137503913898e-11, 9.790412924814973e-11, -9.033107595257661e-12, 1.0839507069704268e-10, -6.837053145858363e-11, 1.4138556991838414e-10, 8.559375430650107e-11, -1.60002566751416e-10, -2.893022488237307e-10, 2.722666536669749e-11, 2.0312196369332014e-10, 1.9244073001800643e-10, -2.609201743553058e-11, 2.355518002872259e-10, -1.500279900312762e-10, 2.743274496452841e-10, 1.6863022089808055e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [9.55255874401928e-11, -8.311362709179093e-11, 2.2963742019044275e-10, 1.7389689688229737e-10, 1.1719825110390047e-10, -1.6429058113942574e-10, 1.1862533177975365e-10, 1.2851630870613917e-10, -1.7810419805641686e-10, 3.2861535714800993e-10, 1.9471979584295696e-10, -1.6260193191897088e-10, 4.461631064600624e-10, 3.377564894435636e-10, 2.3238277968573584e-10, -3.2373359548643066e-10, 2.329041404180998e-10, 2.3931434611768054e-10, -3.788709346252972e-10, 6.585609835241257e-10, -3.20807824749636e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.74633673977587e-11, -4.563349698116781e-12, 9.732037398180182e-11, -6.017164544402931e-11, -1.5127898933542383e-12, -1.7369639060405007e-10, -3.1915581288899375e-11, -4.868871972263378e-11, -2.374955787587396e-11, 6.454903278552138e-11, -1.049587083912229e-10, -1.7971402144212334e-11, 1.920492653795236e-10, -1.21593513036089e-10, -2.0233259512281165e-11, -3.56029872250474e-10, -5.328160135320559e-11, -1.0071987688320405e-10, -2.7487345732879476e-11, 1.2535283921977225e-10, 5.819789095085071e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-3.310129947919904e-11, -5.075018183475777e-11, 4.632938477300286e-11, -2.3249624447885253e-11, -4.0504710696609436e-11, 5.487610366117224e-12, -5.94925220198661e-11, -8.396150441569716e-11, 4.838462963618895e-11, -4.62614391238958e-11, 1.0116352200384426e-11, -6.747813419138993e-11, -1.0486100876505589e-10, 9.273737333614918e-11, -5.0310089427796356e-11, -7.874423335607617e-11, 1.000488580871206e-11, -1.1752199213788117e-10, -1.6765344668101534e-10, 9.532019618063714e-11, -9.398826161799434e-11, 1.783617697981299e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.253597474246362e-11, -6.6450178692889494e-12, 1.176969632865621e-11, -7.115530387125091e-12, -7.564859849651384e-11, -5.373756994941914e-11, 7.156963910404102e-11, -3.145328442144546e-11, -7.381539823825278e-12, 6.296296817254188e-12, -2.774092067170386e-11, 8.283285168886323e-11, -1.4993783992167664e-11, 2.3520296821288866e-11, -2.0533907907349658e-11, -1.5079026915998384e-10, -1.0543710349253388e-10, 1.3911116703013704e-10, -6.266931418252852e-11, -1.28584920489061e-11, 1.4274137427605638e-11, -5.2015280971318134e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-6.118128226262343e-11, 1.2188738907070729e-10, 6.231326565853124e-11, 6.522538065212302e-11, -3.7661207485939485e-11, -1.1403333832760154e-10, -8.915934657238722e-11, -3.2025493368337266e-11, 1.4768852807378607e-11, 2.8683277975005694e-11, -4.104272477434279e-12, -1.2588297071403076e-10, 2.4990787217404886e-10, 1.3077028349073316e-10, 1.3267320575494068e-10, -7.117140210510797e-11, -2.261281162319051e-10, -1.7669521401586508e-10, -6.182787615216512e-11, 2.926303643846495e-11, 5.3017590317949725e-11, -5.083600207456129e-12, 2.554090272610665e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.2025493368337266e-12, 2.5690560789826122e-11, 2.6679325415557287e-11, 2.723110625879599e-11, 1.1409517775007316e-10, 3.874744969323274e-11, 4.227596051009641e-11, -5.574696260168821e-11, -1.54287693732158e-11, 2.5116131396885066e-11, 1.441839980742543e-10, -3.1723512705639223e-12, 5.242295486596049e-11, 5.3014481693480775e-11, 5.132094749171756e-11, 2.2508395147724514e-10, 7.671152602028997e-11, 9.059486494322755e-11, -1.1088574503048676e-10, -3.634537115715375e-11, 5.2803095229592145e-11, 2.9078894847600623e-10, -6.898037696601023e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7051959844138764e-10, 1.262989712813578e-11, 1.6245693679195483e-10, 2.451483460674808e-11, 1.1901812868586603e-11, 1.3475154325703897e-10, -9.109668575035812e-11, -7.496081533275856e-11, 1.0152101381777356e-11, -6.053846313136546e-11, -3.301514617248813e-11, 1.598008392278416e-10, -3.43014172621281e-10, 2.5963897698488836e-11, 3.147040406048518e-10, 4.8446802125567956e-11, 2.3537394255868094e-11, 2.7252977652381105e-10, -1.8243095922798602e-10, -1.5340495540527854e-10, 1.4954926186305784e-11, -1.2140566330032243e-10, -6.447675726661828e-11, 3.190641084671597e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.637668275606302e-12, 1.4809309334395948e-10, 9.527889588412108e-11, -9.280998192195966e-11, 7.96045451778582e-11, -6.769573790421646e-11, 2.5164759165363648e-11, 9.221823304983445e-11, -2.8477220581635265e-11, 2.2106938502020057e-10, 9.948775137047505e-11, 4.147793219999585e-12, -1.3650414132371225e-11, 2.961038081394918e-10, 1.921121040027174e-10, -1.7578738464862909e-10, 1.6326406893085732e-10, -1.4440360018852516e-10, 4.643774254020627e-11, 1.875428701225701e-10, -6.782041594988186e-11, 4.4218650963046e-10, 1.968563090315456e-10, 3.4729996656324147e-12]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
