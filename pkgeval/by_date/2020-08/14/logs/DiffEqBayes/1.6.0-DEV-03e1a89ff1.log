Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed InvertedIndices ────────────── v1.0.0
  Installed ZygoteRules ────────────────── v0.2.0
  Installed LogDensityProblems ─────────── v0.9.1
  Installed DiffEqBayes ────────────────── v2.16.0
  Installed ApproxBayes ────────────────── v0.3.2
  Installed CommonSubexpressions ───────── v0.3.0
  Installed Optim ──────────────────────── v0.22.0
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed TreeViews ──────────────────── v0.3.0
  Installed Rmath ──────────────────────── v0.6.1
  Installed NLSolversBase ──────────────── v7.6.3
  Installed AxisArrays ─────────────────── v0.4.3
  Installed DataAPI ────────────────────── v1.3.0
  Installed Parsers ────────────────────── v1.0.10
  Installed ChainRulesCore ─────────────── v0.9.5
  Installed ForwardDiff ────────────────── v0.10.12
  Installed MLStyle ────────────────────── v0.4.5
  Installed DynamicPPL ─────────────────── v0.8.2
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed CpuId ──────────────────────── v0.2.2
  Installed Bijectors ──────────────────── v0.7.2
  Installed TimerOutputs ───────────────── v0.5.6
  Installed FillArrays ─────────────────── v0.8.14
  Installed Combinatorics ──────────────── v1.0.2
  Installed MCMCChains ─────────────────── v3.0.12
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed Turing ─────────────────────── v0.13.0
  Installed UnPack ─────────────────────── v1.0.2
  Installed PrettyPrint ────────────────── v0.2.0
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed Formatting ─────────────────── v0.4.1
  Installed TransformVariables ─────────── v0.3.8
  Installed StatsFuns ──────────────────── v0.9.5
  Installed DiffEqBase ─────────────────── v6.42.0
  Installed BinaryProvider ─────────────── v0.5.10
  Installed ProgressMeter ──────────────── v1.3.2
  Installed InplaceOps ─────────────────── v0.3.0
  Installed NaNMath ────────────────────── v0.3.4
  Installed RangeArrays ────────────────── v0.3.2
  Installed OrderedCollections ─────────── v1.3.0
  Installed Inflate ────────────────────── v0.1.2
  Installed IterativeSolvers ───────────── v0.8.4
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed SpecialFunctions ───────────── v0.10.3
  Installed ModelingToolkit ────────────── v3.16.0
  Installed SymbolicUtils ──────────────── v0.5.0
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed VectorizationBase ──────────── v0.12.31
  Installed AbstractMCMC ───────────────── v1.0.1
  Installed Roots ──────────────────────── v1.0.5
  Installed PoissonRandom ──────────────── v0.4.0
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed ProgressLogging ────────────── v0.1.3
  Installed DiffRules ──────────────────── v1.0.1
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed IntervalSets ───────────────── v0.5.1
  Installed DistributionsAD ────────────── v0.5.3
  Installed DiffEqJump ─────────────────── v6.9.4
  Installed LineSearches ───────────────── v7.0.1
  Installed IterTools ──────────────────── v1.3.0
  Installed DataValueInterfaces ────────── v1.0.0
  Installed LightGraphs ────────────────── v1.3.3
  Installed GeneralizedGenerated ───────── v0.2.5
  Installed RecursiveFactorization ─────── v0.1.4
  Installed Requires ───────────────────── v1.0.1
  Installed DocStringExtensions ────────── v0.8.2
  Installed LoggingExtras ──────────────── v0.4.2
  Installed Missings ───────────────────── v0.4.3
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed Reexport ───────────────────── v0.2.0
  Installed ArgCheck ───────────────────── v2.1.0
  Installed MuladdMacro ────────────────── v0.2.2
  Installed FiniteDiff ─────────────────── v2.5.2
  Installed TerminalLoggers ────────────── v0.1.2
  Installed DynamicHMC ─────────────────── v2.1.0
  Installed StaticArrays ───────────────── v0.12.4
  Installed LoopVectorization ──────────── v0.8.23
  Installed NNlib ──────────────────────── v0.6.6
  Installed AdvancedMH ─────────────────── v0.5.1
  Installed ConstructionBase ───────────── v1.0.0
  Installed Compat ─────────────────────── v3.13.0
  Installed SIMDPirates ────────────────── v0.8.24
  Installed RecursiveArrayTools ────────── v2.6.0
  Installed JuliaVariables ─────────────── v0.2.3
  Installed Latexify ───────────────────── v0.13.5
  Installed AbstractAlgebra ────────────── v0.10.0
  Installed Distances ──────────────────── v0.8.2
  Installed ArrayInterface ─────────────── v2.11.0
  Installed NameResolution ─────────────── v0.1.4
  Installed Unitful ────────────────────── v1.4.0
  Installed Tracker ────────────────────── v0.2.11
  Installed Tables ─────────────────────── v1.0.5
  Installed QuadGK ─────────────────────── v2.4.0
  Installed StatsBase ──────────────────── v0.33.0
  Installed SafeTestsets ───────────────── v0.0.1
  Installed DiffResults ────────────────── v1.0.2
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed JSON ───────────────────────── v0.21.0
  Installed Adapt ──────────────────────── v2.0.2
  Installed EllipsisNotation ───────────── v0.4.0
  Installed TableTraits ────────────────── v1.0.0
  Installed StructArrays ───────────────── v0.4.4
  Installed CanonicalTraits ────────────── v0.2.2
  Installed Arpack ─────────────────────── v0.4.0
  Installed RandomNumbers ──────────────── v1.4.0
  Installed Distributions ──────────────── v0.23.2
  Installed EllipticalSliceSampling ────── v0.2.2
  Installed FunctionWrappers ───────────── v1.1.1
  Installed NamedArrays ────────────────── v0.9.4
  Installed MacroTools ─────────────────── v0.5.5
  Installed PositiveFactorizations ─────── v0.2.3
  Installed OffsetArrays ───────────────── v1.1.2
  Installed SLEEFPirates ───────────────── v0.5.5
  Installed SimpleTraits ───────────────── v0.9.2
  Installed AbstractTrees ──────────────── v0.3.3
  Installed RecipesBase ────────────────── v1.0.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed LabelledArrays ─────────────── v1.3.0
  Installed Parameters ─────────────────── v0.12.1
  Installed MappedArrays ───────────────── v0.2.2
  Installed DataStructures ─────────────── v0.17.20
  Installed Libtask ────────────────────── v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [ebbdde9d] + DiffEqBayes v2.16.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [c3fe647b] + AbstractAlgebra v0.10.0
  [80f14c24] + AbstractMCMC v1.0.1
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.0.2
  [0bf59076] + AdvancedHMC v0.2.25
  [5b7e9947] + AdvancedMH v0.5.1
  [f5f396d3] + ApproxBayes v0.3.2
  [dce04be8] + ArgCheck v2.1.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.11.0
  [39de3d68] + AxisArrays v0.4.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.7.2
  [b99e7846] + BinaryProvider v0.5.10
  [a603d957] + CanonicalTraits v0.2.2
  [d360d2e6] + ChainRulesCore v0.9.5
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.42.0
  [ebbdde9d] + DiffEqBayes v2.16.0
  [c894b116] + DiffEqJump v6.9.4
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.23.2
  [ced4e74d] + DistributionsAD v0.5.3
  [ffbed154] + DocStringExtensions v0.8.2
  [bbc10e6e] + DynamicHMC v2.1.0
  [366bfd00] + DynamicPPL v0.8.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [cad2338a] + EllipticalSliceSampling v0.2.2
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.5.2
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.5
  [d25df0c9] + Inflate v0.1.2
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.3
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.3.0
  [23fbe1c1] + Latexify v0.13.5
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] + Libtask v0.4.1
  [093fc24a] + LightGraphs v1.3.3
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.9.1
  [e6f89c97] + LoggingExtras v0.4.2
  [bdcacae8] + LoopVectorization v0.8.23
  [c7f686f2] + MCMCChains v3.0.12
  [d8e11817] + MLStyle v0.4.5
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [961ee093] + ModelingToolkit v3.16.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.3
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.4
  [71a1bf82] + NameResolution v0.1.4
  [86f7a689] + NamedArrays v0.9.4
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.3.0
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [e409e4f3] + PoissonRandom v0.4.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.2.0
  [33c8b6b6] + ProgressLogging v0.1.3
  [92933f4c] + ProgressMeter v1.3.2
  [1fd47b50] + QuadGK v2.4.0
  [e6cf234a] + RandomNumbers v1.4.0
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.2
  [731186ca] + RecursiveArrayTools v2.6.0
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [1bc83da4] + SafeTestsets v0.0.1
  [699a6c99] + SimpleTraits v0.9.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [09ab397b] + StructArrays v0.4.4
  [d1185830] + SymbolicUtils v0.5.0
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [5d786b92] + TerminalLoggers v0.1.2
  [a759f4b9] + TimerOutputs v0.5.6
  [9f7883ad] + Tracker v0.2.11
  [84d833dd] + TransformVariables v0.3.8
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.13.0
  [3a884ed6] + UnPack v1.0.2
  [1986cc42] + Unitful v1.4.0
  [3d5dd08c] + VectorizationBase v0.12.31
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib ───────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
   Building Libtask ─────→ `~/.julia/packages/Libtask/Zo6uM/deps/build.log`
    Testing DiffEqBayes
Status `/tmp/jl_Wt2xJS/Project.toml`
  [f5f396d3] ApproxBayes v0.3.2
  [2b5f629d] DiffEqBase v6.42.0
  [ebbdde9d] DiffEqBayes v2.16.0
  [163ba53b] DiffResults v1.0.2
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [f6369f11] ForwardDiff v0.10.12
  [2ee39098] LabelledArrays v1.3.0
  [6fdf6af0] LogDensityProblems v0.9.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.16.0
  [429524aa] Optim v0.22.0
  [1dea7af3] OrdinaryDiffEq v5.42.2
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.4.0
  [d96e819e] Parameters v0.12.1
  [731186ca] RecursiveArrayTools v2.6.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [2913bbd2] StatsBase v0.33.0
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [84d833dd] TransformVariables v0.3.8
  [fce5fe82] Turing v0.13.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_Wt2xJS/Manifest.toml`
  [c3fe647b] AbstractAlgebra v0.10.0
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.0.2
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [f5f396d3] ApproxBayes v0.3.2
  [dce04be8] ArgCheck v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.11.0
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [a603d957] CanonicalTraits v0.2.2
  [d360d2e6] ChainRulesCore v0.9.5
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.42.0
  [ebbdde9d] DiffEqBayes v2.16.0
  [459566f4] DiffEqCallbacks v2.13.5
  [c894b116] DiffEqJump v6.9.4
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [366bfd00] DynamicPPL v0.8.2
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.7.0
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.5.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.5
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.3
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.3.0
  [23fbe1c1] Latexify v0.13.5
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.9.1
  [e6f89c97] LoggingExtras v0.4.2
  [bdcacae8] LoopVectorization v0.8.23
  [c7f686f2] MCMCChains v3.0.12
  [d8e11817] MLStyle v0.4.5
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.16.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.3
  [2774e3e8] NLsolve v4.4.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.4
  [71a1bf82] NameResolution v0.1.4
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [bac558e1] OrderedCollections v1.3.0
  [1dea7af3] OrdinaryDiffEq v5.42.2
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.4.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [e409e4f3] PoissonRandom v0.4.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.2.0
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.3.2
  [1fd47b50] QuadGK v2.4.0
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.2
  [731186ca] RecursiveArrayTools v2.6.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.9.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [d1185830] SymbolicUtils v0.5.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [5d786b92] TerminalLoggers v0.1.2
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.11
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.2
  [1986cc42] Unitful v1.4.0
  [3d5dd08c] VectorizationBase v0.12.31
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000977
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0055
│   estimated_seconds_left = 0.41
└   ϵ = 0.000977
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.12
│   estimated_seconds_left = 2.9
└   ϵ = 0.000255
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.04966920586927253, 0.11106314290890572, 0.12948824197036457]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.1
│   estimated_seconds_left = 4.9
└   ϵ = 0.000159
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.05385993521866134, 0.2501937858631089, 0.17031882650706037]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.032
│   estimated_seconds_left = 3.2
└   ϵ = 0.00375
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03617681016397046, 0.3051106039334289, 0.16178383762346565]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.051
│   estimated_seconds_left = 10.0
└   ϵ = 0.0046
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.073
│   estimated_seconds_left = 7.2
└   ϵ = 0.0142
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.033952084097155624, 0.25241832715489687, 0.21472791220081877]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.034
│   estimated_seconds_left = 14.0
└   ϵ = 0.00696
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.075
│   estimated_seconds_left = 22.0
└   ϵ = 0.00485
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.064
│   estimated_seconds_left = 13.0
└   ϵ = 0.00415
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.054
│   estimated_seconds_left = 5.4
└   ϵ = 0.00589
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.028192727958947998, 0.2932219812165248, 0.25215191206094156]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.043
│   estimated_seconds_left = 2.1
└   ϵ = 0.0082
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.015
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.066
└   estimated_seconds_left = 60.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.052
└   estimated_seconds_left = 42.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.061
└   estimated_seconds_left = 43.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.062
└   estimated_seconds_left = 37.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.053
└   estimated_seconds_left = 26.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.062
└   estimated_seconds_left = 25.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.056
└   estimated_seconds_left = 17.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.047
└   estimated_seconds_left = 9.4
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.055
└   estimated_seconds_left = 5.4
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0076
│   estimated_seconds_left = 0.56
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.12
│   estimated_seconds_left = 2.8
└   ϵ = 0.000275
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014259540710176303, 0.014516953526887153, 0.014156813083736125, 0.15265577479756925, 0.12626455864863775]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 5.3
└   ϵ = 0.000163
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010156702672873677, 0.011246235507551898, 0.010022864061684657, 0.2220780724052829, 0.22301084685088068]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.043
│   estimated_seconds_left = 4.3
└   ϵ = 0.0161
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007413588518762667, 0.008302349896232786, 0.007116526147262579, 0.2570593309099177, 0.251724278656062]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0071
│   estimated_seconds_left = 1.4
└   ϵ = 0.0258
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.023
│   estimated_seconds_left = 2.3
└   ϵ = 0.0228
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005482849379316327, 0.00665181578502509, 0.0050703508564647675, 0.2703484919224109, 0.2706644883041383]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.014
│   estimated_seconds_left = 5.6
└   ϵ = 0.0332
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.017
│   estimated_seconds_left = 5.2
└   ϵ = 0.0478
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.013
│   estimated_seconds_left = 2.5
└   ϵ = 0.0666
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.013
│   estimated_seconds_left = 1.3
└   ϵ = 0.0752
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.004379454192408792, 0.00595332477757471, 0.003651910111029044, 0.31481447457938266, 0.26903082409772766]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0035
│   estimated_seconds_left = 0.17
└   ϵ = 0.0568
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0034
└   estimated_seconds_left = 3.4
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.015
└   estimated_seconds_left = 14.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.012
└   estimated_seconds_left = 9.8
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.015
└   estimated_seconds_left = 10.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.014
└   estimated_seconds_left = 8.2
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.013
└   estimated_seconds_left = 6.5
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.012
└   estimated_seconds_left = 4.8
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.013
└   estimated_seconds_left = 3.9
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.012
└   estimated_seconds_left = 2.4
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.013
└   estimated_seconds_left = 1.3
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.063
│   estimated_seconds_left = 4.7
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0013
│   estimated_seconds_left = 0.032
└   ϵ = 0.00018
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03364780081752672, 0.10094298555091483]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.1
│   estimated_seconds_left = 4.9
└   ϵ = 0.000145
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.038716157932913726, 0.16875883164994465]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.12
│   estimated_seconds_left = 12.0
└   ϵ = 0.00358
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.025903905251595895, 0.16176697267481477]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.055
│   estimated_seconds_left = 11.0
└   ϵ = 0.00485
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.045
│   estimated_seconds_left = 4.5
└   ϵ = 0.00773
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.02714650573310061, 0.2412782199124602]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.017
│   estimated_seconds_left = 6.6
└   ϵ = 0.00743
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.031
│   estimated_seconds_left = 9.3
└   ϵ = 0.0107
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.023
│   estimated_seconds_left = 4.6
└   ϵ = 0.0178
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.02
│   estimated_seconds_left = 2.0
└   ϵ = 0.00542
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.022992442472642042, 0.2899141203343298]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.015
│   estimated_seconds_left = 0.74
└   ϵ = 0.00822
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.036
└   estimated_seconds_left = 36.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.02
└   estimated_seconds_left = 18.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.022
└   estimated_seconds_left = 18.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.022
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.022
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.02
└   estimated_seconds_left = 10.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.022
└   estimated_seconds_left = 8.8
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.024
└   estimated_seconds_left = 7.1
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.019
└   estimated_seconds_left = 3.7
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.019
└   estimated_seconds_left = 1.9
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000122
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
│   estimated_seconds_left = 0.41
└   ϵ = 0.000122
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00022
│   estimated_seconds_left = 0.0052
└   ϵ = 0.000178
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014155649171773662, 0.014144195461965823, 0.07470455335855243]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.058
│   estimated_seconds_left = 2.8
└   ϵ = 0.000155
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010019748546675073, 0.010002493825031324, 0.24818750001047332]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0031
│   estimated_seconds_left = 0.3
└   ϵ = 0.00889
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007092435525183539, 0.007075728088842948, 0.25385309015504026]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0031
│   estimated_seconds_left = 0.62
└   ϵ = 0.0194
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0067
│   estimated_seconds_left = 0.67
└   ϵ = 0.0394
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005075053795698318, 0.005010158651473834, 0.367957433744569]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0013
│   estimated_seconds_left = 0.53
└   ϵ = 0.0315
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0039
│   estimated_seconds_left = 1.2
└   ϵ = 0.0433
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0034
│   estimated_seconds_left = 0.67
└   ϵ = 0.0408
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0034
│   estimated_seconds_left = 0.34
└   ϵ = 0.0248
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.003625805212417035, 0.0035482916535554804, 0.25296235030215414]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00094
│   estimated_seconds_left = 0.046
└   ϵ = 0.0425
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.001
└   estimated_seconds_left = 1.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0044
└   estimated_seconds_left = 3.9
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0045
└   estimated_seconds_left = 3.6
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0044
└   estimated_seconds_left = 3.1
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0037
└   estimated_seconds_left = 2.2
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.0041
└   estimated_seconds_left = 2.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0041
└   estimated_seconds_left = 1.6
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.0033
└   estimated_seconds_left = 0.98
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0043
└   estimated_seconds_left = 0.87
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0043
└   estimated_seconds_left = 0.42
┌ Warning: Assignment to `bayesian_result` in soft scope is ambiguous because a global variable by the same name exists: `bayesian_result` will be treated as a new local. Disambiguate by using `local bayesian_result` to suppress this warning or `global bayesian_result` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqBayes/cBMiN/test/dynamicHMC.jl:66
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0059
│   estimated_seconds_left = 0.43
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0026
│   estimated_seconds_left = 0.063
└   ϵ = 0.00016
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014158147010309959, 0.014172198626844709, 0.014175934957950217, 0.014190743626937513, 0.09270328592173223, 0.038770781658678616]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.17
│   estimated_seconds_left = 8.3
└   ϵ = 9.27e-5
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010080637495096733, 0.0101573973961214, 0.010159868777903968, 0.010229298672959556, 0.23466319933664198, 0.24719721917009224]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.043
│   estimated_seconds_left = 4.3
└   ϵ = 0.0104
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007147043313675525, 0.007218109757374566, 0.0071996843944896185, 0.007301537246558638, 0.2189532275416031, 0.237999821648985]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.02
│   estimated_seconds_left = 4.1
└   ϵ = 0.0181
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.041
│   estimated_seconds_left = 4.0
└   ϵ = 0.0155
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005110958513074552, 0.0052017788355764585, 0.005205327894177969, 0.005349323268269844, 0.2742657645173117, 0.24571202296904496]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.033
│   estimated_seconds_left = 13.0
└   ϵ = 0.0277
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.026
│   estimated_seconds_left = 7.6
└   ϵ = 0.024
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.024
│   estimated_seconds_left = 4.8
└   ϵ = 0.0284
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.021
│   estimated_seconds_left = 2.1
└   ϵ = 0.0475
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0037669348039547383, 0.003986354097995609, 0.003987770729222948, 0.004153722141879498, 0.2934808793966715, 0.31430357700729133]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.011
│   estimated_seconds_left = 0.52
└   ϵ = 0.0384
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.011
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.018
└   estimated_seconds_left = 16.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.016
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.016
└   estimated_seconds_left = 11.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.017
└   estimated_seconds_left = 10.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.018
└   estimated_seconds_left = 9.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.015
└   estimated_seconds_left = 6.1
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.016
└   estimated_seconds_left = 4.8
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.017
└   estimated_seconds_left = 3.3
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.017
└   estimated_seconds_left = 1.7
Test Summary: | Pass  Broken  Total
DynamicHMC    |    8       2     10
1394.891318 seconds (850.57 M allocations: 48.230 GiB, 1.90% gc time)
One parameter case
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
bayesian_result = Object of type Chains, with data of type 250×14×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, σ[1]

2-element Vector{MCMCChains.ChainDataFrame}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5007  0.0031    0.0002  0.0001  326.4016  0.9963
        σ[1]  0.1485  0.0358    0.0023  0.0011   59.9271  1.0022

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4949  1.4984  1.5006  1.5026  1.5069
        σ[1]  0.0923  0.1191  0.1450  0.1706  0.2316

┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.018750000000000003
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Info: Found initial step size
└   ϵ = 0.00625
Four parameter case
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
bayesian_result = Object of type Chains, with data of type 250×17×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, b, c, d, σ[1]

2-element Vector{MCMCChains.ChainDataFrame}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5003  0.0045    0.0003  0.0000  344.5275  0.9961
           b  1.0011  0.0090    0.0006  0.0008  234.7682  1.0009
           c  2.9999  0.0097    0.0006  0.0002  305.4726  0.9971
           d  0.9999  0.0070    0.0004  0.0003  411.1933  1.0014
        σ[1]  0.1566  0.0373    0.0024  0.0006   94.6467  1.0047

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4916  1.4973  1.5002  1.5034  1.5090
           b  0.9835  0.9949  1.0013  1.0078  1.0185
           c  2.9821  2.9932  2.9991  3.0066  3.0199
           d  0.9868  0.9955  1.0000  1.0045  1.0129
        σ[1]  0.1008  0.1301  0.1498  0.1744  0.2387

Steady state problem
┌ Info: Found initial step size
└   ϵ = 0.45
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, false, false, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
Test Summary: | Pass  Total
Turing        |   12     12
673.181299 seconds (573.73 M allocations: 32.528 GiB, 5.14% gc time)
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:27
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:27
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:45
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:45
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:88
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:88
Test Summary: | Pass  Total
ABC           |   12     12
 46.331071 seconds (90.53 M allocations: 3.845 GiB, 4.63% gc time)
2114.490776 seconds (1.51 G allocations: 84.605 GiB, 2.99% gc time)
    Testing DiffEqBayes tests passed 
