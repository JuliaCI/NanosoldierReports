Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_TMt9gi/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_TMt9gi/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.900244 seconds (1.34 M allocations: 70.812 MiB, 6.49% gc time)
Running: chebyshev_quadrature with k=1
  1.887875 seconds (2.24 M allocations: 128.643 MiB, 2.51% gc time)
Running: chebyshev_quadrature with k=2
  0.324815 seconds (425.06 k allocations: 24.387 MiB)
Running: chebyshev_quadrature with k=3
  0.342164 seconds (544.93 k allocations: 29.883 MiB, 4.30% gc time)
Running: chebyshev_quadrature with k=4
  0.294696 seconds (487.80 k allocations: 26.404 MiB)
Running: jacobi_quadrature with α=β=1
 42.977513 seconds (39.37 M allocations: 3.137 GiB, 10.50% gc time)
Running: laguerre_quadrature with k=1
  2.791206 seconds (3.33 M allocations: 185.655 MiB, 2.89% gc time)
Running: legendre_quadrature
  0.282343 seconds (215.02 k allocations: 12.322 MiB)
Running: lobatto_quadrature
  0.397443 seconds (343.60 k allocations: 20.578 MiB)
Running: radau_quadrature
  0.288479 seconds (325.93 k allocations: 19.580 MiB, 10.66% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 85.003485 seconds (100.02 M allocations: 1.491 GiB, 0.41% gc time)
Running: rectangle_rule_midpoint.
  0.165305 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 84.859384 seconds (100.02 M allocations: 1.491 GiB, 0.39% gc time)
Running: rombergs_method
  0.529443 seconds (752.66 k allocations: 43.310 MiB, 5.80% gc time)
Running: simpsons_rule
  0.036775 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.092751 seconds (113.12 k allocations: 5.975 MiB)
Running: trapezoidal_rule
  0.297160 seconds (1.52 M allocations: 25.798 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.081610 seconds (32.63 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.417220 seconds (275.33 k allocations: 13.958 MiB)
Running: chebyshev_quadrature with k=2
  0.194295 seconds (115.72 k allocations: 3.793 MiB, 16.95% gc time)
Running: chebyshev_quadrature with k=3
  0.153652 seconds (105.07 k allocations: 3.639 MiB)
Running: chebyshev_quadrature with k=4
  0.159760 seconds (87.68 k allocations: 3.285 MiB)
Running: jacobi_quadrature with α=β=1
  2.734237 seconds (536.08 k allocations: 163.492 MiB, 3.99% gc time)
Running: legendre_quadrature
  0.162242 seconds (62.20 k allocations: 3.468 MiB, 8.44% gc time)
Running: lobatto_quadrature
  0.020709 seconds (16.68 k allocations: 1.028 MiB)
Running: radau_quadrature
  0.020229 seconds (16.67 k allocations: 1.028 MiB)
Running: rectangle_rule_left
 32.598758 seconds (471.41 M allocations: 7.025 GiB, 4.16% gc time)
Running: rectangle_rule_midpoint
  0.000050 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.551299 seconds (476.96 M allocations: 7.107 GiB, 4.22% gc time)
Running: rombergs_method
  0.408577 seconds (360.19 k allocations: 20.308 MiB, 2.01% gc time)
Running: simpsons_rule
  0.000035 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.064401 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.057335 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029230 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.104370 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.106854 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.118923 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.112115 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.380979 seconds (379.01 k allocations: 19.794 MiB, 9.06% gc time)
Running: legendre_quadrature
  0.062171 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000096 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000042 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000685 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000411 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000577 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.075479 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000046 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.030808 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022907 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.059287 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.182830 seconds (240.25 k allocations: 13.487 MiB)
Running: chebyshev_quadrature with k=2
  0.259422 seconds (295.45 k allocations: 16.590 MiB, 10.85% gc time)
Running: chebyshev_quadrature with k=3
  0.270200 seconds (275.41 k allocations: 14.984 MiB)
Running: chebyshev_quadrature with k=4
  0.204546 seconds (275.44 k allocations: 14.879 MiB)
Running: jacobi_quadrature with α=β=1
  3.217638 seconds (465.77 k allocations: 164.227 MiB, 4.13% gc time)
Running: legendre_quadrature
  0.146930 seconds (193.00 k allocations: 11.107 MiB)
Running: lobatto_quadrature
  0.213849 seconds (204.21 k allocations: 11.810 MiB)
Running: radau_quadrature
  0.204083 seconds (204.21 k allocations: 11.829 MiB, 10.56% gc time)
Running: rectangle_rule_left
  1.172112 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.030995 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.224326 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.122227 seconds (139.91 k allocations: 8.059 MiB)
Running: simpsons_rule
  0.028680 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.036834 seconds (44.65 k allocations: 2.787 MiB)
Running: trapezoidal_rule
  0.027340 seconds (45.20 k allocations: 1.824 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.044897 seconds (101.41 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.243976 seconds (247.35 k allocations: 13.587 MiB)
Running: chebyshev_quadrature with k=2
  0.285735 seconds (303.07 k allocations: 16.583 MiB, 7.68% gc time)
Running: chebyshev_quadrature with k=3
  0.236605 seconds (282.82 k allocations: 15.006 MiB)
Running: chebyshev_quadrature with k=4
  0.222835 seconds (282.86 k allocations: 15.011 MiB, 9.60% gc time)
Running: hermite_quadrature with k=2
 15.161532 seconds (22.12 M allocations: 1.147 GiB, 7.31% gc time)
Running: jacobi_quadrature with α=β=1
  0.475237 seconds (475.81 k allocations: 50.445 MiB, 13.24% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.226884 seconds (288.35 k allocations: 15.898 MiB)
Running: legendre_quadrature
  0.188587 seconds (200.06 k allocations: 11.455 MiB, 17.90% gc time)
Running: lobatto_quadrature
  0.202770 seconds (225.72 k allocations: 37.627 MiB)
Running: radau_quadrature
  0.235767 seconds (222.32 k allocations: 30.306 MiB, 9.15% gc time)
Running: rectangle_rule_left
  0.029377 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.028899 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026163 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.132095 seconds (142.73 k allocations: 8.122 MiB)
Running: simpsons_rule
  0.045519 seconds (41.25 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.043409 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.031450 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043198 seconds (61.51 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.223594 seconds (242.48 k allocations: 13.356 MiB, 11.49% gc time)
Running: chebyshev_quadrature with k=2
  0.242066 seconds (297.80 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.237818 seconds (277.68 k allocations: 14.769 MiB)
Running: chebyshev_quadrature with k=4
  0.234811 seconds (277.71 k allocations: 14.784 MiB, 11.75% gc time)
Running: hermite_quadrature with k=2
  0.139829 seconds (177.71 k allocations: 10.157 MiB)
Running: jacobi_quadrature with α=β=1
 10.072271 seconds (468.37 k allocations: 1.176 GiB, 12.73% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.233352 seconds (283.21 k allocations: 15.693 MiB)
Running: legendre_quadrature
  0.176088 seconds (195.23 k allocations: 11.220 MiB)
Running: lobatto_quadrature
  0.220889 seconds (216.08 k allocations: 23.332 MiB)
Running: radau_quadrature
  0.377042 seconds (215.23 k allocations: 21.263 MiB, 50.57% gc time)
Running: rectangle_rule_left
  0.027918 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.025658 seconds (26.65 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.029503 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.134933 seconds (138.20 k allocations: 7.925 MiB)
Running: simpsons_rule
  0.032671 seconds (33.49 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.036358 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.027586 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.038581 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.215914 seconds (240.81 k allocations: 13.568 MiB)
Running: chebyshev_quadrature with k=2
  0.236095 seconds (296.03 k allocations: 16.656 MiB)
Running: chebyshev_quadrature with k=3
  0.380305 seconds (276.01 k allocations: 14.981 MiB, 44.64% gc time)
Running: chebyshev_quadrature with k=4
  0.216553 seconds (276.04 k allocations: 14.813 MiB)
Running: jacobi_quadrature with α=β=1
  2.457695 seconds (466.42 k allocations: 195.265 MiB, 12.16% gc time)
Running: legendre_quadrature
  0.164884 seconds (193.56 k allocations: 11.138 MiB, 8.54% gc time)
Running: lobatto_quadrature
  0.159479 seconds (204.78 k allocations: 11.916 MiB)
Running: radau_quadrature
  0.168634 seconds (204.78 k allocations: 11.846 MiB)
Running: rectangle_rule_left
  0.309514 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.033503 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.106355 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.145041 seconds (151.28 k allocations: 8.811 MiB, 11.97% gc time)
Running: simpsons_rule
  0.031591 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.047220 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.029450 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032359 seconds (33.23 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.188467 seconds (241.38 k allocations: 13.511 MiB)
Running: chebyshev_quadrature with k=2
  0.229450 seconds (296.64 k allocations: 16.570 MiB)
Running: chebyshev_quadrature with k=3
  0.227815 seconds (276.55 k allocations: 14.964 MiB, 8.31% gc time)
Running: chebyshev_quadrature with k=4
  0.250160 seconds (276.58 k allocations: 14.981 MiB)
Running: jacobi_quadrature with α=β=1
  2.390347 seconds (467.08 k allocations: 149.921 MiB, 6.89% gc time)
Running: legendre_quadrature
  0.136786 seconds (194.13 k allocations: 11.150 MiB)
Running: lobatto_quadrature
  0.167956 seconds (205.35 k allocations: 11.859 MiB)
Running: radau_quadrature
  0.161278 seconds (205.34 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  1.185782 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.028464 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.174213 seconds (18.61 k allocations: 1.124 MiB)
Running: rombergs_method
  0.212177 seconds (141.21 k allocations: 8.151 MiB, 30.48% gc time)
Running: simpsons_rule
  0.038976 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.034399 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.026035 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.160303 seconds (152.85 k allocations: 9.083 MiB)
Running: chebyshev_quadrature with k=1
  0.151298 seconds (91.24 k allocations: 3.295 MiB)
Running: chebyshev_quadrature with k=2
  0.168685 seconds (127.01 k allocations: 3.988 MiB)
Running: chebyshev_quadrature with k=3
  0.167200 seconds (115.58 k allocations: 3.818 MiB)
Running: chebyshev_quadrature with k=4
  0.166587 seconds (95.11 k allocations: 3.411 MiB)
Running: jacobi_quadrature with α=β=1
  2.941635 seconds (509.85 k allocations: 169.310 MiB, 10.02% gc time)
Running: legendre_quadrature
  0.103169 seconds (38.34 k allocations: 2.107 MiB)
Running: lobatto_quadrature
  0.000148 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000113 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 49.543223 seconds (590.00 M allocations: 8.792 GiB, 2.76% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.495600 seconds (592.75 M allocations: 8.833 GiB, 2.65% gc time)
Running: rombergs_method
  0.140284 seconds (41.88 k allocations: 2.257 MiB)
Running: simpsons_rule
  0.000039 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.033469 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.025023 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.769725 seconds (629.34 M allocations: 9.388 GiB, 4.06% gc time)
Running: chebyshev_quadrature with k=1
  0.519987 seconds (439.10 k allocations: 24.318 MiB, 6.63% gc time)
Running: chebyshev_quadrature with k=2
 14.636295 seconds (496.46 k allocations: 4.042 GiB, 3.78% gc time)
Running: chebyshev_quadrature with k=3
  6.150524 seconds (290.50 k allocations: 1.643 GiB, 4.39% gc time)
Running: chebyshev_quadrature with k=4
  8.422819 seconds (290.54 k allocations: 2.262 GiB, 2.66% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 65.095844 seconds (505.16 k allocations: 13.255 GiB, 3.41% gc time)
Running: legendre_quadrature.
  5.917296 seconds (232.79 k allocations: 1.976 GiB, 1.85% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 60.954502 seconds (8.24 M allocations: 13.384 GiB, 3.64% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.571126 seconds (7.24 M allocations: 13.369 GiB, 2.49% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.307405 seconds (23.35 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.240182 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.514392 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.282402 seconds (456.56 k allocations: 153.694 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.291198 seconds (600.04 M allocations: 8.943 GiB, 8.51% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.739544 seconds (600.05 M allocations: 8.944 GiB, 7.83% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.358288 seconds (600.04 M allocations: 8.943 GiB, 8.34% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065102 seconds (182.51 k allocations: 4.518 MiB)
Running: chebyshev_quadrature with k=1
  0.214503 seconds (257.97 k allocations: 14.018 MiB)
Running: chebyshev_quadrature with k=2
  0.207071 seconds (284.13 k allocations: 15.178 MiB)
Running: chebyshev_quadrature with k=3
  0.191934 seconds (260.62 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=4
  0.190300 seconds (260.65 k allocations: 13.452 MiB)
Running: jacobi_quadrature with α=β=1
  0.356376 seconds (405.38 k allocations: 35.863 MiB)
Running: laguerre_quadrature with k=2
  0.179789 seconds (187.97 k allocations: 10.871 MiB)
Running: legendre_quadrature
  0.116207 seconds (151.74 k allocations: 8.407 MiB)
Running: lobatto_quadrature
  0.037072 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.033687 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.053737 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.044768 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.050407 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.219848 seconds (170.77 k allocations: 9.720 MiB)
Running: simpsons_rule
  0.002122 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.049305 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.183263 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002068 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.128721 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.203545 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.137513 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.178931 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
 11.050297 seconds (402.18 k allocations: 906.566 MiB, 3.84% gc time)
Running: legendre_quadrature
  0.081450 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000177 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000137 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.483822 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000465 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.561561 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082159 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000039 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000896 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000959 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.108351 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.105268 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.112633 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.164389 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.744065 seconds (388.46 k allocations: 253.809 MiB)
Running: legendre_quadrature
  0.082784 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000115 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000056 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.497151 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001231 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.461757 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.086748 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000076 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001936 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
