Julia Version 1.6.0-DEV.633
Commit 03e1a89ff1 (2020-08-13 14:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_F6mzGz/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_F6mzGz/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21717750474573785
curgen: 20 fitness: 0.21721719014579502
curgen: 30 fitness: 0.21722972529096565
curgen: 40 fitness: 0.21722972529096565
curgen: 50 fitness: 0.21722972529096565
CoordinateCreature{Vector{Float64}}([0.22225153275231477], -0.21722972529096565) 0.22225153275231477 -0.21722972529096565
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257943710167763
curgen: 100 fitness: 3.258174914878567
curgen: 150 fitness: 3.2583813796469965
curgen: 200 fitness: 3.2583877110170176
curgen: 250 fitness: 3.2584194166914155
curgen: 300 fitness: 3.2584194166914155
curgen: 350 fitness: 3.258423227955748
curgen: 400 fitness: 3.258423227955748
curgen: 450 fitness: 3.2584511505593325
curgen: 500 fitness: 3.258451231611607
CoordinateCreature{Vector{Float64}}([-0.22246561342423748, -0.22277362579151824, -0.222610254721234, 0.22277781009176717, 0.22224715267261239, 0.22253596335622144, -0.22244255594154863, 0.22327958348223595, -0.22191620843853935, -0.22271164526021348, -0.2225371961667753, -0.22264187172010155, 0.22252515625222427, -0.22264700918383573, -0.22262358482657593], -3.258451231611607) [-0.22246561342423748, -0.22277362579151824, -0.222610254721234, 0.22277781009176717, 0.22224715267261239, 0.22253596335622144, -0.22244255594154863, 0.22327958348223595, -0.22191620843853935, -0.22271164526021348, -0.2225371961667753, -0.22264187172010155, 0.22252515625222427, -0.22264700918383573, -0.22262358482657593] -3.258451231611607
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004246765758352922
curgen: 100 fitness: -0.004159857311549331
curgen: 150 fitness: -0.003914742165648022
curgen: 200 fitness: -0.0035998760003508323
curgen: 250 fitness: -0.0011555456577525547
curgen: 300 fitness: -0.0011555456577525547
curgen: 350 fitness: -0.0007544770719221106
curgen: 400 fitness: -0.0007544770719221106
curgen: 450 fitness: -0.0007399113664234847
curgen: 500 fitness: -0.0007399113664234847
CoordinateCreature{Vector{Float64}}([0.00043733273236087997, 0.00025247270491627043, 0.0006237279270282503, -0.0008796560835129157, -0.0004791795232533809, -0.00028785124645760757, -0.0002563044426832522, -0.0005934812630909008, -0.00021771190527255992, -0.00011507899369323036, 0.00016615933177503462, -2.979196405599122e-5, 0.000692467543805609, 0.0001390508694203937, -4.810165912622614e-5], 0.000543299004363007) [0.00043733273236087997, 0.00025247270491627043, 0.0006237279270282503, -0.0008796560835129157, -0.0004791795232533809, -0.00028785124645760757, -0.0002563044426832522, -0.0005934812630909008, -0.00021771190527255992, -0.00011507899369323036, 0.00016615933177503462, -2.979196405599122e-5, 0.000692467543805609, 0.0001390508694203937, -4.810165912622614e-5] 0.000543299004363007
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
