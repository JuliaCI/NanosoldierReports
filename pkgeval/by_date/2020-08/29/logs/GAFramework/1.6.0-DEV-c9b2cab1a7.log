Julia Version 1.6.0-DEV.754
Commit c9b2cab1a7 (2020-08-28 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FileIO ────── v1.4.2
  Installed GAFramework ─ v0.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.2
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_I3oZXT/Project.toml`
  [5789e2e9] FileIO v1.4.2
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_I3oZXT/Manifest.toml`
  [5789e2e9] FileIO v1.4.2
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723327987895386
curgen: 20 fitness: 0.21723327987895386
curgen: 30 fitness: 0.21723327987895386
curgen: 40 fitness: 0.21723327987895386
curgen: 50 fitness: 0.21723327987895386
CoordinateCreature{Vector{Float64}}([0.22245948756823927], -0.21723327987895386) 0.22245948756823927 -0.21723327987895386
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2572426115799527
curgen: 100 fitness: 3.257807358027317
curgen: 150 fitness: 3.2579476380989907
curgen: 200 fitness: 3.2580845275385095
curgen: 250 fitness: 3.258156296757334
curgen: 300 fitness: 3.258196035128406
curgen: 350 fitness: 3.258201691373491
curgen: 400 fitness: 3.258218588462102
curgen: 450 fitness: 3.258272203015774
curgen: 500 fitness: 3.258286981842981
CoordinateCreature{Vector{Float64}}([0.22281796828908773, -0.22332250107800375, -0.22240109435628208, 0.2224324772236095, -0.22276963690227722, -0.22244871924772558, 0.22239831592347525, 0.22255936448010522, 0.22259466728040883, 0.22293171126624126, -0.22233834946985093, -0.22249537168291209, -0.2217833629686959, -0.22241230468820394, -0.22438110126356933], -3.258286981842981) [0.22281796828908773, -0.22332250107800375, -0.22240109435628208, 0.2224324772236095, -0.22276963690227722, -0.22244871924772558, 0.22239831592347525, 0.22255936448010522, 0.22259466728040883, 0.22293171126624126, -0.22233834946985093, -0.22249537168291209, -0.2217833629686959, -0.22241230468820394, -0.22438110126356933] -3.258286981842981
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0036910141698740517
curgen: 100 fitness: -0.0036910141698740517
curgen: 150 fitness: -0.0033340147146532217
curgen: 200 fitness: -0.0033340147146532217
curgen: 250 fitness: -0.0031250904451098904
curgen: 300 fitness: -0.0030490881786988666
curgen: 350 fitness: -0.002804063646578925
curgen: 400 fitness: -0.0026673422066778585
curgen: 450 fitness: -0.0026336701898230785
curgen: 500 fitness: -0.0018765020673185973
CoordinateCreature{Vector{Float64}}([-0.0004710310608158041, 0.00018984484454734373, -0.0002869482574583326, 0.0007589446596321727, 3.025964441139245e-5, 0.001018875996807773, -8.349586355649777e-5, -0.0014633006255846384, 0.0002474857330316757, -0.001146074728250339, 0.0019225620791418997, 2.9722259356996855e-5, -5.909941193108187e-5, -0.0003768219428703899, -0.000371186018750732], 0.0018765020673185973) [-0.0004710310608158041, 0.00018984484454734373, -0.0002869482574583326, 0.0007589446596321727, 3.025964441139245e-5, 0.001018875996807773, -8.349586355649777e-5, -0.0014633006255846384, 0.0002474857330316757, -0.001146074728250339, 0.0019225620791418997, 2.9722259356996855e-5, -5.909941193108187e-5, -0.0003768219428703899, -0.000371186018750732] 0.0018765020673185973
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
