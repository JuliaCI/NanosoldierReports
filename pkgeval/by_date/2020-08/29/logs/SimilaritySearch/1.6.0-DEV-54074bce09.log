Julia Version 1.6.0-DEV.767
Commit 54074bce09 (2020-08-29 17:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed DataAPI ──────────── v1.3.0
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.4
  Installed Compat ───────────── v3.14.0
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.0
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed Parsers ──────────── v1.0.10
  Installed DataStructures ───── v0.18.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.2
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.4
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_QAzaK2/Project.toml`
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_QAzaK2/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(17, 0.0044716597f0), Item(49, 0.053224206f0), Item(46, 0.06802368f0), Item(45, 0.08366716f0)])
Vsorted = Item[Item(17, 0.0044716597f0), Item(49, 0.053224206f0), Item(46, 0.06802368f0), Item(45, 0.08366716f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004386186599731445, 0.004599936803181966, 301.0, 50.16007958725095))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005506189664204916, 0.005560731887817383, 301.0, 73.34721231460571))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004950873057047526, 0.006190101305643718, 301.0, 40.54635775089264))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005126587549845378, 0.005266435941060384, 301.0, 9.021519085858017))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0044202089309692385, 0.0064560333887736, 301.0, 45.32774044945836))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001279274622599284, 0.00012656052907307944, 301.0, 181.01525375247002))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.090799967447917e-5, 0.01276412804921468, 300.0, 25.99495449056849)
p = PerformanceResult(1.0, 1.0, 1.0, 4.853407541910807e-5, 2.4930636088053385e-5, 300.0, 25.99495449056849)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0042282501856486, 0.0035622040430704754, 300.0, 1.359908193478077)
p = PerformanceResult(1.0, 1.0, 1.0, 5.925496419270833e-5, 2.117156982421875e-5, 300.0, 1.359908193478077)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.090799967447917e-5, 0.01276412804921468, 300.0, 25.99495449056849), PerformanceResult(1.0, 1.0, 1.0, 4.853407541910807e-5, 2.4930636088053385e-5, 300.0, 25.99495449056849), PerformanceResult(1.0, 1.0, 1.0, 0.0042282501856486, 0.0035622040430704754, 300.0, 1.359908193478077), PerformanceResult(1.0, 1.0, 1.0, 5.925496419270833e-5, 2.117156982421875e-5, 300.0, 1.359908193478077))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 131.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007755263646443685, 0.003916700681050618, 347.8666666666667, 28794.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.010140244166056316, 0.00360716978708903, 302.3666666666667, 6973.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.235571543375651e-5, 1.0704994201660156e-5, 89.83333333333333, 50.15535684302449))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2109349568684896e-5, 1.2373924255371093e-5, 81.86666666666666, 73.34206676483154))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.375443776448568e-5, 1.4901161193847656e-5, 83.96666666666667, 40.50459635257721))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.344086964925131e-5, 0.00015810330708821614, 89.2, 45.29157714918256))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8133333333333331, 0.8133333333333331, 0.8133333333333331, 4.733403523763021e-5, 0.00012740294138590495, 69.26666666666667, 191.37731939554214))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-29T21:30:40.728
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.981, 0.981, 0.981, 3.0193328857421875e-5, 2.810955047607422e-5, 168.06, 48.69594134192448))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 3.0355453491210936e-5, 2.1390914916992187e-5, 173.51, 0.0))
*** advance 1 from 1000; 2020-08-29T21:30:41.605
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9010000000000001, 0.9010000000000001, 0.9010000000000001, 2.181529998779297e-5, 2.3250579833984374e-5, 153.87, 76.04719439288601))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0949840545654298e-5, 1.8579959869384767e-5, 157.79, 0.0))
*** advance 1 from 1000; 2020-08-29T21:30:42.404
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.88, 0.88, 0.88, 2.5081634521484376e-5, 3.221035003662109e-5, 153.16, 41.03774201637134))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.3951530456542967e-5, 2.8619766235351564e-5, 157.06, 0.0))
*** advance 1 from 1000; 2020-08-29T21:30:43.108
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9160000000000003, 0.9160000000000003, 0.9160000000000003, 0.00010119199752807617, 0.0005129408836364746, 152.25, 44.61343212390784))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010170459747314453, 0.0005515503883361816, 155.81, 0.0))
*** advance 1 from 1000; 2020-08-29T21:30:43.815
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9670000000000003, 0.9670000000000003, 0.9670000000000003, 0.00010706901550292968, 0.0004664993286132813, 167.17, 191.13854667544365))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00010799884796142579, 0.000523369312286377, 172.37, 0.0))
*** advance 1 from 1000; 2020-08-29T21:30:45.321
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.981, 0.981, 0.981, 3.7741661071777346e-5, 7.467985153198243e-5, 168.06, 48.70382058212999))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 5.684852600097656e-5, 8.455038070678711e-5, 173.51, 0.014853541157208383))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:47.575
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7489999999999998, 0.7489999999999998, 0.7489999999999998, 0.0018496584892272949, 0.0001142406463623047, 204.75, 194.23333525657654))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:48.840
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7319999999999998, 0.7319999999999998, 0.7319999999999998, 0.002881042957305908, 7.822990417480469e-5, 207.02, 111.29285965114832))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:50.112
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.5979999999999999, 0.5979999999999999, 0.5979999999999999, 0.002493593692779541, 0.0001731395721435547, 256.16, 0.5))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:51.308
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9470000000000002, 0.9470000000000002, 0.9470000000000002, 0.0014966797828674316, 2.285003662109375e-5, 220.86, 600.4000201225281))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:52.300
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.625, 0.625, 0.625, 0.0019093847274780273, 0.0006553101539611817, 256.29, 2282.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:53.369
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.391, 0.391, NaN, 0.0019293904304504394, 0.00029102087020874026, 251.6, 3666.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-29T21:30:54.475
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6169999999999998, 0.6169999999999998, 0.6169999999999998, 0.0020873308181762694, 6.515979766845703e-5, 245.06, 2315.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.074626865671642, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.921875,"f1":0.9578697344322348,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":2.820044755935669e-6,"evaluations":8.375,"distances_sum":580.0611357092857}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.061751152073733, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9645661630036634,"seconds":5.582347512245178e-6,"exhaustive_search_seconds":2.820044755935669e-6,"evaluations":8.4765625,"distances_sum":590.6217276751995}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.074626865671642,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9578697344322348,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":2.820044755935669e-6,"evaluations":8.375,"distances_sum":580.0611357092857}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.074626865671642,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9578697344322348,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":2.820044755935669e-6,"evaluations":8.375,"distances_sum":580.0611357092857}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.074626865671642,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.921875,"f1":0.9578697344322348,"seconds":5.645677447319031e-6,"exhaustive_search_seconds":2.820044755935669e-6,"evaluations":8.375,"distances_sum":580.0611357092857}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.1591412506389505,"state":{"restarts":6},"perf":{"precision":0.9071180555555546,"recall":0.9071180555555546,"f1":0.9071180555555546,"seconds":2.1534040570259094e-5,"exhaustive_search_seconds":7.491558790206909e-6,"evaluations":45.8515625,"distances_sum":294.41154699772596}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.1591412506389505,"state":{"restarts":6},"perf":{"precision":0.9071180555555546,"recall":0.9071180555555546,"f1":0.9071180555555546,"seconds":2.1534040570259094e-5,"exhaustive_search_seconds":7.491558790206909e-6,"evaluations":45.8515625,"distances_sum":294.41154699772596}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8480902777777762, conf: {"restarts":1}, perf: {"precision":0.8480902777777762,"recall":0.8480902777777762,"f1":0.8480902777777762,"seconds":2.899765968322754e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":61.5546875,"distances_sum":126.36217280849814}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.850694444444443, conf: {"restarts":4}, perf: {"precision":0.850694444444443,"recall":0.850694444444443,"f1":0.850694444444443,"seconds":3.5997480154037476e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":84.953125,"distances_sum":126.33736946433783}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8645833333333321, conf: {"restarts":5}, perf: {"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":3.875233232975006e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":93.9453125,"distances_sum":125.84789181128144}, best_list's length: 4, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8645833333333321,"state":{"restarts":5},"perf":{"precision":0.8645833333333321,"recall":0.8645833333333321,"f1":0.8645833333333321,"seconds":3.875233232975006e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":93.9453125,"distances_sum":125.84789181128144}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999986, conf: {"restarts":13}, perf: {"precision":0.8749999999999986,"recall":0.8749999999999986,"f1":0.8749999999999986,"seconds":5.639903247356415e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":149.078125,"distances_sum":125.25676787644625}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8689236111111096, conf: {"restarts":11}, perf: {"precision":0.8689236111111096,"recall":0.8689236111111096,"f1":0.8689236111111096,"seconds":4.8397108912467957e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":131.1484375,"distances_sum":125.67848685383797}, best_list's length: 6, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8749999999999986,"state":{"restarts":13},"perf":{"precision":0.8749999999999986,"recall":0.8749999999999986,"f1":0.8749999999999986,"seconds":5.639903247356415e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":149.078125,"distances_sum":125.25676787644625}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8749999999999986,"state":{"restarts":13},"perf":{"precision":0.8749999999999986,"recall":0.8749999999999986,"f1":0.8749999999999986,"seconds":5.639903247356415e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":149.078125,"distances_sum":125.25676787644625}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8749999999999986,"state":{"restarts":13},"perf":{"precision":0.8749999999999986,"recall":0.8749999999999986,"f1":0.8749999999999986,"seconds":5.639903247356415e-5,"exhaustive_search_seconds":2.7781352400779724e-5,"evaluations":149.078125,"distances_sum":125.25676787644625}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":8}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":9.692460298538208e-5,"exhaustive_search_seconds":0.0005280394107103348,"evaluations":185.3359375,"distances_sum":56.7017240091227}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8593749999999989,"state":{"restarts":8},"perf":{"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":9.692460298538208e-5,"exhaustive_search_seconds":0.0005280394107103348,"evaluations":185.3359375,"distances_sum":56.7017240091227}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8593749999999989,"state":{"restarts":8},"perf":{"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":9.692460298538208e-5,"exhaustive_search_seconds":0.0005280394107103348,"evaluations":185.3359375,"distances_sum":56.7017240091227}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(8), SatNeighborhood(32), 2020-08-29T21:31:02.977
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(796, 0.03824802f0), Item(7607, 0.04590129f0), Item(1603, 0.050879955f0), Item(6393, 0.05331845f0), Item(8271, 0.05399935f0), Item(5065, 0.05798789f0), Item(669, 0.060391538f0), Item(5624, 0.060424365f0), Item(2841, 0.06717773f0), Item(6072, 0.06765092f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0387736699729486, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9748543123543129,"seconds":6.588175892829895e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.6640625,"distances_sum":605.2816118896008}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0736253494874184, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.9228515625,"f1":0.954676573426574,"seconds":8.779019117355347e-5,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3828125,"distances_sum":573.4959533512592}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.061751152073733, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.9345703125,"f1":0.9628777472527476,"seconds":7.0016831159591675e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.4765625,"distances_sum":584.4254629015923}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0736253494874184,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.9228515625,"f1":0.954676573426574,"seconds":8.779019117355347e-5,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3828125,"distances_sum":573.4959533512592}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0816901408450703, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9507726648351651,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":569.823363751173}, best_list's length: 6, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0816901408450703,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9507726648351651,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":569.823363751173}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.0816901408450703,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.9150390625,"f1":0.9507726648351651,"seconds":7.040798664093018e-6,"exhaustive_search_seconds":1.562759280204773e-6,"evaluations":8.3203125,"distances_sum":569.823363751173}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.6944503508398894, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":1.977197825908661e-5,"exhaustive_search_seconds":7.41519033908844e-6,"evaluations":36.7421875,"distances_sum":278.2237382978201}, best_list's length: 2, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.1005627599706385, conf: {"bsize":2}, perf: {"precision":0.9435763888888882,"recall":0.9435763888888882,"f1":0.9435763888888882,"seconds":1.4862045645713806e-5,"exhaustive_search_seconds":7.41519033908844e-6,"evaluations":31.9296875,"distances_sum":280.7030643969774}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.106643785241481, conf: {"bsize":3}, perf: {"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.3938173651695251e-5,"exhaustive_search_seconds":7.41519033908844e-6,"evaluations":31.8671875,"distances_sum":279.1178553253412}, best_list's length: 4, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.106643785241481,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.3938173651695251e-5,"exhaustive_search_seconds":7.41519033908844e-6,"evaluations":31.8671875,"distances_sum":279.1178553253412}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.106643785241481,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.3938173651695251e-5,"exhaustive_search_seconds":7.41519033908844e-6,"evaluations":31.8671875,"distances_sum":279.1178553253412}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.106643785241481,"state":{"bsize":3},"perf":{"precision":0.9730902777777772,"recall":0.9730902777777772,"f1":0.9730902777777772,"seconds":1.3938173651695251e-5,"exhaustive_search_seconds":7.41519033908844e-6,"evaluations":31.8671875,"distances_sum":279.1178553253412}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.276985743380855,"state":{"bsize":3},"perf":{"precision":0.977430555555555,"recall":0.977430555555555,"f1":0.977430555555555,"seconds":2.6181340217590332e-5,"exhaustive_search_seconds":2.6827678084373474e-5,"evaluations":61.375,"distances_sum":117.00336162559688}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.276985743380855,"state":{"bsize":3},"perf":{"precision":0.977430555555555,"recall":0.977430555555555,"f1":0.977430555555555,"seconds":2.6181340217590332e-5,"exhaustive_search_seconds":2.6827678084373474e-5,"evaluations":61.375,"distances_sum":117.00336162559688}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.08503375559432, conf: {"bsize":5}, perf: {"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":0.00010077469050884247,"exhaustive_search_seconds":0.000501999631524086,"evaluations":102.9921875,"distances_sum":53.97495254036039}, best_list's length: 3, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.49036544850499, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":6.830133497714996e-5,"exhaustive_search_seconds":0.000501999631524086,"evaluations":105.8203125,"distances_sum":53.967716629616916}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.08503375559432,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":0.00010077469050884247,"exhaustive_search_seconds":0.000501999631524086,"evaluations":102.9921875,"distances_sum":53.97495254036039}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.08503375559432,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":0.00010077469050884247,"exhaustive_search_seconds":0.000501999631524086,"evaluations":102.9921875,"distances_sum":53.97495254036039}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.08503375559432,"state":{"bsize":5},"perf":{"precision":0.9973958333333333,"recall":0.9973958333333333,"f1":0.9973958333333333,"seconds":0.00010077469050884247,"exhaustive_search_seconds":0.000501999631524086,"evaluations":102.9921875,"distances_sum":53.97495254036039}}, n: 9999
added n=10000, neighborhood=6, BeamSearch(5), SatNeighborhood(32), 2020-08-29T21:31:07.398
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7185, 0.03799931f0), Item(2901, 0.049086012f0), Item(3159, 0.056850288f0), Item(6662, 0.061652966f0), Item(1586, 0.06392073f0), Item(3294, 0.06834044f0), Item(707, 0.07021291f0), Item(9416, 0.071290344f0), Item(3011, 0.07372849f0), Item(3605, 0.077749215f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
