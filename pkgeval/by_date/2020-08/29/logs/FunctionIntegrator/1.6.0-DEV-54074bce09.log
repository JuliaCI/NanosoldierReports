Julia Version 1.6.0-DEV.767
Commit 54074bce09 (2020-08-29 17:34 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [fa267f1f] + TOML
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_neDnoE/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_neDnoE/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [fa267f1f] TOML
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.087801 seconds (1.43 M allocations: 76.277 MiB, 10.28% gc time)
Running: chebyshev_quadrature with k=1
  1.706741 seconds (2.24 M allocations: 128.828 MiB, 2.67% gc time)
Running: chebyshev_quadrature with k=2
  0.262277 seconds (424.81 k allocations: 24.394 MiB)
Running: chebyshev_quadrature with k=3
  0.343863 seconds (544.64 k allocations: 29.852 MiB, 3.91% gc time)
Running: chebyshev_quadrature with k=4
  0.450960 seconds (487.55 k allocations: 26.387 MiB)
Running: jacobi_quadrature with α=β=1
 47.025224 seconds (39.36 M allocations: 3.138 GiB, 8.16% gc time)
Running: laguerre_quadrature with k=1
  3.487573 seconds (3.33 M allocations: 185.384 MiB, 6.82% gc time)
Running: legendre_quadrature
  0.220514 seconds (214.95 k allocations: 12.305 MiB)
Running: lobatto_quadrature
  0.340139 seconds (343.31 k allocations: 20.574 MiB)
Running: radau_quadrature
  0.288582 seconds (325.73 k allocations: 19.584 MiB, 7.91% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 86.946364 seconds (100.02 M allocations: 1.491 GiB, 0.27% gc time)
Running: rectangle_rule_midpoint.
  0.231723 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.441872 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time)
Running: rombergs_method
  0.718606 seconds (752.18 k allocations: 43.305 MiB, 5.51% gc time)
Running: simpsons_rule
  0.042060 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.104380 seconds (113.06 k allocations: 5.973 MiB)
Running: trapezoidal_rule
  0.304526 seconds (1.52 M allocations: 25.795 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.105708 seconds (32.61 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.572486 seconds (256.81 k allocations: 12.945 MiB)
Running: chebyshev_quadrature with k=2
  0.154764 seconds (94.71 k allocations: 2.719 MiB)
Running: chebyshev_quadrature with k=3
  0.175164 seconds (82.97 k allocations: 2.520 MiB)
Running: chebyshev_quadrature with k=4
  0.172219 seconds (65.58 k allocations: 2.167 MiB)
Running: jacobi_quadrature with α=β=1
  2.735668 seconds (514.11 k allocations: 162.418 MiB, 17.80% gc time)
Running: legendre_quadrature
  0.160906 seconds (43.47 k allocations: 2.497 MiB)
Running: lobatto_quadrature
  0.021459 seconds (16.76 k allocations: 1.035 MiB)
Running: radau_quadrature
  0.021733 seconds (16.75 k allocations: 1.035 MiB)
Running: rectangle_rule_left
 27.818833 seconds (471.41 M allocations: 7.025 GiB, 2.56% gc time)
Running: rectangle_rule_midpoint
  0.000033 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.324108 seconds (476.96 M allocations: 7.107 GiB, 2.14% gc time)
Running: rombergs_method
  0.485634 seconds (339.50 k allocations: 19.248 MiB)
Running: simpsons_rule
  0.000063 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.087010 seconds (19.89 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.070311 seconds (18.34 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.042436 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.177642 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.141372 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.157143 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.131584 seconds (3.08 k allocations: 155.109 KiB)
Running: jacobi_quadrature with α=β=1
  0.344540 seconds (378.84 k allocations: 19.800 MiB)
Running: legendre_quadrature
  0.076944 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000098 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000039 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000699 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000411 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000582 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.073995 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000038 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027362 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.024658 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.064887 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.220943 seconds (240.11 k allocations: 13.476 MiB, 12.13% gc time)
Running: chebyshev_quadrature with k=2
  0.223545 seconds (295.27 k allocations: 16.551 MiB)
Running: chebyshev_quadrature with k=3
  0.221254 seconds (275.26 k allocations: 14.975 MiB)
Running: chebyshev_quadrature with k=4
  0.287205 seconds (275.29 k allocations: 14.867 MiB, 9.96% gc time)
Running: jacobi_quadrature with α=β=1
  3.066806 seconds (465.45 k allocations: 164.154 MiB, 2.27% gc time)
Running: legendre_quadrature
  0.188762 seconds (192.86 k allocations: 11.107 MiB, 8.30% gc time)
Running: lobatto_quadrature
  0.195493 seconds (204.06 k allocations: 11.801 MiB)
Running: radau_quadrature
  0.232071 seconds (204.06 k allocations: 11.821 MiB)
Running: rectangle_rule_left
  1.300116 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.028500 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.282686 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.163243 seconds (139.81 k allocations: 8.074 MiB)
Running: simpsons_rule
  0.045298 seconds (28.99 k allocations: 1.801 MiB)
Running: simpsons38_rule
  0.062580 seconds (44.60 k allocations: 2.785 MiB, 27.16% gc time)
Running: trapezoidal_rule
  0.027017 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.038226 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.194759 seconds (247.20 k allocations: 13.592 MiB)
Running: chebyshev_quadrature with k=2
  0.220436 seconds (302.90 k allocations: 16.565 MiB)
Running: chebyshev_quadrature with k=3
  0.248197 seconds (282.67 k allocations: 14.988 MiB, 7.61% gc time)
Running: chebyshev_quadrature with k=4
  0.220516 seconds (282.70 k allocations: 14.994 MiB)
Running: hermite_quadrature with k=2
 17.093313 seconds (22.07 M allocations: 1.144 GiB, 9.04% gc time)
Running: jacobi_quadrature with α=β=1
  0.630255 seconds (475.45 k allocations: 50.444 MiB, 8.23% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.270868 seconds (288.17 k allocations: 15.888 MiB)
Running: legendre_quadrature
  0.190187 seconds (199.92 k allocations: 11.447 MiB)
Running: lobatto_quadrature
  0.336948 seconds (225.46 k allocations: 37.627 MiB, 9.65% gc time)
Running: radau_quadrature
  0.253380 seconds (222.05 k allocations: 30.276 MiB, 8.16% gc time)
Running: rectangle_rule_left
  0.029280 seconds (22.89 k allocations: 1.352 MiB)
Running: rectangle_rule_midpoint
  0.030486 seconds (27.85 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.027159 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.129626 seconds (142.63 k allocations: 8.117 MiB)
Running: simpsons_rule
  0.040793 seconds (41.23 k allocations: 2.155 MiB)
Running: simpsons38_rule
  0.044897 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.032962 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042350 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.222159 seconds (242.33 k allocations: 13.342 MiB)
Running: chebyshev_quadrature with k=2
  0.299486 seconds (297.62 k allocations: 16.302 MiB, 8.62% gc time)
Running: chebyshev_quadrature with k=3
  0.265235 seconds (277.53 k allocations: 14.759 MiB)
Running: chebyshev_quadrature with k=4
  0.217800 seconds (277.56 k allocations: 14.759 MiB)
Running: hermite_quadrature with k=2
  0.186738 seconds (177.59 k allocations: 10.153 MiB, 16.75% gc time)
Running: jacobi_quadrature with α=β=1
  7.907586 seconds (468.05 k allocations: 1.176 GiB, 11.36% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.321547 seconds (283.03 k allocations: 15.680 MiB)
Running: legendre_quadrature
  0.168195 seconds (195.09 k allocations: 11.214 MiB)
Running: lobatto_quadrature
  0.244220 seconds (215.82 k allocations: 23.328 MiB, 6.63% gc time)
Running: radau_quadrature
  0.264859 seconds (214.97 k allocations: 21.252 MiB)
Running: rectangle_rule_left
  0.036545 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.037502 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.032882 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.176621 seconds (138.10 k allocations: 7.984 MiB)
Running: simpsons_rule
  0.072972 seconds (33.47 k allocations: 1.930 MiB, 39.99% gc time)
Running: simpsons38_rule
  0.046531 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.031009 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034335 seconds (32.45 k allocations: 1.952 MiB)
Running: chebyshev_quadrature with k=1
  0.262458 seconds (240.66 k allocations: 13.557 MiB)
Running: chebyshev_quadrature with k=2
  0.272474 seconds (295.86 k allocations: 16.646 MiB)
Running: chebyshev_quadrature with k=3
  0.262772 seconds (275.86 k allocations: 14.967 MiB, 9.06% gc time)
Running: chebyshev_quadrature with k=4
  0.273814 seconds (275.89 k allocations: 14.798 MiB)
Running: jacobi_quadrature with α=β=1
  2.700204 seconds (466.10 k allocations: 195.252 MiB, 10.67% gc time)
Running: legendre_quadrature
  0.161613 seconds (193.42 k allocations: 11.126 MiB)
Running: lobatto_quadrature
  0.192391 seconds (204.62 k allocations: 11.832 MiB)
Running: radau_quadrature
  0.241201 seconds (204.62 k allocations: 11.834 MiB)
Running: rectangle_rule_left
  0.309078 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.028492 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.118157 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.159926 seconds (151.16 k allocations: 8.805 MiB, 11.93% gc time)
Running: simpsons_rule
  0.034194 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.037740 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.024771 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035396 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.218650 seconds (241.23 k allocations: 13.513 MiB)
Running: chebyshev_quadrature with k=2
  0.278881 seconds (296.46 k allocations: 16.546 MiB, 7.74% gc time)
Running: chebyshev_quadrature with k=3
  0.230668 seconds (276.40 k allocations: 14.899 MiB)
Running: chebyshev_quadrature with k=4
  0.232900 seconds (276.43 k allocations: 14.973 MiB)
Running: jacobi_quadrature with α=β=1
  1.817759 seconds (466.76 k allocations: 149.999 MiB, 5.44% gc time)
Running: legendre_quadrature
  0.178550 seconds (193.99 k allocations: 11.141 MiB)
Running: lobatto_quadrature
  0.184722 seconds (205.20 k allocations: 11.847 MiB)
Running: radau_quadrature
  0.217360 seconds (205.19 k allocations: 11.884 MiB)
Running: rectangle_rule_left
  1.176014 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.027570 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.243034 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.148410 seconds (141.11 k allocations: 8.114 MiB, 14.44% gc time)
Running: simpsons_rule
  0.034328 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.038367 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.029789 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.166898 seconds (152.72 k allocations: 9.079 MiB)
Running: chebyshev_quadrature with k=1
  0.136183 seconds (70.78 k allocations: 2.244 MiB)
Running: chebyshev_quadrature with k=2
  0.159975 seconds (106.00 k allocations: 2.911 MiB)
Running: chebyshev_quadrature with k=3
  0.141870 seconds (93.49 k allocations: 2.699 MiB)
Running: chebyshev_quadrature with k=4
  0.145381 seconds (73.02 k allocations: 2.293 MiB)
Running: jacobi_quadrature with α=β=1
  3.143949 seconds (487.82 k allocations: 168.243 MiB, 14.43% gc time)
Running: legendre_quadrature
  0.120879 seconds (19.53 k allocations: 1.129 MiB)
Running: lobatto_quadrature
  0.000102 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000052 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.345364 seconds (590.00 M allocations: 8.792 GiB, 3.21% gc time)
Running: rectangle_rule_midpoint
  0.000050 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.325965 seconds (592.75 M allocations: 8.833 GiB, 2.95% gc time)
Running: rombergs_method
  0.241741 seconds (21.37 k allocations: 1.206 MiB)
Running: simpsons_rule
  0.000041 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.042882 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.040548 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.588754 seconds (629.34 M allocations: 9.388 GiB, 4.37% gc time)
Running: chebyshev_quadrature with k=1
  0.643545 seconds (438.88 k allocations: 24.246 MiB, 5.12% gc time)
Running: chebyshev_quadrature with k=2
 13.912778 seconds (496.22 k allocations: 4.042 GiB, 3.58% gc time)
Running: chebyshev_quadrature with k=3
  6.747818 seconds (290.35 k allocations: 1.643 GiB, 4.24% gc time)
Running: chebyshev_quadrature with k=4
  8.240975 seconds (290.38 k allocations: 2.262 GiB, 2.39% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 57.633932 seconds (504.92 k allocations: 13.255 GiB, 2.59% gc time)
Running: legendre_quadrature.
  5.695726 seconds (232.72 k allocations: 1.976 GiB, 1.51% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.238791 seconds (8.24 M allocations: 13.384 GiB, 4.18% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 54.840829 seconds (7.24 M allocations: 13.369 GiB, 2.53% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.199352 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.985958 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.073452 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.137513 seconds (456.34 k allocations: 153.685 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.046045 seconds (600.04 M allocations: 8.943 GiB, 8.71% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.034667 seconds (600.05 M allocations: 8.944 GiB, 7.88% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.143429 seconds (600.04 M allocations: 8.943 GiB, 8.61% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063090 seconds (182.49 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.243826 seconds (257.82 k allocations: 14.010 MiB)
Running: chebyshev_quadrature with k=2
  0.247980 seconds (283.98 k allocations: 15.197 MiB)
Running: chebyshev_quadrature with k=3
  0.237885 seconds (260.50 k allocations: 13.451 MiB)
Running: chebyshev_quadrature with k=4
  0.282656 seconds (260.54 k allocations: 13.446 MiB)
Running: jacobi_quadrature with α=β=1
  0.454446 seconds (405.09 k allocations: 35.831 MiB)
Running: laguerre_quadrature with k=2
  0.217011 seconds (187.84 k allocations: 10.863 MiB)
Running: legendre_quadrature
  0.157690 seconds (151.64 k allocations: 8.383 MiB)
Running: lobatto_quadrature
  0.041274 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.035308 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.058459 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.055793 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.067315 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.278174 seconds (179.03 k allocations: 10.220 MiB)
Running: simpsons_rule
  0.001983 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.052221 seconds (81.40 k allocations: 3.515 MiB)
Running: trapezoidal_rule
  0.206991 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002099 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.131061 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.114287 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.125674 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.121918 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  8.166898 seconds (401.93 k allocations: 906.592 MiB, 4.86% gc time)
Running: legendre_quadrature
  0.073475 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000307 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000234 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.578463 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000992 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.762608 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.125970 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000991 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000736 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.125861 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.136142 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.152602 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.131906 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.589872 seconds (388.21 k allocations: 253.747 MiB)
Running: legendre_quadrature
  0.073339 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000117 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000051 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.096612 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001146 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.137397 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.093318 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000064 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001919 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
