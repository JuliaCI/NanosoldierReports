Julia Version 1.6.0-DEV.754
Commit c9b2cab1a7 (2020-08-28 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_cpoxkX/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_cpoxkX/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.032559 seconds (1.46 M allocations: 78.070 MiB, 2.00% gc time)
Running: chebyshev_quadrature with k=1
  2.048621 seconds (2.24 M allocations: 128.495 MiB, 6.51% gc time)
Running: chebyshev_quadrature with k=2
  0.305775 seconds (424.81 k allocations: 24.373 MiB)
Running: chebyshev_quadrature with k=3
  0.560691 seconds (544.64 k allocations: 29.856 MiB, 4.25% gc time)
Running: chebyshev_quadrature with k=4
  0.441871 seconds (487.56 k allocations: 26.404 MiB)
Running: jacobi_quadrature with α=β=1
 48.748790 seconds (39.35 M allocations: 3.137 GiB, 9.32% gc time)
Running: laguerre_quadrature with k=1
  3.158066 seconds (3.33 M allocations: 185.384 MiB, 6.33% gc time)
Running: legendre_quadrature
  0.205203 seconds (215.02 k allocations: 12.324 MiB)
Running: lobatto_quadrature
  0.348753 seconds (343.40 k allocations: 20.576 MiB)
Running: radau_quadrature
  0.315009 seconds (325.75 k allocations: 19.581 MiB, 8.50% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.385211 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rectangle_rule_midpoint.
  0.140380 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.769420 seconds (100.02 M allocations: 1.491 GiB, 0.37% gc time)
Running: rombergs_method
  0.634056 seconds (752.23 k allocations: 43.312 MiB, 5.47% gc time)
Running: simpsons_rule
  0.048345 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.093613 seconds (113.12 k allocations: 5.975 MiB)
Running: trapezoidal_rule
  0.301561 seconds (1.52 M allocations: 25.798 MiB, 4.58% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.089233 seconds (32.60 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.476441 seconds (256.87 k allocations: 12.948 MiB, 5.83% gc time)
Running: chebyshev_quadrature with k=2
  0.178856 seconds (94.71 k allocations: 2.719 MiB)
Running: chebyshev_quadrature with k=3
  0.158866 seconds (82.97 k allocations: 2.520 MiB)
Running: chebyshev_quadrature with k=4
  0.140132 seconds (65.58 k allocations: 2.167 MiB)
Running: jacobi_quadrature with α=β=1
  2.723751 seconds (514.21 k allocations: 162.421 MiB, 8.75% gc time)
Running: legendre_quadrature
  0.184474 seconds (43.53 k allocations: 2.500 MiB)
Running: lobatto_quadrature
  0.029954 seconds (16.82 k allocations: 1.038 MiB)
Running: radau_quadrature
  0.027650 seconds (16.81 k allocations: 1.038 MiB)
Running: rectangle_rule_left
 30.362799 seconds (471.41 M allocations: 7.025 GiB, 3.19% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.598570 seconds (476.96 M allocations: 7.107 GiB, 1.91% gc time)
Running: rombergs_method
  0.340972 seconds (339.56 k allocations: 19.251 MiB, 1.55% gc time)
Running: simpsons_rule
  0.000035 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.056744 seconds (19.88 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.049865 seconds (18.34 k allocations: 1.098 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032280 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.132403 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.127449 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.133448 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.134088 seconds (3.08 k allocations: 155.109 KiB)
Running: jacobi_quadrature with α=β=1
  0.406830 seconds (378.82 k allocations: 19.815 MiB, 8.08% gc time)
Running: legendre_quadrature
  0.071259 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000087 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000498 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000348 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000556 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.086341 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000041 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.028657 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.031700 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.097308 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.284944 seconds (240.11 k allocations: 13.476 MiB)
Running: chebyshev_quadrature with k=2
  0.271217 seconds (295.28 k allocations: 16.559 MiB)
Running: chebyshev_quadrature with k=3
  0.261396 seconds (275.26 k allocations: 14.958 MiB, 11.86% gc time)
Running: chebyshev_quadrature with k=4
  0.218197 seconds (275.29 k allocations: 14.867 MiB)
Running: jacobi_quadrature with α=β=1
  2.210644 seconds (465.43 k allocations: 164.153 MiB, 1.85% gc time)
Running: legendre_quadrature
  0.185473 seconds (192.86 k allocations: 11.103 MiB)
Running: lobatto_quadrature
  0.199417 seconds (204.05 k allocations: 11.817 MiB)
Running: radau_quadrature
  0.218970 seconds (204.05 k allocations: 11.805 MiB, 8.04% gc time)
Running: rectangle_rule_left
  1.106609 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.026012 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.126756 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.144381 seconds (139.81 k allocations: 8.054 MiB)
Running: simpsons_rule
  0.032715 seconds (28.99 k allocations: 1.801 MiB)
Running: simpsons38_rule
  0.061124 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.037944 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.061265 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.264241 seconds (247.20 k allocations: 13.576 MiB, 10.43% gc time)
Running: chebyshev_quadrature with k=2
  0.212747 seconds (302.90 k allocations: 16.565 MiB)
Running: chebyshev_quadrature with k=3
  0.286981 seconds (282.67 k allocations: 14.992 MiB)
Running: chebyshev_quadrature with k=4
  0.258678 seconds (282.71 k allocations: 14.995 MiB, 8.41% gc time)
Running: hermite_quadrature with k=2
 17.162335 seconds (22.07 M allocations: 1.144 GiB, 9.71% gc time)
Running: jacobi_quadrature with α=β=1
  0.637971 seconds (475.43 k allocations: 50.427 MiB, 5.90% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.345645 seconds (288.17 k allocations: 15.885 MiB, 15.65% gc time)
Running: legendre_quadrature
  0.172978 seconds (199.92 k allocations: 11.447 MiB)
Running: lobatto_quadrature
  0.284901 seconds (225.46 k allocations: 37.633 MiB, 11.05% gc time)
Running: radau_quadrature
  0.214999 seconds (222.05 k allocations: 30.276 MiB)
Running: rectangle_rule_left
  0.029710 seconds (22.89 k allocations: 1.352 MiB)
Running: rectangle_rule_midpoint
  0.030250 seconds (27.85 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.027280 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.120569 seconds (142.63 k allocations: 8.117 MiB)
Running: simpsons_rule
  0.060489 seconds (41.23 k allocations: 2.155 MiB, 37.00% gc time)
Running: simpsons38_rule
  0.044027 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.030727 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.048727 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.216093 seconds (242.33 k allocations: 13.341 MiB)
Running: chebyshev_quadrature with k=2
  0.267342 seconds (297.62 k allocations: 16.305 MiB)
Running: chebyshev_quadrature with k=3
  0.325800 seconds (277.53 k allocations: 14.759 MiB, 19.67% gc time)
Running: chebyshev_quadrature with k=4
  0.280371 seconds (277.57 k allocations: 14.822 MiB)
Running: hermite_quadrature with k=2
  0.164971 seconds (177.59 k allocations: 10.154 MiB)
Running: jacobi_quadrature with α=β=1
  9.804173 seconds (468.04 k allocations: 1.176 GiB, 10.29% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.274430 seconds (283.03 k allocations: 15.680 MiB)
Running: legendre_quadrature
  0.174649 seconds (195.09 k allocations: 11.214 MiB)
Running: lobatto_quadrature
  0.250599 seconds (215.82 k allocations: 23.392 MiB, 5.82% gc time)
Running: radau_quadrature
  0.229409 seconds (214.97 k allocations: 21.252 MiB)
Running: rectangle_rule_left
  0.027319 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.029148 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.025648 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.116882 seconds (138.10 k allocations: 7.921 MiB)
Running: simpsons_rule
  0.051551 seconds (33.47 k allocations: 1.930 MiB, 40.88% gc time)
Running: simpsons38_rule
  0.035810 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.026442 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034488 seconds (32.45 k allocations: 1.952 MiB)
Running: chebyshev_quadrature with k=1
  0.256817 seconds (240.66 k allocations: 13.619 MiB)
Running: chebyshev_quadrature with k=2
  0.223362 seconds (295.86 k allocations: 16.642 MiB)
Running: chebyshev_quadrature with k=3
  0.225885 seconds (275.86 k allocations: 14.967 MiB, 7.81% gc time)
Running: chebyshev_quadrature with k=4
  0.204323 seconds (275.89 k allocations: 14.798 MiB)
Running: jacobi_quadrature with α=β=1
  2.950643 seconds (466.08 k allocations: 195.251 MiB, 6.83% gc time)
Running: legendre_quadrature
  0.164435 seconds (193.42 k allocations: 11.125 MiB)
Running: lobatto_quadrature
  0.183841 seconds (204.62 k allocations: 11.836 MiB)
Running: radau_quadrature
  0.193717 seconds (204.61 k allocations: 11.830 MiB)
Running: rectangle_rule_left
  0.381422 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.029814 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.188050 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.221626 seconds (151.16 k allocations: 8.805 MiB, 11.91% gc time)
Running: simpsons_rule
  0.038258 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.046311 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.034196 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.050659 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.238156 seconds (241.23 k allocations: 13.508 MiB)
Running: chebyshev_quadrature with k=2
  0.280449 seconds (296.46 k allocations: 16.546 MiB, 7.83% gc time)
Running: chebyshev_quadrature with k=3
  0.267527 seconds (276.40 k allocations: 14.899 MiB)
Running: chebyshev_quadrature with k=4
  0.224944 seconds (276.43 k allocations: 14.973 MiB)
Running: jacobi_quadrature with α=β=1
  1.521894 seconds (466.75 k allocations: 149.920 MiB, 10.79% gc time)
Running: legendre_quadrature
  0.171254 seconds (193.99 k allocations: 11.141 MiB)
Running: lobatto_quadrature
  0.167166 seconds (205.19 k allocations: 11.847 MiB)
Running: radau_quadrature
  0.180691 seconds (205.19 k allocations: 11.885 MiB)
Running: rectangle_rule_left
  1.185907 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.027495 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.183288 seconds (18.60 k allocations: 1.123 MiB, 1.52% gc time)
Running: rombergs_method
  0.138816 seconds (141.11 k allocations: 8.177 MiB)
Running: simpsons_rule
  0.035734 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.036680 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.030510 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.190878 seconds (152.73 k allocations: 9.079 MiB)
Running: chebyshev_quadrature with k=1
  0.156472 seconds (70.78 k allocations: 2.244 MiB)
Running: chebyshev_quadrature with k=2
  0.171193 seconds (106.00 k allocations: 2.911 MiB)
Running: chebyshev_quadrature with k=3
  0.163555 seconds (93.49 k allocations: 2.699 MiB)
Running: chebyshev_quadrature with k=4
  0.168350 seconds (73.02 k allocations: 2.293 MiB)
Running: jacobi_quadrature with α=β=1
  3.606280 seconds (487.86 k allocations: 168.244 MiB, 8.36% gc time)
Running: legendre_quadrature
  0.103960 seconds (19.53 k allocations: 1.129 MiB)
Running: lobatto_quadrature
  0.000143 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000090 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.450486 seconds (590.00 M allocations: 8.792 GiB, 3.05% gc time)
Running: rectangle_rule_midpoint
  0.000022 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.241018 seconds (592.75 M allocations: 8.833 GiB, 3.02% gc time)
Running: rombergs_method
  0.138693 seconds (21.37 k allocations: 1.206 MiB)
Running: simpsons_rule
  0.000040 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030293 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023468 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 32.623215 seconds (629.34 M allocations: 9.388 GiB, 4.69% gc time)
Running: chebyshev_quadrature with k=1
  0.541981 seconds (438.95 k allocations: 24.249 MiB, 2.92% gc time)
Running: chebyshev_quadrature with k=2
 12.624638 seconds (496.28 k allocations: 4.042 GiB, 3.95% gc time)
Running: chebyshev_quadrature with k=3
  6.231869 seconds (290.35 k allocations: 1.643 GiB, 4.77% gc time)
Running: chebyshev_quadrature with k=4
  7.692287 seconds (290.39 k allocations: 2.262 GiB, 2.46% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 50.978343 seconds (504.97 k allocations: 13.255 GiB, 3.63% gc time)
Running: legendre_quadrature.
  6.329765 seconds (232.78 k allocations: 1.976 GiB, 2.91% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 51.340568 seconds (8.24 M allocations: 13.384 GiB, 4.69% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 50.768071 seconds (7.24 M allocations: 13.369 GiB, 3.45% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.016709 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.336413 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.053314 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.110201 seconds (456.40 k allocations: 153.688 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 48.628432 seconds (600.04 M allocations: 8.943 GiB, 6.88% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.839807 seconds (600.05 M allocations: 8.944 GiB, 8.27% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.872508 seconds (600.04 M allocations: 8.943 GiB, 8.90% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.066059 seconds (182.49 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.249585 seconds (257.82 k allocations: 14.010 MiB)
Running: chebyshev_quadrature with k=2
  0.240669 seconds (283.98 k allocations: 15.197 MiB)
Running: chebyshev_quadrature with k=3
  0.213104 seconds (260.50 k allocations: 13.451 MiB)
Running: chebyshev_quadrature with k=4
  0.262292 seconds (260.54 k allocations: 13.462 MiB)
Running: jacobi_quadrature with α=β=1
  0.460640 seconds (405.07 k allocations: 35.830 MiB)
Running: laguerre_quadrature with k=2
  0.199300 seconds (187.84 k allocations: 10.863 MiB)
Running: legendre_quadrature
  0.137093 seconds (151.64 k allocations: 8.383 MiB)
Running: lobatto_quadrature
  0.036755 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.033342 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.060895 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.051063 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.055234 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.214238 seconds (179.85 k allocations: 10.264 MiB)
Running: simpsons_rule
  0.001951 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055252 seconds (81.40 k allocations: 3.515 MiB)
Running: trapezoidal_rule
  0.207756 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002304 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.119804 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.118139 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.128574 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.121804 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  8.800564 seconds (401.92 k allocations: 906.595 MiB, 5.81% gc time)
Running: legendre_quadrature
  0.083985 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000204 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000135 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.876836 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000430 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.506708 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.090829 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000066 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000069 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000916 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000794 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.119473 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.122514 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.132395 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.131841 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  2.351840 seconds (388.19 k allocations: 253.750 MiB)
Running: legendre_quadrature
  0.068850 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000121 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000073 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.815613 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001300 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.892966 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.096282 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001951 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
