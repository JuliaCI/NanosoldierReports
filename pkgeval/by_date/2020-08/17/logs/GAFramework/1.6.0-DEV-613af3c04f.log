Julia Version 1.6.0-DEV.649
Commit 613af3c04f (2020-08-17 14:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.1
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_vkNBbn/Project.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_vkNBbn/Manifest.toml`
  [5789e2e9] FileIO v1.4.1
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723185876452097
curgen: 20 fitness: 0.21723185876452097
curgen: 30 fitness: 0.21723185876452097
curgen: 40 fitness: 0.21723185876452097
curgen: 50 fitness: 0.21723185876452097
CoordinateCreature{Vector{Float64}}([0.2223483754741334], -0.21723185876452097) 0.2223483754741334 -0.21723185876452097
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2582615650122895
curgen: 100 fitness: 3.2582796837423755
curgen: 150 fitness: 3.2582968826280694
curgen: 200 fitness: 3.2583709633055125
curgen: 250 fitness: 3.25841676609946
curgen: 300 fitness: 3.2584335482206748
curgen: 350 fitness: 3.258436776469599
curgen: 400 fitness: 3.2584566804408093
curgen: 450 fitness: 3.258461237938029
curgen: 500 fitness: 3.25847017130252
CoordinateCreature{Vector{Float64}}([-0.22300967343915581, 0.222618678634437, -0.22287314696414467, -0.22284737994665288, 0.22285276538075516, -0.22278927136217855, 0.22250644533585306, -0.2226059831727052, 0.22251873790608329, -0.22248966247865884, -0.2225126226549712, -0.22224129734990303, -0.22258385693552576, -0.2228571424597556, -0.2225860639435101], -3.258470513743441) [-0.22300967343915581, 0.222618678634437, -0.22287314696414467, -0.22284737994665288, 0.22285276538075516, -0.22278927136217855, 0.22250644533585306, -0.2226059831727052, 0.22251873790608329, -0.22248966247865884, -0.2225126226549712, -0.22224129734990303, -0.22258385693552576, -0.2228571424597556, -0.2225860639435101] -3.258470513743441
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018904560070041043
curgen: 100 fitness: -0.0013100584808398708
curgen: 150 fitness: -0.0010200901626262748
curgen: 200 fitness: -0.0010200901626262748
curgen: 250 fitness: -0.0010200901626262748
curgen: 300 fitness: -0.0010200901626262748
curgen: 350 fitness: -0.0008338946977914929
curgen: 400 fitness: -0.0007979152066468487
curgen: 450 fitness: -0.0007979152066468487
curgen: 500 fitness: -0.0007810587647441025
CoordinateCreature{Vector{Float64}}([0.0005930147295711086, -0.0008315466265232789, -0.0008225989468338604, -0.0007426894380740444, -0.00032328299715916274, -3.87136044924728e-5, -0.0005839082812078007, 0.0004762220611441036, -0.0005794475993622207, 0.00016888588123677162, 0.0002762589903280066, -0.00012261040090617847, 9.517153603660604e-6, -0.0007244451619086607, 0.00010614113265515653], 0.0007810587647441025) [0.0005930147295711086, -0.0008315466265232789, -0.0008225989468338604, -0.0007426894380740444, -0.00032328299715916274, -3.87136044924728e-5, -0.0005839082812078007, 0.0004762220611441036, -0.0005794475993622207, 0.00016888588123677162, 0.0002762589903280066, -0.00012261040090617847, 9.517153603660604e-6, -0.0007244451619086607, 0.00010614113265515653] 0.0007810587647441025
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
