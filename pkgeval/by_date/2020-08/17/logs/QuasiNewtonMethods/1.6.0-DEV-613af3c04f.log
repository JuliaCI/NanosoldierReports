Julia Version 1.6.0-DEV.649
Commit 613af3c04f (2020-08-17 14:01 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed VectorizationBase ─── v0.12.32
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed OffsetArrays ──────── v1.1.2
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.24
  Installed LoopVectorization ─── v0.8.24
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.24
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_ESOQ1z/Project.toml`
  [bdcacae8] LoopVectorization v0.8.24
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_ESOQ1z/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.24
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.32
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [4.263256414560601e-14, 8.282263763703668e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4023449068645277e-11, -2.9703239867728826e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [1.4265122416645681e-10, 2.9291968850486683e-10, -1.5665579944368346e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.013323420958841e-11, -1.974294061568571e-10, -5.97927152234945e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-4.590994251429947e-12, -1.0641820757939513e-11, -8.225642389447785e-12, -2.351785433063469e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.3408165950609146e-11, 5.964562177496191e-12, 9.468958950265005e-11, 1.6140422332000526e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.84430248850731e-11, 3.3784974817763214e-11, -3.6303737793730306e-11, 6.278000341808365e-11, -6.444844657949034e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [4.670686060137541e-11, -2.2195689730608592e-11, 9.76518865769549e-11, -5.020484028506189e-11, 1.873390331752489e-12]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [2.152433786761776e-10, 1.0051381948983362e-10, -9.066514206068632e-11, 4.316054180719675e-10, 2.1451906917491215e-10, -1.9615131741090863e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1393685994676161e-10, 7.457634509933087e-11, -5.507871936316633e-11, 2.4034707557518686e-10, 1.501521129654293e-10, -1.2323220222043574e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.7851720102157742e-11, 9.972911385602856e-12, 2.999023251959443e-11, 3.6093572575168764e-11, 1.4869883102619497e-11, 6.163891619337392e-11, 6.27564666899616e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.464406456681445e-11, -1.4306666962227155e-11, 5.318634421769275e-12, 5.01769736871438e-11, -2.795230713559249e-11, 1.038968910904714e-11, -1.9562129693895258e-13]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2271295091181855e-12, -4.4247605579528226e-11, -3.40243389018724e-11, 5.519695811528891e-11, -5.230371691311575e-12, -8.610645529927297e-11, -6.205369551537387e-11, 1.1086864759590753e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.056333378192448e-12, -1.4433232387034423e-11, 1.5939471964543372e-11, 7.629452625224076e-13, -2.237565688290033e-11, -2.869893211965291e-11, 3.2311486819480706e-11, 1.1364242880063102e-12]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6145196291006414e-11, 7.140066315969307e-12, -2.2201129823429255e-11, -2.3951951533263127e-12, -3.147393456970349e-11, 1.4841239348584168e-11, -4.243916329471631e-11, -7.369771459764252e-12, 4.127809205556332e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.843281083324655e-11, -3.906319712143613e-11, -4.250322316323718e-11, -1.252176140553729e-11, 3.7849279266310987e-11, -7.82296449841624e-11, -7.576994587310537e-11, -2.588596004216015e-11, -6.6168182044634705e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-3.388900271517059e-11, 6.814993014359061e-12, 2.1392665416897216e-11, 3.865618936060855e-11, -1.3434475754081632e-11, -6.63482602192289e-11, 1.6866064100895528e-11, 4.499001171609507e-11, 7.834333182188402e-11, -2.7053581597158427e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.48991929904696e-13, -1.3078427230084344e-12, 4.0900616227190767e-13, 6.561418075534675e-13, -3.8833380955338725e-12, 2.737809978725636e-13, -2.692179812413542e-12, 5.997424779025096e-13, 1.3109513474773848e-12, -7.677414259887883e-12]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-9.743983397925149e-12, 7.353673225907187e-12, -6.12320194548488e-11, -6.418676701258619e-11, 3.988209762439965e-11, -1.9551915642068707e-11, 1.6898038524004733e-11, -1.2030554330522136e-10, -1.3258505404678544e-10, 8.257661221477974e-11, 1.2015499706308219e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.4569682106375694e-11, -7.763956144657413e-11, -7.000777735299835e-11, 3.3242297803326437e-12, 1.5472956249595882e-11, 1.0890688351139488e-10, -1.6215662146379373e-10, -1.429708573752464e-10, 8.818723529202543e-12, 3.814726312612038e-11, 1.2561063300609021e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-9.97915083900125e-11, 1.0087886082033037e-10, -7.343170516094233e-11, -2.4700264056320975e-10, 1.1165401936352737e-10, -2.384984432168835e-10, -1.920504866248507e-10, 1.9053447708472504e-10, -1.3395795583903691e-10, -4.968917499681424e-10, 2.3966850726253597e-10, -4.706369738372018e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.32774951828219e-11, 1.1854472958816586e-10, -1.3157530620588886e-10, 3.021829453331293e-10, 9.892442420778025e-11, -2.7986057915541096e-11, -1.2540668503646657e-10, 2.4010837762489246e-10, -2.5696123007179494e-10, 6.113023420795116e-10, 2.01330507820785e-10, -5.6695537153927944e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-5.362210675485812e-11, -1.313738007269194e-11, 1.7353452008705972e-11, -7.988276706782926e-12, -1.1448175740724764e-11, -7.163170057111756e-11, -1.1251455322991433e-10, -2.913980168273156e-11, 3.420663752251585e-11, -1.440136898622768e-11, -2.4186319613761498e-11, -1.3492407191506572e-10, 2.2237767183241886e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9562129693895258e-13, 2.985256486454091e-11, -5.0412896079876646e-11, -6.429412557906744e-12, 8.6932683274199e-12, 1.695932283496404e-11, -1.3660184094987926e-12, 5.878519893087741e-11, -1.0160328134389829e-10, -1.43625111803658e-11, 1.926614423553019e-11, 3.459232900127063e-11, 1.486877287959487e-11]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [6.067391034036973e-11, -3.302891293799348e-11, 2.751265881784093e-11, 4.0606185081060175e-11, -1.2091017076443222e-10, -4.4143022570608537e-11, -8.770517645473319e-11, 1.3753820304884812e-10, -6.752820524980052e-11, 3.629763156709487e-11, 7.371836474590054e-11, -2.5158575223116486e-10, -9.776357501323218e-11, -1.7200874058431737e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.5470961157766396e-11, -1.3396173059732064e-11, 6.619593762025033e-12, 4.444111745272039e-11, -2.8484326008992866e-11, 4.121769592302371e-11, 6.001199537308821e-12, 1.1505951746926257e-10, -2.412636757043174e-11, 1.550470862810016e-11, 8.856870792328664e-11, -5.699118954538562e-11, 8.40176817007432e-11, 1.0997647237331876e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [9.562639569082876e-11, 1.7490453529944716e-11, 6.107780947672836e-11, -5.8676841163674e-11, 2.219824324356523e-11, 3.8823166903512174e-11, 6.0477622909616e-11, 1.972597640786944e-10, 3.615285848468375e-11, 1.2656786729792202e-10, -1.234313762310535e-10, 4.5067949372423755e-11, 8.165002007842759e-11, 1.26345822692997e-10, -2.3581137043038325e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0375922343541788e-10, -7.993339323775217e-11, -2.564759515877313e-11, 1.2203282828693318e-10, 6.285194587007936e-12, -1.1012935008380964e-10, 8.330203193906982e-11, 2.0048473992062554e-10, -1.557579620836691e-10, -4.2058578841874805e-11, 2.480942118410212e-10, 1.3773426843499692e-11, -2.1780244274793858e-10, 1.7078316538743366e-10, 1.2119194536808209e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [2.6267632513565786e-10, 1.5047429968717552e-10, -7.597178441898222e-11, -4.908573547623973e-10, -1.5032397548964127e-10, -6.6734506809496e-11, -1.6021839410740313e-10, -6.5173422214570564e-12, 5.333691266429241e-10, 3.1759017637966735e-10, -1.508857483401016e-10, -9.60056922849617e-10, -3.252952351928684e-10, -1.3153911293528608e-10, -3.024271943985468e-10, -5.6701310313655995e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.037503995694806e-11, 9.239831122442865e-11, 2.281175248697309e-11, 6.340394875792299e-11, -1.848662334325013e-10, 1.6351364706679306e-10, -2.0852131132897966e-10, 1.4938628112304286e-10, -1.66460845107963e-10, 2.045426050756305e-10, 4.48749926107439e-11, 1.424143025730018e-10, -3.804495607440117e-10, 3.1801161703981506e-10, -4.3987413711477075e-10, 2.825140121842651e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-5.899802868469806e-11, -5.1599613470898475e-11, 6.299227806039198e-11, -3.118627578402311e-11, 2.401745469171601e-11, -7.175460225994357e-11, -4.44265735310978e-11, 2.910760521501743e-11, -1.1326151128088213e-10, -1.0010570150598141e-10, 1.283444461819272e-10, -5.910949507637042e-11, 4.92987872746653e-11, -1.4801027070632244e-10, -8.808254126080328e-11, 5.841882533275111e-11, -1.0901057834189487e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.646550225284045e-11, -2.1064272548443341e-10, 7.97855115308721e-11, 9.660716671078262e-12, -3.036138007672662e-11, 7.326939055474213e-11, -2.107158891817562e-11, 7.606626439837783e-11, 1.8940804480394036e-10, -4.222380223239952e-10, 1.5493983873682282e-10, 2.02153849215847e-11, -5.7256088759061186e-11, 1.4059597930327072e-10, -3.748301669048715e-11, 1.616582423480395e-10, 8.657519146026971e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [1.5535139841205137e-9, -2.229723072844081e-10, -2.49357978709952e-10, 2.189193271107115e-10, -3.630630240891719e-10, -3.545557181183767e-10, 3.473135112841419e-10, -1.1469654115359162e-9, 3.992981500999804e-10, 3.115324664904051e-9, -4.4326775583414246e-10, -4.984193058277242e-10, 4.357694205481266e-10, -7.358845754978915e-10, -7.119405065481033e-10, 7.056122353077399e-10, -2.2968722479532744e-9, 7.888434350178386e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.0814462093076145e-11, 1.5218426518970318e-10, 6.976241806455619e-11, 7.104561383641794e-11, 1.0167622299661616e-10, -5.7223892291347056e-11, -3.8024916548806686e-11, 7.909117805127153e-11, 2.651789898777679e-11, 6.567657528933069e-11, 3.04153369157234e-10, 1.5014700593951602e-10, 1.4682766114049173e-10, 2.0999579852798433e-10, -1.005500127604364e-10, -7.940348378809858e-11, 1.5589285418116106e-10, 5.0884185753830025e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [6.4857008652552395e-12, 9.29034627006331e-13, -2.7027380333777273e-11, 1.0055734023239893e-11, -5.0321968814159845e-12, -4.139355525012434e-12, -1.6795009827319518e-11, 2.719713343424246e-11, -1.8449020089406076e-11, 1.053712672671736e-11, 1.3371526108585385e-12, -5.565969907195267e-11, 1.975464236636526e-11, -9.024891944875435e-12, -5.51303447338114e-12, -3.438227480501155e-11, 5.554734450186061e-11, -3.966849071446177e-11, 3.912425938779052e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.9268145119185647e-11, -2.676692201220021e-11, -8.532397011151716e-12, -1.0740153211230563e-10, 9.046075000185283e-11, 2.98037150514574e-11, -1.688771344987572e-11, -2.1219026535845842e-11, 8.239631199558062e-12, -1.0430989405563196e-10, -4.7929105129185245e-11, -1.7446821765076947e-11, -2.1749047007801892e-10, 1.9545431939604896e-10, 6.28062046814648e-11, -3.7336800318144014e-11, -3.4029556950088136e-11, 1.568301044585496e-11, -5.041267403527172e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.0089751256714408e-10, -6.700606736131931e-11, -1.6750956177702392e-10, -3.079166921438059e-10, 7.681544289539488e-11, 3.29731797421573e-11, 1.975952734767361e-11, -2.5946134130094833e-11, 5.885314457998447e-11, 2.1146062678667477e-10, 1.8493540032693545e-10, -1.4305634454814253e-10, -3.440323581571647e-10, -6.269597063734977e-10, 1.4511036816600154e-10, 5.5543791788181807e-11, 4.416200738432963e-11, -5.864375651754017e-11, 1.3432277512492874e-10, 4.065547898335353e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.685740601611087e-11, 3.693556571704448e-11, -4.5009662663630934e-11, -8.259948280908702e-12, -2.052913394834377e-12, 7.000311441629492e-11, 3.59776652913979e-11, 7.236655719111695e-12, -1.0566436614567465e-11, 9.479972362669287e-12, -7.102674004499931e-11, 7.501022025735438e-11, -8.864009526377004e-11, -2.1073143230410096e-11, 2.8177460364986473e-13, 1.4477330445572534e-10, 7.163269977183973e-11, 2.1430412999734472e-11, -2.1389556792428266e-11, 1.7134738072854816e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8073098573267998e-10, -3.342026655417385e-10, 1.0344389789196384e-9, -8.830989273178602e-10, -3.4414027183515827e-10, -1.2242085123403967e-10, 5.1714410531644717e-11, -3.6584935081407366e-10, -1.7915813277369352e-10, -1.356006418262723e-10, -3.504243561991416e-10, -6.724187873174969e-10, 2.079542982258431e-9, -1.775650071422774e-9, -6.905815919111546e-10, -2.2693624757152975e-10, 9.936917955144509e-11, -7.272541457936654e-10, -3.6037328676741254e-10, -2.618232297635359e-10, -1.003264138432769e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.918087993464269e-11, 1.8801515899724563e-10, 3.9334757673259446e-11, 4.4926284914481585e-11, 6.768918758837117e-11, -1.8357348974262777e-10, 1.1736744909285335e-10, -1.283861905676531e-12, -7.57692797392906e-11, -5.433042904456897e-11, 5.640976574738943e-11, 3.8197867091582793e-10, 7.948974811711196e-11, 9.02360408616687e-11, 1.3741074944562115e-10, -3.766587042264291e-10, 2.282407596254643e-10, 1.2787548797632553e-12, -1.4540080250924348e-10, -1.2379430813780345e-10, -1.5334844505332512e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.5499312944200483e-10, 2.4266211262613524e-10, -7.290713588403719e-10, -6.988920553396838e-10, -9.711744741736084e-10, 1.1058576276923304e-10, -9.52911416440827e-10, -2.4930935094147344e-10, 1.2358292167391483e-10, -1.033056973298585e-10, 1.6799488467000856e-9, 3.0975999543159105e-10, 4.762450434014909e-10, -1.4544992987808314e-9, -1.4075527410284394e-9, -1.9521446681380894e-9, 2.2538904076441213e-10, -1.9113463034514666e-9, -5.045216466825764e-10, 2.5257529401301326e-10, -2.0214252494099583e-10, 3.369258205765391e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.275657523005293e-11, 4.7153614346484574e-11, -1.0477585465906714e-10, 7.925660128194068e-11, -8.454115185685396e-11, -2.9730551354134604e-11, -1.4941659021161513e-10, 9.50484135842089e-12, -5.779821066198565e-11, 8.404477114254405e-11, -4.188083213563232e-11, -6.243505712433262e-11, 8.617573321600958e-11, -2.13943418536644e-10, 1.619484546466765e-10, -1.727653575755994e-10, -5.680833581322986e-11, -2.9799951395403923e-10, 2.307953828051268e-11, -1.154788487056635e-10, 1.5334888914253497e-10, -7.885536668084114e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [4.581224288813246e-12, -5.871403363499894e-11, -4.839761924557706e-11, 6.502176574940677e-11, -3.389788449936759e-11, -4.37160307953377e-11, -6.783418271538721e-11, -1.541156091633411e-11, 5.974243322270922e-11, -2.933064902066462e-11, 1.231834634296547e-10, 8.740563828268932e-12, -1.226307944079963e-10, -9.346279306043925e-11, 1.2838641261225803e-10, -7.07791603105079e-11, -9.440681569827802e-11, -1.390896287034593e-10, -3.2950531192454946e-11, 1.1543122013790708e-10, -5.53077583731465e-11, 2.397220200123229e-10, -4.432010314303625e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [6.678213537725242e-12, -5.1593396221960575e-11, -7.236067300908644e-11, -2.1223955926075178e-10, 1.676849770149147e-10, 4.9017012671015436e-11, 1.6557000215300377e-10, -5.881073406044379e-12, 1.4985790386390363e-12, 6.552736131482106e-11, -1.3591039405014271e-10, 8.194334100153355e-12, -9.940592793356018e-11, -1.4773160472714153e-10, -4.254516738910752e-10, 3.3225777684720015e-10, 8.20865597717102e-11, 3.303493034678695e-10, -1.2457257447806569e-11, 9.547918011776346e-15, 1.2996936860076858e-10, -2.7038959959924114e-10, 3.895328504199824e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-4.775668749346096e-11, -8.517264671326075e-11, -7.758915732125615e-11, 9.728973182632217e-11, -2.6778912420866163e-11, 9.355138885780434e-11, -5.49493783807975e-11, 1.2869150189942502e-10, 4.862177327424888e-11, -5.4052984310715146e-11, 1.6083223641771838e-10, -6.320832746098404e-11, -9.31886789956593e-11, -1.7922252570912178e-10, -1.528710491527363e-10, 1.9810042495294056e-10, -6.389799800388118e-11, 1.8561818748707992e-10, -1.0729572785805885e-10, 2.604272353323722e-10, 9.90747484053145e-11, -1.0757306156961022e-10, 2.979552160553567e-10, -1.4175227658341782e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.009104077023039e-11, 3.0704105924428404e-11, 2.2893464901585503e-11, 1.8990142791608378e-11, 5.757838650310987e-11, -4.110345397378978e-11, -8.361089598452054e-12, 8.005196505678214e-11, -1.0481782108939797e-10, 8.454570377125492e-12, 1.7203416469158128e-10, 7.965827997225006e-11, -5.668077118770043e-11, 6.452816059265842e-11, 4.8962167653598954e-11, 4.658184948880262e-11, 1.112019365479e-10, -8.443790111556382e-11, -1.6385448553535298e-11, 1.4837420181379457e-10, -2.0798884836636944e-10, 1.839350893817482e-11, 3.460043362935039e-10, 1.60125468440242e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
