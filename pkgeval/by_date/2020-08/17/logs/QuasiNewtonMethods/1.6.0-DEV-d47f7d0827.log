Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SIMDPirates ───────── v0.8.24
  Installed UnPack ────────────── v1.0.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.24
  Installed VectorizationBase ─── v0.12.32
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed VectorizedRNG ─────── v0.1.12
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.24
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.32
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_AZG4FN/Project.toml`
  [bdcacae8] LoopVectorization v0.8.24
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_AZG4FN/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.24
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.32
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-9.071632334212154e-13, -1.8565149417781868e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.852607453173732e-10, 1.5536585351583199e-9]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.387223669269133e-12, -2.6711965972481266e-12, 2.353672812205332e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [3.2903324509447884e-10, 6.598859236817134e-10, 7.940093027514195e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [4.11581879689038e-12, -2.812039490152074e-11, 7.604139540262622e-12, -5.456057827757377e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3240120111390752e-10, 2.4274560139758705e-10, 2.687698952286155e-10, 4.919857854446263e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [3.2300828678444304e-12, -4.649836071735081e-12, 6.91335877434085e-12, -9.76874137137429e-12, -8.335554468885675e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.4292126350219405e-12, 1.2219114609024473e-12, -1.1396661392382157e-11, 2.4358293160275934e-12, -6.661338147750939e-16]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [6.214806447246701e-12, -1.7130741269966165e-13, 3.5984548674150574e-12, 1.1135758981595245e-11, -4.4930725806580085e-13, 7.369216348251939e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.935962666901105e-12, 1.5545120746196517e-11, -2.6028845745429408e-11, -8.957279362675763e-12, 3.452926833347192e-11, -4.9481196917611214e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-8.37374614093278e-12, -8.641476423321137e-11, 1.090463275232878e-10, -2.1873725053467297e-11, -1.5807311015691994e-10, 2.1756352275303925e-10, 1.2882450661777511e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.415467743015597e-11, 9.372724818490497e-12, -9.78994663114463e-13, 2.984013036666511e-11, 1.7952528352793706e-11, -2.6061375280050925e-12, -1.8318679906315083e-14]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0276168804779218e-10, 2.262989795553949e-11, -1.4070555831580123e-10, 3.991207364606453e-11, -1.9804113904342557e-10, 4.2590819759880105e-11, -2.7679514236211844e-10, 8.187650557545112e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.8365533800165394e-11, -4.95342655781883e-11, -7.210099184362662e-11, -6.105782546228511e-12, 9.719625104764873e-11, -1.0293055296983766e-10, -1.4752177257548738e-10, -1.1545209233077003e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [3.7804204211511205e-11, -1.672223470805534e-10, -3.5911273954525313e-11, 1.3637535545285573e-11, 6.850053857476723e-11, -3.1561264712820503e-10, -8.604605916673336e-11, 1.698219342927132e-11, -8.080203173221889e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.98576274815332e-10, 2.7254198897708193e-11, -8.290745867611804e-11, -9.331535544276903e-12, -5.838469707697413e-10, 6.531619689553736e-11, -1.6654033707652616e-10, -1.0249689985641908e-11, -4.672685571804891e-10]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-2.7958746429135317e-11, 3.365030476487618e-10, 2.2354962325721317e-10, 8.802403250740554e-11, 6.018918696781839e-11, -6.455957990425532e-11, 6.89058143876764e-10, 4.705589251585707e-10, 1.6756462883904533e-10, 9.6973318264304e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.31612515225288e-11, -8.077849500409684e-11, 1.613442712766755e-11, 5.067057884389214e-13, -5.3562598800738215e-11, 7.062128659640621e-11, -1.645705793862362e-10, 3.4036995444353124e-11, -1.5170420475385527e-11, -1.0329204158665561e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [1.5021717203467233e-10, -6.923051021345827e-11, -3.649336388633628e-11, -1.0530420979648625e-10, 8.574141396877621e-11, 3.042694984856098e-10, -1.4143353155304794e-10, -6.708267275001845e-11, -2.1157953167261212e-10, 1.7253509732029215e-10, -4.874101122709362e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5175528328702512e-11, -1.500066737492034e-11, -1.2335688026610114e-11, -3.187838881757443e-11, -8.251710426065983e-11, -5.215028409111255e-11, -3.096922718270889e-11, -2.6601720826135988e-11, -6.426725818187151e-11, -1.6578272088452195e-10, -8.008482765831104e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1880552097665031e-10, -6.167188981720528e-11, -8.548273200403855e-11, -8.886669178309603e-12, -4.235323203261032e-11, 2.6652013929151508e-11, -2.341525862092908e-10, -1.178243058674866e-10, -1.7838741594999874e-10, -2.1592505561329745e-11, -7.762568365876632e-11, 5.599676278222887e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.66290347947529e-11, 3.101519041592837e-11, -1.288642526020567e-10, -8.286593633499706e-12, 1.5421952603844602e-10, -1.0433442998447617e-10, -1.1074297034951996e-10, 4.873568215657542e-11, -2.53749021794647e-10, -1.331923460412554e-11, 3.0843816389847234e-10, -2.174188606929306e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [8.395573125596911e-11, -4.988431889785261e-11, 1.2504042246064273e-10, 1.8525181388895362e-12, 1.7215695535810482e-10, 8.642575544115516e-11, 1.8547230418164418e-10, -1.0072176426234591e-10, 2.544047195129906e-10, 2.0675905432199215e-11, 3.6043390494455707e-10, 1.7996582002410833e-10, 7.433609283680198e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3354762568317256e-11, 2.944955390660198e-11, 8.073608448455616e-11, 9.616862861605568e-11, 3.745448395875428e-12, -9.472334028259866e-11, -4.5919712476916175e-11, 5.698708172019451e-11, 1.6106982414498816e-10, 1.9421175778688848e-10, 7.2375438975313955e-12, -1.8643053767419815e-10, -7.893685705084863e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [6.235012506294879e-13, -1.5940915254475385e-11, 1.796940374276801e-11, 2.2782220554518062e-11, -2.975253377002218e-11, -6.283418230168536e-12, -1.8574697335793644e-11, 5.995204332975845e-13, -3.0615399104760854e-11, 3.705502571449415e-11, 4.606648396077162e-11, -5.874789543725001e-11, -1.4354628596890961e-11, -3.804656589778688e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.441602558496015e-11, 7.879230601304243e-11, -1.3628542738786109e-11, -5.4260373971715126e-11, 2.3865354137342365e-12, 9.020784119684322e-12, -2.4035662349319864e-11, -6.930089835321951e-11, 1.6008616654517027e-10, -2.6679325415557287e-11, -1.0380019066502655e-10, 9.81859038517996e-12, 2.1242563263967895e-11, -4.623801341807621e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-9.922473953594135e-11, -1.2874146193553315e-11, -1.3722778469116292e-10, -2.9050339911407264e-10, -5.6227356104443516e-11, 7.659317624586492e-11, 4.1852077359294526e-11, -1.9178014731835447e-10, -3.3912095354082794e-11, -2.801566756360785e-10, -5.922412560366297e-10, -1.1379330810967758e-10, 1.5704526568072197e-10, 7.340417162993162e-11, -5.6176174823008296e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.227551890309769e-12, 7.216605091286965e-11, -3.212419219522644e-11, 3.547895310873628e-11, 1.0253420335004648e-10, 6.652234318949013e-11, -8.076683766233828e-11, -1.4866219366638234e-11, 1.4913092982737908e-10, -6.450773248900532e-11, 7.016676129012467e-11, 1.9754398117299843e-10, 1.390567661019304e-10, -1.567045382344645e-10, -1.0724532373274087e-11]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [9.706480064153311e-11, -6.412537167932442e-12, 6.270761687687809e-12, 2.2352564243988127e-11, 2.1366908242725913e-11, 4.4575010349490185e-11, -1.0203815570264396e-10, -2.3244961511181828e-11, 2.0086798890872615e-10, -1.0148992757308406e-11, 7.434275417494973e-12, 4.693423427681864e-11, 5.332578822958567e-11, 9.07407482486633e-11, -2.2879442784784487e-10, -5.455802476461713e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.788414440630277e-11, -2.8177238320381548e-11, 2.401434606724706e-11, 1.8960921721600243e-10, 1.4075962617710047e-10, 3.5362823780360486e-12, -2.355111661245246e-10, -1.482259870400071e-10, 1.7699086640732276e-10, -6.379741179785015e-11, 5.270917036170886e-11, 3.9735259527162725e-10, 2.715092595195756e-10, 1.5250467555461e-11, -4.88579066093564e-10, -3.0484104129868683e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-1.694244744498974e-11, -1.3070211579702118e-10, 2.187250380814021e-11, -3.585121088889309e-11, -6.503153571202347e-11, 3.4216629529737475e-11, -8.287148745012018e-12, 6.19146955926908e-11, -3.719879959618311e-11, -2.6650603945910234e-10, 3.948952276289219e-11, -8.180323085582586e-11, -1.3286738376194762e-10, 6.858491552463875e-11, -1.2420064976481626e-11, 1.2684342465263398e-10, -7.521649969532973e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.603384505865506e-12, -3.5037528434145315e-11, 8.855183253331234e-11, -2.9200974971388405e-11, -3.910116674887831e-11, -1.1077028183592574e-11, -7.888223407803707e-11, -5.838129979451878e-11, 9.779732579318079e-12, -6.877853842013337e-11, 1.889177703162659e-10, -6.11212191969912e-11, -6.998279733494428e-11, -3.399491799171983e-11, -1.5984547019343154e-10, -1.1854206505290676e-10, -4.990563517992541e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.32124311491566e-11, 6.301625887772389e-13, -7.678302438307583e-12, 1.716404796070492e-12, 1.935429594368543e-11, -3.27048388371054e-11, -1.5684897824996824e-11, -5.962785820656791e-12, -1.7371659666309824e-12, -2.63241650699797e-11, 1.8036683258060293e-12, -1.35610411788889e-11, 4.482414439621607e-12, 3.7846614731051886e-11, -6.750400238786369e-11, -3.089639655229348e-11, -1.150801676175206e-11, -5.828226790072222e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1428746837793824e-10, -9.99982319171977e-11, 1.6963541682457617e-10, 1.0373857328715985e-10, -6.34089447615338e-11, 7.721734363030919e-11, -5.4958593231901887e-11, 1.955036132983423e-11, 1.0539791261976461e-10, -2.3255197767468871e-10, -1.9387513816582214e-10, 3.375990598186718e-10, 2.088378359133003e-10, -1.3196177484076088e-10, 1.5570744693604865e-10, -1.0981471287863087e-10, 3.413469507052014e-11, 2.1273272032829027e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [8.432166076488556e-11, -4.1181280607816007e-11, -4.943823128655822e-11, 7.629008536014226e-12, 2.6170399181069115e-11, -1.258624315880752e-10, 6.107714334291359e-11, 1.816369277207741e-11, 5.6702198492075695e-11, 1.6115642154090892e-10, -8.448752808476456e-11, -1.0141387729589724e-10, 1.9532375716835304e-11, 5.1348036933518415e-11, -2.530928799870935e-10, 1.1775136421476873e-10, 3.83000298143088e-11, 1.266600158089659e-10, -1.939892690927536e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.670996757103694e-11, 3.7903014060702844e-12, 4.122013841367789e-11, -1.0485878831900663e-10, -5.5241367036273914e-11, 6.086553483442003e-11, -3.540301385385192e-11, 1.4247936164224484e-11, -1.4221956945448255e-12, -5.072542386130863e-11, 7.650102773482104e-12, 8.249045890806883e-11, -2.143296651269111e-10, -1.121870374376499e-10, 1.2206080590715374e-10, -6.874056879269119e-11, 2.951194844058591e-11, -2.342903648866468e-12, 9.257039579324555e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.591637932563117e-11, -7.931721945908521e-11, 2.9749536167855695e-12, 2.9195756923172667e-11, 4.366640382613696e-11, -7.478706542940472e-11, 2.2517543385447425e-11, -3.071587428848943e-11, -2.6652902107571208e-11, -4.452438417956728e-12, 2.6299851185740408e-11, -1.6835088878508486e-10, 7.923217637539892e-12, 5.840572470106054e-11, 8.590328448576656e-11, -1.55247370514644e-10, 4.604583381251359e-11, -7.00964841726659e-11, -5.221756360640484e-11, -1.2762568779578487e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [7.44799777407934e-11, 5.737188502052959e-11, -1.14898313086087e-10, -1.5705547973254852e-11, 7.466915974418953e-12, -6.258749074561365e-11, 8.597700329460167e-11, 9.087441910082816e-11, 5.0286219632766915e-11, 5.030176275511167e-11, 1.6343459918743974e-10, 1.0275558182115674e-10, -2.293814027609642e-10, -4.245470641706106e-11, 2.059308279456218e-11, -1.3461765036026918e-10, 1.790110282229307e-10, 1.7466383894770843e-10, 9.655654054085971e-11, 1.022610884859887e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [1.3097478657186912e-10, -1.64495639332074e-10, 3.0468960687812796e-11, 4.1802561412396244e-11, 1.2134937499297394e-10, 1.4277956594810348e-10, -1.4840362272394714e-10, -1.2299050666797484e-11, -7.378375688205097e-11, 4.107714168810617e-11, 2.7010882419631344e-10, -3.2207259081928896e-10, 7.355138720299692e-11, 8.319567257331073e-11, 2.3953172778590215e-10, 2.8150681785632514e-10, -2.793536513223671e-10, -1.7413182007430805e-11, -1.4330159281428223e-10, 8.029887865745877e-11, -4.150446653028439e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1295631097141268e-11, 5.236855393775386e-11, 7.021827563846728e-11, -2.0563439839804687e-11, 4.0206726836800044e-11, -1.0029210795181598e-10, -4.966360656055713e-12, -3.391287251020003e-11, 1.9557910846401683e-11, 4.012945531428613e-11, 2.160605028223017e-11, 1.1104317465537861e-10, 1.5423484711618585e-10, -3.189681851978321e-11, 8.353095992674753e-11, -1.9506241066835628e-10, -1.2823075934420558e-11, -6.768319238403819e-11, 3.7621461501657905e-11, 6.420997067380085e-11, 3.641420498468051e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [2.6508573114369938e-11, 2.8211877278749853e-11, -1.8262280576664125e-11, -7.147704650378728e-11, 7.793388157040226e-11, -8.456113587129721e-11, 3.821454264141266e-11, -3.932076886314917e-11, 3.440359108708435e-11, 1.506994529165695e-11, 8.214762203806458e-12, 4.8981707578832356e-11, 5.782596623760128e-11, -3.931255321276694e-11, -1.4001688697362624e-10, 1.5775802886253132e-10, -1.6745860254019362e-10, 7.397682466603328e-11, -7.703260251901156e-11, 6.8779648643158e-11, 3.196731768184691e-11, 1.3813394872386198e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.787936796508575e-11, -4.6395443042968054e-11, 1.3327117187600379e-11, -7.567968474120335e-11, 9.501954778556865e-12, -1.1660006293823244e-10, 3.4785507807555405e-11, 3.7364999982969493e-11, -1.836575336255919e-11, 5.340838882261778e-11, -7.1878059060281885e-12, -1.1444378777980546e-10, -9.593581484779179e-11, 2.7140512059986577e-11, -1.5838641509446916e-10, 2.0694113089803068e-11, -2.2663659837718342e-10, 6.11775075043397e-11, 7.889466857591287e-11, -3.701938755540368e-11, 1.0334999522854105e-10, -1.571121011068044e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-3.8110958833215136e-11, 1.212319133969686e-11, 4.834799227637632e-12, 2.930788944865981e-11, -1.9187318400781805e-11, 3.170441686961567e-11, -2.0352830532033295e-11, 5.908606937055083e-12, -2.444233704324006e-11, -4.966582700660638e-12, 1.600120036471253e-11, -6.827527432307079e-11, 1.8039347793319394e-11, 9.600986672353429e-12, 5.997047303196723e-11, -3.8109182476375736e-11, 6.372191663217563e-11, -3.902766998464813e-11, 1.1872280936131574e-11, -4.814648679740685e-11, -8.712031096536066e-12, 3.2738256550146616e-11, 2.991140668484604e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [8.59798898744657e-11, -1.1377343511753679e-10, 5.008438108689006e-12, 2.077467087246987e-10, 1.9522605754218603e-11, 4.484546067828887e-11, -1.8712942306819969e-10, 2.8301139209929715e-11, 5.569322780729635e-12, -1.5371925954354992e-11, -7.285250180899538e-11, 1.7361290183259825e-10, -2.2681889699782687e-10, 1.2286172079711832e-11, 4.1864023359039493e-10, 3.736033704626607e-11, 8.926215322446751e-11, -3.6407021841711185e-10, 5.62054847108584e-11, 7.319700401353657e-12, -3.173317164595346e-11, -1.4704004680510252e-10, 2.758326900220709e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [1.7856398581983512e-9, 1.8813985924737153e-9, -5.186769902465471e-10, 1.325526133300059e-9, -9.975499315473257e-10, -6.92967905280284e-10, 1.5404122422069122e-11, -6.286747789019387e-10, 1.179072395274261e-10, -1.7580590316867983e-9, 1.531219595563016e-12, -8.833126452501006e-10, 3.5781124729794556e-9, 3.7704923627757125e-9, -1.0378193859850171e-9, 2.6558439891744e-9, -1.9988447563790146e-9, -1.3884177141321175e-9, 3.291766859092604e-11, -1.2601258925215575e-9, 2.3489343803362317e-10, -3.526429259714803e-9, 3.4494629375103614e-12, -1.768891477738066e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4013357141351435e-10, 6.657452367164751e-11, 1.5693002453076588e-11, -2.3278257099690336e-10, 6.634404137173533e-11, -6.147138353895798e-11, -7.778433452898526e-11, 2.0341750506247536e-10, 6.230416182972931e-11, 6.384071049581053e-11, 1.797704207717743e-10, 9.334177875075511e-11, -3.043690854909187e-10, 1.4204637466264103e-10, 4.075073611886637e-11, -4.584580493016688e-10, 1.1403034072543505e-10, -1.2534651094853189e-10, -1.5718426560340504e-10, 4.1505843206834925e-10, 1.2780043689986087e-10, 1.3039125335012614e-10, 3.562354855546346e-10, 1.8585244454527583e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
