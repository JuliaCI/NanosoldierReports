Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed libcxxwrap_julia_jll ─ v0.8.0+0
  Installed BinDeps ────────────── v1.0.1
  Installed CxxWrap ────────────── v0.11.0
  Installed URIParser ──────────── v0.4.1
  Installed Xtensor ────────────── v0.8.2
  Installed MacroTools ─────────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [65419b8a] + Xtensor v0.8.2
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9e28174c] + BinDeps v1.0.1
  [1f15a43c] + CxxWrap v0.11.0
  [1914dd2f] + MacroTools v0.5.5
  [30578b45] + URIParser v0.4.1
  [65419b8a] + Xtensor v0.8.2
  [3eaa8342] + libcxxwrap_julia_jll v0.8.0+0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Xtensor → `~/.julia/packages/Xtensor/keFSH/deps/build.log`
┌ Error: Error building `Xtensor`: 
│ Cloning into '/home/pkgeval/.julia/packages/Xtensor/keFSH/deps/xtl'...
│ Note: checking out '0d1f896ba90664248279baaea0059699cff5ab9b'.
│ 
│ You are in 'detached HEAD' state. You can look around, make experimental
│ changes and commit them, and you can discard any commits you make in this
│ state without impacting any branches by performing another checkout.
│ 
│ If you want to create a new branch to retain commits you create, you may
│ do so (now or later) by using -b with the checkout command again. Example:
│ 
│   git checkout -b <new-branch-name>
│ 
│ [ Info: Attempting to create directory /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/../builds/xtl
│ [ Info: Changing directory to /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/../builds/xtl
│ ERROR: LoadError: IOError: could not spawn `cmake -G 'Unix Makefiles' -DCMAKE_INSTALL_PREFIX=/home/pkgeval/.julia/packages/Xtensor/keFSH/deps/usr -DBUILD_TESTS=OFF -DCMAKE_INSTALL_LIBDIR=lib /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/xtl`: no such file or directory (ENOENT)
│ Stacktrace:
│   [1] _spawn_primitive(file::String, cmd::Cmd, stdio::Vector{Any})
│     @ Base ./process.jl:99
│   [2] #596
│     @ ./process.jl:112 [inlined]
│   [3] setup_stdios(f::Base.var"#596#597"{Cmd}, stdios::Vector{Any})
│     @ Base ./process.jl:196
│   [4] _spawn
│     @ ./process.jl:111 [inlined]
│   [5] run(::Cmd; wait::Bool)
│     @ Base ./process.jl:439
│   [6] run(::Cmd)
│     @ Base ./process.jl:438
│   [7] run(s::BinDeps.SynchronousStepCollection)
│     @ BinDeps ~/.julia/packages/BinDeps/QvmEl/src/BinDeps.jl:524
│   [8] satisfy!(dep::BinDeps.LibraryDependency, methods::Vector{DataType})
│     @ BinDeps ~/.julia/packages/BinDeps/QvmEl/src/dependencies.jl:951
│   [9] satisfy!(dep::BinDeps.LibraryDependency)
│     @ BinDeps ~/.julia/packages/BinDeps/QvmEl/src/dependencies.jl:929
│  [10] top-level scope
│     @ ~/.julia/packages/BinDeps/QvmEl/src/dependencies.jl:984
│  [11] include(fname::String)
│     @ Base.MainInclude ./client.jl:443
│  [12] top-level scope
│     @ none:5
│ in expression starting at /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/build.jl:112
│ Building xtl
│ Building xtensor
│ Building xtensor-julia
│ Building xtensor-julia-examples
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:943
    Testing Xtensor
Status `/tmp/jl_Id1W7v/Project.toml`
  [9e28174c] BinDeps v1.0.1
  [1f15a43c] CxxWrap v0.11.0
  [65419b8a] Xtensor v0.8.2
  [8f399da3] Libdl
  [8dfed614] Test
Status `/tmp/jl_Id1W7v/Manifest.toml`
  [9e28174c] BinDeps v1.0.1
  [1f15a43c] CxxWrap v0.11.0
  [1914dd2f] MacroTools v0.5.5
  [30578b45] URIParser v0.4.1
  [65419b8a] Xtensor v0.8.2
  [3eaa8342] libcxxwrap_julia_jll v0.8.0+0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
ERROR: LoadError: /home/pkgeval/.julia/packages/Xtensor/keFSH/deps/deps.jl not found, package xtensor-julia did not build properly
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] top-level scope
   @ ~/.julia/packages/Xtensor/keFSH/src/Xtensor.jl:9
 [3] include
   @ ./Base.jl:375 [inlined]
 [4] include_package_for_output(input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId,UInt64}}, uuid_tuple::Tuple{UInt64,UInt64}, source::String)
   @ Base ./loading.jl:1219
 [5] top-level scope
   @ none:1
 [6] eval
   @ ./boot.jl:344 [inlined]
 [7] eval(x::Expr)
   @ Base.MainInclude ./client.jl:445
 [8] top-level scope
   @ none:1
in expression starting at /home/pkgeval/.julia/packages/Xtensor/keFSH/src/Xtensor.jl:3
ERROR: LoadError: Failed to precompile Xtensor [65419b8a-9a19-58ae-bde3-3f7e1d1bf8ef] to /home/pkgeval/.julia/compiled/v1.6/Xtensor/p6riU_1mqgb.ji.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] compilecache(pkg::Base.PkgId, path::String)
   @ Base ./loading.jl:1350
 [3] _require(pkg::Base.PkgId)
   @ Base ./loading.jl:1030
 [4] require(uuidkey::Base.PkgId)
   @ Base ./loading.jl:928
 [5] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:923
 [6] include(fname::String)
   @ Base.MainInclude ./client.jl:443
 [7] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/Xtensor/keFSH/test/runtests.jl:11
ERROR: Package Xtensor errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1567
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
