Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.2
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.24
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.24
  Installed VectorizedRNG ─────── v0.1.12
  Installed VectorizationBase ─── v0.12.31
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.24
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_OmTsTV/Project.toml`
  [bdcacae8] LoopVectorization v0.8.24
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_OmTsTV/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.24
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-5.706179972975178e-11, -1.0113976323111729e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4510059820338483e-11, -3.0359048608374906e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [8.386402683413507e-12, 1.6683543435647152e-11, 2.2093438190040615e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1221779061543202e-10, 2.182531932959364e-10, -2.292555034699717e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [2.4696911182786607e-11, -1.5172196832224927e-11, 4.303402079131047e-11, -3.125155689787107e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.133049375492192e-13, -3.772537837676282e-13, 5.619948950652542e-13, -7.061018436615996e-13]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-4.898048633350527e-11, -5.982481177113641e-11, -9.079215157470344e-11, -1.2228462686891817e-10, 3.0117686122821397e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2453483516926553e-11, -4.871802961048388e-11, -4.2552628087833e-11, -9.947609402871649e-11, -1.2922218850519585e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [2.1506729730447205e-10, -6.9150241088777875e-12, -4.110506379717549e-10, 4.345737103506053e-10, -3.146261029485231e-12, -8.429358322459279e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [9.038103598868474e-12, 5.3620441420321185e-11, 5.23041610023256e-11, 2.1807444738897175e-11, 1.0924394722167108e-10, 1.0652811965883302e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-9.373324338923794e-11, 8.918643601418808e-12, -1.2363532420067713e-10, -1.916283798308882e-10, 7.747580355044192e-12, -2.5113267021481533e-10, -1.3751411120921375e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.7885692926711272e-11, 3.165179229824844e-11, 2.0049295557100777e-11, 3.7793101981264954e-11, 6.637024263511648e-11, 3.824363048465784e-11, -4.8054893397875276e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.928723847299807e-11, -3.711075891033033e-11, -2.14572803969304e-11, 2.7982505201862296e-11, 4.022715494045315e-11, -7.415423830536838e-11, -4.0536018985903866e-11, 5.17719200843203e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8470559243487514e-12, 2.0962342972552506e-11, 1.4012790927608876e-11, -5.608846720406291e-12, 5.642153411145046e-13, 4.314193446930403e-11, 2.6586510770698624e-11, -1.0386691506880652e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [3.181743757352251e-11, 2.6659519036797974e-10, 1.3930834263931047e-10, 9.000178380347279e-11, 6.229905480381603e-11, 5.493372423615028e-10, 2.8699154164257834e-10, 1.619218092940855e-10, -1.5271117703719028e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.1037284681522124e-11, -3.355404842864118e-11, 1.837419105754634e-12, -1.8363754961114864e-11, -8.124134698306307e-11, -6.014488906913584e-11, 8.550493646453106e-12, -3.283584515401117e-11, 9.880984919163893e-14]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-4.4003911625623005e-11, 1.3650414132371225e-11, 1.6382761813815705e-10, -8.917178107026302e-11, -2.440795343616742e-10, -9.324696570445212e-11, 6.617151271370858e-12, 3.329350128922215e-10, -1.639287594557004e-10, -5.135987191096092e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1272871525136452e-10, 6.441713829019591e-11, 1.6309509298650937e-10, 4.633493588812598e-11, 8.541589657795612e-11, -2.2277868438891346e-10, 1.2664647108806548e-10, 3.2092639656866595e-10, 1.0693801399952463e-10, 1.7886425673907524e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.7035707006461962e-11, 2.6394886276648322e-11, -3.048061802957136e-11, -4.9503734445011105e-12, -2.3438251339769067e-11, 5.356892707197858e-11, 5.158518057157835e-11, -6.11757311475003e-11, -1.3273160348603597e-11, -4.7861492546985573e-11, -2.1869284161368796e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.410960403016361e-11, -2.159494805198392e-12, 1.0264988858921242e-10, 1.2379453018240838e-10, 9.094147657151552e-11, -6.0372484789184e-11, -6.3972160901926145e-12, 2.128952569790954e-10, 2.3275603666661482e-10, 2.0295809477488547e-10, -2.4202861936828413e-14]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-2.3000179538712473e-10, 1.6756818155272413e-11, 1.1126366494806916e-10, 1.9237722526099788e-11, -6.175616684700458e-10, 2.055140502221775e-10, -4.5123094150056886e-10, 3.8341330110824856e-11, 2.255999831390909e-10, 4.55775417407267e-11, -1.24216958941048e-9, 4.0556069613728596e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.694922311505479e-11, -3.183071584089703e-10, 3.631273060022977e-11, 1.4455103780619538e-13, -5.803690861228006e-11, 4.649991502958528e-11, -9.863043715085951e-11, -6.308162880941381e-10, 7.58690887892044e-11, -6.490252779656203e-12, -1.0385281523639378e-10, 9.487322039092305e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-7.692868564390665e-11, 7.471756546806319e-11, 6.039035937988046e-11, -1.0861145316454213e-10, 3.2027513974242083e-10, 1.597333376679444e-10, -1.6446233264133525e-10, 1.5382872753377796e-10, 1.1228862284440311e-10, -2.189406433927843e-10, 6.357636639364728e-10, 3.1474867157044173e-10, 5.380806911148284e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0915046644299764e-11, 7.39708294617003e-11, -4.166778033720675e-12, -9.107603560210009e-12, 2.5430768602063836e-12, -5.209732645283793e-11, 1.591549114721147e-11, 1.414597328164291e-10, -2.017919165098192e-11, -1.7465584534193113e-11, 3.6082248300317588e-12, -1.0407918971111485e-10, 9.358069874565444e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-8.286371588894781e-12, -2.536526544361095e-11, 8.216360924961918e-11, 4.0145886615050586e-11, 1.432898244502212e-11, 1.6439516414834543e-11, -4.6743720005792966e-11, -1.8452572803084877e-11, -5.6034510365066126e-11, 1.5882339887696162e-10, 8.166312071011816e-11, 2.90887314235988e-11, 3.354028166313583e-11, -8.692968567203252e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.682410263498696e-12, 3.479283527951793e-11, 3.917022262101e-11, 2.0809132195154234e-11, -6.601497126723643e-11, 1.4115131286018823e-10, -2.832467593805177e-11, -1.5712653400612453e-11, 6.655787032627813e-11, 8.33266788902165e-11, 5.5152327149698976e-11, -1.2904677326730507e-10, 2.8602986645864803e-10, -4.598532665767152e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3950507415927405e-11, 2.973066237643707e-11, 3.2818192607919627e-12, 5.760059096360237e-12, -1.6713841421989173e-10, -9.047396165584587e-11, -1.512823200044977e-11, -4.846190115870286e-11, 5.771272348908951e-11, 1.6376899836245684e-11, -5.031641769903672e-12, -3.3064062598953115e-10, -1.7297296928120431e-10, -2.667155385438491e-11, 2.815747635054322e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.0208059104429594e-11, -1.933619930838404e-11, -1.5185408486217966e-11, -3.837929973826704e-12, -3.781730484320178e-11, 4.247757701136834e-11, 4.416933485629215e-11, -7.925915479489731e-11, -3.952205229751371e-11, -3.008993054720577e-11, -5.2130522121274225e-12, -7.571820948015784e-11, 7.849254579639364e-11, 8.886535951546648e-11, -1.074362820929764e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-7.987766004191599e-11, 3.097788692230097e-11, -1.061052357087533e-10, -1.2661460768725874e-10, -8.473233226169441e-11, 4.53681536782824e-12, 9.452660876263508e-11, -7.691391967767913e-11, -1.6110512923717124e-10, 6.091815940578726e-11, -2.2246438025064208e-10, -2.592464021233809e-10, -1.7106327465654658e-10, 1.06430420032666e-11, 1.872155763749106e-10, -1.5613044190843084e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0046254373417014e-10, 7.298983639714152e-11, 4.0485548247204406e-10, -1.3570811141505601e-11, 7.78650477428755e-11, 9.196019501445107e-10, 2.0943247136528953e-11, -9.751588425643831e-11, -5.921113599427485e-10, 1.5870504910253658e-10, 8.056217914997887e-10, -1.8114953981296367e-11, 1.6862600205058698e-10, 1.8428261139291635e-9, 4.46807035814345e-11, -1.860255283148149e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [3.931410752500142e-11, -1.0552980711509008e-10, 1.673319260930839e-10, 1.0449796583600346e-10, 1.6542256453533355e-10, 3.001576764916081e-11, 2.7233104660240315e-11, -1.0397083194391143e-10, 8.662226491651381e-11, -1.9702628417661572e-10, 3.3314950798057907e-10, 2.0078982920779254e-10, 3.4440961194093234e-10, 6.158162868530326e-11, 5.5200732873572633e-11, -2.077147343015895e-10, 2.42950104478723e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5062051605951865e-10, 2.9987790028940253e-11, 2.2261725796113296e-10, 1.34701139131721e-10, 1.7844570265879156e-10, -2.617960292994326e-10, 1.770505964060476e-10, -6.774936167630585e-11, -3.081997990150853e-10, 7.864464635076729e-11, 4.4835113399699367e-10, 2.664981568756275e-10, 3.577045326608186e-10, -5.387338353202153e-10, 3.447340191087278e-10, -1.216254874591982e-10, 1.137734351175368e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-9.3171803605685e-11, 4.731282032821582e-11, -2.493139028558744e-11, -1.2316792030730994e-10, -1.0544998207961953e-10, 1.46201939443813e-10, -3.62806451548181e-11, 1.4296186456874693e-10, 1.6484524856252847e-10, -1.8527235301490919e-10, 9.201883699461177e-11, -5.5014104383133144e-11, -2.471713944629528e-10, -2.0478119200362244e-10, 2.9776403565051623e-10, -7.162725967901906e-11, 2.820725875096741e-10, 3.3267388843682966e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.486566839214447e-11, 1.2182588271514305e-10, 6.431322141509099e-11, -7.253497802395259e-11, 5.316125317733622e-11, -1.6365131472184657e-11, 3.105959933691338e-11, 1.8745627272664933e-10, -1.8267054535670013e-11, 1.274627070557699e-10, 2.5384827573304847e-10, 1.1211676032019113e-10, -1.382016723283641e-10, 1.0466671973574648e-10, -3.345779209240618e-11, 5.687139648102857e-11, 3.8462211193746043e-10, -3.6927683133569644e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [2.979261282121115e-11, 2.876032745291468e-11, 7.245248845322294e-11, 1.4017675908917226e-12, -1.7426837750633695e-11, 1.5021317523178368e-12, 4.84241535758656e-11, 3.3291147616409944e-11, -4.1048386911768375e-11, 6.020961507147149e-11, 5.845413042493419e-11, 1.46098244613313e-10, 4.636069306229729e-12, -2.9875324436545725e-11, 5.5917492858270634e-12, 9.712652904170227e-11, 6.789391271411205e-11, -7.927614120717408e-11, 5.213163234429885e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.951439424085493e-11, -6.534683905101701e-11, 1.611268896084539e-10, 2.9924818178983514e-10, 2.2958324130684105e-10, -1.7590562340075167e-10, -3.384825753016685e-11, 1.0289813445751861e-10, -2.0509205445051748e-10, 1.4771739387242633e-10, -1.2325052090034205e-10, 3.218627586676348e-10, 5.912872413915693e-10, 4.530589237106142e-10, -3.407183424286586e-10, -5.405309533301761e-11, 2.112507946350206e-10, -4.288230881499544e-10, -1.7996049095359012e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [4.6195491876233064e-11, 8.634959414166588e-11, 2.5605961795349685e-11, -3.290423489232808e-11, 1.1884981887533286e-10, -6.432354648922001e-11, 2.6203039737993095e-11, 4.901279382352186e-11, 7.453082595532123e-11, -8.198619561028408e-11, 8.777067961318608e-11, 1.790865233886052e-10, 4.916200779803148e-11, -6.473122038386236e-11, 2.39618103137218e-10, -1.234452540188613e-10, 5.0982551513811813e-11, 9.6238794711212e-11, 1.4626100330872305e-10, -1.601796473238437e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.900213485508175e-12, 4.489741911584133e-12, -7.467371165859049e-11, -5.445643935786393e-13, 3.725397768050698e-11, 1.0111889103825433e-10, 8.918421556813882e-12, -2.7718938255816283e-12, -4.030065170468333e-11, -1.621525136386026e-11, 7.468026197443578e-12, 4.50595116774366e-12, -1.477136191141426e-10, -4.9221737796756315e-12, 7.498801579686187e-11, 1.8964030346069194e-10, 1.690403372833771e-11, -6.444178524134259e-12, -6.757472359453232e-11, -3.637667944644818e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-3.642930401781541e-11, -1.4572787421229805e-11, -8.274270157926367e-11, -2.2521207121428688e-11, -1.8777424060090198e-11, -4.4051207126472036e-11, -4.988454094245753e-12, 9.261125200055176e-11, -3.148936666974578e-11, -7.861911122120091e-11, -7.557332537544426e-11, -2.914901653383595e-11, -1.6288004278663948e-10, -4.3538839200607526e-11, -3.6470493292029005e-11, -8.793543671004045e-11, -8.889111668963778e-12, 1.8557133607544074e-10, -6.300659993740965e-11, -1.5661671959321666e-10, 2.3876456367588617e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.761679691014706e-11, 1.1131584543022655e-10, 9.315348492577868e-11, -1.5450840606945349e-10, -6.72987221506105e-11, 3.7267966490617255e-11, 1.0810596862143029e-10, -8.124545480825418e-11, -1.5763390592837823e-11, 7.237921373359768e-11, -3.668332304584965e-11, 2.1060286847784937e-10, 1.8656920452997383e-10, -3.147198057718015e-10, -1.2309231411933297e-10, 7.321254713588132e-11, 2.152495959251155e-10, -1.7385404227354684e-10, -2.566757917321638e-11, 1.5224266292079847e-10, -2.6090019034086254e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.3162249068443543e-10, 1.841038432814912e-11, 1.2452261444195756e-12, -1.1287193402154116e-11, 9.942802137175022e-11, -3.835509687633021e-11, 6.4863669990700146e-12, -4.869060710177564e-11, -8.427991637915966e-11, 3.5462521807971825e-11, -4.050360047358481e-11, 2.646061147970613e-10, 4.566658162730164e-11, -2.5002222514558525e-12, -2.3918200753314522e-11, 1.9029866571429466e-10, -6.862466150892033e-11, 1.237432378786707e-11, -9.903611264405754e-11, -1.6158019366940835e-10, 6.610312297539167e-11, -8.030720533014346e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1166645386140317e-10, -5.7148397125672545e-11, 4.3872461219507386e-11, -3.380862256818773e-11, 6.456102319418733e-11, -5.0735859957740104e-11, 1.9544810214711106e-11, -1.447014730260321e-10, 2.94391178101705e-11, 1.1505196795269512e-10, -1.225247681091446e-10, 2.278104371811196e-10, -1.1487155671119353e-10, 8.809974971768497e-11, -6.800815466334598e-11, 1.2915157832082969e-10, -9.81322800797102e-11, 3.498246137212391e-11, -2.8807400909158787e-10, 6.111955386245427e-11, 2.3552737538068413e-10, -2.2938928534443903e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [2.496891582381977e-12, 5.267342118031593e-12, 2.6427748878177226e-12, -1.0120349003273077e-11, -1.0866640920426107e-11, 4.851230528402084e-12, 9.47264489070676e-12, -3.521960501018384e-12, 1.8538504065190864e-12, 1.2279288696959156e-11, -2.6001423236721166e-12, 3.5693670241698783e-12, 1.0220269075489341e-11, 5.433431482515516e-12, -2.0402568523536502e-11, -2.1716406450877912e-11, 1.020916684524309e-11, 1.8859358519307534e-11, -7.772005261585946e-12, 3.688827021619545e-12, 2.4895419059589585e-11, -5.0963677722393186e-12, -5.875300246316328e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.166689133138334e-11, -2.1240897929430957e-11, -5.5465632087248196e-12, 2.9031221870923218e-11, -4.951261622920811e-12, 3.3337110849629426e-11, 1.5616619108982377e-11, -1.134692340087895e-11, 3.588951358324266e-11, 2.7832403048932974e-11, 9.723777338876971e-12, -6.010869579853306e-11, -4.1512571158364153e-11, -1.0264233907264497e-11, 6.002243146951969e-11, -1.024536011584587e-11, 6.790545903356815e-11, 3.267941472984148e-11, -2.2635893159872467e-11, 7.239586707896706e-11, 5.654321455494937e-11, 2.1074919587249497e-11, 1.0880185641326534e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-5.0730197820314515e-11, -1.3267242859882344e-10, -1.4111412038886328e-10, 8.147860164342546e-11, 8.007394747266972e-11, -3.844746743197902e-10, 7.909117805127153e-11, -1.3370748952468148e-10, 6.554401466019044e-11, -1.9698342956786519e-10, 1.876601096739705e-10, 3.5452307756145274e-11, -1.0308875975084675e-10, -2.6871049829679805e-10, -2.845662594452847e-10, 1.6074386266495821e-10, 1.5876233661060724e-10, -7.710988514375572e-10, 1.57285073854041e-10, -2.7946489566943455e-10, 1.2644729707744773e-10, -3.8867653540108904e-10, 3.758868771797097e-10, 6.62825350161711e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.504319305378203e-11, -1.9780099780319915e-10, -6.06656946899875e-11, -1.4656043045846445e-10, 1.2216005984555522e-11, 7.241429678117584e-11, -2.347032568295049e-10, 2.1040946762695967e-11, 4.819311616444111e-10, -5.608724595873582e-11, 5.323186336170238e-11, -6.787892470327961e-10, -1.2782985781001344e-10, -3.9499825632560714e-10, -1.2032919105564588e-10, -3.0009172924394534e-10, 1.876032662551097e-11, 1.392792547960653e-10, -4.713852641557992e-10, 3.574962548213989e-11, 9.639447018372493e-10, -1.1466050331421229e-10, 1.0721445953265629e-10, -1.3616198168975302e-9]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
