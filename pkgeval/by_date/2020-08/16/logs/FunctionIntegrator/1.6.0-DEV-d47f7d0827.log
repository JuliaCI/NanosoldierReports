Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_fi9NBj/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_fi9NBj/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.106543 seconds (1.34 M allocations: 71.190 MiB, 10.27% gc time)
Running: chebyshev_quadrature with k=1
  2.072912 seconds (2.24 M allocations: 129.182 MiB, 4.37% gc time)
Running: chebyshev_quadrature with k=2
  0.299620 seconds (425.05 k allocations: 24.387 MiB)
Running: chebyshev_quadrature with k=3
  0.395472 seconds (544.93 k allocations: 29.892 MiB, 5.16% gc time)
Running: chebyshev_quadrature with k=4
  0.368366 seconds (487.80 k allocations: 26.411 MiB)
Running: jacobi_quadrature with α=β=1
 43.482504 seconds (39.42 M allocations: 3.140 GiB, 10.24% gc time)
Running: laguerre_quadrature with k=1
  4.075349 seconds (3.33 M allocations: 185.648 MiB, 14.67% gc time)
Running: legendre_quadrature
  0.264091 seconds (215.07 k allocations: 12.340 MiB)
Running: lobatto_quadrature
  0.381956 seconds (344.01 k allocations: 20.632 MiB, 6.59% gc time)
Running: radau_quadrature
  0.298455 seconds (326.42 k allocations: 19.656 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.914872 seconds (100.02 M allocations: 1.491 GiB, 0.48% gc time)
Running: rectangle_rule_midpoint.
  0.144842 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 80.673386 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rombergs_method
  0.555319 seconds (752.55 k allocations: 43.309 MiB, 5.14% gc time)
Running: simpsons_rule
  0.036898 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.100056 seconds (113.06 k allocations: 5.972 MiB)
Running: trapezoidal_rule
  0.308582 seconds (1.52 M allocations: 25.795 MiB, 4.30% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.079892 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.423704 seconds (275.57 k allocations: 13.974 MiB)
Running: chebyshev_quadrature with k=2
  0.149891 seconds (115.72 k allocations: 3.793 MiB)
Running: chebyshev_quadrature with k=3
  0.149918 seconds (105.07 k allocations: 3.639 MiB)
Running: chebyshev_quadrature with k=4
  0.147250 seconds (87.68 k allocations: 3.285 MiB)
Running: jacobi_quadrature with α=β=1
  2.354539 seconds (535.83 k allocations: 163.480 MiB, 15.10% gc time)
Running: legendre_quadrature
  0.178180 seconds (62.25 k allocations: 3.473 MiB)
Running: lobatto_quadrature
  0.021053 seconds (16.73 k allocations: 1.033 MiB)
Running: radau_quadrature
  0.021073 seconds (16.72 k allocations: 1.033 MiB)
Running: rectangle_rule_left
 31.655240 seconds (471.41 M allocations: 7.025 GiB, 3.42% gc time)
Running: rectangle_rule_midpoint
  0.000021 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.483149 seconds (476.96 M allocations: 7.107 GiB, 3.41% gc time)
Running: rombergs_method
  0.398624 seconds (360.15 k allocations: 20.307 MiB)
Running: simpsons_rule
  0.000033 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.069261 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.056149 seconds (18.35 k allocations: 1.100 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029436 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.108218 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.120240 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.121772 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.111992 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.302554 seconds (378.75 k allocations: 19.777 MiB)
Running: legendre_quadrature
  0.062874 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000139 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000050 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000545 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000371 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000533 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072443 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000042 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.038286 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021648 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.055678 seconds (75.84 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.207479 seconds (240.25 k allocations: 13.487 MiB, 13.48% gc time)
Running: chebyshev_quadrature with k=2
  0.214961 seconds (295.45 k allocations: 16.590 MiB)
Running: chebyshev_quadrature with k=3
  0.189659 seconds (275.41 k allocations: 14.984 MiB)
Running: chebyshev_quadrature with k=4
  0.248011 seconds (275.44 k allocations: 14.942 MiB, 9.71% gc time)
Running: jacobi_quadrature with α=β=1
  2.071259 seconds (465.45 k allocations: 164.226 MiB, 7.53% gc time)
Running: legendre_quadrature
  0.162877 seconds (193.00 k allocations: 11.111 MiB, 8.95% gc time)
Running: lobatto_quadrature
  0.185254 seconds (204.13 k allocations: 11.806 MiB)
Running: radau_quadrature
  0.184819 seconds (204.12 k allocations: 11.818 MiB)
Running: rectangle_rule_left
  1.115539 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027194 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.112688 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.147211 seconds (139.91 k allocations: 8.059 MiB, 13.05% gc time)
Running: simpsons_rule
  0.028552 seconds (29.02 k allocations: 1.803 MiB)
Running: simpsons38_rule
  0.036014 seconds (44.65 k allocations: 2.787 MiB)
Running: trapezoidal_rule
  0.027728 seconds (45.20 k allocations: 1.824 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042574 seconds (101.41 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.223487 seconds (247.35 k allocations: 13.587 MiB)
Running: chebyshev_quadrature with k=2
  0.217524 seconds (303.08 k allocations: 16.593 MiB)
Running: chebyshev_quadrature with k=3
  0.239997 seconds (282.82 k allocations: 15.002 MiB, 9.13% gc time)
Running: chebyshev_quadrature with k=4
  0.292624 seconds (282.85 k allocations: 15.010 MiB)
Running: hermite_quadrature with k=2
 17.175807 seconds (22.12 M allocations: 1.148 GiB, 9.84% gc time)
Running: jacobi_quadrature with α=β=1
  0.507565 seconds (475.44 k allocations: 50.420 MiB, 19.20% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.207528 seconds (288.35 k allocations: 15.902 MiB)
Running: legendre_quadrature
  0.214359 seconds (200.06 k allocations: 11.459 MiB, 17.91% gc time)
Running: lobatto_quadrature
  0.211006 seconds (225.53 k allocations: 37.620 MiB)
Running: radau_quadrature
  0.246134 seconds (222.12 k allocations: 30.283 MiB, 9.38% gc time)
Running: rectangle_rule_left
  0.033709 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.029662 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026895 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.122129 seconds (142.73 k allocations: 8.122 MiB)
Running: simpsons_rule
  0.040787 seconds (41.25 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.044954 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.032380 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.046422 seconds (61.51 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.252369 seconds (242.48 k allocations: 13.352 MiB, 11.07% gc time)
Running: chebyshev_quadrature with k=2
  0.240043 seconds (297.80 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.218546 seconds (277.68 k allocations: 14.769 MiB)
Running: chebyshev_quadrature with k=4
  0.272961 seconds (277.71 k allocations: 14.784 MiB, 11.69% gc time)
Running: hermite_quadrature with k=2
  0.168029 seconds (177.71 k allocations: 10.157 MiB)
Running: jacobi_quadrature with α=β=1
 10.619395 seconds (468.04 k allocations: 1.176 GiB, 17.36% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.261643 seconds (283.21 k allocations: 15.708 MiB)
Running: legendre_quadrature
  0.281228 seconds (195.23 k allocations: 11.220 MiB, 17.55% gc time)
Running: lobatto_quadrature
  0.236804 seconds (215.89 k allocations: 23.325 MiB)
Running: radau_quadrature
  0.266799 seconds (215.04 k allocations: 21.256 MiB, 5.90% gc time)
Running: rectangle_rule_left
  0.028586 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.027201 seconds (26.65 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.025846 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.127683 seconds (138.20 k allocations: 7.925 MiB)
Running: simpsons_rule
  0.032484 seconds (33.49 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.037320 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.030099 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.063114 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.272680 seconds (240.81 k allocations: 13.567 MiB)
Running: chebyshev_quadrature with k=2
  0.291758 seconds (296.03 k allocations: 16.652 MiB, 13.13% gc time)
Running: chebyshev_quadrature with k=3
  0.392006 seconds (276.01 k allocations: 14.997 MiB)
Running: chebyshev_quadrature with k=4
  0.283857 seconds (276.04 k allocations: 14.813 MiB, 14.25% gc time)
Running: jacobi_quadrature with α=β=1
  3.418119 seconds (466.09 k allocations: 195.236 MiB, 4.04% gc time)
Running: legendre_quadrature
  0.170592 seconds (193.56 k allocations: 11.134 MiB)
Running: lobatto_quadrature
  0.231508 seconds (204.69 k allocations: 11.848 MiB, 15.25% gc time)
Running: radau_quadrature
  0.209121 seconds (204.69 k allocations: 11.841 MiB)
Running: rectangle_rule_left
  0.350621 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.027829 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.115950 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.152555 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.054686 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.098570 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.028902 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.041572 seconds (33.23 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.317545 seconds (241.38 k allocations: 13.511 MiB, 18.22% gc time)
Running: chebyshev_quadrature with k=2
  0.279266 seconds (296.63 k allocations: 16.566 MiB)
Running: chebyshev_quadrature with k=3
  0.236968 seconds (276.54 k allocations: 14.902 MiB)
Running: chebyshev_quadrature with k=4
  0.271185 seconds (276.58 k allocations: 15.044 MiB, 10.09% gc time)
Running: jacobi_quadrature with α=β=1
  2.005965 seconds (466.75 k allocations: 149.906 MiB, 11.53% gc time)
Running: legendre_quadrature
  0.156865 seconds (194.13 k allocations: 11.150 MiB)
Running: lobatto_quadrature
  0.221523 seconds (205.27 k allocations: 11.853 MiB, 19.19% gc time)
Running: radau_quadrature
  0.167836 seconds (205.26 k allocations: 11.853 MiB)
Running: rectangle_rule_left
  1.223214 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.032841 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.144591 seconds (18.61 k allocations: 1.124 MiB)
Running: rombergs_method
  0.180021 seconds (141.21 k allocations: 8.136 MiB)
Running: simpsons_rule
  0.039301 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.043008 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.031630 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.186907 seconds (152.86 k allocations: 9.083 MiB)
Running: chebyshev_quadrature with k=1
  0.166855 seconds (91.24 k allocations: 3.295 MiB)
Running: chebyshev_quadrature with k=2
  0.223064 seconds (127.01 k allocations: 3.988 MiB, 27.54% gc time)
Running: chebyshev_quadrature with k=3
  0.192513 seconds (115.58 k allocations: 3.818 MiB)
Running: chebyshev_quadrature with k=4
  0.172186 seconds (95.11 k allocations: 3.411 MiB)
Running: jacobi_quadrature with α=β=1
  2.559972 seconds (509.55 k allocations: 169.294 MiB, 5.00% gc time)
Running: legendre_quadrature
  0.190412 seconds (38.34 k allocations: 2.105 MiB, 24.49% gc time)
Running: lobatto_quadrature
  0.000123 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000048 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.318202 seconds (590.00 M allocations: 8.792 GiB, 2.91% gc time)
Running: rectangle_rule_midpoint
  0.000052 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.301502 seconds (592.75 M allocations: 8.833 GiB, 2.80% gc time)
Running: rombergs_method
  0.125250 seconds (41.89 k allocations: 2.258 MiB)
Running: simpsons_rule
  0.000058 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.027670 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.019942 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.115034 seconds (629.34 M allocations: 9.388 GiB, 4.23% gc time)
Running: chebyshev_quadrature with k=1
  0.514986 seconds (439.15 k allocations: 24.265 MiB)
Running: chebyshev_quadrature with k=2
 13.915905 seconds (496.51 k allocations: 4.042 GiB, 3.89% gc time)
Running: chebyshev_quadrature with k=3
  6.341527 seconds (290.50 k allocations: 1.643 GiB, 4.49% gc time)
Running: chebyshev_quadrature with k=4
  8.180284 seconds (290.53 k allocations: 2.262 GiB, 2.47% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 62.616616 seconds (504.88 k allocations: 13.255 GiB, 3.80% gc time)
Running: legendre_quadrature.
  5.888366 seconds (232.84 k allocations: 1.976 GiB, 2.80% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.973493 seconds (8.24 M allocations: 13.384 GiB, 5.74% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.476545 seconds (7.24 M allocations: 13.369 GiB, 3.84% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.242230 seconds (23.35 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.175901 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.146617 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.286010 seconds (456.61 k allocations: 153.699 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.670141 seconds (600.04 M allocations: 8.943 GiB, 8.66% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.525978 seconds (600.05 M allocations: 8.944 GiB, 8.14% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.521482 seconds (600.04 M allocations: 8.943 GiB, 8.00% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.076279 seconds (182.51 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.302802 seconds (257.97 k allocations: 14.018 MiB)
Running: chebyshev_quadrature with k=2
  0.221877 seconds (284.13 k allocations: 15.241 MiB)
Running: chebyshev_quadrature with k=3
  0.245760 seconds (260.62 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=4
  0.216707 seconds (260.65 k allocations: 13.452 MiB)
Running: jacobi_quadrature with α=β=1
  0.420637 seconds (405.02 k allocations: 35.849 MiB)
Running: laguerre_quadrature with k=2
  0.220869 seconds (187.97 k allocations: 10.871 MiB)
Running: legendre_quadrature
  0.125560 seconds (151.74 k allocations: 8.407 MiB)
Running: lobatto_quadrature
  0.036284 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.032150 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.054001 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.050293 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.058085 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.268371 seconds (170.96 k allocations: 9.731 MiB)
Running: simpsons_rule
  0.002386 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.081666 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.211982 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002596 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.122377 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.122703 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.138463 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.137901 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.723530 seconds (401.85 k allocations: 906.548 MiB, 6.48% gc time)
Running: legendre_quadrature
  0.071382 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000228 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000151 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.680718 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000422 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.504502 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081937 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000917 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000792 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.127441 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.143108 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.129068 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.121531 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.285891 seconds (388.13 k allocations: 253.791 MiB)
Running: legendre_quadrature
  0.077880 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000122 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000057 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.828078 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001147 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.161708 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.101466 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001974 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
