Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed PDMats ─ v0.10.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [90014a1f] + PDMats v0.10.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [90014a1f] + PDMats v0.10.0
  [2a0f44e3] + Base64
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
    Testing PDMats
Status `/tmp/jl_0wWqGm/Project.toml`
  [90014a1f] PDMats v0.10.0
  [37e2e46d] LinearAlgebra
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Status `/tmp/jl_0wWqGm/Manifest.toml`
  [90014a1f] PDMats v0.10.0
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [4607b0f0] SuiteSparse
  [8dfed614] Test
Running tests ...
* pdmtypes 
Testing PDMat{Float64,Matrix{Float64}} with dim = 3
Testing PDiagMat{Float64,Vector{Float64}} with dim = 3
Testing ScalMat{Float64} with dim = 3
Testing PDSparseMat{Float64,SparseMatrixCSC{Float64,Int64}} with dim = 3
Testing PDMat{Float32,Matrix{Float32}} with dim = 3
Testing PDiagMat{Float32,Vector{Float32}} with dim = 3
Testing ScalMat{Float32} with dim = 3
Testing PDSparseMat{Float32,SparseMatrixCSC{Float32,Int64}} with dim = 3
* addition 
┌ Warning: Assignment to `X` in soft scope is ambiguous because a global variable by the same name exists: `X` will be treated as a new local. Disambiguate by using `local X` to suppress this warning or `global X` to assign to the existing global variable.
└ @ ~/.julia/packages/PDMats/8bndI/test/addition.jl:10
Testing addition with eltype = Float64
Testing addition with eltype = Float32
* generics 
Testing scalar multiplication
* kron 
    Testing PDMats tests passed 
