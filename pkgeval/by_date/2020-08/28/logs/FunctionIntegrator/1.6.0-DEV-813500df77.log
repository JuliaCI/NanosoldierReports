Julia Version 1.6.0-DEV.740
Commit 813500df77 (2020-08-27 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_mSqZJb/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_mSqZJb/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.155272 seconds (1.45 M allocations: 77.610 MiB, 8.05% gc time)
Running: chebyshev_quadrature with k=1
  1.604545 seconds (2.24 M allocations: 128.544 MiB, 2.32% gc time)
Running: chebyshev_quadrature with k=2
  0.438858 seconds (424.54 k allocations: 24.376 MiB)
Running: chebyshev_quadrature with k=3
  0.466950 seconds (544.36 k allocations: 29.833 MiB, 3.70% gc time)
Running: chebyshev_quadrature with k=4
  0.324456 seconds (487.28 k allocations: 26.382 MiB)
Running: jacobi_quadrature with α=β=1
 39.095360 seconds (39.35 M allocations: 3.137 GiB, 8.95% gc time)
Running: laguerre_quadrature with k=1
  3.069529 seconds (3.33 M allocations: 185.505 MiB, 1.42% gc time)
Running: legendre_quadrature
  0.270953 seconds (214.52 k allocations: 12.279 MiB, 11.22% gc time)
Running: lobatto_quadrature
  0.348351 seconds (342.87 k allocations: 20.546 MiB)
Running: radau_quadrature
  0.306089 seconds (325.29 k allocations: 19.547 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.814413 seconds (100.02 M allocations: 1.491 GiB, 0.29% gc time)
Running: rectangle_rule_midpoint.
  0.201043 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.041513 seconds (100.02 M allocations: 1.491 GiB, 0.22% gc time)
Running: rombergs_method
  0.611414 seconds (751.38 k allocations: 43.253 MiB)
Running: simpsons_rule
  0.070451 seconds (47.32 k allocations: 2.119 MiB, 44.56% gc time)
Running: simpsons38_rule
  0.084378 seconds (113.08 k allocations: 5.979 MiB)
Running: trapezoidal_rule
  0.320157 seconds (1.52 M allocations: 25.801 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.102493 seconds (32.59 k allocations: 1.940 MiB)
Running: chebyshev_quadrature with k=1
  0.643336 seconds (256.38 k allocations: 12.919 MiB)
Running: chebyshev_quadrature with k=2
  0.219792 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.233867 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.220263 seconds (65.31 k allocations: 2.150 MiB)
Running: jacobi_quadrature with α=β=1
  2.624284 seconds (513.76 k allocations: 162.394 MiB, 8.68% gc time)
Running: legendre_quadrature
  0.154235 seconds (43.04 k allocations: 2.471 MiB)
Running: lobatto_quadrature
  0.020885 seconds (16.61 k allocations: 1.026 MiB)
Running: radau_quadrature
  0.021028 seconds (16.60 k allocations: 1.025 MiB)
Running: rectangle_rule_left
 31.266684 seconds (471.41 M allocations: 7.025 GiB, 3.06% gc time)
Running: rectangle_rule_midpoint
  0.000028 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.609034 seconds (476.96 M allocations: 7.107 GiB, 3.04% gc time)
Running: rombergs_method
  0.470265 seconds (338.79 k allocations: 19.204 MiB)
Running: simpsons_rule
  0.000038 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.119265 seconds (19.88 k allocations: 1.193 MiB)
Running: trapezoidal_rule
  0.076725 seconds (18.33 k allocations: 1.098 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027467 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.097367 seconds (2.40 k allocations: 113.328 KiB)
Running: chebyshev_quadrature with k=2
  0.097689 seconds (2.65 k allocations: 121.344 KiB)
Running: chebyshev_quadrature with k=3
  0.110271 seconds (3.08 k allocations: 133.547 KiB)
Running: chebyshev_quadrature with k=4
  0.105879 seconds (3.08 k allocations: 155.109 KiB)
Running: jacobi_quadrature with α=β=1
  0.327610 seconds (378.57 k allocations: 19.782 MiB, 10.63% gc time)
Running: legendre_quadrature
  0.111753 seconds (1.24 k allocations: 63.531 KiB)
Running: lobatto_quadrature
  0.000122 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000067 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000514 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000365 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000511 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.063129 seconds (1.01 k allocations: 54.094 KiB)
Running: simpsons_rule
  0.000031 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.021781 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.019254 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.065032 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.186823 seconds (239.83 k allocations: 13.541 MiB)
Running: chebyshev_quadrature with k=2
  0.251994 seconds (295.00 k allocations: 16.519 MiB)
Running: chebyshev_quadrature with k=3
  0.232327 seconds (274.98 k allocations: 14.941 MiB)
Running: chebyshev_quadrature with k=4
  0.288980 seconds (275.01 k allocations: 14.850 MiB, 28.77% gc time)
Running: jacobi_quadrature with α=β=1
  2.807620 seconds (465.19 k allocations: 164.146 MiB, 14.23% gc time)
Running: legendre_quadrature
  0.152025 seconds (192.58 k allocations: 11.095 MiB)
Running: lobatto_quadrature
  0.169508 seconds (203.78 k allocations: 11.785 MiB)
Running: radau_quadrature
  0.168680 seconds (203.78 k allocations: 11.789 MiB)
Running: rectangle_rule_left
  1.127662 seconds (19.75 k allocations: 1.193 MiB, 1.38% gc time)
Running: rectangle_rule_midpoint
  0.025154 seconds (25.91 k allocations: 1.613 MiB)
Running: rectangle_rule_right
  1.092896 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.123301 seconds (139.53 k allocations: 8.037 MiB)
Running: simpsons_rule
  0.030921 seconds (28.99 k allocations: 1.801 MiB)
Running: simpsons38_rule
  0.035237 seconds (44.60 k allocations: 2.785 MiB)
Running: trapezoidal_rule
  0.028413 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.039489 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.192555 seconds (246.92 k allocations: 13.564 MiB)
Running: chebyshev_quadrature with k=2
  0.287256 seconds (302.62 k allocations: 16.548 MiB, 5.79% gc time)
Running: chebyshev_quadrature with k=3
  0.312585 seconds (282.39 k allocations: 14.972 MiB)
Running: chebyshev_quadrature with k=4
  0.217557 seconds (282.43 k allocations: 14.978 MiB)
Running: hermite_quadrature with k=2
 16.021975 seconds (22.06 M allocations: 1.144 GiB, 8.65% gc time)
Running: jacobi_quadrature with α=β=1
  0.478338 seconds (475.19 k allocations: 50.415 MiB, 8.33% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.221299 seconds (287.89 k allocations: 15.869 MiB)
Running: legendre_quadrature
  0.205838 seconds (199.64 k allocations: 11.430 MiB, 15.08% gc time)
Running: lobatto_quadrature
  0.231545 seconds (225.19 k allocations: 37.595 MiB)
Running: radau_quadrature
  0.229484 seconds (221.78 k allocations: 30.264 MiB, 9.66% gc time)
Running: rectangle_rule_left
  0.029644 seconds (22.89 k allocations: 1.352 MiB)
Running: rectangle_rule_midpoint
  0.041053 seconds (27.85 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.026631 seconds (19.46 k allocations: 1.165 MiB)
Running: rombergs_method
  0.128774 seconds (142.35 k allocations: 8.101 MiB)
Running: simpsons_rule
  0.042851 seconds (41.23 k allocations: 2.155 MiB)
Running: simpsons38_rule
  0.052626 seconds (59.97 k allocations: 3.195 MiB)
Running: trapezoidal_rule
  0.029245 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041716 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.239670 seconds (242.05 k allocations: 13.326 MiB)
Running: chebyshev_quadrature with k=2
  0.236923 seconds (297.34 k allocations: 16.285 MiB)
Running: chebyshev_quadrature with k=3
  0.219748 seconds (277.25 k allocations: 14.750 MiB)
Running: chebyshev_quadrature with k=4
  0.265802 seconds (277.29 k allocations: 14.743 MiB, 13.02% gc time)
Running: hermite_quadrature with k=2
  0.220436 seconds (177.31 k allocations: 10.137 MiB)
Running: jacobi_quadrature with α=β=1
 10.543183 seconds (467.79 k allocations: 1.176 GiB, 18.09% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.256037 seconds (282.75 k allocations: 15.664 MiB)
Running: legendre_quadrature
  0.182316 seconds (194.81 k allocations: 11.196 MiB, 9.51% gc time)
Running: lobatto_quadrature
  0.223330 seconds (215.55 k allocations: 23.374 MiB)
Running: radau_quadrature
  0.251917 seconds (214.70 k allocations: 21.240 MiB, 9.62% gc time)
Running: rectangle_rule_left
  0.025470 seconds (20.45 k allocations: 1.234 MiB)
Running: rectangle_rule_midpoint
  0.027718 seconds (26.63 k allocations: 1.651 MiB)
Running: rectangle_rule_right
  0.024306 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.119603 seconds (137.82 k allocations: 7.901 MiB)
Running: simpsons_rule
  0.032339 seconds (33.47 k allocations: 1.930 MiB)
Running: simpsons38_rule
  0.037786 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.026020 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.055960 seconds (32.45 k allocations: 1.952 MiB)
Running: chebyshev_quadrature with k=1
  0.229780 seconds (240.38 k allocations: 13.541 MiB)
Running: chebyshev_quadrature with k=2
  0.227021 seconds (295.58 k allocations: 16.625 MiB)
Running: chebyshev_quadrature with k=3
  0.229453 seconds (275.58 k allocations: 14.951 MiB)
Running: chebyshev_quadrature with k=4
  0.262781 seconds (275.61 k allocations: 14.781 MiB, 10.15% gc time)
Running: jacobi_quadrature with α=β=1
  2.012645 seconds (465.84 k allocations: 195.236 MiB, 3.02% gc time)
Running: legendre_quadrature
  0.171661 seconds (193.14 k allocations: 11.113 MiB)
Running: lobatto_quadrature
  0.205957 seconds (204.35 k allocations: 11.816 MiB, 8.58% gc time)
Running: radau_quadrature
  0.190947 seconds (204.35 k allocations: 11.814 MiB)
Running: rectangle_rule_left
  0.300740 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.025105 seconds (26.27 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  0.102761 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.130388 seconds (150.88 k allocations: 8.789 MiB)
Running: simpsons_rule
  0.040083 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.060386 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.025934 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.032482 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.256250 seconds (240.95 k allocations: 13.492 MiB, 10.64% gc time)
Running: chebyshev_quadrature with k=2
  0.258759 seconds (296.18 k allocations: 16.529 MiB)
Running: chebyshev_quadrature with k=3
  0.211690 seconds (276.12 k allocations: 14.899 MiB)
Running: chebyshev_quadrature with k=4
  0.240985 seconds (276.15 k allocations: 14.969 MiB, 8.32% gc time)
Running: jacobi_quadrature with α=β=1
  1.969927 seconds (466.50 k allocations: 149.894 MiB, 5.81% gc time)
Running: legendre_quadrature
  0.148549 seconds (193.71 k allocations: 11.125 MiB)
Running: lobatto_quadrature
  0.231899 seconds (204.93 k allocations: 11.831 MiB, 7.74% gc time)
Running: radau_quadrature
  0.186147 seconds (204.92 k allocations: 11.868 MiB)
Running: rectangle_rule_left
  1.316150 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.033076 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.409179 seconds (18.60 k allocations: 1.123 MiB)
Running: rombergs_method
  0.164209 seconds (140.83 k allocations: 8.097 MiB)
Running: simpsons_rule
  0.042958 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.037581 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.037185 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.209262 seconds (152.72 k allocations: 9.077 MiB)
Running: chebyshev_quadrature with k=1
  0.183388 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.219236 seconds (105.72 k allocations: 2.895 MiB, 19.81% gc time)
Running: chebyshev_quadrature with k=3
  0.179669 seconds (93.21 k allocations: 2.683 MiB)
Running: chebyshev_quadrature with k=4
  0.238534 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  2.067853 seconds (487.63 k allocations: 168.231 MiB, 3.95% gc time)
Running: legendre_quadrature
  0.150470 seconds (19.25 k allocations: 1.111 MiB)
Running: lobatto_quadrature
  0.000220 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000057 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.009474 seconds (590.00 M allocations: 8.792 GiB, 4.04% gc time)
Running: rectangle_rule_midpoint
  0.000049 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.422037 seconds (592.75 M allocations: 8.833 GiB, 3.60% gc time)
Running: rombergs_method
  0.169055 seconds (21.09 k allocations: 1.189 MiB)
Running: simpsons_rule
  0.000064 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.037378 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.027492 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 35.296590 seconds (629.34 M allocations: 9.388 GiB, 4.98% gc time)
Running: chebyshev_quadrature with k=1
  0.553843 seconds (438.46 k allocations: 24.220 MiB)
Running: chebyshev_quadrature with k=2
 13.861966 seconds (495.79 k allocations: 4.042 GiB, 3.62% gc time)
Running: chebyshev_quadrature with k=3
  6.789067 seconds (290.07 k allocations: 1.643 GiB, 4.39% gc time)
Running: chebyshev_quadrature with k=4
  8.032431 seconds (290.11 k allocations: 2.262 GiB, 2.62% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 57.934176 seconds (504.50 k allocations: 13.255 GiB, 3.16% gc time)
Running: legendre_quadrature.
  6.270649 seconds (232.29 k allocations: 1.976 GiB, 2.51% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.729553 seconds (8.24 M allocations: 13.384 GiB, 5.02% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.446925 seconds (7.24 M allocations: 13.369 GiB, 2.82% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.407087 seconds (23.33 k allocations: 1.401 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.665377 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.771738 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.172995 seconds (455.63 k allocations: 153.642 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.539042 seconds (600.04 M allocations: 8.943 GiB, 8.96% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.763340 seconds (600.05 M allocations: 8.944 GiB, 8.09% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.171272 seconds (600.04 M allocations: 8.943 GiB, 8.74% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.060886 seconds (182.49 k allocations: 4.515 MiB)
Running: chebyshev_quadrature with k=1
  0.207837 seconds (257.55 k allocations: 13.994 MiB)
Running: chebyshev_quadrature with k=2
  0.201827 seconds (283.70 k allocations: 15.181 MiB)
Running: chebyshev_quadrature with k=3
  0.197297 seconds (260.23 k allocations: 13.434 MiB)
Running: chebyshev_quadrature with k=4
  0.198466 seconds (260.26 k allocations: 13.430 MiB)
Running: jacobi_quadrature with α=β=1
  0.370332 seconds (404.83 k allocations: 35.817 MiB)
Running: laguerre_quadrature with k=2
  0.212268 seconds (187.56 k allocations: 10.846 MiB)
Running: legendre_quadrature
  0.145972 seconds (151.36 k allocations: 8.366 MiB)
Running: lobatto_quadrature
  0.054605 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.038367 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.056815 seconds (19.80 k allocations: 1.169 MiB)
Running: rectangle_rule_midpoint
  0.049394 seconds (26.75 k allocations: 1.638 MiB)
Running: rectangle_rule_right
  0.072623 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.314798 seconds (178.51 k allocations: 10.189 MiB)
Running: simpsons_rule
  0.001938 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.058374 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.263808 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002053 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.154399 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.192770 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.203718 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.176979 seconds (3.26 k allocations: 1.500 MiB)
Running: jacobi_quadrature with α=β=1
  9.222262 seconds (401.67 k allocations: 906.514 MiB, 6.26% gc time)
Running: legendre_quadrature
  0.092361 seconds (1.33 k allocations: 72.188 KiB)
Running: lobatto_quadrature
  0.000202 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000145 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.260049 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000423 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.971007 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.088011 seconds (1.16 k allocations: 66.688 KiB)
Running: simpsons_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000900 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000715 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.111303 seconds (2.48 k allocations: 576.484 KiB)
Running: chebyshev_quadrature with k=2
  0.132415 seconds (2.73 k allocations: 777.266 KiB)
Running: chebyshev_quadrature with k=3
  0.204957 seconds (3.15 k allocations: 685.500 KiB)
Running: chebyshev_quadrature with k=4
  0.167202 seconds (3.16 k allocations: 516.062 KiB)
Running: jacobi_quadrature with α=β=1
  3.714034 seconds (387.94 k allocations: 253.731 MiB)
Running: legendre_quadrature
  0.097301 seconds (1.28 k allocations: 65.359 KiB)
Running: lobatto_quadrature
  0.000136 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000042 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.933067 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001077 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.381038 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.094421 seconds (1.18 k allocations: 62.547 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001675 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
