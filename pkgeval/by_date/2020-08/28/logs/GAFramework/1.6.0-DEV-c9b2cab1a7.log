Julia Version 1.6.0-DEV.754
Commit c9b2cab1a7 (2020-08-28 17:40 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.2
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_kEYP1o/Project.toml`
  [5789e2e9] FileIO v1.4.2
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_kEYP1o/Manifest.toml`
  [5789e2e9] FileIO v1.4.2
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723349442266524
curgen: 20 fitness: 0.21723349442266524
curgen: 30 fitness: 0.2172335863321278
curgen: 40 fitness: 0.2172335863321278
curgen: 50 fitness: 0.2172335863321278
CoordinateCreature{Vector{Float64}}([0.22257891503224891], -0.2172335863321278) 0.22257891503224891 -0.2172335863321278
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.257975910018029
curgen: 100 fitness: 3.2581904412733946
curgen: 150 fitness: 3.2582993641203637
curgen: 200 fitness: 3.2582993641203637
curgen: 250 fitness: 3.258332545687208
curgen: 300 fitness: 3.258361188451562
curgen: 350 fitness: 3.2584456612125505
curgen: 400 fitness: 3.258469183476686
curgen: 450 fitness: 3.2584768729829703
curgen: 500 fitness: 3.2584785668430416
CoordinateCreature{Vector{Float64}}([-0.2222604481647094, -0.22266222796301163, 0.22241002187691364, -0.2226086265802483, 0.22243793070833182, -0.22254552090224292, 0.22244767499660684, -0.2227159757194184, -0.22256008316417328, -0.22258880588683322, -0.22242967649416368, -0.2225822619659394, -0.22261644068647876, 0.22198023687387966, 0.22281211180928537], -3.2584785668430416) [-0.2222604481647094, -0.22266222796301163, 0.22241002187691364, -0.2226086265802483, 0.22243793070833182, -0.22254552090224292, 0.22244767499660684, -0.2227159757194184, -0.22256008316417328, -0.22258880588683322, -0.22242967649416368, -0.2225822619659394, -0.22261644068647876, 0.22198023687387966, 0.22281211180928537] -3.2584785668430416
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0026379106955971565
curgen: 100 fitness: -0.002086783837370376
curgen: 150 fitness: -0.002070676585532283
curgen: 200 fitness: -0.002050282137844306
curgen: 250 fitness: -0.0014513681675509815
curgen: 300 fitness: -0.0013728618781954083
curgen: 350 fitness: -0.0010751208289150327
curgen: 400 fitness: -0.0010751208289150327
curgen: 450 fitness: -0.0008480154765209136
curgen: 500 fitness: -0.0008480154765209136
CoordinateCreature{Vector{Float64}}([-0.0008198940034216825, -0.0001232154427720189, 0.00027050814339615826, -0.00033358196944422835, -0.0005736403789228873, -0.0011185895567769888, -0.0007319085577496402, -0.00021709368403404383, -9.769687016474517e-5, -0.000574827593588744, -0.00011839980212759041, 0.0008470028558069012, -0.00031910173091675374, 0.00025680766775355857, 1.6931973738016872e-5], 0.0008480154765209136) [-0.0008198940034216825, -0.0001232154427720189, 0.00027050814339615826, -0.00033358196944422835, -0.0005736403789228873, -0.0011185895567769888, -0.0007319085577496402, -0.00021709368403404383, -9.769687016474517e-5, -0.000574827593588744, -0.00011839980212759041, 0.0008470028558069012, -0.00031910173091675374, 0.00025680766775355857, 1.6931973738016872e-5] 0.0008480154765209136
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
