Julia Version 1.6.0-DEV.740
Commit 813500df77 (2020-08-27 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed TransformUtils ─ v0.2.6
Updating `~/.julia/environments/v1.6/Project.toml`
  [9b8138ad] + TransformUtils v0.2.6
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9b8138ad] + TransformUtils v0.2.6
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
    Testing TransformUtils
Status `/tmp/jl_O465YD/Project.toml`
  [9b8138ad] TransformUtils v0.2.6
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_O465YD/Manifest.toml`
  [9b8138ad] TransformUtils v0.2.6
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
    Testing Running tests...
Test Summary:                               |
Constructors SO3, Quaternion, AngleAxis...  | No tests
Test Summary:                           | Pass  Total
Ensure basic quaternion operations hold |   10     10
Test Summary:                                       | Pass  Total
Comparison functions for SO3, Quaternion, AngleAxis |    5      5
Test Summary:                                        | Pass  Total
Trivial case quaterion -> SO3 -> Euler -> quaternion |    2      2
┌ Warning: Need better coverage on convert function tests
└ @ Main ~/.julia/packages/TransformUtils/cFZOw/test/runtests.jl:89
dAA = AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = so3([0.0 0.0036704265593734174 0.041923549698952296; -0.0036704265593734174 0.0 -0.06363923802800447; -0.041923549698952296 0.06363923802800447 0.0])
dAA = so3([0.0 0.01323145463301717 -0.023115373684671557; -0.01323145463301717 0.0 0.050992572777761494; 0.023115373684671557 -0.050992572777761494 0.0])
dAA = so3([0.0 0.03873030927673188 -0.00580207600824461; -0.03873030927673188 0.0 -0.02100869284067373; 0.00580207600824461 0.02100869284067373 0.0])
dAA = Quaternion(0.9978265765805922, [-0.04491810435723452, 0.024410279798226117, 0.0415767388160808])
dAA = SO3([0.9875180551540242 -0.018489218123519058 -0.15641687747169228; 0.03950630849749263 0.9904159427720612 0.13234618200700138; 0.15247079173964564 -0.13687369767822571 0.9787840663548705])
Test Summary:                        | Pass  Total
Compare SO3 and quaternion rotations |   24     24
Test Summary:       | Pass  Total
Basic SE3 mechanics |    4      4
Compare operations on two different SE3 transforms
xi = SE3(SO3([0.997786969037029 0.03664184577736677 -0.055484588472174245; -0.029287583597457617 0.9913420838418219 0.12799652437146944; 0.05969423646316949 -0.1260882545766334 0.9902213642367536]), [0.6363923802800447, 0.41923549698952295, -0.03670426559373417])
xj = SE3(SO3([0.9711596936672263 -0.2131547486039838 0.10683586730939984; 0.18459973683403746 0.9557866485613978 0.22889914720805543; -0.15090323574060086 -0.20257575269351313 0.9675697793253328]), [0.2100869284067373, -0.05802076008244609, -0.3873030927673187])
Dx = SE3(SO3([0.9545959535331988 -0.25276831679948575 0.15765387251950871; 0.2376136971147545 0.9652435675446593 0.10883283630006235; -0.17968387919204232 -0.06643066562976188 0.9814788180202801]), [-0.43231307147523335, -0.44453843685893435, -0.38460420852274646])
Test Summary:         | Pass  Total
SE3 ⊕ and ⊖ mechanics |    6      6
TransformUtils.convert(Euler, q) = Euler(0.7853981633974484, 0.0, 1.5707963267948963, Quaternion(1.0, [0.0, 0.0, 0.0]))
Test Summary:              | Pass  Total
Previous discovered issues |    3      3
Test Summary:      | Pass  Total
test SO3 logmap... |  301    301
Test Summary:                              | Pass  Total
test in-place and efficient inverse SE3... |    1      1
    Testing TransformUtils tests passed 
