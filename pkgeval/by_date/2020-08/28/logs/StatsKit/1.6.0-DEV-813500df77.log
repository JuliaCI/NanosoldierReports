Julia Version 1.6.0-DEV.740
Commit 813500df77 (2020-08-27 17:25 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed StatsKit ───────────────────── v0.3.0
  Installed PooledArrays ───────────────── v0.5.3
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed PDMats ─────────────────────── v0.10.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Rmath ──────────────────────── v0.6.1
  Installed RecipesBase ────────────────── v1.0.2
  Installed Distributions ──────────────── v0.23.8
  Installed WoodburyMatrices ───────────── v0.5.2
  Installed DataStructures ─────────────── v0.18.2
  Installed SentinelArrays ─────────────── v1.2.13
  Installed TableTraits ────────────────── v1.0.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed HypothesisTests ────────────── v0.10.0
  Installed StaticArrays ───────────────── v0.12.4
  Installed DocStringExtensions ────────── v0.8.3
  Installed QuadGK ─────────────────────── v2.4.1
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed OffsetArrays ───────────────── v1.1.2
  Installed MKL_jll ────────────────────── v2020.2.254+0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed MultivariateStats ──────────── v0.7.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed Missings ───────────────────── v0.4.4
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed ShiftedArrays ──────────────── v1.0.0
  Installed Clustering ─────────────────── v0.14.1
  Installed Distances ──────────────────── v0.9.0
  Installed DataFrames ─────────────────── v0.21.7
  Installed Roots ──────────────────────── v1.0.5
  Installed Arpack ─────────────────────── v0.4.0
  Installed KernelDensity ──────────────── v0.6.0
  Installed NearestNeighbors ───────────── v0.4.6
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed TimeSeries ─────────────────── v0.19.1
  Installed Bootstrap ──────────────────── v2.2.0
  Installed Tables ─────────────────────── v1.0.5
  Installed Compat ─────────────────────── v3.14.0
  Installed Reexport ───────────────────── v0.2.0
  Installed Parsers ────────────────────── v1.0.10
  Installed Combinatorics ──────────────── v1.0.2
  Installed JSON ───────────────────────── v0.21.0
  Installed StatsModels ────────────────── v0.6.13
  Installed DataValueInterfaces ────────── v1.0.0
  Installed Loess ──────────────────────── v0.5.0
  Installed OpenBLAS_jll ───────────────── v0.3.10+0
  Installed DataAPI ────────────────────── v1.3.0
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed CategoricalArrays ──────────── v0.8.1
  Installed FillArrays ─────────────────── v0.8.14
  Installed GLM ────────────────────────── v1.3.10
  Installed StatsBase ──────────────────── v0.33.1
  Installed AxisAlgorithms ─────────────── v1.0.0
  Installed FFTW ───────────────────────── v1.2.4
  Installed InvertedIndices ────────────── v1.0.0
  Installed StatsFuns ──────────────────── v0.9.5
  Installed Ratios ─────────────────────── v0.4.0
  Installed Interpolations ─────────────── v0.12.10
  Installed CSV ────────────────────────── v0.7.7
Updating `~/.julia/environments/v1.6/Project.toml`
  [2cb19f9e] + StatsKit v0.3.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [13072b0f] + AxisAlgorithms v1.0.0
  [e28b5b4c] + Bootstrap v2.2.0
  [336ed68f] + CSV v0.7.7
  [324d7699] + CategoricalArrays v0.8.1
  [aaaa29a8] + Clustering v0.14.1
  [861a8166] + Combinatorics v1.0.2
  [34da2185] + Compat v3.14.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] + DataAPI v1.3.0
  [a93c6f00] + DataFrames v0.21.7
  [864edb3b] + DataStructures v0.18.2
  [e2d170a0] + DataValueInterfaces v1.0.0
  [b4f34e82] + Distances v0.9.0
  [31c24e10] + Distributions v0.23.8
  [ffbed154] + DocStringExtensions v0.8.3
  [7a1cc6ca] + FFTW v1.2.4
  [f5851436] + FFTW_jll v3.3.9+5
  [1a297f60] + FillArrays v0.8.14
  [38e38edf] + GLM v1.3.10
  [09f84164] + HypothesisTests v0.10.0
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] + Interpolations v0.12.10
  [41ab1584] + InvertedIndices v1.0.0
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [5ab0869b] + KernelDensity v0.6.0
  [4345ca2d] + Loess v0.5.0
  [856f044c] + MKL_jll v2020.2.254+0
  [e1d29d7a] + Missings v0.4.4
  [6f286f6a] + MultivariateStats v0.7.0
  [b8a86587] + NearestNeighbors v0.4.6
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.10+0
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [90014a1f] + PDMats v0.10.0
  [69de0a69] + Parsers v1.0.10
  [2dfb63ee] + PooledArrays v0.5.3
  [1fd47b50] + QuadGK v2.4.1
  [c84ed2f1] + Ratios v0.4.0
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.5
  [91c51154] + SentinelArrays v1.2.13
  [1277b4bf] + ShiftedArrays v1.0.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.1
  [4c63d2b9] + StatsFuns v0.9.5
  [2cb19f9e] + StatsKit v0.3.0
  [3eaba693] + StatsModels v0.6.13
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [9e3dc215] + TimeSeries v0.19.1
  [efce3f68] + WoodburyMatrices v0.5.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building FFTW → `~/.julia/packages/FFTW/DMUbN/deps/build.log`
    Testing StatsKit
Status `/tmp/jl_zkUo0B/Project.toml`
  [e28b5b4c] Bootstrap v2.2.0
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [aaaa29a8] Clustering v0.14.1
  [a93c6f00] DataFrames v0.21.7
  [b4f34e82] Distances v0.9.0
  [31c24e10] Distributions v0.23.8
  [38e38edf] GLM v1.3.10
  [09f84164] HypothesisTests v0.10.0
  [5ab0869b] KernelDensity v0.6.0
  [4345ca2d] Loess v0.5.0
  [6f286f6a] MultivariateStats v0.7.0
  [189a3867] Reexport v0.2.0
  [2913bbd2] StatsBase v0.33.1
  [2cb19f9e] StatsKit v0.3.0
  [9e3dc215] TimeSeries v0.19.1
  [44cfe95a] Pkg
  [10745b16] Statistics
Status `/tmp/jl_zkUo0B/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [13072b0f] AxisAlgorithms v1.0.0
  [e28b5b4c] Bootstrap v2.2.0
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [aaaa29a8] Clustering v0.14.1
  [861a8166] Combinatorics v1.0.2
  [34da2185] Compat v3.14.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.2
  [e2d170a0] DataValueInterfaces v1.0.0
  [b4f34e82] Distances v0.9.0
  [31c24e10] Distributions v0.23.8
  [ffbed154] DocStringExtensions v0.8.3
  [7a1cc6ca] FFTW v1.2.4
  [f5851436] FFTW_jll v3.3.9+5
  [1a297f60] FillArrays v0.8.14
  [38e38edf] GLM v1.3.10
  [09f84164] HypothesisTests v0.10.0
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [a98d9a8b] Interpolations v0.12.10
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [5ab0869b] KernelDensity v0.6.0
  [4345ca2d] Loess v0.5.0
  [856f044c] MKL_jll v2020.2.254+0
  [e1d29d7a] Missings v0.4.4
  [6f286f6a] MultivariateStats v0.7.0
  [b8a86587] NearestNeighbors v0.4.6
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.10+0
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [90014a1f] PDMats v0.10.0
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [1fd47b50] QuadGK v2.4.1
  [c84ed2f1] Ratios v0.4.0
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [91c51154] SentinelArrays v1.2.13
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [2cb19f9e] StatsKit v0.3.0
  [3eaba693] StatsModels v0.6.13
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [9e3dc215] TimeSeries v0.19.1
  [efce3f68] WoodburyMatrices v0.5.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
    Testing Bootstrap
Status `/tmp/jl_iZEvO7/Project.toml`
  [e28b5b4c] Bootstrap v2.2.0
  [a93c6f00] DataFrames v0.21.7
  [31c24e10] Distributions v0.23.8
  [38e38edf] GLM v1.3.10
  [ce6b1742] RDatasets v0.6.10
  [2913bbd2] StatsBase v0.33.1
  [3eaba693] StatsModels v0.6.13
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_iZEvO7/Manifest.toml`
  [e28b5b4c] Bootstrap v2.2.0
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [944b1d66] CodecZlib v0.7.0
  [34da2185] Compat v3.14.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.2
  [e2d170a0] DataValueInterfaces v1.0.0
  [31c24e10] Distributions v0.23.8
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.4.2
  [1a297f60] FillArrays v0.8.14
  [38e38edf] GLM v1.3.10
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+6
  [e1d29d7a] Missings v0.4.4
  [78c3b35d] Mocking v0.7.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [90014a1f] PDMats v0.10.0
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [1fd47b50] QuadGK v2.4.1
  [df47a6cb] RData v0.7.2
  [ce6b1742] RDatasets v0.6.10
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [91c51154] SentinelArrays v1.2.13
  [1277b4bf] ShiftedArrays v1.0.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [3eaba693] StatsModels v0.6.13
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [f269a46b] TimeZones v1.3.2
  [3bb67fe8] TranscodingStreams v0.9.5
  [02c8fc9c] XML2_jll v2.9.10+2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary:             | Pass  Total
Non-parametric bootstraps |  448    448
Test Summary:         | Pass  Total
Parametric bootstraps |  315    315
Test Summary:       | Pass  Total
Statistic functions | 1008   1008
Test Summary:     | Pass  Total
Utility functions |   10     10
Test Summary: | Pass  Total
Distributions |    5      5
    Testing Bootstrap tests passed 
    Testing CategoricalArrays
Status `/tmp/jl_I9JIeF/Project.toml`
  [324d7699] CategoricalArrays v0.8.1
  [9a962f9c] DataAPI v1.3.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [ade2ca70] Dates
  [9fa8497b] Future
  [de0858da] Printf
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Status `/tmp/jl_I9JIeF/Manifest.toml`
  [324d7699] CategoricalArrays v0.8.1
  [9a962f9c] DataAPI v1.3.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [69de0a69] Parsers v1.0.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
01_value.jl   |   58     58
Test Summary:      | Pass  Total
04_constructors.jl |   70     70
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue{Int64,R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue{Int64,R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue{Int64,R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue{Int64,R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue{Int64,R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue{Int64,R} where R<:Integer}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Missing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Missing in Base at missing.jl:67
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Missing in Base at missing.jl:69
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47
  Test threw exception
  Expression: convert(Union{T, U}, v1) === v1
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:47 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48
  Test threw exception
  Expression: convert(Union{T, U}, v2) === v2
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:48 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
convert() for CategoricalPool{Int, DefaultRefType} and values: Error During Test at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49
  Test threw exception
  Expression: convert(Union{T, U}, v3) === v3
  MethodError: convert(::Type{Union{Nothing, CategoricalArrays.CategoricalValue}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
    convert(::Type{S}, x::T) where {S, T<:CategoricalArrays.CategoricalValue} in CategoricalArrays at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/src/value.jl:68
    convert(::Type{T}, x::T) where T>:Nothing in Base at some.jl:35
    convert(::Type{T}, x::T) where T in Base at essentials.jl:205
    convert(::Type{T}, x) where T>:Nothing in Base at some.jl:36
  To resolve the ambiguity, try making one of the methods more specific, or adding a new method more specific than any of the existing applicable methods.
  Stacktrace:
   [1] macro expansion
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:49 [inlined]
   [2] macro expansion
     @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
   [3] top-level scope
     @ ~/.julia/packages/CategoricalArrays/nd8kj/test/05_convert.jl:7
  
Test Summary:                                                   | Pass  Error  Total
05_convert.jl                                                   |   61     12     73
  convert() for CategoricalPool{Int, DefaultRefType} and values |   37     12     49
  promote_type                                                  |   13            13
  convert() preserves `ordered`                                 |    1             1
  convert() with Union{T, Nothing}                              |    3             3
  levelcode                                                     |    7             7
Test Summary:                                                   | Pass  Error  Total
05_convert.jl                                                   |   61     12     73
  convert() for CategoricalPool{Int, DefaultRefType} and values |   37     12     49
  promote_type                                                  |   13            13
  convert() preserves `ordered`                                 |    1             1
  convert() with Union{T, Nothing}                              |    3             3
  levelcode                                                     |    7             7
ERROR: LoadError: Some tests did not pass: 61 passed, 0 failed, 12 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/CategoricalArrays/nd8kj/test/runtests.jl:5

caused by:
Some tests did not pass: 61 passed, 0 failed, 12 errored, 0 broken.
    Testing Clustering
Status `/tmp/jl_mBWX4O/Project.toml`
  [aaaa29a8] Clustering v0.14.1
  [944b1d66] CodecZlib v0.7.0
  [b4f34e82] Distances v0.9.0
  [b8a86587] NearestNeighbors v0.4.6
  [2913bbd2] StatsBase v0.33.1
  [8bb1440f] DelimitedFiles
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_mBWX4O/Manifest.toml`
  [aaaa29a8] Clustering v0.14.1
  [944b1d66] CodecZlib v0.7.0
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [b4f34e82] Distances v0.9.0
  [e1d29d7a] Missings v0.4.4
  [b8a86587] NearestNeighbors v0.4.6
  [bac558e1] OrderedCollections v1.3.0
  [a2af1166] SortingAlgorithms v0.3.1
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [3bb67fe8] TranscodingStreams v0.9.5
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Runing tests:
* seeding.jl ...
Test Summary: | Pass  Total
seeding       |   64     64
* kmeans.jl ...
  Iters               objv        objv-change | affected 
-------------------------------------------------------------
      0       1.425332e-01
      1       7.126662e-02      -7.126662e-02 |        0
      2       7.126662e-02       0.000000e+00 |        0
K-means converged with 2 iterations (objv = 0.07126662347449186)
K-means converged with 2 iterations (objv = 0.4604817352584065)
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
┌ Warning: The clustering cost increased at iteration #1
└ @ Clustering ~/.julia/packages/Clustering/fwZBk/src/kmeans.jl:188
Test Summary:      | Pass  Total
kmeans() (k-means) |   95     95
* kmedoids.jl ...
  Iters               objv        objv-change
-----------------------------------------------------
      0       1.623600e+00
      1       1.623600e+00       0.000000e+00
K-medoids converged with 1 iterations (objv = 1.6236002870003423)
K-medoids converged with 1 iterations (objv = 1.6236002870003423)
Test Summary:          | Pass  Total
kmedoids() (k-medoids) |   38     38
* affprop.jl ...
  Iters  objv-change | exemplars 
-----------------------------------------------------
      1   1.7243e+00 |        1
      2   1.1599e+00 |        1
      3   1.0111e+00 |        1
      4   8.2884e-01 |        1
      5   6.2996e-01 |        1
      6   4.4970e-01 |        1
      7   3.0568e-01 |        1
      8   1.9999e-01 |        1
      9   1.2694e-01 |        1
     10   7.8624e-02 |        1
Affinity propagation converged with 10 iterations: 1 exemplars.
Affinity propagation converged with 9 iterations: 1 exemplars.
Test Summary:                         | Pass  Total
affinityprop() (affinity propagation) |   84     84
* dbscan.jl ...
normal points: Test Failed at /home/pkgeval/.julia/packages/Clustering/fwZBk/test/dbscan.jl:64
  Expression: (clusters[1]).core_indices == inds_1
   Evaluated: [1, 2, 3, 5, 8, 9, 10, 12, 15, 17  …  982, 984, 986, 991, 992, 993, 996, 997, 998, 1732] == [1, 2, 3, 5, 8, 9, 10, 12, 15, 16  …  986, 988, 989, 990, 992, 994, 996, 998, 1000, 1882]
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:64 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:48 [inlined]
 [4] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [5] top-level scope
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:8
normal points: Test Failed at /home/pkgeval/.julia/packages/Clustering/fwZBk/test/dbscan.jl:65
  Expression: (clusters[2]).core_indices == inds_2
   Evaluated: [28, 497, 2004, 2005, 2006, 2012, 2017, 2018, 2020, 2024  …  2980, 2982, 2983, 2987, 2993, 2994, 2995, 2996, 2997, 2998] == [66, 874, 999, 2005, 2006, 2007, 2008, 2012, 2018, 2020  …  2983, 2986, 2988, 2989, 2990, 2991, 2994, 2996, 2997, 2998]
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:65 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:48 [inlined]
 [4] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [5] top-level scope
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:8
normal points: Test Failed at /home/pkgeval/.julia/packages/Clustering/fwZBk/test/dbscan.jl:66
  Expression: (clusters[3]).core_indices == inds_3
   Evaluated: [65, 1001, 1002, 1005, 1006, 1009, 1011, 1013, 1015, 1019  …  1976, 1980, 1982, 1985, 1989, 1990, 1992, 1994, 1995, 1999] == [589, 655, 666, 703, 886, 1001, 1002, 1004, 1005, 1008  …  1978, 1982, 1984, 1985, 1987, 1993, 1995, 1996, 1999, 2000]
Stacktrace:
 [1] macro expansion
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:66 [inlined]
 [2] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [3] macro expansion
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:48 [inlined]
 [4] macro expansion
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
 [5] top-level scope
   @ ~/.julia/packages/Clustering/fwZBk/test/dbscan.jl:8
Test Summary:                             | Pass  Fail  Total
dbscan() (DBSCAN clustering)              |   22     3     25
  Argument checks                         |    5            5
  Support for arrays other than Matrix{T} |    6            6
  normal points                           |    2     3      5
    Issue #84                             |    2            2
ERROR: LoadError: LoadError: Some tests did not pass: 22 passed, 3 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/Clustering/fwZBk/test/dbscan.jl:6
in expression starting at /home/pkgeval/.julia/packages/Clustering/fwZBk/test/runtests.jl:24
    Testing CSV
Status `/tmp/jl_YkfOvO/Project.toml`
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [944b1d66] CodecZlib v0.7.0
  [a93c6f00] DataFrames v0.21.7
  [48062228] FilePathsBase v0.9.5
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [91c51154] SentinelArrays v1.2.13
  [bd369af6] Tables v1.0.5
  [ea10d353] WeakRefStrings v0.6.2
  [ade2ca70] Dates
  [a63ad114] Mmap
  [9a3f8284] Random
  [8dfed614] Test
  [4ec0a83e] Unicode
Status `/tmp/jl_YkfOvO/Manifest.toml`
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [944b1d66] CodecZlib v0.7.0
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.2
  [e2d170a0] DataValueInterfaces v1.0.0
  [48062228] FilePathsBase v0.9.5
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [91c51154] SentinelArrays v1.2.13
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [3bb67fe8] TranscodingStreams v0.9.5
  [ea10d353] WeakRefStrings v0.6.2
  [83775a58] Zlib_jll v1.2.11+16
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
thread = 1 warning: only found 7 / 8 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: error parsing Int64 around row = 2, col = 1: "abc
", error=INVALID: SENTINEL | NEWLINE | EOF | INVALID_DELIMITER 
CSV.File("<IOBuffer>"):
Size: 3 x 1
Tables.Schema:
 :col1  Stringthread = 1 warning: only found 1 / 2 columns around data row: 11. Filling remaining columns with `missing`
testing test_utf8_with_BOM.csv
testing test_utf8.csv
testing test_windows.csv
testing test_single_column.csv
testing test_empty_file.csv
testing test_empty_file_newlines.csv
testing test_simple_quoted.csv
testing test_quoted_delim_and_newline.csv
testing test_quoted_numbers.csv
testing test_crlf_line_endings.csv
testing test_newline_line_endings.csv
testing test_mac_line_endings.csv
testing test_no_header.csv
testing test_2_footer_rows.csv
testing test_footer_missing.csv
testing test_footer_missing.csv
testing test_dates.csv
testing test_excel_date_formats.csv
testing test_datetimes.csv
testing test_missing_value_NULL.csv
testing test_missing_value_NULL.csv
testing test_missing_value.csv
testing test_header_range.csv
testing test_header_int_list.csv
testing test_basic.csv
testing test_basic_pipe.csv
testing test_tab_null_empty.txt
testing test_tab_null_string.txt
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=5, maxsize=Inf, ptr=1, mark=-1)
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1)
testing dash_as_null.csv
testing plus_as_null.csv
testing comma_decimal.csv
testing double_quote_quotechar_and_escapechar.csv
testing census.txt
testing bools.csv
testing boolext.csv
testing attenu.csv
testing test_null_only_column.csv
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=20, maxsize=Inf, ptr=1, mark=-1)
testing categorical.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing categorical.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing categorical.csv
testing categorical.csv
testing baseball.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 4)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 5)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 6)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 15)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing FL_insurance_sample.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 3)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 16)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 17)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing FL_insurance_sample.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 3)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 16)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 17)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing SacramentocrimeJanuary2006.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 4)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 6)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing Sacramentorealestatetransactions.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 4)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 8)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 9)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing SalesJan2009.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 4)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 5)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 6)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 7)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 8)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 9)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 10)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing stocks.csv
testing TechCrunchcontinentalUSA.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 4)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 5)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 6)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 7)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 9)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 10)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing Fielding.csv
testing latest (1).csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 5)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 7)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 12)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=16, maxsize=Inf, ptr=1, mark=-1)
testing issue_198.csv
testing issue_198_part2.csv
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 4. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 4. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 4. Ignoring any extra columns on this row
testing issue_207.csv
thread = 1 warning: only found 5 / 6 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 5 / 6 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 5 / 6 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 5 / 6 columns around data row: 3. Filling remaining columns with `missing`
testing issue_120.csv
testing pandas_zeros.csv
testing transposed.csv
testing transposed_1row.csv
testing transposed_emtpy.csv
testing transposed_extra_newline.csv
testing transposed_noheader.csv
testing transposed_noheader.csv
testing test_utf8.csv
testing test_utf8.csv
testing test_multiple_missing.csv
testing test_openclosequotes.csv
testing test_truestrings.csv
testing test_truestrings.csv
testing test_string_delimiters.csv
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=20, maxsize=Inf, ptr=1, mark=-1)
testing test_basic.csv
testing test_basic.csv
testing test_truestrings.csv
testing test_repeated_delimiters.csv
testing test_comments1.csv
testing test_comments_multiple.csv
testing test_comments_multichar.csv
testing test_not_enough_columns.csv
thread = 1 warning: only found 3 / 5 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
testing test_not_enough_columns2.csv
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
testing test_correct_trailing_missings.csv
thread = 1 warning: only found 4 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 5 columns around data row: 3. Filling remaining columns with `missing`
testing norwegian_data.csv
testing test_duplicate_columnnames.csv
testing test_bad_datetime.csv
testing test_types.csv
thread = 1 warning: only found 7 / 8 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 7 / 8 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 7 / 8 columns around data row: 2. Filling remaining columns with `missing`
testing test_issue_326.wsv
testing test_missing_last_field.csv
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
testing test_delim.tsv
testing test_delim.wsv
testing test_comment_first_row.csv
testing test_comment_first_row.csv
testing test_repeated_delim_371.csv
testing test_file_issue_154.csv
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=16, maxsize=Inf, ptr=1, mark=-1)
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=19, maxsize=Inf, ptr=1, mark=-1)
thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 3. Filling remaining columns with `missing`
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=19, maxsize=Inf, ptr=1, mark=-1)
thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 3 columns around data row: 3. Filling remaining columns with `missing`
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=43, maxsize=Inf, ptr=1, mark=-1)
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 2. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 4. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 2. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 4. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 2. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
thread = 1 warning: parsed expected 5 columns, but didn't reach end of line around data row: 4. Ignoring any extra columns on this row
testing IOBuffer(data=UInt8[...], readable=true, writable=false, seekable=true, append=false, size=17, maxsize=Inf, ptr=1, mark=-1)
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing heat_flux.dat
testing log001_vehicle_status_flags_0.txt
testing fecal_samples.csv
header is: 1, datarow computed as: 2
headerpos = 4, datapos = 481
estimated rows: 756
detected delimiter: ","
column names detected: [:SampleID, :Mother_Child, :SubjectID, :MaternalID, :TimePoint, :Fecal_EtOH, :CollectionRep, :DOC, :RAInitials_DOC, :DOF, :RAInitials_DOF, :Date_Brought_In, :RAInitials_Brought, :Date_Shipped, :RAInitials_Shipped, :Date_Aliquoted, :Number_Replicates, :RAInitials_Aliquot, :StorageBox, :DOE, :Extract_number, :AliquotRep, :DNABox, :KitUsed, :RAInitials_Extract, :DNAConc, :DOM, :Mgx_processed, :Mgx_batch, :DO16S, :_16S_processed, :_16S_batch, :_16S_plate, :Notes, :Discrepancies, :Batch_1_Mapping, :Mgx_batch_Mapping, :_16S_batch_Mapping, :Mother_Child_Dyads]
byte position of data computed at: 481
column options generated as: 
computed types are: Type[Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}]
thread = 1 warning: only found 38 / 39 columns around data row: 1080. Filling remaining columns with `missing`
header is: 1, datarow computed as: 2
headerpos = 4, datapos = 481
estimated rows: 756
detected delimiter: ","
column names detected: [:SampleID, :Mother_Child, :SubjectID, :MaternalID, :TimePoint, :Fecal_EtOH, :CollectionRep, :DOC, :RAInitials_DOC, :DOF, :RAInitials_DOF, :Date_Brought_In, :RAInitials_Brought, :Date_Shipped, :RAInitials_Shipped, :Date_Aliquoted, :Number_Replicates, :RAInitials_Aliquot, :StorageBox, :DOE, :Extract_number, :AliquotRep, :DNABox, :KitUsed, :RAInitials_Extract, :DNAConc, :DOM, :Mgx_processed, :Mgx_batch, :DO16S, :_16S_processed, :_16S_batch, :_16S_plate, :Notes, :Discrepancies, :Batch_1_Mapping, :Mgx_batch_Mapping, :_16S_batch_Mapping, :Mother_Child_Dyads]
byte position of data computed at: 481
column options generated as: 
computed types are: Type[Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}]
initial byte positions before adjusting for start of rows: [481, 101091, 201701]
single-threaded estimated rows = 756, multi-threaded estimated rows = 754
multi-threaded column types sampled as: Type[Union{}, Union{}, Int64, Union{}, Int64, Union{}, Int64, Date, Union{}, Date, Union{}, Union{}, Union{}, Date, Union{}, Date, Union{}, Union{}, Union{}, Date, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Date, Union{}, Union{}, Date, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Union{}, Int64]
parsing using 2 tasks: 377 rows chunked at positions: [481, 101105, 201701]
promoting col = 1 to string from Vector{UInt32} on chunk = 2
promoting col = 4 to string from Vector{UInt32} on chunk = 2
promoting col = 21 to string from Vector{UInt32} on chunk = 2
promoting col = 36 to string from Vector{UInt32} on chunk = 2
thread = 2 warning: didn't pre-allocate enough column while parsing around row 378, re-allocating from 377 to 467...
promoting col = 1 from Union{} to String, task chunk (1) was type = String
promoting col = 2 from Union{} to PooledString, task chunk (1) was type = PooledString
promoting col = 4 from Union{} to String, task chunk (1) was type = String
promoting col = 6 from Union{} to PooledString, task chunk (1) was type = PooledString
promoting col = 9 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 10 from Date to Union{Missing, Date}, task chunk (1) was type = Union{Missing, Date}
promoting col = 11 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 12 from Union{} to Union{Missing, Date}, task chunk (1) was type = Union{Missing, Date}
promoting col = 15 from Union{} to PooledString, task chunk (1) was type = PooledString
promoting col = 16 from Date to Union{Missing, Date}, task chunk (1) was type = Union{Missing, Date}
promoting col = 17 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 18 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 19 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 20 from Date to Union{Missing, Date}, task chunk (1) was type = Union{Missing, Date}
promoting col = 21 from Union{} to Union{Missing, String}, task chunk (1) was type = Union{Missing, String}
promoting col = 22 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 23 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 24 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 25 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 26 from Union{} to Union{Missing, Float64}, task chunk (1) was type = Union{Missing, Float64}
promoting col = 27 from Date to Union{Missing, Date}, task chunk (1) was type = Union{Missing, Date}
promoting col = 28 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 29 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 30 from Date to Union{Missing, Date}, task chunk (1) was type = Union{Missing, Date}
promoting col = 31 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 32 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 33 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 34 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 35 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 36 from Union{} to Union{Missing, String}, task chunk (1) was type = Union{Missing, String}
promoting col = 37 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 38 from Union{} to Union{Missing, PooledString}, task chunk (1) was type = Union{Missing, PooledString}
promoting col = 39 from Int64 to Union{Missing, Int64}, task chunk (1) was type = Union{Missing, Int64}
finished parsing 456 rows on task = 1: time for parsing: 1.457021951675415
promoting col = 1 to string from Vector{UInt32} on chunk = 2
promoting col = 4 to string from Vector{UInt32} on chunk = 2
promoting col = 21 to string from Vector{UInt32} on chunk = 2
promoting col = 34 to string from Vector{UInt32} on chunk = 2
thread = 2 warning: didn't pre-allocate enough column while parsing around row 755, re-allocating from 377 to 628...
thread = 2 warning: only found 38 / 39 columns around data row: 1001. Filling remaining columns with `missing`
promoting col = 13 from Union{} to Union{Missing, PooledString}, task chunk (2) was type = Union{Missing, PooledString}
promoting col = 14 from Date to Union{Missing, Date}, task chunk (2) was type = Union{Missing, Date}
promoting col = 15 from PooledString to Union{Missing, PooledString}, task chunk (2) was type = Union{Missing, PooledString}
promoting col = 34 from Union{Missing, PooledString} to Union{Missing, String}, task chunk (2) was type = Union{Missing, String}
finished parsing 623 rows on task = 2: time for parsing: 1.820000171661377
multithreaded promoting column 36 to string from MissingVector
thread = 1 warning: only found 38 / 39 columns around data row: 623. Filling remaining columns with `missing`
multithreaded promoting column 26 from missing on task 2
multithreaded promoting column 35 from missing on task 2
multithreaded promoting column 13 from missing on task 1
multithreaded promoting column 34 to string from Vector{UInt32}
types after parsing: Type[String, PooledString, Int64, String, Int64, PooledString, Int64, Date, Union{Missing, PooledString}, Union{Missing, Date}, Union{Missing, PooledString}, Union{Missing, Date}, Union{Missing, PooledString}, Union{Missing, Date}, Union{Missing, PooledString}, Union{Missing, Date}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, Float64}, Union{Missing, Date}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, Date}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, String}, Union{Missing, PooledString}, Union{Missing, String}, Union{Missing, PooledString}, Union{Missing, PooledString}, Union{Missing, Int64}], pool = 0.1
header is: 1, datarow computed as: 2
headerpos = 4, datapos = 481
estimated rows: 756
detected delimiter: ","
column names detected: [:SampleID, :Mother_Child, :SubjectID, :MaternalID, :TimePoint, :Fecal_EtOH, :CollectionRep, :DOC, :RAInitials_DOC, :DOF, :RAInitials_DOF, :Date_Brought_In, :RAInitials_Brought, :Date_Shipped, :RAInitials_Shipped, :Date_Aliquoted, :Number_Replicates, :RAInitials_Aliquot, :StorageBox, :DOE, :Extract_number, :AliquotRep, :DNABox, :KitUsed, :RAInitials_Extract, :DNAConc, :DOM, :Mgx_processed, :Mgx_batch, :DO16S, :_16S_processed, :_16S_batch, :_16S_plate, :Notes, :Discrepancies, :Batch_1_Mapping, :Mgx_batch_Mapping, :_16S_batch_Mapping, :Mother_Child_Dyads]
byte position of data computed at: 481
column options generated as: 
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 6)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 9)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 11)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 13)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 15)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 17)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 18)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 19)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 22)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 23)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 24)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 25)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 28)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 29)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 31)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 32)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 33)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 35)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 37)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 38)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
computed types are: Type[String, String, Int64, String, Int64, String, Int64, Date, Union{Missing, String}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, Float64}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, String}, Union{Missing, Date}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, String}, Union{Missing, Int64}]
thread = 1 warning: only found 38 / 39 columns around data row: 1080. Filling remaining columns with `missing`
testing time.csv
testing escaped_pooled.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 1)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing error_comment.txt
testing test_508.csv
testing bug555.txt
testing csv_segfault.txt
thread = 1 warning: only found 4 / 9 columns around data row: 5. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 467. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 9 columns around data row: 468. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 469. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 5. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 467. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 9 columns around data row: 468. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 469. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 5. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 467. Filling remaining columns with `missing`
thread = 1 warning: only found 1 / 9 columns around data row: 468. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 9 columns around data row: 469. Filling remaining columns with `missing`
testing types_override.csv
testing select.csv
thread = 1 warning: only found 16 / 17 columns around data row: 1486. Filling remaining columns with `missing`
thread = 2 warning: only found 16 / 17 columns around data row: 1541. Filling remaining columns with `missing`
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 10)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
thread = 1 warning: only found 16 / 17 columns around data row: 1486. Filling remaining columns with `missing`
testing ampm.csv
┌ Warning: pooled column types not allowed in `CSV.Rows` (column number = 2)
└ @ CSV ~/.julia/packages/CSV/MKemC/src/header.jl:226
testing test_basic.csv
thread = 1 warning: only found 3 / 5 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 3 / 5 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: only found 4 / 5 columns around data row: 3. Filling remaining columns with `missing`
CSV.write: Test Failed at /home/pkgeval/.julia/packages/CSV/MKemC/test/write.jl:321
  Expression: CSV.write("out.test.csv", [(a = s,)])
    Expected: ArgumentError
      Thrown: SystemError
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/CSV/MKemC/test/write.jl:321
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/CSV/MKemC/test/write.jl:24
CSV.Rows("<IOBuffer>"):
Size: 1
Tables.Schema:
 :X  Union{Missing, String}thread = 1 warning: only found 1 / 3 columns around data row: 2. Filling remaining columns with `missing`
thread = 1 warning: only found 2 / 3 columns around data row: 3. Filling remaining columns with `missing`
thread = 1 warning: parsed expected 3 columns, but didn't reach end of line around data row: 3. Ignoring any extra columns on this row
Test Summary:                                  | Pass  Fail  Total
CSV                                            | 1817     1   1818
  CSV.File                                     | 1610         1610
  CSV.write                                    |   88     1     89
  CategoricalArray levels (including ordering) |    9            9
  PooledArrays                                 |   14           14
  LazyStringVector                             |    7            7
  CSV.Rows                                     |   37           37
  CSV.detect                                   |    8            8
  CSV.findrowstarts!                           |    4            4
  CSV.promote_typecode                         |    2            2
  CSV.File with select/drop                    |   38           38
ERROR: LoadError: Some tests did not pass: 1817 passed, 1 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/CSV/MKemC/test/runtests.jl:13
    Testing DataFrames
Status `/tmp/jl_WOtvqW/Project.toml`
  [324d7699] CategoricalArrays v0.8.1
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.2
  [e7dc6d0d] DataValues v0.4.13
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [e1d29d7a] Missings v0.4.4
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [ade2ca70] Dates
  [9fa8497b] Future
  [56ddb016] Logging
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Status `/tmp/jl_WOtvqW/Manifest.toml`
  [324d7699] CategoricalArrays v0.8.1
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.7
  [864edb3b] DataStructures v0.18.2
  [e2d170a0] DataValueInterfaces v1.0.0
  [e7dc6d0d] DataValues v0.4.13
  [41ab1584] InvertedIndices v1.0.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.4
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running tests:
Test Summary: | Pass  Total
make_unique   |    3      3
Test Summary: | Pass  Total
repeat count  |    5      5
Test Summary:      | Pass  Total
repeat inner_outer |    8      8
Test Summary: | Pass  Total
repeat! count |    8      8
Test Summary:       | Pass  Total
repeat! inner_outer |   11     11
	[1m[32mPASSED[0m: utils.jl
Test Summary: | Pass  Total
hcat          |   10     10
Test Summary: | Pass  Total
hcat: copying |   26     26
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
Test Summary:            | Pass  Total
hcat ::AbstractDataFrame |    2      2
Test Summary:          | Pass  Total
hcat ::AbstractVectors |   11     11
Test Summary:  | Pass  Total
hcat: copycols |   76     76
Test Summary: | Pass  Total
vcat          |   21     21
Test Summary: | Pass  Total
vcat copy     |    2      2
Test Summary: | Pass  Total
vcat >2 args  |    4      4
Test Summary:       | Pass  Total
vcat mixed coltypes |   18     18
Test Summary:     | Pass  Total
vcat out of order |   19     19
Test Summary:         | Pass  Total
vcat with cols=:union |    6      6
Test Summary:             | Pass  Total
vcat with cols=:intersect |    6      6
Test Summary:          | Pass  Total
vcat with cols::Vector |   30     30
Test Summary:          | Pass  Total
vcat thrown exceptions |   32     32
Test Summary:  | Pass  Total
vcat with view |    1      1
	[1m[32mPASSED[0m: cat.jl
Test Summary: | Pass  Total
constructors  |   40     40
Test Summary:                 | Pass  Total
completecases and dropmissing |  236    236
Test Summary: | Pass  Total
merge         |   17     17
Test Summary: | Pass  Total
join tests    |    3      3
Test Summary:                                     | Pass  Total
nonunique, nonunique, unique! with extra argument |   41     41
Test Summary:          | Pass  Total
filter() and filter!() |   44     44
Test Summary:                   | Pass  Total
filter and filter! with AsTable |    8      8
Test Summary:   | Pass  Total
names with cols |   20     20
	[1m[32mPASSED[0m: data.jl
Test Summary:  | Pass  Total
Index indexing |   56     56
Test Summary: | Pass  Total
rename!       |   19     19
Test Summary: | Pass  Total
SubIndex      |   74     74
Test Summary:     | Pass  Total
selector mutation |   16     16
Test Summary:  | Pass  Total
fuzzy matching |   12     12
Test Summary:  | Pass  Total
Regex indexing |   46     46
Test Summary: | Pass  Total
Not indexing  |   36     36
Test Summary:    | Pass  Total
Between indexing |   36     36
Test Summary: | Pass  Total
All indexing  |   41     41
Test Summary: | Pass  Total
views         |   11     11
	[1m[32mPASSED[0m: index.jl
Test Summary:                |  Pass  Total
randomized tests for rename! | 14295  14295
Test Summary:            | Pass  Total
additional rename! tests | 6610   6610
Test Summary:              | Pass  Total
rename with integer source |   29     29
Test Summary: | Pass  Total
equality      |    9      9
Test Summary: | Pass  Total
copying       |    9      9
Test Summary:      | Pass  Total
similar / missings |    2      2
Test Summary: | Pass  Total
hasproperty   |    5      5
┌ Warning: inserting colums using a keyword argument is deprecated, use `insertcols!(df, col_ind, :a => 1, makeunique=false)` instead. 
│   caller = ip:0x0
└ @ Core :-1
Test Summary: | Pass  Total
insertcols!   |   87     87
Test Summary:          | Pass  Total
DataFrame constructors |   19     19
Test Summary:  | Pass  Total
push!(df, row) |   69     69
Test Summary: | Pass  Total
delete!       |   44     44
Test Summary: | Pass  Total
describe      |   10     10
Test Summary: | Pass  Total
append!       |   35     35
Test Summary:           | Pass  Total
append! default options |   11     11
Test Summary:            | Pass  Total
append! advanced options |  174    174
Test Summary:               | Pass  Total
new append! and push! tests |   30     30
Test Summary:     | Pass  Total
test categorical! |   14     14
Test Summary: | Pass  Total
categorical!  |   11     11
Test Summary: | Pass  Total
rename        |   47     47
Test Summary:             | Pass  Total
flexible rename arguments |   30     30
Test Summary: | Pass  Total
size          |    5      5
Test Summary: | Pass  Total
description   |    8      8
Test Summary:      | Pass  Total
column conversions |  172    172
Test Summary:        | Pass  Total
test disallowmissing |  730    730
Test Summary:     | Pass  Total
test allowmissing |  360    360
Test Summary:    | Pass  Total
test categorical |  496    496
Test Summary: | Pass  Total
similar       |    8      8
Test Summary:                | Pass  Total
passing range to a DataFrame |    1      1
Test Summary:                | Pass  Total
test getindex using ! syntax |   15     15
Test Summary:                | Pass  Total
test corner case of getindex |    2      2
Test Summary:             | Pass  Total
empty data frame getindex |    9      9
Test Summary:               | Pass  Total
handling of end in indexing |   22     22
Test Summary:        | Pass  Total
aliasing in indexing |    5      5
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |   10     10
Test Summary:          | Pass  Total
duplicate column names |    1      1
Test Summary:         | Pass  Total
parent, size and axes |   11     11
Test Summary:                | Pass  Total
0-row DataFrame corner cases |    4      4
Test Summary:         |
And and Between tests | No tests
Test Summary:                   | Pass  Total
vcat and push! with :orderequal |   14     14
Test Summary:      | Pass  Total
push! with :subset |   18     18
Test Summary:         | Pass  Total
push! with :intersect |   12     12
Test Summary:              | Pass  Total
push!(df, row) with :union |   56     56
Test Summary:                       | Pass  Total
push!(df, row) with promote options |   22     22
	[1m[32mPASSED[0m: dataframe.jl
Test Summary: | Pass  Total
select! Not   |   13     13
Test Summary: | Pass  Total
select Not    |   58     58
Test Summary:              | Pass  Total
select Not on SubDataFrame |   70     70
Test Summary: | Pass  Total
select!       |   35     35
Test Summary: | Pass  Total
select        |   66     66
Test Summary:          | Pass  Total
select on SubDataFrame |   78     78
Test Summary:          | Pass  Total
select! on all columns |   21     21
Test Summary:                                     | Pass  Total
select and select! with multiple selectors passed |   11     11
Test Summary:               | Pass  Total
select and select! renaming |   23     23
Test Summary:                          | Pass  Total
select and select! many columns naming |   24     24
Test Summary:                                | Pass  Total
select and select! many different transforms |   25     25
Test Summary:  | Pass  Total
nrow in select |   24     24
Test Summary:                             | Pass  Total
select and select! reserved return values |   28     28
Test Summary:                      | Pass  Total
select and select! empty selection |   16     16
Test Summary:            | Pass  Total
wrong selection patterns |    4      4
Test Summary:                 | Pass  Total
select and select! duplicates |   15     15
Test Summary:          | Pass  Total
SubDataFrame selection |   17     17
Test Summary:       | Pass  Total
pseudo-broadcasting |  152    152
Test Summary:          | Pass  Total
copycols special cases |   11     11
Test Summary: | Pass  Total
empty select  |    5      5
Test Summary:            | Pass  Total
transform and transform! |   30     30
Test Summary:    | Pass  Total
vectors of pairs |   18     18
AsTable tests: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/select.jl:1109
  Expression: select(df, AsTable(:) => sum ∘ sum) == repeat(DataFrame(a_b_c_function = 45), nrow(df))
   Evaluated: 3×1 DataFrame
│ Row │ a_b_c_ComposedFunction │
│     │ Int64                  │
├─────┼────────────────────────┤
│ 1   │ 45                     │
│ 2   │ 45                     │
│ 3   │ 45                     │ == 3×1 DataFrame
│ Row │ a_b_c_function │
│     │ Int64          │
├─────┼────────────────┤
│ 1   │ 45             │
│ 2   │ 45             │
│ 3   │ 45             │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/select.jl:1109
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/select.jl:1104
AsTable tests: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/select.jl:1111
  Expression: combine(df, AsTable(:) => sum ∘ sum) == DataFrame(a_b_c_function = 45)
   Evaluated: 1×1 DataFrame
│ Row │ a_b_c_ComposedFunction │
│     │ Int64                  │
├─────┼────────────────────────┤
│ 1   │ 45                     │ == 1×1 DataFrame
│ Row │ a_b_c_function │
│     │ Int64          │
├─────┼────────────────┤
│ 1   │ 45             │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/select.jl:1111
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/select.jl:1104
AsTable tests: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/select.jl:1113
  Expression: transform(df, AsTable(:) => sum ∘ sum) == DataFrame(a = 1:3, b = 4:6, c = 7:9, a_b_c_function = 45)
   Evaluated: 3×4 DataFrame
│ Row │ a     │ b     │ c     │ a_b_c_ComposedFunction │
│     │ Int64 │ Int64 │ Int64 │ Int64                  │
├─────┼───────┼───────┼───────┼────────────────────────┤
│ 1   │ 1     │ 4     │ 7     │ 45                     │
│ 2   │ 2     │ 5     │ 8     │ 45                     │
│ 3   │ 3     │ 6     │ 9     │ 45                     │ == 3×4 DataFrame
│ Row │ a     │ b     │ c     │ a_b_c_function │
│     │ Int64 │ Int64 │ Int64 │ Int64          │
├─────┼───────┼───────┼───────┼────────────────┤
│ 1   │ 1     │ 4     │ 7     │ 45             │
│ 2   │ 2     │ 5     │ 8     │ 45             │
│ 3   │ 3     │ 6     │ 9     │ 45             │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/select.jl:1113
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/select.jl:1104
Test Summary: | Pass  Fail  Total
AsTable tests |   11     3     14
	[1m[31mFAILED[0m: select.jl
LoadError: Some tests did not pass: 11 passed, 3 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/select.jl:1
Test Summary:         | Pass  Total
the output of unstack |   27     27
Test Summary:                               | Pass  Total
unstack promotion to support missing values |    8      8
Test Summary:                         | Pass  Total
duplicate entries in unstack warnings |    9      9
Test Summary:            | Pass  Total
missing values in colkey |    6      6
Test Summary:             | Pass  Total
stack-unstack correctness |    4      4
Test Summary: | Pass  Total
reshape       |   78     78
Test Summary:           | Pass  Total
column names duplicates |    5      5
Test Summary:         | Pass  Total
flatten single column |   13     13
Test Summary:            | Pass  Total
flatten multiple columns |   12     12
Test Summary:                       | Pass  Total
test RepeatedVector for categorical |    6      6
Test Summary:          | Pass  Total
stack categorical test |   31     31
Test Summary:     | Pass  Total
test stack eltype |    8      8
	[1m[32mPASSED[0m: reshape.jl
Test Summary: | Pass  Total
constructors  |   28     28
Test Summary:          | Pass  Total
getindex and setindex! |   53     53
Test Summary: | Pass  Total
equality      |   17     17
Test Summary: | Pass  Total
isless        |   13     13
Test Summary: | Pass  Total
hashing       |    6      6
Test Summary: | Pass  Total
grouping      |    6      6
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |    6      6
Test Summary:                    | Pass  Total
keys, values and iteration, size |   31     31
Test Summary:           | Pass  Total
convert, copy and merge |   24     24
Test Summary:            | Pass  Total
parent and parentindices |   34     34
Test Summary:         | Pass  Total
iteration and collect |   10     10
Test Summary:    | Pass  Total
duplicate column |    2      2
Test Summary:        | Pass  Total
conversion and push! |   15     15
Test Summary: | Pass  Total
show          |   11     11
Test Summary:     | Pass  Total
check Vector type |    1      1
Test Summary: | Pass  Total
DataFrameRow  |    2      2
	[1m[32mPASSED[0m: dataframerow.jl
Test Summary: | Pass  Total
LaTeX export  |    4      4
Test Summary:     | Pass  Total
Huge LaTeX export |    2      2
Test Summary: | Pass  Total
HTML output   |   10     10
Test Summary:   | Pass  Total
limit attribute |    2      2
Test Summary: | Pass  Total
printtable    |    1      1
Test Summary:  | Pass  Total
csv/tsv output |    6      6
Test Summary:                     | Pass  Total
empty data frame and DataFrameRow |   12     12
Test Summary: | Pass  Total
consistency   |    8      8
Test Summary: | Pass  Total
summary tests |   16     16
Test Summary: | Pass  Total
eltypes tests |   18     18
Test Summary:                      | Pass  Total
improved printing of special types |    8      8
	[1m[32mPASSED[0m: io.jl
Test Summary: | Pass  Total
constructors  |   72     72
Test Summary:                          | Pass  Total
DataFrame keyword argument constructor |   22     22
Test Summary:         | Pass  Total
DataFrame constructor |   21     21
Test Summary:    | Pass  Total
pair constructor |   22     22
Test Summary: | Pass  Total
associative   |   18     18
Test Summary:       | Pass  Total
vector constructors |   91     91
Test Summary: | Pass  Total
recyclers     |    4      4
Test Summary:                 | Pass  Total
constructor thrown exceptions |   17     17
Test Summary: | Pass  Total
column types  |    3      3
Test Summary:      | Pass  Total
Matrix constructor |    4      4
Test Summary:          | Pass  Total
constructor with types |   33     33
Test Summary:                             | Pass  Total
expansion of Ref and 0-dimensional arrays |    2      2
Test Summary:            | Pass  Total
broadcasting into 0 rows |    6      6
	[1m[32mPASSED[0m: constructors.jl
Test Summary:    | Pass  Total
Conversion tests |   72     72
	[1m[32mPASSED[0m: conversions.jl
Test Summary:  | Pass  Total
standard tests |  189    189
Test Summary:          | Pass  Total
non standard selectors |    4      4
	[1m[32mPASSED[0m: sort.jl
Test Summary: | Pass  Total
parent        |    3      3
Test Summary: | Pass  Total
consistency   |    2      2
Test Summary:    | Pass  Total
accepted columns |    8      8
Test Summary:                                       | Pass  Total
groupby and combine(::Function, ::GroupedDataFrame) | 1160   1160
Test Summary:          | Pass  Total
grouping with missings | 1372   1372
Test Summary:            | Pass  Total
grouping with three keys | 2906   2906
Test Summary:                 | Pass  Total
grouping with hash collisions |    2      2
Test Summary:               | Pass  Total
combine with pair interface |  141    141
Test Summary:                                                                     | Pass  Total
combine with aggregation functions (skipmissing=false, sort=false, indices=false) |  370    370
Test Summary:                                                                    | Pass  Total
combine with aggregation functions (skipmissing=false, sort=false, indices=true) |  471    471
Test Summary:                                                                    | Pass  Total
combine with aggregation functions (skipmissing=false, sort=true, indices=false) |  370    370
Test Summary:                                                                   | Pass  Total
combine with aggregation functions (skipmissing=false, sort=true, indices=true) |  471    471
Test Summary:                                                                    | Pass  Total
combine with aggregation functions (skipmissing=true, sort=false, indices=false) |  370    370
Test Summary:                                                                   | Pass  Total
combine with aggregation functions (skipmissing=true, sort=false, indices=true) |  471    471
Test Summary:                                                                   | Pass  Total
combine with aggregation functions (skipmissing=true, sort=true, indices=false) |  370    370
Test Summary:                                                                  | Pass  Total
combine with aggregation functions (skipmissing=true, sort=true, indices=true) |  471    471
Test Summary:                                 | Pass  Total
combine with columns named like grouping keys |   17     17
Test Summary:      | Pass  Total
iteration protocol |    4      4
Test Summary:                  | Pass  Total
type stability of index fields |    1      1
Test Summary:       | Pass  Total
Array-like getindex |   41     41
Test Summary:  | Pass  Total
== and isequal |   19     19
Test Summary: | Pass  Total
show          |   15     15
Test Summary: | Pass  Total
DataFrame     |   24     24
Test Summary:                          | Pass  Total
groupindices, groupcols, and valuecols |   28     28
Test Summary:               | Pass  Total
non standard cols arguments |   35     35
Test Summary:                         | Pass  Total
GroupedDataFrame dictionary interface |   36     36
Test Summary:          | Pass  Total
GroupKey and GroupKeys |  149    149
Test Summary:                                | Pass  Total
GroupedDataFrame indexing with array of keys |  240    240
Test Summary:                       | Pass  Total
InvertedIndex with GroupedDataFrame |   33     33
Test Summary:                            | Pass  Total
GroupedDataFrame array index homogeneity |   49     49
Test Summary:                  | Pass  Total
Parent DataFrame names changed |   18     18
Test Summary:       | Pass  Total
haskey for GroupKey |   26     26
Test Summary:                     | Pass  Total
Check aggregation of DataFrameRow |    4      4
Test Summary:                                             | Pass  Total
Allow returning DataFrame() or NamedTuple() to drop group | 3026   3026
Test Summary:                              | Pass  Total
auto-splatting, ByRow, and column renaming |    9      9
Test Summary:                   | Pass  Total
hard tabular return value cases |   26     26
Test Summary:                                   | Pass  Total
last Pair interface with multiple return values |    8      8
Test Summary: | Pass  Total
keepkeys      |    3      3
Test Summary:            | Pass  Total
additional do_call tests |   13     13
WARNING: Method definition f1(Any) in module TestGrouping at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1786 overwritten at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1790.
WARNING: Method definition f2(Any) in module TestGrouping at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1787 overwritten at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1791.
WARNING: Method definition f1(Any) in module TestGrouping at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1790 overwritten at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1795.
WARNING: Method definition f2(Any) in module TestGrouping at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1791 overwritten at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1796.
Test Summary:                                              | Pass  Total
mixing of different return lengths and pseudo-broadcasting |  101    101
Test Summary:   | Pass  Total
passing columns |   27     27
Test Summary:              | Pass  Total
correct dropping of groups |   10     10
Test Summary: | Pass  Total
AsTable tests |   14     14
Test Summary:                  | Pass  Total
test correctness of ungrouping |    5      5
Test Summary:            | Pass  Total
combine GroupedDataFrame |  138    138
Test Summary:                         | Pass  Total
select and transform GroupedDataFrame |  320    320
Test Summary:                           | Pass  Total
select! and transform! GroupedDataFrame |  144    144
Test Summary:                         | Pass  Total
group ordering after select/transform |   16     16
Test Summary:                                     | Pass  Total
handling empty data frame / selectors / groupcols |   89     89
Test Summary:                          | Pass  Total
groupcols order after select/transform |    8      8
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2371
  Expression: combine(gdf, :x => sum ∘ skipmissing) == DataFrame(g = 1:2, x_function = [3.0, 4.5])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 3.0                │
│ 2   │ 2     │ 4.5                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 3.0        │
│ 2   │ 2     │ 4.5        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2371
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2373
  Expression: combine(gdf, :x => mean ∘ skipmissing) == DataFrame(g = 1:2, x_function = [1.0, 1.5])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 1.0                │
│ 2   │ 2     │ 1.5                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 1.0        │
│ 2   │ 2     │ 1.5        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2373
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2375
  Expression: combine(gdf, :x => var ∘ skipmissing) == DataFrame(g = 1:2, x_function = [0.0, 0.0])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 0.0                │
│ 2   │ 2     │ 0.0                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 0.0        │
│ 2   │ 2     │ 0.0        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2375
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2380
  Expression: combine(gdf, :x => sum ∘ skipmissing) == DataFrame(g = 1:2, x_function = [3, 2])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Int64              │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 3                  │
│ 2   │ 2     │ 2                  │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Int64      │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 3          │
│ 2   │ 2     │ 2          │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2380
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2382
  Expression: combine(gdf, :x => mean ∘ skipmissing) == DataFrame(g = 1:2, x_function = [1.0, 1.0])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 1.0                │
│ 2   │ 2     │ 1.0                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 1.0        │
│ 2   │ 2     │ 1.0        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2382
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2384
  Expression: combine(gdf, :x => var ∘ skipmissing) == DataFrame(g = 1:2, x_function = [0.0, 0.0])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 0.0                │
│ 2   │ 2     │ 0.0                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 0.0        │
│ 2   │ 2     │ 0.0        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2384
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2389
  Expression: combine(gdf, :x => sum ∘ skipmissing) == DataFrame(g = 1:2, x_function = [3, 2])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Int64              │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 3                  │
│ 2   │ 2     │ 2                  │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Int64      │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 3          │
│ 2   │ 2     │ 2          │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2389
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2391
  Expression: combine(gdf, :x => mean ∘ skipmissing) == DataFrame(g = 1:2, x_function = [1.0, 1.0])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 1.0                │
│ 2   │ 2     │ 1.0                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 1.0        │
│ 2   │ 2     │ 1.0        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2391
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2393
  Expression: combine(gdf, :x => var ∘ skipmissing) == DataFrame(g = 1:2, x_function = [0.0, 0.0])
   Evaluated: 2×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Float64            │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 0.0                │
│ 2   │ 2     │ 0.0                │ == 2×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Float64    │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 0.0        │
│ 2   │ 2     │ 0.0        │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2393
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
corner cases of group_reduce: Test Failed at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2432
  Expression: combine(gdf, :x => sum ∘ skipmissing) == DataFrame(g = 1, x_function = 0)
   Evaluated: 1×2 DataFrame
│ Row │ g     │ x_ComposedFunction │
│     │ Int64 │ Int64              │
├─────┼───────┼────────────────────┤
│ 1   │ 1     │ 0                  │ == 1×2 DataFrame
│ Row │ g     │ x_function │
│     │ Int64 │ Int64      │
├─────┼───────┼────────────┤
│ 1   │ 1     │ 0          │
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2432
 [2] top-level scope
   @ /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114
 [3] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/grouping.jl:2368
Test Summary:                | Pass  Fail  Total
corner cases of group_reduce |   62    10     72
	[1m[31mFAILED[0m: grouping.jl
LoadError: Some tests did not pass: 62 passed, 10 failed, 0 errored, 0 broken.
in expression starting at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/grouping.jl:1
Test Summary: | Pass  Total
join types    |   17     17
Test Summary:       | Pass  Total
Test empty inputs 1 |   21     21
Test Summary:       | Pass  Total
Test empty inputs 2 |   21     21
Test Summary: | Pass  Total
issue #960    |    4      4
Test Summary: | Pass  Total
all joins     |   30     30
Test Summary:                    | Pass  Total
all joins with CategoricalArrays |   32     32
Test Summary:                                                     | Pass  Total
maintain CategoricalArray levels ordering on join - non-`on` cols |    6      6
Test Summary:                                                          | Pass  Total
maintain CategoricalArray levels ordering on join - ordering conflicts |   10     10
Test Summary:                                                           | Pass  Total
maintain CategoricalArray levels ordering on join - left is categorical |   10     10
Test Summary:                                   | Pass  Total
join on columns with different left/right names |   18     18
Test Summary:                  | Pass  Total
join with a column of type Any |   16     16
Test Summary:                                       | Pass  Total
joins with categorical columns and no matching rows |   24     24
Test Summary:     | Pass  Total
indicator columns |    4      4
Test Summary:                       | Pass  Total
test checks of merge key uniqueness |   18     18
Test Summary: | Pass  Total
consistency   |    3      3
Test Summary:         | Pass  Total
multi data frame join |   10     10
Test Summary:       | Pass  Total
flexible on in join |    4      4
Test Summary:             | Pass  Total
check naming of indicator |    6      6
Test Summary:                      | Pass  Total
validate error message composition |   47     47
	[1m[32mPASSED[0m: join.jl
Test Summary:       | Pass  Total
eachrow and eachcol |   34     34
Test Summary: | Pass  Total
mapcols       |    9      9
Test Summary: | Pass  Total
mapcols!      |    9      9
Test Summary: | Pass  Total
SubDataFrame  |    5      5
Test Summary:   | Pass  Total
parent mutation |    4      4
Test Summary:                 | Pass  Total
getproperty and propertynames |   22     22
Test Summary:             |
overload Compat functions | No tests
Test Summary:              | Pass  Total
keys and pairs for eachcol |   10     10
	[1m[32mPASSED[0m: iteration.jl
Test Summary: | Pass  Total
nonunique     |   18     18
	[1m[32mPASSED[0m: duplicates.jl
Test Summary:                            | Pass  Total
Basic show test with allrows and allcols |    9      9
Test Summary:    | Pass  Total
displaysize test |    4      4
Test Summary:             | Pass  Total
IOContext parameters test |    2      2
Test Summary:          | Pass  Total
SubDataFrame show test |    1      1
Test Summary:                                 | Pass  Total
Test showing StackedVector and RepeatedVector |    3      3
Test Summary:                                            | Pass  Total
Test colors and non-standard values: missing and nothing |    3      3
Test Summary:                  | Pass  Total
Test correct width computation |    1      1
Test Summary:              | Pass  Total
Test showing special types |    5      5
Test Summary:                              | Pass  Total
Test using :compact parameter of IOContext |    2      2
Test Summary:                              | Pass  Total
Test of DataFrameRows and DataFrameColumns |    4      4
Test Summary:                          | Pass  Total
Test empty data frame and DataFrameRow |    3      3
Test Summary: | Pass  Total
consistency   |    2      2
Test Summary:  | Pass  Total
wide type name |    6      6
Test Summary:  | Pass  Total
wide type name |    2      2
Test Summary: | Pass  Total
UnionAll      |    1      1
	[1m[32mPASSED[0m: show.jl
Test Summary:       | Pass  Total
copy - SubDataFrame |    5      5
Test Summary:     | Pass  Total
view -- DataFrame |   77     77
Test Summary:        | Pass  Total
view -- SubDataFrame |   62     62
Test Summary:                               | Pass  Total
getproperty, setproperty! and propertynames |    8      8
Test Summary: | Pass  Total
index         |   11     11
Test Summary: | Pass  Total
delete!       |    1      1
Test Summary: | Pass  Total
parent        |    6      6
Test Summary:    | Pass  Total
duplicate column |    1      1
Test Summary:           | Pass  Total
conversion to DataFrame |   12     12
Test Summary:     | Pass  Total
setindex! in view |    4      4
	[1m[32mPASSED[0m: subdataframe.jl
Test Summary: | Pass  Total
Tables        |  101    101
Test Summary: | Pass  Total
DataFrame!    |    9      9
Test Summary: | Pass  Total
columnindex   |    2      2
Test Summary:                   | Pass  Total
eachrow and eachcol integration |   29     29
	[1m[32mPASSED[0m: tables.jl
Test Summary: | Pass  Total
TableTraits   |   10     10
	[1m[32mPASSED[0m: tabletraits.jl
Test Summary:      | Pass  Total
getindex DataFrame |   87     87
Test Summary:       | Pass  Total
getindex df[!, col] |   13     13
Test Summary:  | Pass  Total
view DataFrame |  131    131
Test Summary:         | Pass  Total
getindex SubDataFrame |  140    140
Test Summary:     | Pass  Total
view SubDataFrame |  143    143
Test Summary:         | Pass  Total
getindex DataFrameRow |   22     22
Test Summary:     | Pass  Total
view DataFrameRow |   25     25
Test Summary:                             | Pass  Total
additional tests of post-! getindex rules |  230    230
Test Summary:          | Pass  Total
setindex! on DataFrame |  100    100
Test Summary:             | Pass  Total
setindex! on SubDataFrame |  240    240
Test Summary:             | Pass  Total
setindex! on DataFrameRow |  101    101
Test Summary:                           | Pass  Total
setindex! with ! or : and multiple cols |   24     24
Test Summary:              | Pass  Total
additional setindex! tests |    5      5
Test Summary:      | Pass  Total
invalid view tests |   28     28
Test Summary:   | Pass  Total
string indexing |  115    115
Test Summary:              | Pass  Total
setindex! for DataFrameRow |   12     12
Test Summary:       | Pass  Total
begin and end tests |   18     18
	[1m[32mPASSED[0m: indexing.jl
Test Summary:  | Pass  Total
CartesianIndex |   24     24
Test Summary:                             | Pass  Total
broadcasting of AbstractDataFrame objects |   28     28
Test Summary:                                               | Pass  Total
broadcasting of AbstractDataFrame objects thrown exceptions |   10     10
Test Summary:          | Pass  Total
broadcasting expansion |    5      5
Test Summary:                                          | Pass  Total
broadcasting of AbstractDataFrame objects corner cases |   34     34
Test Summary:                                                               | Pass  Total
normal data frame and data frame row in broadcasted assignment - one column |  117    117
Test Summary:                                                                 | Pass  Total
normal data frame and data frame view in broadcasted assignment - two columns |  104    104
Test Summary:                                       | Pass  Total
assignment to a whole data frame and data frame row |    8      8
Test Summary:                                               | Pass  Total
extending data frame in broadcasted assignment - one column |   40     40
Test Summary:                | Pass  Total
empty data frame corner case |  191    191
Test Summary:           | Pass  Total
test categorical values |  126    126
Test Summary:       | Pass  Total
scalar broadcasting |    3      3
Test Summary:      | Pass  Total
tuple broadcasting |    8      8
Test Summary:             | Pass  Total
scalar on assignment side |    4      4
Test Summary: | Pass  Total
nothing test  |    4      4
Test Summary: | Pass  Total
aliasing test |  154    154
Test Summary: | Pass  Total
@. test       |    2      2
Test Summary:     | Pass  Total
test common cases |   11     11
Test Summary:                                             | Pass  Total
data frame only on left hand side broadcasting assignment |   26     26
Test Summary:                          | Pass  Total
broadcasting with 3-dimensional object |    4      4
Test Summary:                                  | Pass  Total
additional checks of post-! broadcasting rules |  168    168
Test Summary:                                   | Pass  Total
DataFrameRow getproperty broadcasted assignment |    8      8
Test Summary:                                | Pass  Total
make sure that : is in place and ! allocates |   10     10
Test Summary:                                            | Pass  Total
add new correct rules for df[row, col] .= v broadcasting |   12     12
Test Summary:                 | Pass  Total
broadcasting into df[!, cols] |  223    223
Test Summary:                          | Pass  Total
broadcasting over heterogenous columns |    1      1
Test Summary:        | Pass  Total
@views on df[!, col] |    3      3
Test Summary:                      | Pass  Total
broadcasting of df[:, col] = value |   12     12
	[1m[32mPASSED[0m: broadcasting.jl
Test Summary: | Pass  Total
iteration     |   12     12
Test Summary: | Pass  Total
joins         |   24     24
Test Summary: | Pass  Total
reshape       |    6      6
Test Summary: | Pass  Total
selection     |   13     13
Test Summary: | Pass  Total
tables        |    4      4
Test Summary:       | Pass  Total
split-apply-combine |   15     15
Test Summary: | Pass  Total
DataFrameRow  |   13     13
Test Summary:                        | Pass  Total
names, propertynames and hasproperty |   43     43
Test Summary:     | Pass  Total
append! and push! |    5      5
	[1m[32mPASSED[0m: string.jl
Test Summary:            | Pass  Total
deprecated tuple in sort |    5      5
Test Summary:           | Pass  Total
categorical constructor |    3      3
Test Summary:          | Pass  Total
DataFrame constructors |   42     42
Test Summary: | Pass  Total
colwise       |   29     29
Test Summary: | Pass  Total
empty!        |    5      5
Test Summary:              | Pass  Total
deletecols and deletecols! |    7      7
Test Summary: | Pass  Total
haskey        |    7      7
Test Summary:                                        | Pass  Total
df[col] and df[col] for getindex, view, and setindex |  132    132
Test Summary: | Pass  Total
eltypes       |    1      1
Test Summary: | Pass  Total
melt          |   22     22
Test Summary: | Pass  Total
insertcols!   |    1      1
Test Summary: | Pass  Total
join          |    3      3
Test Summary:     | Pass  Total
eachcol(df, true) |   44     44
Test Summary:         | Pass  Total
deprecated by/combine |   19     19
Test Summary:        | Pass  Total
deprecated aggregate |   23     23
Test Summary:          | Pass  Total
deprecated deleterows! |    1      1
Test Summary:           | Pass  Total
by skipmissing and sort |    4      4
Test Summary:            | Pass  Total
map skipmissing and sort |    8      8
	[1m[32mPASSED[0m: deprecated.jl
ERROR: LoadError: "Tests failed"
Stacktrace:
 [1] top-level scope
   @ ~/.julia/packages/DataFrames/cdZCk/test/runtests.jl:55
 [2] include(fname::String)
   @ Base.MainInclude ./client.jl:443
 [3] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/DataFrames/cdZCk/test/runtests.jl:54
    Testing Distances
Status `/tmp/jl_aTaNo0/Project.toml`
  [b4f34e82] Distances v0.9.0
  [6fe1bfb0] OffsetArrays v1.1.2
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_aTaNo0/Manifest.toml`
  [b4f34e82] Distances v0.9.0
  [6fe1bfb0] OffsetArrays v1.1.2
  [2a0f44e3] Base64
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
    Testing Running tests...
Test Summary:                            | Pass  Total
PreMetric, SemiMetric, Metric on Float64 |  401    401
Test Summary:                        | Pass  Total
PreMetric, SemiMetric, Metric on F64 |  401    401
Test Summary:      | Pass  Total
individual metrics |  167    167
Test Summary: | Pass  Total
NaN behavior  |    3      3
Test Summary: | Pass  Total
empty vector  |   46     46
Test Summary:              | Pass  Total
DimensionMismatch throwing |   15     15
Test Summary:         | Pass  Total
Different input types |   52     52
Test Summary: | Pass  Total
mahalanobis   |    8      8
Test Summary: | Pass  Total
haversine     |   12     12
Test Summary:             | Pass  Total
bhattacharyya / hellinger |   20     20
Test Summary:                  | Pass  Total
column-wise metrics on Float64 |   93     93
Test Summary:              | Pass  Total
column-wise metrics on F64 |   93     93
Test Summary:               | Pass  Total
pairwise metrics on Float64 |  180    180
Test Summary:           | Pass  Total
pairwise metrics on F64 |  180    180
Test Summary:       | Pass  Total
Euclidean precision |    8      8
Test Summary:            | Pass  Total
Euclidean non-negativity |    6      6
WARNING: Method definition F(Any) in module Main at /home/pkgeval/.julia/packages/Distances/mNZEh/test/test_dists.jl:604 overwritten at /home/pkgeval/.julia/packages/Distances/mNZEh/test/test_dists.jl:615.
WARNING: Method definition ∇(Any) in module Main at /home/pkgeval/.julia/packages/Distances/mNZEh/test/test_dists.jl:605 overwritten at /home/pkgeval/.julia/packages/Distances/mNZEh/test/test_dists.jl:616.
Test Summary:      | Pass  Total
Bregman Divergence |    4      4
    Testing Distances tests passed 
    Testing Distributions
Status `/tmp/jl_Q7jLVU/Project.toml`
  [49dc2e85] Calculus v0.5.1
  [31c24e10] Distributions v0.23.8
  [1a297f60] FillArrays v0.8.14
  [26cc04aa] FiniteDifferences v0.10.8
  [f6369f11] ForwardDiff v0.10.12
  [09f84164] HypothesisTests v0.10.0
  [682c06a0] JSON v0.21.0
  [90014a1f] PDMats v0.10.0
  [1fd47b50] QuadGK v2.4.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [de0858da] Printf
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_Q7jLVU/Manifest.toml`
  [49dc2e85] Calculus v0.5.1
  [d360d2e6] ChainRulesCore v0.9.6
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.14.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.2
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [31c24e10] Distributions v0.23.8
  [1a297f60] FillArrays v0.8.14
  [26cc04aa] FiniteDifferences v0.10.8
  [f6369f11] ForwardDiff v0.10.12
  [09f84164] HypothesisTests v0.10.0
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.4
  [46d2c3a1] MuladdMacro v0.2.2
  [77ba4419] NaNMath v0.3.4
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [90014a1f] PDMats v0.10.0
  [69de0a69] Parsers v1.0.10
  [1fd47b50] QuadGK v2.4.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.1
  [4c63d2b9] StatsFuns v0.9.5
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Running tests:
Test Summary: | Pass  Total
Test arcsine  |   29     29
    [Discrete]
    ------------
    testing Truncated(BetaBinomial(10, 0.2, 0.25),3,5)
    testing Truncated(BetaBinomial(10, 2, 2.5),3,5)
    testing Truncated(BetaBinomial(10, 60, 40),3,5)
    testing Truncated(Binomial(5, 0.4),3,5)
    testing Truncated(Binomial(6, 0.8),3,5)
    testing Truncated(Binomial(100, 0.1),3,5)
    testing Truncated(Binomial(100, 0.9),3,5)
    testing Truncated(Binomial(10, 0.0),3,5)
    testing Truncated(Binomial(10, 1.0),3,5)
    testing Truncated(DiscreteUniform(6),3,5)
    testing Truncated(DiscreteUniform(7),3,5)
    testing Truncated(DiscreteUniform(2, 8),3,5)
    testing Truncated(Geometric(),3,5)
    testing Truncated(Geometric(0.02),3,5)
    testing Truncated(Geometric(0.1),3,5)
    testing Truncated(Geometric(0.5),3,5)
    testing Truncated(Geometric(0.9),3,5)
    testing Truncated(NegativeBinomial(),3,5)
    testing Truncated(NegativeBinomial(6),3,5)
    testing Truncated(NegativeBinomial(1, 0.5),3,5)
    testing Truncated(NegativeBinomial(5, 0.6),3,5)
    testing Truncated(NegativeBinomial(0.5, 0.5),3,5)
    testing Truncated(Poisson(),3,5)
    testing Truncated(Poisson(0.5),3,5)
    testing Truncated(Poisson(2.0),3,5)
    testing Truncated(Poisson(10.0),3,5)
    testing Truncated(Poisson(80.0),3,5)

    [Continuous]
    ------------
    testing Truncated(BetaPrime(),3,5)
    testing Truncated(BetaPrime(3.0),3,5)
    testing Truncated(BetaPrime(3.0, 5.0),3,5)
    testing Truncated(BetaPrime(5.0, 3.0),3,5)
    testing Truncated(Cauchy(),3,5)
    testing Truncated(Cauchy(2.0),3,5)
    testing Truncated(Cauchy(0.0, 1.0),3,5)
    testing Truncated(Cauchy(10.0, 1.0),3,5)
    testing Truncated(Cauchy(2.0, 10.0),3,5)
    testing Truncated(Chi(1),3,5)
    testing Truncated(Chi(2),3,5)
    testing Truncated(Chi(3),3,5)
    testing Truncated(Chi(12),3,5)
    testing Truncated(Chisq(1),3,5)
    testing Truncated(Chisq(8),3,5)
    testing Truncated(Chisq(20),3,5)
    testing Truncated(Erlang(),3,5)
    testing Truncated(Erlang(3),3,5)
    testing Truncated(Erlang(3, 1.0),3,5)
    testing Truncated(Erlang(5, 2.0),3,5)
    testing Truncated(Exponential(),3,5)
    testing Truncated(Exponential(2.0),3,5)
    testing Truncated(Exponential(6.5),3,5)
    testing Truncated(FDist(6.0, 8.0),3,5)
    testing Truncated(FDist(8.0, 6.0),3,5)
    testing Truncated(FDist(30, 40),3,5)
    testing Truncated(Frechet(),3,5)
    testing Truncated(Frechet(0.5),3,5)
    testing Truncated(Frechet(3.0),3,5)
    testing Truncated(Frechet(20.0),3,5)
    testing Truncated(Frechet(60.0),3,5)
    testing Truncated(Frechet(0.5, 2.0),3,5)
    testing Truncated(Frechet(3.0, 2.0),3,5)
    testing Truncated(Gamma(),3,5)
    testing Truncated(Gamma(2.0),3,5)
    testing Truncated(Gamma(1.0, 1.0),3,5)
    testing Truncated(Gamma(3.0, 1.0),3,5)
    testing Truncated(Gamma(3.0, 2.0),3,5)
    testing Truncated(GeneralizedExtremeValue(1.0, 1.0, 1.0),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.0),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 1.1),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.6),3,5)
    testing Truncated(GeneralizedExtremeValue(0.0, 1.0, 0.3),3,5)
    testing Truncated(GeneralizedExtremeValue(-1.0, 0.5, 0.6),3,5)
    testing Truncated(GeneralizedPareto(),3,5)
    testing Truncated(GeneralizedPareto(1.0, 1.0),3,5)
    testing Truncated(GeneralizedPareto(0.1, 2.0),3,5)
    testing Truncated(GeneralizedPareto(1.0, 1.0, 1.0),3,5)
    testing Truncated(GeneralizedPareto(-1.5, 0.5, 2.0),3,5)
    testing Truncated(Gumbel(),3,5)
    testing Truncated(Gumbel(3.0),3,5)
    testing Truncated(Gumbel(3.0, 5.0),3,5)
    testing Truncated(Gumbel(5.0, 3.0),3,5)
    testing Truncated(InverseGamma(),3,5)
    testing Truncated(InverseGamma(2.0),3,5)
    testing Truncated(InverseGamma(1.0, 1.0),3,5)
    testing Truncated(InverseGamma(1.0, 2.0),3,5)
    testing Truncated(InverseGamma(2.0, 1.0),3,5)
    testing Truncated(InverseGamma(2.0, 3.0),3,5)
    testing Truncated(InverseGaussian(),3,5)
    testing Truncated(InverseGaussian(0.8),3,5)
    testing Truncated(InverseGaussian(2.0),3,5)
    testing Truncated(InverseGaussian(1.0, 1.0),3,5)
    testing Truncated(InverseGaussian(2.0, 1.5),3,5)
    testing Truncated(InverseGaussian(2.0, 7.0),3,5)
    testing Truncated(Laplace(),3,5)
    testing Truncated(Laplace(2.0),3,5)
    testing Truncated(Laplace(0.0, 1.0),3,5)
    testing Truncated(Laplace(5.0, 1.0),3,5)
    testing Truncated(Laplace(5.0, 1.5),3,5)
    testing Truncated(Levy(),3,5)
    testing Truncated(Levy(2),3,5)
    testing Truncated(Levy(2, 8),3,5)
    testing Truncated(Levy(3.0, 3),3,5)
    testing Truncated(Logistic(),3,5)
    testing Truncated(Logistic(2.0),3,5)
    testing Truncated(Logistic(0.0, 1.0),3,5)
    testing Truncated(Logistic(5.0, 1.0),3,5)
    testing Truncated(Logistic(2.0, 1.5),3,5)
    testing Truncated(Logistic(5.0, 1.5),3,5)
    testing Truncated(LogNormal(),3,5)
    testing Truncated(LogNormal(1.0),3,5)
    testing Truncated(LogNormal(0.0, 2.0),3,5)
    testing Truncated(LogNormal(1.0, 2.0),3,5)
    testing Truncated(LogNormal(3.0, 0.5),3,5)
    testing Truncated(LogNormal(3.0, 1.0),3,5)
    testing Truncated(LogNormal(3.0, 2.0),3,5)
    testing Truncated(NoncentralChisq(2, 2),3,5)
    testing Truncated(NoncentralChisq(2, 5),3,5)
    testing Truncated(NoncentralF(2, 2, 2),3,5)
    testing Truncated(NoncentralF(8, 10, 5),3,5)
    testing Truncated(NoncentralT(2, 2),3,5)
    testing Truncated(NoncentralT(10, 2),3,5)
    testing Truncated(Normal(),3,5)
    testing Truncated(Normal(2.0),3,5)
    testing Truncated(Normal(-3.0, 2.0),3,5)
    testing Truncated(Normal(1.0, 10.0),3,5)
    testing Truncated(NormalCanon(),3,5)
    testing Truncated(NormalCanon(0.0, 1.0),3,5)
    testing Truncated(NormalCanon(-1.0, 2.5),3,5)
    testing Truncated(NormalCanon(2.0, 0.8),3,5)
    testing Truncated(Pareto(),3,5)
    testing Truncated(Pareto(2.0),3,5)
    testing Truncated(Pareto(2.0, 1.5),3,5)
    testing Truncated(Pareto(3.0, 2.0),3,5)
    testing Truncated(Rayleigh(),3,5)
    testing Truncated(Rayleigh(3.0),3,5)
    testing Truncated(Rayleigh(8.0),3,5)
    testing Truncated(StudentizedRange(2.0, 2.0),3,5)
    testing Truncated(StudentizedRange(5.0, 10.0),3,5)
    testing Truncated(StudentizedRange(10.0, 5.0),3,5)
    testing Truncated(SymTriangularDist(3.0, 2.0),3,5)
    testing Truncated(SymTriangularDist(10.0, 8.0),3,5)
    testing Truncated(TDist(1.2),3,5)
    testing Truncated(TDist(5.0),3,5)
    testing Truncated(TDist(28.0),3,5)
    testing Truncated(TriangularDist(0, 5),3,5)
    testing Truncated(TriangularDist(-4, 14, 3),3,5)
    testing Truncated(TriangularDist(2, 2000, 500),3,5)
    testing Truncated(truncated(Normal(27, 3), 0, Inf),3,5)
    testing Truncated(Uniform(3.0, 17.0),3,5)
    testing Truncated(Weibull(),3,5)
    testing Truncated(Weibull(0.5),3,5)
    testing Truncated(Weibull(5.0),3,5)
    testing Truncated(Weibull(20.0, 1.0),3,5)
    testing Truncated(Weibull(1.0, 2.0),3,5)
    testing Truncated(Weibull(5.0, 2.0),3,5)

Test Summary: | Pass  Total
Test truncate | 5230   5230
Test Summary:    | Pass  Total
Test truncnormal |   28     28
Test Summary:              | Pass  Total
Test truncated_exponential |    8      8
┌ Warning: `BigFloat(x::Real, prec::Int)` is deprecated, use `BigFloat(x; precision = prec)` instead.
│   caller = ip:0x0
└ @ Core :-1
Test Summary: | Pass  Total
Test normal   |  136    136
Test Summary:  | Pass  Total
Test lognormal |  226    226
Test Summary: | Pass  Total
Test mvnormal | 5832   5832
Test Summary:    | Pass  Total
Test mvlognormal | 1416   1416
Test Summary: | Pass  Total
Test types    |   46     46
Test Summary: | Pass  Total
Test utils    |  904    904
    testing CategoricalDirectSampler
    testing AliasTable
┌ Warning: Assignment to `n` in soft scope is ambiguous because a global variable by the same name exists: `n` will be treated as a new local. Disambiguate by using `local n` to suppress this warning or `global n` to assign to the existing global variable.
└ @ ~/.julia/packages/Distributions/jFoHB/test/samplers.jl:55
    testing BinomialGeomSampler
    testing BinomialTPESampler
    testing BinomialPolySampler
    testing BinomialAliasSampler
    testing PoissonCountSampler
    testing PoissonADSampler
    testing PoissBinAliasSampler
    testing ExponentialSampler
    testing GammaGDSampler
    testing GammaMTSampler
    testing GammaGSSampler
    testing GammaIPSampler
Test Summary: | Pass  Total
Test samplers |    2      2
    testing Categorical{Float64,Vector{Float64}}(support=Base.OneTo(2), p=[0.5, 0.5]) as Categorical
    testing Categorical{Float32,Vector{Float32}}(support=Base.OneTo(2), p=Float32[0.5, 0.5]) as Categorical
    testing Categorical{Rational{Int64},Vector{Rational{Int64}}}(support=Base.OneTo(2), p=Rational{Int64}[1//2, 1//2]) as Categorical
    testing Categorical{Float64,Vector{Float64}}(support=Base.OneTo(4), p=[0.1, 0.3, 0.2, 0.4]) as Categorical
    testing Categorical{Float64,Vector{Float64}}(support=Base.OneTo(3), p=[0.15, 0.25, 0.6]) as Categorical
    testing Categorical{Float64,Vector{Float64}}(support=Base.OneTo(4), p=[0.25, 0.25, 0.25, 0.25]) as Categorical
Test Summary:    | Pass  Total
Test categorical |  353    353
    [Discrete]
    ------------
    testing Bernoulli()
    testing Bernoulli(0.25)
    testing Bernoulli(0.75)
    testing Bernoulli(0.0)
    testing Bernoulli(1.0)
    testing BetaBinomial(2, 0.2, 0.25)
    testing BetaBinomial(10, 0.2, 0.25)
    testing BetaBinomial(10, 2, 2.5)
    testing BetaBinomial(10, 60, 40)
    testing Binomial()
    testing Binomial(3)
    testing Binomial(5, 0.4)
    testing Binomial(6, 0.8)
    testing Binomial(100, 0.1)
    testing Binomial(100, 0.9)
    testing Binomial(10, 0.0)
    testing Binomial(10, 1.0)
    testing DiscreteUniform()
    testing DiscreteUniform(6)
    testing DiscreteUniform(7)
    testing DiscreteUniform(0, 4)
    testing DiscreteUniform(2, 8)
    testing Geometric()
    testing Geometric(0.02)
    testing Geometric(0.1)
    testing Geometric(0.5)
    testing Geometric(0.9)
    testing Hypergeometric(2, 2, 2)
    testing Hypergeometric(3, 2, 2)
    testing Hypergeometric(3, 2, 0)
    testing Hypergeometric(3, 2, 5)
    testing Hypergeometric(4, 5, 6)
    testing Hypergeometric(60, 80, 100)
    testing NegativeBinomial()
    testing NegativeBinomial(6)
    testing NegativeBinomial(1, 0.5)
    testing NegativeBinomial(5, 0.6)
    testing NegativeBinomial(0.5, 0.5)
    testing Poisson()
    testing Poisson(0.0)
    testing Poisson(0.5)
    testing Poisson(2.0)
    testing Poisson(10.0)
    testing Poisson(80.0)
    testing Skellam()
    testing Skellam(2.0)
    testing Skellam(2.0, 3.0)
    testing Skellam(3.2, 1.8)
    testing FisherNoncentralHypergeometric(8, 6, 10, 1)
    testing FisherNoncentralHypergeometric(8, 6, 10, 10)
    testing FisherNoncentralHypergeometric(8, 6, 10, 0.1)
    testing FisherNoncentralHypergeometric(80, 60, 100, 1)
    testing FisherNoncentralHypergeometric(80, 60, 100, 10)
    testing FisherNoncentralHypergeometric(80, 60, 100, 0.1)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 1)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 10)
    testing WalleniusNoncentralHypergeometric(8, 6, 10, 0.1)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 1)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 0.5)
    testing WalleniusNoncentralHypergeometric(40, 30, 50, 2)

    [Continuous]
    ------------
    testing Arcsine()
    testing Arcsine(2.0)
    testing Arcsine(1.0, 2.5)
    testing Arcsine(-1.0, 1.0)
    testing Beta(2.0, 2.0)
    testing Beta(3.0, 4.0)
    testing Beta(17.0, 13.0)
    testing BetaPrime()
    testing BetaPrime(3.0)
    testing BetaPrime(3.0, 5.0)
    testing BetaPrime(5.0, 3.0)
    testing Cauchy()
    testing Cauchy(2.0)
    testing Cauchy(0.0, 1.0)
    testing Cauchy(10.0, 1.0)
    testing Cauchy(2.0, 10.0)
    testing Chi(1)
    testing Chi(2)
    testing Chi(3)
    testing Chi(12)
    testing Chisq(1)
    testing Chisq(8)
    testing Chisq(20)
    testing Cosine()
    testing Cosine(1.5)
    testing Cosine(2.0, 2.8)
    testing Erlang()
    testing Erlang(3)
    testing Erlang(3, 1.0)
    testing Erlang(5, 2.0)
    testing Exponential()
    testing Exponential(2.0)
    testing Exponential(6.5)
    testing FDist(6.0, 8.0)
    testing FDist(8.0, 6.0)
    testing FDist(30, 40)
    testing Frechet()
    testing Frechet(0.5)
    testing Frechet(3.0)
    testing Frechet(20.0)
    testing Frechet(60.0)
    testing Frechet(0.5, 2.0)
    testing Frechet(3.0, 2.0)
    testing Gamma()
    testing Gamma(2.0)
    testing Gamma(1.0, 1.0)
    testing Gamma(3.0, 1.0)
    testing Gamma(3.0, 2.0)
    testing GeneralizedExtremeValue(1.0, 1.0, 1.0)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.0)
    testing GeneralizedExtremeValue(0.0, 1.0, 1.1)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.6)
    testing GeneralizedExtremeValue(0.0, 1.0, 0.3)
    testing GeneralizedExtremeValue(1.0, 1.0, -1.0)
    testing GeneralizedExtremeValue(-1.0, 0.5, 0.6)
    testing GeneralizedPareto()
    testing GeneralizedPareto(1.0, 1.0)
    testing GeneralizedPareto(0.1, 2.0)
    testing GeneralizedPareto(1.0, 1.0, 1.0)
    testing GeneralizedPareto(-1.5, 0.5, 2.0)
    testing Gumbel()
    testing Gumbel(3.0)
    testing Gumbel(3.0, 5.0)
    testing Gumbel(5.0, 3.0)
    testing InverseGamma()
