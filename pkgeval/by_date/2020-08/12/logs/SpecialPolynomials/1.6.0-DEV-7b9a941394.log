Julia Version 1.6.0-DEV.629
Commit 7b9a941394 (2020-08-12 17:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FFTW_jll ───────────────────── v3.3.9+5
  Installed ToeplitzMatrices ───────────── v0.6.0
  Installed Mocking ────────────────────── v0.7.1
  Installed MacroTools ─────────────────── v0.5.5
  Installed SpecialFunctions ───────────── v0.10.3
  Installed Intervals ──────────────────── v1.4.2
  Installed DSP ────────────────────────── v0.6.7
  Installed SpecialPolynomials ─────────── v0.1.1
  Installed GMP_jll ────────────────────── v6.2.0+1
  Installed Calculus ───────────────────── v0.5.1
  Installed DualNumbers ────────────────── v0.6.2
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed Polynomials ────────────────── v1.1.4
  Installed MKL_jll ────────────────────── v2020.1.216+0
  Installed QuadGK ─────────────────────── v2.4.0
  Installed Memoize ────────────────────── v0.4.3
  Installed IterTools ──────────────────── v1.3.0
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Reexport ───────────────────── v0.2.0
  Installed AbstractFFTs ───────────────── v0.5.0
  Installed Zlib_jll ───────────────────── v1.2.11+15
  Installed TimeZones ──────────────────── v1.3.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed DataAPI ────────────────────── v1.3.0
  Installed MPFR_jll ───────────────────── v4.0.2+2
  Installed BinaryProvider ─────────────── v0.5.10
  Installed FastTransforms_jll ─────────── v0.3.3+0
  Installed HypergeometricFunctions ────── v0.2.3
  Installed RecipesBase ────────────────── v1.0.2
  Installed OrderedCollections ─────────── v1.3.0
  Installed Libiconv_jll ───────────────── v1.16.0+5
  Installed XML2_jll ───────────────────── v2.9.10+1
  Installed OffsetArrays ───────────────── v1.1.2
  Installed NaNMath ────────────────────── v0.3.4
  Installed Missings ───────────────────── v0.4.3
  Installed EzXML ──────────────────────── v1.1.0
  Installed FastTransforms ─────────────── v0.9.2
  Installed FFTW ───────────────────────── v1.2.2
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed IntelOpenMP_jll ────────────── v2018.0.3+0
  Installed ExprTools ──────────────────── v0.1.1
  Installed DataStructures ─────────────── v0.17.20
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed StatsBase ──────────────────── v0.33.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [a25cea48] + SpecialPolynomials v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [621f4979] + AbstractFFTs v0.5.0
  [b99e7846] + BinaryProvider v0.5.10
  [49dc2e85] + Calculus v0.5.1
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] + DSP v0.6.7
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [fa6b7ba4] + DualNumbers v0.6.2
  [e2ba6199] + ExprTools v0.1.1
  [8f5d6c58] + EzXML v1.1.0
  [7a1cc6ca] + FFTW v1.2.2
  [f5851436] + FFTW_jll v3.3.9+5
  [442a2c76] + FastGaussQuadrature v0.4.2
  [057dd010] + FastTransforms v0.9.2
  [34b6f7d7] + FastTransforms_jll v0.3.3+0
  [781609d7] + GMP_jll v6.2.0+1
  [34004b35] + HypergeometricFunctions v0.2.3
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+0
  [d8418881] + Intervals v1.4.2
  [c8e1da08] + IterTools v1.3.0
  [94ce4f54] + Libiconv_jll v1.16.0+5
  [856f044c] + MKL_jll v2020.1.216+0
  [3a97d323] + MPFR_jll v4.0.2+2
  [1914dd2f] + MacroTools v0.5.5
  [c03570c3] + Memoize v0.4.3
  [e1d29d7a] + Missings v0.4.3
  [78c3b35d] + Mocking v0.7.1
  [77ba4419] + NaNMath v0.3.4
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [bac558e1] + OrderedCollections v1.3.0
  [f27b6e38] + Polynomials v1.1.4
  [1fd47b50] + QuadGK v2.4.0
  [3cdcf5f2] + RecipesBase v1.0.2
  [189a3867] + Reexport v0.2.0
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [a25cea48] + SpecialPolynomials v0.1.1
  [2913bbd2] + StatsBase v0.33.0
  [f269a46b] + TimeZones v1.3.2
  [c751599d] + ToeplitzMatrices v0.6.0
  [02c8fc9c] + XML2_jll v2.9.10+1
  [83775a58] + Zlib_jll v1.2.11+15
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building TimeZones ─────→ `~/.julia/packages/TimeZones/v0mfN/deps/build.log`
   Building FFTW ──────────→ `~/.julia/packages/FFTW/kcXL6/deps/build.log`
   Building FastTransforms → `~/.julia/packages/FastTransforms/r40MO/deps/build.log`
    Testing SpecialPolynomials
Status `/tmp/jl_gFA2Tf/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.9.2
  [34004b35] HypergeometricFunctions v0.2.3
  [c03570c3] Memoize v0.4.3
  [f27b6e38] Polynomials v1.1.4
  [1fd47b50] QuadGK v2.4.0
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.1
  [37e2e46d] LinearAlgebra
  [8dfed614] Test
Status `/tmp/jl_gFA2Tf/Manifest.toml`
  [621f4979] AbstractFFTs v0.5.0
  [b99e7846] BinaryProvider v0.5.10
  [49dc2e85] Calculus v0.5.1
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [717857b8] DSP v0.6.7
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [fa6b7ba4] DualNumbers v0.6.2
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [7a1cc6ca] FFTW v1.2.2
  [f5851436] FFTW_jll v3.3.9+5
  [442a2c76] FastGaussQuadrature v0.4.2
  [057dd010] FastTransforms v0.9.2
  [34b6f7d7] FastTransforms_jll v0.3.3+0
  [781609d7] GMP_jll v6.2.0+1
  [34004b35] HypergeometricFunctions v0.2.3
  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+0
  [d8418881] Intervals v1.4.2
  [c8e1da08] IterTools v1.3.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [856f044c] MKL_jll v2020.1.216+0
  [3a97d323] MPFR_jll v4.0.2+2
  [1914dd2f] MacroTools v0.5.5
  [c03570c3] Memoize v0.4.3
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [77ba4419] NaNMath v0.3.4
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [bac558e1] OrderedCollections v1.3.0
  [f27b6e38] Polynomials v1.1.4
  [1fd47b50] QuadGK v2.4.0
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [a2af1166] SortingAlgorithms v0.3.1
  [276daf66] SpecialFunctions v0.10.3
  [a25cea48] SpecialPolynomials v0.1.1
  [2913bbd2] StatsBase v0.33.0
  [f269a46b] TimeZones v1.3.2
  [c751599d] ToeplitzMatrices v0.6.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain(#unused#::Type{Chebyshev}) at Chebyshev.jl:40
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{0.5,0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{0.25,0.75,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{-0.5,0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain(#unused#::Type{Jacobi{0.5,-0.5,T,N} where N where T}) at Jacobi.jl:31
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,3}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,4}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,5}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::Chebyshev{Float64,5}, g::Chebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,4}, g::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,4}, g::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,4}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,4}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,5}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,5}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,3}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,4}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,5}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::ChebyshevU{Float64,5}, g::ChebyshevU{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,3}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,4}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,5}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::Jacobi{0.5,0.5,Float64,5}, g::Jacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,3}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,4}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,5}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::Jacobi{0.25,0.75,Float64,5}, g::Jacobi{0.25,0.75,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,3}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,4}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,5}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::Jacobi{-0.5,0.5,Float64,5}, g::Jacobi{-0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,3}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,4}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,5}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::Jacobi{0.5,-0.5,Float64,5}, g::Jacobi{0.5,-0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,4}, g::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,4}, g::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,4}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,4}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,5}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,5}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,3}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,4}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,5}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::Legendre{Float64,5}, g::Legendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,4}, g::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,4}, g::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,4}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,4}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,5}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,5}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,3}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,4}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,5}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::Gegenbauer{0.5,Float64,5}, g::Gegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,4}, g::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,4}, g::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,4}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,4}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,5}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,5}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
ComposedFunction at ./operators.jl:884
unknown function (ip: 0x7f91339c9e51)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:351 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
Internal error: encountered unexpected error in runtime:
MethodError(f=typeof(Core.Compiler.:(==))(), args=(typeof(Polynomials.:(⟒))(), Tuple), world=0x000000000000100e)
jl_method_error_bare at /workspace/srcdir/src/gf.c:1742
jl_method_error at /workspace/srcdir/src/gf.c:1760
jl_lookup_generic_ at /workspace/srcdir/src/gf.c:2311
jl_apply_generic at /workspace/srcdir/src/gf.c:2332
apply_type_tfunc at ./compiler/tfuncs.jl:1131
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_apply at /workspace/srcdir/src/builtins.c:655
builtin_tfunction at ./compiler/tfuncs.jl:1471
abstract_call_builtin at ./compiler/abstractinterpretation.jl:794
jfptr_abstract_call_builtin_7578.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
abstract_call_known at ./compiler/abstractinterpretation.jl:924
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_edge at ./compiler/typeinfer.jl:536
abstract_call_method at ./compiler/abstractinterpretation.jl:465
abstract_call_gf_by_type at ./compiler/abstractinterpretation.jl:129
abstract_call_known at ./compiler/abstractinterpretation.jl:1003
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_apply at ./compiler/abstractinterpretation.jl:714
abstract_call_known at ./compiler/abstractinterpretation.jl:922
abstract_call at ./compiler/abstractinterpretation.jl:1026
abstract_call at ./compiler/abstractinterpretation.jl:1010
abstract_eval_statement at ./compiler/abstractinterpretation.jl:1132
typeinf_local at ./compiler/abstractinterpretation.jl:1388
typeinf_nocycle at ./compiler/abstractinterpretation.jl:1444
typeinf at ./compiler/typeinfer.jl:12
typeinf_ext at ./compiler/typeinfer.jl:623
typeinf_ext_toplevel at ./compiler/typeinfer.jl:656
typeinf_ext_toplevel at ./compiler/typeinfer.jl:652
jfptr_typeinf_ext_toplevel_10285.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
jl_type_infer at /workspace/srcdir/src/gf.c:300
jl_generate_fptr at /workspace/srcdir/src/jitlayers.cpp:301
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1890
jl_compile_method_internal at /workspace/srcdir/src/gf.c:1841 [inlined]
_jl_invoke at /workspace/srcdir/src/gf.c:2145 [inlined]
jl_apply_generic at /workspace/srcdir/src/gf.c:2336
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:347 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/Orthogonal.jl:328
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
eval_body at /workspace/srcdir/src/interpreter.c:491
eval_body at /workspace/srcdir/src/interpreter.c:491
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
macro expansion at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7 [inlined]
macro expansion at /workspace/srcdir/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1114 [inlined]
top-level scope at /home/pkgeval/.julia/packages/SpecialPolynomials/infPj/test/runtests.jl:7
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344 [inlined]
include_string at ./loading.jl:1103
_include at ./loading.jl:1157
include at ./client.jl:443
jl_apply at /workspace/srcdir/src/julia.h:1752 [inlined]
do_call at /workspace/srcdir/src/interpreter.c:117
eval_value at /workspace/srcdir/src/interpreter.c:206
eval_stmt_value at /workspace/srcdir/src/interpreter.c:157 [inlined]
eval_body at /workspace/srcdir/src/interpreter.c:551
jl_interpret_toplevel_thunk at /workspace/srcdir/src/interpreter.c:659
top-level scope at none:6
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:838
jl_toplevel_eval_flex at /workspace/srcdir/src/toplevel.c:788
jl_toplevel_eval_in at /workspace/srcdir/src/toplevel.c:881
eval at ./boot.jl:344
exec_options at ./client.jl:260
_start at ./client.jl:484
jfptr__start_24610.clone_1 at /opt/julia/lib/julia/sys.so (unknown line)
jl_apply at /workspace/srcdir/ui/../src/julia.h:1752 [inlined]
true_main at /workspace/srcdir/ui/repl.c:106
main at /workspace/srcdir/ui/repl.c:227
__libc_start_main at /lib/x86_64-linux-gnu/libc.so.6 (unknown line)
unknown function (ip: 0x4015e4)
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,1}, g::OrthonormalChebyshev{Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,1}, g::OrthonormalChebyshev{Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,2}, g::OrthonormalChebyshev{Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,2}, g::OrthonormalChebyshev{Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,3}, g::OrthonormalChebyshev{Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,4}, g::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,4}, g::OrthonormalChebyshev{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,5}, g::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,5}, g::OrthonormalChebyshev{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,6}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,6}, g::OrthonormalChebyshev{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,7}, g::OrthonormalChebyshev{Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,7}, g::OrthonormalChebyshev{Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,8}, g::OrthonormalChebyshev{Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,8}, g::OrthonormalChebyshev{Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,9}, g::OrthonormalChebyshev{Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,9}, g::OrthonormalChebyshev{Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,10}, g::OrthonormalChebyshev{Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,10}, g::OrthonormalChebyshev{Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,11}, g::OrthonormalChebyshev{Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::OrthonormalChebyshev{Float64,11}, g::OrthonormalChebyshev{Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,1}, g::OrthonormalJacobi{0.5,0.5,Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,1}, g::OrthonormalJacobi{0.5,0.5,Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,2}, g::OrthonormalJacobi{0.5,0.5,Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,2}, g::OrthonormalJacobi{0.5,0.5,Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,3}, g::OrthonormalJacobi{0.5,0.5,Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,4}, g::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,4}, g::OrthonormalJacobi{0.5,0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,5}, g::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,5}, g::OrthonormalJacobi{0.5,0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,6}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,6}, g::OrthonormalJacobi{0.5,0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,7}, g::OrthonormalJacobi{0.5,0.5,Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,7}, g::OrthonormalJacobi{0.5,0.5,Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,8}, g::OrthonormalJacobi{0.5,0.5,Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,8}, g::OrthonormalJacobi{0.5,0.5,Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,9}, g::OrthonormalJacobi{0.5,0.5,Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,9}, g::OrthonormalJacobi{0.5,0.5,Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,10}, g::OrthonormalJacobi{0.5,0.5,Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,10}, g::OrthonormalJacobi{0.5,0.5,Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,11}, g::OrthonormalJacobi{0.5,0.5,Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::OrthonormalJacobi{0.5,0.5,Float64,11}, g::OrthonormalJacobi{0.5,0.5,Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,1}, g::OrthonormalLegendre{Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,1}, g::OrthonormalLegendre{Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,2}, g::OrthonormalLegendre{Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,2}, g::OrthonormalLegendre{Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,3}, g::OrthonormalLegendre{Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,4}, g::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,4}, g::OrthonormalLegendre{Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,5}, g::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,5}, g::OrthonormalLegendre{Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,6}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,6}, g::OrthonormalLegendre{Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,7}, g::OrthonormalLegendre{Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,7}, g::OrthonormalLegendre{Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,8}, g::OrthonormalLegendre{Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,8}, g::OrthonormalLegendre{Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,9}, g::OrthonormalLegendre{Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,9}, g::OrthonormalLegendre{Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,10}, g::OrthonormalLegendre{Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,10}, g::OrthonormalLegendre{Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,11}, g::OrthonormalLegendre{Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::OrthonormalLegendre{Float64,11}, g::OrthonormalLegendre{Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::typeof(one), g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,1}, g::OrthonormalGegenbauer{0.5,Float64,1}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,1}, g::OrthonormalGegenbauer{0.5,Float64,1}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,2}, g::OrthonormalGegenbauer{0.5,Float64,2}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,2}, g::OrthonormalGegenbauer{0.5,Float64,2}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,3}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,3}, g::OrthonormalGegenbauer{0.5,Float64,3}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,4}, g::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,4}, g::OrthonormalGegenbauer{0.5,Float64,4}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,5}, g::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,5}, g::OrthonormalGegenbauer{0.5,Float64,5}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,6}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,6}, g::OrthonormalGegenbauer{0.5,Float64,6}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,7}, g::OrthonormalGegenbauer{0.5,Float64,7}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,7}, g::OrthonormalGegenbauer{0.5,Float64,7}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,8}, g::OrthonormalGegenbauer{0.5,Float64,8}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,8}, g::OrthonormalGegenbauer{0.5,Float64,8}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,9}, g::OrthonormalGegenbauer{0.5,Float64,9}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,9}, g::OrthonormalGegenbauer{0.5,Float64,9}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,10}, g::OrthonormalGegenbauer{0.5,Float64,10}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,10}, g::OrthonormalGegenbauer{0.5,Float64,10}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,11}, g::OrthonormalGegenbauer{0.5,Float64,11}; atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::OrthonormalGegenbauer{0.5,Float64,11}, g::OrthonormalGegenbauer{0.5,Float64,11}; atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Chebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, false)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Open}(f, l)` instead.
│   caller = domain at Chebyshev.jl:40 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Chebyshev.jl:40
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalChebyshev}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{ChebyshevU}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.25,0.75,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, false)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Open}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{-0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, false, true)` is deprecated, use `Interval{T,Intervals.Open,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Jacobi{0.5,-0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `Interval(f, l, true, true)` is deprecated, use `Interval{T,Intervals.Closed,Intervals.Closed}(f, l)` instead.
│   caller = domain at Jacobi.jl:31 [inlined]
└ @ Core ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/Jacobi.jl:31
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalJacobi{0.5,0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Legendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalLegendre}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{Gegenbauer{0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:290
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:290
┌ Warning: `inclusivity(interval)` is deprecated and has no direct replacement. See `bounds_types(interval)` for similar functionality.
│   caller = innerproduct(P::Type{OrthonormalGegenbauer{0.5,T,N} where N where T}, f::var"#f#29", g::typeof(one); atol::Float64) at orthogonal.jl:293
└ @ SpecialPolynomials ~/.julia/packages/SpecialPolynomials/infPj/src/Orthogonal/orthogonal.jl:293
Test Summary: | Pass  Total
Orthogonal    | 6268   6268
Test Summary:                  | Pass  Total
Orthogonal compare with tables |  649    649
Test Summary: | Pass  Total
Lagrange      |   15     15
Test Summary: | Pass  Total
Newton        |   11     11
Test Summary: | Pass  Total
Bernstein     |  168    168
    Testing SpecialPolynomials tests passed 
