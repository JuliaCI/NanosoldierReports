Julia Version 1.6.0-DEV.620
Commit 102c9ac37d (2020-08-11 16:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ───────────────────── v0.4.3
  Installed PrettyPrint ────────────────── v0.2.0
  Installed ArrayInterface ─────────────── v2.11.0
  Installed NameResolution ─────────────── v0.1.4
  Installed QuadGK ─────────────────────── v2.4.0
  Installed DiffEqBayes ────────────────── v2.16.0
  Installed StaticArrays ───────────────── v0.12.4
  Installed ZygoteRules ────────────────── v0.2.0
  Installed LabelledArrays ─────────────── v1.3.0
  Installed UnPack ─────────────────────── v1.0.1
  Installed AdvancedMH ─────────────────── v0.5.1
  Installed TransformVariables ─────────── v0.3.8
  Installed DynamicHMC ─────────────────── v2.1.0
  Installed AbstractAlgebra ────────────── v0.9.2
  Installed Turing ─────────────────────── v0.13.0
  Installed FunctionWrappers ───────────── v1.1.1
  Installed Bijectors ──────────────────── v0.7.2
  Installed ConstructionBase ───────────── v1.0.0
  Installed ProgressMeter ──────────────── v1.3.2
  Installed NNlib ──────────────────────── v0.6.6
  Installed AbstractTrees ──────────────── v0.3.3
  Installed CpuId ──────────────────────── v0.2.2
  Installed DataStructures ─────────────── v0.17.20
  Installed AbstractMCMC ───────────────── v1.0.1
  Installed AdvancedHMC ────────────────── v0.2.25
  Installed RangeArrays ────────────────── v0.3.2
  Installed FiniteDiff ─────────────────── v2.5.2
  Installed CanonicalTraits ────────────── v0.2.2
  Installed PositiveFactorizations ─────── v0.2.3
  Installed Inflate ────────────────────── v0.1.2
  Installed DocStringExtensions ────────── v0.8.2
  Installed Latexify ───────────────────── v0.13.5
  Installed DataValueInterfaces ────────── v1.0.0
  Installed FillArrays ─────────────────── v0.8.14
  Installed JuliaVariables ─────────────── v0.2.3
  Installed ForwardDiff ────────────────── v0.10.12
  Installed DiffResults ────────────────── v1.0.2
  Installed LeftChildRightSiblingTrees ─── v0.1.2
  Installed DynamicPPL ─────────────────── v0.8.2
  Installed StatsBase ──────────────────── v0.33.0
  Installed MacroTools ─────────────────── v0.5.5
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed Parsers ────────────────────── v1.0.10
  Installed Rmath ──────────────────────── v0.6.1
  Installed LoggingExtras ──────────────── v0.4.2
  Installed Requires ───────────────────── v1.0.1
  Installed IterativeSolvers ───────────── v0.8.4
  Installed StructArrays ───────────────── v0.4.4
  Installed Parameters ─────────────────── v0.12.1
  Installed TerminalLoggers ────────────── v0.1.2
  Installed RecursiveArrayTools ────────── v2.6.0
  Installed PDMats ─────────────────────── v0.9.12
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed BenchmarkTools ─────────────── v0.5.0
  Installed DistributionsAD ────────────── v0.5.3
  Installed IntervalSets ───────────────── v0.5.1
  Installed RecursiveFactorization ─────── v0.1.4
  Installed OpenBLAS_jll ───────────────── v0.3.9+5
  Installed SafeTestsets ───────────────── v0.0.1
  Installed ArgCheck ───────────────────── v2.1.0
  Installed OffsetArrays ───────────────── v1.1.2
  Installed SortingAlgorithms ──────────── v0.3.1
  Installed DiffEqJump ─────────────────── v6.9.4
  Installed LaTeXStrings ───────────────── v1.1.0
  Installed SpecialFunctions ───────────── v0.10.3
  Installed DiffRules ──────────────────── v1.0.1
  Installed VectorizationBase ──────────── v0.12.31
  Installed TreeViews ──────────────────── v0.3.0
  Installed PoissonRandom ──────────────── v0.4.0
  Installed ArnoldiMethod ──────────────── v0.0.4
  Installed Adapt ──────────────────────── v2.0.2
  Installed ApproxBayes ────────────────── v0.3.2
  Installed Tables ─────────────────────── v1.0.5
  Installed EllipticalSliceSampling ────── v0.2.2
  Installed TimerOutputs ───────────────── v0.5.6
  Installed GeneralizedGenerated ───────── v0.2.5
  Installed Reexport ───────────────────── v0.2.0
  Installed Rmath_jll ──────────────────── v0.2.2+1
  Installed Formatting ─────────────────── v0.4.1
  Installed MLStyle ────────────────────── v0.4.5
  Installed RandomNumbers ──────────────── v1.4.0
  Installed InvertedIndices ────────────── v1.0.0
  Installed Tracker ────────────────────── v0.2.10
  Installed MappedArrays ───────────────── v0.2.2
  Installed TableTraits ────────────────── v1.0.0
  Installed StatsFuns ──────────────────── v0.9.5
  Installed NLSolversBase ──────────────── v7.6.3
  Installed ChainRulesCore ─────────────── v0.9.5
  Installed DiffEqBase ─────────────────── v6.42.0
  Installed Distributions ──────────────── v0.23.2
  Installed Optim ──────────────────────── v0.22.0
  Installed LightGraphs ────────────────── v1.3.3
  Installed MuladdMacro ────────────────── v0.2.2
  Installed Combinatorics ──────────────── v1.0.2
  Installed IteratorInterfaceExtensions ── v1.0.0
  Installed Arpack ─────────────────────── v0.4.0
  Installed IterTools ──────────────────── v1.3.0
  Installed LogDensityProblems ─────────── v0.9.1
  Installed BinaryProvider ─────────────── v0.5.10
  Installed JSON ───────────────────────── v0.21.0
  Installed InplaceOps ─────────────────── v0.3.0
  Installed Libtask ────────────────────── v0.4.1
  Installed EllipsisNotation ───────────── v0.4.0
  Installed Distances ──────────────────── v0.8.2
  Installed RecipesBase ────────────────── v1.0.2
  Installed SymbolicUtils ──────────────── v0.4.3
  Installed AxisArrays ─────────────────── v0.4.3
  Installed NaNMath ────────────────────── v0.3.4
  Installed Arpack_jll ─────────────────── v3.5.0+3
  Installed ModelingToolkit ────────────── v3.15.0
  Installed SIMDPirates ────────────────── v0.8.24
  Installed DataAPI ────────────────────── v1.3.0
  Installed SimpleTraits ───────────────── v0.9.2
  Installed CommonSubexpressions ───────── v0.3.0
  Installed OrderedCollections ─────────── v1.3.0
  Installed NamedArrays ────────────────── v0.9.4
  Installed ProgressLogging ────────────── v0.1.3
  Installed MCMCChains ─────────────────── v3.0.12
  Installed Compat ─────────────────────── v3.13.0
  Installed ConsoleProgressMonitor ─────── v0.1.2
  Installed Unitful ────────────────────── v1.4.0
  Installed LineSearches ───────────────── v7.0.1
  Installed Roots ──────────────────────── v1.0.5
  Installed LoopVectorization ──────────── v0.8.23
  Installed SLEEFPirates ───────────────── v0.5.5
Updating `~/.julia/environments/v1.6/Project.toml`
  [ebbdde9d] + DiffEqBayes v2.16.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [c3fe647b] + AbstractAlgebra v0.9.2
  [80f14c24] + AbstractMCMC v1.0.1
  [1520ce14] + AbstractTrees v0.3.3
  [79e6a3ab] + Adapt v2.0.2
  [0bf59076] + AdvancedHMC v0.2.25
  [5b7e9947] + AdvancedMH v0.5.1
  [f5f396d3] + ApproxBayes v0.3.2
  [dce04be8] + ArgCheck v2.1.0
  [ec485272] + ArnoldiMethod v0.0.4
  [7d9fca2a] + Arpack v0.4.0
  [68821587] + Arpack_jll v3.5.0+3
  [4fba245c] + ArrayInterface v2.11.0
  [39de3d68] + AxisArrays v0.4.3
  [6e4b80f9] + BenchmarkTools v0.5.0
  [76274a88] + Bijectors v0.7.2
  [b99e7846] + BinaryProvider v0.5.10
  [a603d957] + CanonicalTraits v0.2.2
  [d360d2e6] + ChainRulesCore v0.9.5
  [861a8166] + Combinatorics v1.0.2
  [bbf7d656] + CommonSubexpressions v0.3.0
  [34da2185] + Compat v3.13.0
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] + ConsoleProgressMonitor v0.1.2
  [187b0558] + ConstructionBase v1.0.0
  [adafc99b] + CpuId v0.2.2
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [e2d170a0] + DataValueInterfaces v1.0.0
  [2b5f629d] + DiffEqBase v6.42.0
  [ebbdde9d] + DiffEqBayes v2.16.0
  [c894b116] + DiffEqJump v6.9.4
  [163ba53b] + DiffResults v1.0.2
  [b552c78f] + DiffRules v1.0.1
  [b4f34e82] + Distances v0.8.2
  [31c24e10] + Distributions v0.23.2
  [ced4e74d] + DistributionsAD v0.5.3
  [ffbed154] + DocStringExtensions v0.8.2
  [bbc10e6e] + DynamicHMC v2.1.0
  [366bfd00] + DynamicPPL v0.8.2
  [da5c29d0] + EllipsisNotation v0.4.0
  [cad2338a] + EllipticalSliceSampling v0.2.2
  [1a297f60] + FillArrays v0.8.14
  [6a86dc24] + FiniteDiff v2.5.2
  [59287772] + Formatting v0.4.1
  [f6369f11] + ForwardDiff v0.10.12
  [069b7b12] + FunctionWrappers v1.1.1
  [6b9d7cbe] + GeneralizedGenerated v0.2.5
  [d25df0c9] + Inflate v0.1.2
  [505f98c9] + InplaceOps v0.3.0
  [8197267c] + IntervalSets v0.5.1
  [41ab1584] + InvertedIndices v1.0.0
  [c8e1da08] + IterTools v1.3.0
  [42fd0dbc] + IterativeSolvers v0.8.4
  [82899510] + IteratorInterfaceExtensions v1.0.0
  [682c06a0] + JSON v0.21.0
  [b14d175d] + JuliaVariables v0.2.3
  [b964fa9f] + LaTeXStrings v1.1.0
  [2ee39098] + LabelledArrays v1.3.0
  [23fbe1c1] + Latexify v0.13.5
  [1d6d02ad] + LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] + Libtask v0.4.1
  [093fc24a] + LightGraphs v1.3.3
  [d3d80556] + LineSearches v7.0.1
  [6fdf6af0] + LogDensityProblems v0.9.1
  [e6f89c97] + LoggingExtras v0.4.2
  [bdcacae8] + LoopVectorization v0.8.23
  [c7f686f2] + MCMCChains v3.0.12
  [d8e11817] + MLStyle v0.4.5
  [1914dd2f] + MacroTools v0.5.5
  [dbb5928d] + MappedArrays v0.2.2
  [e1d29d7a] + Missings v0.4.3
  [961ee093] + ModelingToolkit v3.15.0
  [46d2c3a1] + MuladdMacro v0.2.2
  [d41bc354] + NLSolversBase v7.6.3
  [872c559c] + NNlib v0.6.6
  [77ba4419] + NaNMath v0.3.4
  [71a1bf82] + NameResolution v0.1.4
  [86f7a689] + NamedArrays v0.9.4
  [6fe1bfb0] + OffsetArrays v1.1.2
  [4536629a] + OpenBLAS_jll v0.3.9+5
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [429524aa] + Optim v0.22.0
  [bac558e1] + OrderedCollections v1.3.0
  [90014a1f] + PDMats v0.9.12
  [d96e819e] + Parameters v0.12.1
  [69de0a69] + Parsers v1.0.10
  [e409e4f3] + PoissonRandom v0.4.0
  [85a6dd25] + PositiveFactorizations v0.2.3
  [8162dcfd] + PrettyPrint v0.2.0
  [33c8b6b6] + ProgressLogging v0.1.3
  [92933f4c] + ProgressMeter v1.3.2
  [1fd47b50] + QuadGK v2.4.0
  [e6cf234a] + RandomNumbers v1.4.0
  [b3c3ace0] + RangeArrays v0.3.2
  [3cdcf5f2] + RecipesBase v1.0.2
  [731186ca] + RecursiveArrayTools v2.6.0
  [f2c3362d] + RecursiveFactorization v0.1.4
  [189a3867] + Reexport v0.2.0
  [ae029012] + Requires v1.0.1
  [79098fc4] + Rmath v0.6.1
  [f50d1b31] + Rmath_jll v0.2.2+1
  [f2b01f46] + Roots v1.0.5
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [1bc83da4] + SafeTestsets v0.0.1
  [699a6c99] + SimpleTraits v0.9.2
  [a2af1166] + SortingAlgorithms v0.3.1
  [276daf66] + SpecialFunctions v0.10.3
  [90137ffa] + StaticArrays v0.12.4
  [2913bbd2] + StatsBase v0.33.0
  [4c63d2b9] + StatsFuns v0.9.5
  [09ab397b] + StructArrays v0.4.4
  [d1185830] + SymbolicUtils v0.4.3
  [3783bdb8] + TableTraits v1.0.0
  [bd369af6] + Tables v1.0.5
  [5d786b92] + TerminalLoggers v0.1.2
  [a759f4b9] + TimerOutputs v0.5.6
  [9f7883ad] + Tracker v0.2.10
  [84d833dd] + TransformVariables v0.3.8
  [a2a6695c] + TreeViews v0.3.0
  [fce5fe82] + Turing v0.13.0
  [3a884ed6] + UnPack v1.0.1
  [1986cc42] + Unitful v1.4.0
  [3d5dd08c] + VectorizationBase v0.12.31
  [700de1a5] + ZygoteRules v0.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [4607b0f0] + SuiteSparse
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building NNlib ───────→ `~/.julia/packages/NNlib/FAI3o/deps/build.log`
   Building Libtask ─────→ `~/.julia/packages/Libtask/Zo6uM/deps/build.log`
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing DiffEqBayes
Status `/tmp/jl_G9NIBP/Project.toml`
  [f5f396d3] ApproxBayes v0.3.2
  [2b5f629d] DiffEqBase v6.42.0
  [ebbdde9d] DiffEqBayes v2.16.0
  [163ba53b] DiffResults v1.0.2
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [f6369f11] ForwardDiff v0.10.12
  [2ee39098] LabelledArrays v1.3.0
  [6fdf6af0] LogDensityProblems v0.9.1
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.15.0
  [429524aa] Optim v0.22.0
  [1dea7af3] OrdinaryDiffEq v5.42.2
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.4.0
  [d96e819e] Parameters v0.12.1
  [731186ca] RecursiveArrayTools v2.6.0
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [1bc83da4] SafeTestsets v0.0.1
  [2913bbd2] StatsBase v0.33.0
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [84d833dd] TransformVariables v0.3.8
  [fce5fe82] Turing v0.13.0
  [8ba89e20] Distributed
  [37e2e46d] LinearAlgebra
  [44cfe95a] Pkg
  [9a3f8284] Random
  [8dfed614] Test
Status `/tmp/jl_G9NIBP/Manifest.toml`
  [c3fe647b] AbstractAlgebra v0.9.2
  [80f14c24] AbstractMCMC v1.0.1
  [1520ce14] AbstractTrees v0.3.3
  [79e6a3ab] Adapt v2.0.2
  [0bf59076] AdvancedHMC v0.2.25
  [5b7e9947] AdvancedMH v0.5.1
  [f5f396d3] ApproxBayes v0.3.2
  [dce04be8] ArgCheck v2.1.0
  [ec485272] ArnoldiMethod v0.0.4
  [7d9fca2a] Arpack v0.4.0
  [68821587] Arpack_jll v3.5.0+3
  [4fba245c] ArrayInterface v2.11.0
  [39de3d68] AxisArrays v0.4.3
  [6e4b80f9] BenchmarkTools v0.5.0
  [76274a88] Bijectors v0.7.2
  [b99e7846] BinaryProvider v0.5.10
  [a603d957] CanonicalTraits v0.2.2
  [d360d2e6] ChainRulesCore v0.9.5
  [861a8166] Combinatorics v1.0.2
  [bbf7d656] CommonSubexpressions v0.3.0
  [34da2185] Compat v3.13.0
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [88cd18e8] ConsoleProgressMonitor v0.1.2
  [187b0558] ConstructionBase v1.0.0
  [adafc99b] CpuId v0.2.2
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [2b5f629d] DiffEqBase v6.42.0
  [ebbdde9d] DiffEqBayes v2.16.0
  [459566f4] DiffEqCallbacks v2.13.5
  [c894b116] DiffEqJump v6.9.4
  [163ba53b] DiffResults v1.0.2
  [b552c78f] DiffRules v1.0.1
  [b4f34e82] Distances v0.8.2
  [31c24e10] Distributions v0.23.2
  [ced4e74d] DistributionsAD v0.5.3
  [ffbed154] DocStringExtensions v0.8.2
  [bbc10e6e] DynamicHMC v2.1.0
  [366bfd00] DynamicPPL v0.8.2
  [da5c29d0] EllipsisNotation v0.4.0
  [cad2338a] EllipticalSliceSampling v0.2.2
  [d4d017d3] ExponentialUtilities v1.7.0
  [9aa1b823] FastClosures v0.3.2
  [1a297f60] FillArrays v0.8.14
  [6a86dc24] FiniteDiff v2.5.2
  [59287772] Formatting v0.4.1
  [f6369f11] ForwardDiff v0.10.12
  [069b7b12] FunctionWrappers v1.1.1
  [6b9d7cbe] GeneralizedGenerated v0.2.5
  [01680d73] GenericSVD v0.3.0
  [d25df0c9] Inflate v0.1.2
  [505f98c9] InplaceOps v0.3.0
  [8197267c] IntervalSets v0.5.1
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [42fd0dbc] IterativeSolvers v0.8.4
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [b14d175d] JuliaVariables v0.2.3
  [b964fa9f] LaTeXStrings v1.1.0
  [2ee39098] LabelledArrays v1.3.0
  [23fbe1c1] Latexify v0.13.5
  [1d6d02ad] LeftChildRightSiblingTrees v0.1.2
  [6f1fad26] Libtask v0.4.1
  [093fc24a] LightGraphs v1.3.3
  [d3d80556] LineSearches v7.0.1
  [6fdf6af0] LogDensityProblems v0.9.1
  [e6f89c97] LoggingExtras v0.4.2
  [bdcacae8] LoopVectorization v0.8.23
  [c7f686f2] MCMCChains v3.0.12
  [d8e11817] MLStyle v0.4.5
  [1914dd2f] MacroTools v0.5.5
  [dbb5928d] MappedArrays v0.2.2
  [e1d29d7a] Missings v0.4.3
  [961ee093] ModelingToolkit v3.15.0
  [46d2c3a1] MuladdMacro v0.2.2
  [d41bc354] NLSolversBase v7.6.3
  [2774e3e8] NLsolve v4.4.0
  [872c559c] NNlib v0.6.6
  [77ba4419] NaNMath v0.3.4
  [71a1bf82] NameResolution v0.1.4
  [86f7a689] NamedArrays v0.9.4
  [6fe1bfb0] OffsetArrays v1.1.2
  [4536629a] OpenBLAS_jll v0.3.9+5
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [429524aa] Optim v0.22.0
  [bac558e1] OrderedCollections v1.3.0
  [1dea7af3] OrdinaryDiffEq v5.42.2
  [90014a1f] PDMats v0.9.12
  [65888b18] ParameterizedFunctions v5.4.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [e409e4f3] PoissonRandom v0.4.0
  [85a6dd25] PositiveFactorizations v0.2.3
  [8162dcfd] PrettyPrint v0.2.0
  [33c8b6b6] ProgressLogging v0.1.3
  [92933f4c] ProgressMeter v1.3.2
  [1fd47b50] QuadGK v2.4.0
  [e6cf234a] RandomNumbers v1.4.0
  [b3c3ace0] RangeArrays v0.3.2
  [3cdcf5f2] RecipesBase v1.0.2
  [731186ca] RecursiveArrayTools v2.6.0
  [f2c3362d] RecursiveFactorization v0.1.4
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [79098fc4] Rmath v0.6.1
  [f50d1b31] Rmath_jll v0.2.2+1
  [f2b01f46] Roots v1.0.5
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [1bc83da4] SafeTestsets v0.0.1
  [699a6c99] SimpleTraits v0.9.2
  [a2af1166] SortingAlgorithms v0.3.1
  [47a9eef4] SparseDiffTools v1.9.1
  [276daf66] SpecialFunctions v0.10.3
  [90137ffa] StaticArrays v0.12.4
  [2913bbd2] StatsBase v0.33.0
  [4c63d2b9] StatsFuns v0.9.5
  [9672c7b4] SteadyStateDiffEq v1.5.1
  [09ab397b] StructArrays v0.4.4
  [d1185830] SymbolicUtils v0.4.3
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [5d786b92] TerminalLoggers v0.1.2
  [a759f4b9] TimerOutputs v0.5.6
  [9f7883ad] Tracker v0.2.10
  [84d833dd] TransformVariables v0.3.8
  [a2a6695c] TreeViews v0.3.0
  [fce5fe82] Turing v0.13.0
  [3a884ed6] UnPack v1.0.1
  [1986cc42] Unitful v1.4.0
  [3d5dd08c] VectorizationBase v0.12.31
  [19fa3120] VertexSafeGraphs v0.1.2
  [700de1a5] ZygoteRules v0.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [4607b0f0] SuiteSparse
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.1
│   estimated_seconds_left = 7.6
└   ϵ = 0.000244
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.1
│   estimated_seconds_left = 2.4
└   ϵ = 0.000194
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03046058815481363, 0.09332546606242187, 0.06811120379566739]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.096
│   estimated_seconds_left = 4.7
└   ϵ = 0.000125
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.05938600012426619, 0.21848978354435797, 0.18779449221117334]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.048
│   estimated_seconds_left = 4.7
└   ϵ = 0.00599
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.03893203323562712, 0.3225687168774353, 0.17410707915126522]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00042
│   estimated_seconds_left = 0.084
└   ϵ = 0.00356
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.089
│   estimated_seconds_left = 8.9
└   ϵ = 0.00559
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.033480687507830655, 0.24359250685987155, 0.21174750557342276]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.13
│   estimated_seconds_left = 52.0
└   ϵ = 0.00486
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.075
│   estimated_seconds_left = 22.0
└   ϵ = 0.00349
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.098
│   estimated_seconds_left = 20.0
└   ϵ = 0.00603
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.071
│   estimated_seconds_left = 7.0
└   ϵ = 0.00558
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.02471943496485734, 0.22109202658990065, 0.2600664950693523]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0089
│   estimated_seconds_left = 0.44
└   ϵ = 0.00604
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.027
└   estimated_seconds_left = 27.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.067
└   estimated_seconds_left = 60.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.069
└   estimated_seconds_left = 55.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.062
└   estimated_seconds_left = 44.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.069
└   estimated_seconds_left = 41.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.076
└   estimated_seconds_left = 38.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.077
└   estimated_seconds_left = 31.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.073
└   estimated_seconds_left = 22.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.068
└   estimated_seconds_left = 14.0
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.073
└   estimated_seconds_left = 7.2
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000183
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.12
│   estimated_seconds_left = 9.1
└   ϵ = 0.000183
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0034
│   estimated_seconds_left = 0.081
└   ϵ = 0.000161
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014184722329653652, 0.014821846850215006, 0.01414814537500761, 0.08668078933477938, 0.11446490506252549]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.14
│   estimated_seconds_left = 6.9
└   ϵ = 0.000141
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010220235072892658, 0.010661177246656977, 0.010019550963588544, 0.21675222516862555, 0.2750687779024049]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.028
│   estimated_seconds_left = 2.7
└   ϵ = 0.0114
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0072964873843764265, 0.007769802853381128, 0.007094152204885721, 0.2914442210896594, 0.2964144548305775]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.023
│   estimated_seconds_left = 4.6
└   ϵ = 0.0159
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.028
│   estimated_seconds_left = 2.8
└   ϵ = 0.0256
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005268799249360376, 0.006024916223761423, 0.005023618085260291, 0.2656987360670605, 0.31887997791392236]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.007
│   estimated_seconds_left = 2.8
└   ϵ = 0.0278
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.017
│   estimated_seconds_left = 5.0
└   ϵ = 0.05
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.013
│   estimated_seconds_left = 2.7
└   ϵ = 0.0284
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.014
│   estimated_seconds_left = 1.4
└   ϵ = 0.0573
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.004086283962706626, 0.005201318625402612, 0.0035898202531467055, 0.31343343243506927, 0.29047290625536615]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0078
│   estimated_seconds_left = 0.38
└   ϵ = 0.0416
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.004
└   estimated_seconds_left = 4.0
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.02
└   estimated_seconds_left = 18.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.019
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.017
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.021
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.016
└   estimated_seconds_left = 8.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.019
└   estimated_seconds_left = 7.6
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.017
└   estimated_seconds_left = 5.0
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.018
└   estimated_seconds_left = 3.7
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.017
└   estimated_seconds_left = 1.7
[ Info: finding initial optimum
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.57
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0053
│   estimated_seconds_left = 0.39
└   ϵ = 0.57
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0027
│   estimated_seconds_left = 0.064
└   ϵ = 0.049
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.16653938559262427, 0.49857657850718734]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0017
│   estimated_seconds_left = 0.085
└   ϵ = 0.00592
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.18762968009472983, 0.8178407831365957]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.047
│   estimated_seconds_left = 4.7
└   ϵ = 0.00143
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.026492625660963186, 0.1654431988946909]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.11
│   estimated_seconds_left = 22.0
└   ϵ = 0.000954
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.034
│   estimated_seconds_left = 3.4
└   ϵ = 0.0044
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.024548275136922523, 0.21818273690016138]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.019
│   estimated_seconds_left = 7.6
└   ϵ = 0.00874
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.028
│   estimated_seconds_left = 8.5
└   ϵ = 0.00427
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.025
│   estimated_seconds_left = 5.0
└   ϵ = 0.0124
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.024
│   estimated_seconds_left = 2.3
└   ϵ = 0.00836
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.025778269463940254, 0.3250400779983982]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0056
│   estimated_seconds_left = 0.27
└   ϵ = 0.0125
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00034
└   estimated_seconds_left = 0.34
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.023
└   estimated_seconds_left = 21.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.02
└   estimated_seconds_left = 16.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.027
└   estimated_seconds_left = 19.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.022
└   estimated_seconds_left = 13.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.024
└   estimated_seconds_left = 12.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.022
└   estimated_seconds_left = 8.8
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.021
└   estimated_seconds_left = 6.1
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.019
└   estimated_seconds_left = 3.9
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.025
└   estimated_seconds_left = 2.5
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.006
│   estimated_seconds_left = 0.45
└   ϵ = 0.000488
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.056
│   estimated_seconds_left = 1.3
└   ϵ = 0.000184
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.01416695884257402, 0.014145427541244267, 0.035903750242962724]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0088
│   estimated_seconds_left = 0.43
└   ϵ = 0.000141
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.010030026019229664, 0.010004872289834654, 0.15252498123523706]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0021
│   estimated_seconds_left = 0.21
└   ϵ = 0.0152
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0071384867808248756, 0.007078486029911496, 0.24554931906880959]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0074
│   estimated_seconds_left = 1.5
└   ϵ = 0.0216
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0055
│   estimated_seconds_left = 0.54
└   ϵ = 0.0234
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005081472146174362, 0.005012435281510845, 0.2775890197929428]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00039
│   estimated_seconds_left = 0.16
└   ϵ = 0.0295
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0041
│   estimated_seconds_left = 1.2
└   ϵ = 0.0474
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0025
│   estimated_seconds_left = 0.49
└   ϵ = 0.0455
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.002
│   estimated_seconds_left = 0.2
└   ϵ = 0.0605
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.003630276381455438, 0.0035493082064879476, 0.25352047565533586]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.00061
│   estimated_seconds_left = 0.03
└   ϵ = 0.0505
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0097
└   estimated_seconds_left = 9.7
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.0033
└   estimated_seconds_left = 2.9
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.0025
└   estimated_seconds_left = 2.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.0028
└   estimated_seconds_left = 2.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.0028
└   estimated_seconds_left = 1.7
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.0031
└   estimated_seconds_left = 1.6
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.0025
└   estimated_seconds_left = 0.99
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.003
└   estimated_seconds_left = 0.91
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.0034
└   estimated_seconds_left = 0.67
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.0042
└   estimated_seconds_left = 0.42
┌ Warning: Assignment to `bayesian_result` in soft scope is ambiguous because a global variable by the same name exists: `bayesian_result` will be treated as a new local. Disambiguate by using `local bayesian_result` to suppress this warning or `global bayesian_result` to assign to the existing global variable.
└ @ ~/.julia/packages/DiffEqBayes/cBMiN/test/dynamicHMC.jl:66
[ Info: finding initial optimum
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: Automatic dt set the starting dt as NaN, causing instability.
└ @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/C72aU/src/solve.jl:459
┌ Warning: NaN dt detected. Likely a NaN value in the state, parameters, or derivative value caused this outcome.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:323
┌ Warning: dt <= dtmin. Aborting. There is either an error in your model specification or the true solution is unstable.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:343
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Info: found initial stepsize
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 75
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.016
│   estimated_seconds_left = 1.2
└   ϵ = 0.000366
┌ Info: Starting MCMC
│   total_steps = 25
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.17
│   estimated_seconds_left = 4.0
└   ϵ = 7.97e-5
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.014165985351111243, 0.014211381027791188, 0.014203904442345597, 0.01420445769598848, 0.10974166499470887, 0.05006291441997823]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.17
│   estimated_seconds_left = 8.4
└   ϵ = 0.000126
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.01010074928751018, 0.010182356172162501, 0.010201150264222403, 0.010271107277808115, 0.18749734579785796, 0.1881234011343636]
┌ Info: Starting MCMC
│   total_steps = 100
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.13
│   estimated_seconds_left = 13.0
└   ϵ = 0.0071
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.007181744745554194, 0.007406009318050245, 0.0072784868701832, 0.007403464781242517, 0.1970766480119583, 0.243384506075977]
┌ Info: Starting MCMC
│   total_steps = 200
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.042
│   estimated_seconds_left = 8.5
└   ϵ = 0.0127
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.11
│   estimated_seconds_left = 11.0
└   ϵ = 0.0365
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.005121077733290373, 0.00530127061182133, 0.00524073884177165, 0.005295258041084927, 0.23954264192896416, 0.23555932942391558]
┌ Info: Starting MCMC
│   total_steps = 400
└   tuning = "stepsize and LinearAlgebra.Diagonal metric"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.029
│   estimated_seconds_left = 12.0
└   ϵ = 0.0158
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.062
│   estimated_seconds_left = 19.0
└   ϵ = 0.0151
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.039
│   estimated_seconds_left = 7.9
└   ϵ = 0.0363
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.038
│   estimated_seconds_left = 3.7
└   ϵ = 0.0301
┌ Info: adaptation finished
└   adapted_kinetic_energy = Gaussian kinetic energy (typename(LinearAlgebra.Diagonal)), √diag(M⁻¹): [0.0037177481074612277, 0.003960976382123377, 0.0039141443281648335, 0.004002617375109472, 0.27385460346195856, 0.22864987995077024]
┌ Info: Starting MCMC
│   total_steps = 50
└   tuning = "stepsize"
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0054
│   estimated_seconds_left = 0.26
└   ϵ = 0.0298
┌ Info: Starting MCMC
└   total_steps = 1000
┌ Info: MCMC progress
│   step = 1
│   seconds_per_step = 0.0076
└   estimated_seconds_left = 7.6
┌ Info: MCMC progress
│   step = 101
│   seconds_per_step = 0.03
└   estimated_seconds_left = 27.0
┌ Info: MCMC progress
│   step = 201
│   seconds_per_step = 0.033
└   estimated_seconds_left = 26.0
┌ Info: MCMC progress
│   step = 301
│   seconds_per_step = 0.028
└   estimated_seconds_left = 20.0
┌ Info: MCMC progress
│   step = 401
│   seconds_per_step = 0.029
└   estimated_seconds_left = 17.0
┌ Info: MCMC progress
│   step = 501
│   seconds_per_step = 0.029
└   estimated_seconds_left = 15.0
┌ Info: MCMC progress
│   step = 601
│   seconds_per_step = 0.025
└   estimated_seconds_left = 10.0
┌ Info: MCMC progress
│   step = 701
│   seconds_per_step = 0.029
└   estimated_seconds_left = 8.6
┌ Info: MCMC progress
│   step = 801
│   seconds_per_step = 0.032
└   estimated_seconds_left = 6.3
┌ Info: MCMC progress
│   step = 901
│   seconds_per_step = 0.033
└   estimated_seconds_left = 3.2
Test Summary: | Pass  Broken  Total
DynamicHMC    |    8       2     10
1435.192513 seconds (945.59 M allocations: 54.888 GiB, 2.12% gc time)
One parameter case
┌ Info: Found initial step size
└   ϵ = 0.025
bayesian_result = Object of type Chains, with data of type 250×14×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, σ[1]

2-element Vector{MCMCChains.ChainDataFrame}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5002  0.0027    0.0002  0.0001  342.1205  0.9960
        σ[1]  0.1473  0.0331    0.0021  0.0015   46.6944  1.0152

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4947  1.4984  1.5001  1.5022  1.5048
        σ[1]  0.1004  0.1229  0.1389  0.1646  0.2223

┌ Info: Found initial step size
└   ϵ = 0.025
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.025
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, true, false)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.00625
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Info: Found initial step size
└   ϵ = 0.0125
┌ Warning: Interrupted. Larger maxiters is needed.
└ @ DiffEqBase ~/.julia/packages/DiffEqBase/dKNbf/src/integrator_interface.jl:329
┌ Warning: The current proposal will be rejected due to numerical error(s).
│   isfinite.((θ, r, ℓπ, ℓκ)) = (true, true, false, true)
└ @ AdvancedHMC ~/.julia/packages/AdvancedHMC/P9wqk/src/hamiltonian.jl:47
Four parameter case
┌ Info: Found initial step size
└   ϵ = 0.024609375000000003
bayesian_result = Object of type Chains, with data of type 250×17×1 Array{Float64,3}

Iterations        = 1:250
Thinning interval = 1
Chains            = 1
Samples per chain = 250
internals         = acceptance_rate, hamiltonian_energy, hamiltonian_energy_error, is_accept, log_density, lp, max_hamiltonian_energy_error, n_steps, nom_step_size, numerical_error, step_size, tree_depth
parameters        = a, b, c, d, σ[1]

2-element Vector{MCMCChains.ChainDataFrame}

Summary Statistics
  parameters    mean     std  naive_se    mcse       ess   r_hat
  ──────────  ──────  ──────  ────────  ──────  ────────  ──────
           a  1.5002  0.0053    0.0003  0.0001  124.5476  0.9962
           b  0.9997  0.0090    0.0006  0.0004  213.0065  1.0073
           c  2.9996  0.0109    0.0007  0.0000  122.5335  0.9964
           d  1.0004  0.0074    0.0005  0.0003  130.8722  0.9978
        σ[1]  0.1536  0.0327    0.0021  0.0018  272.7966  0.9983

Quantiles
  parameters    2.5%   25.0%   50.0%   75.0%   97.5%
  ──────────  ──────  ──────  ──────  ──────  ──────
           a  1.4907  1.4962  1.5003  1.5039  1.5096
           b  0.9796  0.9936  1.0002  1.0052  1.0156
           c  2.9782  2.9930  2.9991  3.0067  3.0193
           d  0.9852  0.9960  1.0000  1.0053  1.0148
        σ[1]  0.1072  0.1281  0.1480  0.1739  0.2217

Steady state problem
┌ Info: Found initial step size
└   ϵ = 1.6001953125000001
Test Summary: | Pass  Total
Turing        |   12     12
693.470125 seconds (576.91 M allocations: 32.745 GiB, 4.36% gc time)
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:27
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:27
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:45
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:45
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
Preparing to run in serial on 1 processor
┌ Warning: `mean(A::AbstractArray{T}, w::AbstractWeights{W}, dims::Int) where {T <: Number, W <: Real}` is deprecated, use `mean(A, w, dims = dims)` instead.
│   caller = top-level scope at abc.jl:88
└ @ Core ~/.julia/packages/DiffEqBayes/cBMiN/test/abc.jl:88
Test Summary: | Pass  Total
ABC           |   12     12
 62.529411 seconds (90.52 M allocations: 3.841 GiB, 5.99% gc time)
2191.277532 seconds (1.61 G allocations: 91.476 GiB, 2.94% gc time)
    Testing DiffEqBayes tests passed 
