Julia Version 1.6.0-DEV.620
Commit 102c9ac37d (2020-08-11 16:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_yTFyW7/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_yTFyW7/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722845328725843
curgen: 20 fitness: 0.21722845328725843
curgen: 30 fitness: 0.21722914755431394
curgen: 40 fitness: 0.21723361717229966
curgen: 50 fitness: 0.21723361717229966
CoordinateCreature{Vector{Float64}}([0.22253236989473274], -0.21723361717229966) 0.22253236989473274 -0.21723361717229966
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.25765167156385
curgen: 100 fitness: 3.2582918659632796
curgen: 150 fitness: 3.258324482437355
curgen: 200 fitness: 3.258331340533685
curgen: 250 fitness: 3.2583964737594946
curgen: 300 fitness: 3.2584611304610824
curgen: 350 fitness: 3.2584626524175473
curgen: 400 fitness: 3.2584669423725865
curgen: 450 fitness: 3.2584670931867805
curgen: 500 fitness: 3.258472658203635
CoordinateCreature{Vector{Float64}}([-0.2222674098958159, 0.22227006688829315, 0.2227081023624021, -0.22273411755911623, 0.22260983118743036, 0.22240456370327416, -0.22240209264065436, 0.22228941610051575, -0.22232071640945034, 0.22282240342792825, 0.22248757114433165, -0.22279931922526366, -0.22264193246653283, -0.22227123301121243, 0.22287843495322343], -3.258472658203635) [-0.2222674098958159, 0.22227006688829315, 0.2227081023624021, -0.22273411755911623, 0.22260983118743036, 0.22240456370327416, -0.22240209264065436, 0.22228941610051575, -0.22232071640945034, 0.22282240342792825, 0.22248757114433165, -0.22279931922526366, -0.22264193246653283, -0.22227123301121243, 0.22287843495322343] -3.258472658203635
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0037218503795202196
curgen: 100 fitness: -0.0032823591142232544
curgen: 150 fitness: -0.0020585356934645915
curgen: 200 fitness: -0.0016695833996891452
curgen: 250 fitness: -0.001005045319374176
curgen: 300 fitness: -0.001005045319374176
curgen: 350 fitness: -0.0009275189074742229
curgen: 400 fitness: -0.0009275189074742229
curgen: 450 fitness: -0.0008708907777190689
curgen: 500 fitness: -0.000851652542849024
CoordinateCreature{Vector{Float64}}([0.0007584041552702969, 0.0007046707322112842, 0.0006900885612524721, -0.0010136351357590313, -0.00025887779335384277, -0.0008531822459129765, -0.0002404052238934428, 0.0003810725756922891, -0.00017582580478202455, -0.0004412294650995015, 0.0005810114455446973, -2.6818855682677685e-5, 5.5319893572904543e-5, -0.0003041088180633666, 0.0002449168651532112], 0.000851652542849024) [0.0007584041552702969, 0.0007046707322112842, 0.0006900885612524721, -0.0010136351357590313, -0.00025887779335384277, -0.0008531822459129765, -0.0002404052238934428, 0.0003810725756922891, -0.00017582580478202455, -0.0004412294650995015, 0.0005810114455446973, -2.6818855682677685e-5, 5.5319893572904543e-5, -0.0003041088180633666, 0.0002449168651532112] 0.000851652542849024
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
