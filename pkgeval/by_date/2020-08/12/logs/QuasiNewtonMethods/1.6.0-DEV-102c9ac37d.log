Julia Version 1.6.0-DEV.620
Commit 102c9ac37d (2020-08-11 16:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed UnPack ────────────── v1.0.1
  Installed SIMDPirates ───────── v0.8.24
  Installed VectorizedRNG ─────── v0.1.11
  Installed StackPointers ─────── v0.1.2
  Installed VectorizationBase ─── v0.12.31
  Installed QuasiNewtonMethods ── v0.1.1
  Installed DocStringExtensions ─ v0.8.2
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.23
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.11
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_NysGqc/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_NysGqc/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.11
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-8.278933094629792e-13, -1.7101875471325911e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.887024366937112e-13, -1.630917623174355e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-2.9997115902347105e-12, -5.797473612290105e-12, -1.4065748565883496e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.2575274982727933e-12, 5.199396468924533e-12, 6.213918268827001e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [1.4317436125566019e-12, -2.4447111002245947e-13, 2.8885782654697323e-12, -4.92828000631107e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.066813304362313e-11, 2.0328183580886616e-12, 2.1539658945357587e-11, 4.6203041392800515e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-2.376289165439971e-10, -2.1620072399031187e-10, -4.568665445958686e-10, -4.1914449688817967e-10, -1.4146017690563895e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.5903723610554152e-11, -4.5926817904273776e-11, 5.090550203590283e-11, -8.338774115657088e-11, -6.725620060876736e-12]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [2.121192110848824e-12, -2.699729328980993e-12, 7.8026474170656e-13, 3.90354415458205e-12, -5.314304551973237e-12, 1.5405454689698672e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.566036355096003e-12, -7.346345753944661e-13, 5.115907697472721e-12, -6.705414001828558e-12, -2.2767343565988085e-12, 1.0712541964608135e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-4.80426809446044e-12, 1.0599965349911145e-11, -4.5419223937415154e-13, -1.058386711605408e-11, 1.939359783875716e-11, -2.731148640577885e-14, 1.4233059175694507e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.725394520121995e-10, -1.536130112000933e-10, -3.8559710979768624e-11, -9.385533461525597e-10, -3.32234462163683e-10, -5.758982180026351e-11, -5.96003246755572e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2608669663904948e-10, -3.605638010384382e-11, -1.961641959979943e-11, 1.397371107714207e-10, -2.4118651520410594e-10, -7.807277047078287e-11, -2.1519230841704484e-11, 2.8084512493364855e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2477685551459672e-11, -4.2360115415363e-11, 1.674482774660646e-11, -1.155653350792818e-11, -2.8197000290219876e-11, -8.190548239639384e-11, 2.935784948476794e-11, -2.7057911466954465e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [3.055777852978281e-11, 6.109912575880116e-11, -2.7013280501364534e-11, 2.256284048485213e-11, 7.023492898383665e-11, 1.1378387121396827e-10, -5.289557680754342e-11, 4.6846082568663405e-11, 2.7111646261346323e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [7.012590508281846e-11, 2.399596077395927e-10, 9.797718192317006e-12, -7.527534151563486e-11, 1.27326149623741e-10, 4.797671149248117e-10, 1.6686874104721028e-11, -1.498828838819577e-10, -5.261346913698617e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [1.304343300034816e-10, 1.4010748117243566e-10, -3.99805744066839e-11, -5.16836573538626e-11, -8.489864367078326e-11, 2.569136015040385e-10, 2.8576030430826904e-10, -9.023792824081056e-11, -9.629430586244325e-11, -1.6568912908354605e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.050782345809694e-11, 3.9299452581076366e-11, 4.0920822286238945e-11, 2.3491208978043687e-11, 9.984679749663883e-12, -1.6523782342403592e-10, 9.438561043850768e-11, 9.48461309491222e-11, 4.791433916295773e-11, 2.1656898496758004e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [1.8026247161628817e-10, -2.6261215424483453e-11, -8.504674742226825e-11, -6.934930407709317e-11, 5.2662763039279525e-11, 3.761948530467407e-10, -5.465206065480288e-11, -1.633263524425388e-10, -1.3777035068329724e-10, 1.0370926339930975e-10, 3.4661162828797387e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [5.14348563740441e-11, -9.344747198269943e-12, 1.031907892468098e-11, 1.4002776715926757e-10, -5.323796958833782e-11, 1.0280820639252397e-10, -1.675493077613055e-11, 3.321032338021723e-11, 2.751168182157926e-10, -1.0057721322453972e-10, -3.795630476588485e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4950507498667776e-10, -7.594458395487891e-11, 7.657408040984137e-11, -3.3580105363029134e-10, -3.268985082627296e-11, -8.403344686769287e-11, -3.023215011666025e-10, -1.540481076034439e-10, 1.5610668313570386e-10, -6.554127240931962e-10, -6.589417900215722e-11, -1.7761159210039068e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4759971023181606e-11, 1.3052003922098265e-11, -4.4913517349698395e-11, 1.9159118735956326e-11, 5.609246400695156e-11, -8.08642042215979e-12, -2.8607782809331184e-11, 2.840017110372628e-11, -8.625833380904169e-11, 3.968536610443607e-11, 1.1299028379596621e-10, -1.793676318584403e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-9.902656472604576e-11, -6.60452803558087e-11, 5.484834808555661e-11, 6.262546037305583e-11, 9.631184738623233e-11, -2.496711726251988e-10, -1.9924673022586603e-10, -1.4022927263823703e-10, 1.1636891450450548e-10, 1.253275261348108e-10, 1.8823764769138052e-10, -5.111014944603198e-10, -2.8843594179761567e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.045752539065916e-11, -9.022116387313872e-12, 2.3691493211686065e-11, 9.140688206343839e-12, 7.020095615928312e-11, -1.8072987550965536e-11, -6.068479052601106e-11, -1.859523646174921e-11, 4.927525054654325e-11, 1.8828938408432805e-11, 1.404920624281658e-10, -3.476530174850723e-11, -8.847367283237872e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [2.2792878695554464e-12, -9.191769567706842e-11, -1.0282408258177611e-10, 4.827671595819538e-11, 3.6921576906934206e-11, 1.5577295009450154e-10, 4.3926196013899244e-11, 1.553646100660444e-12, -1.837303642560073e-10, -2.138222932046574e-10, 8.556511055246574e-11, 8.789280414589484e-11, 3.049629437867907e-10, 9.960365865424592e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2097323970626803e-11, 6.699241161811642e-11, -2.1634805058567963e-11, -4.842126699600158e-11, 4.550360088728667e-12, 6.019451603833659e-11, -9.775935616573861e-11, -4.063116509911424e-11, 1.2939493920782752e-10, -4.294586908315523e-11, -1.0074618916888767e-10, 6.1528560024726175e-12, 1.178406261459486e-10, -2.00273131412132e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8696932890804874e-11, 1.6864509788661053e-11, -6.97013557982018e-11, -2.758770989430559e-11, 2.6720847756678268e-11, -4.5594972242213316e-11, 9.982836779443005e-11, -3.142819338108893e-11, 3.191269470903535e-11, -1.4038836759766582e-10, -6.092137905255868e-11, 5.566014316116252e-11, -8.809319940183968e-11, 1.9104806625591664e-10, 8.172573728870702e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.242428878839746e-12, 1.0683010032153106e-11, -3.192279773855944e-11, 2.787858832675738e-11, 2.5575985773684806e-11, -4.1626924129900544e-11, -4.2015280143914424e-12, 1.3931078512996464e-11, 1.75506276178794e-11, -6.121991802388038e-11, 5.21480636450633e-11, 4.995581726063847e-11, -7.99940114148967e-11, -6.966982546430245e-12, -9.569012249244224e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-2.243871755069904e-11, -5.0632609216449964e-11, 7.286593550759335e-11, -4.123712482595465e-11, -3.8741121421992375e-11, 6.161737786669619e-13, 4.463118763453622e-11, -5.028866212342109e-12, -4.082978399821968e-11, -9.912604070905218e-11, 1.4713452678449812e-10, -7.491829379091541e-11, -7.913869559672548e-11, 2.4937829579130266e-12, 9.351142082891784e-11, -1.5499268535279498e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.145239541562205e-11, -4.70540273411757e-11, -1.0637157821236087e-11, 1.8962609260597674e-11, -3.805511461507649e-12, 9.798162281526857e-12, -3.300315576382218e-11, -6.978417843583884e-12, -4.914568751956949e-11, -9.940304135369615e-11, -2.1572743591491417e-11, 3.271982684793784e-11, -7.921441280700492e-12, 2.2031709789871456e-11, -6.061295909631781e-11, -1.3857137659556429e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.1193934668085603e-10, -5.466360697425898e-11, -6.909051109005304e-11, -1.7449930389545898e-10, -8.745193458281619e-11, 1.1772050001468415e-10, -2.2812840505537224e-10, -3.7741587632922347e-11, 2.1084134438353885e-10, -1.125581849947821e-10, -1.36336053557784e-10, -3.250663072051907e-10, -1.724268505753912e-10, 2.450462055492153e-10, -4.701071754098507e-10, -8.601974688104974e-11, -7.0786709827075356e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.260103629391779e-11, -3.68949315543432e-12, -1.4283241256407564e-11, 4.187916680109538e-11, 6.681100117589267e-12, 2.2159163393098424e-11, 7.186096162570266e-11, 3.363087586194524e-12, 1.516629044573392e-10, -6.1095573045122364e-12, -2.7843172212271838e-11, 8.439071663701725e-11, 1.3588019598387291e-11, 4.783706764044382e-11, 1.4513878987543194e-10, 7.345679620129886e-12, 6.113110018191037e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [5.247136058983415e-11, 4.3476999778135905e-11, 1.5271184317100506e-10, 6.737788105226628e-11, 9.465073169678817e-11, 1.2274226079966866e-10, 2.3032553642110543e-10, 1.5871970404646163e-11, -1.2002365767926904e-10, 1.0838374642219151e-10, 8.079759084012039e-11, 2.9207614105075663e-10, 1.465558785440635e-10, 1.9732970812924577e-10, 2.487947625695597e-10, 4.497131556036038e-10, 3.594502473447392e-11, -2.449455083208818e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.340083847864662e-11, -1.3830048217755575e-12, -7.361111720172175e-12, -1.1476819494760093e-11, -3.115352420479667e-11, -4.9635184851126724e-11, -4.05145916815286e-11, -4.551581334055754e-12, 1.0882406087375784e-11, 8.671308115992815e-11, -6.978084776676496e-12, -1.4411360993449307e-11, -2.4221180616734728e-11, -6.51937392959212e-11, -9.819733914895323e-11, -8.146550101173489e-11, -1.429278917441934e-11, 2.3007373783912044e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.7671641927563542e-11, 2.2785995312801788e-11, -9.087508523464294e-12, -2.25303553591516e-10, -1.1684864187344601e-10, -1.174282893146028e-10, -1.7132406604503103e-11, 1.703364116423245e-10, 5.6660676150954714e-11, 3.131428449876239e-11, 4.2625680762853335e-11, -2.3182677999500356e-11, -4.3575387742578187e-10, -2.278296440394456e-10, -2.3155155570719899e-10, -3.5967340217268884e-11, 3.4106006907563824e-10, 1.1403655797437295e-10, 5.323741447682551e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.73374672793625e-11, -8.502332171644866e-11, 4.3413939110337196e-11, 5.3052895410132805e-11, -4.8049564327357075e-11, -3.078326482608418e-11, -3.926248215435635e-11, 2.3812507521370208e-11, 1.6054624296657494e-10, 9.102341103073286e-11, -1.6918699774493007e-10, 9.504952380723353e-11, 1.0880896184062294e-10, -9.928213806631447e-11, -6.399092367104231e-11, -7.761080667023634e-11, 5.527378554859297e-11, 3.3657254761010336e-10, 1.270095140171179e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.3231193918272766e-11, 3.800959547106686e-11, -7.009059999063538e-11, -1.6628032284415895e-11, 1.0301670627654858e-10, 8.858247468879199e-12, 2.8801627749430736e-11, 3.33191252366305e-11, 5.679012815562601e-11, 2.6508129025160088e-11, 2.0020207713855598e-11, 6.852030054460556e-11, -1.4323608965582935e-10, -3.3394509380002546e-11, 2.117741537688289e-10, 1.7019496922898725e-11, 5.599987140669782e-11, 6.399147878255462e-11, 1.1509060371395208e-10, 5.922795587309793e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.5187407715066e-11, 1.4073187060148484e-11, -7.928102618848243e-13, 3.753264365968789e-11, -1.1121215059972656e-11, 5.530020885657905e-12, -1.927669135426413e-11, -3.1432745295489894e-11, -3.285238747707808e-11, -3.8103409316647685e-11, 4.75006700639824e-11, 2.670996757103694e-11, -3.144706717250756e-12, 7.156408798891789e-11, -2.245115204857484e-11, 1.0588196985850118e-11, -3.8924308221055526e-11, -6.235545413346699e-11, -6.746869729568061e-11, -7.542766411461344e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-6.461864376916537e-11, 2.634004125923184e-11, -2.6304514122443834e-11, 9.304779169383437e-12, -1.5486456561575324e-10, 1.1573231262218542e-10, -1.3646028751423955e-10, 1.4447998353261937e-10, 1.0122036542270507e-10, 3.891997835125949e-12, -1.196334142861133e-10, 5.320788254437048e-11, -5.3493764973211455e-11, 3.054867470098088e-11, -3.219003952281696e-10, 2.3119572922780662e-10, -2.8269886431786517e-10, 2.771713969451639e-10, 1.984024056156386e-10, 1.4061640740692383e-11, 2.760014439218139e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.613975619818575e-11, -1.9832024911181634e-11, -1.500721769076563e-11, 1.7454926393156711e-12, 4.2232883856740955e-12, 8.801848139228241e-12, -4.641698136964578e-11, 1.6755485887642863e-12, 2.105648988504072e-12, -6.617928427488096e-12, -3.029743123050821e-11, -4.0223491204471884e-11, -2.975419910455912e-11, 3.3246738695424938e-12, 4.9249493372371944e-12, 1.7013723763170674e-11, -9.472911344232671e-11, 2.894573469802708e-12, 5.491163079796024e-12, -1.3375967000683886e-11, 2.498001805406602e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-7.771738808060036e-11, -6.342593117381057e-12, -1.2835266183230942e-10, -8.075207169611076e-12, 7.752687380957468e-12, -1.1820433520881579e-11, -9.373279930002809e-12, 5.6318727459370166e-11, 4.1606718070852367e-11, 3.604561094050496e-11, -1.2718448516579883e-10, -1.5980572420914996e-10, -1.6882162334752593e-11, -2.5968904804329895e-10, -1.8225310149944107e-11, 1.7711165867240197e-11, -2.3639867841040996e-11, -1.954636452694558e-11, 1.1157830215324793e-10, 8.771050552525139e-11, 6.583045220054373e-11, -2.624828132624657e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.941313859139427e-11, -8.734013512423644e-12, 1.3981482638314446e-11, -1.654043568777297e-11, -9.074851980983567e-12, -1.439914854017843e-11, 2.223177197890891e-11, -1.9005907958558055e-11, -1.6329160246186802e-12, 5.931921620572211e-12, 1.501088142674689e-11, -6.017120135481946e-11, -1.7992163314772824e-11, 2.5307089757120593e-11, -3.412781168776746e-11, -1.7898238446889536e-11, -2.705413670867074e-11, 4.551692356358217e-11, -4.063560599121274e-11, -3.0015989693765732e-12, 3.5487168759118504e-12, 3.061395581482884e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-3.524780467500932e-11, -4.447731072332317e-11, -2.1406032502113703e-10, 1.5976553413565853e-11, 1.0644218839672703e-10, 4.7865045260664374e-11, -8.626765968244854e-12, 8.457079481161145e-11, 8.08570987942403e-11, -1.7592260981302843e-11, 4.252576069063707e-11, -6.54114540310502e-11, -8.640321791375527e-11, -4.2502790176257577e-10, 3.696065675740101e-11, 2.222626527270677e-10, 9.656742072650104e-11, -1.3950063326717554e-11, 1.7652879158447377e-10, 1.6012036141432873e-10, -3.6291303295854505e-11, 8.980016730220086e-11, -2.5859314689569146e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1788126858268697e-11, 2.327027459614328e-13, 1.9718826571590853e-10, -1.0440648345877435e-10, 1.0999468003092261e-10, -1.4857592933736896e-10, 5.4721560616144416e-11, -1.9325141487058772e-10, -1.136502003618034e-10, -7.462674922464885e-11, 4.64539517963658e-12, 4.139377729472926e-11, 6.978639888188809e-12, 4.0032421821933895e-10, -2.1209711764669237e-10, 2.1886403800408516e-10, -2.9229407783049055e-10, 9.667289191384043e-11, -3.9819825214948423e-10, -2.270906795942551e-10, -1.5586476553863804e-10, 9.86322135076989e-12, 4.401812248033821e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [5.1380677490442395e-11, -1.491240464446264e-11, 5.60431701046582e-11, -1.9913970472629217e-10, -9.465939143638025e-11, -6.858957846134217e-12, 4.1662229222083624e-12, -9.164746739287466e-11, 3.0853319898938025e-11, -1.4603951381531033e-10, -1.1840339819713108e-10, 8.840261855880271e-12, 1.0737277733596784e-10, -3.294309269818996e-11, 1.0267053873747045e-10, -4.026644573329463e-10, -2.0971202552289014e-10, -1.537847627020028e-11, 1.3304468637898026e-11, -2.0060397787347028e-10, 6.199019075836532e-11, -2.712323698972341e-10, -2.4452451174994394e-10, 1.5800249997255378e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.9694468278430577e-11, 1.3937295761934365e-11, 1.6971313243629993e-11, 2.051026015692514e-12, 2.0457413540952984e-11, -5.450417894792281e-12, -1.041311481486673e-11, 1.8068657681169498e-11, -6.628808613129422e-12, 1.145239458821834e-11, 2.8423041698033558e-11, -5.566935801226691e-11, 4.318945201475799e-11, 2.7284619008582922e-11, 3.844302653988052e-11, 1.1100009800202315e-12, 4.386691010438426e-11, -1.3144596522352003e-11, -2.247402264288212e-11, 3.690225902630573e-11, -9.903633468866246e-12, 2.346833838373641e-11, 5.264610969391015e-11, -1.1393552767913206e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
