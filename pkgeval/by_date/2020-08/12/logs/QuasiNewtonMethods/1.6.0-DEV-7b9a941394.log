Julia Version 1.6.0-DEV.629
Commit 7b9a941394 (2020-08-12 17:08 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.1
  Installed VectorizationBase ─── v0.12.31
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.23
  Installed SIMDPirates ───────── v0.8.24
  Installed VectorizedRNG ─────── v0.1.11
  Installed CpuId ─────────────── v0.2.2
  Installed PaddedMatrices ────── v0.1.10
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.11
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_ifnYxU/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_ifnYxU/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.11
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-9.192646643896296e-14, -1.6076029396572267e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.497647030480948e-13, -1.8788304245731524e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-4.62996307959429e-12, -9.195200156852934e-12, 8.218092872880334e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2744738597803007e-10, -2.5277879789342705e-10, 8.479419388862652e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-3.8691272408186705e-12, -8.05022715155701e-13, -7.965184067870723e-12, -1.873168287147564e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0535018130374283e-11, -6.185563172778075e-11, -4.18385326383941e-11, -1.2908141222567338e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.958211370833851e-12, -1.585731546072111e-12, -3.821165606154864e-12, -3.408495707901693e-12, 1.567856955375646e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.702350034501706e-12, -2.135269738801071e-11, -1.8272827695398064e-11, -4.0175862636715465e-11, 2.495781359357352e-13]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.922162511964643e-11, -4.7800208236026265e-11, 3.565636674807138e-11, -5.748035381003547e-11, -9.695488856209522e-11, 7.178546646002815e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.236189259960611e-11, 9.374745424395314e-11, 1.882294320409983e-11, 1.0614487067073242e-10, 1.777142877301685e-10, 4.109046436440167e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-1.546007766251023e-11, -3.970479500736701e-11, 2.3105961588498758e-12, -3.025257822031335e-11, -8.243461468993019e-11, 5.7835958244822905e-12, 1.722311182561498e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.043121393237925e-11, -4.471434333908064e-11, -5.7450710855277975e-12, 9.490874752771106e-11, -9.659195665534526e-11, -1.1667999899600545e-11, -1.0991518806235945e-10]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [8.198774992251856e-12, -1.0262768412871992e-10, -2.075239979859589e-11, 2.158828671383617e-11, 1.7317258738103192e-11, -2.1398083305257387e-10, -4.3409498218238696e-11, 4.0307757132040933e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.384359624827084e-12, -1.6172507777412193e-11, 2.8914648453337577e-12, 8.428591158349263e-12, 1.0772271963332969e-11, -3.281508398345068e-11, 6.493916515637466e-12, 1.6590950835393414e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [8.184786182141579e-11, -1.0320633236915455e-11, 6.850298106542141e-12, 2.0901946840012897e-11, 1.6908852096264582e-10, -2.8611335523009984e-11, 1.2251089032133677e-11, 3.9380498861874e-11, -1.8077761509971424e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1990186621346766e-11, 1.2652523473377641e-10, -1.1984746528526102e-10, 8.496536807456323e-12, 2.62518895510766e-11, 2.5958812877036053e-10, -2.371494112196615e-10, 1.6071144415263916e-11, -8.980594046192891e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [6.339551106293584e-11, 1.2108314351166882e-11, 1.5717760426525729e-10, -9.737100015172473e-12, -3.784772495407651e-11, 1.2999579190875465e-10, 1.9409585050311762e-11, 3.199716047674883e-10, -1.1754597295521307e-11, -8.337919243928127e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0360601265801961e-11, -3.268230130970551e-11, 1.8567813953040968e-11, -4.3839265551071094e-11, -1.3635759188446173e-11, -1.8811174840038802e-11, -6.759914850107407e-11, 4.170574996464893e-11, -9.020628688460874e-11, -2.7532309765376795e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-3.4491631772937126e-11, -2.0536905509516146e-11, -2.110722707726609e-11, -8.740497214887455e-11, -3.2377656111748365e-11, -7.458456074971309e-11, -4.826750110709099e-11, -4.501343742191466e-11, -1.7385581863038624e-10, -5.93275428784068e-11, -5.93971538620508e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.413169746835365e-11, -5.816136461334054e-11, -4.0140113455322535e-12, -6.813216657519661e-12, 5.773825861865589e-11, -5.83681991628282e-11, -1.0936007655004687e-10, 1.7434942378713458e-12, -1.517808101425544e-11, 1.1787104625682332e-10, -2.0104251596819722e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [4.942046771816422e-12, 1.15283338431027e-11, 1.8504975329847184e-11, -2.3127055825966636e-12, 6.703082533476845e-12, -2.027544798721692e-11, 1.0908385306152013e-11, 2.4037438706159264e-11, 3.6501024425206197e-11, -4.632960681760778e-12, 1.4975354289958887e-11, -4.1576186937675175e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.9017900022031426e-11, 3.17188497689358e-11, -3.664335501696314e-11, 5.35398392287334e-11, 2.6959545706972676e-11, 9.028999770066548e-12, 7.227907161677649e-11, 6.594746970733922e-11, -7.051381700762249e-11, 1.0760969892942285e-10, 5.7548632526049914e-11, 2.162625634127835e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.8107737531636303e-12, -2.7036706207184125e-11, 1.510880309751883e-11, 1.116684522628475e-11, 1.0732303934446463e-11, 2.4944268872673092e-11, 4.667377595524158e-12, -5.7220783666878106e-11, 3.219557953570984e-11, 2.1463719690473226e-11, 2.124056486252357e-11, 5.0171866661230524e-11, -4.061306846381285e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.988898266195974e-11, 5.470335295854056e-11, -1.3961465317180455e-10, 5.873812547463331e-11, 1.5532530817097268e-10, -3.3588898329384165e-10, 1.2041545538465925e-10, 1.099671464999119e-10, -2.614684024848657e-10, 1.2874434851539718e-10, 3.3158253920362313e-10, -6.822655773675024e-10, -8.384715144416077e-11]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-4.6262660369222885e-11, 2.8380853223097802e-11, 5.268985248108038e-11, -2.291855594194203e-11, -9.584033566767403e-11, -3.8308689553900876e-11, -3.175293361579179e-11, -8.888845215437868e-11, 5.813416414923722e-11, 1.0981837661461213e-10, -3.9422909381414684e-11, -1.912578984075708e-10, -8.032707832228425e-11, -6.432165911007814e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.138090036245103e-12, -4.116784690921804e-11, 3.4402480864059726e-11, 1.2642109581406658e-11, -4.162581390687592e-11, -1.381128544863941e-11, 2.2034374325130557e-11, -1.0613732115416497e-12, -8.834855069750347e-11, 7.0746297708979e-11, 2.0623946994646758e-11, -8.36420932515125e-11, -2.9603985929327337e-11, 4.571698575261962e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [3.707434359512263e-11, 2.7042812433819563e-11, -2.0778267995069655e-11, -6.324607504382129e-12, -2.096955942221257e-11, -2.613709249033036e-11, -4.628519789662278e-12, 7.107070487677447e-11, 5.0216053537610605e-11, -3.9123704276278204e-11, -1.2147949313146e-11, -4.2890913043436285e-11, -5.347799980626178e-11, -6.668554597411003e-12, 5.057287921772513e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3339995774686031e-11, -2.0644930209812173e-11, -1.008604311181216e-11, 2.3842705587640012e-11, -5.359601651377943e-12, 1.5837109401672933e-11, 3.2072122735371522e-12, -2.999944737069882e-11, -4.332678660290412e-11, -1.7970624988095096e-11, 4.738942571691496e-11, -1.0645484493920776e-11, 3.413092031223641e-11, 5.2520210402917655e-12, -1.868172283536751e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.2768919255279343e-10, 4.356133231908643e-10, -2.516561403709261e-10, 1.2100764834599431e-11, 3.662603553777899e-11, -9.495881858612165e-11, 1.1793699350448605e-10, 2.1341906020211354e-10, 2.4224533490269096e-10, 8.618212810063142e-10, -4.978237821973153e-10, 2.561240108889251e-11, 7.227018983257949e-11, -1.8921941791205654e-10, 2.2535018295855025e-10, 4.1510550552459335e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.3088198847508465e-11, 2.1634027902450725e-11, -4.9016013470293274e-11, -1.3358980588407121e-11, 7.44879713465707e-11, 7.2197581246769e-11, -2.3716140162832744e-11, 4.608380343995577e-11, -6.698630539148098e-11, 4.234257389157392e-11, -1.0065936972836198e-10, -2.5951130133705647e-11, 1.4436829509634208e-10, 1.4641554635375087e-10, -4.917966034412302e-11, 9.122502753200479e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [2.7411850567204965e-11, -3.4461544728969784e-11, -3.326316999618939e-11, 1.0795364602245172e-11, -2.2358337403716178e-11, -4.928946140125845e-12, -5.472977626652664e-11, 1.0569101149826565e-10, 5.271316716459751e-11, -6.499478732990838e-11, -7.59277085649046e-11, 2.103761609362209e-11, -3.953537497380921e-11, -9.189538019427346e-12, -1.0115441817504234e-10, 2.0933210720386342e-10, -5.1603943340694514e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.18265463667467e-12, -1.9772850023969113e-11, 1.3698819856244882e-11, -3.5806690945605624e-11, -1.562916462916064e-11, 2.348343741687131e-12, -9.55913126432506e-12, 1.103095392807063e-11, 1.7958079467916832e-11, -3.880751275886496e-11, 2.8569369092679153e-11, -6.810318975425389e-11, -3.231970246986293e-11, 3.751665644813329e-12, -1.8726908912469753e-11, 2.4724666758402236e-11, -2.8096414084188837e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2738698984549046e-11, 6.261435814280958e-12, 1.3255174735604669e-11, 1.584266051679606e-11, 4.942712905631197e-12, 8.120615291318245e-12, -2.7721158701865534e-12, -3.607669718519446e-12, -8.739342582941845e-12, -2.4792723429811758e-11, 1.3014034294656085e-11, 2.6472157799162233e-11, 3.101852108500225e-11, 8.71880345698628e-12, 1.7325474388485418e-11, -5.5715432267788856e-12, -9.260481270700893e-12, -1.740141364336978e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.9147129982097795e-11, 2.093436535233195e-12, 6.576605926511547e-11, 2.071853799634482e-11, 1.7887247238945747e-11, 9.94944127086228e-11, -1.3996581671449349e-12, 3.8644865085757374e-11, -3.7950198539249413e-11, 7.515965627646892e-11, 8.94173624033101e-12, 1.2857470643723445e-10, 3.735256548509369e-11, 4.108091644638989e-11, 1.9649770699459168e-10, 7.274181257344026e-13, 7.748823804831773e-11, -7.463440976351876e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [2.9755553576649163e-10, -1.0978939979366942e-10, 1.8186585570845182e-10, 5.759821508632967e-10, 1.2170198182559488e-10, -4.760392080527254e-11, -6.475853187026814e-11, 1.5643153439270918e-10, 3.13968850917945e-11, 6.204121660857709e-10, -2.3215163125200888e-10, 3.772433476711967e-10, 1.154276230153073e-9, 2.6447533052476047e-10, -9.345690887840874e-11, -1.22773791133568e-10, 3.109936752565545e-10, 6.589551126978677e-11, 1.2086776024489154e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0493494961849592e-11, 6.530509466529111e-11, -4.916600460092013e-11, -1.5321888202635137e-10, 2.6603164116068e-11, 3.4807712268047908e-12, -4.912825701808288e-11, 6.863754009600598e-11, 5.2670756645056827e-11, -2.5983215579117314e-11, 1.2816192551667882e-10, -1.002585792164723e-10, -3.1624847185440785e-10, 5.073097497643175e-11, 6.298517263303438e-12, -9.904854714193334e-11, 1.392164161728715e-10, 9.74940128628532e-11, -3.604228027143108e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [8.880007840161852e-11, 4.4549475219923806e-11, 1.7575496613631003e-11, -6.682876474428667e-12, 7.37863103950076e-11, 1.8918866473427443e-11, -1.0217560131309256e-10, 6.497891114065624e-11, -2.4372837081898524e-11, 5.565969907195267e-11, 1.7981238720210513e-10, 9.06397179534224e-11, 3.505484791332947e-11, -3.931632797105067e-12, 1.5624679328141156e-10, 3.6342928666499574e-11, -2.0176726955867252e-10, 1.3982948132706952e-10, -5.4639071045414767e-11, 1.1486145368166945e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.2908565589527825e-11, -6.423817033862633e-11, 3.320965724640246e-11, -1.3339329640871256e-11, -7.146494507281886e-11, -2.8557822773223052e-11, 9.399259148779038e-11, -8.763201275741039e-11, 3.034994477957298e-11, -4.958378152508658e-11, 8.696510178651806e-11, -1.300862750852616e-10, 6.90139057013539e-11, -2.5172197659628637e-11, -1.518539738398772e-10, -5.262978941544816e-11, 1.88659754485343e-10, -1.7621126779943097e-10, 5.7270188591473925e-11, -9.404688139369455e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [8.987477428945567e-12, 8.281175745139535e-11, -7.365474896658952e-11, 5.668421287907677e-11, -1.818878381243394e-11, -8.074185764428421e-11, 5.104783262765977e-11, -1.425703999302641e-11, -8.981149157705204e-12, -2.0304347092547914e-10, 1.0299316954842652e-11, 1.6568879601663866e-10, -1.4652901114686756e-10, 1.2615042344066296e-10, -3.424072136937184e-11, -1.5598800029437143e-10, 1.0235168268479811e-10, -2.6432522837183114e-11, -1.970690277630638e-11, -4.159276256743283e-10, 2.382982700055436e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5447421120029503e-11, -3.196920506098877e-11, 2.0589085991673528e-11, 2.3061552667513752e-11, 2.440447843810034e-11, -1.6576295891468362e-11, -2.8766766746457506e-11, 4.412514797991207e-11, 1.6730838936496184e-11, -1.238009694759512e-11, -2.8034130572507365e-11, -6.393918727809478e-11, 4.354427929342819e-11, 4.175459977773244e-11, 5.3829607438160565e-11, -3.448907825998049e-11, -5.948741499395283e-11, 8.968470410763985e-11, 3.289279959517444e-11, -2.376232544065715e-11, 1.8769430454312896e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [6.008482600350362e-11, 7.381251165838876e-11, 5.204214836851406e-11, 6.885048087212908e-11, 8.390044214934278e-11, -8.321676681077861e-11, -1.5201850889212665e-10, -2.0321400118206157e-10, 6.872902247323509e-11, -4.5776205048753127e-10, 2.9203728324489475e-10, 1.1884959683072793e-10, 1.4157719441243444e-10, 1.0060752231311199e-10, 1.3653789210366085e-10, 1.5247492157755005e-10, -1.8429746617698584e-10, -2.910007790291047e-10, -4.058484659452688e-10, 1.3435030865593944e-10, -9.223282138037803e-10, 6.052485179708356e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.808287019069212e-11, -2.9618418828647464e-11, -7.686629110992271e-12, 3.205951060181178e-10, -4.7164716576730825e-11, 4.1269876405181094e-11, -1.2539214111484398e-10, 3.3640401575496526e-10, -1.5987389190286194e-10, -1.6579970729679872e-10, -3.8816327929680483e-10, 8.652056848745815e-11, -7.706579818744785e-11, -1.794164816715238e-11, 6.532900886924153e-10, -9.11293263072821e-11, 8.709188925593025e-11, -2.536680865361518e-10, 6.839155908267003e-10, -3.28370775015685e-10, -3.329602149548805e-10, -7.671197010949982e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-5.782315737334898e-10, 1.2299083973488223e-9, 2.722435610280627e-10, -1.7120671547132815e-10, -1.4277369286830321e-9, -1.989652997913538e-9, -2.9349211949636356e-10, 5.685963033741359e-9, 2.4180724089717387e-10, -4.870770120568579e-9, 3.5149041455184715e-9, -1.1659391230267602e-9, 2.4660098407736086e-9, 5.492635235526677e-10, -3.439730722476497e-10, -2.8563816867333003e-9, -3.975102358388938e-9, -5.899556398958339e-10, 1.1405346889148404e-8, 4.852473978189664e-10, -9.75769109956559e-9, 7.049815398119108e-9, -4.278466469997966e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.657896456374601e-11, -3.665623360404879e-12, -4.7519987944610875e-11, 4.9066306573308793e-11, -6.751488257350502e-12, 1.0799006133765943e-10, -1.0310030607030285e-10, 1.4935608305677306e-11, 6.050804302049073e-11, 7.357225939585987e-12, -7.160749770918073e-11, 1.3461720627105933e-10, -4.8515635953094716e-12, -9.186285065965194e-11, 9.18665143956332e-11, -1.6602386132547053e-11, 2.1136137284827328e-10, -1.9467738532341627e-10, 3.1499025610060016e-11, 1.1599854410349053e-10, 1.418021255972235e-11, -1.3807310850211252e-10, 1.567412866165796e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9176327192838016e-11, 8.677192298023328e-11, -6.2480021156829935e-12, -9.067857575928429e-11, -3.060762754358848e-10, 5.0180748445427525e-11, 1.4327850017537003e-10, 1.0363954139336329e-10, -2.3022850292875319e-10, -1.0877521106067434e-10, -4.9715564998109585e-11, 7.833467208229195e-11, -4.5420112115834854e-11, 1.6873769048686427e-10, -1.9943269258249074e-11, -1.7778378769151004e-10, -6.150582265718185e-10, 1.0487721802121541e-10, 2.924180897423412e-10, 2.03457029002152e-10, -4.620722693360335e-10, -2.0994650462569098e-10, -1.0470524447470098e-10, 1.5365042571602316e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6945578273919182e-10, 1.870577026608089e-10, -2.450373237650183e-11, 9.868061923157256e-11, 4.820366328317505e-12, 3.0626390312704643e-11, 1.877833444297039e-10, -1.0062750632755524e-10, 3.234124079654066e-11, 6.689648834878881e-11, 2.8444580024711286e-11, -2.710887070378476e-11, -3.421551930671285e-10, 3.8019054571236666e-10, -3.783662272383026e-11, 1.9615775670445146e-10, 1.0941469952285843e-11, 6.228684235054516e-11, 3.6433500660848495e-10, -2.0642032527717902e-10, 6.891132109387854e-11, 1.2364531620789876e-10, 7.411671276713605e-11, -7.711231653217965e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
