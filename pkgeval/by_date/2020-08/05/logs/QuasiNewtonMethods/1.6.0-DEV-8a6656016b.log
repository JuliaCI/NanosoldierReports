Julia Version 1.6.0-DEV.580
Commit 8a6656016b (2020-08-04 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizedRNG ─────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed UnPack ────────────── v1.0.1
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.30
  Installed SLEEFPirates ──────── v0.5.5
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_qJ0V1T/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_qJ0V1T/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-2.9485303087994907e-12, -6.040723476985477e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.741274205523951e-13, 1.7343904090694195e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.833755369773371e-12, -3.894329303477662e-12, 3.703704010149522e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.261857947251428e-11, -1.7700063636993946e-10, 2.3383428526813077e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [7.104516974720809e-11, -8.464362544202686e-11, 1.4143020088397407e-10, -1.6781864786707956e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.262057208213264e-11, -7.918665723138929e-12, -3.992284280940339e-11, -1.2299605778309797e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6777802197841538e-11, 3.070006471261877e-10, -6.966394128227194e-11, 6.165172816707809e-10, 3.255395952805884e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0511148335344842e-11, -4.3539616356724764e-12, -3.817424154561877e-11, -1.7200907365122475e-11, 5.131295388594026e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5017765636903277e-12, 9.026113190202523e-12, -1.0489054069751091e-11, -4.551359289450829e-12, 1.8036905302665218e-11, -2.1756152435159493e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.7281289994316467e-11, -2.669442444869219e-11, 3.467359732667319e-11, 9.389200528175934e-11, -5.657307955431179e-11, 7.354805653392305e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [5.394922286683368e-10, 5.065357022715489e-10, -4.0657066602278746e-10, 1.0683818274515033e-9, 1.007772088001957e-9, -8.151522790100785e-10, 3.092415212790911e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8372748595018038e-11, -2.285005518132266e-11, -2.679723110077248e-11, -5.5143445365501975e-11, -4.445310786138634e-11, -7.147504810234295e-11, 2.33783215008998e-10]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-7.65876251307418e-12, -9.808820422563258e-13, -5.9183768996717845e-12, -5.239031430903651e-12, -1.5180190438002228e-11, -2.638556040324147e-12, -1.1988965376019678e-11, -9.323097849289752e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.092459456231154e-12, -2.2748913863779308e-11, 1.8153367697948397e-10, -4.60893545550789e-11, 4.660716257376407e-12, -4.97196728233007e-11, 3.5715252977297496e-10, -1.0085521306990586e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [4.636291350834654e-13, 1.759037360216098e-12, 1.9895196601282805e-12, -8.527178962935977e-12, 5.544453784978032e-13, 3.0235813852641513e-12, 3.1863400806741993e-12, -1.7591039735975755e-11, -4.083400284571326e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.443956727750447e-11, -3.317357499810214e-11, 3.847433482917495e-11, -2.537980936523354e-11, -1.9656687388902583e-10, -6.313938261115482e-11, 8.133360651640942e-11, -5.0874970902725636e-11, -2.03848049551425e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-2.004674204414414e-11, 3.684097471534642e-11, 5.042366524321551e-11, -6.101474880892965e-11, -4.572675571523632e-12, -3.2639335678652515e-11, 8.160672138046721e-11, 1.0542855477524427e-10, -1.3167211765363618e-10, -6.314171407950653e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5873080627670788e-11, 8.169021015191902e-12, 3.788946933980242e-11, 3.0895286329268856e-12, -3.8875791474879406e-11, -3.367195411385637e-11, 1.9404478024398486e-11, 7.51629869455428e-11, 7.793321543658749e-12, -7.282630054561423e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [1.1790568521519162e-12, -8.403833184900122e-12, -2.1894708268632712e-12, -5.266820313210019e-11, 1.255706649772037e-11, 2.3141488725286763e-12, -1.8516410627000823e-11, -3.0443425558246417e-12, -1.1154266399415746e-10, 2.3539170612707494e-11, 8.031575404743307e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.409450830664355e-11, -7.052136652418994e-12, -6.646161399004313e-11, 9.99698102077673e-11, 6.222933279786957e-11, 1.4408030324375432e-10, -2.320355019236331e-11, -1.3082634975347673e-10, 2.0206436524006222e-10, 1.2815415395550644e-10, 6.6415761779126115e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-7.012113112381257e-11, 2.8234969917662056e-11, -1.4367840250884001e-11, 7.083666986318349e-11, -9.921286014957786e-12, 1.1001866084825451e-11, -1.4208778598145955e-10, 5.731637386929833e-11, -2.7285729231607547e-11, 1.4194512232279521e-10, -1.4061196651482533e-11, 1.9683810137394175e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.8963610943530966e-11, 9.011946744408306e-11, -4.1888714719107156e-11, -5.936806601880562e-11, 2.595479386968691e-12, -2.4888424654534447e-11, -9.872747064321175e-11, 1.7386003747787981e-10, -8.556189090569433e-11, -1.243278813234383e-10, 9.935163802765601e-12, -4.780520423963708e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [5.452971407748919e-12, -3.639688550549636e-11, 5.7370330708295114e-11, -5.119904500361372e-12, -1.1113332476497817e-11, -6.4109828556979664e-12, 1.1163736601815799e-11, -6.92914614575102e-11, 1.165199048358545e-10, -9.99644811372491e-12, -2.3012258765220395e-11, -1.1464051929976904e-11, 3.1101787811849135e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.674083508073636e-11, -2.5809998582815297e-10, -4.545451792736799e-10, 4.981921541968859e-10, 2.750422112285378e-10, 9.804446143846235e-11, 1.2430345641689655e-10, -5.380195178261715e-10, -9.301591719079738e-10, 9.895755326283506e-10, 5.629292587627788e-10, 2.0577450854375456e-10, 2.1653789872289053e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.9770407533314938e-11, -6.8444139245116276e-12, -2.1142310124844244e-11, 1.0361933533431511e-11, -2.628897100009908e-12, -1.96002103436399e-11, 4.9727555406775537e-11, 3.807199000505079e-11, -1.8878454355331087e-11, -4.296141220549998e-11, 1.952993322618113e-11, -6.9542149816470555e-12, -3.848410479179165e-11, 1.0043432752127046e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.001532355995096e-11, 2.8388180695060328e-11, -3.6105007872322403e-11, -2.2880808359104776e-11, 5.733880037439576e-11, -1.1543710431993759e-10, -2.2674451205517698e-10, 4.441957912604266e-11, 5.254507939866926e-11, -7.186129469261004e-11, -4.512235030063039e-11, 1.0996159538478878e-10, -2.2943547062226344e-10, -4.782797491387214e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [5.1749715623827797e-11, 1.8244361577046675e-10, -1.1910050723429322e-10, -6.227607318720629e-11, 3.6266989411615214e-11, -1.7158696685726227e-10, -1.6342394104640334e-10, 1.017377293521804e-10, 3.6922265245209474e-10, -2.3995816444966067e-10, -1.2518930336824496e-10, 5.86697357363164e-11, -3.441463780617937e-10, -3.2968239249697717e-10, 5.722533558127907e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.60189697249325e-11, 1.9795409755829496e-10, -2.7404301050637514e-10, -1.9412749185931943e-10, 5.4781068570264324e-11, -7.170086746555171e-11, -1.331657006886644e-10, -1.785537273590876e-10, 3.7616132431139704e-10, -5.478061337882423e-10, -3.8888947617721215e-10, 1.0651923787463602e-10, -1.4088707978032744e-10, -2.470382787223002e-10, 2.344724414626853e-11]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [5.351474818837687e-11, 3.4432900974934455e-11, -6.514710992888695e-11, 8.340861334943384e-11, 6.9970695903975866e-12, -5.081490783709341e-13, 1.2133627436128336e-11, 1.3215206706718163e-11, 1.0556355789503868e-10, 7.094369536275735e-11, -1.2454270947870327e-10, 1.6093659738203314e-10, 1.2958301098819902e-11, -1.6594503549072215e-12, 2.2462032234216167e-11, 2.6038060596533796e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.142840266865619e-10, 5.263123270538017e-11, 3.7421088450173556e-10, 1.5109735684859515e-10, 3.56530360789975e-11, 7.705391880108436e-11, 4.099831585335778e-12, 1.0994649635165388e-10, -2.1670698568954094e-10, 1.2020939799128882e-10, 7.396139256599099e-10, 3.055227182358067e-10, 6.991229817288058e-11, 1.5893375504560936e-10, 8.00870481043603e-12, 2.2117419007372519e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [9.27269372397177e-11, -4.059919067600504e-11, 2.0716095505690646e-11, 1.1260548049563113e-11, -3.8431369198121956e-11, 4.23876489463737e-11, 7.05600022854469e-11, 1.0020206886451888e-11, 1.756517153950199e-10, -8.368827852933691e-11, 4.153810628793053e-11, 1.2633671886419506e-11, -8.013090191383299e-11, 7.661382639412295e-11, 1.3770606877017144e-10, 2.2853274828094072e-11, 8.989697874994818e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.995026697291905e-11, 7.672640300881994e-11, -4.313105428366271e-12, 1.1711009939574524e-10, 2.281030919704108e-10, 1.1290546275688484e-10, -1.1989176318394357e-10, -8.975153953372228e-12, 1.0984790854706716e-10, 1.562729945447927e-10, -1.2654322034677534e-12, 2.3321944375709336e-10, 4.736746550548787e-10, 2.3549517891297e-10, -2.3121038417173168e-10, -1.762701096197361e-11, -2.9357627440163014e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-9.488743124563825e-12, -1.9754309299457873e-11, -1.8806067814125527e-12, 3.674127668773508e-11, -6.237110827811421e-11, -4.088129834656229e-11, -1.3145262656166778e-11, -3.7597480684326e-11, -1.89788185167572e-11, -1.142108629892391e-11, -4.8282600140225895e-11, -5.814793091474257e-12, 7.74391661906293e-11, -1.2251533121343527e-10, -8.601674927888325e-11, -2.378175434358809e-11, -7.766420839772081e-11, -4.848876855589879e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5934586983235022e-11, -4.880940096541053e-11, 7.35502769799723e-11, -1.0904566138947303e-10, 3.261524383901815e-11, 4.55775417407267e-11, 3.868305675780448e-11, -3.179889684901127e-11, 2.4416024757556443e-12, -3.13112868965959e-11, -9.32716126555988e-11, 1.4853163143868642e-10, -2.244093799674829e-10, 6.644951255907472e-11, 8.762324199551585e-11, 7.765588172503612e-11, -6.135536523288465e-11, 5.694555937907353e-12]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-4.034217404580431e-11, -7.164413506899336e-11, -5.6638249645857286e-11, 2.5853541529841095e-11, 2.4877211401985733e-11, -5.107891887234928e-11, -3.579991858515541e-11, 2.531441722908312e-11, 9.330225481107846e-11, -8.296774378635519e-11, -1.5190926294650353e-10, -1.1547773848263887e-10, 5.0742521295887855e-11, 4.6785242346913947e-11, -1.0813361317474346e-10, -7.155387393709134e-11, 4.8795412155300255e-11, 1.7543166919153919e-10, -5.469846797723221e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.815104202142265e-11, 1.642759261955007e-10, -5.218714349553011e-12, 4.558931010478773e-11, 5.566658245470535e-11, 1.7044587963255253e-10, 2.51776377524493e-12, -8.496792158751987e-11, -1.0220368995561557e-10, -1.750134481781629e-10, 3.107059054485717e-10, -1.826427897810845e-11, 8.541856111321522e-11, 1.110076475185906e-10, 3.545146398664656e-10, 5.616618281578667e-12, -1.773049485009892e-10, -2.0135226819206764e-10, -4.757616522965691e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [3.838995787930344e-11, -1.6219803278261224e-11, -4.776856687982445e-11, 5.844102979324362e-11, 5.526379354137134e-11, 1.0607514866478596e-11, -1.2893242029576868e-11, 3.2405855776573844e-11, 6.978062572216004e-11, 6.59232668454024e-11, 7.90358889446452e-11, -2.6596169711012863e-11, -8.68385363617108e-11, 1.1321943382824884e-10, 1.0711143083597108e-10, 2.2706947433448477e-11, -2.586830749606861e-11, 7.162337389843287e-11, 1.4554402127942012e-10, 1.3201528759054781e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.5887958443604475e-11, -5.618616683022992e-12, -4.453670765514062e-11, -2.3099189228048544e-11, -9.347911333890124e-11, 3.68869379485659e-11, -1.093558577025533e-11, -1.3392731368355726e-11, 4.1209480272641485e-11, -4.9132586887878915e-11, -5.381783907409954e-11, -9.722112004340033e-12, -8.72510952376615e-11, -5.027578353633544e-11, -1.8764845233221195e-10, 7.203171392689e-11, -2.2371327013104292e-11, -2.569755519488126e-11, 7.584199934740354e-11, -9.856171434563521e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [9.740008799496991e-11, 5.555800264289701e-11, 6.230593818656871e-11, 4.1990189103557896e-11, -2.99731350850152e-11, 9.687872726260593e-11, -1.783923009313071e-10, 6.468603430676012e-12, -8.688094688125148e-11, -6.249589734608207e-11, 1.9689516683740749e-10, 1.2034284679884877e-10, 1.1907608232775146e-10, 9.481526674903762e-11, -4.992772861811545e-11, 1.8845547344881197e-10, -3.5811331677848557e-10, 1.5941248321382773e-11, -1.8105061894146957e-10, -1.3001189014261172e-10, -6.845302102931328e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.628064763702923e-11, 2.0532020528207795e-11, 2.8377522554023926e-11, -7.405442925545458e-11, -7.727485318298477e-12, 6.517453243759519e-12, -2.5276336579338476e-11, -1.4446110974120074e-11, 4.14988043928588e-11, 6.063771706976695e-11, -1.5652501517138262e-10, 3.221534150554817e-11, 5.694644755749323e-11, -1.5068901682013802e-10, -1.1896705842673327e-11, 1.372879587790976e-11, -5.254652268860127e-11, -3.806477355539073e-11, 9.662759481443572e-11, 1.2060596965568493e-10, 1.056932319443149e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [5.184919160683421e-11, 1.341973199231461e-10, -3.2026825635966816e-11, 1.586368814088246e-10, -1.606784705288078e-10, -8.885037150463404e-11, -3.020028671585351e-12, 1.6292300841769247e-11, -1.5172862966039702e-11, -3.416966709579583e-11, 6.662692619840982e-11, 1.170770147496114e-10, 2.556015399335365e-10, -6.4655281128978e-11, 2.969013923603825e-10, -3.168074691473066e-10, -1.7917711758741461e-10, -5.380251799635971e-12, 3.2950531192454946e-11, -2.3308799335097774e-11, -7.587697137267924e-11, 1.3601164638998853e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.233180721044619e-11, 4.853140112004439e-11, -1.1184653203599737e-10, 7.279510327862226e-12, -1.5217604953932096e-11, 1.6717871531568562e-10, 8.357092795563403e-12, 7.145373182027015e-11, 1.2662315640454835e-11, -3.079914101533632e-11, -4.978151224577232e-11, -1.3614154248386967e-10, 8.894440739481979e-11, -2.2623802831134299e-10, 1.4913181800579878e-11, -3.581346330605584e-11, 3.361713130090038e-10, 2.3393065262666823e-11, 1.4390111324757981e-10, 2.595168524521796e-11, -6.414890840744647e-11, -1.0138534456416437e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [3.167954787386407e-11, 6.009415187691047e-12, -2.700739631933402e-11, 3.983369190052599e-11, -9.552059143658198e-11, -1.0077827461429933e-11, -5.527134305793879e-12, -9.380485277432626e-11, 9.193423800013534e-11, -6.1203264678511005e-12, -8.985501231961734e-11, 6.11446449028108e-11, 1.4183543228796225e-11, -5.5929816333843974e-11, 8.494094316802148e-11, -1.775244395929576e-10, -2.2193247239954417e-11, -1.0170531083986134e-11, -1.8817836178186553e-10, 1.8364576526153087e-10, -5.125677660089423e-12, -1.8842083449044367e-10, -1.351474487876203e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.969291893061836e-11, -2.2053803228061497e-11, 8.387512906438133e-12, 1.424993456566881e-11, 1.7008172648047548e-11, -9.634737452302033e-12, -3.067002207757241e-11, -1.0728340438248551e-10, -1.0828560270681464e-11, 1.8071988350243373e-11, 1.829869589187183e-12, 1.5048762236347102e-10, -4.5336290277475655e-11, 2.1915580461495665e-11, 2.7819968551057173e-11, 2.717115421546623e-11, -1.570099605885389e-11, -6.041378508570006e-11, -1.9550971952497775e-10, -1.7171264410364984e-11, 2.7551294579097885e-11, -1.0418332863082469e-12, -1.8740786700277567e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [8.101963544504542e-12, 7.878808716554886e-12, 7.916334254787216e-12, -3.6185499041607727e-12, -4.421241150964761e-12, 8.432587961237914e-12, -3.7436942434965204e-11, 6.430855847838757e-12, 4.2160053226325545e-11, 1.7818191366814062e-11, 2.1733281840852214e-11, 4.522693330955008e-11, 1.6000090141687906e-11, 1.4725554109418226e-11, 1.609246069733672e-11, -9.713008175538107e-12, -1.1231904295527784e-11, 1.7158940934791644e-11, -7.452305439414886e-11, 1.2192913345643319e-11, 8.373057802657513e-11, 3.721467578543525e-11, 4.6658454877501754e-11, 9.422951308124539e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.330406895760916e-10, 1.2097878254735406e-11, 2.000399845769607e-11, -4.083944293853392e-11, 1.1757683715529765e-10, 3.071276566402048e-11, 5.63677993170586e-11, -5.3185233994668124e-11, -4.138889231342091e-11, 7.721911998714859e-11, -1.2658918357999482e-10, -2.500333273758315e-12, 2.8915092542547427e-10, 2.0264456779273132e-11, 3.5106362261672075e-11, -8.607548007688592e-11, 2.245619246110664e-10, 4.859690427849728e-11, 1.1370637764684943e-10, -1.0585099463611414e-10, -8.257294847879848e-11, 1.6068657515688756e-10, -2.3974500162893264e-10, 9.414691248821327e-14]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
