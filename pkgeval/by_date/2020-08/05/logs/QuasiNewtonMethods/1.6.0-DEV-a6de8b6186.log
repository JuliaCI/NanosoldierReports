Julia Version 1.6.0-DEV.587
Commit a6de8b6186 (2020-08-05 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed UnPack ────────────── v1.0.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed SIMDPirates ───────── v0.8.21
  Installed VectorizationBase ─── v0.12.30
  Installed OffsetArrays ──────── v1.1.2
  Installed SLEEFPirates ──────── v0.5.5
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_KP4UDX/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_KP4UDX/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [1.8929080525253994e-11, 4.234657069446257e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.329692408575283e-13, -1.5033529976449245e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1195033788879982e-10, -2.100438711849506e-10, -2.00595895449851e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5065726444163374e-12, 2.94275714907144e-12, 3.4248825997451604e-11]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-4.5290438066558636e-12, -2.21589413484935e-12, -9.2228447101661e-12, -4.742650716593744e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.6872617726355656e-11, -1.0180856158115148e-10, -1.2557843653837608e-10, -2.1375146097568631e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2234103447260622e-11, 8.256506589532364e-12, -5.547473591605012e-11, 1.8801626922027026e-11, 9.53526146929562e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4140355553138306e-10, 1.1377432329595649e-10, -2.887849959165578e-10, 2.090481121541643e-10, -1.3107237517573367e-9]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.1698242374791334e-10, -5.1968540581981415e-11, -8.227085679379798e-12, 2.2554336176483503e-10, -1.0541612027736846e-10, -6.174838418360196e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.845146506227138e-11, 6.579958800045915e-11, -4.072997494830588e-11, 1.0075806855525116e-10, 1.3853207470049256e-10, -7.12927494816995e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-4.681366405634435e-12, -3.999023334699814e-13, -1.1904699448450629e-11, -9.330758388159666e-12, 6.361577931102147e-13, -2.3702151352722467e-11, -1.454392162258955e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1142421147146706e-11, -7.284017833342205e-11, 3.6677549886121597e-11, -4.0362491127154954e-11, -1.4667367320697622e-10, 7.963518733333785e-11, 8.393263861705691e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.6632473176514395e-11, -1.53449475348566e-11, 8.370881765529248e-11, 5.178990569731923e-11, 3.508193735513032e-11, -2.7715940653649795e-11, 1.783919678643997e-10, 1.0367440239633652e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.819678155522979e-11, -2.897959650027815e-11, -2.4308111079562877e-11, -2.5714874674065413e-11, 1.3740719673194235e-10, -5.983147310928416e-11, -5.087219534516407e-11, -5.0994541922477765e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [6.731504242907249e-12, -4.384492768849668e-12, 6.190381540704948e-12, 3.839595308363641e-12, 1.3312906332885177e-11, -7.2054584521197285e-12, 1.3300915924219225e-11, 6.799227847409384e-12, 2.8681501618166294e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.814937668688572e-11, 4.903211170415034e-11, -7.594991302539711e-11, -3.433597850488468e-11, -1.7481771585892147e-10, 9.863576622137771e-11, -1.552283857009229e-10, -6.068712199436277e-11, 1.1607559358139952e-10]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [4.323430502495285e-12, -1.4419132554621683e-11, 1.112931968805242e-11, -1.6368018052048683e-12, -7.037259663889017e-12, 8.550049557243256e-12, -2.7159829940615055e-11, 2.3027579842960222e-11, -1.5802914532514478e-12, -1.3982814905943997e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3506529228379804e-11, -1.9448886945383492e-11, -4.1792458382872155e-11, -1.138489302832113e-11, 3.200573139849894e-11, -2.707534196844108e-11, -3.865741060593564e-11, -8.460376843544282e-11, -2.0840884573658514e-11, 5.916800382976817e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [3.965716643961059e-13, -1.901589996577968e-12, 1.4526602143405398e-11, 5.429501293008343e-11, -2.398381493406987e-11, -3.0386804183990535e-12, 2.595701431573616e-13, 3.579891938443325e-11, 1.1017098344723308e-10, -5.243738776528062e-11, 1.3505951912407e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.090749878253973e-11, -1.8389734179891093e-11, 2.8553159836519626e-11, 1.559685713914405e-11, -2.0344836926255994e-12, -5.969724714560698e-11, -3.743283460977409e-11, 5.7057025770745895e-11, 2.9761526576521646e-11, -3.4294789230671086e-12, -1.4996892616636615e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-5.843558970042295e-11, -1.0313760956393025e-10, -1.3051559832888415e-11, -1.3935519405094965e-12, -3.931077685592754e-11, -9.081957408341168e-12, -1.1786083220499677e-10, -2.0189638849643643e-10, -2.9361180153841815e-11, -1.2715384301031918e-12, -7.922551503725117e-11, -2.2035928637365032e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1804901500767073e-10, 4.873434988894587e-11, -3.8838154914344614e-11, -2.41202613437963e-11, -6.996958568095124e-11, 7.403522239712856e-11, -2.4090873740334473e-10, 7.823164338560673e-11, -8.85214124224376e-11, -4.642486395312062e-11, -1.4946188731101984e-10, 1.6943024760962544e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-3.996558639585146e-11, -2.016420364014948e-11, -2.4542368137758785e-11, 1.0274670003695974e-11, -9.415024315728715e-12, 3.285793859220121e-11, -7.812106517235406e-11, -4.0594194672394224e-11, -4.881817172730507e-11, 1.9567680809018384e-11, -2.0832890967881212e-11, 6.479194958330936e-11, 7.260858581048524e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [3.5249358987243795e-11, -3.783662272383026e-11, 1.6399326341343112e-11, -5.363376409661669e-12, 5.9958704667906204e-12, -7.270795077118919e-11, 7.067368912316851e-11, -7.843115046313187e-11, 3.6661118585357144e-11, -1.315636488641303e-11, 2.043698543729988e-11, -1.5364098882031385e-10, 4.736655512260768e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-8.37241387330323e-12, -1.0970557795531022e-11, -1.7546941677437644e-10, -1.404165672624913e-11, 1.7041057454036945e-10, -9.096801090180406e-11, -1.5433965216971046e-10, 3.950617610826157e-12, -4.040212608913407e-11, -3.487626853981851e-10, -3.358135991504696e-11, 3.450657537484858e-10, -1.8042478622248836e-10, -3.1707636516387083e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.368894052613314e-11, 7.705169835503511e-11, -3.160816053338067e-11, 1.2477952004985582e-10, -5.957312421145389e-11, -8.8662410746565e-11, 3.8854475192806603e-11, -6.85853596138486e-11, 1.4655032742894036e-10, -6.588374290572574e-11, 2.3628010659138e-10, -1.198469101737487e-10, -1.7362744575422084e-10, 7.467471085931265e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-4.568068145971438e-11, -2.0817236823233998e-11, 3.623235045324691e-11, -1.3575029988999177e-11, -7.93592969117185e-11, 2.2702950630559826e-11, 1.5281109710940655e-12, -8.941047902055743e-11, -3.6189384822193915e-11, 6.942690866651446e-11, -2.7404412072939976e-11, -1.5461576463593474e-10, 4.7087445054216914e-11, 3.538946913295149e-12, -3.33333360913457e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7671164531662953e-10, -8.261757944438841e-11, -1.7726997647571352e-10, -6.364642146650112e-11, -1.8375634347478353e-11, -5.274491954310179e-11, 9.707035175665624e-11, -3.46116690863596e-10, -1.5494705518648288e-10, -3.711059237687664e-10, -1.1969158997260365e-10, -3.72506470114331e-11, -9.326905914264216e-11, 2.0103274600558052e-10, 4.512168416681561e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-5.516831436125358e-11, 1.1131917609930042e-10, -4.748357262940317e-11, -6.141087638411591e-12, -1.8969159576442962e-11, -6.804001806415272e-12, 3.615996391204135e-11, 1.131073013027617e-11, -1.084998757505673e-10, 2.2135404620371446e-10, -9.302347780959508e-11, -1.6673107339215676e-11, -3.5865865832818145e-11, -8.856693156644724e-12, 7.43354267029872e-11, 1.8709478410983138e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5648373142294076e-11, 1.6299628313731773e-11, 1.7137580243797856e-10, 1.1461809279467161e-10, -9.518175136946638e-11, 1.3203749205104032e-10, 1.6542545111519757e-11, -7.86372078565023e-11, -7.144673741521501e-11, 3.3334890403580175e-11, 3.345992372061346e-10, 2.473357074705973e-10, -1.8390977629678673e-10, 2.661486586674755e-10, 3.182809571455891e-11, -1.6483403530997975e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.066813304362313e-11, -1.8967460935215286e-10, 3.3465896720485944e-11, 5.1882942386782815e-11, 1.9071366708089954e-10, -5.16952036733187e-11, 3.1511593334698773e-10, -1.4309098350651084e-10, 1.7964962850669508e-11, -3.812856697038569e-10, 6.286060560967144e-11, 1.0538170336360508e-10, 3.8957126413663445e-10, -1.0784906301353203e-10, 6.385394435426406e-10, -3.097456735545734e-10, 2.535549548099425e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.44472211971447e-11, -7.952416503087534e-12, 1.2709389096698942e-11, 3.190558928167775e-12, 1.8736123763574142e-11, -8.397449402508528e-11, -4.279243626115203e-12, 2.8304247834398666e-11, -2.6247670703583026e-11, -1.8302137583248168e-11, 2.813149713176699e-11, 2.0796697697278432e-12, 3.28108651359571e-11, -1.6497092580891604e-10, -9.961809155356605e-12, 5.62019319971796e-11, -2.3092638912203256e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-5.1987081306492655e-11, -5.66441338278878e-11, 8.338862933499058e-11, 1.7267365315376537e-10, -7.98228150244995e-11, 1.8780754729164073e-11, -7.147304970089863e-11, -1.2880196909037522e-10, -1.2258560833089405e-10, -1.0841372244385639e-10, -1.1839906832733504e-10, 1.66460845107963e-10, 3.3585689784843e-10, -1.6317991402559073e-10, 2.96112023789874e-11, -1.4127121694684774e-10, -2.781019858844047e-10, -2.428920398145351e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3262835274474583e-10, 2.114086683491223e-11, -6.2251759302967e-11, 8.02911070962864e-11, -8.24333934446031e-11, 3.1197933125781674e-11, 1.320745735000628e-10, -9.344525153665018e-11, 7.182809902417375e-11, -2.601503457100307e-10, 3.9043879240807655e-11, -1.275634042841034e-10, 1.6353585152728556e-10, -1.7054468948174417e-10, 5.7124971419852955e-11, 2.7067059704677376e-10, -1.897263457451004e-10, 1.495534807105514e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-3.1870617256402056e-11, -4.2549741507968974e-11, 1.065687538215343e-10, -1.845955610590977e-10, -6.447986589108723e-11, -2.4852675473141517e-11, -2.7720825634958146e-11, 3.325340003357269e-11, -7.219302933236804e-11, -6.913880579162424e-11, -7.998279816234799e-11, 2.1433654850966377e-10, -3.670022064028444e-10, -1.2285195083450162e-10, -4.75290917734128e-11, -5.953937343150528e-11, 6.598521729017648e-11, -1.3992884628777347e-10, -6.953437825529818e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [8.070433210605188e-12, -3.0200619782760896e-11, 1.9328982858723975e-12, -2.430866619107519e-11, 4.582689783205751e-11, -3.364486467205552e-11, 4.026912137078398e-11, 4.647149332015488e-11, 6.437206323539613e-11, 1.6311618722397725e-11, -6.402434138408353e-11, 2.4849011737160254e-12, -4.583711188388406e-11, 8.729572620325143e-11, -6.313050082695781e-11, 7.699774151603833e-11, 9.384537591472508e-11, 1.2243317470961301e-10, -2.0474733020137137e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-4.202516112883359e-11, -1.5772572137251473e-10, 1.24562804515449e-10, 4.650744234169224e-10, -4.647584539441141e-10, 9.728862160329754e-11, -1.7524892648168588e-10, 9.493761332635131e-11, -3.688359617726178e-10, 3.265498982329973e-11, -8.303024934264158e-11, -3.017219807333049e-10, 2.3996293840866656e-10, 9.30758359274364e-10, -9.375445975123853e-10, 1.9605983503367952e-10, -3.5392244690513053e-10, 1.8894730224872092e-10, -7.435826399060375e-10, 6.682077113850937e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.508748847025345e-11, 4.5921044744545725e-12, 7.823741654533478e-12, 4.39870362356487e-13, -1.9063639555838563e-12, -7.755240893914106e-12, 5.262013047513392e-12, 2.1900259383755838e-12, 1.6084245046954493e-11, -9.326317496061165e-12, 7.161848891712452e-11, 5.972777827878417e-12, 1.8267165557972476e-11, 6.06159566984843e-12, -3.802402837038699e-12, -1.4922285629381804e-11, 1.49027457041484e-11, 3.6706193640156926e-12, 3.123790115466818e-11, -1.8083978758909325e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-4.410971587986978e-11, 1.1734702098920025e-10, -1.076992939275101e-10, 2.1497625901645279e-10, 2.5329738306822946e-11, -1.6383561174393435e-11, 1.8801737944329489e-10, -1.9281864993558884e-10, 5.350719867180942e-11, -1.691806694736897e-10, -1.0103795577975916e-10, 2.4309665391797353e-10, -2.0374568698855455e-10, 4.5079318056195916e-10, 4.366795813837143e-11, -4.2911008080182e-11, 4.002849163242672e-10, -3.814156768200405e-10, 1.1204748240345452e-10, -3.324592823261696e-10, 1.9197310408003432e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4751089238984605e-11, -1.6373113975731712e-10, 6.817080233645356e-11, -3.1404101541454565e-11, 4.1340930678757104e-11, 7.641132171443132e-11, -6.599953916719414e-11, -1.8468604423560464e-10, 1.3009593402557584e-12, 5.346256770621949e-11, 2.582289937436144e-11, -3.310411944568159e-10, 1.3347278837727572e-10, -6.075551173267968e-11, 7.860512241109063e-11, 1.478119848741244e-10, -1.3785150798639734e-10, -3.733142683870483e-10, 5.166977956605479e-13, 9.196887695850364e-11, -5.2630122482355546e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.1898171337065833e-10, -1.0716649789799249e-11, 3.825006977820067e-11, 1.3823653333133734e-10, 1.051876363789006e-10, -3.9943270913056494e-11, 1.0941558770127813e-10, 1.0625189617030628e-10, 8.323919331587604e-11, -4.533817765661752e-12, -9.95347138044167e-11, 2.3281332417468548e-10, -1.4274137427605638e-11, 7.753286901390766e-11, 2.7440072436490937e-10, 2.0313195570054177e-10, -7.875089469422392e-11, 2.172126922772577e-10, 2.0988744076078092e-10, 1.6883894282671008e-10, -1.0836886943366153e-11, -2.1632984292807578e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1306067193572744e-11, -1.8351076214173645e-10, 7.483080821657495e-11, -4.004896414500081e-11, -2.2055257620223756e-10, 4.7138737357954597e-11, -3.216107380410449e-10, -2.593927295180265e-10, -6.096256832677227e-11, 5.90316684423442e-11, -9.451106564029033e-12, 2.247313446446242e-12, -3.792719471817918e-10, 1.6243584255448695e-10, -8.500944392864085e-11, -4.284902432871718e-10, 7.862710482697821e-11, -6.53316400978099e-10, -4.975816425556445e-10, -1.1106859876264252e-10, 1.3985168578756202e-10, -2.97681879146694e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-9.336131867598851e-11, -2.6576851830384385e-11, 2.857731828953547e-10, -3.521827274255429e-11, -7.41340322463202e-11, 1.794964177292968e-11, 2.759106276783996e-10, 2.0483614804334138e-11, 7.255551714990816e-11, 2.907132312657268e-10, 1.3624212868990071e-11, -1.812540117995809e-10, -3.621392075103813e-11, 5.789857482341176e-10, -6.690703546752275e-11, -1.334811150499604e-10, 3.9887648739522774e-11, 5.492761800951484e-10, 4.053268831682999e-11, 1.550530814853346e-10, 5.690543591896358e-10, 2.049693748062964e-11, 4.916289597645118e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.465993992866288e-11, 1.6751267040149287e-11, 2.6280755349716856e-11, 5.961964255618568e-11, 4.952860344076271e-11, 7.624811892981143e-11, 6.45172804070171e-12, 3.1261659927395158e-12, -5.3935966803919655e-11, 5.942069059017285e-11, -1.4022338845620652e-11, -2.769628970611393e-11, 4.375788620336607e-11, 4.9797277412721996e-11, 1.1371015240513316e-10, 1.0155565277614187e-10, 1.5751910886763199e-10, 8.619771563189715e-12, 4.682254584054135e-12, -1.0880207845787027e-10, 1.250783920880849e-10, -2.5184410112899513e-11, -8.93729534823251e-13]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [1.3076650873244944e-10, -1.4224121880346274e-10, -7.342981778180047e-11, 1.525410908698177e-10, -8.991363209531755e-11, -5.5175641833216105e-11, 2.986011438110836e-11, -8.599165823852672e-11, -1.0555145646407027e-10, 4.1162628861002304e-11, 5.950973047674779e-11, 4.792588548241383e-11, 2.7103053135135724e-10, -2.920844677234413e-10, -1.4051448893326324e-10, 3.011533245000919e-10, -1.8608914409412591e-10, -1.1060974358656495e-10, 4.7222004084801483e-11, -1.8623802500172815e-10, -2.0836210534724842e-10, 7.989120476281641e-11, 1.2085155098873201e-10, 1.009234917859203e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.642874725149568e-11, -4.4142467459096224e-11, 4.634070904785403e-13, -5.825184778984749e-11, 3.246425350766913e-11, -2.3193780229746608e-11, 6.040945521590402e-12, 3.846700735721242e-12, -9.810929846310046e-12, 3.677036453098026e-11, 1.7665646723230566e-11, -4.494027372459186e-11, -3.799516257174673e-11, -9.120759703051817e-11, -8.936185125207885e-13, -1.167660412804139e-10, 6.307043776132559e-11, -3.843547702331307e-11, 8.500977699554824e-12, 1.1739498262386405e-12, -2.233679907703845e-11, 6.712586042567636e-11, 3.655808988867193e-11, -8.904976755985672e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
