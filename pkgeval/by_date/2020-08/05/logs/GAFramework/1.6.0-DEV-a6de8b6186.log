Julia Version 1.6.0-DEV.587
Commit a6de8b6186 (2020-08-05 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_nWVOrW/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_nWVOrW/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21721440022959385
curgen: 20 fitness: 0.21721440022959385
curgen: 30 fitness: 0.21721440022959385
curgen: 40 fitness: 0.21721440022959385
curgen: 50 fitness: 0.21721440022959385
CoordinateCreature{Vector{Float64}}([-0.2218904817726775], -0.21721440022959385) -0.2218904817726775 -0.21721440022959385
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2578741699843183
curgen: 100 fitness: 3.2583204943386823
curgen: 150 fitness: 3.258339229029069
curgen: 200 fitness: 3.2583400045475885
curgen: 250 fitness: 3.2583574063550897
curgen: 300 fitness: 3.258419208579989
curgen: 350 fitness: 3.258433576968254
curgen: 400 fitness: 3.2584485894627164
curgen: 450 fitness: 3.2584493732796647
curgen: 500 fitness: 3.258456657278108
CoordinateCreature{Vector{Float64}}([-0.2225680490470836, 0.2227047079078609, -0.22323004592841167, -0.222613162359364, -0.22296948401383287, 0.222767788025494, 0.22241243892462026, -0.2222952283289568, 0.22223050938484906, -0.22241933146143628, -0.22247593606731886, -0.22246235288460792, -0.22229664261319534, -0.2228338180142413, -0.2226091177989205], -3.258456657278108) [-0.2225680490470836, 0.2227047079078609, -0.22323004592841167, -0.222613162359364, -0.22296948401383287, 0.222767788025494, 0.22241243892462026, -0.2222952283289568, 0.22223050938484906, -0.22241933146143628, -0.22247593606731886, -0.22246235288460792, -0.22229664261319534, -0.2228338180142413, -0.2226091177989205] -3.258456657278108
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0019172193822498684
curgen: 100 fitness: -0.0017307169449338744
curgen: 150 fitness: -0.0017307169449338744
curgen: 200 fitness: -0.0017291445666671734
curgen: 250 fitness: -0.0017291445666671734
curgen: 300 fitness: -0.0007328194097908636
curgen: 350 fitness: -0.0005769026870154903
curgen: 400 fitness: -0.0005769026870154903
curgen: 450 fitness: -0.0005769026870154903
curgen: 500 fitness: -0.0005769026870154903
CoordinateCreature{Vector{Float64}}([-0.000760601669064376, -0.0004976365508031047, 0.00041951323978245127, 0.00022579001181329038, -0.00016701252067246743, 9.238785442583052e-5, -0.00025486062155304816, 3.7999794393507755e-5, -0.00026802416870144106, -0.0002539395413352297, -0.0003558928481808871, -8.663376263005299e-6, 0.0008607178501519215, -0.0007234892459582671, 0.0004739313245030255], 0.0005769026870154903) [-0.000760601669064376, -0.0004976365508031047, 0.00041951323978245127, 0.00022579001181329038, -0.00016701252067246743, 9.238785442583052e-5, -0.00025486062155304816, 3.7999794393507755e-5, -0.00026802416870144106, -0.0002539395413352297, -0.0003558928481808871, -8.663376263005299e-6, 0.0008607178501519215, -0.0007234892459582671, 0.0004739313245030255] 0.0005769026870154903
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
