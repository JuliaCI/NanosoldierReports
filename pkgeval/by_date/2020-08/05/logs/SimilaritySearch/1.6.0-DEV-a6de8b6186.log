Julia Version 1.6.0-DEV.587
Commit a6de8b6186 (2020-08-05 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.20
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_pgZbDT/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_pgZbDT/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(48, 0.029449105f0), Item(9, 0.04293561f0), Item(13, 0.05710852f0), Item(35, 0.058472633f0)])
Vsorted = Item[Item(48, 0.029449105f0), Item(9, 0.04293561f0), Item(13, 0.05710852f0), Item(35, 0.058472633f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.008120520909627279, 0.004400229454040528, 301.0, 49.211961299180984))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004061357180277506, 0.004502495129903157, 301.0, 71.27646827697754))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004133407274881999, 0.004365094502766927, 301.0, 40.298935651779175))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004194800059000651, 0.00529023011525472, 301.0, 9.0080647834111))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004640428225199381, 0.005127930641174316, 301.0, 44.825880132615566))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001789251963297526, 0.00014763673146565756, 301.0, 176.59677381813526))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.9835116068522136e-5, 0.010728104909261068, 300.0, 25.117127527482808)
p = PerformanceResult(1.0, 1.0, 1.0, 6.144841512044271e-5, 2.8936068216959634e-5, 300.0, 25.117127527482808)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004004081090291341, 0.0035595019658406575, 300.0, 1.3680473789827374)
p = PerformanceResult(1.0, 1.0, 1.0, 4.547701941596137e-5, 2.0503997802734375e-5, 300.0, 1.3680473789827374)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.9835116068522136e-5, 0.010728104909261068, 300.0, 25.117127527482808), PerformanceResult(1.0, 1.0, 1.0, 6.144841512044271e-5, 2.8936068216959634e-5, 300.0, 25.117127527482808), PerformanceResult(1.0, 1.0, 1.0, 0.004004081090291341, 0.0035595019658406575, 300.0, 1.3680473789827374), PerformanceResult(1.0, 1.0, 1.0, 4.547701941596137e-5, 2.0503997802734375e-5, 300.0, 1.3680473789827374))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008262236913045248, 0.004068636894226074, 348.3666666666667, 28678.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.009035976727803548, 0.00438380241394043, 303.23333333333335, 6968.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.849896748860677e-5, 7.430712381998698e-6, 94.1, 49.101854145526886))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5145212809244792e-5, 1.6498565673828126e-5, 86.03333333333333, 71.13991868495941))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.787907918294271e-5, 1.4535586039225261e-5, 87.46666666666667, 40.21247398853302))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.214083353678385e-5, 0.00015186468760172527, 93.96666666666667, 44.72700246423483))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7933333333333333, 0.7933333333333333, 0.7933333333333333, 6.316502888997396e-5, 0.00023713111877441407, 72.33333333333333, 184.645094409585))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-05T18:16:18.523
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9010000000000004, 0.9010000000000004, 0.9010000000000004, 2.1834373474121093e-5, 2.38800048828125e-5, 151.15, 54.27134271571413))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.117633819580078e-5, 1.8270015716552733e-5, 154.86, 0.0))
*** advance 1 from 1000; 2020-08-05T18:16:19.161
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9150000000000003, 0.9150000000000003, 0.9150000000000003, 2.237558364868164e-5, 2.5479793548583985e-5, 151.57, 79.87231037672609))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1042823791503907e-5, 2.0079612731933593e-5, 155.6, 0.0))
*** advance 1 from 1000; 2020-08-05T18:16:19.845
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9170000000000003, 0.9170000000000003, 0.9170000000000003, 2.5951862335205077e-5, 3.1290054321289065e-5, 151.92, 43.26289033703506))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.512931823730469e-5, 2.8710365295410157e-5, 155.79, 0.0))
*** advance 1 from 1000; 2020-08-05T18:16:20.509
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9180000000000003, 0.9180000000000003, 0.9180000000000003, 0.00010060310363769531, 0.0004996585845947265, 150.91, 48.545200776075944))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010134220123291016, 0.0005414295196533203, 154.81, 0.0))
*** advance 1 from 1000; 2020-08-05T18:16:21.066
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8649999999999999, 0.8649999999999999, 0.8649999999999999, 8.385658264160157e-5, 0.0004015302658081055, 150.97, 212.3449300704524))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.998632431030274e-5, 0.0007814693450927734, 154.57, 0.0))
*** advance 1 from 1000; 2020-08-05T18:16:22.237
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9010000000000004, 0.9010000000000004, 0.9010000000000004, 3.294467926025391e-5, 7.838964462280274e-5, 151.15, 54.283957032486796))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.168344497680664e-5, 7.715940475463867e-5, 154.86, 0.014677251339890063))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:24.027
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7610000000000002, 0.7610000000000002, 0.7610000000000002, 0.0014163923263549804, 8.172035217285156e-5, 199.28, 186.6666687875986))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:24.899
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7680000000000001, 0.7680000000000001, 0.7680000000000001, 0.0014968466758728026, 7.39908218383789e-5, 202.4, 105.45238298177719))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:25.719
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6680000000000001, 0.6680000000000001, 0.6680000000000001, 0.001513051986694336, 7.938861846923829e-5, 242.51, 6.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:26.587
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9449999999999997, 0.9449999999999997, 0.9449999999999997, 0.0014983892440795898, 1.9881725311279297e-5, 225.59, 610.8000203222036))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:27.579
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.582, 0.582, 0.582, 0.001614067554473877, 0.0004121494293212891, 249.94, 2347.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:28.529
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.36999999999999994, 0.36999999999999994, NaN, 0.00152010440826416, 0.00044623136520385745, 249.45, 3674.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:16:29.483
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5959999999999998, 0.5959999999999998, 0.5959999999999998, 0.0016017937660217285, 2.771139144897461e-5, 244.17, 2351.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0472727272727274, conf: {"restarts":6}, perf: {"precision":1.0,"recall":0.94921875,"f1":0.9713026556776562,"seconds":6.8731606006622314e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.59375,"distances_sum":774.6127950251102}, best_list's length: 4, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0472727272727274,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713026556776562,"seconds":6.8731606006622314e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.59375,"distances_sum":774.6127950251102}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0472727272727274,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713026556776562,"seconds":6.8731606006622314e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.59375,"distances_sum":774.6127950251102}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0472727272727274,"state":{"restarts":6},"perf":{"precision":1.0,"recall":0.94921875,"f1":0.9713026556776562,"seconds":6.8731606006622314e-6,"exhaustive_search_seconds":1.8365681171417236e-6,"evaluations":8.59375,"distances_sum":774.6127950251102}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.8193826274228284, conf: {"restarts":10}, perf: {"precision":0.9236111111111099,"recall":0.9236111111111099,"f1":0.9236111111111099,"seconds":2.4767592549324036e-5,"exhaustive_search_seconds":7.165595889091492e-6,"evaluations":54.4140625,"distances_sum":262.6748898886144}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 3.0528106269237, conf: {"restarts":7}, perf: {"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":2.2510066628456116e-5,"exhaustive_search_seconds":7.165595889091492e-6,"evaluations":48.2265625,"distances_sum":265.35975563153625}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0528106269237,"state":{"restarts":7},"perf":{"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":2.2510066628456116e-5,"exhaustive_search_seconds":7.165595889091492e-6,"evaluations":48.2265625,"distances_sum":265.35975563153625}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.0528106269237,"state":{"restarts":7},"perf":{"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":2.2510066628456116e-5,"exhaustive_search_seconds":7.165595889091492e-6,"evaluations":48.2265625,"distances_sum":265.35975563153625}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.0528106269237,"state":{"restarts":7},"perf":{"precision":0.9010416666666653,"recall":0.9010416666666653,"f1":0.9010416666666653,"seconds":2.2510066628456116e-5,"exhaustive_search_seconds":7.165595889091492e-6,"evaluations":48.2265625,"distances_sum":265.35975563153625}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888874, conf: {"restarts":14}, perf: {"precision":0.8498263888888874,"recall":0.8498263888888874,"f1":0.8498263888888874,"seconds":5.603209137916565e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":153.3515625,"distances_sum":126.86002988927066}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8498263888888876, conf: {"restarts":1}, perf: {"precision":0.8498263888888876,"recall":0.8498263888888876,"f1":0.8498263888888876,"seconds":2.751871943473816e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":63.7265625,"distances_sum":127.5603718329221}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777767, conf: {"restarts":13}, perf: {"precision":0.8559027777777767,"recall":0.8559027777777767,"f1":0.8559027777777767,"seconds":5.3705647587776184e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":145.96875,"distances_sum":126.66189667768776}, best_list's length: 4, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8637152777777766, conf: {"restarts":12}, perf: {"precision":0.8637152777777766,"recall":0.8637152777777766,"f1":0.8637152777777766,"seconds":0.00013198517262935638,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":140.1484375,"distances_sum":126.23885573260486}, best_list's length: 5, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8585069444444432, conf: {"restarts":17}, perf: {"precision":0.8585069444444432,"recall":0.8585069444444432,"f1":0.8585069444444432,"seconds":6.992369890213013e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":169.546875,"distances_sum":126.33797618560493}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777766, conf: {"restarts":15}, perf: {"precision":0.8715277777777766,"recall":0.8715277777777766,"f1":0.8715277777777766,"seconds":5.935691297054291e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":159.8828125,"distances_sum":126.29729301296175}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8715277777777766,"state":{"restarts":15},"perf":{"precision":0.8715277777777766,"recall":0.8715277777777766,"f1":0.8715277777777766,"seconds":5.935691297054291e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":159.8828125,"distances_sum":126.29729301296175}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8732638888888875, conf: {"restarts":18}, perf: {"precision":0.8732638888888875,"recall":0.8732638888888875,"f1":0.8732638888888875,"seconds":6.901472806930542e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":176.2890625,"distances_sum":125.89165010489523}, best_list's length: 10, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8732638888888875,"state":{"restarts":18},"perf":{"precision":0.8732638888888875,"recall":0.8732638888888875,"f1":0.8732638888888875,"seconds":6.901472806930542e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":176.2890625,"distances_sum":125.89165010489523}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8732638888888875,"state":{"restarts":18},"perf":{"precision":0.8732638888888875,"recall":0.8732638888888875,"f1":0.8732638888888875,"seconds":6.901472806930542e-5,"exhaustive_search_seconds":2.8485432267189026e-5,"evaluations":176.2890625,"distances_sum":125.89165010489523}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8576388888888875, conf: {"restarts":28}, perf: {"precision":0.8576388888888875,"recall":0.8576388888888875,"f1":0.8576388888888875,"seconds":0.00019846297800540924,"exhaustive_search_seconds":0.00035949237644672394,"evaluations":361.28125,"distances_sum":55.716564296744764}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8559027777777766, conf: {"restarts":11}, perf: {"precision":0.8559027777777766,"recall":0.8559027777777766,"f1":0.8559027777777766,"seconds":0.0001143626868724823,"exhaustive_search_seconds":0.00035949237644672394,"evaluations":223.0,"distances_sum":55.96662931982428}, best_list's length: 4, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8576388888888875,"state":{"restarts":28},"perf":{"precision":0.8576388888888875,"recall":0.8576388888888875,"f1":0.8576388888888875,"seconds":0.00019846297800540924,"exhaustive_search_seconds":0.00035949237644672394,"evaluations":361.28125,"distances_sum":55.716564296744764}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8576388888888875,"state":{"restarts":28},"perf":{"precision":0.8576388888888875,"recall":0.8576388888888875,"f1":0.8576388888888875,"seconds":0.00019846297800540924,"exhaustive_search_seconds":0.00035949237644672394,"evaluations":361.28125,"distances_sum":55.716564296744764}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(28), SatNeighborhood(32), 2020-08-05T18:16:37.316
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2315, 0.018821351f0), Item(1726, 0.03867934f0), Item(817, 0.046100024f0), Item(446, 0.05041961f0), Item(1097, 0.053944625f0), Item(1219, 0.055113934f0), Item(724, 0.0568365f0), Item(8525, 0.057509013f0), Item(9907, 0.05964098f0), Item(8135, 0.0603691f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":0.8798828125,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9190772768897775,"seconds":0.0032249148935079575,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.0390625,"distances_sum":706.1158236861229}}, beam: 3, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":0.8798828125,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.8798828125,"f1":0.9190772768897775,"seconds":0.0032249148935079575,"exhaustive_search_seconds":1.8905848264694214e-6,"evaluations":8.0390625,"distances_sum":706.1158236861229}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.017861395570374,"state":{"bsize":3},"perf":{"precision":0.9852430555555552,"recall":0.9852430555555552,"f1":0.9852430555555552,"seconds":1.55474990606308e-5,"exhaustive_search_seconds":1.2991949915885925e-5,"evaluations":32.8046875,"distances_sum":284.7129897829145}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.017861395570374,"state":{"bsize":3},"perf":{"precision":0.9852430555555552,"recall":0.9852430555555552,"f1":0.9852430555555552,"seconds":1.55474990606308e-5,"exhaustive_search_seconds":1.2991949915885925e-5,"evaluations":32.8046875,"distances_sum":284.7129897829145}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.55944055944056,"state":{"bsize":3},"perf":{"precision":0.9774305555555554,"recall":0.9774305555555554,"f1":0.9774305555555554,"seconds":2.866983413696289e-5,"exhaustive_search_seconds":2.9437243938446045e-5,"evaluations":60.328125,"distances_sum":119.65261157415807}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.55944055944056,"state":{"bsize":3},"perf":{"precision":0.9774305555555554,"recall":0.9774305555555554,"f1":0.9774305555555554,"seconds":2.866983413696289e-5,"exhaustive_search_seconds":2.9437243938446045e-5,"evaluations":60.328125,"distances_sum":119.65261157415807}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.8794738452126,"state":{"bsize":3},"perf":{"precision":0.9704861111111108,"recall":0.9704861111111108,"f1":0.9704861111111108,"seconds":5.552172660827637e-5,"exhaustive_search_seconds":0.00039866380393505096,"evaluations":102.15625,"distances_sum":54.45143903512508}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.8794738452126,"state":{"bsize":3},"perf":{"precision":0.9704861111111108,"recall":0.9704861111111108,"f1":0.9704861111111108,"seconds":5.552172660827637e-5,"exhaustive_search_seconds":0.00039866380393505096,"evaluations":102.15625,"distances_sum":54.45143903512508}}, n: 9999
added n=10000, neighborhood=4, BeamSearch(3), SatNeighborhood(32), 2020-08-05T18:16:41.063
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(913, 0.029696332f0), Item(6203, 0.03656917f0), Item(6959, 0.043383047f0), Item(7097, 0.048155423f0), Item(8030, 0.053529497f0), Item(1247, 0.05562644f0), Item(6460, 0.058432557f0), Item(906, 0.0688373f0), Item(3571, 0.071947545f0), Item(5627, 0.07660621f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
