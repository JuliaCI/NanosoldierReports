Julia Version 1.6.0-DEV.580
Commit 8a6656016b (2020-08-04 16:02 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.20
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.20
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_xvusrT/Project.toml`
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_xvusrT/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.20
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(36, 0.021511436f0), Item(7, 0.07030976f0), Item(2, 0.076682925f0), Item(9, 0.08220291f0)])
Vsorted = Item[Item(36, 0.021511436f0), Item(7, 0.07030976f0), Item(2, 0.076682925f0), Item(9, 0.08220291f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0042459964752197266, 0.004367939631144206, 301.0, 53.185411954298615))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004053632418314616, 0.004502232869466146, 301.0, 76.47274935245514))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0040610313415527345, 0.0042163610458374025, 301.0, 43.59469771385193))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004004057248433431, 0.003379360834757487, 301.0, 10.495847870537546))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004235005378723145, 0.005220301946004232, 301.0, 48.34822456352413))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00019544760386149088, 0.00020453135172526042, 301.0, 187.6964719593525))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.046295166015625e-5, 0.010739930470784505, 300.0, 26.21426650835201)
p = PerformanceResult(1.0, 1.0, 1.0, 6.299813588460287e-5, 2.9500325520833334e-5, 300.0, 26.21426650835201)
p = PerformanceResult(1.0, 1.0, 1.0, 0.005706667900085449, 0.0033443371454874673, 300.0, 1.3626382123707117)
p = PerformanceResult(1.0, 1.0, 1.0, 4.839367336697048e-5, 2.1370251973470054e-5, 300.0, 1.3626382123707117)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.046295166015625e-5, 0.010739930470784505, 300.0, 26.21426650835201), PerformanceResult(1.0, 1.0, 1.0, 6.299813588460287e-5, 2.9500325520833334e-5, 300.0, 26.21426650835201), PerformanceResult(1.0, 1.0, 1.0, 0.005706667900085449, 0.0033443371454874673, 300.0, 1.3626382123707117), PerformanceResult(1.0, 1.0, 1.0, 4.839367336697048e-5, 2.1370251973470054e-5, 300.0, 1.3626382123707117))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 117.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008010792732238769, 0.0038137276967366534, 348.26666666666665, 28599.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.00947585900624593, 0.00419466495513916, 303.96666666666664, 6998.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.488295237223307e-5, 1.3860066731770833e-5, 97.9, 53.1428951267153))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2721290588378906e-5, 1.2636184692382812e-5, 87.23333333333333, 76.39440059661865))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.7894973754882812e-5, 1.6196568806966147e-5, 92.1, 43.57225751876831))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.231004079182943e-5, 0.00015926361083984375, 97.36666666666666, 48.31334233097732))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.82, 0.82, 0.82, 4.9789746602376304e-5, 0.00012579758961995443, 71.63333333333334, 195.7248238325119))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-05T18:56:29.133
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.924, 0.917, 0.9186153846153846, 2.538919448852539e-5, 2.179861068725586e-5, 150.81, 49.39380422234535))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.4378299713134766e-5, 2.0079612731933593e-5, 154.07, 0.0))
*** advance 1 from 1000; 2020-08-05T18:56:29.783
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.909, 0.905, 0.9063333333333334, 2.224922180175781e-5, 2.6071071624755858e-5, 150.85, 74.5045042866841))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.1274089813232423e-5, 2.1238327026367187e-5, 154.05, 0.0))
*** advance 1 from 1000; 2020-08-05T18:56:30.386
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.9053333333333333, 0.902, 0.90325, 2.337455749511719e-5, 3.316164016723633e-5, 151.43, 41.379345764406025))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.352714538574219e-5, 3.0319690704345704e-5, 154.72, 0.0))
*** advance 1 from 1000; 2020-08-05T18:56:31.020
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9200000000000003, 0.9140000000000001, 0.9157142857142858, 9.630441665649414e-5, 0.00047312021255493166, 151.75, 44.654988312278874))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 9.674549102783202e-5, 0.0005133986473083496, 155.07, 0.0))
*** advance 1 from 1000; 2020-08-05T18:56:31.533
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8905555555555559, 0.8900000000000002, 0.8902631578947371, 8.101940155029297e-5, 0.00037853002548217775, 150.48, 197.20440854737535))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 8.176088333129883e-5, 0.00040742158889770506, 153.54, 0.0))
*** advance 1 from 1000; 2020-08-05T18:56:32.691
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.924, 0.917, 0.9186153846153846, 2.2149085998535158e-5, 5.269050598144531e-5, 150.81, 49.402255253400654))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 2.0668506622314453e-5, 4.407167434692383e-5, 154.07, 0.015359047160018235))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:34.523
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7490000000000002, 0.7490000000000002, 0.7490000000000002, 0.001473701000213623, 8.203983306884766e-5, 200.64, 194.70000234246254))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:35.426
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7350000000000001, 0.7350000000000001, 0.7350000000000001, 0.0014714145660400392, 7.953166961669921e-5, 203.01, 112.16190681606531))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:36.225
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6320000000000001, 0.6320000000000001, 0.6320000000000001, 0.0014486956596374513, 7.778882980346679e-5, 255.29, 2.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:37.048
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9360000000000004, 0.9360000000000004, 0.9360000000000004, 0.0014838790893554688, 2.0320415496826173e-5, 220.6, 602.4000205844641))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:37.978
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.598, 0.598, 0.598, 0.0015599155426025391, 0.00036728858947753906, 259.2, 2330.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:38.888
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3949999999999998, 0.3949999999999998, NaN, 0.0015319514274597169, 0.0004645514488220215, 253.0, 3668.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-05T18:56:39.782
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.6190000000000001, 0.6190000000000001, 0.6190000000000001, 0.0014505314826965333, 3.105878829956055e-5, 250.23, 2342.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0304114490161003, conf: {"restarts":4}, perf: {"precision":1.0,"recall":0.966796875,"f1":0.9816792582417584,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.734375,"distances_sum":550.1498705223203}, best_list's length: 2, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0304114490161003,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816792582417584,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.734375,"distances_sum":550.1498705223203}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0304114490161003,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816792582417584,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.734375,"distances_sum":550.1498705223203}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0304114490161003,"state":{"restarts":4},"perf":{"precision":1.0,"recall":0.966796875,"f1":0.9816792582417584,"seconds":5.0049275159835815e-6,"exhaustive_search_seconds":1.9688159227371216e-6,"evaluations":8.734375,"distances_sum":550.1498705223203}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.7493097736057424, conf: {"restarts":11}, perf: {"precision":0.9149305555555545,"recall":0.9149305555555545,"f1":0.9149305555555545,"seconds":2.4810433387756348e-5,"exhaustive_search_seconds":7.016584277153015e-6,"evaluations":56.59375,"distances_sum":268.7917834110558}, best_list's length: 4, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7493097736057424,"state":{"restarts":11},"perf":{"precision":0.9149305555555545,"recall":0.9149305555555545,"f1":0.9149305555555545,"seconds":2.4810433387756348e-5,"exhaustive_search_seconds":7.016584277153015e-6,"evaluations":56.59375,"distances_sum":268.7917834110558}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.7493097736057424,"state":{"restarts":11},"perf":{"precision":0.9149305555555545,"recall":0.9149305555555545,"f1":0.9149305555555545,"seconds":2.4810433387756348e-5,"exhaustive_search_seconds":7.016584277153015e-6,"evaluations":56.59375,"distances_sum":268.7917834110558}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.7493097736057424,"state":{"restarts":11},"perf":{"precision":0.9149305555555545,"recall":0.9149305555555545,"f1":0.9149305555555545,"seconds":2.4810433387756348e-5,"exhaustive_search_seconds":7.016584277153015e-6,"evaluations":56.59375,"distances_sum":268.7917834110558}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8689236111111097,"state":{"restarts":11},"perf":{"precision":0.8689236111111097,"recall":0.8689236111111097,"f1":0.8689236111111097,"seconds":4.835985600948334e-5,"exhaustive_search_seconds":2.6796013116836548e-5,"evaluations":133.78125,"distances_sum":124.02244700305164}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8689236111111097,"state":{"restarts":11},"perf":{"precision":0.8689236111111097,"recall":0.8689236111111097,"f1":0.8689236111111097,"seconds":4.835985600948334e-5,"exhaustive_search_seconds":2.6796013116836548e-5,"evaluations":133.78125,"distances_sum":124.02244700305164}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.867187499999999,"state":{"restarts":11},"perf":{"precision":0.867187499999999,"recall":0.867187499999999,"f1":0.867187499999999,"seconds":0.00010742992162704468,"exhaustive_search_seconds":0.00039185211062431335,"evaluations":213.2734375,"distances_sum":57.475262398831546}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.867187499999999,"state":{"restarts":11},"perf":{"precision":0.867187499999999,"recall":0.867187499999999,"f1":0.867187499999999,"seconds":0.00010742992162704468,"exhaustive_search_seconds":0.00039185211062431335,"evaluations":213.2734375,"distances_sum":57.475262398831546}}, n: 9999
added n=10000, neighborhood=5, IHCSearch(11), SatNeighborhood(32), 2020-08-05T18:56:47.042
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(1908, 0.012411006f0), Item(4468, 0.025117973f0), Item(8697, 0.03355983f0), Item(5539, 0.040298466f0), Item(9421, 0.041220684f0), Item(8670, 0.042398155f0), Item(8455, 0.04372678f0), Item(9430, 0.044956297f0), Item(6652, 0.046833992f0), Item(5422, 0.051396303f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0294906166219837, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.9677734375,"f1":0.9803800366300369,"seconds":7.096678018569946e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7421875,"distances_sum":544.4073011577129}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0387736699729486, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9580078125,"f1":0.9753033424908426,"seconds":6.6999346017837524e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.6640625,"distances_sum":539.3610395789146}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0258236865538732, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9716796875,"f1":0.9845982142857145,"seconds":6.3516199588775635e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.7734375,"distances_sum":547.5910645723343}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.0387736699729486,"state":{"bsize":5},"perf":{"precision":1.0,"recall":0.9580078125,"f1":0.9753033424908426,"seconds":6.6999346017837524e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.6640625,"distances_sum":539.3610395789146}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0816901408450703, conf: {"bsize":7}, perf: {"precision":1.0,"recall":0.9150390625,"f1":0.9515167124542131,"seconds":5.930662155151367e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3203125,"distances_sum":507.3698301911354}, best_list's length: 5, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.07563025210084, conf: {"bsize":1}, perf: {"precision":1.0,"recall":0.9208984375,"f1":0.9528846153846157,"seconds":5.356967449188232e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.3671875,"distances_sum":509.38747477531433}, best_list's length: 6, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.094017094017094, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9435210622710628,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.2265625,"distances_sum":502.08243480324745}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.094017094017094,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9435210622710628,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.2265625,"distances_sum":502.08243480324745}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.094017094017094,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9435210622710628,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.2265625,"distances_sum":502.08243480324745}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.094017094017094,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9435210622710628,"seconds":6.137415766716003e-6,"exhaustive_search_seconds":1.8514692783355713e-6,"evaluations":8.2265625,"distances_sum":502.08243480324745}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.6762407602956704, conf: {"bsize":5}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":1.8134713172912598e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":36.9921875,"distances_sum":271.45841762796044}, best_list's length: 4, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.105882352941176, conf: {"bsize":3}, perf: {"precision":0.9652777777777773,"recall":0.9652777777777773,"f1":0.9652777777777773,"seconds":1.646392047405243e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":31.875,"distances_sum":272.37309512868524}, best_list's length: 5, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.105882352941176,"state":{"bsize":3},"perf":{"precision":0.9652777777777773,"recall":0.9652777777777773,"f1":0.9652777777777773,"seconds":1.646392047405243e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":31.875,"distances_sum":272.37309512868524}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.384615384615385, conf: {"bsize":2}, perf: {"precision":0.9279513888888884,"recall":0.9279513888888884,"f1":0.9279513888888884,"seconds":1.5566125512123108e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":29.25,"distances_sum":275.30596912279725}, best_list's length: 6, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.384615384615385,"state":{"bsize":2},"perf":{"precision":0.9279513888888884,"recall":0.9279513888888884,"f1":0.9279513888888884,"seconds":1.5566125512123108e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":29.25,"distances_sum":275.30596912279725}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.384615384615385,"state":{"bsize":2},"perf":{"precision":0.9279513888888884,"recall":0.9279513888888884,"f1":0.9279513888888884,"seconds":1.5566125512123108e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":29.25,"distances_sum":275.30596912279725}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.384615384615385,"state":{"bsize":2},"perf":{"precision":0.9279513888888884,"recall":0.9279513888888884,"f1":0.9279513888888884,"seconds":1.5566125512123108e-5,"exhaustive_search_seconds":7.88271427154541e-6,"evaluations":29.25,"distances_sum":275.30596912279725}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.0,"state":{"bsize":2},"perf":{"precision":0.9496527777777769,"recall":0.9496527777777769,"f1":0.9496527777777769,"seconds":3.0703842639923096e-5,"exhaustive_search_seconds":2.87666916847229e-5,"evaluations":62.4375,"distances_sum":121.68908574711531}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.0,"state":{"bsize":2},"perf":{"precision":0.9496527777777769,"recall":0.9496527777777769,"f1":0.9496527777777769,"seconds":3.0703842639923096e-5,"exhaustive_search_seconds":2.87666916847229e-5,"evaluations":62.4375,"distances_sum":121.68908574711531}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.33714159357264, conf: {"bsize":5}, perf: {"precision":0.9956597222222221,"recall":0.9956597222222221,"f1":0.9956597222222221,"seconds":7.396005094051361e-5,"exhaustive_search_seconds":0.00037803128361701965,"evaluations":105.9921875,"distances_sum":54.088795074494556}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.66508875739645, conf: {"bsize":3}, perf: {"precision":0.9696180555555551,"recall":0.9696180555555551,"f1":0.9696180555555551,"seconds":6.496533751487732e-5,"exhaustive_search_seconds":0.00037803128361701965,"evaluations":105.625,"distances_sum":54.3014492590446}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 96.51283582089552, conf: {"bsize":7}, perf: {"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.038377225399017e-5,"exhaustive_search_seconds":0.00037803128361701965,"evaluations":104.6875,"distances_sum":54.08298554387875}, best_list's length: 7, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.51283582089552,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.038377225399017e-5,"exhaustive_search_seconds":0.00037803128361701965,"evaluations":104.6875,"distances_sum":54.08298554387875}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":96.51283582089552,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.038377225399017e-5,"exhaustive_search_seconds":0.00037803128361701965,"evaluations":104.6875,"distances_sum":54.08298554387875}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":96.51283582089552,"state":{"bsize":7},"perf":{"precision":0.9991319444444444,"recall":0.9991319444444444,"f1":0.9991319444444444,"seconds":7.038377225399017e-5,"exhaustive_search_seconds":0.00037803128361701965,"evaluations":104.6875,"distances_sum":54.08298554387875}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(7), SatNeighborhood(32), 2020-08-05T18:56:50.986
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5504, 0.04400391f0), Item(1609, 0.0457765f0), Item(8657, 0.04899516f0), Item(7430, 0.0560885f0), Item(8253, 0.056328367f0), Item(6941, 0.058237907f0), Item(6341, 0.059111062f0), Item(3517, 0.067062296f0), Item(8612, 0.0679079f0), Item(2586, 0.07204661f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
