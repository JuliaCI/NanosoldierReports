Julia Version 1.6.0-DEV.636
Commit 8554a216e7 (2020-08-14 06:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed InterpretMe â”€ v0.1.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [e2b23942] + InterpretMe v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e2b23942] + InterpretMe v0.1.0
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
    Testing InterpretMe
Status `/tmp/jl_3rqGry/Project.toml`
  [e2b23942] InterpretMe v0.1.0
  [ce6b1742] RDatasets v0.6.10
  [3646fa90] ScikitLearn v0.6.2
  [37e2e46d] LinearAlgebra
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_3rqGry/Manifest.toml`
  [336ed68f] CSV v0.7.7
  [324d7699] CategoricalArrays v0.8.1
  [944b1d66] CodecZlib v0.7.0
  [34da2185] Compat v3.13.0
  [8f4d0f93] Conda v1.4.1
  [9a962f9c] DataAPI v1.3.0
  [a93c6f00] DataFrames v0.21.6
  [864edb3b] DataStructures v0.17.20
  [e2d170a0] DataValueInterfaces v1.0.0
  [e2ba6199] ExprTools v0.1.1
  [8f5d6c58] EzXML v1.1.0
  [5789e2e9] FileIO v1.4.1
  [e2b23942] InterpretMe v0.1.0
  [41ab1584] InvertedIndices v1.0.0
  [c8e1da08] IterTools v1.3.0
  [82899510] IteratorInterfaceExtensions v1.0.0
  [682c06a0] JSON v0.21.0
  [94ce4f54] Libiconv_jll v1.16.0+5
  [1914dd2f] MacroTools v0.5.5
  [e1d29d7a] Missings v0.4.3
  [78c3b35d] Mocking v0.7.1
  [bac558e1] OrderedCollections v1.3.0
  [d96e819e] Parameters v0.12.1
  [69de0a69] Parsers v1.0.10
  [2dfb63ee] PooledArrays v0.5.3
  [438e738f] PyCall v1.91.4
  [df47a6cb] RData v0.7.2
  [ce6b1742] RDatasets v0.6.10
  [3cdcf5f2] RecipesBase v1.0.2
  [189a3867] Reexport v0.2.0
  [ae029012] Requires v1.0.1
  [3646fa90] ScikitLearn v0.6.2
  [6e75b9c4] ScikitLearnBase v0.5.0
  [91c51154] SentinelArrays v1.2.11
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.33.0
  [3783bdb8] TableTraits v1.0.0
  [bd369af6] Tables v1.0.5
  [f269a46b] TimeZones v1.3.2
  [3bb67fe8] TranscodingStreams v0.9.5
  [3a884ed6] UnPack v1.0.2
  [81def892] VersionParsing v1.2.0
  [02c8fc9c] XML2_jll v2.9.10+1
  [83775a58] Zlib_jll v1.2.11+15
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
ERROR: LoadError: PyError (PyImport_ImportModule

The Python package sklearn could not be found by pyimport. Usually this means
that you did not install sklearn in the Python version being used by PyCall.

PyCall is currently configured to use the Python version at:

/usr/bin/python3

and you should use whatever mechanism you usually use (apt-get, pip, conda,
etcetera) to install the Python package containing the sklearn module.

One alternative is to re-configure PyCall to use a different Python
version on your system: set ENV["PYTHON"] to the path/name of the python
executable you want to use, run Pkg.build("PyCall"), and re-launch Julia.

Another alternative is to configure PyCall to use a Julia-specific Python
distribution via the Conda.jl package (which installs a private Anaconda
Python distribution), which has the advantage that packages can be installed
and kept up-to-date via Julia.  As explained in the PyCall documentation,
set ENV["PYTHON"]="", run Pkg.build("PyCall"), and re-launch Julia. Then,
To install the sklearn module, you can use `pyimport_conda("sklearn", PKG)`,
where PKG is the Anaconda package the contains the module sklearn,
or alternatively you can use the Conda package directly (via
`using Conda` followed by `Conda.add` etcetera).

) <class 'ModuleNotFoundError'>
ModuleNotFoundError("No module named 'sklearn'",)

Stacktrace:
 [1] pyimport(name::String)
   @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:536
 [2] pyimport_conda(modulename::String, condapkg::String, channel::String)
   @ PyCall ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:694
 [3] pyimport_conda
   @ ~/.julia/packages/PyCall/zqDXB/src/PyCall.jl:693 [inlined]
 [4] import_sklearn()
   @ ScikitLearn.Skcore ~/.julia/packages/ScikitLearn/Kn82b/src/Skcore.jl:146
 [5] top-level scope
   @ ~/.julia/packages/ScikitLearn/Kn82b/src/Skcore.jl:182
 [6] include(fname::String)
   @ Base.MainInclude ./client.jl:443
 [7] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/InterpretMe/zfL8T/test/runtests.jl:6
ERROR: Package InterpretMe errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1567
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
