Julia Version 1.6.0-DEV.636
Commit 8554a216e7 (2020-08-14 06:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed StackPointers ─────── v0.1.2
  Installed UnPack ────────────── v1.0.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed QuasiNewtonMethods ── v0.1.1
  Installed OffsetArrays ──────── v1.1.2
  Installed VectorizationBase ─── v0.12.31
  Installed PaddedMatrices ────── v0.1.10
  Installed SIMDPirates ───────── v0.8.24
  Installed CpuId ─────────────── v0.2.2
  Installed LoopVectorization ─── v0.8.23
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_yo10SK/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_yo10SK/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [7.80193687432984e-11, 1.5677281695047895e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.374278717023117e-14, 3.2085445411667024e-13]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [4.587985547033213e-10, 9.090324049054743e-10, 6.98707758317596e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [8.486740199487031e-10, 1.7161883025806901e-9, -1.3957721645141419e-9]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [5.580006678940208e-9, -1.29878496846203e-9, 1.1190381954406803e-8, -2.604732207700522e-9]
QuasiNewtonMethods.optimum(state) .- 1 = [7.454037387333301e-13, 1.480933153885644e-10, -1.0177636511343735e-11, 2.9681324065222725e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0176193221411722e-11, -7.915335054065054e-12, -1.9561685604685408e-11, -1.653077674745873e-11, -2.790545572395331e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.943268430845364e-12, -2.7040591987770313e-11, -2.66932032033651e-11, -6.698075427635786e-11, 1.708189145688266e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [1.637534552401121e-11, -1.5367040973046642e-11, 3.283417981947423e-11, 3.1097791008960485e-11, -3.5185299118722924e-11, 6.722356005184338e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3878010679823092e-11, 1.0071277145584645e-11, 2.8335112034483245e-11, 5.5885740479766355e-11, 3.054934083479566e-11, 7.317990657895734e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.3675460763806768e-10, 1.1176082281849631e-10, -1.1828915624789715e-10, 2.6339641578942974e-10, 2.0095969333056019e-10, -2.4085511363125534e-10, 4.907851902657967e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.3115068726915524e-12, -6.695866083816782e-12, -1.5166756739404263e-12, -1.1513234809967798e-11, -1.333644306100723e-11, -2.326139281194628e-12, 5.137446024150449e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [7.328937456918538e-11, -3.906098777761713e-10, 2.2603030558343562e-10, -2.6468560676562447e-10, 1.595426013523138e-10, -7.988870676101101e-10, 4.5491077571568894e-10, -5.127429592022281e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.96822558251597e-11, 1.0667910999018204e-11, 2.6154634014119438e-12, -1.730438015101754e-11, -3.9812597663058114e-11, 2.1604940059205546e-11, 5.129008329163298e-12, -3.457922836958005e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [4.583999846374809e-11, -5.045630580013949e-12, 4.518145857446143e-10, -8.858425104563139e-11, 1.0027001451362594e-10, -2.138667021256424e-11, 8.946452467739618e-10, -1.6842516270543229e-10, 2.4684920774120656e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8509750116256782e-11, -8.693490372024826e-12, 5.137557046452912e-11, -1.6771140032290077e-11, -5.243783185449047e-11, -1.522526549280201e-11, 1.0587219989588448e-10, -3.353073374512405e-11, -9.776845999454054e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [2.405009524863999e-11, 2.100097873380946e-11, -9.87243620187428e-12, -2.786748609651113e-11, 3.346212196220222e-12, 4.614841841998896e-11, 4.3518522119256886e-11, -1.9292234476608883e-11, -5.662292856811746e-11, 6.228129123542203e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.820288364484668e-11, -2.8979041388765836e-12, 9.346967644319193e-12, 3.342481846857481e-11, -1.1985301640038415e-11, -4.0539460677280204e-11, -3.827826944302615e-12, 1.5065726444163374e-11, 6.45776765395567e-11, -2.3985369246304344e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.4302782009044677e-12, 6.795008999915808e-12, 6.160538745803024e-11, -2.1442847497610273e-12, 5.203171227208259e-12, 1.1601386518123036e-11, 1.1547429679126253e-11, 1.1984235825934775e-10, -6.4366290075668076e-12, 8.909317728011956e-12, -1.5555334798023068e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2577716645978398e-11, -1.541766714296955e-11, -6.490363801958665e-12, 7.34501348631511e-12, 1.8465229345565604e-12, 2.4901192219317636e-11, -2.772193585798277e-11, -1.566491381055357e-11, 1.6222578835822787e-11, 9.43689570931383e-13, 7.756018050031344e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2027712159579096e-11, 3.343614274342599e-11, -1.908651015014584e-11, -3.882116850206785e-12, 8.309131160899597e-12, -2.2775226149462924e-11, -2.5209168086348654e-11, 6.72317757022256e-11, -3.768207967880244e-11, -7.553180303432327e-12, 1.874922439526472e-11, -5.06147346257535e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.091682713815771e-11, -5.79630343722215e-10, -4.274224307820873e-10, 1.3690093503271328e-10, -9.29256671611256e-11, 5.236560074450836e-10, 9.961520497370202e-11, -1.1535955524166752e-9, -8.522229588692198e-10, 2.596856063519226e-10, -2.1034252117857477e-10, 1.031685847863173e-9]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [9.278200430173911e-11, -1.4365730827137213e-11, 1.4077627952246985e-11, 6.809108832328548e-11, -6.319977874369442e-11, -8.22488743779104e-11, 1.9504420301075243e-10, -2.2040591574068458e-11, 3.246070079399033e-11, 1.3796497277951403e-10, -1.2992096287689492e-10, -1.6682977221904594e-10, 1.0262901639634947e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.0652146659472237e-11, 9.85300729894334e-12, -1.8288259795440354e-11, 2.5802693315313263e-11, 1.9579671217684336e-11, 2.539968235737433e-12, 3.8819170100623523e-11, 1.8705481608094487e-11, -3.832745232301704e-11, 5.253819601591658e-11, 3.9211967006735904e-11, 3.9677150454053844e-12, 3.2458480347941077e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-3.557032446366293e-11, 7.798184320506607e-11, -1.8921231248469894e-10, -7.384393096998565e-11, 5.451195050909519e-13, 8.453238109495942e-12, 2.082445327289406e-11, -5.7777671536030084e-11, 1.710824815148726e-10, -3.8327119256109654e-10, -1.448945408100144e-10, 9.36140054363932e-12, 1.8633095066888927e-11, 4.611977466595363e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3797851750041445e-11, -4.72420991215472e-11, 3.902234091412993e-11, 7.2160055708536675e-12, -4.376332629618673e-11, 1.9154677843857826e-11, -9.513723142617891e-12, -3.228295408774784e-11, -9.791867316977232e-11, 7.60385088227622e-11, 1.3384404695671037e-11, -9.168032999440356e-11, 3.3684388611732174e-11, -1.0756950885593142e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [4.25472990173148e-11, -4.9903081666968774e-11, 2.0295765068567562e-11, 4.4047654412793236e-11, 6.168510147119832e-11, 2.6697311028556214e-11, -4.5063175413417866e-11, 9.404588219297239e-11, -9.036382753180305e-11, 4.7277737280637666e-11, 8.598299849893465e-11, 1.201896360214505e-10, 4.3202552646448567e-11, -8.864187162060944e-11, 2.252220632215085e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.8117954893077695e-12, 1.6533441282717831e-12, 1.957323192414151e-12, 7.1589401073879344e-12, -1.7955636977262657e-12, -4.3730685739262753e-11, 3.188849184709852e-11, 1.2212009181666872e-11, 7.990941242042027e-12, 6.780354055990756e-12, 1.5284662424619455e-11, 2.7771118737973666e-12, -8.588918465335382e-11, 6.524714102340567e-11, -1.2033707363912072e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [6.980638289633134e-12, 6.046918521462885e-11, 1.2502110458001425e-10, 2.292048773000488e-10, -8.984524235700064e-11, -8.190748079783816e-11, 2.847522218019094e-11, 7.672396051816577e-11, 2.2095658636089865e-12, 1.0657363880284265e-10, 2.4560820044428056e-10, 4.5331050024799424e-10, -1.765307899859181e-10, -1.5908696582300763e-10, 6.91220414239524e-11, 1.4789214297650233e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.521383185045579e-11, 1.6436763061733473e-10, 1.1891376772155127e-10, -2.059230563844494e-11, -9.044209825503913e-12, -2.4078516958070395e-11, 1.4879431020631273e-11, 7.624922915283605e-11, 6.98672231180808e-11, 3.291551475825827e-10, 2.4594859482363063e-10, -3.2848612718794357e-11, -8.283818075938143e-12, -4.476929937879959e-11, 2.620281769338817e-11, 1.5908785400142733e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.0172218622983564e-10, -4.997924296645806e-11, 1.342683741967221e-10, -5.420530690969372e-11, -1.2581269359657199e-11, -9.681666579552939e-11, -3.588134234178142e-10, 1.911755198591436e-10, 2.166413715087856e-10, -8.981282384468159e-11, 2.6424618049247783e-10, -1.0624345847531913e-10, -3.166022999323559e-11, -2.0353596585920286e-10, -7.090901199546806e-10, 3.8488479070508674e-10, 6.457456791508775e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4456436048249088e-11, 2.869060544696822e-11, 1.7722046052881524e-11, -1.24118493260994e-11, -1.3219980665724052e-11, 4.323719160481687e-11, -8.462230915995406e-12, -1.5234480343906398e-12, -2.5044966101006594e-11, 5.7553961596568115e-11, 3.9649394878438216e-11, -2.43708386804542e-11, -2.7128077562110775e-11, 8.649392313486715e-11, -1.4892642674624312e-11, -8.987810495852955e-12, -4.831690603168681e-13]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [1.4915402246629128e-11, 6.049338807656568e-11, 8.655987038252988e-11, 6.565303856120863e-11, -1.6929790902509012e-11, -1.3504430906863263e-10, 8.372191828698305e-12, 6.052358614283548e-11, -8.983058741307559e-11, 2.954636535434929e-11, 1.2454748343770916e-10, 1.87374338267432e-10, 1.3540923937682692e-10, -1.7252199668860158e-11, -2.6368551786504213e-10, 6.605604951914756e-12, 1.1105449893022978e-10, -1.8201007367935063e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.906230894301643e-11, -5.912936806851121e-12, 1.6608936448392342e-11, 2.2210455696836107e-11, 3.4370728485555446e-11, 5.77800030043818e-11, 1.9555468355747507e-11, -2.0905499553691698e-12, 1.4840129125559542e-11, -7.46932515838239e-11, -1.3497869488787728e-11, 2.990740988195739e-11, 4.5310200036396964e-11, 6.93207713453603e-11, 1.1625456153296909e-10, 3.149880356545509e-11, -4.900968519905291e-12, 3.424283079311863e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-2.319389125204907e-11, -1.631272894542235e-11, 5.453193452353844e-11, -7.212752617391516e-11, -6.639622185389271e-11, 2.581845848226294e-11, 6.966871524127782e-12, 8.413492125214361e-12, -1.6012524639563708e-11, -4.934019859348382e-11, -3.536038128970631e-11, 1.0495204705307515e-10, -1.5055068303126973e-10, -1.3814049903970727e-10, 5.3057780391441156e-11, 1.7185142198172798e-11, 1.4832357564387166e-11, -3.2803981753204425e-11, -3.185229857649574e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.176836406102666e-11, -1.3110734720100936e-11, 9.351186491812769e-11, -1.3747347704651247e-10, -8.43947134399059e-12, -4.058253733063566e-11, 5.124101143394455e-11, -5.342826181475857e-11, -4.7484682852427795e-11, 2.4420021560445093e-11, -2.525135656128441e-11, 1.9282864194281046e-10, -2.7521995793478027e-10, -1.4788614777216935e-11, -8.546519048024948e-11, 1.056328358117753e-10, -1.1416945167042059e-10, -9.624978591915578e-11, -3.747335775017291e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-7.32736094022357e-12, -2.5572766126913393e-11, 1.0593748100973244e-12, -4.6954662380471746e-12, -1.5515033702229175e-11, 9.939604694864101e-12, -5.546285652968663e-11, 1.7753798431385803e-11, -3.092592848474851e-11, 2.257860565180181e-11, -1.3519518837767919e-11, -4.9385384670586063e-11, 4.60964599824365e-12, -1.2981726804639493e-11, -3.191413799896736e-11, 2.102873430942509e-11, -1.043302111369826e-10, 3.615441279691822e-11, -5.830558258423935e-11, 4.60991245176956e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1980416658730064e-11, 3.606070997363986e-11, 4.251865526327947e-11, 1.3582979185855493e-10, 1.4342949050671905e-10, -2.0831081304351073e-10, -2.3305357643721436e-11, -1.1545664424517099e-10, -8.163003606398433e-11, -3.433375805883543e-11, 2.683786526347376e-11, 7.561107295828151e-11, 8.67472760290866e-11, 2.738758109188666e-10, 2.945044208502168e-10, -4.131636144322215e-10, -4.8639647864945346e-11, -2.1360824220550967e-10, -1.6465961927281114e-10, -6.54460929894185e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-1.9379831073251808e-11, 4.62943017254247e-11, 6.77036204876913e-12, 2.580913260885609e-11, 1.4754197863453555e-11, 1.1589174064852159e-11, 2.974620549878182e-11, -2.21713758463693e-11, 6.06159566984843e-12, -4.641953488260242e-12, -3.884681465393669e-11, 9.18176645825497e-11, 1.1823875212257917e-11, 5.2059911936908065e-11, 2.517275277114095e-11, 2.6117996654306808e-11, 5.5961679734650716e-11, -4.1514014448296166e-11, 1.446576192165594e-11, -1.1473266781081293e-11, 1.180455733162944e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.9775959475841773e-11, 1.304991670281197e-10, -2.8007007824015773e-10, -5.796507718258681e-11, 2.947975197287178e-11, -3.7326697288619926e-11, -1.6940449043545414e-10, -1.668153393197258e-10, 1.2754575173801186e-10, 1.530529036841699e-10, 5.5279336663716094e-11, 2.492377415563851e-10, -5.693714388854687e-10, -1.2133427595983903e-10, 7.872791307761418e-11, -6.80012712805933e-11, -3.6215008769602264e-10, -3.2126368232354707e-10, 2.62388555327675e-10, 3.1154656632281785e-10, -3.132138992611999e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.1056511262097501e-10, 5.262590363486197e-11, -4.029088174206663e-11, 9.746736751026219e-11, 1.044326847221555e-10, -6.502021143717229e-12, 4.3414827288756896e-11, -1.9307888621256097e-11, 9.970912984158531e-12, -3.0044855492405986e-11, -1.730615650785694e-12, 2.1947088590934527e-10, 9.741030204679646e-11, -8.594247535853583e-11, 1.9617196755916666e-10, 2.1078960799059132e-10, -1.5674683773170273e-11, 8.592548894625907e-11, -3.5531355635498585e-11, 2.274158639181678e-11, -6.451739142931956e-11, -5.7338578329790835e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2492640255601373e-10, 2.1510349057507483e-11, -1.787903158856352e-11, 5.046740803038574e-11, -8.561651387850588e-11, -6.150313591746226e-11, 5.847589079621685e-11, 3.0655478155949822e-12, 5.778066913819657e-11, -7.622757980385586e-11, 3.181654939510281e-11, -2.5001489767362273e-10, 5.207523301464789e-11, -4.266154096654873e-11, 8.585909760938648e-11, -1.6625489873689503e-10, -1.250582970513392e-10, 1.1230394392214293e-10, -1.664013371538431e-11, 1.0413470086234611e-10, -1.5583623280690517e-10, 6.780465078293219e-11]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-7.696754344976853e-11, -3.8319236672634815e-11, -4.598099678787548e-12, -2.7257751611386993e-11, -1.3522627462236869e-11, 1.368682944757893e-11, 1.1640710617655259e-10, 7.338663010614255e-11, 1.5190892987959614e-10, 1.4932499681208355e-11, 8.015144103978855e-12, -1.6365830912690171e-10, -7.51129158871322e-11, -1.5739298753203457e-11, -5.59451374115838e-11, -2.3445134722521743e-11, 3.4968250517408705e-11, 2.1954793538725426e-10, 1.522828529942899e-10, 2.991458192269647e-10, 3.4636293833045784e-11, 1.5976775458170778e-11, 3.6493030819428895e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.4567017571116594e-11, 5.86901638399695e-11, -5.1793347388695565e-11, 2.4037882795369114e-11, -4.015743293450669e-11, 4.924571861408822e-11, -7.037836979861822e-11, 5.9676708019651414e-12, -8.744083235256994e-11, -3.325562047962194e-11, -1.2539669302924494e-10, 1.0944223305386913e-10, 1.174060848541103e-10, -1.0254697091482967e-10, 5.053757412554205e-11, -8.558154185323019e-11, 9.888845298178239e-11, -1.41091249794556e-10, 1.1879386363489175e-11, -1.7768109206173222e-10, -6.124989404554526e-11, -2.5163371386582867e-10, 7.706724147737987e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-1.46228584796404e-11, 6.41411368462741e-11, -2.6777902117913754e-10, 1.2587064723845742e-10, -3.3595681792064624e-11, 1.3505641049960104e-11, -2.7675639557855902e-12, -1.3514522834157106e-11, -4.375166895442817e-12, -4.943645492971882e-11, -1.1707967928487051e-11, -1.2977063867936067e-11, -2.7032376337388087e-11, 1.2081646794115386e-10, -5.437745809189209e-10, 2.5027424577217516e-10, -6.906053506838816e-11, 2.4094060080415147e-11, -4.030775713204093e-12, -2.7245428135813654e-11, -7.814748848034014e-12, -8.953005004030956e-11, -2.6628588223331917e-11, -2.711719737646945e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.357256529388451e-10, 2.950528710243816e-12, -9.803735601110475e-11, -3.660050040821261e-11, -1.149524919696887e-12, 3.121547464957075e-11, -1.4340528764478222e-11, -1.2905954083208826e-10, -7.156231163207849e-11, 4.4213521732672234e-11, 1.3031575818445162e-11, 1.5396883767948566e-10, 2.582423164199099e-10, 1.3560264022771662e-11, -1.8919787958537881e-10, -7.148426295344734e-11, -4.868438985283774e-12, 6.51028120302044e-11, -3.1304847603053076e-11, -2.687707834070352e-10, -1.3592182934729635e-10, 9.198286576861392e-11, 3.1096902830540785e-11, 3.006557225404549e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
