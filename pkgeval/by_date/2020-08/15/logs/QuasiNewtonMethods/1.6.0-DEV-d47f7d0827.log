Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed UnPack ────────────── v1.0.2
  Installed SIMDPirates ───────── v0.8.24
  Installed SLEEFPirates ──────── v0.5.5
  Installed QuasiNewtonMethods ── v0.1.1
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed VectorizedRNG ─────── v0.1.12
  Installed VectorizationBase ─── v0.12.31
  Installed LoopVectorization ─── v0.8.23
  Installed StackPointers ─────── v0.1.2
  Installed OffsetArrays ──────── v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.23
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.24
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.2
  [3d5dd08c] + VectorizationBase v0.12.31
  [33b4df10] + VectorizedRNG v0.1.12
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_bxE0Yk/Project.toml`
  [bdcacae8] LoopVectorization v0.8.23
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_bxE0Yk/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.23
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.24
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.2
  [3d5dd08c] VectorizationBase v0.12.31
  [33b4df10] VectorizedRNG v0.1.12
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0769163338864018e-13, -2.348121697082206e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [3.5603742176704145e-11, 7.079492547745758e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [7.261391488100344e-11, 1.3432188694650904e-10, -5.175170292304188e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [7.261391488100344e-11, 1.3432188694650904e-10, -5.175170292304188e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [4.311218049224408e-12, 5.9250382378195354e-12, 8.679501561914549e-12, 1.2560841256004096e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.7964963678073218e-11, -2.4781177110355657e-11, 5.450018214503416e-11, -5.2668092109797726e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-8.016920460818255e-12, 8.83537687457192e-12, -1.4579004670167706e-11, 1.8516521649303286e-11, 9.663159161732437e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.482591909824805e-11, 1.7648105199441488e-12, 5.158606874999805e-11, 2.16426876420428e-12, -6.916134331902413e-12]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-4.276545784165364e-11, -2.0055290761433753e-11, -1.51422097083298e-10, -6.565148424897416e-11, -2.3526847137134155e-11, -2.876867633005986e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8818047120561232e-10, 1.8744783503166218e-11, 1.3031042911393342e-10, -3.8960501491658306e-10, 3.499134315632091e-11, 2.5332380637621554e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-4.2471692829337826e-11, 7.134492996385688e-11, 4.80524509072211e-11, -8.972134146745248e-11, 1.4237855339160888e-10, 9.671619061180081e-11, -4.603206704700824e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.283984278430353e-11, 1.0544010109470037e-11, 9.879208562324493e-12, -8.106393334372797e-11, 2.2815083156046967e-11, 1.8533174994672663e-11, -3.106404022901188e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [9.199307982044047e-13, -2.9832136760887806e-11, 9.276579504557958e-12, 5.805955716198241e-11, 8.01225752411483e-12, -5.999489793850898e-11, 2.034683532770032e-11, 1.1996137416758756e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.839684208945982e-12, 3.319344799024293e-11, 8.875122858853501e-12, 1.1658007892378919e-11, -8.998357614586894e-12, 6.854472545114731e-11, 1.958522233280746e-11, 2.1906254588088814e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-5.5746740557083285e-11, 1.89779303383375e-11, -1.1032508240305106e-10, -7.411826707937053e-11, -1.0592893229244282e-10, 4.342859405426225e-11, -2.2024804202658288e-10, -1.490482182120445e-10, -1.3535750298387939e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.8695147086542647e-10, -5.087374965739855e-10, 3.951292626425129e-10, -1.1161438440154825e-10, -7.603263574296193e-10, -1.0182841236883178e-9, 8.167182485863123e-10, -1.9957080432675411e-10, -3.2899238888717264e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.321388554131886e-10, 8.595435474489932e-11, 1.2252865388973078e-11, 6.263700669251193e-11, -1.58674184902452e-11, -2.6217517046234207e-10, 1.7487589154541183e-10, 2.0159651725748517e-11, 1.418491990534676e-10, -3.7135960972989324e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0723866239459312e-11, 1.3304246593293101e-11, -4.640399176025767e-12, -5.907940803240308e-12, 7.309042260317256e-12, 2.580735625201669e-11, 2.3529178605485868e-11, -1.0163092589721145e-11, -9.730993788537035e-12, 1.4568790618341154e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-6.164024846100347e-11, -7.274070235041563e-12, 3.916245105983762e-11, -6.713851696815709e-12, -4.9312665062473116e-11, -1.2744683086651776e-10, -1.3821499500465961e-11, 7.693601311586917e-11, -1.0469292099912764e-11, -9.529677047481755e-11, -2.6528779173418116e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2559731032979471e-11, -2.379763053284023e-11, -2.862476922160795e-11, 4.324740565664342e-11, 4.115308094299053e-11, -2.426359113627541e-11, -4.489075777769358e-11, -5.835343319660069e-11, 8.326161982097346e-11, 8.500666837107929e-11, -2.2744028882470957e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-7.944656044145404e-11, -4.022104871381771e-11, -1.347855160815925e-11, -1.0846834541666794e-10, 9.226175379239976e-12, 1.7894308257382363e-10, -1.6307766248502276e-10, -8.462019973620727e-11, -1.5358270211152103e-11, -2.3367174861732565e-10, 1.1048273407254783e-11, 3.6778557976901993e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.17951262277461e-11, -1.5291878874279519e-10, 4.971445477508496e-11, 3.2831737328820054e-11, 1.1191914062180786e-10, 6.013389786119205e-11, -1.666237148256755e-10, -3.0594515809667655e-10, 9.991563132416559e-11, 7.544986857510594e-11, 2.291171696811034e-10, 1.308042563152867e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5091818340049485e-11, 1.374191871406083e-10, 8.801004369729526e-11, -9.258227517960904e-11, 1.6621015674900264e-10, 9.422751467980106e-11, -9.05659991445873e-11, 2.622855266309898e-10, 1.5690848620408815e-10, -1.856597098282009e-10, 3.4939784399057316e-10, 2.0439316905651594e-10, 1.4456880137458938e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.765754871438048e-11, 6.21904749920077e-11, 1.0949241513458219e-11, -2.073441418559696e-11, 3.8329783791368754e-11, -2.09170458731478e-11, -2.0670753997364955e-10, 1.2065770604863246e-10, 1.879119082559555e-11, -3.8109182476375736e-11, 8.034017895397483e-11, -3.730349362740526e-11, -6.412981257142292e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-2.42049713605752e-11, 3.338063159219473e-11, 3.916533763970165e-11, 1.3443024471371245e-11, -4.401512487817172e-11, -8.441913834644765e-12, 2.174149749123444e-11, -4.744504789044868e-11, 6.301381638706971e-11, 7.773803822885839e-11, 2.9054980643650197e-11, -9.349576668427062e-11, -2.0619950191758107e-11, 4.2484460394121015e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.438158563933257e-10, -4.3897319113028743e-10, -1.6930024049344183e-10, 4.777578332948451e-11, 1.0097256364360874e-11, 3.079287935747743e-10, -1.227918877688694e-10, 4.821627541673479e-10, -8.969182063722769e-10, -3.560650663203546e-10, 9.279821355789863e-11, 3.3257618881066264e-11, 6.185982837081383e-10, -2.6172564115967134e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0773548719811288e-10, -1.6056600493641326e-11, 8.525935513148397e-11, 4.607580983417847e-11, 2.1470825117830827e-11, -1.2577994201734555e-10, 1.5151568888427391e-10, -2.148811129032424e-10, -1.8143264668424308e-11, 1.8344570307249342e-10, 1.0197354072261078e-10, 5.409206416118195e-11, -2.605271554045885e-10, 2.842635016264694e-10, -4.99933427988708e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0528466987125285e-11, 1.1360290486095437e-10, -8.423250985600816e-11, 1.330477950034492e-10, -5.765088406661789e-11, 2.28685959058339e-11, 1.4573831030872952e-10, 2.8567148646629903e-11, 2.235081009160922e-10, -1.8069978846568802e-10, 2.650193398068268e-10, -1.2676026894808956e-10, 4.586553359331447e-11, 2.897624362674378e-10, -4.261702102326126e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [-6.970257704352889e-11, -3.6304959039057394e-11, -1.0023537555525763e-11, 6.686873277317318e-12, 4.192912683720351e-11, 1.8579582317101995e-11, -7.529088463797962e-12, -3.925193503562241e-12, -1.4514134338838858e-10, -7.146017111381298e-11, -2.015276834299584e-11, 1.3480994098813426e-11, 8.359712921901519e-11, 4.1920023008401586e-11, -2.0020984869972835e-11, -5.9853233480566814e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.184075391184706e-12, -1.0235923220136556e-11, -1.901589996577968e-11, -5.345290876590525e-11, 1.3727685654885136e-11, 3.0599522915508715e-11, 5.395017765863486e-12, 2.8975044585877185e-11, 1.8240742249986397e-11, -1.9864998535013e-11, -3.6444958162462626e-11, -1.0602774214163446e-10, 2.7539748259641783e-11, 6.075140390748857e-11, 1.1823209078443142e-11, 6.172440336627005e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-2.561761913710825e-11, 4.990452495690079e-12, -1.508360103485984e-11, 3.0044411403196136e-11, -1.1662337762174957e-11, -2.600641924033198e-11, 3.4710456731090744e-11, 1.958433415438776e-12, -4.53100890140945e-11, 9.43023437116608e-12, -3.068756360136149e-11, 6.361022819589834e-11, -2.5004887049817626e-11, -4.9442450134051796e-11, 6.995404255860649e-11, 4.087619132064901e-12, -1.3942180743242716e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.982237093528965e-11, -5.694600346828338e-11, -2.763750339696003e-10, 2.0634538522301682e-10, -9.100920017601766e-11, -3.247953017648797e-10, 9.292344671507635e-12, 1.0875655931386063e-10, 1.5402257247387752e-10, -1.1502132579721547e-10, -5.61951152278084e-10, 4.20150580993095e-10, -1.9071599854925125e-10, -6.654912176884409e-10, 1.3537393428464384e-11, 2.055886572094323e-10, 5.890843368661081e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8374413929554976e-11, -1.0499379143880105e-12, -4.368250205999402e-11, -4.773959005888173e-14, -1.1978162905990075e-10, -3.19300141882195e-13, 2.92448287808611e-11, -8.758249681051211e-11, -3.767819389821625e-11, -5.572831085487451e-11, -5.817457626733358e-12, -9.175260551330666e-11, -2.6881830095248915e-12, -2.293464307356885e-10, -2.4298341116946176e-12, 5.968048277793514e-11, -1.724158593674474e-10, -6.341005498455843e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.347455563267431e-11, -1.6594481344611722e-10, -3.960065608765717e-11, -8.099954040829971e-11, 2.610223148735713e-11, 4.7898573996008054e-11, -4.799716180059477e-12, 5.891531706936348e-11, 6.463829471670124e-11, 4.769540318250165e-11, -3.346221078004419e-10, -7.85782550138947e-11, -1.63017710441693e-10, 5.257905222322279e-11, 9.970557712790651e-11, -8.951173136040325e-12, 1.179081277058458e-10, 1.2663803339307833e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [6.115641326687182e-11, 4.7132520109016696e-11, 1.2600587240285677e-10, 6.3939964434212015e-12, 7.633316201349771e-11, -1.1324896576070387e-10, -1.3391510123028638e-12, -2.6204372005622645e-11, 5.3112847453462564e-11, 1.248112724283601e-10, 9.529266264962644e-11, 2.496693962683594e-10, 1.1147305301051347e-11, 1.4675327619784184e-10, -2.2545032507537144e-10, -6.325495682801829e-12, -5.310685224912959e-11, 1.0720691001608884e-10, 2.0761170560490427e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3737900534115397e-11, -7.069700380668564e-11, -7.228539988801685e-11, 8.731948497597841e-11, -4.9671822210939354e-11, 4.8901771521059345e-11, -3.0114577498352446e-11, 5.7513771523076684e-11, -4.694689081929937e-12, 4.207767467789836e-11, -1.4212531151969188e-10, -1.6465551144762003e-10, 1.686972783687679e-10, -1.0635570202310873e-10, 1.0022027652212273e-10, -6.553269038533927e-11, 1.1894218943098167e-10, -3.9074299351682384e-12, 1.7065016066908356e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [7.387801481684164e-11, 4.91364726684651e-11, -1.2437961771638584e-10, -1.5540257969348659e-10, -2.8745950064745784e-10, 4.189093516515641e-12, 2.3117041614284517e-10, 2.5201174480571353e-10, -8.94129215112116e-12, 2.7895996623783503e-10, 1.5888490523252585e-10, 1.1333423088899508e-10, -2.509942254036446e-10, -3.288168626269794e-10, -5.805378400225436e-10, 1.4921841540171954e-11, 4.4020320721926964e-10, 4.894984417802561e-10, -2.7008950631568496e-11, 5.548259629506447e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3884449145962208e-11, -3.635158840609165e-11, -3.384492686109297e-11, 6.144906805616301e-11, -6.15003603599007e-11, -7.370848376098138e-11, 5.5636828477645395e-11, -1.2358336576312468e-11, -6.84523548954985e-11, 6.482503422944319e-11, 3.8584024864007915e-11, -7.33693106269584e-11, -6.982026068413916e-11, 1.23455023981478e-10, -1.2701739660059275e-10, -1.5117262996966474e-10, 1.0446177256540068e-10, -1.587663334134959e-11, -1.4609413678812189e-10, 1.3563705714148e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [6.80611123016206e-12, 2.4655832930875476e-12, 6.09894357239682e-11, 1.2297940443772859e-11, 8.160538911283766e-11, 3.569144979564953e-11, 9.300005210377549e-11, 3.269251536153206e-11, -9.055600713736567e-11, 3.8960390469355843e-11, 2.6155522192539138e-11, 4.865219338512361e-12, 1.2297562967944486e-10, 2.546274302517304e-11, 1.6429702043296857e-10, 7.25000059986769e-11, 1.8986501260087607e-10, 6.332001589726133e-11, -1.8145829283611192e-10, 7.171774285552601e-11, -4.369171691109841e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.998712720474032e-11, 4.5253356617536156e-11, 4.464983938134992e-11, -1.1546208433799166e-11, 4.7137405090325046e-11, 1.520388259734773e-10, 5.16175990838974e-11, 5.6459059649682786e-11, -3.00756086701881e-11, -1.282544070946301e-10, -1.351044831565673e-10, 1.0099721059475542e-10, 7.126566003989865e-11, -3.137656801044386e-11, 9.735900974305878e-11, 2.9165247994455967e-10, 1.072251176736927e-10, 1.1568435098752161e-10, -3.641342782856327e-11, -2.567407397791044e-10, -4.934941344458821e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-5.980094197610697e-11, -1.4269030401692362e-11, 1.1524803333884392e-10, -1.2393441828351115e-10, 1.8512968935624485e-11, 3.3619107497884215e-11, -4.861122615551494e-11, -1.1478817896204419e-11, 4.175215728707826e-11, -6.017564224691796e-11, -1.1481970929594354e-10, -1.1189593696059319e-10, -3.030153905569932e-11, 2.4225843553438153e-10, -2.4230517592371825e-10, 4.164535383210932e-11, 6.153522136287393e-11, -9.029954561867726e-11, -2.435363022357251e-11, 8.578271426529227e-11, -1.1606016148135723e-10, -2.4806412479705386e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.225286952599163e-11, 4.9465320728359075e-11, 4.6137760278952555e-11, -2.706044277545061e-10, -4.812539255993897e-11, 1.6098633537353635e-10, -1.1884648820625898e-10, 4.373634787668834e-11, 4.9867887597088156e-11, 6.208966674137173e-11, -1.1636736019227101e-10, -1.1089662521612809e-10, 1.0346901113678086e-10, 1.1475087546841678e-10, -5.47832224029321e-10, -9.553768887116121e-11, 3.2198377297731895e-10, -2.4462787351353654e-10, 1.0071254941124153e-10, 9.390666022568439e-11, 1.4032996986657054e-10, -2.3053658981808667e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [2.1319834786481806e-11, -2.366218332383596e-12, 1.4941381465405357e-11, 1.6324719354088302e-12, 5.150990745050876e-12, 3.455324915080382e-11, -3.3213432004686183e-12, 1.3602230453102493e-11, -4.602851433332944e-11, -5.457445606538158e-11, 5.925371304726923e-11, 4.134514952625068e-11, -5.244582546026777e-12, 2.8109958805089263e-11, 3.931299730197679e-12, 1.0702994046596359e-11, 6.446621014788434e-11, -4.71822581005199e-12, 3.028377548730532e-11, -9.375245024756396e-11, -1.1230250063221092e-10, 1.2005441085705115e-10, -2.3303581286882036e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0818902157770935e-11, 5.0542681151455326e-11, 1.2567280549546922e-11, -1.4803047676537062e-11, -6.296074772649263e-13, 1.34710020915918e-11, -1.7112977701572163e-12, 6.479261571712414e-13, 4.5248915725437655e-11, -6.468370283840841e-11, -3.640643342350813e-12, -4.039768519703557e-11, 9.870926298560789e-11, 2.4846347201901153e-11, -2.98964186740136e-11, -4.084510507595951e-13, 2.7305491201445875e-11, -3.757549826843842e-12, 1.3844481117075702e-12, 9.031730918707126e-11, -1.2873968557869375e-10, -1.0798917315923973e-11, -1.506461622113875e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-6.359268667210927e-11, 1.534483651255414e-11, 4.4121817310838196e-11, 9.495182418106651e-11, -2.6452062762416517e-11, -5.2242210557551516e-11, 8.164269260646506e-11, 4.163691613712217e-11, 8.169909193611602e-12, -5.5733972992300096e-11, -7.544065372400155e-11, -3.261102499152457e-11, -1.2378575942051384e-10, 3.300137940698278e-11, 9.329181871464698e-11, 1.8888046682263848e-10, -5.6885385291138846e-11, -9.918210697179575e-11, 1.6042012163097752e-10, 8.137579499134517e-11, 1.4259482483680586e-11, -1.1932432819605765e-10, -1.5527323871111776e-10, -7.185863015735094e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0272116490739336e-11, 2.1538992811542812e-11, -1.819011608006349e-11, 9.621192731401607e-13, 1.0266010264103897e-11, -2.3871904453187653e-11, -7.203238006070478e-12, -3.8961389670078006e-11, -1.392252979570685e-11, 5.470512931537996e-12, -2.3256618852940392e-11, 1.31161748129216e-12, -1.926869774848683e-11, 4.081246451903553e-11, -3.495914668860678e-11, 4.4568793100552284e-12, 1.9102941450910293e-11, -5.0057624711996596e-11, -1.6778245459647678e-11, -7.439537874631696e-11, -2.8744562285965003e-11, 1.2096990076315706e-11, -4.4778070140694126e-11, 3.3495428652940973e-12]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
