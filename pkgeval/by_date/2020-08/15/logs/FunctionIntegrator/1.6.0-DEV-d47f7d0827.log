Julia Version 1.6.0-DEV.646
Commit d47f7d0827 (2020-08-15 10:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_40gZYF/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_40gZYF/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.841906 seconds (1.34 M allocations: 71.190 MiB, 1.68% gc time)
Running: chebyshev_quadrature with k=1
  1.799596 seconds (2.24 M allocations: 129.166 MiB, 4.70% gc time)
Running: chebyshev_quadrature with k=2
  0.281114 seconds (425.05 k allocations: 24.387 MiB)
Running: chebyshev_quadrature with k=3
  0.377821 seconds (544.93 k allocations: 29.892 MiB, 3.85% gc time)
Running: chebyshev_quadrature with k=4
  0.320008 seconds (487.80 k allocations: 26.411 MiB)
Running: jacobi_quadrature with α=β=1
 44.781435 seconds (39.42 M allocations: 3.140 GiB, 9.57% gc time)
Running: laguerre_quadrature with k=1
  3.449342 seconds (3.33 M allocations: 185.663 MiB, 3.94% gc time)
Running: legendre_quadrature
  0.196117 seconds (215.07 k allocations: 12.340 MiB)
Running: lobatto_quadrature
  0.381963 seconds (344.01 k allocations: 20.632 MiB, 8.48% gc time)
Running: radau_quadrature
  0.304366 seconds (326.42 k allocations: 19.656 MiB)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 81.412893 seconds (100.02 M allocations: 1.491 GiB, 0.35% gc time)
Running: rectangle_rule_midpoint.
  0.144118 seconds (173.73 k allocations: 3.887 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 81.830680 seconds (100.02 M allocations: 1.491 GiB, 0.34% gc time)
Running: rombergs_method
  0.578760 seconds (752.55 k allocations: 43.309 MiB)
Running: simpsons_rule
  0.041858 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.141774 seconds (113.06 k allocations: 5.972 MiB, 24.07% gc time)
Running: trapezoidal_rule
  0.323630 seconds (1.52 M allocations: 25.795 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.092966 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.460445 seconds (275.57 k allocations: 13.974 MiB)
Running: chebyshev_quadrature with k=2
  0.158352 seconds (115.72 k allocations: 3.793 MiB)
Running: chebyshev_quadrature with k=3
  0.160504 seconds (105.07 k allocations: 3.639 MiB)
Running: chebyshev_quadrature with k=4
  0.158064 seconds (87.68 k allocations: 3.285 MiB)
Running: jacobi_quadrature with α=β=1
  1.344770 seconds (535.83 k allocations: 163.480 MiB, 4.34% gc time)
Running: legendre_quadrature
  0.192841 seconds (62.25 k allocations: 3.473 MiB)
Running: lobatto_quadrature
  0.023222 seconds (16.73 k allocations: 1.033 MiB)
Running: radau_quadrature
  0.024359 seconds (16.72 k allocations: 1.033 MiB)
Running: rectangle_rule_left
 32.651517 seconds (471.41 M allocations: 7.025 GiB, 3.79% gc time)
Running: rectangle_rule_midpoint
  0.000029 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.323989 seconds (476.96 M allocations: 7.107 GiB, 3.88% gc time)
Running: rombergs_method
  0.388171 seconds (360.15 k allocations: 20.307 MiB, 2.38% gc time)
Running: simpsons_rule
  0.000028 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.068631 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.058311 seconds (18.35 k allocations: 1.100 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031068 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.101572 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.169995 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.122994 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.123005 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.374234 seconds (378.75 k allocations: 19.777 MiB, 6.60% gc time)
Running: legendre_quadrature
  0.066520 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000151 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000120 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000550 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000408 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000543 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.072226 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000045 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.024452 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021726 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058366 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.180456 seconds (240.25 k allocations: 13.487 MiB)
Running: chebyshev_quadrature with k=2
  0.247124 seconds (295.45 k allocations: 16.590 MiB)
Running: chebyshev_quadrature with k=3
  0.254933 seconds (275.41 k allocations: 14.984 MiB, 10.26% gc time)
Running: chebyshev_quadrature with k=4
  0.226415 seconds (275.44 k allocations: 14.942 MiB)
Running: jacobi_quadrature with α=β=1
  1.818373 seconds (465.45 k allocations: 164.226 MiB, 21.92% gc time)
Running: legendre_quadrature
  0.154506 seconds (193.00 k allocations: 11.111 MiB)
Running: lobatto_quadrature
  0.172346 seconds (204.13 k allocations: 11.806 MiB)
Running: radau_quadrature
  0.214493 seconds (204.12 k allocations: 11.818 MiB)
Running: rectangle_rule_left
  1.086394 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.027086 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.414001 seconds (18.27 k allocations: 1.105 MiB, 1.96% gc time)
Running: rombergs_method
  0.153758 seconds (139.91 k allocations: 8.059 MiB)
Running: simpsons_rule
  0.030853 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.039235 seconds (44.65 k allocations: 2.787 MiB)
Running: trapezoidal_rule
  0.030218 seconds (45.20 k allocations: 1.824 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043304 seconds (101.41 k allocations: 3.075 MiB)
Running: chebyshev_quadrature with k=1
  0.220102 seconds (247.35 k allocations: 13.587 MiB)
Running: chebyshev_quadrature with k=2
  0.248487 seconds (303.08 k allocations: 16.593 MiB, 7.75% gc time)
Running: chebyshev_quadrature with k=3
  0.220825 seconds (282.82 k allocations: 15.002 MiB)
Running: chebyshev_quadrature with k=4
  0.262068 seconds (282.85 k allocations: 15.010 MiB)
Running: hermite_quadrature with k=2
 16.408332 seconds (22.12 M allocations: 1.147 GiB, 8.78% gc time)
Running: jacobi_quadrature with α=β=1
  0.436316 seconds (475.44 k allocations: 50.420 MiB, 7.91% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.227196 seconds (288.35 k allocations: 15.902 MiB)
Running: legendre_quadrature
  0.187877 seconds (200.06 k allocations: 11.455 MiB, 16.99% gc time)
Running: lobatto_quadrature
  0.238340 seconds (225.53 k allocations: 37.620 MiB)
Running: radau_quadrature
  0.253150 seconds (222.12 k allocations: 30.284 MiB, 9.28% gc time)
Running: rectangle_rule_left
  0.031457 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.030333 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.027511 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.141883 seconds (142.73 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.040277 seconds (41.25 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.043209 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.030451 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.042569 seconds (61.51 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.266696 seconds (242.48 k allocations: 13.352 MiB, 12.92% gc time)
Running: chebyshev_quadrature with k=2
  0.243677 seconds (297.80 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.238881 seconds (277.68 k allocations: 14.832 MiB)
Running: chebyshev_quadrature with k=4
  0.278833 seconds (277.71 k allocations: 14.784 MiB, 11.56% gc time)
Running: hermite_quadrature with k=2
  0.152020 seconds (177.71 k allocations: 10.157 MiB)
Running: jacobi_quadrature with α=β=1
  7.718134 seconds (468.04 k allocations: 1.176 GiB, 19.25% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.212699 seconds (283.21 k allocations: 15.708 MiB)
Running: legendre_quadrature
  0.171321 seconds (195.23 k allocations: 11.220 MiB, 9.54% gc time)
Running: lobatto_quadrature
  0.219476 seconds (215.89 k allocations: 23.325 MiB)
Running: radau_quadrature
  0.215196 seconds (215.04 k allocations: 21.256 MiB, 7.34% gc time)
Running: rectangle_rule_left
  0.045054 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.027935 seconds (26.65 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.025407 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.134239 seconds (138.20 k allocations: 7.925 MiB)
Running: simpsons_rule
  0.037396 seconds (33.49 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.043548 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.031264 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.055400 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.250111 seconds (240.81 k allocations: 13.567 MiB)
Running: chebyshev_quadrature with k=2
  0.262766 seconds (296.03 k allocations: 16.652 MiB, 7.34% gc time)
Running: chebyshev_quadrature with k=3
  0.228841 seconds (276.01 k allocations: 14.997 MiB)
Running: chebyshev_quadrature with k=4
  0.256732 seconds (276.04 k allocations: 14.813 MiB, 7.83% gc time)
Running: jacobi_quadrature with α=β=1
  1.103699 seconds (466.09 k allocations: 195.236 MiB, 6.68% gc time)
Running: legendre_quadrature
  0.160816 seconds (193.56 k allocations: 11.134 MiB)
Running: lobatto_quadrature
  0.206913 seconds (204.69 k allocations: 11.848 MiB, 9.16% gc time)
Running: radau_quadrature
  0.193798 seconds (204.69 k allocations: 11.841 MiB)
Running: rectangle_rule_left
  0.296107 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.025658 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.104309 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.136625 seconds (151.28 k allocations: 8.811 MiB)
Running: simpsons_rule
  0.035485 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.038875 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.026454 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033934 seconds (33.23 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.247286 seconds (241.38 k allocations: 13.511 MiB, 9.18% gc time)
Running: chebyshev_quadrature with k=2
  0.238972 seconds (296.63 k allocations: 16.566 MiB)
Running: chebyshev_quadrature with k=3
  0.224190 seconds (276.55 k allocations: 14.918 MiB)
Running: chebyshev_quadrature with k=4
  0.255928 seconds (276.58 k allocations: 15.044 MiB, 8.14% gc time)
Running: jacobi_quadrature with α=β=1
  2.022259 seconds (466.75 k allocations: 149.906 MiB, 4.24% gc time)
Running: legendre_quadrature
  0.159318 seconds (194.13 k allocations: 11.150 MiB)
Running: lobatto_quadrature
  0.181750 seconds (205.27 k allocations: 11.853 MiB, 10.13% gc time)
Running: radau_quadrature
  0.165983 seconds (205.26 k allocations: 11.853 MiB)
Running: rectangle_rule_left
  1.206947 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.051983 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.167458 seconds (18.61 k allocations: 1.124 MiB)
Running: rombergs_method
  0.149111 seconds (141.21 k allocations: 8.136 MiB)
Running: simpsons_rule
  0.036330 seconds (30.52 k allocations: 1.864 MiB)
Running: simpsons38_rule
  0.039835 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.030859 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.183018 seconds (152.86 k allocations: 9.083 MiB)
Running: chebyshev_quadrature with k=1
  0.152051 seconds (91.24 k allocations: 3.295 MiB)
Running: chebyshev_quadrature with k=2
  0.196009 seconds (127.01 k allocations: 3.988 MiB, 16.40% gc time)
Running: chebyshev_quadrature with k=3
  0.166182 seconds (115.58 k allocations: 3.818 MiB)
Running: chebyshev_quadrature with k=4
  0.176753 seconds (95.11 k allocations: 3.411 MiB)
Running: jacobi_quadrature with α=β=1
  2.242107 seconds (509.55 k allocations: 169.294 MiB, 13.27% gc time)
Running: legendre_quadrature
  0.125319 seconds (38.34 k allocations: 2.105 MiB, 12.44% gc time)
Running: lobatto_quadrature
  0.000145 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000047 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 46.023938 seconds (590.00 M allocations: 8.792 GiB, 2.84% gc time)
Running: rectangle_rule_midpoint
  0.000024 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 46.971791 seconds (592.75 M allocations: 8.833 GiB, 2.77% gc time)
Running: rombergs_method
  0.133424 seconds (41.89 k allocations: 2.258 MiB)
Running: simpsons_rule
  0.000109 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030707 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.024097 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 31.974491 seconds (629.34 M allocations: 9.388 GiB, 4.58% gc time)
Running: chebyshev_quadrature with k=1
  0.510344 seconds (439.15 k allocations: 24.265 MiB)
Running: chebyshev_quadrature with k=2
 13.400898 seconds (496.52 k allocations: 4.042 GiB, 4.30% gc time)
Running: chebyshev_quadrature with k=3
  5.954897 seconds (290.50 k allocations: 1.643 GiB, 5.61% gc time)
Running: chebyshev_quadrature with k=4
  8.086259 seconds (290.53 k allocations: 2.262 GiB, 3.65% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 57.161694 seconds (504.88 k allocations: 13.255 GiB, 3.31% gc time)
Running: legendre_quadrature.
  5.569979 seconds (232.84 k allocations: 1.976 GiB, 1.31% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 61.397084 seconds (8.24 M allocations: 13.384 GiB, 4.49% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 52.033522 seconds (7.24 M allocations: 13.369 GiB, 2.66% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.081809 seconds (23.35 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.115844 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.326414 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.216442 seconds (456.61 k allocations: 153.699 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.566908 seconds (600.04 M allocations: 8.943 GiB, 8.45% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.988070 seconds (600.05 M allocations: 8.944 GiB, 8.00% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.873402 seconds (600.04 M allocations: 8.943 GiB, 8.91% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063077 seconds (182.51 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.250091 seconds (257.97 k allocations: 14.018 MiB)
Running: chebyshev_quadrature with k=2
  0.221327 seconds (284.13 k allocations: 15.241 MiB)
Running: chebyshev_quadrature with k=3
  0.203948 seconds (260.62 k allocations: 13.456 MiB)
Running: chebyshev_quadrature with k=4
  0.202544 seconds (260.65 k allocations: 13.452 MiB)
Running: jacobi_quadrature with α=β=1
  0.449937 seconds (405.02 k allocations: 35.849 MiB)
Running: laguerre_quadrature with k=2
  0.207953 seconds (187.97 k allocations: 10.871 MiB)
Running: legendre_quadrature
  0.146052 seconds (151.74 k allocations: 8.407 MiB)
Running: lobatto_quadrature
  0.039000 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.034904 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.060404 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.051179 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.056560 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.247057 seconds (170.96 k allocations: 9.731 MiB)
Running: simpsons_rule
  0.001400 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.046225 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.174227 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002114 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.148817 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.114563 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.128070 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.115744 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  7.629118 seconds (401.85 k allocations: 906.548 MiB, 3.76% gc time)
Running: legendre_quadrature
  0.087813 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000456 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000148 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.625045 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000545 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.628566 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.083485 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000077 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000063 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000916 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000825 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.118698 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.110220 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.139811 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.123847 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.376433 seconds (388.13 k allocations: 253.791 MiB)
Running: legendre_quadrature
  0.065579 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000125 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000064 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.410577 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001175 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.667016 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081132 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001678 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
