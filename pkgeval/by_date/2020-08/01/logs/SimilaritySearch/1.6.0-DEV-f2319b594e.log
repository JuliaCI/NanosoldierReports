Julia Version 1.6.0-DEV.568
Commit f2319b594e (2020-08-01 04:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed DataStructures ───── v0.17.19
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed StatsBase ────────── v0.32.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_wFHhsZ/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_wFHhsZ/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(17, 0.01730442f0), Item(39, 0.022326589f0), Item(19, 0.056396127f0), Item(2, 0.057446122f0)])
Vsorted = Item[Item(17, 0.01730442f0), Item(39, 0.022326589f0), Item(19, 0.056396127f0), Item(2, 0.057446122f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004018592834472656, 0.003962874412536621, 301.0, 48.2950692884624))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005791147549947103, 0.0050647974014282225, 301.0, 70.32344996929169))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0038556814193725585, 0.005784471829732259, 301.0, 39.4144344329834))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0039038737614949543, 0.0038632313410441083, 301.0, 8.591030096285976))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0059806187947591145, 0.006318036715189616, 301.0, 43.7866640528664))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.000304722785949707, 0.00023816426595052082, 301.0, 175.42194252461195))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 6.287097930908203e-5, 0.013356796900431315, 300.0, 28.388862828724086)
p = PerformanceResult(1.0, 1.0, 1.0, 5.97079594930013e-5, 3.1495094299316405e-5, 300.0, 28.388862828724086)
p = PerformanceResult(1.0, 1.0, 1.0, 0.008351699511210123, 0.0045932372411092125, 300.0, 1.7373346785661852)
p = PerformanceResult(1.0, 1.0, 1.0, 5.235407087537977e-5, 2.193450927734375e-5, 300.0, 1.7373346785661852)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 6.287097930908203e-5, 0.013356796900431315, 300.0, 28.388862828724086), PerformanceResult(1.0, 1.0, 1.0, 5.97079594930013e-5, 3.1495094299316405e-5, 300.0, 28.388862828724086), PerformanceResult(1.0, 1.0, 1.0, 0.008351699511210123, 0.0045932372411092125, 300.0, 1.7373346785661852), PerformanceResult(1.0, 1.0, 1.0, 5.235407087537977e-5, 2.193450927734375e-5, 300.0, 1.7373346785661852))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 118.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007848985989888509, 0.003551793098449707, 346.96666666666664, 28563.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.01018071969350179, 0.003145766258239746, 303.03333333333336, 6996.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.9246012369791668e-5, 1.403490702311198e-5, 92.1, 48.18267948552966))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 3.0072530110677085e-5, 1.69674555460612e-5, 83.4, 70.17263400554657))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5804837544759115e-5, 1.3566017150878906e-5, 86.93333333333334, 39.30750274658203))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0001244783401489258, 0.00047383308410644533, 92.46666666666667, 43.673800124786794))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8433333333333333, 0.8433333333333333, 0.8433333333333333, 4.5688947041829425e-5, 0.00012113253275553385, 69.83333333333333, 183.08347433060408))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-02T04:54:33.350
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9084444444444444, 0.9049999999999998, 0.9065730994152047, 2.4874210357666015e-5, 6.814002990722657e-5, 154.27, 50.95770680136047))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.61235237121582e-5, 2.201080322265625e-5, 157.97, 0.0))
*** advance 1 from 1000; 2020-08-02T04:54:34.067
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9180000000000006, 0.9180000000000006, 0.9180000000000006, 2.286672592163086e-5, 2.4259090423583984e-5, 152.34, 77.32589966617525))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.170562744140625e-5, 2.14385986328125e-5, 155.8, 0.0))
*** advance 1 from 1000; 2020-08-02T04:54:34.686
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.971, 0.971, 0.971, 3.223419189453125e-5, 3.638982772827148e-5, 169.5, 40.259626453742385))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 3.1976699829101564e-5, 3.339052200317383e-5, 174.51, 0.0))
*** advance 1 from 1000; 2020-08-02T04:54:35.369
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.9139999999999998, 0.9109999999999998, 0.9123333333333331, 0.00012138605117797851, 0.0007630276679992676, 153.87, 45.85041992855258))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.0001464986801147461, 0.0006708002090454101, 157.68, 0.0))
*** advance 1 from 1000; 2020-08-02T04:54:36.039
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9530000000000001, 0.9530000000000001, 0.9530000000000001, 9.126186370849609e-5, 0.0006014299392700195, 165.84, 193.5165647212416))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.0001334691047668457, 0.0005635905265808105, 170.56, 0.0))
*** advance 1 from 1000; 2020-08-02T04:54:37.281
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9084444444444444, 0.9049999999999998, 0.9065730994152047, 3.4956932067871095e-5, 7.480859756469726e-5, 154.27, 50.9671222390607))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.403425216674805e-5, 7.540941238403321e-5, 157.97, 0.014853541157208383))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:39.087
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7679999999999998, 0.7679999999999998, 0.7679999999999998, 0.0018275666236877441, 7.861852645874023e-5, 196.07, 195.88333536684513))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:40.243
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7839999999999999, 0.7839999999999999, 0.7839999999999999, 0.0016705775260925293, 7.839202880859375e-5, 199.16, 110.26031975448132))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:41.207
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6539999999999999, 0.6539999999999999, 0.6539999999999999, 0.001959030628204346, 7.957935333251952e-5, 256.39, 2.75))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:42.185
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9770000000000002, 0.9720000000000002, 0.9736666666666669, 0.0016251158714294433, 2.3279190063476563e-5, 224.61, 595.8000206798315))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:43.244
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.5660000000000003, 0.5660000000000003, 0.5660000000000003, 0.002075827121734619, 0.0004270601272583008, 256.75, 2373.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:44.306
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.3539999999999999, 0.3539999999999999, 0.3539999999999999, 0.0024556946754455567, 0.0005950689315795899, 248.87, 3692.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-02T04:54:45.601
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.591, 0.591, 0.591, 0.0018595290184020997, 2.8831958770751955e-5, 241.66, 2381.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.0867924528301884, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.91015625,"f1":0.9499484890109898,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.28125,"distances_sum":700.4694954752922}, best_list's length: 5, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0867924528301884,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9499484890109898,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.28125,"distances_sum":700.4694954752922}}, beam: 4, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0867924528301884,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9499484890109898,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.28125,"distances_sum":700.4694954752922}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0867924528301884,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.91015625,"f1":0.9499484890109898,"seconds":4.9211084842681885e-6,"exhaustive_search_seconds":1.9837170839309692e-6,"evaluations":8.28125,"distances_sum":700.4694954752922}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":3.3170597915523863,"state":{"restarts":5},"perf":{"precision":0.912326388888888,"recall":0.912326388888888,"f1":0.912326388888888,"seconds":2.034008502960205e-5,"exhaustive_search_seconds":7.383525371551514e-6,"evaluations":42.7265625,"distances_sum":281.4966874103993}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":3.3170597915523863,"state":{"restarts":5},"perf":{"precision":0.912326388888888,"recall":0.912326388888888,"f1":0.912326388888888,"seconds":2.034008502960205e-5,"exhaustive_search_seconds":7.383525371551514e-6,"evaluations":42.7265625,"distances_sum":281.4966874103993}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8437499999999988, conf: {"restarts":9}, perf: {"precision":0.8437499999999988,"recall":0.8437499999999988,"f1":null,"seconds":4.2147934436798096e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":120.46875,"distances_sum":123.06751562329009}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8437499999999989, conf: {"restarts":3}, perf: {"precision":0.8437499999999989,"recall":0.8437499999999989,"f1":0.8437499999999989,"seconds":3.141723573207855e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":79.96875,"distances_sum":123.29343484761193}, best_list's length: 3, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8524305555555542, conf: {"restarts":7}, perf: {"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":3.9711594581604004e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":111.78125,"distances_sum":122.8400104646571}, best_list's length: 6, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222211, conf: {"restarts":1}, perf: {"precision":0.8472222222222211,"recall":0.8472222222222211,"f1":0.8472222222222211,"seconds":2.8679147362709045e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":65.484375,"distances_sum":123.0376768228598}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8524305555555542,"state":{"restarts":7},"perf":{"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":3.9711594581604004e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":111.78125,"distances_sum":122.8400104646571}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8524305555555542,"state":{"restarts":7},"perf":{"precision":0.8524305555555542,"recall":0.8524305555555542,"f1":0.8524305555555542,"seconds":3.9711594581604004e-5,"exhaustive_search_seconds":2.7164816856384277e-5,"evaluations":111.78125,"distances_sum":122.8400104646571}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8394097222222213, conf: {"restarts":1}, perf: {"precision":0.8394097222222213,"recall":0.8394097222222213,"f1":0.8394097222222213,"seconds":6.577186286449432e-5,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":132.796875,"distances_sum":56.70689510903321}, best_list's length: 3, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8385416666666657, conf: {"restarts":12}, perf: {"precision":0.8385416666666657,"recall":0.8385416666666657,"f1":0.8385416666666657,"seconds":0.00010944344103336334,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":225.703125,"distances_sum":56.80767179070972}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8437499999999989, conf: {"restarts":17}, perf: {"precision":0.8437499999999989,"recall":0.8437499999999989,"f1":0.8437499999999989,"seconds":0.0001301690936088562,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":270.0,"distances_sum":56.63343091099523}, best_list's length: 5, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8437499999999989,"state":{"restarts":17},"perf":{"precision":0.8437499999999989,"recall":0.8437499999999989,"f1":0.8437499999999989,"seconds":0.0001301690936088562,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":270.0,"distances_sum":56.63343091099523}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.84548611111111, conf: {"restarts":2}, perf: {"precision":0.84548611111111,"recall":0.84548611111111,"f1":0.84548611111111,"seconds":7.100962102413177e-5,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":137.203125,"distances_sum":56.610519137000665}, best_list's length: 9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.84548611111111,"state":{"restarts":2},"perf":{"precision":0.84548611111111,"recall":0.84548611111111,"f1":0.84548611111111,"seconds":7.100962102413177e-5,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":137.203125,"distances_sum":56.610519137000665}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.84548611111111,"state":{"restarts":2},"perf":{"precision":0.84548611111111,"recall":0.84548611111111,"f1":0.84548611111111,"seconds":7.100962102413177e-5,"exhaustive_search_seconds":0.0003612339496612549,"evaluations":137.203125,"distances_sum":56.610519137000665}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(2), SatNeighborhood(32), 2020-08-02T04:54:54.058
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(4348, 0.024394954f0), Item(5894, 0.03367026f0), Item(6885, 0.044841066f0), Item(5389, 0.05154144f0), Item(4810, 0.05207345f0), Item(4, 0.054549955f0), Item(4812, 0.06281963f0), Item(7516, 0.06844631f0), Item(1512, 0.068623416f0), Item(812, 0.07801834f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.089877010406812, conf: {"bsize":5}, perf: {"precision":1.0,"recall":0.9072265625,"f1":0.9443743756243763,"seconds":5.826354026794434e-6,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.2578125,"distances_sum":702.5454050302505}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.094017094017094, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.9033203125,"f1":0.9398332570207576,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.2265625,"distances_sum":694.3686416745186}, best_list's length: 5, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.094017094017094,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9398332570207576,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.2265625,"distances_sum":694.3686416745186}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.094017094017094,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9398332570207576,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.2265625,"distances_sum":694.3686416745186}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.094017094017094,"state":{"bsize":2},"perf":{"precision":1.0,"recall":0.9033203125,"f1":0.9398332570207576,"seconds":5.347654223442078e-6,"exhaustive_search_seconds":2.1886080503463745e-6,"evaluations":8.2265625,"distances_sum":694.3686416745186}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.2701935483870965,"state":{"bsize":2},"perf":{"precision":0.9340277777777772,"recall":0.9340277777777772,"f1":0.9340277777777772,"seconds":1.4977529644966125e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":30.2734375,"distances_sum":294.1726111806929}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.2701935483870965,"state":{"bsize":2},"perf":{"precision":0.9340277777777772,"recall":0.9340277777777772,"f1":0.9340277777777772,"seconds":1.4977529644966125e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":30.2734375,"distances_sum":294.1726111806929}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.531609566903686,"state":{"bsize":2},"perf":{"precision":0.9383680555555546,"recall":0.9383680555555546,"f1":0.9383680555555546,"seconds":2.9671937227249146e-5,"exhaustive_search_seconds":2.7649104595184326e-5,"evaluations":60.4296875,"distances_sum":125.43466418422759}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.531609566903686,"state":{"bsize":2},"perf":{"precision":0.9383680555555546,"recall":0.9383680555555546,"f1":0.9383680555555546,"seconds":2.9671937227249146e-5,"exhaustive_search_seconds":2.7649104595184326e-5,"evaluations":60.4296875,"distances_sum":125.43466418422759}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 95.67209113100081, conf: {"bsize":4}, perf: {"precision":0.9904513888888886,"recall":0.9904513888888886,"f1":0.9904513888888886,"seconds":7.148273289203644e-5,"exhaustive_search_seconds":0.00039683468639850616,"evaluations":105.6171875,"distances_sum":55.04092752467841}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 100.38437645597142, conf: {"bsize":6}, perf: {"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.541982293128967e-5,"exhaustive_search_seconds":0.00039683468639850616,"evaluations":100.609375,"distances_sum":54.99970333930105}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.558655385319, conf: {"bsize":5}, perf: {"precision":0.9939236111111109,"recall":0.9939236111111109,"f1":0.9939236111111109,"seconds":7.343664765357971e-5,"exhaustive_search_seconds":0.00039683468639850616,"evaluations":102.4921875,"distances_sum":55.02174055110663}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.38437645597142,"state":{"bsize":6},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.541982293128967e-5,"exhaustive_search_seconds":0.00039683468639850616,"evaluations":100.609375,"distances_sum":54.99970333930105}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":100.38437645597142,"state":{"bsize":6},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.541982293128967e-5,"exhaustive_search_seconds":0.00039683468639850616,"evaluations":100.609375,"distances_sum":54.99970333930105}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":100.38437645597142,"state":{"bsize":6},"perf":{"precision":0.9965277777777777,"recall":0.9965277777777777,"f1":0.9965277777777777,"seconds":6.541982293128967e-5,"exhaustive_search_seconds":0.00039683468639850616,"evaluations":100.609375,"distances_sum":54.99970333930105}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(6), SatNeighborhood(32), 2020-08-02T04:54:58.311
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(9810, 0.04114431f0), Item(1573, 0.04838861f0), Item(8619, 0.04954128f0), Item(7118, 0.054878272f0), Item(4621, 0.05801727f0), Item(2186, 0.060240336f0), Item(5895, 0.060740184f0), Item(4469, 0.063709825f0), Item(5618, 0.069265805f0), Item(5297, 0.072483025f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
