Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed SortingAlgorithms ── v0.3.1
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.7
  Installed OrderedCollections ─ v1.3.0
  Installed JSON ─────────────── v0.21.0
  Installed DataStructures ───── v0.17.19
  Installed StatsBase ────────── v0.32.2
  Installed SimilaritySearch ─── v0.3.20
  Installed Missings ─────────── v0.4.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.17.19
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.7
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.2
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [de0858da] + Printf
  [9a3f8284] + Random
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_BGLySn/Project.toml`
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.2
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_BGLySn/Manifest.toml`
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.17.19
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.7
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.2
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [de0858da] Printf
  [9a3f8284] Random
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [4ec0a83e] Unicode
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(6, 0.0037924051f0), Item(32, 0.0563581f0), Item(50, 0.0581789f0), Item(5, 0.06020999f0)])
Vsorted = Item[Item(6, 0.0037924051f0), Item(32, 0.0563581f0), Item(50, 0.0581789f0), Item(5, 0.06020999f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004453182220458984, 0.004518397649129232, 301.0, 49.59208057448268))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004159323374430339, 0.004596765836079915, 301.0, 72.67600977420807))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0044650952021280926, 0.004667131106058756, 301.0, 40.087509512901306))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.0037447373072306317, 0.0043326616287231445, 301.0, 8.915866190567613))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.003867189089457194, 0.005349397659301758, 301.0, 44.70336355641484))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00015186468760172527, 0.0001368284225463867, 301.0, 181.48735885322094))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.8205922444661457e-5, 0.011557205518086752, 300.0, 28.501456601545215)
p = PerformanceResult(1.0, 1.0, 1.0, 6.041526794433594e-5, 3.0303001403808592e-5, 300.0, 28.501456601545215)
p = PerformanceResult(1.0, 1.0, 1.0, 0.003970623016357422, 0.0035645008087158204, 300.0, 1.6449074226929952)
p = PerformanceResult(1.0, 1.0, 1.0, 0.0001912355422973633, 2.140204111735026e-5, 300.0, 1.6449074226929952)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.8205922444661457e-5, 0.011557205518086752, 300.0, 28.501456601545215), PerformanceResult(1.0, 1.0, 1.0, 6.041526794433594e-5, 3.0303001403808592e-5, 300.0, 28.501456601545215), PerformanceResult(1.0, 1.0, 1.0, 0.003970623016357422, 0.0035645008087158204, 300.0, 1.6449074226929952), PerformanceResult(1.0, 1.0, 1.0, 0.0001912355422973633, 2.140204111735026e-5, 300.0, 1.6449074226929952))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 126.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007626517613728841, 0.0037210623423258463, 347.3333333333333, 28592.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.007035700480143229, 0.003347301483154297, 303.93333333333334, 7016.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.422332763671875e-5, 1.1467933654785157e-5, 92.06666666666666, 49.39882046356797))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2403399149576823e-5, 1.4233589172363282e-5, 84.1, 72.36079597473145))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.276897430419922e-5, 1.7031033833821615e-5, 86.2, 39.90352773666382))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 7.68899917602539e-5, 0.00016246636708577473, 93.0, 44.51241198554635))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.8299999999999998, 0.8299999999999998, 0.8299999999999998, 4.7087669372558594e-5, 0.00014226436614990235, 69.1, 188.03767831623554))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-01T23:39:48.241
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.9014444444444443, 0.8999999999999999, 0.9006842105263156, 2.3109912872314455e-5, 2.4619102478027345e-5, 152.87, 50.00340545363724))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2394657135009767e-5, 2.0289421081542967e-5, 156.27, 0.0))
*** advance 1 from 1000; 2020-08-01T23:39:48.944
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.9024444444444448, 0.9010000000000004, 0.9016842105263162, 2.3791790008544923e-5, 2.6619434356689454e-5, 152.49, 74.60786902159452))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.301454544067383e-5, 2.229928970336914e-5, 155.86, 0.0))
*** advance 1 from 1000; 2020-08-01T23:39:49.550
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.885, 0.882, 0.8833625730994151, 2.4409294128417968e-5, 3.633022308349609e-5, 152.48, 40.954528357833624))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.325773239135742e-5, 3.1690597534179685e-5, 155.81, 0.0))
*** advance 1 from 1000; 2020-08-01T23:39:50.208
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8952500000000002, 0.892, 0.8934444444444445, 0.00010179996490478516, 0.0005018091201782226, 152.4, 45.035546097904444))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010164737701416015, 0.0005669498443603516, 155.72, 0.0))
*** advance 1 from 1000; 2020-08-01T23:39:50.769
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9700000000000002, 0.9700000000000002, 0.9700000000000002, 9.804248809814454e-5, 0.0004124784469604492, 167.28, 188.0172523939982))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.740352630615235e-5, 0.00043542146682739257, 172.17, 0.0))
*** advance 1 from 1000; 2020-08-01T23:39:52.012
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.9014444444444443, 0.8999999999999999, 0.9006842105263156, 3.436088562011719e-5, 7.05099105834961e-5, 152.87, 50.01301265798975))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.332853317260742e-5, 6.98995590209961e-5, 156.27, 0.011081567296059802))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:53.957
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7770000000000004, 0.7770000000000004, 0.7770000000000004, 0.0014663028717041015, 7.649898529052735e-5, 199.24, 183.2333355396986))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:54.846
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.789, 0.789, 0.789, 0.0011857223510742187, 7.644891738891601e-5, 202.27, 102.79365253448486))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:55.620
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.6759999999999998, 0.6759999999999998, 0.6759999999999998, 0.0014986801147460938, 7.603883743286133e-5, 279.94, 2.25))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:56.449
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9680000000000004, 0.9640000000000003, 0.9658947368421056, 0.0014713859558105468, 1.9440650939941408e-5, 216.93, 599.2000204175711))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:57.417
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.593, 0.593, 0.593, 0.0016463136672973634, 0.00038908958435058595, 253.21, 2347.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:58.342
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.38199999999999995, 0.38199999999999995, NaN, 0.00162034273147583, 0.00036817073822021485, 252.15, 3682.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-01T23:39:59.290
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5940000000000001, 0.5940000000000001, 0.5940000000000001, 0.0014716935157775878, 2.847909927368164e-5, 249.37, 2370.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.0766355140186916,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9563072344322349,"seconds":0.0031060297042131424,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.359375,"distances_sum":664.0342118516564}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.0766355140186916,"state":{"restarts":8},"perf":{"precision":1.0,"recall":0.919921875,"f1":0.9563072344322349,"seconds":0.0031060297042131424,"exhaustive_search_seconds":1.9371509552001953e-6,"evaluations":8.359375,"distances_sum":664.0342118516564}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6530133055048264, conf: {"restarts":13}, perf: {"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":2.5546178221702576e-5,"exhaustive_search_seconds":6.249174475669861e-6,"evaluations":59.890625,"distances_sum":283.6803422383964}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8949652777777768, conf: {"restarts":11}, perf: {"precision":0.8949652777777768,"recall":0.8949652777777768,"f1":0.8949652777777768,"seconds":2.1494925022125244e-5,"exhaustive_search_seconds":6.249174475669861e-6,"evaluations":55.84375,"distances_sum":284.24865771457553}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6530133055048264,"state":{"restarts":13},"perf":{"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":2.5546178221702576e-5,"exhaustive_search_seconds":6.249174475669861e-6,"evaluations":59.890625,"distances_sum":283.6803422383964}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6530133055048264,"state":{"restarts":13},"perf":{"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":2.5546178221702576e-5,"exhaustive_search_seconds":6.249174475669861e-6,"evaluations":59.890625,"distances_sum":283.6803422383964}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.6530133055048264,"state":{"restarts":13},"perf":{"precision":0.90017361111111,"recall":0.90017361111111,"f1":0.90017361111111,"seconds":2.5546178221702576e-5,"exhaustive_search_seconds":6.249174475669861e-6,"evaluations":59.890625,"distances_sum":283.6803422383964}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8541666666666652, conf: {"restarts":3}, perf: {"precision":0.8541666666666652,"recall":0.8541666666666652,"f1":0.8541666666666652,"seconds":2.425350248813629e-5,"exhaustive_search_seconds":1.7352402210235596e-5,"evaluations":77.15625,"distances_sum":126.01410883571953}, best_list's length: 2, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8715277777777762, conf: {"restarts":19}, perf: {"precision":0.8715277777777762,"recall":0.8715277777777762,"f1":0.8715277777777762,"seconds":6.768293678760529e-5,"exhaustive_search_seconds":1.7352402210235596e-5,"evaluations":180.203125,"distances_sum":124.60414523538202}, best_list's length: 7, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8715277777777762,"state":{"restarts":19},"perf":{"precision":0.8715277777777762,"recall":0.8715277777777762,"f1":0.8715277777777762,"seconds":6.768293678760529e-5,"exhaustive_search_seconds":1.7352402210235596e-5,"evaluations":180.203125,"distances_sum":124.60414523538202}}, beam: 4, n: 999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8715277777777762,"state":{"restarts":19},"perf":{"precision":0.8715277777777762,"recall":0.8715277777777762,"f1":0.8715277777777762,"seconds":6.768293678760529e-5,"exhaustive_search_seconds":1.7352402210235596e-5,"evaluations":180.203125,"distances_sum":124.60414523538202}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8715277777777762,"state":{"restarts":19},"perf":{"precision":0.8715277777777762,"recall":0.8715277777777762,"f1":0.8715277777777762,"seconds":6.768293678760529e-5,"exhaustive_search_seconds":1.7352402210235596e-5,"evaluations":180.203125,"distances_sum":124.60414523538202}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999987, conf: {"restarts":23}, perf: {"precision":0.8593749999999987,"recall":0.8593749999999987,"f1":0.8593749999999987,"seconds":0.000241890549659729,"exhaustive_search_seconds":0.00036806240677833557,"evaluations":319.6171875,"distances_sum":57.52794665377587}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8619791666666656, conf: {"restarts":13}, perf: {"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":0.00011754781007766724,"exhaustive_search_seconds":0.00036806240677833557,"evaluations":234.6328125,"distances_sum":57.38727622386068}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8593749999999989, conf: {"restarts":18}, perf: {"precision":0.8593749999999989,"recall":0.8593749999999989,"f1":0.8593749999999989,"seconds":0.00012701377272605896,"exhaustive_search_seconds":0.00036806240677833557,"evaluations":271.1484375,"distances_sum":57.45524818915874}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8619791666666656,"state":{"restarts":13},"perf":{"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":0.00011754781007766724,"exhaustive_search_seconds":0.00036806240677833557,"evaluations":234.6328125,"distances_sum":57.38727622386068}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8619791666666656,"state":{"restarts":13},"perf":{"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":0.00011754781007766724,"exhaustive_search_seconds":0.00036806240677833557,"evaluations":234.6328125,"distances_sum":57.38727622386068}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.8619791666666656,"state":{"restarts":13},"perf":{"precision":0.8619791666666656,"recall":0.8619791666666656,"f1":0.8619791666666656,"seconds":0.00011754781007766724,"exhaustive_search_seconds":0.00036806240677833557,"evaluations":234.6328125,"distances_sum":57.38727622386068}}, n: 9999
added n=10000, neighborhood=3, IHCSearch(13), SatNeighborhood(32), 2020-08-01T23:40:06.836
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(6848, 0.029576214f0), Item(2755, 0.0415917f0), Item(6214, 0.043390166f0), Item(5333, 0.04683498f0), Item(1483, 0.049154885f0), Item(4367, 0.050024733f0), Item(9325, 0.050859153f0), Item(2761, 0.053048976f0), Item(8931, 0.055749252f0), Item(7059, 0.06467462f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.082706766917293,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9455388361638366,"seconds":0.003226153552532196,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.3125,"distances_sum":647.0451719239354}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.082706766917293,"state":{"bsize":3},"perf":{"precision":1.0,"recall":0.9140625,"f1":0.9455388361638366,"seconds":0.003226153552532196,"exhaustive_search_seconds":1.780688762664795e-6,"evaluations":8.3125,"distances_sum":647.0451719239354}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.091485728226397,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":1.543387770652771e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":32.0234375,"distances_sum":279.8666286468506}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.091485728226397,"state":{"bsize":3},"perf":{"precision":0.9756944444444441,"recall":0.9756944444444441,"f1":0.9756944444444441,"seconds":1.543387770652771e-5,"exhaustive_search_seconds":7.031485438346863e-6,"evaluations":32.0234375,"distances_sum":279.8666286468506}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":17.116964960927653,"state":{"bsize":3},"perf":{"precision":0.9756944444444438,"recall":0.9756944444444438,"f1":0.9756944444444438,"seconds":3.353320062160492e-5,"exhaustive_search_seconds":3.112480044364929e-5,"evaluations":61.984375,"distances_sum":119.62693517282605}}, beam: 4, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":17.116964960927653,"state":{"bsize":3},"perf":{"precision":0.9756944444444438,"recall":0.9756944444444438,"f1":0.9756944444444438,"seconds":3.353320062160492e-5,"exhaustive_search_seconds":3.112480044364929e-5,"evaluations":61.984375,"distances_sum":119.62693517282605}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 99.70985654789449, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":6.555579602718353e-5,"exhaustive_search_seconds":0.00044279545545578003,"evaluations":101.296875,"distances_sum":53.64756131358445}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 101.07600281491906, conf: {"bsize":4}, perf: {"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":6.26295804977417e-5,"exhaustive_search_seconds":0.00044279545545578003,"evaluations":99.9140625,"distances_sum":53.68160075880587}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.07600281491906,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":6.26295804977417e-5,"exhaustive_search_seconds":0.00044279545545578003,"evaluations":99.9140625,"distances_sum":53.68160075880587}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":101.07600281491906,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":6.26295804977417e-5,"exhaustive_search_seconds":0.00044279545545578003,"evaluations":99.9140625,"distances_sum":53.68160075880587}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":101.07600281491906,"state":{"bsize":4},"perf":{"precision":0.9869791666666665,"recall":0.9869791666666665,"f1":0.9869791666666665,"seconds":6.26295804977417e-5,"exhaustive_search_seconds":0.00044279545545578003,"evaluations":99.9140625,"distances_sum":53.68160075880587}}, n: 9999
added n=10000, neighborhood=3, BeamSearch(4), SatNeighborhood(32), 2020-08-01T23:40:10.647
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(5248, 0.026977645f0), Item(4223, 0.033146236f0), Item(653, 0.037046637f0), Item(8573, 0.044246547f0), Item(9036, 0.04912746f0), Item(8705, 0.049127907f0), Item(810, 0.053767834f0), Item(5875, 0.054792944f0), Item(8789, 0.056949355f0), Item(3678, 0.059245124f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
