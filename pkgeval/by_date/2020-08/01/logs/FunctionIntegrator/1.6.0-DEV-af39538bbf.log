Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_tC4XjC/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_tC4XjC/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.915197 seconds (1.38 M allocations: 72.992 MiB, 5.96% gc time)
Running: chebyshev_quadrature with k=1
  1.613793 seconds (2.24 M allocations: 128.642 MiB, 2.76% gc time)
Running: chebyshev_quadrature with k=2
  0.309239 seconds (425.06 k allocations: 24.384 MiB)
Running: chebyshev_quadrature with k=3
  0.420386 seconds (544.94 k allocations: 29.878 MiB, 3.39% gc time)
Running: chebyshev_quadrature with k=4
  0.338064 seconds (487.81 k allocations: 26.410 MiB)
Running: jacobi_quadrature with α=β=1
 42.488084 seconds (39.38 M allocations: 3.138 GiB, 10.86% gc time)
Running: laguerre_quadrature with k=1
  3.116924 seconds (3.33 M allocations: 185.528 MiB, 2.93% gc time)
Running: legendre_quadrature
  0.222699 seconds (215.15 k allocations: 12.319 MiB)
Running: lobatto_quadrature
  0.325018 seconds (343.65 k allocations: 20.600 MiB)
Running: radau_quadrature
  0.272934 seconds (326.06 k allocations: 19.590 MiB, 10.22% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 83.211265 seconds (100.02 M allocations: 1.491 GiB, 0.34% gc time)
Running: rectangle_rule_midpoint.
  0.175144 seconds (173.73 k allocations: 3.887 MiB, 17.98% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 84.912752 seconds (100.02 M allocations: 1.491 GiB, 0.33% gc time)
Running: rombergs_method
  0.551335 seconds (752.81 k allocations: 43.355 MiB)
Running: simpsons_rule
  0.040298 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.100149 seconds (113.11 k allocations: 5.978 MiB)
Running: trapezoidal_rule
  0.345901 seconds (1.52 M allocations: 25.801 MiB, 9.12% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.094891 seconds (32.64 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.600230 seconds (275.66 k allocations: 13.984 MiB)
Running: chebyshev_quadrature with k=2
  0.191697 seconds (115.88 k allocations: 3.803 MiB)
Running: chebyshev_quadrature with k=3
  0.199026 seconds (105.23 k allocations: 3.649 MiB)
Running: chebyshev_quadrature with k=4
  0.162697 seconds (87.85 k allocations: 3.295 MiB)
Running: jacobi_quadrature with α=β=1
  3.014917 seconds (536.47 k allocations: 163.517 MiB, 28.33% gc time)
Running: legendre_quadrature
  0.208978 seconds (62.49 k allocations: 3.490 MiB)
Running: lobatto_quadrature
  0.023697 seconds (16.82 k allocations: 1.040 MiB)
Running: radau_quadrature
  0.030389 seconds (16.80 k allocations: 1.040 MiB)
Running: rectangle_rule_left
 33.911299 seconds (471.41 M allocations: 7.025 GiB, 1.61% gc time)
Running: rectangle_rule_midpoint
  0.000044 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 32.476384 seconds (476.96 M allocations: 7.107 GiB, 2.21% gc time)
Running: rombergs_method
  0.405174 seconds (360.47 k allocations: 20.392 MiB)
Running: simpsons_rule
  0.000041 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.082664 seconds (19.90 k allocations: 1.195 MiB)
Running: trapezoidal_rule
  0.062898 seconds (18.35 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028752 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.104007 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.095662 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.110290 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.109705 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.314078 seconds (379.02 k allocations: 19.814 MiB)
Running: legendre_quadrature
  0.059015 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000092 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000040 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000508 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000354 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000501 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.090909 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000160 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.032901 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.019887 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.066761 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.215483 seconds (240.27 k allocations: 13.488 MiB)
Running: chebyshev_quadrature with k=2
  0.286131 seconds (295.46 k allocations: 16.579 MiB, 9.39% gc time)
Running: chebyshev_quadrature with k=3
  0.199795 seconds (275.42 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.229344 seconds (275.45 k allocations: 14.907 MiB, 9.93% gc time)
Running: jacobi_quadrature with α=β=1
  2.642136 seconds (465.79 k allocations: 164.201 MiB, 4.80% gc time)
Running: legendre_quadrature
  0.175721 seconds (193.01 k allocations: 11.105 MiB, 9.47% gc time)
Running: lobatto_quadrature
  0.164330 seconds (204.23 k allocations: 11.845 MiB)
Running: radau_quadrature
  0.167224 seconds (204.22 k allocations: 11.812 MiB)
Running: rectangle_rule_left
  1.063195 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.034878 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.068792 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.144790 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.032862 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.043372 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.054770 seconds (45.20 k allocations: 1.825 MiB, 42.36% gc time)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.045911 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.232316 seconds (247.36 k allocations: 13.590 MiB)
Running: chebyshev_quadrature with k=2
  0.218670 seconds (303.09 k allocations: 16.589 MiB)
Running: chebyshev_quadrature with k=3
  0.225954 seconds (282.83 k allocations: 15.000 MiB, 9.61% gc time)
Running: chebyshev_quadrature with k=4
  0.253927 seconds (282.87 k allocations: 15.012 MiB)
Running: hermite_quadrature with k=2
 16.304525 seconds (22.12 M allocations: 1.147 GiB, 9.31% gc time)
Running: jacobi_quadrature with α=β=1
  0.534418 seconds (475.82 k allocations: 50.442 MiB, 9.44% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.221055 seconds (288.36 k allocations: 15.899 MiB)
Running: legendre_quadrature
  0.175961 seconds (200.08 k allocations: 11.457 MiB)
Running: lobatto_quadrature
  0.274930 seconds (225.73 k allocations: 37.631 MiB, 12.42% gc time)
Running: radau_quadrature
  0.323666 seconds (222.33 k allocations: 30.298 MiB, 9.21% gc time)
Running: rectangle_rule_left
  0.039693 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.041805 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.025499 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.134117 seconds (142.74 k allocations: 8.123 MiB)
Running: simpsons_rule
  0.036624 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.039087 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.027412 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.051524 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.199289 seconds (242.49 k allocations: 13.352 MiB)
Running: chebyshev_quadrature with k=2
  0.228926 seconds (297.81 k allocations: 16.314 MiB)
Running: chebyshev_quadrature with k=3
  0.245476 seconds (277.69 k allocations: 14.770 MiB)
Running: chebyshev_quadrature with k=4
  0.224906 seconds (277.72 k allocations: 14.772 MiB)
Running: hermite_quadrature with k=2
  0.188642 seconds (177.72 k allocations: 10.162 MiB, 16.74% gc time)
Running: jacobi_quadrature with α=β=1
 11.297177 seconds (468.39 k allocations: 1.176 GiB, 12.65% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.281535 seconds (283.22 k allocations: 15.696 MiB)
Running: legendre_quadrature
  0.323496 seconds (195.24 k allocations: 11.221 MiB, 48.16% gc time)
Running: lobatto_quadrature
  0.215116 seconds (216.10 k allocations: 23.334 MiB)
Running: radau_quadrature
  0.232312 seconds (215.25 k allocations: 21.263 MiB, 6.97% gc time)
Running: rectangle_rule_left
  0.027269 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.028229 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.025129 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.117606 seconds (138.21 k allocations: 7.925 MiB)
Running: simpsons_rule
  0.033750 seconds (33.50 k allocations: 1.931 MiB)
Running: simpsons38_rule
  0.040625 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.027883 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033605 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.233170 seconds (240.82 k allocations: 13.568 MiB)
Running: chebyshev_quadrature with k=2
  0.246501 seconds (296.04 k allocations: 16.652 MiB)
Running: chebyshev_quadrature with k=3
  0.221751 seconds (276.02 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.207742 seconds (276.05 k allocations: 14.809 MiB)
Running: jacobi_quadrature with α=β=1
  2.608329 seconds (466.43 k allocations: 195.252 MiB, 4.75% gc time)
Running: legendre_quadrature
  0.165809 seconds (193.57 k allocations: 11.142 MiB)
Running: lobatto_quadrature
  0.185074 seconds (204.79 k allocations: 11.852 MiB)
Running: radau_quadrature
  0.206769 seconds (204.79 k allocations: 11.849 MiB, 9.18% gc time)
Running: rectangle_rule_left
  0.304289 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.029527 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.117410 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.153892 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.041377 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.038226 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.034095 seconds (46.19 k allocations: 1.861 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035971 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.192672 seconds (241.39 k allocations: 13.575 MiB)
Running: chebyshev_quadrature with k=2
  0.249781 seconds (296.65 k allocations: 16.586 MiB)
Running: chebyshev_quadrature with k=3
  0.201592 seconds (276.56 k allocations: 14.903 MiB)
Running: chebyshev_quadrature with k=4
  0.196898 seconds (276.59 k allocations: 14.982 MiB)
Running: jacobi_quadrature with α=β=1
  1.710008 seconds (467.10 k allocations: 149.983 MiB, 5.59% gc time)
Running: legendre_quadrature
  0.210535 seconds (194.15 k allocations: 11.151 MiB)
Running: lobatto_quadrature
  0.239901 seconds (205.37 k allocations: 11.874 MiB)
Running: radau_quadrature
  0.208900 seconds (205.36 k allocations: 11.861 MiB, 8.27% gc time)
Running: rectangle_rule_left
  1.363579 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.025983 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.201696 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.161692 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.050419 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.057062 seconds (46.17 k allocations: 2.850 MiB)
Running: trapezoidal_rule
  0.057590 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.155980 seconds (152.92 k allocations: 9.087 MiB)
Running: chebyshev_quadrature with k=1
  0.140273 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.148648 seconds (127.17 k allocations: 3.998 MiB)
Running: chebyshev_quadrature with k=3
  0.150247 seconds (115.75 k allocations: 3.829 MiB)
Running: chebyshev_quadrature with k=4
  0.176775 seconds (95.28 k allocations: 3.421 MiB, 14.60% gc time)
Running: jacobi_quadrature with α=β=1
  2.413234 seconds (510.07 k allocations: 169.322 MiB, 9.52% gc time)
Running: legendre_quadrature
  0.151007 seconds (38.51 k allocations: 2.115 MiB)
Running: lobatto_quadrature
  0.000100 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000047 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.446776 seconds (590.00 M allocations: 8.792 GiB, 3.52% gc time)
Running: rectangle_rule_midpoint
  0.000052 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.620855 seconds (592.75 M allocations: 8.833 GiB, 3.44% gc time)
Running: rombergs_method
  0.125238 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000082 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.030365 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.023937 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 37.970025 seconds (629.34 M allocations: 9.388 GiB, 5.19% gc time)
Running: chebyshev_quadrature with k=1
  0.732208 seconds (439.25 k allocations: 24.271 MiB)
Running: chebyshev_quadrature with k=2
 13.174934 seconds (496.61 k allocations: 4.042 GiB, 4.50% gc time)
Running: chebyshev_quadrature with k=3
  6.352876 seconds (290.52 k allocations: 1.643 GiB, 4.16% gc time)
Running: chebyshev_quadrature with k=4
  8.615926 seconds (290.55 k allocations: 2.262 GiB, 2.37% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 55.713294 seconds (505.35 k allocations: 13.255 GiB, 2.95% gc time)
Running: legendre_quadrature.
  5.777350 seconds (232.93 k allocations: 1.976 GiB, 1.59% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.365255 seconds (8.24 M allocations: 13.384 GiB, 4.52% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.563029 seconds (7.24 M allocations: 13.369 GiB, 3.55% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.313099 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.171729 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.261607 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.195563 seconds (456.70 k allocations: 153.723 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.292819 seconds (600.04 M allocations: 8.943 GiB, 8.19% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.801146 seconds (600.05 M allocations: 8.944 GiB, 7.76% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.595501 seconds (600.04 M allocations: 8.943 GiB, 8.38% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063777 seconds (182.52 k allocations: 4.517 MiB)
Running: chebyshev_quadrature with k=1
  0.203645 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.220471 seconds (284.13 k allocations: 15.177 MiB)
Running: chebyshev_quadrature with k=3
  0.190074 seconds (260.63 k allocations: 13.460 MiB)
Running: chebyshev_quadrature with k=4
  0.210675 seconds (260.66 k allocations: 13.456 MiB)
Running: jacobi_quadrature with α=β=1
  0.382179 seconds (405.39 k allocations: 35.849 MiB)
Running: laguerre_quadrature with k=2
  0.184399 seconds (187.98 k allocations: 10.872 MiB)
Running: legendre_quadrature
  0.131359 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.047681 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.047232 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.074329 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.043171 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.062415 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.291326 seconds (170.81 k allocations: 9.740 MiB)
Running: simpsons_rule
  0.002004 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.050955 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.210839 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002560 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.104896 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.105980 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.115548 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.120520 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  5.548563 seconds (402.19 k allocations: 906.503 MiB, 5.60% gc time)
Running: legendre_quadrature
  0.082984 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000184 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000136 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.533830 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000455 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.407071 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.064306 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000045 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000049 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000796 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000870 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.134029 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.111968 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.119313 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.116154 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.262578 seconds (388.47 k allocations: 253.765 MiB)
Running: legendre_quadrature
  0.100675 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000140 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000043 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.894894 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001170 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.904497 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.082197 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000047 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001658 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
