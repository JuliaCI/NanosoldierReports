Julia Version 1.6.0-DEV.568
Commit f2319b594e (2020-08-01 04:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_lezROT/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_lezROT/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.166968 seconds (1.38 M allocations: 73.016 MiB, 16.87% gc time)
Running: chebyshev_quadrature with k=1
  1.750121 seconds (2.25 M allocations: 128.952 MiB, 3.61% gc time)
Running: chebyshev_quadrature with k=2
  0.327556 seconds (425.06 k allocations: 24.384 MiB)
Running: chebyshev_quadrature with k=3
  0.350638 seconds (544.94 k allocations: 29.873 MiB, 3.90% gc time)
Running: chebyshev_quadrature with k=4
  0.406466 seconds (487.81 k allocations: 26.410 MiB)
Running: jacobi_quadrature with α=β=1
 43.915048 seconds (39.39 M allocations: 3.139 GiB, 9.50% gc time)
Running: laguerre_quadrature with k=1
  3.323707 seconds (3.33 M allocations: 185.554 MiB, 2.87% gc time)
Running: legendre_quadrature
  0.248366 seconds (215.18 k allocations: 12.319 MiB, 21.16% gc time)
Running: lobatto_quadrature
  0.307710 seconds (344.30 k allocations: 20.662 MiB)
Running: radau_quadrature
  0.409574 seconds (326.64 k allocations: 19.651 MiB, 37.98% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 81.702790 seconds (100.02 M allocations: 1.491 GiB, 0.18% gc time)
Running: rectangle_rule_midpoint.
  0.169388 seconds (173.73 k allocations: 3.887 MiB, 13.38% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 78.578859 seconds (100.02 M allocations: 1.491 GiB, 0.15% gc time)
Running: rombergs_method
  0.655006 seconds (752.82 k allocations: 43.326 MiB, 1.56% gc time)
Running: simpsons_rule
  0.040562 seconds (47.35 k allocations: 2.120 MiB)
Running: simpsons38_rule
  0.117316 seconds (113.18 k allocations: 5.978 MiB, 17.21% gc time)
Running: trapezoidal_rule
  0.288188 seconds (1.52 M allocations: 25.800 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.105381 seconds (32.63 k allocations: 1.943 MiB)
Running: chebyshev_quadrature with k=1
  0.454242 seconds (275.62 k allocations: 13.980 MiB)
Running: chebyshev_quadrature with k=2
  0.173546 seconds (115.88 k allocations: 3.803 MiB)
Running: chebyshev_quadrature with k=3
  0.216916 seconds (105.23 k allocations: 3.649 MiB, 16.10% gc time)
Running: chebyshev_quadrature with k=4
  0.214816 seconds (87.85 k allocations: 3.295 MiB)
Running: jacobi_quadrature with α=β=1
  2.498091 seconds (536.63 k allocations: 163.525 MiB, 7.45% gc time)
Running: legendre_quadrature
  0.207602 seconds (62.53 k allocations: 3.489 MiB)
Running: lobatto_quadrature
  0.025298 seconds (16.85 k allocations: 1.040 MiB)
Running: radau_quadrature
  0.036790 seconds (16.84 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 30.683413 seconds (471.41 M allocations: 7.025 GiB, 2.07% gc time)
Running: rectangle_rule_midpoint
  0.000067 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.030929 seconds (476.96 M allocations: 7.107 GiB, 2.13% gc time)
Running: rombergs_method
  0.354376 seconds (360.49 k allocations: 20.328 MiB, 1.65% gc time)
Running: simpsons_rule
  0.000026 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.109885 seconds (19.89 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.054964 seconds (18.34 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.027776 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.092402 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.091205 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.099135 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.100146 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.326513 seconds (378.99 k allocations: 19.813 MiB, 8.79% gc time)
Running: legendre_quadrature
  0.059891 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000130 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000056 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000522 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000372 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000519 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.067125 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000048 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.022695 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020361 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.071908 seconds (75.84 k allocations: 4.402 MiB)
Running: chebyshev_quadrature with k=1
  0.185222 seconds (240.26 k allocations: 13.488 MiB)
Running: chebyshev_quadrature with k=2
  0.244387 seconds (295.46 k allocations: 16.575 MiB, 10.51% gc time)
Running: chebyshev_quadrature with k=3
  0.224225 seconds (275.42 k allocations: 14.982 MiB)
Running: chebyshev_quadrature with k=4
  0.231672 seconds (275.45 k allocations: 14.906 MiB)
Running: jacobi_quadrature with α=β=1
  3.285701 seconds (465.75 k allocations: 164.200 MiB, 25.91% gc time)
Running: legendre_quadrature
  0.167981 seconds (193.01 k allocations: 11.105 MiB)
Running: lobatto_quadrature
  0.181905 seconds (204.21 k allocations: 11.813 MiB)
Running: radau_quadrature
  0.201202 seconds (204.21 k allocations: 11.811 MiB, 6.59% gc time)
Running: rectangle_rule_left
  1.228851 seconds (19.76 k allocations: 1.194 MiB)
Running: rectangle_rule_midpoint
  0.029104 seconds (25.93 k allocations: 1.615 MiB)
Running: rectangle_rule_right
  1.168572 seconds (18.27 k allocations: 1.105 MiB)
Running: rombergs_method
  0.160580 seconds (139.92 k allocations: 8.060 MiB)
Running: simpsons_rule
  0.030484 seconds (29.02 k allocations: 1.802 MiB)
Running: simpsons38_rule
  0.040886 seconds (44.65 k allocations: 2.788 MiB)
Running: trapezoidal_rule
  0.033600 seconds (45.20 k allocations: 1.825 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.043082 seconds (101.41 k allocations: 3.076 MiB)
Running: chebyshev_quadrature with k=1
  0.233232 seconds (247.36 k allocations: 13.593 MiB, 19.88% gc time)
Running: chebyshev_quadrature with k=2
  0.197443 seconds (303.09 k allocations: 16.585 MiB)
Running: chebyshev_quadrature with k=3
  0.202141 seconds (282.83 k allocations: 14.999 MiB)
Running: chebyshev_quadrature with k=4
  0.329901 seconds (282.87 k allocations: 15.013 MiB, 19.91% gc time)
Running: hermite_quadrature with k=2
 15.443107 seconds (22.12 M allocations: 1.148 GiB, 8.53% gc time)
Running: jacobi_quadrature with α=β=1
  0.559426 seconds (475.79 k allocations: 50.439 MiB, 14.23% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.277854 seconds (288.36 k allocations: 15.898 MiB, 12.97% gc time)
Running: legendre_quadrature
  0.191351 seconds (200.08 k allocations: 11.457 MiB)
Running: lobatto_quadrature
  0.265297 seconds (225.72 k allocations: 37.630 MiB, 8.83% gc time)
Running: radau_quadrature
  0.211624 seconds (222.32 k allocations: 30.297 MiB)
Running: rectangle_rule_left
  0.028773 seconds (22.91 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.028526 seconds (27.88 k allocations: 1.711 MiB)
Running: rectangle_rule_right
  0.025784 seconds (19.48 k allocations: 1.166 MiB)
Running: rombergs_method
  0.150768 seconds (142.74 k allocations: 8.123 MiB, 14.19% gc time)
Running: simpsons_rule
  0.038869 seconds (41.26 k allocations: 2.157 MiB)
Running: simpsons38_rule
  0.043298 seconds (60.02 k allocations: 3.196 MiB)
Running: trapezoidal_rule
  0.032800 seconds (31.57 k allocations: 1.770 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041284 seconds (61.52 k allocations: 2.360 MiB)
Running: chebyshev_quadrature with k=1
  0.199630 seconds (242.49 k allocations: 13.352 MiB)
Running: chebyshev_quadrature with k=2
  0.224453 seconds (297.81 k allocations: 16.318 MiB)
Running: chebyshev_quadrature with k=3
  0.264870 seconds (277.69 k allocations: 14.770 MiB, 9.57% gc time)
Running: chebyshev_quadrature with k=4
  0.230590 seconds (277.72 k allocations: 14.772 MiB)
Running: hermite_quadrature with k=2
  0.143981 seconds (177.72 k allocations: 10.161 MiB)
Running: jacobi_quadrature with α=β=1
  9.787843 seconds (468.36 k allocations: 1.176 GiB, 12.90% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.225989 seconds (283.22 k allocations: 15.700 MiB, 6.50% gc time)
Running: legendre_quadrature
  0.158504 seconds (195.24 k allocations: 11.221 MiB)
Running: lobatto_quadrature
  0.219123 seconds (216.08 k allocations: 23.332 MiB, 6.72% gc time)
Running: radau_quadrature
  0.189480 seconds (215.23 k allocations: 21.263 MiB)
Running: rectangle_rule_left
  0.025333 seconds (20.47 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.024601 seconds (26.66 k allocations: 1.653 MiB)
Running: rectangle_rule_right
  0.022385 seconds (18.24 k allocations: 1.106 MiB)
Running: rombergs_method
  0.107433 seconds (138.21 k allocations: 7.924 MiB)
Running: simpsons_rule
  0.030537 seconds (33.50 k allocations: 1.933 MiB)
Running: simpsons38_rule
  0.050063 seconds (50.55 k allocations: 2.939 MiB)
Running: trapezoidal_rule
  0.028653 seconds (26.25 k allocations: 1.593 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029062 seconds (32.48 k allocations: 1.957 MiB)
Running: chebyshev_quadrature with k=1
  0.230686 seconds (240.82 k allocations: 13.568 MiB, 6.32% gc time)
Running: chebyshev_quadrature with k=2
  0.254525 seconds (296.04 k allocations: 16.652 MiB)
Running: chebyshev_quadrature with k=3
  0.215759 seconds (276.02 k allocations: 15.041 MiB, 8.08% gc time)
Running: chebyshev_quadrature with k=4
  0.215281 seconds (276.05 k allocations: 14.812 MiB)
Running: jacobi_quadrature with α=β=1
  2.799572 seconds (466.40 k allocations: 195.250 MiB, 8.64% gc time)
Running: legendre_quadrature
  0.203989 seconds (193.57 k allocations: 11.137 MiB, 7.41% gc time)
Running: lobatto_quadrature
  0.186136 seconds (204.78 k allocations: 11.843 MiB)
Running: radau_quadrature
  0.176318 seconds (204.78 k allocations: 11.861 MiB)
Running: rectangle_rule_left
  0.296203 seconds (20.33 k allocations: 1.222 MiB)
Running: rectangle_rule_midpoint
  0.026987 seconds (26.30 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  0.103722 seconds (18.64 k allocations: 1.125 MiB)
Running: rombergs_method
  0.125618 seconds (151.28 k allocations: 8.812 MiB)
Running: simpsons_rule
  0.032919 seconds (29.77 k allocations: 1.835 MiB)
Running: simpsons38_rule
  0.037019 seconds (45.42 k allocations: 2.821 MiB)
Running: trapezoidal_rule
  0.044696 seconds (46.19 k allocations: 1.861 MiB, 37.07% gc time)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.030926 seconds (33.24 k allocations: 1.905 MiB)
Running: chebyshev_quadrature with k=1
  0.196541 seconds (241.39 k allocations: 13.512 MiB)
Running: chebyshev_quadrature with k=2
  0.246991 seconds (296.64 k allocations: 16.567 MiB)
Running: chebyshev_quadrature with k=3
  0.259826 seconds (276.56 k allocations: 14.903 MiB, 16.24% gc time)
Running: chebyshev_quadrature with k=4
  0.221644 seconds (276.59 k allocations: 14.986 MiB)
Running: jacobi_quadrature with α=β=1
  1.259811 seconds (467.06 k allocations: 149.923 MiB, 3.17% gc time)
Running: legendre_quadrature
  0.172860 seconds (194.15 k allocations: 11.218 MiB, 8.13% gc time)
Running: lobatto_quadrature
  0.171630 seconds (205.35 k allocations: 11.873 MiB)
Running: radau_quadrature
  0.164165 seconds (205.35 k allocations: 11.876 MiB)
Running: rectangle_rule_left
  1.201381 seconds (20.60 k allocations: 1.236 MiB)
Running: rectangle_rule_midpoint
  0.025044 seconds (26.29 k allocations: 1.635 MiB)
Running: rectangle_rule_right
  1.138847 seconds (18.62 k allocations: 1.124 MiB)
Running: rombergs_method
  0.128644 seconds (141.22 k allocations: 8.120 MiB)
Running: simpsons_rule
  0.038237 seconds (30.52 k allocations: 1.863 MiB)
Running: simpsons38_rule
  0.059114 seconds (46.17 k allocations: 2.850 MiB, 30.06% gc time)
Running: trapezoidal_rule
  0.031983 seconds (58.45 k allocations: 2.062 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.183023 seconds (152.91 k allocations: 9.091 MiB, 10.32% gc time)
Running: chebyshev_quadrature with k=1
  0.146411 seconds (91.40 k allocations: 3.305 MiB)
Running: chebyshev_quadrature with k=2
  0.152789 seconds (127.17 k allocations: 3.998 MiB)
Running: chebyshev_quadrature with k=3
  0.149496 seconds (115.75 k allocations: 3.827 MiB)
Running: chebyshev_quadrature with k=4
  0.157953 seconds (95.28 k allocations: 3.421 MiB)
Running: jacobi_quadrature with α=β=1
  1.569187 seconds (510.18 k allocations: 169.330 MiB, 5.52% gc time)
Running: legendre_quadrature
  0.101542 seconds (38.51 k allocations: 2.115 MiB)
Running: lobatto_quadrature
  0.000088 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000035 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 48.570114 seconds (590.00 M allocations: 8.792 GiB, 2.02% gc time)
Running: rectangle_rule_midpoint
  0.000036 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 47.733905 seconds (592.75 M allocations: 8.833 GiB, 1.93% gc time)
Running: rombergs_method
  0.120399 seconds (42.05 k allocations: 2.267 MiB)
Running: simpsons_rule
  0.000044 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.025485 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.019939 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.499517 seconds (629.34 M allocations: 9.388 GiB, 3.03% gc time)
Running: chebyshev_quadrature with k=1
  0.602313 seconds (439.28 k allocations: 24.270 MiB, 5.94% gc time)
Running: chebyshev_quadrature with k=2
 13.790987 seconds (496.65 k allocations: 4.042 GiB, 3.88% gc time)
Running: chebyshev_quadrature with k=3
  6.660509 seconds (290.51 k allocations: 1.643 GiB, 4.33% gc time)
Running: chebyshev_quadrature with k=4
  8.717061 seconds (290.55 k allocations: 2.262 GiB, 2.48% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 61.602634 seconds (505.37 k allocations: 13.255 GiB, 3.37% gc time)
Running: legendre_quadrature.
  7.527693 seconds (232.96 k allocations: 1.976 GiB, 2.86% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.282463 seconds (8.24 M allocations: 13.384 GiB, 3.74% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 55.900637 seconds (7.24 M allocations: 13.369 GiB, 3.05% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.265932 seconds (23.35 k allocations: 1.403 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.177968 seconds (31.97 k allocations: 1.959 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.947120 seconds (23.57 k allocations: 1.413 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.106528 seconds (456.73 k allocations: 153.722 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.683915 seconds (600.04 M allocations: 8.943 GiB, 8.14% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.984154 seconds (600.05 M allocations: 8.944 GiB, 7.75% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.910372 seconds (600.04 M allocations: 8.943 GiB, 8.38% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065989 seconds (182.52 k allocations: 4.518 MiB)
Running: chebyshev_quadrature with k=1
  0.249943 seconds (257.98 k allocations: 14.019 MiB)
Running: chebyshev_quadrature with k=2
  0.282030 seconds (284.13 k allocations: 15.177 MiB)
Running: chebyshev_quadrature with k=3
  0.269222 seconds (260.63 k allocations: 13.459 MiB)
Running: chebyshev_quadrature with k=4
  0.238024 seconds (260.66 k allocations: 13.456 MiB)
Running: jacobi_quadrature with α=β=1
  0.468447 seconds (405.36 k allocations: 35.848 MiB)
Running: laguerre_quadrature with k=2
  0.284691 seconds (187.98 k allocations: 10.872 MiB)
Running: legendre_quadrature
  0.208934 seconds (151.74 k allocations: 8.390 MiB)
Running: lobatto_quadrature
  0.054296 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.039774 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.061806 seconds (19.81 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.057320 seconds (26.77 k allocations: 1.640 MiB)
Running: rectangle_rule_right
  0.071054 seconds (18.36 k allocations: 1.094 MiB)
Running: rombergs_method
  0.335920 seconds (170.74 k allocations: 9.737 MiB)
Running: simpsons_rule
  0.003806 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.082489 seconds (81.45 k allocations: 3.520 MiB)
Running: trapezoidal_rule
  0.300394 seconds (2.39 M allocations: 37.757 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002703 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.121904 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.104701 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.118919 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.108060 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.195895 seconds (402.16 k allocations: 906.501 MiB, 4.45% gc time)
Running: legendre_quadrature
  0.066722 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000214 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000175 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.616585 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000532 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.676834 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.101491 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000055 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000943 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000740 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.103512 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.098665 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.110775 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.099391 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.132358 seconds (388.44 k allocations: 253.764 MiB)
Running: legendre_quadrature
  0.068409 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000092 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000036 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 11.255628 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001144 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.435120 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.071404 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000051 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001669 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
