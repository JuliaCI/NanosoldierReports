Julia Version 1.6.0-DEV.568
Commit f2319b594e (2020-08-01 04:30 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed VectorizationBase ─── v0.12.29
  Installed VectorizedRNG ─────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed OffsetArrays ──────── v1.1.2
  Installed DocStringExtensions ─ v0.8.2
  Installed SIMDPirates ───────── v0.8.21
  Installed UnPack ────────────── v1.0.1
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.20
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_98FLbU/Project.toml`
  [bdcacae8] LoopVectorization v0.8.20
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_98FLbU/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.20
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4225066397320916e-13, -4.4642067820177544e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.018052309120776e-10, -2.115004837932588e-10]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8119728767705965e-12, -5.704103855919129e-12, 1.4032330852842279e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2589684850183858e-10, -2.446389757437828e-10, -8.287592834221869e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8802071838640586e-11, -1.9074852808387277e-11, -6.049127865281889e-11, -3.686617677800541e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [5.634093191986267e-11, -8.375078408562331e-12, 1.1145284695146529e-10, -2.2076340755461388e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [5.215361476018643e-11, 8.328959744119402e-11, 1.0451906007347134e-10, 1.6934098567844558e-10, 2.8969271426149135e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.414735657742312e-11, 1.9245494087272164e-11, 1.900097856832872e-10, 4.0415004676219723e-11, -1.4772294498754945e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3947720756135595e-10, 1.4401857484358516e-10, 9.068190642835816e-11, -2.854293468246283e-10, 2.860178760499821e-10, 1.6022894122613707e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.2047144372124876e-11, -3.5842440126998554e-11, -1.196929222402332e-10, -9.157030689266321e-11, -4.999634040103729e-11, -2.648111729897096e-10]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [2.832334367042222e-11, 4.4015013855869256e-11, -2.213462746425421e-11, 5.643951972444938e-11, 8.994627265224153e-11, -4.2454817439363524e-11, -1.737099353249505e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.378386376733488e-11, -2.7250424139424467e-12, -2.3436808049837055e-11, 4.0605296902640475e-11, -5.0915938132334304e-12, -5.529154911698697e-11, -1.0905720770892913e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-8.439315912767142e-11, 3.692823824508196e-11, -1.6368684185863458e-11, 1.6863843654846278e-11, -1.6983092709921266e-10, 7.789990874584873e-11, -3.0171420917213254e-11, 3.1138869260871616e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.4789949527057615e-11, -4.421019106359836e-11, -2.4534041465074097e-11, 4.074363069150877e-11, 9.325584748864912e-11, -9.771361497712405e-11, -4.9488746434178665e-11, 8.367284642929462e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-5.5538906806873456e-12, -4.46798154030148e-12, -2.5809354653461014e-12, -6.607492331056619e-12, -1.2549294936547994e-11, -8.407607943183848e-12, -5.6632476486129235e-12, -1.3626211270434396e-11, 1.9317880628477724e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [8.204237289533012e-11, 2.2646107211699018e-11, 7.919886968466017e-11, -1.1086753737288291e-10, 1.6778156641805708e-10, 4.36020108907087e-11, 1.5118306606609622e-10, -2.2677193456388522e-10, -1.1166967350817458e-10]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0421663532156344e-10, 1.8814505509112678e-11, -3.197841991209316e-11, 1.2665624105068218e-10, -1.1967005164592592e-10, -2.0792922938994707e-10, 4.547806575772029e-11, -6.808476005204511e-11, 2.476523430772204e-10, -2.5059387898096475e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.509681268885288e-11, -5.469869002183714e-11, -1.325917153849332e-11, -1.2624234990710193e-11, 7.10993486308098e-11, 2.645661467681748e-11, -1.076678746159132e-10, -2.6695090582506964e-11, -2.6002644482048254e-11, 1.3926837461042396e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [3.7756131554544936e-10, 1.8375678756399338e-10, 8.13564771107167e-11, 1.653361891840177e-10, 5.6923354918581026e-11, 7.607410257293168e-10, 3.5037261980619405e-10, 1.5420020815781754e-10, 3.184474905992829e-10, 1.1215517403684316e-10, 7.218359243665873e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1341373113159534e-11, 1.9983348309438043e-11, -2.062849890904772e-11, -7.590050810080129e-11, 2.5571988970796156e-11, 4.243827511629661e-11, 4.301736744594109e-11, -3.9354519643097774e-11, -1.5454559854077843e-10, 4.480082971269894e-11, -1.0400236227781079e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [8.578160404226765e-11, 2.96058733084692e-11, -1.3117273933715978e-10, 1.0054845844820193e-10, -6.216716030849057e-11, -1.6644119416042713e-10, 1.7047652178803219e-10, 4.8941295460736e-11, -2.6424884502773693e-10, 2.2020230083796832e-10, -1.3201661985817736e-10, -3.184602581640661e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.9063418338637348e-12, 4.111888607383207e-11, 2.5592639119054184e-11, 3.519251556838299e-11, -1.2315670705476123e-10, 2.8988589306777612e-11, -4.987010804313741e-12, 8.19553314101995e-11, 5.072564590591355e-11, 7.694578307848587e-11, -2.4666346742918677e-10, 5.678857384339153e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8252622463753596e-11, -3.1371016895320736e-11, -1.80810921790453e-11, -4.346123461118623e-11, 6.628564364064005e-11, 2.727174042149727e-11, -5.086364662787446e-11, -7.157019421555333e-11, -4.183187130024635e-11, -8.688394448341796e-11, 1.3816037203184806e-10, 5.0885073932249725e-11, -1.370847879655912e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.219513461909628e-11, -1.939715055243596e-11, -3.851363672424668e-13, -1.1296297230956043e-11, -1.1986300840760578e-11, 3.4439118223872356e-13, 4.339595349733827e-11, -3.776823298551335e-11, -7.859268791321483e-13, -2.4452773139671535e-11, -2.2533419574699565e-11, 7.949196856316121e-13, 1.0258460747536446e-13]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [9.121592370320286e-13, -8.929412764757672e-12, 2.383471198186271e-11, 4.263922548375376e-12, 1.425792817144611e-11, -2.1982637932183025e-11, 1.821609529883972e-11, 5.904166044956582e-13, -1.5819012766371543e-11, 4.855693624961077e-11, 6.278977338070035e-12, 3.058731046223784e-11, -4.5826120675940274e-11, 3.588151997746536e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.4905190677013707e-11, -4.9609205632350495e-11, 8.681499963358874e-12, 3.6800562597250064e-11, 7.870970542001032e-11, 7.40825178979776e-11, -2.9529267919770064e-11, -9.172063109019746e-11, -9.820244617486651e-11, 1.772848534642435e-11, 6.419864639894968e-11, 1.3927081710107814e-10, 1.4494405675691269e-10, -5.793188151415052e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0416058560689407e-10, -4.181066604047601e-11, 1.947797478862867e-11, 5.213462994646534e-10, 3.230546941068724e-10, -4.136713194213826e-11, 4.9532178358902e-10, -6.127411911194258e-10, -6.348221948115906e-11, 4.094191652370682e-11, 1.0549157103412199e-9, 6.420759479652816e-10, -1.0300671426932695e-10, 9.997225269842147e-10, 2.4627855310654923e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.998857132207604e-11, 6.095413063178512e-11, -3.463340725318176e-12, 8.120859540383663e-11, -4.205402692747384e-11, -3.433331396962558e-11, -2.655275999075002e-11, -1.600677368429615e-10, 1.2395506843176918e-10, -2.327027459614328e-12, 1.7086176917757712e-10, -7.66456897949297e-11, -6.395495244504446e-11, -5.995326457508554e-11, -3.696043471279609e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [2.0165202840871643e-11, 1.0348166767926159e-11, -9.128919842282812e-12, 1.0406786543626367e-11, -1.8722690064976177e-11, 1.283684269992591e-11, -7.937206447650169e-12, -9.395706435100237e-12, 3.888644961591581e-11, 2.1024515461931514e-11, -1.9378831872529645e-11, 2.0932366950887626e-11, -3.528433101251949e-11, 2.6554314302984494e-11, -1.6871171126808804e-11, -1.9804380357868467e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.007261355023275e-11, 3.844204954361885e-10, 9.288347868618985e-11, -4.1888714719107156e-10, 2.0713097903524158e-10, 1.4033263440182964e-10, -3.544932125620903e-10, 2.62989852117812e-10, 1.1717160575130947e-10, 7.826348458195298e-10, 1.8798673728781523e-10, -8.234118942240798e-10, 4.262410424615837e-10, 2.6825142107611555e-10, -6.881968328542598e-10, 5.126028490565204e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1899260183033675e-11, 6.150635556423367e-14, 2.993871817125182e-11, -4.383826635034893e-11, -1.0999534616473738e-11, -5.365374811105994e-12, 2.21624940621723e-11, 1.3077761096269569e-11, -4.072742143534924e-11, 1.553646100660444e-12, 6.450728839979547e-11, -9.077882889840794e-11, -1.813227346048052e-11, -1.5474399539527894e-11, 4.6950665577583095e-11, 3.058131525790486e-11, -5.197398067480208e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.633409046381985e-10, -2.1988300069608613e-11, 1.836051310988296e-10, -4.713307522052901e-11, 6.423395149113276e-11, 4.615041682143328e-11, 9.337863815517267e-11, 1.6707524252979056e-11, -5.037014139119833e-10, -3.61755070343861e-11, 3.494939893045057e-10, -8.971967613291554e-11, 1.2925038817002132e-10, 8.5114137959863e-11, 1.9181722876737695e-10, 5.097011701593601e-11, -7.479139529920076e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1677414590849367e-10, 1.974753693900766e-10, 5.310574202610496e-11, 1.5116707885454161e-10, -1.0500267322299806e-11, 3.8753444897565714e-12, 1.7143619857051817e-10, 8.941869467093966e-11, -1.039262009783215e-10, -2.4919888375052324e-10, 3.920552771319308e-10, 1.0472955835894027e-10, 3.0437097287006054e-10, -1.0412559703354418e-11, 5.322409180053e-13, 3.5911384976827776e-10, 1.8069878926496585e-10, -1.886734102285459e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.1656455234951864e-11, -4.6354142746452e-11, -5.262457136723242e-13, -2.9818814084592304e-11, 1.699418383793727e-11, 6.001643626518671e-11, 8.336442647305375e-12, -3.4033886819884174e-11, -4.8952952802494565e-11, 6.445466382842824e-11, -8.734057921344629e-11, -2.822186928597148e-13, -5.728006957639309e-11, 3.395617120816041e-11, 1.2450129815988475e-10, 1.6906032129782034e-11, -7.050215966586393e-11, -9.872291872881078e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [3.5629188488428554e-10, -6.094402760226103e-11, -3.693045869113121e-11, 8.516320981755143e-11, -3.3405755939242e-10, 2.3320012587646488e-11, -1.7232326676719367e-11, 3.1292524127479737e-10, 1.0837952757469793e-10, 7.146656599843482e-10, -1.3273582233352954e-10, -6.172184985331342e-11, 1.6117795986758665e-10, -6.54502452235306e-10, 4.624700622457567e-11, -2.1518786752494634e-11, 6.320892698141733e-10, 2.170583712768348e-10, -7.655098777092917e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.308109838457312e-12, -3.327338404801594e-13, -1.708466701444422e-11, 3.839262241456254e-11, -5.504929845301376e-12, -2.7420621329099504e-11, -4.650502205549856e-11, 3.099298595543587e-12, -3.6990410734460966e-12, -1.8879564578355712e-11, -6.024070131616099e-13, -3.145017579697651e-11, 8.304112952828291e-11, -1.1011414002837228e-11, -5.131250979673041e-11, -9.600542583143579e-11, 1.0555112339716288e-11, -1.2203349442074796e-11, 4.303224443447107e-13]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [1.8799406475977776e-11, -2.5527469027508687e-11, 3.771338796809687e-11, -1.860056553226741e-11, -3.680167282027469e-11, 2.3108182034548008e-11, -2.74831268853859e-11, 1.198685595227289e-11, -1.0008105455483474e-11, 3.750555421788704e-11, 3.907940637759566e-11, -5.019895610303138e-11, 7.830469606062707e-11, -3.603461973256117e-11, -7.747591457274439e-11, 4.376898843361232e-11, -5.5948023991447826e-11, 2.0570434244859825e-11, -2.1163515384614584e-11, 7.53581641532719e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2168877017160185e-10, -1.639122171326335e-11, 9.392109312500452e-11, 2.0618839968733482e-11, -8.864253775442421e-11, 4.4423575928931314e-11, 3.306910301148491e-11, -6.599820689956459e-11, 5.3203885741481827e-11, -6.217248937900877e-11, -2.525079034754185e-10, -4.890277072178151e-11, 1.8739276796964077e-10, 4.3691938955703336e-11, -1.8212320540555993e-10, 8.787726102355009e-11, 6.782840955565916e-11, -1.3039336277387292e-10, 1.0166134600808618e-10, -1.3745959925870466e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-6.290301612921212e-11, 8.44249115061757e-11, 9.355649588371762e-11, -5.853129092514564e-11, -6.609135461133064e-11, 1.6939560865125713e-11, -2.8907432003677513e-11, -3.692934846810658e-12, 1.866329313315873e-11, 1.7524426354498246e-11, -1.3117962271991246e-10, 1.669222537969972e-10, 1.8185164485373662e-10, -1.243486424939988e-10, -1.3307621671287961e-10, 3.2472913247261204e-11, -5.559042115521606e-11, -8.102518656016855e-12, 3.997979725056666e-11, 3.609956777950174e-11, 1.141975403129436e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.970157784280673e-11, 3.532951708962173e-11, 1.1460610238600566e-11, 1.8485213360008856e-11, 2.6784796602896677e-11, -4.656275365277907e-13, 2.502575924268058e-11, 8.630207659621192e-12, 1.6533441282717831e-12, -3.6293190674996367e-12, 1.4078160859298805e-10, 7.258504908236318e-11, 1.9664714301370623e-11, 3.542699467118382e-11, 5.0452975131065614e-11, -2.007283228522283e-13, 5.225397892161254e-11, 1.5720313939482367e-11, 6.036282584886976e-12, -1.4054535313334782e-11, 1.181121866977719e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.828033280304453e-10, -7.018152725635218e-11, 5.136202574362869e-11, 1.6027579263777625e-10, -8.99078589355895e-11, 2.0813684109555197e-10, -6.894240733856805e-11, -3.665312497957984e-11, 5.6372018164552173e-11, -1.3201439941212811e-10, 3.8090197662654646e-11, 3.5985525670412244e-10, -1.5043544188131364e-10, 1.0394773930499923e-10, 3.354427846602448e-10, -1.8755774711110007e-10, 4.1499181868687174e-10, -1.3529566356140776e-10, -7.933720347352846e-11, 1.0995693244808535e-10, -2.7425883786236227e-10, 5.877609510207549e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.8646196525983214e-11, -1.2485901201841898e-11, 3.97184507505699e-11, -2.723776759694374e-11, -7.950196057038283e-12, 1.3704148926763082e-11, -4.2597814164935244e-11, 1.1416867451430335e-11, 2.8408386754108506e-11, 1.960498430264579e-11, 3.093081346605686e-13, -6.163314303364587e-11, -2.497990703176356e-11, 7.883182995271909e-11, -4.7196468955235105e-11, -1.6582735185011188e-11, 2.8196556201010026e-11, -8.399370088341129e-11, 2.301292489903517e-11, 5.740496966666342e-11, 4.220979121782875e-11, 2.575717417130363e-12]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.360078716317048e-11, 4.1599168554284915e-11, 2.418287792238516e-12, 3.4625635692009382e-12, 4.6771475581408595e-12, 1.276534433714005e-11, -2.361799644745588e-11, -2.0780044351909055e-12, -2.0600854355734555e-11, -1.56052948341312e-11, -1.3061773884714967e-11, -2.6796120877747853e-11, 8.233969062132473e-11, 3.4061642395499803e-12, 6.576739153274502e-12, 7.037259663889017e-12, 2.5512703061281172e-11, -4.913591755695279e-11, -2.202793503158773e-12, -4.3020698115014966e-11, -3.083500121903171e-11, -2.7668645152800764e-11, -5.2735593669694936e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1554979195693704e-11, -9.96114302154183e-12, -7.568823345849296e-11, 1.2958301098819902e-11, 8.273293161664697e-11, 4.6180614887703086e-11, -4.880673643015143e-11, 7.124856260531942e-11, 1.2011769356945479e-10, -1.3074308302662985e-10, 5.4568793927955994e-11, 2.5004442960607776e-11, -1.5607848347087838e-11, -1.557011186648083e-10, 2.3601121057481578e-11, 1.6493806320738713e-10, 9.195288974694904e-11, -1.0545964101993377e-10, 1.4926704317019812e-10, 2.28860708162415e-10, -2.615613281520268e-10, 1.1109624331595569e-10, 1.2592149545298525e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [5.92481619321461e-12, -2.8926416817398604e-11, -1.1456946502619303e-11, -1.48020484758149e-11, 1.6148637982382752e-11, 1.3087309014281345e-11, -5.169531469562116e-12, 3.321098951403201e-11, -2.2784996112079625e-11, 3.7487790649493036e-12, 6.608935620988632e-12, -1.5859202839862974e-11, 1.1295853141746193e-11, -5.7814308895842714e-11, -2.3879453969755104e-11, -2.7083113529613456e-11, 3.1522784382786995e-11, 2.7567059746047562e-11, -1.2079781619434016e-11, 6.018185949585586e-11, -4.739297843059376e-11, 7.675637903048482e-12, 1.0606626688058896e-11, -3.019251515468113e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4096290801290934e-10, 2.2655499698487347e-10, -3.9012815200578643e-10, -5.77148329128363e-11, 9.050094007534426e-11, 1.886624190206021e-10, 7.258194045789423e-12, -3.6637248790327703e-11, 1.3390510922306476e-10, -2.3282942240854254e-10, -1.5387136009792357e-10, -2.6941782138578674e-11, -2.898750128821348e-10, 4.630251737580693e-10, -7.792155809482892e-10, -1.189844889282199e-10, 1.715296793491916e-10, 3.8629188736649667e-10, 1.7713386313289448e-11, -8.733769263358226e-11, 2.830213841065188e-10, -4.4794601361530795e-10, -3.0487357083330835e-10, -5.454692253437088e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
