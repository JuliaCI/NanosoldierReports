Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.21
  Installed UnPack ────────────── v1.0.1
  Installed StackPointers ─────── v0.1.2
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed DocStringExtensions ─ v0.8.2
  Installed VectorizationBase ─── v0.12.29
  Installed OffsetArrays ──────── v1.1.2
  Installed PaddedMatrices ────── v0.1.10
  Installed LoopVectorization ─── v0.8.20
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.20
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.21
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.29
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_12viE2/Project.toml`
  [bdcacae8] LoopVectorization v0.8.20
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_12viE2/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.20
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.21
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.29
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [2.5941249148786483e-11, 6.601852398091523e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3156565553961173e-10, 4.688265331509456e-10]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [4.782241269651877e-11, 8.79474271187064e-11, 1.0378764514484828e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1302370978304452e-10, -4.4506298646496134e-10, -1.5756285165480222e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-5.12467845936726e-12, -3.669065051781217e-12, -1.0725309529391325e-11, -6.408318320438866e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.553424056055519e-12, -2.454925152051146e-12, 3.0173641363262504e-12, -5.10658182406587e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [6.0602634022188795e-12, -3.2367442059921814e-12, 1.149036421566052e-11, -6.6489036498751375e-12, 2.930988785010413e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.246469759687898e-11, 2.276001609402556e-11, -6.908074112743634e-11, 4.8749448922080774e-11, 2.5979218776228663e-14]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1986135134710594e-10, 9.775047438154161e-11, -1.278951389238614e-10, -4.266390574159118e-10, 1.8648682598154664e-10, -2.7234758892547006e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.896971882497382e-11, 3.8897773890766985e-11, 4.700062561369123e-11, -1.3405743182204333e-10, 8.152811759032375e-11, 9.680700685521515e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-9.270673118066952e-11, 2.1581714193530388e-10, -2.905775620121176e-11, -2.0633483810428288e-10, 4.2336423256017497e-10, -7.03307412308618e-11, 7.113243327694363e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.348654852355139e-11, -2.566924450775332e-11, 1.4768630762773682e-11, 1.0314504805819524e-10, -5.507738709553678e-11, 2.2488011452992396e-11, -2.7750024500505788e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [2.6842972289387035e-12, -2.8740343438471427e-12, 5.2027271379984086e-12, -1.2643219804431283e-12, 6.012079722950148e-12, -8.222866831886222e-12, 1.2402745497297474e-11, -5.069611397345852e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.8351986597053838e-13, -2.779432239918833e-11, -1.777966662785957e-11, -8.2492901398723e-12, 8.568701304056958e-13, -5.502620581410156e-11, -3.631495104627902e-11, -1.5206169656778457e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0291435198771524e-10, 2.109348251622123e-10, 1.234683466577735e-10, 3.0755908930757414e-10, -3.893317890302228e-10, 4.2291237178915253e-10, 2.697821965824687e-10, 5.971569905227625e-10, 6.213873859906016e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.762657266458973e-12, 5.6918914026482526e-12, 3.090150357820676e-11, -2.2590818105072685e-11, -2.2398416454905146e-11, 1.2120748849042684e-11, 6.161737786669619e-11, -4.672395803595464e-11, -5.6094018319186034e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.7611889724378216e-10, -4.727185309860715e-11, -5.003264469394253e-11, -1.3724466008113723e-11, -1.0347944723321234e-11, -3.702653739168227e-10, -9.191103433892067e-11, -1.05538910943892e-10, -3.1285307677819674e-11, -1.8363310871905014e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.982347867610315e-12, -9.39448518977315e-12, 2.9184654692926415e-11, -4.753208937557929e-11, 2.4232171824678517e-11, -1.0138223593969542e-11, -1.8991919148447778e-11, 5.954592374735057e-11, -9.459744099160616e-11, 5.398725910765734e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-4.276135001646253e-11, 1.0637202230157072e-10, -2.501920892683529e-11, 1.8775203614040947e-11, 1.1664003096711895e-12, -7.351386166476459e-11, 2.2239965424830643e-10, -3.995193065264857e-11, 4.6705750378350785e-11, -2.525757381022231e-13, -6.422751219758993e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-7.48268114136863e-12, 8.072764678956901e-11, 1.0328848887297681e-11, 9.540812584418745e-12, 8.953504604392037e-12, -1.5562773292288057e-11, 1.6494783317000383e-10, 2.0105694886751735e-11, 1.757749501507533e-11, 1.9618084934336366e-11, -1.4176437801438624e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [3.1546365519830033e-10, 4.919287199811606e-10, -4.095779271295896e-11, -5.8537619196386e-11, 5.82307757568401e-10, 9.450484839135243e-11, 6.181362088852893e-10, 9.63856550129094e-10, -6.094180715621178e-11, -1.3616607841271389e-10, 1.1523504372945581e-9, 1.7948087460695206e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.177875740334457e-10, 2.6261215424483453e-11, 2.0518364785004906e-10, -1.2216883060744976e-10, -2.525556430654774e-10, 7.958655956485927e-11, 6.516491790620194e-10, 3.5036196166515765e-11, 4.218501103991912e-10, -2.419472400205791e-10, -4.981869361486702e-10, 1.5945067488587483e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.4243051182916133e-10, 7.675127200457155e-11, -1.2661549586567844e-10, -1.674113070393446e-10, -3.550632010629329e-10, 9.894018937472993e-11, 2.8592728185117267e-10, 1.4719137020335893e-10, -2.613753657954021e-10, -3.236650947258113e-10, -7.043715610777213e-10, 2.119657782628792e-10, -1.5111245588173006e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.397593483280616e-11, 4.098632544469183e-11, 2.177458213736827e-11, -7.440625893195829e-11, -1.658895243394909e-11, 8.082201574666215e-12, 1.1691003720670778e-10, 1.0302025899022738e-10, 5.179789930309653e-11, -1.4452028462841326e-10, -3.9002356899686674e-11, 1.80748749301074e-11, -7.41340322463202e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.2494116852224124e-10, -8.964784470322229e-11, -1.1123146848035503e-9, 1.0189382670944269e-10, -4.744868942196945e-10, 1.0592482446725171e-10, -5.897560217960063e-11, 2.4646307217324193e-10, -1.811162331222249e-10, -2.2154015288933238e-9, 2.1094526125864377e-10, -9.52314671565091e-10, 2.1227908320042843e-10, -1.175035624356724e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.477041291143905e-11, -9.45081790604263e-11, -5.5031756929224684e-11, 1.5502377159748448e-10, 1.1497802709925509e-10, 2.8334667945273395e-11, -6.876021974022706e-11, -1.7877188618342643e-10, -1.8421364433862664e-10, -1.0637746239439139e-10, 2.9701174852903023e-10, 2.284421540821313e-10, 5.6211924004401226e-11, -1.3050416303173051e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [4.916627105444604e-10, -8.256295647157685e-11, 4.0523606692488556e-10, 7.674705315707797e-11, 1.400697335895984e-10, 3.350002497626292e-10, -3.966351691531145e-10, 9.90702853087555e-10, -1.505602309492815e-10, 8.202418744218676e-10, 1.599747001534979e-10, 2.7903568344811447e-10, 6.697782328757285e-10, -7.926198586361011e-10, -4.013012144810091e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1142198275138071e-11, 1.395126236758415e-10, 7.881961749944821e-11, -9.031664305325648e-11, -6.853562162234539e-11, 5.111444600913728e-11, 4.607536574496862e-11, 2.701039392150051e-11, 2.822737599217362e-10, 1.430005003300039e-10, -1.583557729389895e-10, -1.3491430195244902e-10, 1.0075829059985608e-10, 9.229994546444686e-11, 2.8061331036610682e-11]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.3771250806371427e-10, 1.1007594835632517e-10, 5.8092419763511316e-11, 4.321187851985542e-11, 3.7077141357144683e-10, 1.6631207522266322e-10, -6.960210185980031e-12, -1.0614509271533734e-10, 2.7280377956628854e-10, 2.1502888358782002e-10, 1.0822209794980608e-10, 9.499179220995302e-11, 7.42365058314931e-10, 3.3275893152051594e-10, -7.007727731433988e-12, -2.1148260920256234e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.6110536782985037e-10, 1.484117273520269e-10, -5.099431987787284e-11, 1.703435170696821e-10, 2.190745362895541e-10, -1.8605728069331917e-10, 2.565176959734572e-10, 3.4021052641719507e-10, -7.403315738230276e-10, 2.7774560429350004e-10, -1.176317931950166e-10, 3.64796859386729e-10, 4.577642709335805e-10, -3.588164210199807e-10, 5.24652765676592e-10, 6.894054216388668e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-1.497715285125878e-10, 4.015632271148206e-11, 7.506884003305458e-11, 4.511280238261861e-12, 1.550628514479513e-10, -7.958167458355092e-11, 1.816413686128726e-11, 1.8575030402701032e-10, -2.8959667996986127e-10, 8.005840435032496e-11, 1.448563491379673e-10, 8.786749106093339e-12, 3.043794105650477e-10, -1.5667755981496612e-10, 3.497890865844511e-11, 3.757820721261851e-10, 9.194867089945546e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.1684767576887225e-11, -3.7741143543712496e-11, 5.773115319129829e-11, 3.6020741944753354e-11, -7.029266058111716e-11, -4.340849901751653e-11, 8.84556872193798e-11, 5.736611186080154e-11, -1.0129341809772541e-10, -8.48546788390081e-11, 1.1552714340723469e-10, 6.944045338741489e-11, -1.4764922617871434e-10, -9.812217705018611e-11, 1.7694579135252297e-10, 1.1601875016253871e-10, 2.2911672559189356e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [3.6875169584504874e-11, -1.1611167582969983e-10, 4.8189452428459845e-11, 8.75615135953467e-11, 4.4956816047658776e-10, -3.251565683370927e-11, -5.81756864903582e-11, 5.5469628890136846e-11, 2.8171243116048572e-11, 5.892886179026391e-11, -2.520343933554159e-10, 9.913181386878023e-11, 1.6388157497715383e-10, 9.162821612562766e-10, -7.8891337906839e-11, -1.1651124509626243e-10, 1.1782974596030726e-10, 6.42299546882441e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.353184479555239e-13, 2.542788202219981e-11, -5.843348027667616e-11, 9.633405184672483e-12, 4.358224892087037e-11, 4.6771031492198745e-11, 1.038809038789168e-10, 7.794920264814209e-11, -1.7944068453346063e-10, -1.1624035067825389e-12, 5.881051201583887e-11, -1.1999246041227707e-10, 1.747690880904429e-11, 9.001177581069442e-11, 8.537792695051394e-11, 2.0929258326418676e-10, 1.6753354259435582e-10, -3.594742281620711e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [-6.443279243484312e-11, 3.515854274382946e-11, -3.333466835897525e-11, -1.9558177299927593e-10, 2.800666365487814e-10, 1.4078960219876535e-11, 2.7204904995414836e-11, 2.573630197844068e-10, 2.0474821837979107e-10, -1.0778955505941212e-10, 8.539102758220452e-11, -7.329892248719716e-11, -3.928015690490838e-10, 5.648805867508599e-10, 3.5212721627431165e-11, 7.149725256283546e-11, 5.280009762742566e-10, 3.8768988019910466e-10, 3.587574681773731e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.5493386835460115e-11, 5.5568882828538335e-12, -2.0077162155018868e-11, -1.82664994241577e-12, -2.033628820896638e-11, 5.633715716157894e-12, -7.865419426877907e-11, 3.0627278491124343e-11, -4.9881543340291046e-11, -9.179035309614392e-11, 1.2068568366885302e-11, -3.664413217308038e-11, -3.784528246342234e-12, -4.19134726925563e-11, 1.103228619570018e-11, -1.6301160421505756e-10, 6.072342628726801e-11, -1.0367240399489219e-10, 6.388223283693151e-12]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0275247319668779e-10, 1.762923140802286e-11, 1.9451995569852443e-10, -8.794709405179901e-11, 6.73683331342545e-12, -1.0621059587379023e-11, -1.1012435408019883e-10, -3.81155107476161e-11, -6.805334074044822e-12, 5.732170293981653e-11, -1.8668000478783142e-10, 3.308398000001489e-11, 4.003590792223122e-10, -1.747882949487689e-10, 3.568922934960028e-11, -2.876654470185258e-11, -2.3106028201880235e-10, -7.140221747192754e-11, -1.3777090579480955e-11, 1.2784284741940155e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3382628338831637e-11, 1.5780088347128185e-10, -1.4776380119485566e-10, -1.3859347003375433e-10, 1.2257084236466653e-10, -1.1890632922728628e-10, -1.7324031098553405e-10, -1.3400636156291057e-10, 5.570144345767858e-11, -9.944323142718758e-11, 1.7523538176078546e-11, 3.005908855158168e-10, -2.9227209541460297e-10, -2.672880805576483e-10, 2.3597745979486717e-10, -2.2134971633391842e-10, -3.617103283559686e-10, -2.6019586485404034e-10, 1.0993805865666673e-10, -1.9963319886073805e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-6.55583365372081e-11, -7.634193277539225e-11, -5.386857626632491e-11, 7.683098601773963e-11, 4.616307336391401e-12, 4.438005518636601e-11, 2.7521762646642856e-11, 4.0215164531787195e-11, 3.6977088058165464e-11, -7.049938410830237e-11, -1.383213543704187e-10, -1.5901335803647498e-10, -1.1410961064939329e-10, 1.6153811621677505e-10, 6.986411449361185e-12, 8.324607669862871e-11, 5.6666449310682765e-11, 7.923128819697922e-11, 7.438072380239191e-11, -1.3725764969052534e-10, -1.1606271499431386e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.900257728948418e-11, 1.0163203612023608e-11, -1.2379874902990196e-11, 2.7290614212915898e-11, 3.072941900938986e-11, -1.57773794029481e-12, 1.361533108479307e-11, -7.471023799610066e-12, -1.7313039890609616e-11, -3.9952929853370733e-11, -3.640221457601456e-11, 2.0757617846811627e-11, -2.4074964244391595e-11, 5.491518351163904e-11, 6.200706614833962e-11, -2.781552765895867e-12, 2.7773783273232766e-11, -1.4290679750672552e-11, -3.389555303101588e-11, -8.008060881081747e-11, 6.23945339839338e-14]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-3.66802144213807e-11, 2.8703928123263722e-11, 2.4983570767744823e-11, 4.5670356385585364e-11, -2.549405131446747e-12, -2.60709231980627e-11, 2.109312724485335e-11, -2.7675639557855902e-11, -8.666622974828897e-12, -1.9271251261443467e-12, -6.939204766354123e-11, -7.766376430851096e-11, 5.598121965988412e-11, 5.1419091207094425e-11, 8.88433770995789e-11, 4.631850458736153e-13, -4.752420679210445e-11, 4.073918979941027e-11, -5.549194437293181e-11, -1.5148216014893023e-11, -5.204392472535346e-12, -1.4234802225843168e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.8428814030357898e-10, 7.255729350674756e-11, 5.898592725372964e-11, 5.151368220879249e-11, -1.968092355753015e-11, -1.3094825224158058e-10, -1.784639103163954e-11, -6.044365008506247e-11, -1.2728396114880525e-10, -6.114508899202065e-11, -8.91001716851747e-11, 3.69541730549372e-10, 1.4096190881218718e-10, 1.0792655658065087e-10, 9.532974409864892e-11, -4.84223772190262e-11, -2.6586532975159116e-10, -4.242506346230357e-11, -1.282043360362195e-10, -2.4482771365796907e-10, -1.2216327949232664e-10, -1.8316936856166421e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4295120642771053e-10, 3.693687578021354e-10, -9.999634453805584e-11, -3.047246899257061e-10, 2.823536959795092e-10, -5.264543245786513e-10, -6.951705877611403e-11, -5.78084247138122e-11, 2.1302271058232236e-10, -3.815436855347798e-11, 6.666245333519782e-11, -2.884533722991023e-10, 7.404876711802899e-10, -2.0858259563993897e-10, -5.87347392944082e-10, 5.887339504795364e-10, -1.07979492014465e-9, -1.4008805226950471e-10, -1.2196299525868426e-10, 4.084041993479559e-10, -7.09023950662413e-11, 1.475335409395484e-10, 1.0856737731046451e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.715383721849321e-11, 8.669509554692922e-12, 1.8032686455171643e-11, -3.043065799346323e-11, 5.70676839117823e-12, -1.0862866162142382e-11, -2.849465108312188e-11, 1.5954570997678275e-11, 6.587397294310904e-12, 4.8371306959893445e-11, -1.5668244479627447e-11, -1.1291068080510058e-10, 1.8103296639537803e-11, 3.551869909301786e-11, -5.991462881382859e-11, 1.0283551787892975e-11, -1.7268408925019685e-11, -5.6301074913278626e-11, 2.811195720653359e-11, 1.5864198843473787e-11, 9.596079486584586e-11, -3.2936320337739744e-11, -1.6784351686283117e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-4.8135162522555675e-11, 2.570588186756595e-11, -5.134948022345043e-11, 3.465072673236591e-11, -1.3113288233057574e-11, -4.670153153085721e-12, -4.435329881147254e-11, 3.6662006763776844e-11, 2.0502488595752766e-11, -2.423095057935143e-11, 9.892087149410145e-13, -6.793898776891183e-12, -1.0032696895478921e-10, 4.702460643102313e-11, -9.998435412938989e-11, 7.004419266820605e-11, -2.8536839558057636e-11, -1.1125766974373619e-11, -8.617850877357114e-11, 7.633182974586816e-11, 4.1130432393288174e-11, -4.6075032678061234e-11, -2.365996287778671e-12, -1.1946110767269147e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.783751007484625e-11, -3.7515546225108665e-12, -7.345790642432348e-12, -6.243339178979568e-12, 3.588240815588506e-11, 4.4827475065289946e-11, 2.9104274545943554e-11, -1.6591839013813114e-11, -2.657396525052036e-11, -7.474310059762956e-11, -3.929778724653943e-11, -5.945688386077563e-12, 5.633871147381342e-11, -4.996336677720592e-12, -1.336375454741301e-11, -9.965805958245255e-12, 6.913292160959372e-11, 9.156697622358934e-11, 5.360378807495181e-11, -3.3172908864287365e-11, -5.072287034835199e-11, -1.5070078518419905e-10, -8.186418209987778e-11, -1.0742517986273015e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
