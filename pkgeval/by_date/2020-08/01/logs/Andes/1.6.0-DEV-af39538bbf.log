Julia Version 1.6.0-DEV.564
Commit af39538bbf (2020-07-31 15:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed VersionParsing â”€ v1.2.0
  Installed Conda â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.4.1
  Installed Parsers â”€â”€â”€â”€â”€â”€â”€â”€ v1.0.7
  Installed Andes â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.1.0
  Installed MacroTools â”€â”€â”€â”€â”€ v0.5.5
  Installed PyCall â”€â”€â”€â”€â”€â”€â”€â”€â”€ v1.91.4
  Installed JSON â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ v0.21.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [93a26e3f] + Andes v0.1.0
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [93a26e3f] + Andes v0.1.0
  [8f4d0f93] + Conda v1.4.1
  [682c06a0] + JSON v0.21.0
  [1914dd2f] + MacroTools v0.5.5
  [69de0a69] + Parsers v1.0.7
  [438e738f] + PyCall v1.91.4
  [81def892] + VersionParsing v1.2.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building Conda â”€â†’ `~/.julia/packages/Conda/3rPhK/deps/build.log`
   Building PyCall â†’ `~/.julia/packages/PyCall/zqDXB/deps/build.log`
   Building Andes â”€â†’ `~/.julia/packages/Andes/z2jyF/deps/build.log`
    Testing Andes
Status `/tmp/jl_qHhvyE/Project.toml`
  [93a26e3f] Andes v0.1.0
  [8f4d0f93] Conda v1.4.1
  [438e738f] PyCall v1.91.4
  [44cfe95a] Pkg
  [8dfed614] Test
Status `/tmp/jl_qHhvyE/Manifest.toml`
  [93a26e3f] Andes v0.1.0
  [8f4d0f93] Conda v1.4.1
  [682c06a0] JSON v0.21.0
  [1914dd2f] MacroTools v0.5.5
  [69de0a69] Parsers v1.0.7
  [438e738f] PyCall v1.91.4
  [81def892] VersionParsing v1.2.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Matplotlib is building the font cache; this may take a moment.
Working directory: "/home/pkgeval/.julia/packages/Andes/z2jyF/test"
Generating numerical calls at the first launch.
Numerical code generation (full mode) started...
[K Code generation for Bus ( 1/45).[K Code generation for PQ ( 2/45).[K Code generation for PV ( 3/45).[K Code generation for Slack ( 4/45).[K Code generation for Shunt ( 5/45).[K Code generation for Line ( 6/45).[K Code generation for Area ( 7/45).[K Code generation for ACE ( 8/45).[K Code generation for GENCLS ( 9/45).[K Code generation for GENROU (10/45).[K Code generation for TG2 (11/45).[K Code generation for TGOV1 (12/45).[K Code generation for IEEEG1 (13/45).[K Code generation for EXDC2 (14/45).[K Code generation for IEEEX1 (15/45).[K Code generation for ESDC2A (16/45).[K Code generation for EXST1 (17/45).[K Code generation for ESST3A (18/45).[K Code generation for SEXS (19/45).[K Code generation for IEEEST (20/45).[K Code generation for ST2CUT (21/45).[K Code generation for BusFreq (22/45).[K Code generation for BusROCOF (23/45).[K Code generation for PMU (24/45).[K Code generation for COI (25/45).[K Code generation for Node (26/45).[K Code generation for Ground (27/45).[K Code generation for R (28/45).[K Code generation for L (29/45).[K Code generation for C (30/45).[K Code generation for RCp (31/45).[K Code generation for RCs (32/45).[K Code generation for RLs (33/45).[K Code generation for RLCs (34/45).[K Code generation for RLCp (35/45).[K Code generation for VSCShunt (36/45).[K Code generation for REGCA1 (37/45).[K Code generation for REECA1 (38/45).[K Code generation for REPCA1 (39/45).[K Code generation for Toggler (40/45).[K Code generation for Fault (41/45).[K Code generation for PI2 (42/45).[K Code generation for TestDB1 (43/45).[K Code generation for TestPI (44/45).[K Code generation for TestLagAWFreeze (45/45).Successfully generated numerical code in 127.2629 seconds.
Parsing input file "/home/pkgeval/.julia/conda/3/lib/python3.8/site-packages/andes/cases/kundur/kundur_full.xlsx"
Input file parsed in 0.1308 seconds.

-> Power flow calculation
Sparse Solver: UMFPACK
Method: NR method
Power flow initialized.
0: |F(x)| = 14.9283   
1: |F(x)| = 3.60858   
2: |F(x)| = 0.17009   
3: |F(x)| = 0.00203822
4: |F(x)| = 3.76399e-07
Converged in 5 iterations in 0.0711 seconds.
-> Single process finished in 127.6524 seconds.
Test Summary:           | Pass  Total
Andes.jl run power flow |    1      1
    Testing Andes tests passed 
