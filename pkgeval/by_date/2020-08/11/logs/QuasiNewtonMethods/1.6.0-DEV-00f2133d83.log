Julia Version 1.6.0-DEV.609
Commit 00f2133d83 (2020-08-10 13:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed VectorizationBase ─── v0.12.30
  Installed UnPack ────────────── v1.0.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.22
  Installed StackPointers ─────── v0.1.2
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.23
  Installed OffsetArrays ──────── v1.1.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_BY2iX8/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_BY2iX8/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-6.119105222524013e-12, -1.2565060103497672e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.07224867768241e-9, -6.157405918472136e-9]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-3.733235942604551e-12, -1.886046874233216e-12, -2.347189109741521e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6177059691813156e-12, -4.373723605510804e-12, -3.9608316626527085e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [3.6637359812630166e-13, 6.702993715634875e-11, 2.0459189897792385e-12, 1.4336709597273511e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1293410651092017e-11, -8.817835350782843e-12, -2.661504350243149e-11, -1.991973253012702e-11]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [-1.4652723479002816e-11, 6.8047789625325095e-12, -3.012490257248146e-11, 1.468247745606277e-11, -1.2327805443135276e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1393553595316916e-11, -6.187017564940334e-11, 4.793809793568471e-11, -1.2141665450826622e-10, 1.2043921415738623e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-4.799716180059477e-11, -7.694112014178245e-11, -2.8736346635582777e-11, -9.655720667467449e-11, -1.5083445603636392e-10, -6.014488906913584e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.174371793728369e-12, -3.250455460346302e-11, 2.3869795029440866e-12, -5.24558174674894e-12, -6.440614708225212e-11, 3.886002630792973e-12]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [-5.766498389903063e-12, 4.339861803259737e-12, -6.022848886289012e-12, -9.530154443382344e-12, 9.346079465899493e-12, -1.2870149390664665e-11, 2.8408386754108506e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [4.040989765030645e-12, -3.1005198408706747e-12, -2.200672977181739e-11, 9.64472945952366e-12, -5.859313034761726e-12, -4.178679624544657e-11, -8.052114530698873e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [1.8667556389573292e-10, -8.199640966211064e-11, 3.8958725134818906e-10, 9.64419655247184e-11, 3.695967976113934e-10, -1.746808253599852e-10, 7.99439625609466e-10, 2.1243429237927103e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.047606694257411e-11, 1.7944890018384285e-10, 1.2440715124739654e-11, 4.351852211925689e-12, 8.55071569105803e-11, 3.508981993860516e-10, 2.4509727580834806e-11, 1.0045519971413341e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [1.209969902049579e-10, 4.413114318424505e-11, 7.201417240310093e-11, -7.161637949337774e-11, 2.425288858631802e-10, 8.748335389441309e-11, 1.4523737768001865e-10, -1.3708900681308478e-10, -1.2722045639179669e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.976219519254755e-12, 3.701039474890422e-12, -4.983347068332478e-12, -3.0615510127063317e-12, -1.3180567748349858e-11, 4.4155790135391726e-12, -1.0236367309346406e-11, -5.413780534979651e-12, 2.1889157153509586e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [8.44124770082999e-12, 6.6204819404447335e-12, -5.259459534556754e-12, 1.5427659150191175e-11, -6.595834989298055e-12, 1.1053824522377909e-11, 7.579492589115944e-12, -9.284573110335259e-12, 3.179212448856106e-11, -1.3358314454592346e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1689761098286908e-11, 3.3085534312249365e-11, -1.9786283722567077e-11, -4.224021132870348e-11, -1.433031471265167e-11, 4.598477154615921e-11, 6.600453517080496e-11, -4.2420511547902606e-11, -8.033218534819753e-11, -2.8400948259843517e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-5.236144851039626e-11, 2.0299761871456212e-11, 2.466915560717098e-13, -7.749201280660145e-11, -4.7791326451829264e-11, -1.0298262242969258e-10, 4.383560181508983e-11, 1.6848744621711376e-12, -1.5171586209561383e-10, -9.985556825853337e-11, 7.533973445106312e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [4.011524445957093e-11, 1.4132917058873318e-11, 9.187317573378095e-12, -5.119993318203342e-11, -8.003486762220291e-12, 8.101519455294692e-11, 3.590527875019234e-11, 1.8906654020156566e-11, -1.0355516444349178e-10, -1.5501044892118898e-11, -2.064304283067031e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [2.3597346299197852e-11, 2.5279778270714814e-12, -2.285061029283497e-12, 1.0403455874552492e-11, -1.4101941836486276e-11, 9.81814629597011e-12, 4.92854645983698e-11, 5.7553961596568115e-12, -5.325961893731801e-12, 2.172861890414879e-11, -2.972200263684499e-11, 1.8883339336639438e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.219502442419753e-11, 3.9752645619728355e-12, -1.5382251028484006e-11, 6.34536867494262e-12, -4.539046916107736e-11, -9.690359625835754e-12, -6.534417451575791e-11, 8.12616640644137e-12, -3.090205868971907e-11, 1.18822729433532e-11, -9.15502118559175e-11, -2.1013413231685263e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6147306542156912e-11, 2.752820194018568e-11, 3.419953209515825e-11, 3.798050762782168e-11, 1.0128520244734318e-10, 4.534927988686377e-11, -5.1466719774850844e-11, 5.201727937276246e-11, 6.98485713712671e-11, 7.924860767616337e-11, 1.9746515533825004e-10, 9.429301783825395e-11, 4.9960036108132044e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.812250598007495e-11, -1.3147816169123416e-11, 2.5439428341655912e-11, 4.7903458977316404e-11, 3.221956035304174e-11, 2.3111068614412034e-11, -8.81953399201052e-11, -4.0673242551747535e-11, 4.778377693526181e-11, 1.0147860329823288e-10, 7.468448082192936e-11, 4.700595468420943e-11, 3.0286217977959495e-11]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-8.052036815087149e-11, 1.2717604747081168e-11, 3.967914885549817e-11, 1.0407807948809022e-10, 4.874767256524137e-12, -1.4152201632811057e-10, 2.0952817259001222e-10, -1.4596401864963582e-10, 2.5050628238432182e-11, 8.372302851000768e-11, 2.1616886058950513e-10, 2.6214586057449196e-12, -2.883374650153314e-10, 4.175912948767291e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3494150241655234e-10, -1.146083228320549e-12, -2.5792701308091637e-12, 1.3074830107484559e-10, 2.899724904636969e-11, 7.946110436307663e-11, 6.910583216779287e-11, -2.72341815765742e-10, -7.582823258189819e-13, -1.0986656029388087e-11, 2.6830293542445816e-10, 5.959077675754543e-11, 1.535522820006463e-10, 1.2517720193727655e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [4.181766044553115e-12, -1.2631895529580106e-11, -1.2743883726074046e-10, 1.0857270638098271e-10, 4.512012985458114e-11, -7.373512911357238e-11, -9.331857508954045e-11, 1.1368683772161603e-11, -2.152078515393896e-11, -2.4870450143765765e-10, 2.174442848001945e-10, 8.79669670439398e-11, -1.4628920297354853e-10, -1.967280782722014e-10, -1.2680967387268538e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.46480613697031e-11, -5.551781256940558e-12, -8.108846927257218e-11, -1.5384249429928332e-11, -3.223088462789292e-11, 5.660871771340226e-11, -2.5169866191276924e-11, -4.3345549372020287e-11, -1.2967404927621828e-11, -1.6531764845950647e-10, -2.5749957721643568e-11, -5.562428295746713e-11, 1.1005973910016564e-10, -4.736755432332984e-11, -3.8968828164342995e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [6.013034514751325e-11, -3.135625092909322e-11, -6.451394973794322e-12, 9.585998661520989e-11, -6.612399516825462e-11, 1.3399281684201014e-11, 1.3346213023623932e-10, -8.851586130731448e-11, 1.2484191458383975e-10, -5.96876992275952e-11, -3.3872904481313526e-12, 2.0395596322941856e-10, -1.3309242596903914e-10, 2.559730205575761e-11, 2.6262547692113003e-10, -1.7290247011914062e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0401512984259398e-10, -1.8157253478534585e-11, 3.462452546898476e-11, -4.473543757654852e-11, -3.311839691377827e-11, 1.638866820030671e-11, 8.540568252612957e-11, 2.8771429683160932e-11, -1.9589974087352857e-10, -4.091793570637492e-11, 7.122791245706139e-11, -8.774525550592216e-11, -7.005362956391536e-11, 3.377231827528249e-11, 1.71066494303318e-10, 5.812439418662052e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2118794856519344e-10, 1.7947088259973043e-10, 1.0317524612446505e-11, -1.481744726916645e-10, -1.0873335565264597e-10, 2.9163182979630164e-10, -1.0942124983870372e-10, -1.246063252580143e-10, -2.421406408714688e-10, 3.6329295127757177e-10, 2.4107160712105724e-11, -2.950371058574319e-10, -2.3456436792912427e-10, 6.087574888624658e-10, -2.1074841871637773e-10, -2.41812792012297e-10, -1.1030176771953393e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [6.030953514368775e-11, -7.495515319533297e-11, -6.841527344647602e-11, -1.3005707621971396e-11, 5.940381520019855e-11, 5.047717799300244e-11, 7.514766586780297e-11, 3.505462586872454e-11, 1.1856937653931254e-10, -1.4764267586286905e-10, -1.4193091146808e-10, -3.2149505280187896e-11, 1.1621215101342841e-10, 1.0007750184115594e-10, 1.5267809239105645e-10, 5.928457724735381e-11, 2.8846924848835442e-11]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [-4.608591286370256e-11, 3.8470382435207284e-10, 7.526201883933936e-12, 2.2003732169650903e-11, 2.5105473255848665e-11, -3.201253706563989e-10, 4.9691806225382606e-11, 2.2514168307452564e-10, -1.2284484540714402e-10, -8.532663464677626e-11, 7.721536743332535e-10, 1.0501155500719506e-11, 4.94717600219019e-11, 5.533862257323108e-11, -6.441145394830983e-10, 8.394840378400659e-11, 4.491602645373405e-10, -2.3863455655970256e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.201017311800115e-11, 7.893463660479938e-12, -3.824385252926277e-12, -1.81702430879227e-11, -2.5932145319984556e-11, 2.959632539045742e-11, 7.483991204537688e-11, -1.5307310974321808e-11, -2.7672975022596802e-11, -8.288292274727382e-11, 1.6880052911005805e-11, -4.94859708766171e-12, -3.44887451930731e-11, -5.3879456451966234e-11, 5.774847267048244e-11, 1.5517764850869753e-10, -3.1542213285717935e-11, -5.5119131481262684e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.5329293390209386e-11, -5.5436877310910404e-11, -1.9314105870193998e-11, 2.761679773755077e-11, -2.0197954420098085e-11, -1.1685208356482235e-11, -5.981837247759358e-11, 1.684052897132915e-11, -3.1418201373867305e-12, 3.3308911184803947e-11, -1.1527878651662604e-10, -3.923639191327766e-11, 5.6483706600829464e-11, -3.929090386378675e-11, -1.8951173963444035e-11, -1.129663029786343e-10, 3.3263392040794315e-11, -7.090439346768562e-12, -8.091083358863216e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.777833684244115e-11, -1.1347678352535695e-10, -8.458533873323404e-11, 2.353672812205332e-14, 2.3780977187470853e-12, -8.636646953164018e-12, -1.602273869139026e-11, 8.425793396327208e-11, 2.7289281945286348e-12, -1.0133982542015474e-10, -2.1237578362587328e-10, -1.804187910181554e-10, 8.05067124076686e-12, -1.004984984120938e-11, -1.4684475857507095e-11, -2.4218738126080552e-11, 1.7365442417371924e-10, 9.262146605237831e-12, 1.6764367671839864e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [8.705036691480927e-12, -1.9705126419466978e-10, -1.094082602293156e-10, 2.0740564821153384e-10, 9.515610521759754e-11, -1.7753409853327184e-10, 4.030442646296706e-11, -3.5150549138052156e-11, 1.0949485762523636e-10, 1.7434365062740653e-10, -1.6379120282294934e-12, -3.878375398613798e-10, -2.2671875488100568e-10, 4.0706704673709737e-10, 1.8243317967403527e-10, -3.551969829374002e-10, 8.153255848242225e-11, -6.771683214168434e-11, 2.2651769349124606e-10, 3.6799319147462484e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.5981217177672988e-11, -9.969358671924056e-12, -7.875267105106332e-11, -8.933109807429673e-11, 1.9269030815394217e-11, 2.9099389564635203e-11, -3.383637814380336e-11, -3.9960479369938184e-11, -5.968880945061983e-11, -9.29478716216181e-12, 4.7865933439084074e-11, -1.9247270444111564e-11, -1.567128649071492e-10, -1.801071514151431e-10, 3.40500960760437e-11, 5.844791317599629e-11, -7.297895621150019e-11, -8.154232844503895e-11, -1.209911060229274e-10, -1.6225687460291738e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [3.36854988347568e-11, 1.2282797001716972e-10, -8.60645998912446e-11, 1.3734169357348947e-10, -8.638401105542926e-11, -1.1522782727979575e-10, 1.2368062130008184e-10, -1.3868650672321792e-10, -3.7742031722132197e-11, -3.7917557982325434e-11, 5.363753885490041e-11, 2.265365672826647e-10, -1.887945355605325e-10, 2.7400948177103146e-10, -1.7267365315376537e-10, -2.3681212546478037e-10, 2.4192337022554966e-10, -2.627813522337874e-10, -7.000588997385648e-11, -6.293510157462379e-11, 4.1591174948507614e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1390888232654106e-13, 2.0545143364358864e-10, -5.484938059296951e-10, -5.369560351908831e-11, -1.599299581656055e-10, -2.2558621637358556e-11, 1.7450552114439688e-10, 1.9851009724902724e-11, 1.8318080385881785e-10, -9.134082379347319e-11, -8.235079285157099e-12, 4.165596756422474e-10, -1.1158781676456897e-9, -1.0196643529525318e-10, -3.091227274154562e-10, -3.91764398699479e-11, 3.4250269287383617e-10, 2.7673197067201727e-11, 3.756908117935609e-10, -1.8622114961175384e-10, -2.4554358546424737e-11]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1019529733147237e-10, -1.8055001937966608e-10, 4.9217740993867665e-11, -1.1684431200364997e-10, 6.516831518865729e-11, -1.9260959494005192e-10, -1.2483070133129104e-10, -4.7365111832675666e-11, 1.1299450264345978e-10, -4.073608117494132e-11, 2.134639132123084e-10, -2.265057030825801e-10, -3.501023915220003e-10, 9.870637640574387e-11, -2.5233926059797795e-10, 1.138267258227188e-10, -3.729347941572314e-10, -2.3970414542162644e-10, -8.980760579646585e-11, 2.4076829419072965e-10, -8.996936529115374e-11, 4.330884539882618e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.708100576067409e-11, -2.6522350982105536e-10, 3.997358000162876e-11, -1.5495482674765526e-10, 2.4739477133550736e-10, 4.693527788646179e-10, 3.764066835998392e-10, 6.335998392614783e-11, 5.995848262330128e-11, 1.6688184167890086e-10, -1.1531109400664263e-10, 8.810641105583272e-11, -5.197948738100422e-10, 9.822609392529102e-11, -3.036214613061361e-10, 4.724229896169163e-10, 9.217184793186561e-10, 7.42297112665824e-10, 1.269340188514434e-10, 1.291800000302601e-10, 3.4190827946645186e-10, -2.375539764898349e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-3.1056268667839504e-11, -4.3477443867345755e-11, 4.225264582657928e-11, -1.060027621235804e-10, 4.300937384016379e-11, -4.78652673052693e-11, 5.302425165609748e-12, 4.3509640335059885e-11, 5.750133702520088e-11, -1.9820256547120607e-11, 2.1644686043487127e-11, -6.213829450985031e-11, -8.203959733776856e-11, 7.991385331251877e-11, -2.1252333226584597e-10, 8.473133306097225e-11, -9.287903779409135e-11, 1.2352341371979492e-11, 8.744827084683493e-11, 1.1712142367059641e-10, -4.228772887415744e-11, 4.463251990216577e-11, -2.658762099372325e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.74473801862041e-11, 9.988299076724161e-11, 4.1909364867365184e-11, -1.588453812928492e-10, -1.267441707142325e-11, 7.430300819066815e-11, -6.345779457461731e-11, 1.3999024162103524e-11, 2.4188873126718136e-11, -1.8914747546006083e-10, -7.267186852288887e-11, 1.1327183635501115e-10, 2.018416545013224e-10, 8.503220350064566e-11, -3.1746549833400195e-10, -3.117306413003007e-11, 1.5618462079203255e-10, -1.1878142913701595e-10, 2.6080249071469552e-11, 5.524958268665614e-11, -3.6210567877503763e-10, -1.3317247304911461e-10, -5.1206816564786095e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [2.752242878045763e-12, 2.506017615644396e-11, -4.466760294974392e-12, -1.3748557847748089e-11, -7.38953342960258e-12, 2.4524160480154933e-11, -1.5332179970073412e-13, 1.8169243887200537e-11, -5.218181442501191e-11, -1.5008772003000104e-11, -1.9827806063688058e-11, -2.547073663095034e-12, 5.595968133320639e-12, 5.05273600737155e-11, -8.326117573176361e-12, -2.6808999464833505e-11, -1.619449019329977e-11, 4.792433117017936e-11, -2.2426505097428162e-14, 3.5216718430319816e-11, -1.0457157362253611e-10, -3.13086223613368e-11, -3.994604647061806e-11, -4.973021994203464e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.3897993866862635e-11, -1.7323253942436168e-11, -6.167000243806342e-11, -1.3872614168519704e-10, 8.274336771307844e-11, 5.7441384981871124e-11, 2.1528911986479216e-10, -2.0989998628095918e-10, 4.074007797782997e-11, -1.812318073390884e-10, -7.364553411548513e-12, -3.163025397157071e-12, 3.3552050027196856e-11, -3.9868663925801684e-11, -1.2678780247910026e-10, -2.8509772320717275e-10, 1.5828005572871007e-10, 1.2317058484256904e-10, 4.2958392398873e-10, -4.312166179687438e-10, 7.119016487422414e-11, -3.6341951670237904e-10, 3.545386206837975e-12, -2.949607225133377e-11]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
