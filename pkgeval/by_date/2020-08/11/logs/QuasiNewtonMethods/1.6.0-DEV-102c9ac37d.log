Julia Version 1.6.0-DEV.620
Commit 102c9ac37d (2020-08-11 16:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed UnPack ────────────── v1.0.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed SIMDPirates ───────── v0.8.23
  Installed VectorizationBase ─── v0.12.30
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed DocStringExtensions ─ v0.8.2
  Installed PaddedMatrices ────── v0.1.10
  Installed SLEEFPirates ──────── v0.5.5
  Installed OffsetArrays ──────── v1.1.2
  Installed LoopVectorization ─── v0.8.22
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_P8E0Kt/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_P8E0Kt/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-7.48534567662773e-12, -1.579680830587904e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.23861151837923e-10, 4.4276227129103063e-10]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [1.2316636599507547e-10, 2.4668578291198173e-10, -7.077338715077985e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.9345360303144616e-10, -7.957657865986789e-10, 7.03399338775057e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [5.310951678438869e-11, -4.854971979995071e-11, 1.1318213033462143e-10, -9.31013044436213e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.6377345580262954e-11, 9.978329273963027e-11, 7.499201259975052e-11, 1.9822521402090842e-10]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [1.801669924361704e-12, 1.6162626792493029e-12, 3.981037721700886e-12, 3.4028335704761048e-12, -1.1040057756872557e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2415358458260926e-10, -1.566420326781781e-10, -4.508132755987049e-10, -3.113445057323361e-10, 4.388267527133394e-12]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.467104298631284e-11, -1.1263212584822213e-11, 6.692868481650294e-12, -5.1841864134871685e-11, -2.3281598870994458e-11, 1.3067991133652868e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.5979351175587908e-10, -1.163650287239193e-10, 1.56097357262297e-13, 3.21909610079274e-10, -2.353683914435578e-10, 1.968980534172715e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.386379899770418e-11, -4.705236200663876e-11, 8.678391338889924e-12, 2.973044033183214e-11, -8.371003890061957e-11, 1.656119685833346e-11, 5.6847859752906515e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.483214131160821e-13, -3.287703442822476e-12, -7.499112442133082e-12, -1.5297763056310032e-12, -7.524980638606849e-12, -1.500599644543854e-11, -2.4201751713803787e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [2.1844082098709805e-11, -3.267608406076761e-11, 3.154010386197115e-11, 1.7529755425016447e-11, 4.693712085668267e-11, -6.763545279397931e-11, 6.256728468656547e-11, 3.957811856025728e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [4.297406874798071e-11, -5.289546578524096e-12, -2.8034019550204903e-11, -6.319278433863929e-11, 8.868150658258855e-11, -4.1175951537297806e-12, -5.53335155473178e-11, -1.3638634666079952e-10]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [-2.071072202625146e-10, 4.835567501970672e-10, 2.5260682434691262e-11, -7.952876135419729e-10, -4.2291414814599193e-10, 9.920704258092883e-10, 6.260059137730423e-11, -1.5927367202905884e-9, -1.9604429191133477e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.33710878112015e-12, -4.654610030740969e-12, -5.389300117286666e-11, -6.832867605055526e-12, -1.7229440096855342e-11, -1.0469625166820151e-11, -1.0596878929902687e-10, -1.4290013616857777e-11, 7.902567489281864e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0252398929821993e-10, -5.4587778741677084e-11, -3.497291345411213e-11, 2.5635049638594865e-12, 6.611355907182315e-11, -2.050842828893451e-10, -1.0995349075670902e-10, -8.260447881269783e-11, 2.0869972416903693e-12, 1.2397505244621243e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3519629860070381e-11, -1.2384204772786234e-11, 3.601186016055635e-11, -3.951061700036007e-12, 7.423395231853647e-12, -2.4724999825309624e-11, -2.3045787500564074e-11, 7.045275474126811e-11, -4.280686916047216e-12, 1.3239631613259917e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [8.240297333372837e-12, 1.4406698056745881e-11, -2.661015852112314e-11, 1.01054720147431e-11, -2.0491719432413902e-11, 1.6212364783996236e-11, 2.978284285859445e-11, -5.533773439481138e-11, 2.070654758767887e-11, -3.671696280349579e-11, -7.760458942129844e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [2.933149279016334e-10, 4.773017536763291e-10, -6.831657461958685e-10, -6.324748502706257e-10, 5.429128258072069e-10, 5.712819106662437e-10, 9.480449758569875e-10, -1.3572868384770231e-9, -1.2478820199390839e-9, 1.0988685517077101e-9, 8.461453759878168e-12]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-4.134204090178173e-11, -6.816769371198461e-13, -1.8171020244039937e-12, 1.4210854715202004e-14, -5.2763349245310565e-12, 9.846345960795588e-12, -8.305056642399222e-11, 3.339550858072471e-13, 6.2032601277906e-12, -6.090683513093609e-13, -1.1433298752194787e-11, 2.0121460053701412e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1440915709547426e-10, -6.912392880309426e-11, -1.9029000597470258e-11, 3.37094796520887e-11, -9.2105545412835e-11, -2.445251778837587e-10, 4.2433789815277123e-10, -1.3866485737423773e-10, -2.978983726364959e-11, 5.49582601649945e-11, -1.7726187184763376e-10, -4.792636287831442e-10]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [1.3142731347670633e-10, 1.174007557835921e-10, -1.6994017304483577e-10, 1.3796097597662538e-10, 5.047273710090394e-11, -1.1231071628259315e-10, 2.7542701452887286e-10, 2.5563906547176884e-10, -3.286788619050185e-10, 2.83275403134553e-10, 1.0578005138484059e-10, -2.3012869387883939e-10, 8.859579736508749e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.0660450300292723e-10, -3.632560918731542e-11, 3.9086733849558186e-11, -5.0558002229195154e-11, 1.1368816998924558e-10, -4.541234055466248e-11, 2.2615198602693454e-10, -7.209888241987983e-11, 7.925082812221262e-11, -9.358214203558646e-11, 2.2040369529463533e-10, -8.554268404736831e-11, 1.2364709256473816e-10]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-2.4877655491195583e-11, 5.868550090326607e-11, -2.4700796963372795e-11, -3.227551559348285e-11, 9.414691248821327e-12, 5.887956788797055e-12, 1.3680834243245954e-11, -4.920064355928844e-11, 1.1633027874324853e-10, -4.756250948645402e-11, -5.987199624968298e-11, 1.9690915564751776e-11, 1.0981215936567423e-11, 2.7378765921071135e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.922285215679949e-12, 5.331668440078374e-11, -2.1467494448756952e-11, -8.299483322815604e-11, -7.37943040007849e-11, -6.801326168925925e-11, 3.945377358149926e-11, -1.7823298392727338e-11, 1.0621681312272813e-10, -4.1371350789631833e-11, -1.6615209208481474e-10, -1.5765522221045103e-10, -1.364793833502631e-10, 7.549627589753527e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [5.796252366963017e-12, 2.4436452861209546e-11, 1.7964740806064583e-11, 4.6814330190159126e-11, 9.914735699112498e-12, -3.0453417565468044e-11, 4.87594409293024e-11, 1.546585082223828e-11, 4.7624570953530565e-11, 3.042721630208689e-11, 9.460454641896376e-11, 1.931899085150235e-11, -5.942535352687628e-11, 1.0224088242694052e-10, -6.229461391171753e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [5.1131765488321435e-11, -3.435629558623532e-11, 1.1178280523438389e-10, 1.9168666653968103e-11, 4.209055326498401e-11, -7.061751183812248e-11, 3.3270053378942066e-11, 1.0583223186699797e-10, -7.726952411246657e-11, 2.1963741936303904e-10, 4.082223448165223e-11, 8.544387419817667e-11, -1.4418155558360013e-10, 6.144884601155809e-11, -3.772981926886132e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [1.457789444714308e-11, 7.821299163879303e-12, -2.300981627456622e-11, -3.225331113299035e-11, -1.4098722189714863e-11, 3.2515767856011735e-11, 1.071143174158351e-12, 1.6749490683309887e-11, 3.0107472070994845e-11, 1.2433165608172203e-11, -4.604128189811263e-11, -7.142009206262401e-11, -2.9692581726692424e-11, 6.58106902307054e-11, 2.282618538629322e-13, 3.015365734881925e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6884760256630216e-10, -3.2316727072156937e-10, 1.105986413563187e-10, -3.040514506835734e-10, 1.1412693012857744e-10, -1.4724854668912712e-10, 1.2715872799162753e-10, 8.196177070374233e-11, -3.1778513154279153e-10, -6.492949511383017e-10, 1.9940715745292437e-10, -6.186120504736436e-10, 2.2956014866792884e-10, -2.8600932733269246e-10, 2.360220907604571e-10, 1.8065948736989412e-10]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [1.0615730516860822e-11, 1.9391155348102984e-12, 7.0961014841941505e-12, -5.88453730188121e-11, -4.0288883340622306e-11, 2.2168045177295426e-11, 7.280909208873254e-11, 3.195999020988438e-11, 2.386157937905864e-11, -8.510192550659212e-12, 1.3586021196942966e-11, -1.2180123576399637e-10, -8.823586306050402e-11, 4.230726879939084e-11, 1.4491985389497586e-10, 6.498979132629756e-11, -3.5836889011875428e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.3508305585219205e-11, -3.854305763439925e-11, 8.320788502658161e-11, -2.2556512213611768e-11, 1.974975738505691e-11, 9.071499107449199e-11, 3.3647751251919544e-11, -1.8441026483628775e-11, -2.8449353983717174e-11, -7.84242670803792e-11, 1.5722956270280974e-10, -4.52861081967626e-11, 3.2843727737486006e-11, 1.9091084269007297e-10, 7.03479496877435e-11, -3.533440207093008e-11, 5.615286013949117e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [4.62880844764868e-11, -4.8507642347317415e-11, 9.824430158289488e-11, 3.71298103374329e-10, 2.642530638752305e-10, 1.5192958002785417e-11, 3.2637226254905727e-10, 9.157319347252724e-11, -1.0054590493524529e-10, 1.0053158305822762e-10, -1.01910702099417e-10, 2.0271206935262853e-10, 7.524276757209236e-10, 5.463736130195684e-10, 4.277733722801713e-11, 6.436846611279634e-10, 1.6684564840829808e-10, -2.0748347484556007e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.416467605660728e-12, -2.0834889369325538e-11, 2.8623770020885786e-12, -2.814826149943883e-11, -1.018579665057473e-10, -2.775368823648705e-11, -9.432021830235726e-11, -6.831035737064894e-11, 1.2671974580769074e-10, -1.6131429525501062e-11, -4.525146923839429e-11, 4.756639526704021e-12, -5.6213700361240626e-11, -2.1270696315411897e-10, -5.032929628612237e-11, -1.8851187277846293e-10, -1.4167733652925563e-10, 2.490982975444922e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [1.0913114856236916e-10, -1.021724926886236e-10, -1.6334722463540174e-10, 1.904321145218546e-11, -3.0023539210333183e-11, -4.292022293128639e-11, 2.844726676443088e-10, -8.640377302526758e-11, -1.5378520679121266e-10, 2.2599522253585747e-10, -1.986947273380224e-10, -3.353159971908326e-10, 5.0890180958163e-11, -4.151412547059863e-11, -8.955158836698729e-11, 5.556712867615943e-10, -1.720459330556423e-10, -3.171943818713885e-10, -2.773781204723491e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.984679749663883e-12, 1.4195311592857252e-12, -1.521560655248777e-12, -5.74562619704011e-12, 4.3938186422565195e-12, 5.076161713191141e-12, 6.714184763723097e-12, -3.831379657981415e-13, -3.2144287231972157e-12, -2.0227486352553115e-11, 3.511857471494295e-12, -3.4416913763379853e-12, -1.1395329124752607e-11, 8.395728556820359e-12, 1.0024203689340538e-11, 1.3448575586494371e-11, -9.07940389538453e-13, -7.157052728246072e-12, -6.405986852087153e-14]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [4.760214444843314e-11, -4.4810710697618106e-11, 1.4510614931850796e-12, 6.424394349835438e-11, 2.0441648374003307e-11, 3.684097471534642e-11, -1.7635115590053374e-11, 1.1576295477766507e-11, 1.528799309369333e-11, -1.9223622693687048e-11, 9.660183764026442e-11, -9.513301257868534e-11, 4.970690525851751e-12, 1.3416467936622212e-10, 3.8264502677520795e-11, 7.225176013037071e-11, -3.4227731759983726e-11, 2.326761006088418e-11, 2.931543896522726e-11, -3.8783420919230593e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.0286927693291545e-10, -2.539968235737433e-12, -2.7640112421067897e-11, -6.364575533268635e-12, 7.169664861805813e-11, 8.907541371172556e-12, 2.965412360111941e-10, 7.695954984399123e-11, 2.1956592100025318e-10, 2.0709989279055208e-10, 4.135294329188355e-10, 2.566169499118587e-12, -3.386102509495004e-11, -2.5688784432986722e-11, 1.5174994594246982e-10, 1.4085621558024286e-11, 5.968550098600645e-10, 1.610958033637644e-10, 4.368567729784445e-10, 4.2184966630998133e-10]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-2.843947299879801e-12, -8.272960094757309e-11, -5.441158634766907e-11, -3.6591840668620534e-10, -4.167539646715568e-10, 3.455422614706549e-10, 4.802216402310933e-10, -2.5973112549593225e-11, 9.685141577620016e-11, 2.869939841332325e-10, 4.289901767151605e-13, -1.58247637216391e-10, -1.0845890852095863e-10, -7.306213412050511e-10, -8.316187738444114e-10, 6.887450609838197e-10, 9.40215461042726e-10, -3.7938763242095774e-11, 1.9519075245000295e-10, 5.764535515595526e-10, 4.898970118460966e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.1646351378024065e-11, 1.4375833856661302e-11, 2.333688797762079e-12, -2.1801671579169124e-11, -1.5908385719853868e-11, 3.445910223831561e-12, 2.4330537584660306e-11, -3.2051472587113494e-11, -3.208178167568576e-11, -3.710654006283676e-11, -3.897870914926216e-11, 2.8898661241782975e-11, 3.489875055606717e-12, -4.552536125856932e-11, -3.2497227131500495e-11, 7.481570918344005e-12, 4.621170113239259e-11, -6.746336822516241e-11, -6.593736667781513e-11, -7.61534169058109e-11, 6.861178292183467e-14]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [8.946399177034436e-12, -3.5166314305001833e-11, 1.5631496097512354e-11, -1.4799494962858262e-11, -4.353017946101545e-11, -8.349321234391027e-12, -5.15998355155034e-12, -1.6214585230045486e-11, -8.163048015319418e-11, -1.8274937119144852e-11, -5.465872199295063e-11, 1.5104584250025255e-11, -7.726574935418284e-11, 3.147015981141976e-11, -3.1512681353262906e-11, -8.855594035850345e-11, -1.8995804929033966e-11, -1.3323897540828966e-11, -3.563394024297395e-11, -1.6962264925979298e-10, -3.753863886402087e-11, -1.0654421789269009e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.17355055965163e-11, -7.487455100374518e-12, -5.045663886704688e-11, 1.1548095812941028e-11, 2.680078381445128e-12, 9.948708523666028e-12, 5.56910073612471e-12, 4.9290571624283075e-11, 1.2561063300609021e-12, 1.8712364990847163e-11, 1.5569767697343195e-12, 1.2407519456303362e-10, -1.5474843628737744e-11, -1.0067802147517568e-10, 2.3101298651795332e-11, 5.998312957444796e-12, 2.0137891354465864e-11, 1.1763701124323234e-11, 9.888645458033807e-11, 2.497113626986902e-12, 3.865885389586765e-11, 2.5019986082952528e-12]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1004575029005537e-10, -1.579366637471935e-10, -9.93027882145725e-11, -6.744493852295363e-11, -1.2613465827371328e-11, 5.3723692161611325e-12, -7.707989801986059e-11, 4.422129329384461e-11, -1.3015022393148001e-10, 3.906053258617703e-11, 1.9430013153964865e-11, -1.9718637833676667e-10, -3.0413960239172866e-10, -1.9168522324974901e-10, -1.4239343038013885e-10, -2.0408008616357165e-11, 3.9823699893304365e-12, -1.4986456520205138e-10, 7.34110550126843e-11, -2.592153158786914e-10, 7.993072870249307e-11, 2.7409186031945865e-11, -7.338019081259972e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.0657253685385513e-10, 9.772405107355553e-12, 4.087352678538991e-11, 4.202171943745725e-11, -9.931722111389263e-12, -1.516620162789195e-11, -5.073164111024653e-11, -5.446743056580772e-11, -8.255673922263895e-11, -1.2742673582977204e-10, 3.969247153179367e-11, 4.125935149090765e-10, 4.1093350944265694e-11, 8.712142118838528e-11, 8.222955649728192e-11, -1.5848766743431497e-11, -3.8156811044132155e-11, -1.0373779613104261e-10, -1.0320611032454963e-10, -1.5404433284516017e-10, -2.7067215135900824e-10, 7.60651541753532e-11, -2.8738456059329565e-11]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [1.4450196594850695e-10, 5.1884718743622216e-11, -4.93843854698639e-10, 9.533196454469817e-11, 2.7630586707516613e-10, 6.251343886987115e-10, -1.830965379312488e-10, -2.8182345346294824e-11, -6.029093890802528e-10, 1.7872214819192322e-10, 2.2946555766623078e-10, -1.869777666030359e-10, 2.80591994084034e-10, 1.0429301866565766e-10, -9.933948108553636e-10, 1.8047274785715217e-10, 5.485170095909098e-10, 1.2477698874135967e-9, -3.6807257242088554e-10, -6.434219823603371e-11, -1.2083060108025734e-9, 3.420994598712923e-10, 4.5748493882058483e-10, -3.6215153098595465e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [4.757523264231622e-10, -1.8714341187830996e-10, 3.012190497031497e-11, 1.1132361699139892e-10, 4.972631195698796e-10, -6.612349556789354e-10, -1.0887571955109365e-9, 5.810907310888069e-13, -5.918389112125055e-10, -1.559889994950936e-10, 3.0569280440317925e-10, -2.5717361573640574e-10, 9.525893407413832e-10, -3.6931646629767556e-10, 4.779998619142134e-11, 2.210536198532509e-10, 1.0208878187256687e-9, -1.330953680600544e-9, -2.1765145241658956e-9, 5.205613717862434e-12, -1.1829986990008479e-9, -3.1847724457634285e-10, 6.175335798275228e-10, -5.171244543689113e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
