Julia Version 1.6.0-DEV.609
Commit 00f2133d83 (2020-08-10 13:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_aeNHhy/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_aeNHhy/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.178815 seconds (1.34 M allocations: 71.192 MiB, 11.42% gc time)
Running: chebyshev_quadrature with k=1
  1.713586 seconds (2.25 M allocations: 129.052 MiB, 3.68% gc time)
Running: chebyshev_quadrature with k=2
  0.280789 seconds (425.40 k allocations: 24.405 MiB)
Running: chebyshev_quadrature with k=3
  0.353530 seconds (545.35 k allocations: 29.913 MiB, 4.06% gc time)
Running: chebyshev_quadrature with k=4
  0.300632 seconds (488.16 k allocations: 26.425 MiB)
Running: jacobi_quadrature with α=β=1
 42.972458 seconds (39.42 M allocations: 3.140 GiB, 10.79% gc time)
Running: laguerre_quadrature with k=1
  3.681970 seconds (3.34 M allocations: 185.915 MiB, 5.79% gc time)
Running: legendre_quadrature
  0.241026 seconds (215.42 k allocations: 12.340 MiB)
Running: lobatto_quadrature
  0.478091 seconds (344.68 k allocations: 20.665 MiB)
Running: radau_quadrature
  0.292725 seconds (326.99 k allocations: 19.665 MiB, 10.59% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 91.386672 seconds (100.02 M allocations: 1.491 GiB, 0.36% gc time)
Running: rectangle_rule_midpoint.
  0.185245 seconds (173.78 k allocations: 3.889 MiB, 16.37% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.197528 seconds (100.02 M allocations: 1.491 GiB, 0.21% gc time)
Running: rombergs_method
  0.570109 seconds (753.85 k allocations: 43.402 MiB, 5.23% gc time)
Running: simpsons_rule
  0.039328 seconds (47.41 k allocations: 2.123 MiB)
Running: simpsons38_rule
  0.088540 seconds (113.36 k allocations: 5.987 MiB)
Running: trapezoidal_rule
  0.343762 seconds (1.52 M allocations: 25.807 MiB, 5.90% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.087434 seconds (32.69 k allocations: 1.945 MiB)
Running: chebyshev_quadrature with k=1
  0.435504 seconds (275.91 k allocations: 13.991 MiB)
Running: chebyshev_quadrature with k=2
  0.150869 seconds (115.76 k allocations: 3.795 MiB)
Running: chebyshev_quadrature with k=3
  0.166386 seconds (105.11 k allocations: 3.641 MiB)
Running: chebyshev_quadrature with k=4
  0.159984 seconds (87.72 k allocations: 3.287 MiB)
Running: jacobi_quadrature with α=β=1
  2.377399 seconds (536.49 k allocations: 163.513 MiB, 5.16% gc time)
Running: legendre_quadrature
  0.155901 seconds (62.43 k allocations: 3.483 MiB)
Running: lobatto_quadrature
  0.020815 seconds (16.86 k allocations: 1.041 MiB)
Running: radau_quadrature
  0.020970 seconds (16.85 k allocations: 1.040 MiB)
Running: rectangle_rule_left
 31.893676 seconds (471.41 M allocations: 7.025 GiB, 3.49% gc time)
Running: rectangle_rule_midpoint
  0.000052 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.894133 seconds (476.96 M allocations: 7.107 GiB, 3.39% gc time)
Running: rombergs_method
  0.374210 seconds (360.83 k allocations: 20.341 MiB)
Running: simpsons_rule
  0.000083 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.061811 seconds (19.93 k allocations: 1.196 MiB)
Running: trapezoidal_rule
  0.054684 seconds (18.38 k allocations: 1.101 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029933 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.102513 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.105984 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.104075 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.101547 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.314670 seconds (379.29 k allocations: 19.806 MiB)
Running: legendre_quadrature
  0.065946 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000157 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000118 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000641 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000452 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000629 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074373 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000064 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.026276 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023592 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.074728 seconds (75.98 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.235618 seconds (240.48 k allocations: 13.497 MiB)
Running: chebyshev_quadrature with k=2
  0.270922 seconds (295.72 k allocations: 16.587 MiB, 11.11% gc time)
Running: chebyshev_quadrature with k=3
  0.224879 seconds (275.63 k allocations: 14.996 MiB)
Running: chebyshev_quadrature with k=4
  0.225377 seconds (275.67 k allocations: 14.905 MiB)
Running: jacobi_quadrature with α=β=1
  2.254350 seconds (466.15 k allocations: 164.249 MiB, 9.24% gc time)
Running: legendre_quadrature
  0.148270 seconds (193.22 k allocations: 11.118 MiB)
Running: lobatto_quadrature
  0.152431 seconds (204.46 k allocations: 11.856 MiB)
Running: radau_quadrature
  0.184888 seconds (204.45 k allocations: 11.826 MiB)
Running: rectangle_rule_left
  1.145938 seconds (19.80 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.026916 seconds (25.98 k allocations: 1.617 MiB)
Running: rectangle_rule_right
  1.113774 seconds (18.30 k allocations: 1.107 MiB)
Running: rombergs_method
  0.128134 seconds (140.08 k allocations: 8.067 MiB)
Running: simpsons_rule
  0.052008 seconds (29.08 k allocations: 1.805 MiB, 41.43% gc time)
Running: simpsons38_rule
  0.037946 seconds (44.73 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.028206 seconds (45.24 k allocations: 1.826 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.049704 seconds (101.48 k allocations: 3.079 MiB)
Running: chebyshev_quadrature with k=1
  0.204229 seconds (247.58 k allocations: 13.598 MiB)
Running: chebyshev_quadrature with k=2
  0.249655 seconds (303.35 k allocations: 16.596 MiB)
Running: chebyshev_quadrature with k=3
  0.251624 seconds (283.05 k allocations: 15.012 MiB)
Running: chebyshev_quadrature with k=4
  0.374245 seconds (283.09 k allocations: 15.021 MiB, 28.60% gc time)
Running: hermite_quadrature with k=2
 15.909243 seconds (22.14 M allocations: 1.148 GiB, 9.82% gc time)
Running: jacobi_quadrature with α=β=1
  0.452963 seconds (476.19 k allocations: 50.466 MiB, 8.36% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.272954 seconds (288.63 k allocations: 15.911 MiB, 10.45% gc time)
Running: legendre_quadrature
  0.174187 seconds (200.29 k allocations: 11.466 MiB)
Running: lobatto_quadrature
  0.258321 seconds (225.97 k allocations: 37.639 MiB, 8.21% gc time)
Running: radau_quadrature
  0.226844 seconds (222.56 k allocations: 30.364 MiB)
Running: rectangle_rule_left
  0.034571 seconds (22.96 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint
  0.030238 seconds (27.93 k allocations: 1.714 MiB)
Running: rectangle_rule_right
  0.026378 seconds (19.52 k allocations: 1.168 MiB)
Running: rombergs_method
  0.200985 seconds (142.91 k allocations: 8.131 MiB, 18.65% gc time)
Running: simpsons_rule
  0.042027 seconds (41.33 k allocations: 2.160 MiB)
Running: simpsons38_rule
  0.043344 seconds (60.12 k allocations: 3.201 MiB)
Running: trapezoidal_rule
  0.032175 seconds (31.62 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.055923 seconds (61.58 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=1
  0.242552 seconds (242.71 k allocations: 13.363 MiB)
Running: chebyshev_quadrature with k=2
  0.312424 seconds (298.07 k allocations: 16.326 MiB)
Running: chebyshev_quadrature with k=3
  0.241265 seconds (277.91 k allocations: 14.780 MiB, 11.68% gc time)
Running: chebyshev_quadrature with k=4
  0.209569 seconds (277.94 k allocations: 14.795 MiB)
Running: hermite_quadrature with k=2
  0.148344 seconds (177.91 k allocations: 10.167 MiB)
Running: jacobi_quadrature with α=β=1
 10.413548 seconds (468.75 k allocations: 1.176 GiB, 10.36% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.236943 seconds (283.49 k allocations: 15.706 MiB)
Running: legendre_quadrature
  0.179799 seconds (195.46 k allocations: 11.231 MiB)
Running: lobatto_quadrature
  0.274108 seconds (216.33 k allocations: 23.344 MiB, 8.29% gc time)
Running: radau_quadrature
  0.282455 seconds (215.48 k allocations: 21.274 MiB)
Running: rectangle_rule_left
  0.028479 seconds (20.51 k allocations: 1.237 MiB)
Running: rectangle_rule_midpoint
  0.028136 seconds (26.71 k allocations: 1.655 MiB)
Running: rectangle_rule_right
  0.025337 seconds (18.28 k allocations: 1.107 MiB)
Running: rombergs_method
  0.134277 seconds (138.37 k allocations: 7.933 MiB)
Running: simpsons_rule
  0.035832 seconds (33.56 k allocations: 1.934 MiB)
Running: simpsons38_rule
  0.041415 seconds (50.64 k allocations: 2.943 MiB)
Running: trapezoidal_rule
  0.028716 seconds (26.29 k allocations: 1.595 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.052064 seconds (32.54 k allocations: 1.960 MiB, 34.26% gc time)
Running: chebyshev_quadrature with k=1
  0.294065 seconds (241.04 k allocations: 13.578 MiB)
Running: chebyshev_quadrature with k=2
  0.248843 seconds (296.30 k allocations: 16.665 MiB)
Running: chebyshev_quadrature with k=3
  0.213967 seconds (276.23 k allocations: 14.992 MiB)
Running: chebyshev_quadrature with k=4
  0.233971 seconds (276.27 k allocations: 14.823 MiB, 9.36% gc time)
Running: jacobi_quadrature with α=β=1
  3.244180 seconds (466.80 k allocations: 195.329 MiB, 4.45% gc time)
Running: legendre_quadrature
  0.222779 seconds (193.79 k allocations: 11.144 MiB)
Running: lobatto_quadrature
  0.259964 seconds (205.02 k allocations: 11.865 MiB)
Running: radau_quadrature
  0.274205 seconds (205.02 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  0.413822 seconds (20.37 k allocations: 1.224 MiB)
Running: rectangle_rule_midpoint
  0.040905 seconds (26.35 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.127896 seconds (18.68 k allocations: 1.127 MiB)
Running: rombergs_method
  0.187563 seconds (151.47 k allocations: 8.820 MiB, 14.07% gc time)
Running: simpsons_rule
  0.033022 seconds (29.83 k allocations: 1.838 MiB)
Running: simpsons38_rule
  0.049403 seconds (45.51 k allocations: 2.825 MiB)
Running: trapezoidal_rule
  0.051030 seconds (46.24 k allocations: 1.863 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029999 seconds (33.30 k allocations: 1.909 MiB)
Running: chebyshev_quadrature with k=1
  0.213398 seconds (241.60 k allocations: 13.522 MiB)
Running: chebyshev_quadrature with k=2
  0.267676 seconds (296.90 k allocations: 16.579 MiB)
Running: chebyshev_quadrature with k=3
  0.256654 seconds (276.77 k allocations: 14.912 MiB, 8.49% gc time)
Running: chebyshev_quadrature with k=4
  0.283463 seconds (276.81 k allocations: 14.996 MiB)
Running: jacobi_quadrature with α=β=1
  2.525564 seconds (467.46 k allocations: 149.937 MiB, 5.46% gc time)
Running: legendre_quadrature
  0.219340 seconds (194.36 k allocations: 11.161 MiB, 18.39% gc time)
Running: lobatto_quadrature
  0.175105 seconds (205.60 k allocations: 11.875 MiB)
Running: radau_quadrature
  0.288809 seconds (205.59 k allocations: 11.869 MiB)
Running: rectangle_rule_left
  1.220084 seconds (20.64 k allocations: 1.238 MiB)
Running: rectangle_rule_midpoint
  0.033399 seconds (26.34 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  1.204826 seconds (18.65 k allocations: 1.125 MiB)
Running: rombergs_method
  0.175912 seconds (141.39 k allocations: 8.144 MiB)
Running: simpsons_rule
  0.037940 seconds (30.58 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.041044 seconds (46.26 k allocations: 2.854 MiB)
Running: trapezoidal_rule
  0.030298 seconds (58.50 k allocations: 2.064 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.166126 seconds (153.19 k allocations: 9.099 MiB)
Running: chebyshev_quadrature with k=1
  0.183786 seconds (91.28 k allocations: 3.297 MiB, 14.86% gc time)
Running: chebyshev_quadrature with k=2
  0.162765 seconds (127.05 k allocations: 3.990 MiB)
Running: chebyshev_quadrature with k=3
  0.164424 seconds (115.62 k allocations: 3.819 MiB)
Running: chebyshev_quadrature with k=4
  0.156591 seconds (95.16 k allocations: 3.413 MiB)
Running: jacobi_quadrature with α=β=1
  3.593369 seconds (510.01 k allocations: 169.316 MiB, 7.85% gc time)
Running: legendre_quadrature
  0.205377 seconds (38.38 k allocations: 2.107 MiB, 21.67% gc time)
Running: lobatto_quadrature
  0.000119 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000048 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 51.038738 seconds (590.00 M allocations: 8.792 GiB, 4.39% gc time)
Running: rectangle_rule_midpoint
  0.000041 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 50.042529 seconds (592.75 M allocations: 8.833 GiB, 4.12% gc time)
Running: rombergs_method
  0.123192 seconds (41.92 k allocations: 2.259 MiB)
Running: simpsons_rule
  0.000091 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.026417 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.019947 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.610158 seconds (629.34 M allocations: 9.388 GiB, 6.10% gc time)
Running: chebyshev_quadrature with k=1
  0.626687 seconds (439.74 k allocations: 24.305 MiB)
Running: chebyshev_quadrature with k=2
 14.080279 seconds (497.15 k allocations: 4.042 GiB, 4.27% gc time)
Running: chebyshev_quadrature with k=3
  6.701160 seconds (290.74 k allocations: 1.643 GiB, 5.52% gc time)
Running: chebyshev_quadrature with k=4
  8.181007 seconds (290.77 k allocations: 2.262 GiB, 2.39% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 65.980032 seconds (505.77 k allocations: 13.255 GiB, 3.69% gc time)
Running: legendre_quadrature.
  6.256628 seconds (233.21 k allocations: 1.977 GiB, 2.78% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 59.069881 seconds (8.24 M allocations: 13.384 GiB, 3.67% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.756397 seconds (7.24 M allocations: 13.369 GiB, 2.36% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.227091 seconds (23.40 k allocations: 1.405 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.450628 seconds (32.03 k allocations: 1.962 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.412753 seconds (23.62 k allocations: 1.416 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.218349 seconds (457.33 k allocations: 153.734 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.732883 seconds (600.04 M allocations: 8.943 GiB, 8.69% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.463484 seconds (600.05 M allocations: 8.944 GiB, 7.95% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.888201 seconds (600.04 M allocations: 8.943 GiB, 8.78% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.065009 seconds (182.59 k allocations: 4.521 MiB)
Running: chebyshev_quadrature with k=1
  0.318929 seconds (258.20 k allocations: 14.029 MiB)
Running: chebyshev_quadrature with k=2
  0.221263 seconds (284.36 k allocations: 15.439 MiB)
Running: chebyshev_quadrature with k=3
  0.237221 seconds (260.81 k allocations: 13.465 MiB)
Running: chebyshev_quadrature with k=4
  0.238400 seconds (260.84 k allocations: 13.461 MiB)
Running: jacobi_quadrature with α=β=1
  0.469701 seconds (405.67 k allocations: 35.876 MiB)
Running: laguerre_quadrature with k=2
  0.208354 seconds (188.19 k allocations: 10.881 MiB)
Running: legendre_quadrature
  0.138766 seconds (151.89 k allocations: 8.414 MiB)
Running: lobatto_quadrature
  0.037246 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.054155 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.055910 seconds (19.85 k allocations: 1.172 MiB)
Running: rectangle_rule_midpoint
  0.053690 seconds (26.82 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.061796 seconds (18.40 k allocations: 1.096 MiB)
Running: rombergs_method
  0.260872 seconds (171.07 k allocations: 9.740 MiB)
Running: simpsons_rule
  0.001915 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.048248 seconds (81.54 k allocations: 3.524 MiB)
Running: trapezoidal_rule
  0.176028 seconds (2.39 M allocations: 37.759 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001903 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.114082 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.103385 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.111865 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.111590 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.546517 seconds (402.46 k allocations: 906.594 MiB, 6.46% gc time)
Running: legendre_quadrature
  0.113037 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000212 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000139 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  4.584280 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000490 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.758703 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.094933 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000065 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000052 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000799 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000737 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.123181 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.111849 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.126252 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.125177 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.370990 seconds (388.73 k allocations: 253.822 MiB)
Running: legendre_quadrature
  0.126966 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000149 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000066 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.338620 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001056 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 12.777305 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.081575 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000086 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000056 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001725 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
