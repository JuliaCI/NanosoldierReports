Julia Version 1.6.0-DEV.620
Commit 102c9ac37d (2020-08-11 16:30 UTC)
Platform Info:
  OS: Linux (x86_64-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_QzFTFJ/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_QzFTFJ/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.831987 seconds (1.34 M allocations: 70.799 MiB, 5.76% gc time)
Running: chebyshev_quadrature with k=1
  1.663655 seconds (2.25 M allocations: 128.872 MiB, 3.05% gc time)
Running: chebyshev_quadrature with k=2
  0.270568 seconds (425.40 k allocations: 24.404 MiB)
Running: chebyshev_quadrature with k=3
  0.318509 seconds (545.34 k allocations: 29.895 MiB, 4.17% gc time)
Running: chebyshev_quadrature with k=4
  0.291063 seconds (488.16 k allocations: 26.444 MiB)
Running: jacobi_quadrature with α=β=1
 38.892695 seconds (39.41 M allocations: 3.139 GiB, 10.07% gc time)
Running: laguerre_quadrature with k=1
  2.894758 seconds (3.34 M allocations: 185.899 MiB, 3.33% gc time)
Running: legendre_quadrature
  0.215589 seconds (215.39 k allocations: 12.339 MiB)
Running: lobatto_quadrature
  0.319705 seconds (344.13 k allocations: 20.606 MiB)
Running: radau_quadrature
  0.296814 seconds (326.52 k allocations: 19.611 MiB, 14.64% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 75.422237 seconds (100.02 M allocations: 1.491 GiB, 0.42% gc time)
Running: rectangle_rule_midpoint.
  0.176884 seconds (173.78 k allocations: 3.889 MiB, 16.82% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 72.014778 seconds (100.02 M allocations: 1.491 GiB, 0.26% gc time)
Running: rombergs_method
  0.432749 seconds (753.80 k allocations: 43.367 MiB, 6.66% gc time)
Running: simpsons_rule
  0.033438 seconds (47.41 k allocations: 2.123 MiB)
Running: simpsons38_rule
  0.106846 seconds (113.39 k allocations: 5.989 MiB)
Running: trapezoidal_rule
  0.253535 seconds (1.52 M allocations: 25.809 MiB, 8.25% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.074582 seconds (32.69 k allocations: 1.945 MiB)
Running: chebyshev_quadrature with k=1
  0.390648 seconds (275.84 k allocations: 13.987 MiB)
Running: chebyshev_quadrature with k=2
  0.143018 seconds (115.75 k allocations: 3.794 MiB)
Running: chebyshev_quadrature with k=3
  0.143871 seconds (105.10 k allocations: 3.641 MiB)
Running: chebyshev_quadrature with k=4
  0.144442 seconds (87.71 k allocations: 3.287 MiB)
Running: jacobi_quadrature with α=β=1
  1.669368 seconds (536.53 k allocations: 163.519 MiB, 11.12% gc time)
Running: legendre_quadrature
  0.153415 seconds (62.40 k allocations: 3.481 MiB)
Running: lobatto_quadrature
  0.020373 seconds (16.84 k allocations: 1.039 MiB)
Running: radau_quadrature
  0.022219 seconds (16.82 k allocations: 1.039 MiB)
Running: rectangle_rule_left
 28.335579 seconds (471.41 M allocations: 7.025 GiB, 3.08% gc time)
Running: rectangle_rule_midpoint
  0.000015 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 28.383109 seconds (476.96 M allocations: 7.107 GiB, 3.04% gc time)
Running: rombergs_method
  0.320072 seconds (360.79 k allocations: 20.339 MiB)
Running: simpsons_rule
  0.000041 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.057301 seconds (19.94 k allocations: 1.196 MiB)
Running: trapezoidal_rule
  0.050661 seconds (18.38 k allocations: 1.101 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028424 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.092285 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.093099 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.102253 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.100428 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.283175 seconds (379.25 k allocations: 19.805 MiB)
Running: legendre_quadrature
  0.060721 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000085 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000034 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000526 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000365 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000516 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.066071 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000040 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023898 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.020694 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.063265 seconds (75.98 k allocations: 4.408 MiB)
Running: chebyshev_quadrature with k=1
  0.322679 seconds (240.48 k allocations: 13.498 MiB, 40.91% gc time)
Running: chebyshev_quadrature with k=2
  0.241038 seconds (295.72 k allocations: 16.587 MiB)
Running: chebyshev_quadrature with k=3
  0.217514 seconds (275.63 k allocations: 14.992 MiB)
Running: chebyshev_quadrature with k=4
  0.220838 seconds (275.67 k allocations: 14.889 MiB)
Running: jacobi_quadrature with α=β=1
  2.577331 seconds (466.12 k allocations: 164.259 MiB, 15.56% gc time)
Running: legendre_quadrature
  0.141273 seconds (193.22 k allocations: 11.117 MiB)
Running: lobatto_quadrature
  0.160706 seconds (204.44 k allocations: 11.822 MiB)
Running: radau_quadrature
  0.167357 seconds (204.44 k allocations: 11.829 MiB, 8.54% gc time)
Running: rectangle_rule_left
  1.008845 seconds (19.80 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.021960 seconds (25.98 k allocations: 1.617 MiB)
Running: rectangle_rule_right
  0.986179 seconds (18.30 k allocations: 1.107 MiB)
Running: rombergs_method
  0.128384 seconds (140.08 k allocations: 8.083 MiB)
Running: simpsons_rule
  0.029878 seconds (29.08 k allocations: 1.805 MiB)
Running: simpsons38_rule
  0.035285 seconds (44.73 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.025633 seconds (45.24 k allocations: 1.826 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.045555 seconds (101.48 k allocations: 3.079 MiB)
Running: chebyshev_quadrature with k=1
  0.248780 seconds (247.58 k allocations: 13.597 MiB, 18.35% gc time)
Running: chebyshev_quadrature with k=2
  0.207787 seconds (303.35 k allocations: 16.596 MiB)
Running: chebyshev_quadrature with k=3
  0.212688 seconds (283.05 k allocations: 15.028 MiB)
Running: chebyshev_quadrature with k=4
  0.223008 seconds (283.09 k allocations: 15.092 MiB, 9.33% gc time)
Running: hermite_quadrature with k=2
 14.577099 seconds (22.14 M allocations: 1.148 GiB, 10.20% gc time)
Running: jacobi_quadrature with α=β=1
  0.551152 seconds (476.16 k allocations: 50.465 MiB, 20.11% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.263681 seconds (288.63 k allocations: 15.911 MiB, 10.85% gc time)
Running: legendre_quadrature
  0.163176 seconds (200.29 k allocations: 11.466 MiB)
Running: lobatto_quadrature
  0.243403 seconds (225.96 k allocations: 37.638 MiB, 8.48% gc time)
Running: radau_quadrature
  0.203473 seconds (222.55 k allocations: 30.302 MiB)
Running: rectangle_rule_left
  0.028759 seconds (22.96 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint
  0.027867 seconds (27.93 k allocations: 1.714 MiB)
Running: rectangle_rule_right
  0.024810 seconds (19.52 k allocations: 1.168 MiB)
Running: rombergs_method
  0.148171 seconds (142.90 k allocations: 8.131 MiB, 13.52% gc time)
Running: simpsons_rule
  0.041845 seconds (41.33 k allocations: 2.160 MiB)
Running: simpsons38_rule
  0.038284 seconds (60.12 k allocations: 3.201 MiB)
Running: trapezoidal_rule
  0.022464 seconds (31.62 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.026990 seconds (61.58 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=1
  0.170139 seconds (242.71 k allocations: 13.363 MiB)
Running: chebyshev_quadrature with k=2
  0.204169 seconds (298.07 k allocations: 16.326 MiB)
Running: chebyshev_quadrature with k=3
  0.235996 seconds (277.91 k allocations: 14.780 MiB, 11.10% gc time)
Running: chebyshev_quadrature with k=4
  0.195797 seconds (277.94 k allocations: 14.795 MiB)
Running: hermite_quadrature with k=2
  0.154164 seconds (177.91 k allocations: 10.167 MiB)
Running: jacobi_quadrature with α=β=1
  8.440534 seconds (468.72 k allocations: 1.176 GiB, 18.59% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.191215 seconds (283.49 k allocations: 15.706 MiB)
Running: legendre_quadrature
  0.157841 seconds (195.46 k allocations: 11.232 MiB)
Running: lobatto_quadrature
  0.216582 seconds (216.32 k allocations: 23.347 MiB, 8.12% gc time)
Running: radau_quadrature
  0.182166 seconds (215.47 k allocations: 21.273 MiB)
Running: rectangle_rule_left
  0.017833 seconds (20.51 k allocations: 1.237 MiB)
Running: rectangle_rule_midpoint
  0.018452 seconds (26.71 k allocations: 1.655 MiB)
Running: rectangle_rule_right
  0.016619 seconds (18.28 k allocations: 1.107 MiB)
Running: rombergs_method
  0.076653 seconds (138.38 k allocations: 7.949 MiB)
Running: simpsons_rule
  0.029966 seconds (33.56 k allocations: 1.934 MiB)
Running: simpsons38_rule
  0.026127 seconds (50.64 k allocations: 2.943 MiB)
Running: trapezoidal_rule
  0.020321 seconds (26.29 k allocations: 1.595 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037993 seconds (32.54 k allocations: 1.960 MiB, 35.11% gc time)
Running: chebyshev_quadrature with k=1
  0.200549 seconds (241.04 k allocations: 13.578 MiB)
Running: chebyshev_quadrature with k=2
  0.203531 seconds (296.30 k allocations: 16.664 MiB)
Running: chebyshev_quadrature with k=3
  0.198191 seconds (276.23 k allocations: 14.992 MiB)
Running: chebyshev_quadrature with k=4
  0.199950 seconds (276.27 k allocations: 14.890 MiB, 7.45% gc time)
Running: jacobi_quadrature with α=β=1
  1.682729 seconds (466.76 k allocations: 195.265 MiB, 2.52% gc time)
Running: legendre_quadrature
  0.150398 seconds (193.79 k allocations: 11.207 MiB)
Running: lobatto_quadrature
  0.168975 seconds (205.01 k allocations: 11.869 MiB)
Running: radau_quadrature
  0.184734 seconds (205.01 k allocations: 11.857 MiB)
Running: rectangle_rule_left
  0.338117 seconds (20.37 k allocations: 1.224 MiB)
Running: rectangle_rule_midpoint
  0.029664 seconds (26.35 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.115300 seconds (18.68 k allocations: 1.127 MiB)
Running: rombergs_method
  0.159726 seconds (151.46 k allocations: 8.820 MiB, 17.14% gc time)
Running: simpsons_rule
  0.029848 seconds (29.83 k allocations: 1.838 MiB)
Running: simpsons38_rule
  0.038043 seconds (45.51 k allocations: 2.825 MiB)
Running: trapezoidal_rule
  0.025693 seconds (46.24 k allocations: 1.863 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034738 seconds (33.30 k allocations: 1.908 MiB)
Running: chebyshev_quadrature with k=1
  0.211099 seconds (241.60 k allocations: 13.522 MiB)
Running: chebyshev_quadrature with k=2
  0.237134 seconds (296.90 k allocations: 16.578 MiB)
Running: chebyshev_quadrature with k=3
  0.249395 seconds (276.77 k allocations: 14.912 MiB, 18.73% gc time)
Running: chebyshev_quadrature with k=4
  0.193430 seconds (276.81 k allocations: 15.055 MiB)
Running: jacobi_quadrature with α=β=1
  1.573701 seconds (467.43 k allocations: 149.940 MiB, 5.69% gc time)
Running: legendre_quadrature
  0.153994 seconds (194.36 k allocations: 11.161 MiB, 10.22% gc time)
Running: lobatto_quadrature
  0.162533 seconds (205.59 k allocations: 11.932 MiB)
Running: radau_quadrature
  0.178338 seconds (205.57 k allocations: 11.869 MiB)
Running: rectangle_rule_left
  1.182227 seconds (20.64 k allocations: 1.238 MiB)
Running: rectangle_rule_midpoint
  0.029069 seconds (26.34 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  1.145063 seconds (18.65 k allocations: 1.125 MiB)
Running: rombergs_method
  0.148214 seconds (141.39 k allocations: 8.144 MiB)
Running: simpsons_rule
  0.036006 seconds (30.58 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.040115 seconds (46.26 k allocations: 2.854 MiB)
Running: trapezoidal_rule
  0.029333 seconds (58.50 k allocations: 2.064 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.158216 seconds (153.19 k allocations: 9.099 MiB)
Running: chebyshev_quadrature with k=1
  0.134327 seconds (91.27 k allocations: 3.297 MiB)
Running: chebyshev_quadrature with k=2
  0.157162 seconds (127.04 k allocations: 3.989 MiB)
Running: chebyshev_quadrature with k=3
  0.159309 seconds (115.62 k allocations: 3.819 MiB)
Running: chebyshev_quadrature with k=4
  0.157397 seconds (95.15 k allocations: 3.413 MiB)
Running: jacobi_quadrature with α=β=1
  2.517958 seconds (510.07 k allocations: 169.320 MiB, 8.05% gc time)
Running: legendre_quadrature
  0.116309 seconds (38.37 k allocations: 2.107 MiB)
Running: lobatto_quadrature
  0.000104 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000043 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 47.550745 seconds (590.00 M allocations: 8.792 GiB, 4.10% gc time)
Running: rectangle_rule_midpoint
  0.000076 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.907958 seconds (592.75 M allocations: 8.833 GiB, 3.90% gc time)
Running: rombergs_method
  0.113768 seconds (41.92 k allocations: 2.260 MiB)
Running: simpsons_rule
  0.000037 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.024415 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.019361 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 36.182320 seconds (629.34 M allocations: 9.388 GiB, 5.65% gc time)
Running: chebyshev_quadrature with k=1
  0.490454 seconds (439.72 k allocations: 24.304 MiB)
Running: chebyshev_quadrature with k=2
 12.342966 seconds (497.13 k allocations: 4.042 GiB, 4.12% gc time)
Running: chebyshev_quadrature with k=3
  6.114678 seconds (290.74 k allocations: 1.643 GiB, 4.35% gc time)
Running: chebyshev_quadrature with k=4
  7.607204 seconds (290.77 k allocations: 2.262 GiB, 2.50% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 46.708272 seconds (505.71 k allocations: 13.255 GiB, 3.20% gc time)
Running: legendre_quadrature.
  5.116583 seconds (233.18 k allocations: 1.976 GiB, 1.12% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.349456 seconds (8.24 M allocations: 13.384 GiB, 4.29% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.633691 seconds (7.24 M allocations: 13.369 GiB, 3.94% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.957295 seconds (23.40 k allocations: 1.405 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.888750 seconds (32.03 k allocations: 1.962 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  2.941157 seconds (23.62 k allocations: 1.416 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.178518 seconds (457.31 k allocations: 153.735 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.689413 seconds (600.04 M allocations: 8.943 GiB, 8.24% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.952032 seconds (600.05 M allocations: 8.944 GiB, 7.62% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 39.048574 seconds (600.04 M allocations: 8.943 GiB, 8.74% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.063374 seconds (182.59 k allocations: 4.521 MiB)
Running: chebyshev_quadrature with k=1
  0.304438 seconds (258.20 k allocations: 14.029 MiB)
Running: chebyshev_quadrature with k=2
  0.215581 seconds (284.36 k allocations: 15.189 MiB)
Running: chebyshev_quadrature with k=3
  0.223010 seconds (260.81 k allocations: 13.465 MiB)
Running: chebyshev_quadrature with k=4
  0.224371 seconds (260.84 k allocations: 13.461 MiB)
Running: jacobi_quadrature with α=β=1
  0.411256 seconds (405.63 k allocations: 35.875 MiB)
Running: laguerre_quadrature with k=2
  0.223260 seconds (188.19 k allocations: 10.881 MiB)
Running: legendre_quadrature
  0.156225 seconds (151.89 k allocations: 8.414 MiB)
Running: lobatto_quadrature
  0.044823 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.037136 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.059320 seconds (19.85 k allocations: 1.172 MiB)
Running: rectangle_rule_midpoint
  0.052096 seconds (26.82 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.056533 seconds (18.40 k allocations: 1.096 MiB)
Running: rombergs_method
  0.254625 seconds (171.03 k allocations: 9.733 MiB)
Running: simpsons_rule
  0.001957 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053914 seconds (81.54 k allocations: 3.524 MiB)
Running: trapezoidal_rule
  0.205055 seconds (2.39 M allocations: 37.759 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.002429 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.098695 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.109829 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.110368 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.108958 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  7.697057 seconds (402.42 k allocations: 906.577 MiB, 5.39% gc time)
Running: legendre_quadrature
  0.064170 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000316 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000185 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.549694 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000416 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.523477 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.105215 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000067 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000070 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001294 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000752 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.100428 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.099173 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.107531 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.116493 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.849038 seconds (388.70 k allocations: 253.820 MiB)
Running: legendre_quadrature
  0.058430 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000085 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000030 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.827161 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001158 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 10.434381 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.080058 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000042 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001689 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
