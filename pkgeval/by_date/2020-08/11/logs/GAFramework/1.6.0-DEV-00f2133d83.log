Julia Version 1.6.0-DEV.609
Commit 00f2133d83 (2020-08-10 13:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_ypHfWh/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_ypHfWh/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.2171924353790873
curgen: 20 fitness: 0.21723345648075107
curgen: 30 fitness: 0.21723345648075107
curgen: 40 fitness: 0.21723345648075107
curgen: 50 fitness: 0.21723345648075107
CoordinateCreature{Vector{Float64}}([-0.2226104464204072], -0.21723345648075107) -0.2226104464204072 -0.21723345648075107
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2579213434877534
curgen: 100 fitness: 3.258108111764042
curgen: 150 fitness: 3.258217546758494
curgen: 200 fitness: 3.258349711760071
curgen: 250 fitness: 3.25840237707764
curgen: 300 fitness: 3.2584242370435192
curgen: 350 fitness: 3.258439432511766
curgen: 400 fitness: 3.258443213650644
curgen: 450 fitness: 3.2584491854673483
curgen: 500 fitness: 3.258450119206143
CoordinateCreature{Vector{Float64}}([0.22262159681934632, 0.22243207144209082, 0.22313326017153745, -0.22259278043551303, -0.22269652724839897, 0.2228817227648531, -0.22282370395865223, -0.22254282398161374, 0.22228590448655783, -0.22268045069472045, -0.22251886191333803, -0.22270180350558919, 0.22185687338508453, 0.22240865278067004, 0.2227612996051441], -3.258450119206143) [0.22262159681934632, 0.22243207144209082, 0.22313326017153745, -0.22259278043551303, -0.22269652724839897, 0.2228817227648531, -0.22282370395865223, -0.22254282398161374, 0.22228590448655783, -0.22268045069472045, -0.22251886191333803, -0.22270180350558919, 0.22185687338508453, 0.22240865278067004, 0.2227612996051441] -3.258450119206143
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.004084341074559461
curgen: 100 fitness: -0.0029035081532526874
curgen: 150 fitness: -0.00275185159313196
curgen: 200 fitness: -0.0023751081812974917
curgen: 250 fitness: -0.0009031697237276148
curgen: 300 fitness: -0.0009031697237276148
curgen: 350 fitness: -0.0009031697237276148
curgen: 400 fitness: -0.0009031697237276148
curgen: 450 fitness: -0.0009031697237276148
curgen: 500 fitness: -0.0006284625555679213
CoordinateCreature{Vector{Float64}}([-0.0003077009122419544, -0.00018477858294147932, 9.993236712670296e-5, 0.00046143362770753615, 0.0007692290385499685, -1.2344012089094553e-5, -0.0004207078017322947, 0.0007591677480844044, -0.0006412675911316198, -0.0008035886930764379, -0.00021288415572205015, 7.440368083891672e-5, 0.00016071159303673345, -0.0004568180704634455, -0.00035848664093039067], 0.0006284625555679213) [-0.0003077009122419544, -0.00018477858294147932, 9.993236712670296e-5, 0.00046143362770753615, 0.0007692290385499685, -1.2344012089094553e-5, -0.0004207078017322947, 0.0007591677480844044, -0.0006412675911316198, -0.0008035886930764379, -0.00021288415572205015, 7.440368083891672e-5, 0.00016071159303673345, -0.0004568180704634455, -0.00035848664093039067] 0.0006284625555679213
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
