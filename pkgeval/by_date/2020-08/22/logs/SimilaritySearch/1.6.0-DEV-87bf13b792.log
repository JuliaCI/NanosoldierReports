Julia Version 1.6.0-DEV.699
Commit 87bf13b792 (2020-08-22 14:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed Missings ─────────── v0.4.3
  Installed DataAPI ──────────── v1.3.0
  Installed Parsers ──────────── v1.0.10
  Installed Compat ───────────── v3.14.0
  Installed OrderedCollections ─ v1.3.0
  Installed StatsBase ────────── v0.32.0
  Installed JSON ─────────────── v0.21.0
  Installed SimilaritySearch ─── v0.3.20
  Installed SortingAlgorithms ── v0.3.1
  Installed DataStructures ───── v0.18.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [053f045d] + SimilaritySearch v0.3.20
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [34da2185] + Compat v3.14.0
  [9a962f9c] + DataAPI v1.3.0
  [864edb3b] + DataStructures v0.18.0
  [682c06a0] + JSON v0.21.0
  [e1d29d7a] + Missings v0.4.3
  [bac558e1] + OrderedCollections v1.3.0
  [69de0a69] + Parsers v1.0.10
  [053f045d] + SimilaritySearch v0.3.20
  [a2af1166] + SortingAlgorithms v0.3.1
  [2913bbd2] + StatsBase v0.32.0
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing SimilaritySearch
Status `/tmp/jl_QjzYPH/Project.toml`
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [053f045d] SimilaritySearch v0.3.20
  [2913bbd2] StatsBase v0.32.0
  [ade2ca70] Dates
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [10745b16] Statistics
  [8dfed614] Test
Status `/tmp/jl_QjzYPH/Manifest.toml`
  [34da2185] Compat v3.14.0
  [9a962f9c] DataAPI v1.3.0
  [864edb3b] DataStructures v0.18.0
  [682c06a0] JSON v0.21.0
  [e1d29d7a] Missings v0.4.3
  [bac558e1] OrderedCollections v1.3.0
  [69de0a69] Parsers v1.0.10
  [053f045d] SimilaritySearch v0.3.20
  [a2af1166] SortingAlgorithms v0.3.1
  [2913bbd2] StatsBase v0.32.0
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8bb1440f] DelimitedFiles
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [a63ad114] Mmap
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [1a1011a3] SharedArrays
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [10745b16] Statistics
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Test Summary: | Pass  Total
bit ops       |    3      3
res = KnnResult(4, 4, Item[Item(16, 0.002375126f0), Item(21, 0.010632277f0), Item(29, 0.03217709f0), Item(44, 0.064463854f0)])
Vsorted = Item[Item(16, 0.002375126f0), Item(21, 0.010632277f0), Item(29, 0.03217709f0), Item(44, 0.064463854f0)]
Test Summary: | Pass  Total
Result set    |    3      3
Test Summary: | Pass  Total
pairwise      |    1      1
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005081884066263835, 0.005709401766459147, 301.0, 54.48785544000566))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 0.005082996686299642, 0.004692363739013672, 301.0, 79.5077292919159))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 0.003979984919230143, 0.004678805669148763, 301.0, 43.49045741558075))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.squared_l2_distance)
(dist, p) = (SimilaritySearch.squared_l2_distance, PerformanceResult(1.0, 1.0, 1.0, 0.004476332664489746, 0.004676930109659831, 301.0, 11.438808847218752))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.004727641741434733, 0.006345828374226888, 301.0, 48.9760837238282))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 0.00013290246327718098, 0.0001267671585083008, 301.0, 195.4665435552597))
Test Summary:    | Pass  Total
indexing vectors |   18     18
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=jaccard_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=dice_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=intersection_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=common_prefix_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=levenshtein_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=lcs_distance
[ Info: inserting items into the index
[ Info: inserting items into the index
[ Info: Creating a pivot table with 1 pivots and distance=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   28     28
p = PerformanceResult(1.0, 1.0, 1.0, 5.897680918375651e-5, 0.015903401374816894, 300.0, 28.814910279819742)
p = PerformanceResult(1.0, 1.0, 1.0, 6.0216585795084635e-5, 2.95718510945638e-5, 300.0, 28.814910279819742)
p = PerformanceResult(1.0, 1.0, 1.0, 0.004289809862772624, 0.004199337959289551, 300.0, 1.6924429840155426)
p = PerformanceResult(1.0, 1.0, 1.0, 4.778173234727648e-5, 2.216498057047526e-5, 300.0, 1.6924429840155426)
(p1, p2, p3, p4) = (PerformanceResult(1.0, 1.0, 1.0, 5.897680918375651e-5, 0.015903401374816894, 300.0, 28.814910279819742), PerformanceResult(1.0, 1.0, 1.0, 6.0216585795084635e-5, 2.95718510945638e-5, 300.0, 28.814910279819742), PerformanceResult(1.0, 1.0, 1.0, 0.004289809862772624, 0.004199337959289551, 300.0, 1.6924429840155426), PerformanceResult(1.0, 1.0, 1.0, 4.778173234727648e-5, 2.216498057047526e-5, 300.0, 1.6924429840155426))
[ Info: select_sss: db=Vector{Vector{UInt32}}, alpha=0.35, distance=hamming_distance, shuf=false
[ Info: the maximum distance estimated as 124.0, now selecting pivots
[ Info: Creating a pivot table with 300 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008495736122131347, 0.006520469983418782, 348.3666666666667, 28723.0)
[ Info: Creating a pivot table with 16 pivots and distance=hamming_distance
p = PerformanceResult(1.0, 1.0, 1.0, 0.008522303899129231, 0.003562037150065104, 303.03333333333336, 6944.0)
Test Summary: | Pass  Total
misc          |   10     10
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l2_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l2_distance
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.6981035868326824e-5, 1.1261304219563802e-5, 95.46666666666667, 54.438412776216865))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.l1_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=l1_distance
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.785523732503255e-5, 1.3271967569986979e-5, 83.36666666666666, 79.45980632305145))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.linf_distance)
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=linf_distance
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.5383631388346355e-5, 1.9701321919759116e-5, 89.4, 43.45319652557373))
(recall_lower_bound, dist) = (1.0, SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 8.351802825927735e-5, 0.0001858949661254883, 95.83333333333333, 48.94206447713077))
(recall_lower_bound, dist) = (0.1, SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0))
Kvp = Kvp
[ Info: Kvp, refs=Vector{Vector{Float32}}, k=3, numrefs=32, dist=_lp
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.7899999999999999, 0.7899999999999999, 0.7899999999999999, 5.714098612467448e-5, 0.0001491387685139974, 68.73333333333333, 206.86769181489944))
Test Summary:    | Pass  Total
indexing vectors |   10     10
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=jaccard_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=dice_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=intersection_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=common_prefix_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=levenshtein_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=lcs_distance
[ Info: inserting items into the index
[ Info: Kvp, refs=Vector{Vector{Int64}}, k=3, numrefs=32, dist=hamming_distance
Test Summary:      | Pass  Total
indexing sequences |   14     14
*** advance 1 from 1000; 2020-08-23T01:50:07.273
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(0.88875, 0.884, 0.886013071895425, 2.2313594818115235e-5, 2.3829936981201173e-5, 150.77, 51.627097863471135))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l2_distance, PerformanceResult(1.0, 1.0, 1.0, 2.2330284118652343e-5, 1.8799304962158202e-5, 153.99, 0.0))
*** advance 1 from 1000; 2020-08-23T01:50:07.999
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(0.875888888888889, 0.872, 0.8736563467492262, 2.390623092651367e-5, 2.3360252380371095e-5, 151.29, 78.55743826087564))
[ Info: adding more items
(dist, p) = (SimilaritySearch.l1_distance, PerformanceResult(1.0, 1.0, 1.0, 2.384185791015625e-5, 1.89208984375e-5, 154.54, 0.0))
*** advance 1 from 1000; 2020-08-23T01:50:08.696
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(0.8668888888888889, 0.8610000000000001, 0.8630877192982457, 2.500772476196289e-5, 4.4531822204589844e-5, 151.58, 42.19472315907478))
[ Info: adding more items
(dist, p) = (SimilaritySearch.linf_distance, PerformanceResult(1.0, 1.0, 1.0, 2.412557601928711e-5, 3.452062606811523e-5, 154.85, 0.0))
*** advance 1 from 1000; 2020-08-23T01:50:09.335
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(0.8837499999999998, 0.8769999999999999, 0.8794444444444443, 0.00010130167007446289, 0.0005088996887207031, 151.79, 46.302156302146614))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(3.0, 0.3333333333333333), PerformanceResult(1.0, 1.0, 1.0, 0.00010046720504760742, 0.0005460786819458008, 154.95, 0.0))
*** advance 1 from 1000; 2020-08-23T01:50:09.933
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(0.9460000000000001, 0.9460000000000001, 0.9460000000000001, 9.641170501708984e-5, 0.000522618293762207, 165.84, 193.67031077761203))
[ Info: adding more items
(dist, p) = (SimilaritySearch.var"#_lp#1"{Float64,Float64}(0.5, 2.0), PerformanceResult(1.0, 1.0, 1.0, 9.463071823120118e-5, 0.0004317784309387207, 170.42, 0.0))
*** advance 1 from 1000; 2020-08-23T01:50:11.374
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(0.88875, 0.884, 0.886013071895425, 3.49736213684082e-5, 7.33494758605957e-5, 150.77, 51.637779208133))
[ Info: adding more items
(dist, p) = (SimilaritySearch.angle_distance, PerformanceResult(1.0, 1.0, 1.0, 3.7512779235839845e-5, 8.208036422729492e-5, 153.99, 0.014356521773152053))
Test Summary:    | Pass  Total
indexing vectors |   12     12
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:13.571
(dist, p) = (SimilaritySearch.jaccard_distance, PerformanceResult(0.7450000000000001, 0.7450000000000001, 0.7450000000000001, 0.001844639778137207, 8.991956710815429e-5, 199.89, 196.08333553373814))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:14.649
(dist, p) = (SimilaritySearch.dice_distance, PerformanceResult(0.7439999999999999, 0.7439999999999999, 0.7439999999999999, 0.0017183208465576172, 8.255958557128906e-5, 203.66, 111.70476417988539))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:15.597
(dist, p) = (SimilaritySearch.intersection_distance, PerformanceResult(0.65, 0.65, 0.65, 0.0016886067390441894, 7.841110229492187e-5, 244.87, 3.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:16.600
(dist, p) = (SimilaritySearch.common_prefix_distance, PerformanceResult(0.9520000000000001, 0.95, 0.9509473684210527, 0.0016831707954406737, 2.1789073944091797e-5, 218.0, 603.2000208348036))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:17.797
(dist, p) = (SimilaritySearch.levenshtein_distance, PerformanceResult(0.574, 0.574, 0.574, 0.0017728590965270996, 0.0004781699180603027, 254.7, 2382.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:18.818
(dist, p) = (SimilaritySearch.lcs_distance, PerformanceResult(0.336, 0.336, NaN, 0.0020352458953857423, 0.0005089592933654785, 241.8, 3694.0))
[ Info: inserting items into the index
*** advance 1 from 1000; 2020-08-23T01:50:19.922
(dist, p) = (SimilaritySearch.hamming_distance, PerformanceResult(0.5779999999999997, 0.5779999999999997, 0.5779999999999997, 0.0015462994575500487, 2.9089450836181642e-5, 248.54, 2406.0))
Test Summary:      | Pass  Total
indexing sequences |    7      7
[ Info: inserting items to the index
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.090909090909091, conf: {"restarts":5}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9478136446886453,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":2.1010637283325195e-6,"evaluations":8.25,"distances_sum":671.892857760191}, best_list's length: 2, n: 9
    ** Opt. IHCSearch. A new best conf was found> score: 2.059797608095676, conf: {"restarts":7}, perf: {"precision":1.0,"recall":0.9365234375,"f1":0.9650869963369968,"seconds":6.431713700294495e-6,"exhaustive_search_seconds":2.1010637283325195e-6,"evaluations":8.4921875,"distances_sum":701.2985855042934}, best_list's length: 3, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.090909090909091,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9478136446886453,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":2.1010637283325195e-6,"evaluations":8.25,"distances_sum":671.892857760191}}, beam: 3, n: 9
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9
  == End Opt. IHCSearch. Iteration finished; {"score":2.090909090909091,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9478136446886453,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":2.1010637283325195e-6,"evaluations":8.25,"distances_sum":671.892857760191}}, beam: 4, n: 9
==== END Opt. IHCSearch. Finished, best: {"score":2.090909090909091,"state":{"restarts":5},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9478136446886453,"seconds":5.045905709266663e-6,"exhaustive_search_seconds":2.1010637283325195e-6,"evaluations":8.25,"distances_sum":671.892857760191}}, n: 9
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 99
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8749999999999989, conf: {"restarts":10}, perf: {"precision":0.8749999999999989,"recall":0.8749999999999989,"f1":0.8749999999999989,"seconds":1.9475817680358887e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":53.6015625,"distances_sum":303.8558085523546}, best_list's length: 3, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8810763888888876, conf: {"restarts":8}, perf: {"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":0.8810763888888876,"seconds":1.786649227142334e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":50.1953125,"distances_sum":302.92701576277614}, best_list's length: 5, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":0.8810763888888876,"state":{"restarts":8},"perf":{"precision":0.8810763888888876,"recall":0.8810763888888876,"f1":0.8810763888888876,"seconds":1.786649227142334e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":50.1953125,"distances_sum":302.92701576277614}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.6016177957532864, conf: {"restarts":15}, perf: {"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":2.7786940336227417e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":61.8125,"distances_sum":302.2762432806194}, best_list's length: 5, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 0.8854166666666652, conf: {"restarts":12}, perf: {"precision":0.8854166666666652,"recall":0.8854166666666652,"f1":0.8854166666666652,"seconds":2.1481886506080627e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":58.8515625,"distances_sum":303.04848563298583}, best_list's length: 6, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.6016177957532864,"state":{"restarts":15},"perf":{"precision":0.9019097222222211,"recall":0.9019097222222211,"f1":0.9019097222222211,"seconds":2.7786940336227417e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":61.8125,"distances_sum":302.2762432806194}}, beam: 4, n: 99
  == Begin Opt. IHCSearch iteration: 3, expected recall: 0.9, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.620460358056266, conf: {"restarts":14}, perf: {"precision":0.9088541666666656,"recall":0.9088541666666656,"f1":0.9088541666666656,"seconds":2.616085112094879e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":61.09375,"distances_sum":300.34338035807014}, best_list's length: 7, n: 99
    ** Opt. IHCSearch. A new best conf was found> score: 2.665834100170895, conf: {"restarts":13}, perf: {"precision":0.9088541666666654,"recall":0.9088541666666654,"f1":0.9088541666666654,"seconds":2.7671456336975098e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":59.4296875,"distances_sum":300.8072430305183}, best_list's length: 10, n: 99
  == End Opt. IHCSearch. Iteration finished; {"score":2.665834100170895,"state":{"restarts":13},"perf":{"precision":0.9088541666666654,"recall":0.9088541666666654,"f1":0.9088541666666654,"seconds":2.7671456336975098e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":59.4296875,"distances_sum":300.8072430305183}}, beam: 4, n: 99
==== END Opt. IHCSearch. Finished, best: {"score":2.665834100170895,"state":{"restarts":13},"perf":{"precision":0.9088541666666654,"recall":0.9088541666666654,"f1":0.9088541666666654,"seconds":2.7671456336975098e-5,"exhaustive_search_seconds":7.281079888343811e-6,"evaluations":59.4296875,"distances_sum":300.8072430305183}}, n: 99
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8697916666666657, conf: {"restarts":20}, perf: {"precision":0.8697916666666657,"recall":0.8697916666666657,"f1":0.8697916666666657,"seconds":6.959214806556702e-5,"exhaustive_search_seconds":5.9586018323898315e-5,"evaluations":194.671875,"distances_sum":123.31128977425396}, best_list's length: 3, n: 999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8697916666666657,"state":{"restarts":20},"perf":{"precision":0.8697916666666657,"recall":0.8697916666666657,"f1":0.8697916666666657,"seconds":6.959214806556702e-5,"exhaustive_search_seconds":5.9586018323898315e-5,"evaluations":194.671875,"distances_sum":123.31128977425396}}, beam: 4, n: 999
==== END Opt. IHCSearch. Finished, best: {"score":0.8697916666666657,"state":{"restarts":20},"perf":{"precision":0.8697916666666657,"recall":0.8697916666666657,"f1":0.8697916666666657,"seconds":6.959214806556702e-5,"exhaustive_search_seconds":5.9586018323898315e-5,"evaluations":194.671875,"distances_sum":123.31128977425396}}, n: 999
==== BEGIN Opt. IHCSearch, expected recall: 0.9, n: 9999
  == Begin Opt. IHCSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8428819444444436, conf: {"restarts":28}, perf: {"precision":0.8428819444444436,"recall":0.8428819444444436,"f1":0.8428819444444436,"seconds":0.00016252510249614716,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":363.8203125,"distances_sum":57.06678825430572}, best_list's length: 2, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8463541666666656, conf: {"restarts":27}, perf: {"precision":0.8463541666666656,"recall":0.8463541666666656,"f1":0.8463541666666656,"seconds":0.0001543983817100525,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":356.5078125,"distances_sum":56.95086815580726}, best_list's length: 4, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8506944444444433, conf: {"restarts":25}, perf: {"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00015489570796489716,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":342.6796875,"distances_sum":56.6507158074528}, best_list's length: 5, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.8472222222222213, conf: {"restarts":34}, perf: {"precision":0.8472222222222213,"recall":0.8472222222222213,"f1":0.8472222222222213,"seconds":0.00017247162759304047,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":406.53125,"distances_sum":56.87975689768791}, best_list's length: 6, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.8506944444444433,"state":{"restarts":25},"perf":{"precision":0.8506944444444433,"recall":0.8506944444444433,"f1":0.8506944444444433,"seconds":0.00015489570796489716,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":342.6796875,"distances_sum":56.6507158074528}}, beam: 4, n: 9999
  == Begin Opt. IHCSearch iteration: 2, expected recall: 0.9, n: 9999
    ** Opt. IHCSearch. A new best conf was found> score: 0.85329861111111, conf: {"restarts":35}, perf: {"precision":0.85329861111111,"recall":0.85329861111111,"f1":0.85329861111111,"seconds":0.00017120689153671265,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":413.953125,"distances_sum":56.69384293630719}, best_list's length: 10, n: 9999
  == End Opt. IHCSearch. Iteration finished; {"score":0.85329861111111,"state":{"restarts":35},"perf":{"precision":0.85329861111111,"recall":0.85329861111111,"f1":0.85329861111111,"seconds":0.00017120689153671265,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":413.953125,"distances_sum":56.69384293630719}}, beam: 4, n: 9999
==== END Opt. IHCSearch. Finished, best: {"score":0.85329861111111,"state":{"restarts":35},"perf":{"precision":0.85329861111111,"recall":0.85329861111111,"f1":0.85329861111111,"seconds":0.00017120689153671265,"exhaustive_search_seconds":0.0003666561096906662,"evaluations":413.953125,"distances_sum":56.69384293630719}}, n: 9999
added n=10000, neighborhood=4, IHCSearch(35), SatNeighborhood(32), 2020-08-23T01:50:28.498
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(7004, 0.056972206f0), Item(862, 0.0575441f0), Item(3287, 0.05890435f0), Item(4595, 0.061786298f0), Item(593, 0.062633656f0), Item(7124, 0.06357423f0), Item(598, 0.06375326f0), Item(934, 0.07085597f0), Item(3849, 0.07586101f0), Item(1471, 0.077633716f0)])
[ Info: inserting items to the index
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.080675422138837, conf: {"bsize":6}, perf: {"precision":1.0,"recall":0.916015625,"f1":0.9503434065934069,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.328125,"distances_sum":691.8603323101997}, best_list's length: 2, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0549450549450547, conf: {"bsize":2}, perf: {"precision":1.0,"recall":0.94140625,"f1":0.9677312271062277,"seconds":8.514150977134705e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.53125,"distances_sum":713.2337262034416}, best_list's length: 3, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.0267379679144386, conf: {"bsize":4}, perf: {"precision":1.0,"recall":0.970703125,"f1":0.9840029761904765,"seconds":6.252899765968323e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.765625,"distances_sum":743.3197000026703}, best_list's length: 4, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.080675422138837,"state":{"bsize":6},"perf":{"precision":1.0,"recall":0.916015625,"f1":0.9503434065934069,"seconds":6.295740604400635e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.328125,"distances_sum":691.8603323101997}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9
    ** Opt. BeamSearch. A new best conf was found> score: 2.090909090909091, conf: {"bsize":8}, perf: {"precision":1.0,"recall":0.90625,"f1":0.9453468406593412,"seconds":8.787959814071655e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.25,"distances_sum":682.7477073669434}, best_list's length: 7, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9453468406593412,"seconds":8.787959814071655e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.25,"distances_sum":682.7477073669434}}, beam: 4, n: 9
  == Begin Opt. BeamSearch iteration: 3, expected recall: 0.9, n: 9
  == End Opt. BeamSearch. Iteration finished; {"score":2.090909090909091,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9453468406593412,"seconds":8.787959814071655e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.25,"distances_sum":682.7477073669434}}, beam: 4, n: 9
==== END Opt. BeamSearch. Finished, best: {"score":2.090909090909091,"state":{"bsize":8},"perf":{"precision":1.0,"recall":0.90625,"f1":0.9453468406593412,"seconds":8.787959814071655e-6,"exhaustive_search_seconds":1.9613653421401978e-6,"evaluations":8.25,"distances_sum":682.7477073669434}}, n: 9
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 99
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 4.171171171171171, conf: {"bsize":3}, perf: {"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.4930963516235352e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":31.21875,"distances_sum":282.10322205349803}, best_list's length: 3, n: 99
    ** Opt. BeamSearch. A new best conf was found> score: 3.59672131147541, conf: {"bsize":6}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":1.8445774912834167e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":38.125,"distances_sum":280.8284676037729}, best_list's length: 6, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.171171171171171,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.4930963516235352e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":31.21875,"distances_sum":282.10322205349803}}, beam: 4, n: 99
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 99
  == End Opt. BeamSearch. Iteration finished; {"score":4.171171171171171,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.4930963516235352e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":31.21875,"distances_sum":282.10322205349803}}, beam: 4, n: 99
==== END Opt. BeamSearch. Finished, best: {"score":4.171171171171171,"state":{"bsize":3},"perf":{"precision":0.9765624999999996,"recall":0.9765624999999996,"f1":0.9765624999999996,"seconds":1.4930963516235352e-5,"exhaustive_search_seconds":7.1339309215545654e-6,"evaluations":31.21875,"distances_sum":282.10322205349803}}, n: 99
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 999
  == End Opt. BeamSearch. Iteration finished; {"score":18.104333868378813,"state":{"bsize":3},"perf":{"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":3.0448660254478455e-5,"exhaustive_search_seconds":2.80626118183136e-5,"evaluations":58.40625,"distances_sum":123.04071277333423}}, beam: 3, n: 999
==== END Opt. BeamSearch. Finished, best: {"score":18.104333868378813,"state":{"bsize":3},"perf":{"precision":0.969618055555555,"recall":0.969618055555555,"f1":0.969618055555555,"seconds":3.0448660254478455e-5,"exhaustive_search_seconds":2.80626118183136e-5,"evaluations":58.40625,"distances_sum":123.04071277333423}}, n: 999
==== BEGIN Opt. BeamSearch, expected recall: 0.9, n: 9999
  == Begin Opt. BeamSearch iteration: 1, expected recall: 0.9, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 92.72079690411351, conf: {"bsize":4}, perf: {"precision":0.9861111111111109,"recall":0.9861111111111109,"f1":0.9861111111111109,"seconds":0.0001312699168920517,"exhaustive_search_seconds":0.000580914318561554,"evaluations":109.015625,"distances_sum":54.06589202117175}, best_list's length: 2, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 91.29716382108086, conf: {"bsize":9}, perf: {"precision":1.0,"recall":1.0,"f1":1.0,"seconds":0.00010796450078487396,"exhaustive_search_seconds":0.000580914318561554,"evaluations":110.734375,"distances_sum":54.005962806753814}, best_list's length: 4, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 97.18035620350192, conf: {"bsize":5}, perf: {"precision":0.9947916666666665,"recall":0.9947916666666665,"f1":0.9947916666666665,"seconds":0.00022486411035060883,"exhaustive_search_seconds":0.000580914318561554,"evaluations":103.9609375,"distances_sum":54.01685811858624}, best_list's length: 5, n: 9999
    ** Opt. BeamSearch. A new best conf was found> score: 98.84954128440367, conf: {"bsize":6}, perf: {"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":0.00010881200432777405,"exhaustive_search_seconds":0.000580914318561554,"evaluations":102.1875,"distances_sum":54.015226061455905}, best_list's length: 6, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.84954128440367,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":0.00010881200432777405,"exhaustive_search_seconds":0.000580914318561554,"evaluations":102.1875,"distances_sum":54.015226061455905}}, beam: 4, n: 9999
  == Begin Opt. BeamSearch iteration: 2, expected recall: 0.9, n: 9999
  == End Opt. BeamSearch. Iteration finished; {"score":98.84954128440367,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":0.00010881200432777405,"exhaustive_search_seconds":0.000580914318561554,"evaluations":102.1875,"distances_sum":54.015226061455905}}, beam: 4, n: 9999
==== END Opt. BeamSearch. Finished, best: {"score":98.84954128440367,"state":{"bsize":6},"perf":{"precision":0.9982638888888888,"recall":0.9982638888888888,"f1":0.9982638888888888,"seconds":0.00010881200432777405,"exhaustive_search_seconds":0.000580914318561554,"evaluations":102.1875,"distances_sum":54.015226061455905}}, n: 9999
added n=10000, neighborhood=5, BeamSearch(6), SatNeighborhood(32), 2020-08-23T01:50:33.105
[ Info: done; now testing
res = KnnResult(10, 10, Item[Item(2391, 0.02603377f0), Item(2927, 0.029275127f0), Item(9041, 0.037438262f0), Item(7397, 0.042785387f0), Item(6425, 0.04609308f0), Item(2589, 0.04851993f0), Item(1270, 0.050698776f0), Item(8980, 0.052475475f0), Item(3006, 0.053159047f0), Item(8568, 0.05346559f0)])
Test Summary:        | Pass  Total
some vector indexing |    2      2
    Testing SimilaritySearch tests passed 
