Julia Version 1.6.0-DEV.699
Commit 87bf13b792 (2020-08-22 14:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_9XlEXi/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_9XlEXi/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
    Testing Running tests...
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.837740 seconds (1.35 M allocations: 71.184 MiB, 1.50% gc time)
Running: chebyshev_quadrature with k=1
  1.689100 seconds (2.24 M allocations: 128.609 MiB, 2.10% gc time)
Running: chebyshev_quadrature with k=2
  0.285218 seconds (424.54 k allocations: 24.363 MiB, 4.31% gc time)
Running: chebyshev_quadrature with k=3
  0.346818 seconds (544.36 k allocations: 29.850 MiB, 4.05% gc time)
Running: chebyshev_quadrature with k=4
  0.347721 seconds (487.27 k allocations: 26.376 MiB)
Running: jacobi_quadrature with α=β=1
 43.439852 seconds (39.36 M allocations: 3.137 GiB, 10.64% gc time)
Running: laguerre_quadrature with k=1
  3.437805 seconds (3.33 M allocations: 185.556 MiB, 3.76% gc time)
Running: legendre_quadrature
  0.201914 seconds (214.60 k allocations: 12.286 MiB)
Running: lobatto_quadrature
  0.360878 seconds (343.58 k allocations: 20.621 MiB)
Running: radau_quadrature
  0.406343 seconds (325.93 k allocations: 19.609 MiB, 6.24% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.723062 seconds (100.02 M allocations: 1.491 GiB, 0.24% gc time)
Running: rectangle_rule_midpoint.
  0.149830 seconds (173.71 k allocations: 3.886 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 82.736244 seconds (100.02 M allocations: 1.491 GiB, 0.23% gc time)
Running: rombergs_method
  0.745936 seconds (751.46 k allocations: 43.248 MiB, 5.18% gc time)
Running: simpsons_rule
  0.042855 seconds (47.32 k allocations: 2.119 MiB)
Running: simpsons38_rule
  0.108579 seconds (113.17 k allocations: 5.983 MiB)
Running: trapezoidal_rule
  0.357434 seconds (1.52 M allocations: 25.807 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.103333 seconds (32.61 k allocations: 1.941 MiB)
Running: chebyshev_quadrature with k=1
  0.536467 seconds (256.53 k allocations: 12.927 MiB, 5.97% gc time)
Running: chebyshev_quadrature with k=2
  0.174829 seconds (94.43 k allocations: 2.702 MiB)
Running: chebyshev_quadrature with k=3
  0.186079 seconds (82.69 k allocations: 2.504 MiB)
Running: chebyshev_quadrature with k=4
  0.184422 seconds (65.31 k allocations: 2.151 MiB)
Running: jacobi_quadrature with α=β=1
  2.176844 seconds (513.46 k allocations: 162.383 MiB, 9.73% gc time)
Running: legendre_quadrature
  0.217223 seconds (43.12 k allocations: 2.476 MiB)
Running: lobatto_quadrature
  0.027274 seconds (16.69 k allocations: 1.030 MiB)
Running: radau_quadrature
  0.037846 seconds (16.68 k allocations: 1.030 MiB)
Running: rectangle_rule_left
 31.170538 seconds (471.41 M allocations: 7.025 GiB, 2.62% gc time)
Running: rectangle_rule_midpoint
  0.000025 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 31.342058 seconds (476.96 M allocations: 7.107 GiB, 1.76% gc time)
Running: rombergs_method
  0.422376 seconds (338.88 k allocations: 19.212 MiB, 0.98% gc time)
Running: simpsons_rule
  0.000025 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.088286 seconds (19.88 k allocations: 1.194 MiB)
Running: trapezoidal_rule
  0.074722 seconds (18.33 k allocations: 1.099 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.029872 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.102819 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.101231 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.119983 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.121248 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.356483 seconds (378.59 k allocations: 19.853 MiB, 8.22% gc time)
Running: legendre_quadrature
  0.108240 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000100 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000043 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000764 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000404 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000573 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.079228 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000040 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.027575 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.023798 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.064402 seconds (75.83 k allocations: 4.401 MiB)
Running: chebyshev_quadrature with k=1
  0.200735 seconds (239.83 k allocations: 13.467 MiB)
Running: chebyshev_quadrature with k=2
  0.294449 seconds (295.00 k allocations: 16.524 MiB, 8.66% gc time)
Running: chebyshev_quadrature with k=3
  0.214229 seconds (274.98 k allocations: 14.944 MiB)
Running: chebyshev_quadrature with k=4
  0.241087 seconds (275.01 k allocations: 14.858 MiB)
Running: jacobi_quadrature with α=β=1
  2.708956 seconds (465.20 k allocations: 164.157 MiB, 2.85% gc time)
Running: legendre_quadrature
  0.144715 seconds (192.58 k allocations: 11.081 MiB)
Running: lobatto_quadrature
  0.178524 seconds (203.78 k allocations: 11.787 MiB, 10.47% gc time)
Running: radau_quadrature
  0.204652 seconds (203.78 k allocations: 11.806 MiB)
Running: rectangle_rule_left
  1.270820 seconds (19.75 k allocations: 1.193 MiB)
Running: rectangle_rule_midpoint
  0.026454 seconds (25.91 k allocations: 1.614 MiB)
Running: rectangle_rule_right
  1.205349 seconds (18.25 k allocations: 1.104 MiB)
Running: rombergs_method
  0.139640 seconds (139.53 k allocations: 8.040 MiB)
Running: simpsons_rule
  0.035059 seconds (28.99 k allocations: 1.800 MiB)
Running: simpsons38_rule
  0.040662 seconds (44.60 k allocations: 2.786 MiB)
Running: trapezoidal_rule
  0.031039 seconds (45.18 k allocations: 1.823 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.045866 seconds (101.38 k allocations: 3.074 MiB)
Running: chebyshev_quadrature with k=1
  0.240699 seconds (246.92 k allocations: 13.562 MiB, 7.86% gc time)
Running: chebyshev_quadrature with k=2
  0.243961 seconds (302.62 k allocations: 16.552 MiB)
Running: chebyshev_quadrature with k=3
  0.214434 seconds (282.39 k allocations: 14.975 MiB)
Running: chebyshev_quadrature with k=4
  0.274864 seconds (282.43 k allocations: 14.993 MiB, 8.31% gc time)
Running: hermite_quadrature with k=2
 16.111989 seconds (22.11 M allocations: 1.147 GiB, 9.64% gc time)
Running: jacobi_quadrature with α=β=1
  0.617752 seconds (475.20 k allocations: 50.419 MiB, 20.12% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.270956 seconds (287.89 k allocations: 15.889 MiB)
Running: legendre_quadrature
  0.162419 seconds (199.64 k allocations: 11.432 MiB)
Running: lobatto_quadrature
  0.254379 seconds (225.19 k allocations: 37.597 MiB, 9.97% gc time)
Running: radau_quadrature
  0.262842 seconds (221.78 k allocations: 30.262 MiB)
Running: rectangle_rule_left
  0.030516 seconds (22.89 k allocations: 1.353 MiB)
Running: rectangle_rule_midpoint
  0.033908 seconds (27.85 k allocations: 1.710 MiB)
Running: rectangle_rule_right
  0.052003 seconds (19.46 k allocations: 1.165 MiB, 42.72% gc time)
Running: rombergs_method
  0.148883 seconds (142.35 k allocations: 8.101 MiB)
Running: simpsons_rule
  0.067098 seconds (41.23 k allocations: 2.156 MiB)
Running: simpsons38_rule
  0.047001 seconds (59.97 k allocations: 3.194 MiB)
Running: trapezoidal_rule
  0.039445 seconds (31.54 k allocations: 1.768 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.041161 seconds (61.48 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=1
  0.192124 seconds (242.06 k allocations: 13.330 MiB)
Running: chebyshev_quadrature with k=2
  0.236508 seconds (297.34 k allocations: 16.289 MiB)
Running: chebyshev_quadrature with k=3
  0.268072 seconds (277.25 k allocations: 14.750 MiB, 10.90% gc time)
Running: chebyshev_quadrature with k=4
  0.237718 seconds (277.29 k allocations: 14.751 MiB)
Running: hermite_quadrature with k=2
  0.134106 seconds (177.31 k allocations: 10.135 MiB)
Running: jacobi_quadrature with α=β=1
 10.052544 seconds (467.80 k allocations: 1.176 GiB, 9.29% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.211725 seconds (282.75 k allocations: 15.735 MiB)
Running: legendre_quadrature
  0.158013 seconds (194.81 k allocations: 11.207 MiB)
Running: lobatto_quadrature
  0.218271 seconds (215.55 k allocations: 23.308 MiB, 7.01% gc time)
Running: radau_quadrature
  0.196027 seconds (214.70 k allocations: 21.259 MiB)
Running: rectangle_rule_left
  0.026130 seconds (20.45 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.025851 seconds (26.63 k allocations: 1.652 MiB)
Running: rectangle_rule_right
  0.023081 seconds (18.23 k allocations: 1.105 MiB)
Running: rombergs_method
  0.134193 seconds (137.82 k allocations: 7.902 MiB)
Running: simpsons_rule
  0.063702 seconds (33.47 k allocations: 1.930 MiB, 28.96% gc time)
Running: simpsons38_rule
  0.040748 seconds (50.51 k allocations: 2.938 MiB)
Running: trapezoidal_rule
  0.029741 seconds (26.22 k allocations: 1.592 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.037596 seconds (32.45 k allocations: 1.955 MiB)
Running: chebyshev_quadrature with k=1
  0.224299 seconds (240.38 k allocations: 13.544 MiB)
Running: chebyshev_quadrature with k=2
  0.272196 seconds (295.58 k allocations: 16.630 MiB)
Running: chebyshev_quadrature with k=3
  0.271533 seconds (275.58 k allocations: 14.954 MiB, 7.26% gc time)
Running: chebyshev_quadrature with k=4
  0.222163 seconds (275.62 k allocations: 14.793 MiB)
Running: jacobi_quadrature with α=β=1
  2.718654 seconds (465.85 k allocations: 195.235 MiB, 7.82% gc time)
Running: legendre_quadrature
  0.167918 seconds (193.14 k allocations: 11.131 MiB)
Running: lobatto_quadrature
  0.191987 seconds (204.35 k allocations: 11.816 MiB)
Running: radau_quadrature
  0.187519 seconds (204.35 k allocations: 11.818 MiB)
Running: rectangle_rule_left
  0.298396 seconds (20.31 k allocations: 1.221 MiB)
Running: rectangle_rule_midpoint
  0.027002 seconds (26.27 k allocations: 1.634 MiB)
Running: rectangle_rule_right
  0.104320 seconds (18.62 k allocations: 1.125 MiB)
Running: rombergs_method
  0.160561 seconds (150.88 k allocations: 8.852 MiB, 11.31% gc time)
Running: simpsons_rule
  0.031208 seconds (29.74 k allocations: 1.834 MiB)
Running: simpsons38_rule
  0.035207 seconds (45.38 k allocations: 2.819 MiB)
Running: trapezoidal_rule
  0.027495 seconds (46.17 k allocations: 1.860 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.035706 seconds (33.21 k allocations: 1.904 MiB)
Running: chebyshev_quadrature with k=1
  0.207897 seconds (240.95 k allocations: 13.495 MiB)
Running: chebyshev_quadrature with k=2
  0.274050 seconds (296.18 k allocations: 16.596 MiB, 8.07% gc time)
Running: chebyshev_quadrature with k=3
  0.252645 seconds (276.12 k allocations: 14.927 MiB)
Running: chebyshev_quadrature with k=4
  0.229771 seconds (276.15 k allocations: 14.966 MiB)
Running: jacobi_quadrature with α=β=1
  1.919984 seconds (466.51 k allocations: 149.900 MiB, 9.13% gc time)
Running: legendre_quadrature
  0.172631 seconds (193.71 k allocations: 11.128 MiB)
Running: lobatto_quadrature
  0.199220 seconds (204.93 k allocations: 11.896 MiB)
Running: radau_quadrature
  0.213035 seconds (204.92 k allocations: 11.837 MiB)
Running: rectangle_rule_left
  1.227014 seconds (20.59 k allocations: 1.235 MiB)
Running: rectangle_rule_midpoint
  0.025869 seconds (26.26 k allocations: 1.633 MiB)
Running: rectangle_rule_right
  1.244611 seconds (18.60 k allocations: 1.123 MiB, 1.57% gc time)
Running: rombergs_method
  0.138782 seconds (140.83 k allocations: 8.101 MiB)
Running: simpsons_rule
  0.043445 seconds (30.49 k allocations: 1.862 MiB)
Running: simpsons38_rule
  0.040111 seconds (46.12 k allocations: 2.848 MiB)
Running: trapezoidal_rule
  0.029663 seconds (58.43 k allocations: 2.061 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.165630 seconds (152.73 k allocations: 9.077 MiB)
Running: chebyshev_quadrature with k=1
  0.156897 seconds (70.50 k allocations: 2.228 MiB)
Running: chebyshev_quadrature with k=2
  0.173814 seconds (105.72 k allocations: 2.897 MiB)
Running: chebyshev_quadrature with k=3
  0.177400 seconds (93.21 k allocations: 2.682 MiB)
Running: chebyshev_quadrature with k=4
  0.191228 seconds (72.74 k allocations: 2.276 MiB)
Running: jacobi_quadrature with α=β=1
  2.255765 seconds (487.22 k allocations: 168.198 MiB, 7.29% gc time)
Running: legendre_quadrature
  0.111442 seconds (19.25 k allocations: 1.113 MiB)
Running: lobatto_quadrature
  0.000097 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000041 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 50.322795 seconds (590.00 M allocations: 8.792 GiB, 2.67% gc time)
Running: rectangle_rule_midpoint
  0.000045 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.940301 seconds (592.75 M allocations: 8.833 GiB, 2.59% gc time)
Running: rombergs_method
  0.153213 seconds (21.09 k allocations: 1.189 MiB)
Running: simpsons_rule
  0.000037 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.038365 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.031726 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 34.619321 seconds (629.34 M allocations: 9.388 GiB, 4.21% gc time)
Running: chebyshev_quadrature with k=1
  0.618364 seconds (438.58 k allocations: 24.244 MiB, 6.10% gc time)
Running: chebyshev_quadrature with k=2
 14.013533 seconds (495.92 k allocations: 4.042 GiB, 3.61% gc time)
Running: chebyshev_quadrature with k=3
  6.414865 seconds (290.07 k allocations: 1.643 GiB, 4.20% gc time)
Running: chebyshev_quadrature with k=4
  8.501031 seconds (290.10 k allocations: 2.262 GiB, 2.65% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 58.407838 seconds (504.62 k allocations: 13.255 GiB, 2.88% gc time)
Running: legendre_quadrature.
  5.463338 seconds (232.37 k allocations: 1.976 GiB, 1.29% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 58.386279 seconds (8.24 M allocations: 13.384 GiB, 4.11% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 56.936244 seconds (7.24 M allocations: 13.369 GiB, 3.33% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.065959 seconds (23.33 k allocations: 1.402 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.040034 seconds (31.94 k allocations: 1.958 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.006862 seconds (23.55 k allocations: 1.412 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.373199 seconds (455.71 k allocations: 153.711 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 44.737005 seconds (600.04 M allocations: 8.943 GiB, 8.06% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.748250 seconds (600.05 M allocations: 8.944 GiB, 8.07% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.318954 seconds (600.04 M allocations: 8.943 GiB, 8.62% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.096759 seconds (182.49 k allocations: 4.516 MiB)
Running: chebyshev_quadrature with k=1
  0.215462 seconds (257.54 k allocations: 13.995 MiB)
Running: chebyshev_quadrature with k=2
  0.228420 seconds (283.71 k allocations: 15.201 MiB)
Running: chebyshev_quadrature with k=3
  0.230705 seconds (260.23 k allocations: 13.437 MiB)
Running: chebyshev_quadrature with k=4
  0.223568 seconds (260.26 k allocations: 13.430 MiB)
Running: jacobi_quadrature with α=β=1
  0.414633 seconds (404.84 k allocations: 35.832 MiB)
Running: laguerre_quadrature with k=2
  0.196344 seconds (187.56 k allocations: 10.852 MiB)
Running: legendre_quadrature
  0.133396 seconds (151.36 k allocations: 8.368 MiB)
Running: lobatto_quadrature
  0.037060 seconds (10.78 k allocations: 15.108 MiB)
Running: radau_quadrature
  0.034134 seconds (9.55 k allocations: 13.182 MiB)
Running: rectangle_rule_left
  0.059972 seconds (19.80 k allocations: 1.170 MiB)
Running: rectangle_rule_midpoint
  0.049726 seconds (26.75 k allocations: 1.639 MiB)
Running: rectangle_rule_right
  0.082319 seconds (18.35 k allocations: 1.093 MiB)
Running: rombergs_method
  0.246868 seconds (178.36 k allocations: 10.180 MiB)
Running: simpsons_rule
  0.001919 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.053843 seconds (81.40 k allocations: 3.518 MiB)
Running: trapezoidal_rule
  0.229826 seconds (2.39 M allocations: 37.756 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001922 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.126918 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.158795 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.212530 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.141425 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  8.375803 seconds (401.68 k allocations: 906.516 MiB, 4.68% gc time)
Running: legendre_quadrature
  0.074177 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000170 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000127 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.543760 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000432 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.489955 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.070665 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000084 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000173 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001175 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000746 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.105154 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.111761 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.122814 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.157944 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.592339 seconds (387.96 k allocations: 253.739 MiB)
Running: legendre_quadrature
  0.078462 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000090 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000042 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.163192 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001265 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.431874 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.080502 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000060 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001662 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
