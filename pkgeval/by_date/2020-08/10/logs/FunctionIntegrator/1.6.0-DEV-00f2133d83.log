Julia Version 1.6.0-DEV.609
Commit 00f2133d83 (2020-08-10 13:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed SpecialFunctions ───────────── v0.10.3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_hMcj14/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_hMcj14/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  0.905516 seconds (1.34 M allocations: 71.192 MiB, 6.99% gc time)
Running: chebyshev_quadrature with k=1
  1.722031 seconds (2.25 M allocations: 129.052 MiB, 2.96% gc time)
Running: chebyshev_quadrature with k=2
  0.281985 seconds (425.40 k allocations: 24.405 MiB)
Running: chebyshev_quadrature with k=3
  0.347080 seconds (545.35 k allocations: 29.913 MiB, 3.94% gc time)
Running: chebyshev_quadrature with k=4
  0.305056 seconds (488.16 k allocations: 26.425 MiB)
Running: jacobi_quadrature with α=β=1
 43.746812 seconds (39.42 M allocations: 3.140 GiB, 11.06% gc time)
Running: laguerre_quadrature with k=1
  2.996185 seconds (3.34 M allocations: 185.918 MiB, 4.28% gc time)
Running: legendre_quadrature
  0.226628 seconds (215.42 k allocations: 12.340 MiB)
Running: lobatto_quadrature
  0.375544 seconds (344.68 k allocations: 20.665 MiB)
Running: radau_quadrature
  0.310811 seconds (326.99 k allocations: 19.665 MiB, 7.95% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 80.839143 seconds (100.02 M allocations: 1.491 GiB, 0.40% gc time)
Running: rectangle_rule_midpoint.
  0.230511 seconds (173.78 k allocations: 3.889 MiB, 14.01% gc time)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 85.966453 seconds (100.02 M allocations: 1.491 GiB, 0.30% gc time)
Running: rombergs_method
  0.561977 seconds (753.85 k allocations: 43.402 MiB, 5.47% gc time)
Running: simpsons_rule
  0.047831 seconds (47.41 k allocations: 2.123 MiB)
Running: simpsons38_rule
  0.103910 seconds (113.36 k allocations: 5.987 MiB)
Running: trapezoidal_rule
  0.317683 seconds (1.52 M allocations: 25.807 MiB, 5.90% gc time)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.090882 seconds (32.69 k allocations: 1.945 MiB)
Running: chebyshev_quadrature with k=1
  0.522384 seconds (275.91 k allocations: 13.991 MiB)
Running: chebyshev_quadrature with k=2
  0.154235 seconds (115.76 k allocations: 3.795 MiB)
Running: chebyshev_quadrature with k=3
  0.150490 seconds (105.11 k allocations: 3.641 MiB)
Running: chebyshev_quadrature with k=4
  0.156120 seconds (87.72 k allocations: 3.287 MiB)
Running: jacobi_quadrature with α=β=1
  2.394570 seconds (536.49 k allocations: 163.513 MiB, 3.95% gc time)
Running: legendre_quadrature
  0.147194 seconds (62.43 k allocations: 3.483 MiB)
Running: lobatto_quadrature
  0.020305 seconds (16.86 k allocations: 1.041 MiB)
Running: radau_quadrature
  0.020353 seconds (16.85 k allocations: 1.040 MiB)
Running: rectangle_rule_left
 27.791292 seconds (471.41 M allocations: 7.025 GiB, 3.60% gc time)
Running: rectangle_rule_midpoint
  0.000027 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 30.047076 seconds (476.96 M allocations: 7.107 GiB, 3.63% gc time)
Running: rombergs_method
  0.376259 seconds (360.83 k allocations: 20.341 MiB)
Running: simpsons_rule
  0.000030 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.059340 seconds (19.93 k allocations: 1.196 MiB)
Running: trapezoidal_rule
  0.059412 seconds (18.38 k allocations: 1.101 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.026880 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.094064 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.099434 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.110741 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.103760 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.310671 seconds (379.29 k allocations: 19.806 MiB)
Running: legendre_quadrature
  0.085648 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000090 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000035 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000495 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000349 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000493 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.074629 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000047 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.025045 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.022680 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.058333 seconds (75.98 k allocations: 4.409 MiB)
Running: chebyshev_quadrature with k=1
  0.200877 seconds (240.48 k allocations: 13.497 MiB)
Running: chebyshev_quadrature with k=2
  0.266926 seconds (295.72 k allocations: 16.587 MiB, 12.83% gc time)
Running: chebyshev_quadrature with k=3
  0.227449 seconds (275.63 k allocations: 14.996 MiB)
Running: chebyshev_quadrature with k=4
  0.212051 seconds (275.67 k allocations: 14.905 MiB)
Running: jacobi_quadrature with α=β=1
  2.408114 seconds (466.15 k allocations: 164.249 MiB, 20.54% gc time)
Running: legendre_quadrature
  0.161208 seconds (193.22 k allocations: 11.118 MiB)
Running: lobatto_quadrature
  0.189842 seconds (204.46 k allocations: 11.856 MiB, 6.97% gc time)
Running: radau_quadrature
  0.168747 seconds (204.45 k allocations: 11.826 MiB)
Running: rectangle_rule_left
  1.057494 seconds (19.80 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.027897 seconds (25.98 k allocations: 1.617 MiB)
Running: rectangle_rule_right
  1.054965 seconds (18.30 k allocations: 1.107 MiB)
Running: rombergs_method
  0.113083 seconds (140.08 k allocations: 8.067 MiB)
Running: simpsons_rule
  0.029348 seconds (29.08 k allocations: 1.804 MiB)
Running: simpsons38_rule
  0.035060 seconds (44.73 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.026394 seconds (45.24 k allocations: 1.826 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.055975 seconds (101.48 k allocations: 3.079 MiB, 27.73% gc time)
Running: chebyshev_quadrature with k=1
  0.191580 seconds (247.58 k allocations: 13.598 MiB)
Running: chebyshev_quadrature with k=2
  0.215316 seconds (303.35 k allocations: 16.596 MiB)
Running: chebyshev_quadrature with k=3
  0.230575 seconds (283.05 k allocations: 15.012 MiB, 7.43% gc time)
Running: chebyshev_quadrature with k=4
  0.211463 seconds (283.09 k allocations: 15.021 MiB)
Running: hermite_quadrature with k=2
 16.571661 seconds (22.14 M allocations: 1.148 GiB, 8.03% gc time)
Running: jacobi_quadrature with α=β=1
  0.601281 seconds (476.19 k allocations: 50.466 MiB, 6.42% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.307340 seconds (288.63 k allocations: 15.911 MiB)
Running: legendre_quadrature
  0.202244 seconds (200.29 k allocations: 11.466 MiB)
Running: lobatto_quadrature
  0.334220 seconds (225.97 k allocations: 37.639 MiB, 11.76% gc time)
Running: radau_quadrature
  0.285647 seconds (222.56 k allocations: 30.364 MiB, 7.05% gc time)
Running: rectangle_rule_left
  0.038566 seconds (22.96 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint
  0.025427 seconds (27.93 k allocations: 1.714 MiB)
Running: rectangle_rule_right
  0.024030 seconds (19.52 k allocations: 1.168 MiB)
Running: rombergs_method
  0.116821 seconds (142.91 k allocations: 8.131 MiB)
Running: simpsons_rule
  0.038987 seconds (41.33 k allocations: 2.160 MiB)
Running: simpsons38_rule
  0.040573 seconds (60.12 k allocations: 3.201 MiB)
Running: trapezoidal_rule
  0.030772 seconds (31.62 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.034697 seconds (61.58 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=1
  0.200534 seconds (242.71 k allocations: 13.362 MiB)
Running: chebyshev_quadrature with k=2
  0.245095 seconds (298.07 k allocations: 16.326 MiB)
Running: chebyshev_quadrature with k=3
  0.226628 seconds (277.91 k allocations: 14.780 MiB)
Running: chebyshev_quadrature with k=4
  0.202917 seconds (277.94 k allocations: 14.795 MiB)
Running: hermite_quadrature with k=2
  0.158182 seconds (177.91 k allocations: 10.167 MiB)
Running: jacobi_quadrature with α=β=1
 10.887919 seconds (468.75 k allocations: 1.176 GiB, 13.57% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.245981 seconds (283.49 k allocations: 15.706 MiB, 6.30% gc time)
Running: legendre_quadrature
  0.165998 seconds (195.46 k allocations: 11.231 MiB)
Running: lobatto_quadrature
  0.195269 seconds (216.33 k allocations: 23.344 MiB)
Running: radau_quadrature
  0.200308 seconds (215.48 k allocations: 21.274 MiB)
Running: rectangle_rule_left
  0.040033 seconds (20.51 k allocations: 1.237 MiB)
Running: rectangle_rule_midpoint
  0.029107 seconds (26.71 k allocations: 1.655 MiB)
Running: rectangle_rule_right
  0.044088 seconds (18.28 k allocations: 1.107 MiB, 37.53% gc time)
Running: rombergs_method
  0.159420 seconds (138.37 k allocations: 7.933 MiB)
Running: simpsons_rule
  0.034717 seconds (33.56 k allocations: 1.934 MiB)
Running: simpsons38_rule
  0.047241 seconds (50.64 k allocations: 2.943 MiB)
Running: trapezoidal_rule
  0.035983 seconds (26.29 k allocations: 1.595 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.031744 seconds (32.54 k allocations: 1.960 MiB)
Running: chebyshev_quadrature with k=1
  0.240906 seconds (241.04 k allocations: 13.578 MiB)
Running: chebyshev_quadrature with k=2
  0.230377 seconds (296.30 k allocations: 16.665 MiB)
Running: chebyshev_quadrature with k=3
  0.245527 seconds (276.23 k allocations: 14.992 MiB, 9.13% gc time)
Running: chebyshev_quadrature with k=4
  0.220268 seconds (276.27 k allocations: 14.823 MiB)
Running: jacobi_quadrature with α=β=1
  2.442227 seconds (466.80 k allocations: 195.329 MiB, 9.97% gc time)
Running: legendre_quadrature
  0.187915 seconds (193.79 k allocations: 11.144 MiB)
Running: lobatto_quadrature
  0.216015 seconds (205.02 k allocations: 11.865 MiB)
Running: radau_quadrature
  0.256406 seconds (205.02 k allocations: 11.858 MiB, 9.01% gc time)
Running: rectangle_rule_left
  0.382953 seconds (20.37 k allocations: 1.224 MiB)
Running: rectangle_rule_midpoint
  0.032415 seconds (26.35 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.142870 seconds (18.68 k allocations: 1.127 MiB)
Running: rombergs_method
  0.144587 seconds (151.46 k allocations: 8.820 MiB)
Running: simpsons_rule
  0.033522 seconds (29.83 k allocations: 1.838 MiB)
Running: simpsons38_rule
  0.038550 seconds (45.51 k allocations: 2.825 MiB)
Running: trapezoidal_rule
  0.028804 seconds (46.24 k allocations: 1.863 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.033175 seconds (33.30 k allocations: 1.908 MiB)
Running: chebyshev_quadrature with k=1
  0.189639 seconds (241.60 k allocations: 13.522 MiB)
Running: chebyshev_quadrature with k=2
  0.238776 seconds (296.90 k allocations: 16.579 MiB, 9.04% gc time)
Running: chebyshev_quadrature with k=3
  0.193883 seconds (276.77 k allocations: 14.912 MiB)
Running: chebyshev_quadrature with k=4
  0.197925 seconds (276.81 k allocations: 14.996 MiB)
Running: jacobi_quadrature with α=β=1
  2.158535 seconds (467.46 k allocations: 149.937 MiB, 10.42% gc time)
Running: legendre_quadrature
  0.139932 seconds (194.36 k allocations: 11.161 MiB)
Running: lobatto_quadrature
  0.155704 seconds (205.60 k allocations: 11.875 MiB)
Running: radau_quadrature
  0.169046 seconds (205.59 k allocations: 11.869 MiB)
Running: rectangle_rule_left
  1.184917 seconds (20.64 k allocations: 1.238 MiB)
Running: rectangle_rule_midpoint
  0.024230 seconds (26.34 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  1.175120 seconds (18.65 k allocations: 1.125 MiB)
Running: rombergs_method
  0.120639 seconds (141.39 k allocations: 8.144 MiB)
Running: simpsons_rule
  0.034192 seconds (30.58 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.037632 seconds (46.26 k allocations: 2.854 MiB)
Running: trapezoidal_rule
  0.028124 seconds (58.50 k allocations: 2.064 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.155477 seconds (153.19 k allocations: 9.099 MiB)
Running: chebyshev_quadrature with k=1
  0.131224 seconds (91.28 k allocations: 3.297 MiB)
Running: chebyshev_quadrature with k=2
  0.143660 seconds (127.05 k allocations: 3.990 MiB)
Running: chebyshev_quadrature with k=3
  0.144634 seconds (115.62 k allocations: 3.819 MiB)
Running: chebyshev_quadrature with k=4
  0.143059 seconds (95.16 k allocations: 3.413 MiB)
Running: jacobi_quadrature with α=β=1
  2.049983 seconds (510.01 k allocations: 169.316 MiB, 7.89% gc time)
Running: legendre_quadrature
  0.099997 seconds (38.38 k allocations: 2.107 MiB)
Running: lobatto_quadrature
  0.000145 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000149 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 49.161378 seconds (590.00 M allocations: 8.792 GiB, 3.49% gc time)
Running: rectangle_rule_midpoint
  0.000046 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 48.462936 seconds (592.75 M allocations: 8.833 GiB, 3.24% gc time)
Running: rombergs_method
  0.129375 seconds (41.92 k allocations: 2.259 MiB)
Running: simpsons_rule
  0.000050 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.031876 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.022340 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 33.676535 seconds (629.34 M allocations: 9.388 GiB, 4.85% gc time)
Running: chebyshev_quadrature with k=1
  0.504730 seconds (439.74 k allocations: 24.305 MiB, 3.71% gc time)
Running: chebyshev_quadrature with k=2
 14.807316 seconds (497.15 k allocations: 4.042 GiB, 4.02% gc time)
Running: chebyshev_quadrature with k=3
  7.012073 seconds (290.74 k allocations: 1.643 GiB, 4.39% gc time)
Running: chebyshev_quadrature with k=4
  9.555312 seconds (290.77 k allocations: 2.262 GiB, 2.41% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 65.162761 seconds (505.77 k allocations: 13.255 GiB, 2.62% gc time)
Running: legendre_quadrature.
  6.151357 seconds (233.21 k allocations: 1.977 GiB, 1.37% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 65.948854 seconds (8.24 M allocations: 13.384 GiB, 3.24% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 57.667562 seconds (7.24 M allocations: 13.369 GiB, 2.35% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.007950 seconds (23.40 k allocations: 1.405 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.051961 seconds (32.03 k allocations: 1.962 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.054588 seconds (23.62 k allocations: 1.416 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.051054 seconds (457.33 k allocations: 153.734 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 43.405602 seconds (600.04 M allocations: 8.943 GiB, 8.29% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.467818 seconds (600.05 M allocations: 8.944 GiB, 7.64% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.948697 seconds (600.04 M allocations: 8.943 GiB, 8.58% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.059487 seconds (182.59 k allocations: 4.522 MiB)
Running: chebyshev_quadrature with k=1
  0.206970 seconds (258.20 k allocations: 14.029 MiB)
Running: chebyshev_quadrature with k=2
  0.202594 seconds (284.36 k allocations: 15.439 MiB)
Running: chebyshev_quadrature with k=3
  0.214875 seconds (260.81 k allocations: 13.465 MiB)
Running: chebyshev_quadrature with k=4
  0.200616 seconds (260.84 k allocations: 13.461 MiB)
Running: jacobi_quadrature with α=β=1
  0.457398 seconds (405.67 k allocations: 35.876 MiB)
Running: laguerre_quadrature with k=2
  0.242975 seconds (188.19 k allocations: 10.881 MiB)
Running: legendre_quadrature
  0.156441 seconds (151.89 k allocations: 8.414 MiB)
Running: lobatto_quadrature
  0.057968 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.041641 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.060031 seconds (19.85 k allocations: 1.172 MiB)
Running: rectangle_rule_midpoint
  0.048394 seconds (26.82 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.050217 seconds (18.40 k allocations: 1.096 MiB)
Running: rombergs_method
  0.259625 seconds (171.07 k allocations: 9.740 MiB)
Running: simpsons_rule
  0.002114 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.056693 seconds (81.54 k allocations: 3.524 MiB)
Running: trapezoidal_rule
  0.270795 seconds (2.39 M allocations: 37.759 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.001996 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.104470 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.124900 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.110364 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.114648 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  9.155916 seconds (402.46 k allocations: 906.594 MiB, 5.47% gc time)
Running: legendre_quadrature
  0.062967 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000265 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000166 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.485890 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000439 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.530453 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.075667 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000061 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000050 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000807 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000719 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.108500 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.096424 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.111706 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.102598 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  3.645809 seconds (388.73 k allocations: 253.822 MiB)
Running: legendre_quadrature
  0.062265 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000093 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000071 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 12.497146 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001217 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.893302 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.078596 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000053 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000041 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.002010 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
