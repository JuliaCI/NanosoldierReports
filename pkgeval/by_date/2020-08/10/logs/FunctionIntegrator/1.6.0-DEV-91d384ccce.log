Julia Version 1.6.0-DEV.607
Commit 91d384ccce (2020-08-08 23:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CompilerSupportLibraries_jll ─ v0.3.3+0
  Installed OpenSpecFun_jll ────────────── v0.5.3+3
  Installed FunctionIntegrator ─────────── v0.5.1
  Installed FastGaussQuadrature ────────── v0.4.2
  Installed SpecialFunctions ───────────── v0.10.3
Updating `~/.julia/environments/v1.6/Project.toml`
  [7685536e] + FunctionIntegrator v0.5.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [e66e0078] + CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] + FastGaussQuadrature v0.4.2
  [7685536e] + FunctionIntegrator v0.5.1
  [efe28fd5] + OpenSpecFun_jll v0.5.3+3
  [276daf66] + SpecialFunctions v0.10.3
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing FunctionIntegrator
Status `/tmp/jl_PuqQjl/Project.toml`
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [276daf66] SpecialFunctions v0.10.3
  [8dfed614] Test
Status `/tmp/jl_PuqQjl/Manifest.toml`
  [e66e0078] CompilerSupportLibraries_jll v0.3.3+0
  [442a2c76] FastGaussQuadrature v0.4.2
  [7685536e] FunctionIntegrator v0.5.1
  [efe28fd5] OpenSpecFun_jll v0.5.3+3
  [276daf66] SpecialFunctions v0.10.3
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Performing the Airy Ai(x) test, where Ai(x) is integrated on the semi-infinite domain, or an approximation of it, namely [0,100] and the result is compared to the analytical result 1/3.
Running: adaptive_simpsons_rule
  1.054642 seconds (1.34 M allocations: 71.109 MiB, 11.77% gc time)
Running: chebyshev_quadrature with k=1
  1.637070 seconds (2.24 M allocations: 128.765 MiB, 2.96% gc time)
Running: chebyshev_quadrature with k=2
  0.293253 seconds (425.40 k allocations: 24.405 MiB)
Running: chebyshev_quadrature with k=3
  0.365941 seconds (545.35 k allocations: 29.893 MiB, 3.69% gc time)
Running: chebyshev_quadrature with k=4
  0.298987 seconds (488.16 k allocations: 26.422 MiB)
Running: jacobi_quadrature with α=β=1
 42.296293 seconds (39.41 M allocations: 3.139 GiB, 9.33% gc time)
Running: laguerre_quadrature with k=1
  3.226159 seconds (3.34 M allocations: 185.891 MiB, 10.30% gc time)
Running: legendre_quadrature
  0.240861 seconds (215.32 k allocations: 12.332 MiB)
Running: lobatto_quadrature
  0.356186 seconds (344.17 k allocations: 20.606 MiB)
Running: radau_quadrature
  0.364104 seconds (326.48 k allocations: 19.607 MiB, 6.81% gc time)
Running: rectangle_rule_left. Only a rough approximation can be practically achieved using this function.
 79.579644 seconds (100.02 M allocations: 1.491 GiB, 0.52% gc time)
Running: rectangle_rule_midpoint.
  0.149559 seconds (173.78 k allocations: 3.889 MiB)
Running: rectangle_rule_right. Only a rough approximation can be practically achieved using this function.
 79.186126 seconds (100.02 M allocations: 1.491 GiB, 0.25% gc time)
Running: rombergs_method
  0.665113 seconds (753.75 k allocations: 43.361 MiB, 4.81% gc time)
Running: simpsons_rule
  0.040201 seconds (47.41 k allocations: 2.123 MiB)
Running: simpsons38_rule
  0.101080 seconds (113.42 k allocations: 5.990 MiB)
Running: trapezoidal_rule
  0.320598 seconds (1.52 M allocations: 25.809 MiB)
Test Summary: | Pass  Total
Airy Ai(x)    |   17     17
Performing the besselj test, where BesselJ_1(2) is approximated and the result is compared to the value obtained from SpecialFunctions' besselj function.
Running: adaptive_simpsons_rule with ε=1e-7
  0.079461 seconds (32.68 k allocations: 1.945 MiB)
Running: chebyshev_quadrature with k=1
  0.520893 seconds (275.83 k allocations: 13.983 MiB, 5.61% gc time)
Running: chebyshev_quadrature with k=2
  0.184116 seconds (115.76 k allocations: 3.795 MiB)
Running: chebyshev_quadrature with k=3
  0.150295 seconds (105.11 k allocations: 3.641 MiB)
Running: chebyshev_quadrature with k=4
  0.161905 seconds (87.72 k allocations: 3.287 MiB)
Running: jacobi_quadrature with α=β=1
  1.583467 seconds (536.61 k allocations: 163.518 MiB, 9.65% gc time)
Running: legendre_quadrature
  0.166339 seconds (62.34 k allocations: 3.475 MiB)
Running: lobatto_quadrature
  0.021548 seconds (16.77 k allocations: 1.033 MiB)
Running: radau_quadrature
  0.020926 seconds (16.75 k allocations: 1.033 MiB)
Running: rectangle_rule_left
 30.091949 seconds (471.41 M allocations: 7.025 GiB, 2.76% gc time)
Running: rectangle_rule_midpoint
  0.000026 seconds (45 allocations: 1.047 KiB)
Running: rectangle_rule_right
 29.080216 seconds (476.96 M allocations: 7.107 GiB, 1.76% gc time)
Running: rombergs_method
  0.568173 seconds (360.74 k allocations: 20.334 MiB, 0.54% gc time)
Running: simpsons_rule
  0.000029 seconds (85 allocations: 1.672 KiB)
Running: simpsons38_rule
  0.059852 seconds (19.93 k allocations: 1.196 MiB)
Running: trapezoidal_rule
  0.053924 seconds (18.38 k allocations: 1.101 MiB)
Test Summary: | Pass  Total
besselj       |   16     16
Integrating cos^2(x)/(1+cot(x)) from 0 to pi/2 and comparing the results to the analytical result 0.25.
Running: adaptive_simpsons_rule with ε=1e-7
  0.028405 seconds (1.99 k allocations: 53.594 KiB)
Running: chebyshev_quadrature with k=1
  0.089260 seconds (2.40 k allocations: 113.453 KiB)
Running: chebyshev_quadrature with k=2
  0.095722 seconds (2.65 k allocations: 121.469 KiB)
Running: chebyshev_quadrature with k=3
  0.101899 seconds (3.08 k allocations: 133.688 KiB)
Running: chebyshev_quadrature with k=4
  0.106943 seconds (3.08 k allocations: 133.750 KiB)
Running: jacobi_quadrature with α=β=1
  0.325290 seconds (379.29 k allocations: 19.806 MiB, 8.62% gc time)
Running: legendre_quadrature
  0.071151 seconds (1.24 k allocations: 63.609 KiB)
Running: lobatto_quadrature
  0.000100 seconds (67 allocations: 2.844 KiB)
Running: radau_quadrature
  0.000049 seconds (71 allocations: 3.078 KiB)
Running: rectangle_rule_left
  0.000528 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_midpoint
  0.000369 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right
  0.000519 seconds (9 allocations: 496 bytes)
Running: rombergs_method
  0.063717 seconds (1.01 k allocations: 54.109 KiB)
Running: simpsons_rule
  0.000046 seconds (323 allocations: 5.391 KiB)
Running: simpsons38_rule
  0.023683 seconds (923 allocations: 39.281 KiB)
Running: trapezoidal_rule
  0.021096 seconds (44.33 k allocations: 704.859 KiB)
Test Summary: | Pass  Total
coscotint     |   16     16
Integrating cosine from 0 to pi/2 and comparing the result to the analytical result of 1.
Running: adaptive_simpsons_rule
  0.105290 seconds (75.98 k allocations: 4.409 MiB)
Running: chebyshev_quadrature with k=1
  0.205931 seconds (240.48 k allocations: 13.497 MiB)
Running: chebyshev_quadrature with k=2
  0.261002 seconds (295.72 k allocations: 16.587 MiB, 11.73% gc time)
Running: chebyshev_quadrature with k=3
  0.248234 seconds (275.63 k allocations: 14.992 MiB)
Running: chebyshev_quadrature with k=4
  0.209595 seconds (275.67 k allocations: 14.889 MiB)
Running: jacobi_quadrature with α=β=1
  1.849639 seconds (466.15 k allocations: 164.244 MiB, 2.65% gc time)
Running: legendre_quadrature
  0.178568 seconds (193.22 k allocations: 11.117 MiB)
Running: lobatto_quadrature
  0.191423 seconds (204.45 k allocations: 11.822 MiB, 8.98% gc time)
Running: radau_quadrature
  0.272407 seconds (204.45 k allocations: 11.825 MiB)
Running: rectangle_rule_left
  1.192682 seconds (19.80 k allocations: 1.195 MiB)
Running: rectangle_rule_midpoint
  0.026437 seconds (25.98 k allocations: 1.617 MiB)
Running: rectangle_rule_right
  1.181186 seconds (18.30 k allocations: 1.107 MiB)
Running: rombergs_method
  0.128894 seconds (140.08 k allocations: 8.067 MiB)
Running: simpsons_rule
  0.030371 seconds (29.08 k allocations: 1.804 MiB)
Running: simpsons38_rule
  0.034451 seconds (44.73 k allocations: 2.791 MiB)
Running: trapezoidal_rule
  0.026991 seconds (45.24 k allocations: 1.826 MiB)
Test Summary: | Pass  Total
Cosine        |   16     16
Integrating e^(-x^2)/(1+x^2) on the infinite domain [-inf, inf], or failing that on [-100,100], and comparing it to the analytical result exp(1)*pi*erfc(1)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040672 seconds (101.48 k allocations: 3.079 MiB)
Running: chebyshev_quadrature with k=1
  0.204182 seconds (247.58 k allocations: 13.597 MiB, 9.18% gc time)
Running: chebyshev_quadrature with k=2
  0.210871 seconds (303.35 k allocations: 16.596 MiB)
Running: chebyshev_quadrature with k=3
  0.199056 seconds (283.05 k allocations: 15.013 MiB)
Running: chebyshev_quadrature with k=4
  0.241217 seconds (283.09 k allocations: 15.022 MiB, 7.95% gc time)
Running: hermite_quadrature with k=2
 14.993596 seconds (22.14 M allocations: 1.148 GiB, 9.20% gc time)
Running: jacobi_quadrature with α=β=1
  0.397434 seconds (476.19 k allocations: 50.466 MiB, 4.47% gc time)
Running: laguerre_quadrature with k=1 and multiplying the result by 2 (as Laguerre is only on the semi-infinite domain)
  0.255936 seconds (288.63 k allocations: 15.911 MiB)
Running: legendre_quadrature
  0.169937 seconds (200.29 k allocations: 11.467 MiB)
Running: lobatto_quadrature
  0.242523 seconds (225.97 k allocations: 37.638 MiB, 8.09% gc time)
Running: radau_quadrature
  0.224661 seconds (222.56 k allocations: 30.302 MiB, 6.35% gc time)
Running: rectangle_rule_left
  0.028360 seconds (22.96 k allocations: 1.356 MiB)
Running: rectangle_rule_midpoint
  0.030157 seconds (27.93 k allocations: 1.714 MiB)
Running: rectangle_rule_right
  0.026027 seconds (19.52 k allocations: 1.168 MiB)
Running: rombergs_method
  0.119994 seconds (142.90 k allocations: 8.131 MiB)
Running: simpsons_rule
  0.040112 seconds (41.33 k allocations: 2.160 MiB)
Running: simpsons38_rule
  0.041714 seconds (60.12 k allocations: 3.201 MiB)
Running: trapezoidal_rule
  0.032373 seconds (31.62 k allocations: 1.772 MiB)
Test Summary: | Pass  Total
expnx2datan   |   18     18
Integrate exp(-x^2) from minus infinity to positive infinity and comparing the result to the analytical solution, sqrt(pi)
Running: adaptive_simpsons_rule with ε=1e-7
  0.040650 seconds (61.58 k allocations: 2.363 MiB)
Running: chebyshev_quadrature with k=1
  0.207066 seconds (242.71 k allocations: 13.362 MiB, 8.47% gc time)
Running: chebyshev_quadrature with k=2
  0.223911 seconds (298.07 k allocations: 16.327 MiB)
Running: chebyshev_quadrature with k=3
  0.205690 seconds (277.91 k allocations: 14.780 MiB)
Running: chebyshev_quadrature with k=4
  0.225720 seconds (277.94 k allocations: 14.795 MiB, 8.12% gc time)
Running: hermite_quadrature with k=2
  0.145810 seconds (177.91 k allocations: 10.166 MiB)
Running: jacobi_quadrature with α=β=1
  8.278194 seconds (468.75 k allocations: 1.176 GiB, 15.01% gc time)
Running: laguerre_quadrature (results multiplied by 2, as laguerre only integrates over the semi-infinite domain)
  0.206316 seconds (283.49 k allocations: 15.768 MiB)
Running: legendre_quadrature
  0.152925 seconds (195.46 k allocations: 11.235 MiB)
Running: lobatto_quadrature
  0.188699 seconds (216.33 k allocations: 23.345 MiB)
Running: radau_quadrature
  0.225763 seconds (215.48 k allocations: 21.274 MiB, 8.26% gc time)
Running: rectangle_rule_left
  0.029650 seconds (20.51 k allocations: 1.237 MiB)
Running: rectangle_rule_midpoint
  0.027555 seconds (26.71 k allocations: 1.655 MiB)
Running: rectangle_rule_right
  0.024801 seconds (18.28 k allocations: 1.107 MiB)
Running: rombergs_method
  0.121360 seconds (138.37 k allocations: 7.933 MiB)
Running: simpsons_rule
  0.034177 seconds (33.56 k allocations: 1.934 MiB)
Running: simpsons38_rule
  0.042426 seconds (50.64 k allocations: 2.943 MiB)
Running: trapezoidal_rule
  0.028800 seconds (26.29 k allocations: 1.595 MiB)
Test Summary: | Pass  Total
Gaussian      |   18     18
Integrating 1/x from 1 to e and comparing the result to the analytical solution, 1.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034219 seconds (32.54 k allocations: 1.960 MiB)
Running: chebyshev_quadrature with k=1
  0.296592 seconds (241.04 k allocations: 13.593 MiB)
Running: chebyshev_quadrature with k=2
  0.288472 seconds (296.30 k allocations: 16.665 MiB, 7.92% gc time)
Running: chebyshev_quadrature with k=3
  0.271300 seconds (276.23 k allocations: 14.992 MiB)
Running: chebyshev_quadrature with k=4
  0.273863 seconds (276.27 k allocations: 14.824 MiB)
Running: jacobi_quadrature with α=β=1
  2.379677 seconds (466.80 k allocations: 195.333 MiB, 5.16% gc time)
Running: legendre_quadrature
  0.173589 seconds (193.79 k allocations: 11.145 MiB, 8.48% gc time)
Running: lobatto_quadrature
  0.171015 seconds (205.02 k allocations: 11.865 MiB)
Running: radau_quadrature
  0.166701 seconds (205.02 k allocations: 11.858 MiB)
Running: rectangle_rule_left
  0.306451 seconds (20.37 k allocations: 1.224 MiB)
Running: rectangle_rule_midpoint
  0.025117 seconds (26.35 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  0.103004 seconds (18.68 k allocations: 1.127 MiB)
Running: rombergs_method
  0.142617 seconds (151.46 k allocations: 8.820 MiB)
Running: simpsons_rule
  0.029913 seconds (29.83 k allocations: 1.838 MiB)
Running: simpsons38_rule
  0.050836 seconds (45.51 k allocations: 2.825 MiB)
Running: trapezoidal_rule
  0.028571 seconds (46.24 k allocations: 1.863 MiB)
Test Summary: | Pass  Total
1/x           |   16     16
Integrating log(x)/x from 1 to e and comparing the result to the analytical solution of 0.5.
Running: adaptive_simpsons_rule with ε=1e-7
  0.034757 seconds (33.30 k allocations: 1.908 MiB)
Running: chebyshev_quadrature with k=1
  0.213804 seconds (241.61 k allocations: 13.585 MiB, 10.25% gc time)
Running: chebyshev_quadrature with k=2
  0.229433 seconds (296.90 k allocations: 16.578 MiB)
Running: chebyshev_quadrature with k=3
  0.235802 seconds (276.77 k allocations: 14.912 MiB)
Running: chebyshev_quadrature with k=4
  0.208038 seconds (276.81 k allocations: 14.992 MiB)
Running: jacobi_quadrature with α=β=1
  1.245496 seconds (467.46 k allocations: 149.937 MiB, 10.58% gc time)
Running: legendre_quadrature
  0.154712 seconds (194.36 k allocations: 11.161 MiB)
Running: lobatto_quadrature
  0.189134 seconds (205.60 k allocations: 11.870 MiB)
Running: radau_quadrature
  0.174727 seconds (205.59 k allocations: 11.869 MiB)
Running: rectangle_rule_left
  1.325355 seconds (20.64 k allocations: 1.238 MiB)
Running: rectangle_rule_midpoint
  0.018518 seconds (26.34 k allocations: 1.637 MiB)
Running: rectangle_rule_right
  1.173571 seconds (18.65 k allocations: 1.125 MiB, 1.61% gc time)
Running: rombergs_method
  0.142413 seconds (141.39 k allocations: 8.144 MiB)
Running: simpsons_rule
  0.026519 seconds (30.58 k allocations: 1.866 MiB)
Running: simpsons38_rule
  0.026356 seconds (46.26 k allocations: 2.854 MiB)
Running: trapezoidal_rule
  0.020176 seconds (58.50 k allocations: 2.064 MiB)
Test Summary: | Pass  Total
log(x)/x      |   16     16
Approximating the modified bessel function I_1(1) and comparing it to the result obtained by SpecialFunctions.
Running: adaptive_simpsons_rule with ε=1e-7
  0.169890 seconds (153.19 k allocations: 9.101 MiB)
Running: chebyshev_quadrature with k=1
  0.153208 seconds (91.28 k allocations: 3.297 MiB)
Running: chebyshev_quadrature with k=2
  0.150141 seconds (127.05 k allocations: 3.990 MiB)
Running: chebyshev_quadrature with k=3
  0.161143 seconds (115.62 k allocations: 3.819 MiB)
Running: chebyshev_quadrature with k=4
  0.151246 seconds (95.16 k allocations: 3.413 MiB)
Running: jacobi_quadrature with α=β=1
  2.702762 seconds (510.23 k allocations: 169.333 MiB, 8.84% gc time)
Running: legendre_quadrature
  0.125070 seconds (38.38 k allocations: 2.107 MiB)
Running: lobatto_quadrature
  0.000122 seconds (150 allocations: 4.328 KiB)
Running: radau_quadrature
  0.000068 seconds (148 allocations: 4.375 KiB)
Running: rectangle_rule_left
 50.895448 seconds (590.00 M allocations: 8.792 GiB, 5.17% gc time)
Running: rectangle_rule_midpoint
  0.000030 seconds (40 allocations: 992 bytes)
Running: rectangle_rule_right
 49.850599 seconds (592.75 M allocations: 8.833 GiB, 5.32% gc time)
Running: rombergs_method
  0.175183 seconds (41.92 k allocations: 2.259 MiB)
Running: simpsons_rule
  0.000048 seconds (93 allocations: 1.797 KiB)
Running: simpsons38_rule
  0.038038 seconds (463 allocations: 22.578 KiB)
Running: trapezoidal_rule
  0.026962 seconds (179 allocations: 8.766 KiB)
Test Summary: | Pass  Total
modbessel0    |   16     16
Integrating 1/sqrt(-19.6 sin(x)) from -pi to 0 and comparing the result to the analytical solution of ellipk(1/2)/sqrt(2.45) The integrand has singularities at x = -pi and x=0, so for some of these functions the integration domain has to be itself approximated.
Running: adaptive_simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 38.474142 seconds (629.34 M allocations: 9.388 GiB, 7.57% gc time)
Running: chebyshev_quadrature with k=1
  0.547376 seconds (439.65 k allocations: 24.282 MiB)
Running: chebyshev_quadrature with k=2
 13.397792 seconds (497.06 k allocations: 4.042 GiB, 4.00% gc time)
Running: chebyshev_quadrature with k=3
  6.568528 seconds (290.74 k allocations: 1.643 GiB, 4.75% gc time)
Running: chebyshev_quadrature with k=4
  7.996983 seconds (290.77 k allocations: 2.262 GiB, 2.52% gc time)
Running: jacobi_quadrature with α=β=1. The N value required to get an accurate result is too high to be practical, so only a rough approximation can be arrived at.
 55.496181 seconds (505.67 k allocations: 13.255 GiB, 3.55% gc time)
Running: legendre_quadrature.
  5.411255 seconds (233.12 k allocations: 1.976 GiB, 2.48% gc time)
The following integration functions have to use an approximated domain due to the endpoint singularities.
Running: lobatto_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 53.905384 seconds (8.24 M allocations: 13.384 GiB, 4.20% gc time)
Running: radau_quadrature on [-pi+1e-6, -1e-6]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 46.659836 seconds (7.24 M allocations: 13.369 GiB, 2.62% gc time)
Running: rectangle_rule_left on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.086662 seconds (23.40 k allocations: 1.405 MiB)
Running: rectangle_rule_midpoint on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.204200 seconds (32.03 k allocations: 1.962 MiB)
Running: rectangle_rule_right on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  3.042910 seconds (23.62 k allocations: 1.416 MiB)
Running: rombergs_method on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
  1.154368 seconds (457.24 k allocations: 153.726 MiB)
Running: simpsons_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 42.125369 seconds (600.04 M allocations: 8.943 GiB, 8.32% gc time)
Running: simpsons38_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 41.924899 seconds (600.05 M allocations: 8.944 GiB, 7.85% gc time)
Running: trapezoidal_rule on [-pi+1e-8, -1e-8]. Only a rough approximation can be realistically achieved with this function, due to the singularities.
 40.157274 seconds (600.04 M allocations: 8.943 GiB, 8.60% gc time)
Test Summary: | Pass  Total
Simppen       |   16     16
Integrating sin(x^2)e^(-x)/x from 0 to infinity, with the approximated domain of integration of 0 to 100. The removable singularity at x=0 in the integrand has been removed.
Running: adaptive_simpsons_rule with ε=1e-8
  0.061051 seconds (182.59 k allocations: 4.521 MiB)
Running: chebyshev_quadrature with k=1
  0.202164 seconds (258.20 k allocations: 14.029 MiB)
Running: chebyshev_quadrature with k=2
  0.225439 seconds (284.36 k allocations: 15.193 MiB)
Running: chebyshev_quadrature with k=3
  0.200008 seconds (260.81 k allocations: 13.465 MiB)
Running: chebyshev_quadrature with k=4
  0.234619 seconds (260.84 k allocations: 13.461 MiB)
Running: jacobi_quadrature with α=β=1
  0.389762 seconds (405.67 k allocations: 35.876 MiB)
Running: laguerre_quadrature with k=2
  0.224574 seconds (188.19 k allocations: 10.881 MiB)
Running: legendre_quadrature
  0.142974 seconds (151.90 k allocations: 8.415 MiB)
Running: lobatto_quadrature
  0.041096 seconds (10.88 k allocations: 15.109 MiB)
Running: radau_quadrature
  0.037601 seconds (9.66 k allocations: 13.183 MiB)
Running: rectangle_rule_left
  0.060425 seconds (19.85 k allocations: 1.172 MiB)
Running: rectangle_rule_midpoint
  0.051185 seconds (26.82 k allocations: 1.642 MiB)
Running: rectangle_rule_right
  0.053290 seconds (18.40 k allocations: 1.096 MiB)
Running: rombergs_method
  0.243686 seconds (171.08 k allocations: 9.736 MiB)
Running: simpsons_rule
  0.002007 seconds (24.72 k allocations: 386.656 KiB)
Running: simpsons38_rule
  0.055874 seconds (81.54 k allocations: 3.524 MiB)
Running: trapezoidal_rule
  0.215138 seconds (2.39 M allocations: 37.759 MiB)
Test Summary: | Pass  Total
sinexpox      |   17     17
Integrating sin(x)/x from 0 to 100 and comparing it to the exact result.
Running: adaptive_simpsons_rule with ε=1e-8
  0.003388 seconds (30.71 k allocations: 480.250 KiB)
Running: chebyshev_quadrature with k=1
  0.160973 seconds (2.58 k allocations: 1.696 MiB)
Running: chebyshev_quadrature with k=2
  0.108092 seconds (2.84 k allocations: 2.359 MiB)
Running: chebyshev_quadrature with k=3
  0.117508 seconds (3.26 k allocations: 2.060 MiB)
Running: chebyshev_quadrature with k=4
  0.118815 seconds (3.26 k allocations: 1.501 MiB)
Running: jacobi_quadrature with α=β=1
  6.551754 seconds (402.46 k allocations: 906.578 MiB, 4.89% gc time)
Running: legendre_quadrature
  0.063433 seconds (1.33 k allocations: 72.281 KiB)
Running: lobatto_quadrature
  0.000185 seconds (253 allocations: 9.188 KiB)
Running: radau_quadrature
  0.000123 seconds (221 allocations: 8.812 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function
  3.755245 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.000531 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function
  3.590864 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.060959 seconds (1.16 k allocations: 66.734 KiB)
Running: simpsons_rule
  0.000048 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000071 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.000805 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
sinxx         |   16     16
Integrating (x^3+1)/(x^4 (x+1)(x^2+1)) from 1 to e and comparing the result to the analytical solution of log(sqrt(2)*exp(1)/(sqrt(exp(2)+1)))+1/2*(exp(-2)-1)+1/3*(1-exp(-3))
Running: adaptive_simpsons_rule with ε=1e-8
  0.000753 seconds (6.34 k allocations: 99.453 KiB)
Running: chebyshev_quadrature with k=1
  0.091710 seconds (2.48 k allocations: 576.609 KiB)
Running: chebyshev_quadrature with k=2
  0.094839 seconds (2.73 k allocations: 777.391 KiB)
Running: chebyshev_quadrature with k=3
  0.102870 seconds (3.15 k allocations: 685.641 KiB)
Running: chebyshev_quadrature with k=4
  0.101613 seconds (3.16 k allocations: 516.203 KiB)
Running: jacobi_quadrature with α=β=1
  2.664873 seconds (388.73 k allocations: 253.822 MiB)
Running: legendre_quadrature
  0.067555 seconds (1.28 k allocations: 65.438 KiB)
Running: lobatto_quadrature
  0.000108 seconds (91 allocations: 3.656 KiB)
Running: radau_quadrature
  0.000182 seconds (81 allocations: 3.453 KiB)
Running: rectangle_rule_left; only a rough approximation can be practically achieved using this function.
 10.637928 seconds (11 allocations: 528 bytes)
Running: rectangle_rule_midpoint
  0.001086 seconds (9 allocations: 496 bytes)
Running: rectangle_rule_right; only a rough approximation can be practically achieved using this function.
 11.322446 seconds (11 allocations: 528 bytes)
Running: rombergs_method
  0.076072 seconds (1.18 k allocations: 62.562 KiB)
Running: simpsons_rule
  0.000054 seconds (9 allocations: 496 bytes)
Running: simpsons38_rule
  0.000046 seconds (9 allocations: 496 bytes)
Running: trapezoidal_rule
  0.001911 seconds (9 allocations: 496 bytes)
Test Summary: | Pass  Total
partfrac      |   16     16
    Testing FunctionIntegrator tests passed 
