Julia Version 1.6.0-DEV.609
Commit 00f2133d83 (2020-08-10 13:38 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed UnPack ────────────── v1.0.1
  Installed VectorizedRNG ─────── v0.1.10
  Installed VectorizationBase ─── v0.12.30
  Installed QuasiNewtonMethods ── v0.1.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
  Installed LoopVectorization ─── v0.8.22
  Installed OffsetArrays ──────── v1.1.2
  Installed StackPointers ─────── v0.1.2
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.23
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_hyxr0l/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_hyxr0l/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [-8.004708007547379e-14, -8.615330671091215e-14]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.194178420708795e-12, -1.0471734590566939e-11]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [-1.5234258299301473e-11, -2.9977686999416164e-11, 1.1512124586943173e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.8887114094923163e-10, 3.8649128342171934e-10, -3.1401048428136846e-10]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0583567355837431e-10, -6.18246565053937e-11, -2.2520940667902778e-10, -1.1715339809370562e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.479084184249587e-13, -4.562350497394618e-12, -1.5587531265737198e-12, -8.855693955922561e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [9.515899179746157e-11, 3.6132874470240495e-11, 1.9023493891268117e-10, 6.883493774978433e-11, 1.588063014423824e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.6169513484860545e-11, -1.0917378112651477e-11, -1.1615763906291932e-10, -2.098943241435336e-11, -1.8527845924154462e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-1.554780748591611e-10, -1.213086298079702e-10, -1.6543644232314136e-10, -3.345074217619981e-10, -2.218867312109296e-10, -3.3440539226603505e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [3.7969627442180354e-13, -2.312150471084351e-12, -1.771705004927071e-11, 1.2949641359227826e-12, -6.785905171113882e-12, -3.487943267543869e-11]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [2.5632829192545614e-12, -1.8887114094923163e-12, 1.3104184404255648e-11, -1.603639443459315e-11, -5.652145418366672e-12, 3.647082635893639e-12, 6.533684704379539e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0987434840312744e-12, 5.509592782004802e-12, 2.1227464230832993e-12, -6.440625810455458e-12, 1.0548673046173462e-11, 4.290345856361455e-12, -2.8896884884943574e-12]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5471403592168826e-11, 3.353761712787673e-12, 2.4991120284312274e-12, 1.4281908988778014e-12, -7.05235869702392e-11, 4.809042053466328e-12, 7.212674901779792e-12, 4.1318060084449826e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.437983231435737e-11, 5.168976358049804e-12, -2.423095057935143e-11, -1.3485990102424239e-11, 6.969447241544913e-11, 1.230904267401911e-11, -4.5537906778747583e-11, -3.047473384754085e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [3.5991210012298325e-12, 3.365507872388207e-11, -1.228162016531087e-11, 2.3397506154765324e-11, 7.679412661332208e-12, 7.192402229350137e-11, -2.3661850256928574e-11, 4.499045580530492e-11, -4.672928710647284e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.872591136655501e-11, 1.8667289936047382e-11, -1.6131651570105987e-11, -1.6290968574139697e-11, -8.272960094757309e-11, 3.7864156254840964e-11, -1.8010593016981602e-11, -3.9213743363575304e-11, -2.1926904736346842e-13]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-4.4037884450176534e-11, -5.532896363291684e-11, 9.707212811349564e-11, 1.5783596651886e-11, 1.3834378087551613e-10, -7.626366205215618e-11, -1.1178724612648239e-10, 2.0528090338700622e-10, 2.6796342922352778e-11, 2.6892577054127287e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.2031931007072671e-11, -2.558231404492517e-11, 4.192468594510501e-11, -1.4458656494298339e-11, 6.516120976129969e-12, -2.405353694001633e-11, -5.2701176755931556e-11, 8.176570531759353e-11, -3.097233580717784e-11, 1.5094148153593778e-11]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [-8.975042931069765e-13, -2.6064372882217413e-11, -3.825983974081737e-11, 3.320432817588426e-11, -4.5922821101385125e-11, -2.204902926905561e-12, -4.4229953033436686e-11, -7.685296843362721e-11, 6.96960267276836e-11, -9.043710225142831e-11, -3.623323863166661e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.3516744107610066e-12, 2.922329045418337e-12, -1.3862799796982017e-11, 3.7297942512282134e-11, 3.2023272922288015e-12, 5.0175419374909325e-12, 4.239275597228698e-12, -2.6432855904090502e-11, 7.539702195913378e-11, 5.504485756091526e-12, -3.320677066653843e-13]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [3.2214875211877825e-10, -3.2442459829695736e-10, -2.0226065267081594e-10, 3.0144109430807475e-11, 1.4590617603005285e-10, -2.5968405203968814e-10, 6.592162371532595e-10, -6.384754946964222e-10, -4.1642267412100864e-10, 6.855627177060342e-11, 2.8781110827935663e-10, -5.222794419168508e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [1.8020474001900766e-11, 4.675504428064414e-11, 5.968558980384842e-11, 7.30402405224595e-11, -7.106804034151537e-11, 8.743672452737883e-12, 3.6494363087058446e-11, 1.0752021495363806e-10, 1.2449441477713208e-10, 1.5102963324409302e-10, -1.3790457664697442e-10, 1.708411190293191e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [8.509415394541975e-12, -2.954858580039854e-11, -1.1445178138558276e-11, 4.944533671391582e-11, 8.857359290459499e-12, 5.201905572960186e-11, 1.9941825968317062e-11, -6.069245106488097e-11, -2.519395803091129e-11, 9.614908869082228e-11, 1.2678302852009438e-11, 1.0674772177310388e-10, 2.937650123158164e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.864086993767614e-12, -1.296559526409169e-10, -5.731537466857617e-11, 1.1732836924238654e-12, -9.486456065133098e-11, -7.920664124583254e-11, -1.0751510792772478e-11, -2.7237279098812905e-10, -1.2173173580265484e-10, 1.677924466036984e-11, -1.809506988692533e-10, -1.547734163054315e-10, -1.4980239271267237e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [-8.28533908148188e-11, -2.963596035243654e-11, 3.538591641927269e-11, -1.0157319429993095e-10, 3.9746428370790454e-11, 5.011879800065344e-11, -1.954236772405693e-11, -1.6061407759337953e-10, -5.984535089709198e-11, 7.227041187718442e-11, -2.0367452169267608e-10, 7.763478748756825e-11, 1.0013767592909062e-10, -4.120925822803656e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.147526849214046e-11, 3.278755045243997e-11, -7.214551178691408e-11, -4.408051701432214e-11, -7.423039960485767e-11, -5.1886828167369003e-11, 6.496914117803954e-11, -1.0340983624956834e-10, 6.03144201249961e-11, -1.4230283618132944e-10, -9.201983619533394e-11, -1.4977452611475428e-10, -9.651435206592396e-11, 1.3163958811901466e-10]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.2565060103497672e-11, -1.2247536318454877e-11, -5.500599975505338e-12, 6.851852418776616e-12, 2.6592728019636525e-11, 1.2120304759832834e-11, 1.4138468173996444e-11, 2.6041613310212597e-11, -2.406552734868228e-11, -1.1783796161068949e-11, 1.461541998537541e-11, 5.4264370774603776e-11, 2.7247537559560442e-11, 2.882649674518234e-11, 2.7473578967374124e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-9.931888644842957e-11, 1.1905143537660479e-11, 7.4451556031363e-12, 1.0722045473698927e-10, 6.354206050218636e-11, 5.5096593953862794e-11, -1.6613377340490842e-12, -1.9052182054224431e-10, 3.041056295671751e-11, 1.5220713578401046e-11, 2.1904877911538279e-10, 1.254403247941127e-10, 1.1423528789578086e-10, 1.0229594948896192e-12, -6.440403765850533e-13]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [2.1393598004237901e-10, 1.9107759818837167e-10, -4.8357207127480706e-11, -7.874834118126728e-11, -2.8791413697604185e-12, 1.1686207557204398e-11, -5.3374638042669176e-11, 2.5610402687448186e-11, 4.3808601191130947e-10, 3.7170666544739106e-10, -1.0813006046106466e-10, -1.5185197543843287e-10, 4.496181205126959e-12, 2.4711788171316584e-11, -1.0207423795094428e-10, 5.253331103460823e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.6033996352859958e-10, -1.1375234088006891e-10, -6.053446632847681e-11, -5.140665670921862e-12, -1.4224743605240064e-10, -4.329980818340573e-11, 1.2722778386375921e-10, 4.57638371642588e-11, -3.4148028849045886e-10, -2.3381208080763827e-10, -1.2488865497317647e-10, -1.6580070649752088e-12, -2.76786149555619e-10, -8.833267450825133e-11, 2.553770528379573e-10, 9.169198733616213e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [-5.444933393050633e-11, -4.786482321605945e-11, -2.366962181810095e-11, -8.040890175919913e-11, -2.705591306551014e-11, 6.111777750561487e-12, -6.058153978472092e-11, 4.821054666592772e-11, -1.0946710204962073e-10, -9.876843787282041e-11, -4.1660563887546687e-11, -1.6031509453284798e-10, -5.1720960847490005e-11, 1.251687642422894e-11, -1.2690981598950657e-10, 9.559419922311463e-11, -5.988876061735482e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [2.8752555891742304e-12, 7.218226016902918e-11, 2.8442359578662035e-11, 1.1592504733926035e-11, 2.7210678155142887e-11, 1.1649436970628813e-10, 9.591438754341652e-12, 9.687806112879116e-13, 9.935385847370526e-12, 1.4951773152915848e-10, 7.259481904497989e-11, 1.0376810521961488e-11, 5.901990007828317e-11, 2.2787394193812816e-10, 2.1672885708312606e-11, 3.26227933555856e-12, -9.291123426180548e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [2.8712365818250873e-11, -3.7384983997412746e-11, 9.056533301077252e-12, -7.39353023249123e-12, 4.5070169818473005e-11, -2.1340151867832446e-11, -4.142464149481384e-12, 5.3083315521007535e-11, 1.7115864281436188e-11, 5.886180431957655e-11, -7.175260385849924e-11, 2.280686750566474e-11, -1.2509437929963951e-11, 8.61297699827901e-11, -3.82082143701723e-11, -1.0529244143242522e-11, 1.0535128325273035e-10, 3.566968942436688e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.0860868588101766e-11, -8.880729485127858e-11, -4.207811876710821e-11, -1.116329251260595e-12, 9.521272659185342e-13, 3.448219487722781e-11, 4.305444889496357e-12, 2.245825747593244e-11, 3.998601449950456e-11, 3.615352461849852e-11, -1.7754020475990728e-10, -8.42270697631875e-11, -1.6672219160795976e-12, -8.274492202531292e-13, 6.647793426850512e-11, 9.055645122657552e-12, 4.3439474239903575e-11, 8.063016920800692e-11]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [3.452593766439804e-11, -8.577361043649034e-12, -5.7045590473592256e-11, -1.6901702259985996e-11, -4.3228531865224795e-11, 2.3850921238022238e-11, 1.7617907133171684e-11, -5.209166431541234e-13, -3.458311415016624e-11, 7.05475677875711e-11, -1.980271502333153e-11, -1.1095380170189628e-10, -3.792532954349781e-11, -8.653444627526596e-11, 5.6210147647561826e-11, 3.526756664484765e-11, 4.576339307504895e-13, -6.930822582518203e-11, 2.3292034967425934e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [3.411226856542271e-11, -1.148610095924596e-10, 7.781575384058215e-11, -1.52443946355163e-10, 1.4132250925058543e-10, -8.342637691782784e-11, -4.870515102339823e-11, -1.1422351953171983e-10, 7.223532882960626e-11, 7.083222897108499e-11, -2.361971729314405e-10, 1.428346330101249e-10, -3.264379877521151e-10, 2.8960500664254596e-10, -1.6947931946731387e-10, -1.0314227250063368e-10, -2.329334503059499e-10, 1.4277956594810348e-10, -1.1575740366254195e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [4.021005750587392e-11, 9.150125102053153e-11, -3.870614939671668e-11, 1.2507106461612238e-11, -2.3944402016695676e-11, 6.070921543255281e-12, 1.5085932503211552e-11, -6.656641904356775e-11, 3.720379559979392e-11, -8.74134098438617e-12, 7.912359656359058e-11, 1.832443086158264e-10, -7.624301190389815e-11, 3.278799454164982e-11, -4.820688292994646e-11, 1.3290035738577899e-11, 3.1421309998336255e-11, -1.3992718095323653e-10, 6.948019937169647e-11, -8.250844452106776e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [3.5507596862771607e-11, 4.2232883856740955e-12, 3.149658311940584e-11, 2.8534286045100998e-11, 3.410827176253406e-12, 4.3363090895809364e-12, -1.8993695505287178e-11, -1.7946866215368118e-11, 1.5621726134895653e-11, -4.1265879602292443e-11, 7.270806179349165e-11, 9.71178693021102e-12, 6.31459329270001e-11, 5.847033968109372e-11, 7.375655641794765e-12, 7.1527228584500335e-12, -3.73996389413378e-11, -3.576450247066987e-11, 3.018496563811368e-11, -8.236511472858865e-11]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [-7.902012377769552e-12, -1.0903944414053512e-11, 1.592943554840076e-10, -1.4481771337671034e-10, 1.1847189895775045e-11, -3.7290948107226995e-11, -7.778377941747294e-11, 2.339239912885205e-12, -7.258749157301736e-11, 4.230105155045294e-11, -1.5146439658053623e-11, -2.138977883703319e-11, 3.194000619544113e-10, -2.899022133462381e-10, 2.1193047317069613e-11, -7.917044797522976e-11, -1.5793200081049008e-10, 2.7915447731174936e-12, -1.4457512964582975e-10, 8.630762771133504e-11, 6.072919944699606e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.05273600737155e-12, -1.4730439090726577e-12, 1.712829877931199e-11, -2.1520674131636497e-11, 3.094879907905579e-11, -1.1786238651723124e-11, 6.225153725836208e-11, -2.1446067144381686e-11, 1.5465628777633356e-11, -7.435330129368367e-11, -1.0626832747107073e-11, -3.66784380645413e-12, 3.5611291693271596e-11, -4.4371173402169006e-11, 6.279443631740378e-11, -2.4522939234827845e-11, 1.2496492729496822e-10, -4.31079616447505e-11, 2.947619925919298e-11, -1.4860823682738555e-10, -1.821875983409882e-13]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [1.5276557796539691e-10, 2.955635736157092e-11, 2.6950663922775675e-11, -9.670719780530135e-11, -1.4614986998395807e-10, 3.220312905227729e-12, 1.2765388746061035e-10, -1.9936274853193936e-11, -9.597878047884478e-12, 3.246114488320018e-11, 3.4938718584953676e-11, 3.2569968944073935e-10, 6.137645947035253e-11, 6.213407566235674e-11, -1.9656920535737754e-10, -2.9582103433511975e-10, 4.3089976031751576e-12, 2.4552937460953217e-10, -4.3281045414289565e-11, -1.6851409156970476e-11, 4.771028017103163e-11, 6.012257358634088e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-8.492373471113979e-11, -8.97144580846998e-11, -7.843170557464418e-12, 1.119204728894374e-10, -8.056622036178851e-11, -5.3251514309238246e-11, 1.8105072996377203e-11, 2.658939735056265e-11, -1.7400569873871063e-10, -4.043654300289745e-11, 9.333422923418766e-11, -1.6349377407465226e-10, -1.7970458454641403e-10, -2.309763491581407e-11, 2.2768786855920098e-10, -1.6815160375216465e-10, -1.0349521240016202e-10, 4.2173375902621046e-11, 5.1735060679902745e-11, -3.612412591280645e-10, -8.733114231773698e-11, 1.8442070093271923e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [1.764102197654438e-10, 1.3548384636408173e-10, 6.086398052218556e-11, 7.684675118468931e-11, -3.3719693703915254e-10, 7.115419364822628e-11, -5.6230464728912466e-11, -1.5455525748109267e-11, 1.0442091635809447e-11, -2.0823343049869436e-11, 7.002820545665145e-11, 3.6208880338506333e-10, 2.682278843479935e-10, 1.2332379561996731e-10, 1.584292697032197e-10, -6.583567024875947e-10, 1.433351215496259e-10, -1.0799205973910375e-10, -3.7032377164791797e-11, 3.0741631462660735e-11, -4.020117572167692e-11, 1.4537926418256575e-10, 3.1095126473701384e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [6.14950312893825e-11, 1.2596590437397026e-11, 3.54729579044033e-11, 1.8876677998491687e-11, 6.031664057104535e-11, 3.306954710069476e-11, -4.170974676753758e-11, -3.5632830019949324e-11, 4.765610128742992e-11, 5.860312235483889e-11, 4.494449257208544e-11, 1.1644951669609327e-10, 1.492073131714733e-11, 6.448397371627834e-11, 3.938382953094788e-11, 1.1236789276836134e-10, 6.718758882584552e-11, -9.205258777456038e-11, -6.518374728869958e-11, 9.398792855108695e-11, 1.303981367328788e-10, 8.474820845094655e-11, -2.3439028495886305e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [6.48969766814389e-12, 1.0447576137551096e-10, 2.2080115513745113e-11, -4.432010314303625e-13, 5.3735238481067427e-11, 4.4501735629864925e-11, 5.650124812461854e-11, 2.886801908630332e-12, 5.45981038158061e-11, -2.549138677920837e-11, 7.892575482060238e-11, -5.929812196825424e-12, 1.34701139131721e-11, 2.0924528776333773e-10, 4.735722924920083e-11, 3.15725223742902e-12, 1.0753931078966161e-10, 8.681344532135427e-11, 1.0481748802249058e-10, 4.474420833844306e-12, 1.017324002816622e-10, -4.558509125729415e-11, 1.6469225982973512e-10, -1.1673328970118746e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.093836463743173e-11, -2.5347746124282367e-10, -1.160966878188674e-10, -2.5093482847182713e-11, -2.0368684516824942e-10, -8.760392411488738e-11, 1.978364139176847e-10, -2.4601753967345985e-10, -7.134304258471502e-11, -1.0183598408985972e-10, 1.4786416535628177e-10, -1.3545542465465132e-10, -9.681677681783185e-11, -5.075292408562859e-10, -2.487763328673509e-10, -5.4119042580680343e-11, -3.846278850971885e-10, -1.6873902275449382e-10, 3.895450628732533e-10, -4.892847238480158e-10, -1.566207163961053e-10, -2.0138546386050393e-10, 2.8350810588051445e-10, -2.654040320848594e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
