Julia Version 1.6.0-DEV.607
Commit 91d384ccce (2020-08-08 23:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed CpuId ─────────────── v0.2.2
  Installed SIMDPirates ───────── v0.8.23
  Installed UnPack ────────────── v1.0.1
  Installed SLEEFPirates ──────── v0.5.5
  Installed VectorizedRNG ─────── v0.1.10
  Installed StackPointers ─────── v0.1.2
  Installed QuasiNewtonMethods ── v0.1.1
  Installed VectorizationBase ─── v0.12.30
  Installed OffsetArrays ──────── v1.1.2
  Installed LoopVectorization ─── v0.8.22
  Installed PaddedMatrices ────── v0.1.10
  Installed DocStringExtensions ─ v0.8.2
Updating `~/.julia/environments/v1.6/Project.toml`
  [64452400] + QuasiNewtonMethods v0.1.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [adafc99b] + CpuId v0.2.2
  [ffbed154] + DocStringExtensions v0.8.2
  [bdcacae8] + LoopVectorization v0.8.22
  [6fe1bfb0] + OffsetArrays v1.1.2
  [aaaacae8] + PaddedMatrices v0.1.10
  [64452400] + QuasiNewtonMethods v0.1.1
  [21efa798] + SIMDPirates v0.8.23
  [476501e8] + SLEEFPirates v0.5.5
  [062a3e2c] + StackPointers v0.1.2
  [3a884ed6] + UnPack v1.0.1
  [3d5dd08c] + VectorizationBase v0.12.30
  [33b4df10] + VectorizedRNG v0.1.10
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
   Building SLEEFPirates → `~/.julia/packages/SLEEFPirates/jGsib/deps/build.log`
    Testing QuasiNewtonMethods
Status `/tmp/jl_lrWKPE/Project.toml`
  [bdcacae8] LoopVectorization v0.8.22
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [8dfed614] Test
Status `/tmp/jl_lrWKPE/Manifest.toml`
  [adafc99b] CpuId v0.2.2
  [ffbed154] DocStringExtensions v0.8.2
  [bdcacae8] LoopVectorization v0.8.22
  [6fe1bfb0] OffsetArrays v1.1.2
  [aaaacae8] PaddedMatrices v0.1.10
  [64452400] QuasiNewtonMethods v0.1.1
  [21efa798] SIMDPirates v0.8.23
  [476501e8] SLEEFPirates v0.5.5
  [062a3e2c] StackPointers v0.1.2
  [3a884ed6] UnPack v1.0.1
  [3d5dd08c] VectorizationBase v0.12.30
  [33b4df10] VectorizedRNG v0.1.10
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
n = 2
QuasiNewtonMethods.optimum(state) .- 1 = [5.369482636297107e-12, 1.0333955913210957e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.4059864383852982e-12, 5.35238520171788e-12]
n = 3
QuasiNewtonMethods.optimum(state) .- 1 = [4.11359835084113e-12, 7.893685705084863e-12, 2.120525977034049e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.6553425297161084e-12, 3.085531830038235e-12, -3.0608848788915566e-12]
n = 4
QuasiNewtonMethods.optimum(state) .- 1 = [5.577829309544313e-10, -1.2790946080087906e-10, 1.1259466692337128e-9, -2.7974189631407853e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [2.170263968537256e-12, 1.163735774412089e-12, 4.314770762903208e-12, 2.3496760093166813e-12]
n = 5
QuasiNewtonMethods.optimum(state) .- 1 = [9.165468384253472e-11, -4.274625098332763e-11, 1.788913461808761e-10, -8.07333089269946e-11, 3.696287720345026e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.0610070034242653e-11, -3.125777414680897e-11, -6.301692501153866e-11, -6.569456090232961e-11, -2.3666513193632e-11]
n = 6
QuasiNewtonMethods.optimum(state) .- 1 = [-2.0657309196536744e-10, -1.5287737742397667e-10, -1.144285777243681e-10, -4.225297889348667e-10, -2.9726965333765065e-10, -2.4549451360655894e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [5.396350033493036e-12, 1.056710274838224e-11, -3.1555869028920824e-12, 9.667378009226013e-12, 2.142241939395717e-11, -6.306399846778277e-12]
n = 7
QuasiNewtonMethods.optimum(state) .- 1 = [1.8463675033331128e-11, -1.1406986466511171e-11, -5.72530911568947e-12, 3.746847276886456e-11, -2.2153501255672836e-11, -8.48932035779626e-12, -1.4643841694805815e-13]
QuasiNewtonMethods.optimum(state) .- 1 = [1.2086776024489154e-11, 1.0863754340562082e-11, 2.8981261834815086e-12, 2.426103762331877e-11, 2.5054180952110983e-11, 9.119816013480886e-12, 6.319966772139196e-11]
n = 8
QuasiNewtonMethods.optimum(state) .- 1 = [4.860289948283025e-11, 4.140288112353119e-11, -6.693556819925561e-11, -4.1730174871190684e-11, 1.0043366138745569e-10, 8.153988595438477e-11, -1.3260270659287698e-10, -8.064693357567876e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.74932307423137e-11, -4.568023737050453e-11, 4.056310842770472e-12, -1.2041478925084448e-11, -7.535894130938914e-11, -8.808276330540821e-11, 9.334533146443391e-12, -2.1518342663284784e-11]
n = 9
QuasiNewtonMethods.optimum(state) .- 1 = [1.2600809284890602e-11, 4.1128211947238924e-11, 6.782574502040006e-12, 4.446887302833602e-11, 3.3163249923973126e-11, 8.305511833839319e-11, 1.3191003844781335e-11, 8.68491945027472e-11, 5.303535388634373e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.4909965463423305e-11, -3.04911651483053e-11, 2.7025270910030486e-11, 4.615086091064313e-11, -1.0706480146893682e-10, -6.060218993297894e-11, 5.1776138931813875e-11, 9.418821278472933e-11, 5.552669435360258e-12]
n = 10
QuasiNewtonMethods.optimum(state) .- 1 = [-6.990330536638112e-11, 1.1683787271010715e-10, 4.139635301214639e-10, 4.193325686685512e-10, 2.3102586510503897e-10, -1.4703838147056558e-10, 2.4331048287251633e-10, 8.194227518742991e-10, 8.452154531823908e-10, 4.515086082790276e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [6.114131423373692e-11, -4.680755782970891e-11, 3.072808674176031e-11, 2.983790992061586e-11, 2.205711169267488e-10, 1.0514566994856978e-10, -7.006617508409363e-11, 6.26216856147721e-11, 3.696598582791921e-11, 4.423175159473658e-10]
n = 11
QuasiNewtonMethods.optimum(state) .- 1 = [2.8547830766001425e-11, -3.986810881428937e-13, -1.067035348967238e-11, 1.3155698752598255e-11, -1.0013767592909062e-11, 5.8181903739296104e-11, 5.961897642237091e-13, -2.0757950913719014e-11, 2.7715163497532558e-11, -2.0837442882282176e-11, 1.1732836924238654e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-1.1662038001958308e-10, -3.466249509642694e-11, -4.6236570128144194e-11, -8.313472132925881e-11, 8.90056917057791e-11, -2.299301860020364e-10, -7.046929706433502e-11, -9.356349028877275e-11, -1.5469381331456589e-10, 1.8791301847898012e-10, 1.0300205133262352e-11]
n = 12
QuasiNewtonMethods.optimum(state) .- 1 = [-8.984157862101938e-11, 5.193534491354512e-11, -7.753575559377168e-12, 1.524291803889355e-11, 2.475353255704249e-12, -4.2543524259031074e-11, -1.8107848553938766e-10, 1.0749201528881258e-10, -1.588285059028749e-11, 3.164934980759426e-11, 5.900169242067932e-12, -7.830858184121325e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-2.6689761511988763e-12, -2.880362615087506e-11, -2.948685740022938e-11, 8.095746295566641e-13, -9.502953979279027e-12, 1.1484369011327544e-11, -6.8329786273579884e-12, -5.3611670658426647e-11, -5.900813171422215e-11, 5.795364188543317e-13, -1.9629076142280155e-11, 2.6255886353965252e-11]
n = 13
QuasiNewtonMethods.optimum(state) .- 1 = [-2.2872992389011415e-10, 4.4288572809136895e-11, -1.5067502801002775e-11, -1.7194690116184574e-11, -1.1678669142867193e-10, 7.017919578800047e-11, -4.712589207755968e-10, 1.010245220811612e-10, -2.7904456523231147e-11, -3.774569545811346e-11, -2.2958390744065582e-10, 1.361124546406245e-10, 4.335865000371086e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [1.443880570661804e-10, -2.7611690711637493e-11, -4.205125136991228e-11, 3.730971087634316e-11, 3.535016723787976e-11, 8.198441925344468e-11, 2.845155222530593e-10, -5.610611975015445e-11, -8.067324586136237e-11, 7.483325070722913e-11, 7.39548422501457e-11, 1.6852275130929684e-10, 6.412870234839829e-12]
n = 14
QuasiNewtonMethods.optimum(state) .- 1 = [1.3171463919547932e-11, 3.485944866099544e-11, 1.2045475727973098e-11, 7.451816941284051e-13, -3.05954150903176e-11, -4.493228011881456e-11, -5.984102102729594e-12, 2.7095881094396645e-11, 7.315592576162544e-11, 2.3330004594868115e-11, 4.214406601477094e-12, -6.277811603894179e-11, -8.725786759811172e-11, -1.2183920539143855e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [7.575673421911233e-11, -7.176437222256027e-11, -8.552725194732602e-11, 9.262346445382263e-11, -1.5510703832433137e-11, 5.281619586128272e-11, -7.778999666641084e-12, 1.5238899031544406e-10, -1.4866097242105525e-10, -1.7100598714847592e-10, 1.8469159535072777e-10, -3.110600665934271e-11, 1.112037129047394e-10, -1.5343282200319663e-11]
n = 15
QuasiNewtonMethods.optimum(state) .- 1 = [1.0078160528337321e-10, -1.0897949209720537e-12, 1.5970780253837802e-11, 9.096012831832923e-11, -1.3486656236239014e-11, 9.93347626376817e-11, 3.824274230623814e-11, 2.0468937655948594e-10, -4.62685445512534e-12, 1.0432099628587821e-11, 1.89690485541405e-10, -2.922628805634986e-11, 1.9552426344660034e-10, 7.78668240997149e-11, -2.0747847884194925e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [5.863378671477903e-10, -2.240568841571644e-10, 1.8906654020156566e-11, 1.0759793056536182e-10, 7.19855286490656e-11, -4.336764281021033e-11, -7.48561213015364e-11, 1.1776253305839646e-9, -4.648723628264406e-10, 4.171885059633951e-11, 2.2556512213611768e-10, 1.657298742685498e-10, -8.79767370065565e-11, -1.3645418128760411e-10, 5.802691660505843e-12]
n = 16
QuasiNewtonMethods.optimum(state) .- 1 = [2.0154766744440167e-11, 1.3037348978173213e-11, 2.8044233602031454e-12, 6.437517185986508e-12, 1.3078871319294194e-11, 1.4837686634905367e-11, 8.224310121818235e-12, -3.6004865755501214e-11, 3.7762237781180374e-11, 2.4002577703186034e-11, 1.9759749392278536e-12, 1.3667289522345527e-11, 2.7859714535338753e-11, 3.273181725660379e-11, 1.5186296664637666e-11, -7.55666640372965e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [9.853917681823532e-11, 2.3833157669628235e-11, 1.3681500377060729e-11, 8.626899195007809e-11, -1.2469769661294094e-10, 5.772449185315054e-11, -3.397415682115934e-11, -2.490052608550286e-11, 1.9783441551624037e-10, 4.9562798309921163e-11, 3.024402950302374e-11, 1.7442070010531552e-10, -2.4442292634319074e-10, 1.1674372579761894e-10, -5.97208948960315e-11, -4.834910249940094e-11]
n = 17
QuasiNewtonMethods.optimum(state) .- 1 = [7.895462061924263e-11, -3.770650458534419e-11, 7.864975337668056e-11, 4.7718939910623703e-11, 1.4995560349007064e-11, 3.804356829562039e-11, 3.823963368176919e-11, 9.07629527091558e-12, 1.500961577249882e-10, -7.792289036245847e-11, 1.5376766526742358e-10, 9.196576833403469e-11, 3.036060292060938e-11, 6.737499447240225e-11, 7.863731887880476e-11, 1.130673332738752e-11, -1.6060042185017664e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [2.1691759499731234e-11, -3.497990785916727e-11, -1.3712919688657621e-11, 5.566658245470535e-13, 2.0981216763971133e-11, -1.3071987936541518e-11, -2.3118063019467172e-11, 4.697797706398887e-12, 4.453193369613473e-11, -7.379086230940857e-11, -2.9372615450995454e-11, -2.0168311465340594e-12, 4.175371159931274e-11, -2.655109465621308e-11, -4.381883744741799e-11, 9.851230942103939e-12, -4.491407246121071e-12]
n = 18
QuasiNewtonMethods.optimum(state) .- 1 = [7.69637686914848e-11, 1.1666911881036413e-10, 5.074025644091762e-10, 2.6363267124906997e-10, -5.734368535570411e-11, -1.7259405016289975e-10, -1.4496293054833131e-11, -2.0204615758245836e-11, -2.89157586763622e-10, 1.7048940037511784e-10, 2.460256443015396e-10, 1.022844697828873e-9, 5.319391593872069e-10, -9.148137802839074e-11, -3.424898142867505e-10, -3.319378105715032e-11, -3.055866670820251e-11, -5.961583449121122e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-5.519029677714116e-11, -3.49309470237813e-12, 1.2067458143860677e-11, -6.664035989700778e-11, -4.783573537281427e-11, -2.750033534226759e-11, -1.3365197837345022e-11, -4.809042053466328e-12, 7.006906166395765e-11, -1.0712730702522322e-10, -4.02577970959328e-12, 2.46409559423455e-11, -1.3728929104672716e-10, -9.662282085542984e-11, -5.944222891685058e-11, -2.6762703164706636e-11, -1.386379899770418e-11, 1.4660961333845535e-10]
n = 19
QuasiNewtonMethods.optimum(state) .- 1 = [5.910294476052513e-11, -4.534057573835071e-10, -4.893108140890945e-11, 2.560707201837431e-11, 1.6785239864702817e-11, 3.651656754755095e-11, 4.6018544530568306e-10, -9.143019674695552e-11, 1.1286971357549191e-11, 1.1636203112175281e-10, -9.029607062061018e-10, -1.1147438527814302e-10, 5.5395021902882036e-11, 4.0220049513095546e-11, 7.481748554027945e-11, 9.248928289906644e-10, -1.8341417273859406e-10, 1.8586687744459596e-11, -6.325384660499367e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.5674796450280155e-12, -1.453512865623452e-10, 4.5582093655127665e-10, -2.6264768138162253e-11, -1.260975768246908e-10, -3.1220026563971714e-10, 1.1695755475216174e-10, 1.7543855257429186e-10, 7.048606143200686e-11, -2.3933743875659275e-11, -2.8711555355442897e-10, 9.287162150428685e-10, -5.956535265028151e-11, -2.4314095181665607e-10, -6.356027926202046e-10, 2.2162249813106882e-10, 3.4894798162099505e-10, 1.2023382289783058e-10, 1.8002044299691988e-11]
n = 20
QuasiNewtonMethods.optimum(state) .- 1 = [-9.035328041306911e-12, -1.796095494555061e-10, 2.84626100466312e-10, 2.6467050773248957e-11, 3.1836977498755914e-11, 5.165046168542631e-11, -6.14968076462219e-11, -3.143696414298347e-11, 4.3370640412376815e-11, -1.182753894823918e-11, -2.3670621018823113e-11, -3.5438030288048594e-10, 5.86495962906497e-10, 5.488187682090029e-11, 6.344702541127845e-11, 8.37232505546126e-11, -1.2631040657851145e-10, -6.051126266726214e-11, 8.526912509410067e-11, -2.6506685735228075e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [1.1259504439919965e-10, 7.131828461126588e-11, -8.274891882820157e-11, 5.900191446528424e-11, 1.466056165355667e-10, -1.2840284391302248e-11, 6.004596819764174e-11, -6.623701587216146e-11, -1.1810219469055028e-11, 6.8902661354286465e-12, 2.2305202129757618e-10, 1.4265477688013561e-10, -1.7077805836152038e-10, 1.155999740376501e-10, 3.078044485960163e-10, -2.9172775306562926e-11, 1.1753509276957175e-10, -1.328076537632228e-10, -1.6940449043545414e-11, 9.193312777711071e-12]
n = 21
QuasiNewtonMethods.optimum(state) .- 1 = [8.276046514765767e-12, 1.6738388453063635e-11, -2.059574732982128e-12, 8.51452242045525e-12, 8.08908495741889e-12, -1.933408988463725e-11, -6.7305050421850865e-12, -2.028022194622281e-11, -1.71128666792697e-11, -2.903299822776262e-11, 1.7472689961550714e-11, 3.054800856716611e-11, -4.109157458742629e-12, 1.6468604258079722e-11, 1.4692691507889322e-11, -3.74799080660182e-11, -1.246747149963312e-11, -4.1319725418986764e-11, -3.596489772661471e-11, -5.836964245276022e-11, 6.050271394997253e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [-6.229783355848895e-11, 8.066303180953582e-11, -7.942257962412214e-11, 3.5364600137199886e-11, -1.232974833342837e-10, 1.168889429692399e-10, -7.576339555726008e-11, 6.073008762541576e-11, 6.216827053151519e-11, -1.258088078159858e-10, -1.3325807124431321e-10, 1.6056689311483296e-10, -1.622894041375389e-10, 6.944711472556264e-11, -2.4452007085784544e-10, 2.2924528941814515e-10, -1.5772871897468121e-10, 1.1665424182183415e-10, 1.2155054740503601e-10, -2.535274212789318e-10, 9.904299602681021e-12]
n = 22
QuasiNewtonMethods.optimum(state) .- 1 = [-1.0789102944386286e-10, -2.7287727633051873e-11, 9.43689570931383e-13, -9.567402425858518e-11, -7.864087159248356e-11, -7.352940478710934e-11, -8.578149301996518e-11, 2.0919488363801975e-10, -3.217837107882815e-11, -1.0571710173934434e-10, 8.018830044420611e-11, -2.2827639778455477e-10, -7.498890397528157e-11, -2.1189938692600663e-11, -1.7920276373928345e-10, -1.705973140531114e-10, -1.386148973381296e-10, -1.5223167171285468e-10, 4.172704404226124e-10, -5.397982061339235e-11, -2.2213453299002595e-10, 1.5572632072746728e-10]
QuasiNewtonMethods.optimum(state) .- 1 = [-3.397560011109135e-11, -1.1254441822927674e-11, -3.2464142485366665e-11, 1.184696785117012e-11, -1.6881385178635355e-11, -3.933897652075302e-11, 1.386646353296328e-11, -1.584055109304927e-11, 1.3773204798894767e-11, 1.211990507954397e-10, -1.1170631086798721e-10, -6.556322151851646e-11, -9.769518527491527e-12, -6.274858410648676e-11, 2.3281598870994458e-11, -3.2362668100915926e-11, -7.869849216746161e-11, 2.3953949934707452e-11, -3.436695372727172e-11, 2.0518253762702443e-11, 2.3827473327742155e-10, -2.2945800814966333e-10]
n = 23
QuasiNewtonMethods.optimum(state) .- 1 = [1.6575985029021467e-10, 3.5388802999136715e-11, -5.5987658953426944e-11, -2.398345966270199e-10, -5.4072302191343624e-11, 2.971978219079574e-11, -2.628800510606766e-10, 3.3558267276134757e-11, 1.4055978603266794e-10, -1.6992984797070676e-10, 1.1053336024247074e-10, 3.2913960446023793e-10, 6.553135811770971e-11, -1.1804890398536827e-10, -4.75720574044658e-10, -1.1377188080530232e-10, 6.009814867979912e-11, -5.121770785265767e-10, 6.194067481146703e-11, 2.703730572761742e-10, -3.4542790849911853e-10, 2.1816060069568266e-10, -1.3304912727107876e-12]
QuasiNewtonMethods.optimum(state) .- 1 = [7.139844271364382e-12, 2.2285062684090917e-11, 3.425348893415503e-11, -2.3780533098261003e-11, -1.148903194803097e-11, -3.4703018236825756e-11, -4.86015672152007e-11, -5.752009979431705e-11, 2.7039037675535837e-11, -8.712586208048378e-12, 3.2887026435446387e-12, 8.733680445516256e-12, 4.5137227289160364e-11, 6.383493733608248e-11, -4.574907119803129e-11, -2.8156366127518595e-11, -6.647893346922729e-11, -9.366829534229737e-11, -1.1419187817551801e-10, 5.123124147132785e-11, -1.3546719301871235e-11, 7.087663789206999e-12, -2.751576744230988e-12]
n = 24
QuasiNewtonMethods.optimum(state) .- 1 = [-6.738420932350664e-11, -4.148426047123621e-11, -1.692090911831201e-11, -9.109690779496304e-11, 3.638822576590428e-11, 9.030554082301023e-12, 5.5133675402885274e-11, -1.476241351383578e-11, -2.4202861936828413e-11, -4.895972516294478e-11, 1.846500730096068e-11, -2.156053113822054e-11, -1.3298750989321206e-10, -7.491818276861295e-11, -3.3158809031874625e-11, -1.8561829850938238e-10, 7.171219174040289e-11, 1.8126389278450006e-11, 1.07076125743788e-10, -2.8810731578232662e-11, -4.744904469333733e-11, -9.442535642278926e-11, 3.840550100164819e-11, -4.309408385694269e-11]
QuasiNewtonMethods.optimum(state) .- 1 = [-4.6334602821218596e-11, 4.912292794756468e-12, 6.374700767253216e-11, -6.04163385986567e-11, 4.1904479886056833e-11, 1.7936097052029254e-11, -3.7317371415213074e-11, 1.0020428931056813e-11, 9.899303599070208e-11, -1.5935708308489893e-10, -1.3540435439551857e-10, -5.5095705775443093e-11, -9.268363854175732e-11, 2.8441471400242335e-11, 1.244706560044051e-10, -1.2476453203902338e-10, 8.675504759025898e-11, 4.122413521656654e-11, -9.545497725582663e-11, 2.152789058129656e-11, 1.9864154765514286e-10, -2.9556546099485104e-10, -2.6797986052429223e-10, -1.1627387941359757e-10]
Test Summary:         | Pass  Total
QuasiNewtonMethods.jl |  138    138
    Testing QuasiNewtonMethods tests passed 
