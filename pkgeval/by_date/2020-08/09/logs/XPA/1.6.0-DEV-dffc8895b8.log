Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed XPA ─ v0.0.1
Updating `~/.julia/environments/v1.6/Project.toml`
  [d310a076] + XPA v0.0.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [d310a076] + XPA v0.0.1
   Building XPA → `~/.julia/packages/XPA/DgLur/deps/build.log`
┌ Error: Error building `XPA`: 
│ if test "" != ""; then \
│     defs="-DXPA_DLL=\"\\\"\\\"\""; \
│     libs=""; \
│ elif test "" != ""; then \
│     defs="-UXPA_DLL"; \
│     libs=""; \
│ else \
│     defs="-UXPA_DLL"; \
│     libs="-lxpa"; \
│ fi; \
│ cc   $defs  -o "gencode" "gencode.c" $libs 
│ gencode.c:14:10: fatal error: xpa.h: No such file or directory
│  #include <xpa.h>
│           ^~~~~~~
│ compilation terminated.
│ Makefile:28: recipe for target 'gencode' failed
│ make: *** [gencode] Error 1
│ ERROR: LoadError: failed process: Process(`make`, ProcessExited(2)) [2]
│ 
│ Stacktrace:
│  [1] pipeline_error
│    @ ./process.jl:525 [inlined]
│  [2] run(::Cmd; wait::Bool)
│    @ Base ./process.jl:440
│  [3] run(::Cmd)
│    @ Base ./process.jl:438
│  [4] top-level scope
│    @ ~/.julia/packages/XPA/DgLur/deps/build.jl:1
│  [5] include(fname::String)
│    @ Base.MainInclude ./client.jl:443
│  [6] top-level scope
│    @ none:5
│ in expression starting at /home/pkgeval/.julia/packages/XPA/DgLur/deps/build.jl:1
└ @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:943
    Testing XPA
Status `/tmp/jl_0AX8FJ/Project.toml`
  [d310a076] XPA v0.0.1
Status `/tmp/jl_0AX8FJ/Manifest.toml`
  [d310a076] XPA v0.0.1
ERROR: LoadError: XPA not properly installed.  Please run Pkg.build("XPA")
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] top-level scope
   @ ~/.julia/packages/XPA/DgLur/src/XPA.jl:25
 [3] include
   @ ./Base.jl:375 [inlined]
 [4] include_package_for_output(input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId,UInt64}}, uuid_tuple::Tuple{UInt64,UInt64}, source::String)
   @ Base ./loading.jl:1219
 [5] top-level scope
   @ none:1
 [6] eval
   @ ./boot.jl:344 [inlined]
 [7] eval(x::Expr)
   @ Base.MainInclude ./client.jl:445
 [8] top-level scope
   @ none:1
in expression starting at /home/pkgeval/.julia/packages/XPA/DgLur/src/XPA.jl:14
ERROR: LoadError: Failed to precompile XPA [d310a076-6a08-52b6-ab78-79baa254182b] to /home/pkgeval/.julia/compiled/v1.6/XPA/yg1lA_NliFQ.ji.
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:33
 [2] compilecache(pkg::Base.PkgId, path::String)
   @ Base ./loading.jl:1350
 [3] _require(pkg::Base.PkgId)
   @ Base ./loading.jl:1030
 [4] require(uuidkey::Base.PkgId)
   @ Base ./loading.jl:928
 [5] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:923
 [6] include(fname::String)
   @ Base.MainInclude ./client.jl:443
 [7] top-level scope
   @ none:6
in expression starting at /home/pkgeval/.julia/packages/XPA/DgLur/test/runtests.jl:11
ERROR: Package XPA errored during testing
Stacktrace:
  [1] pkgerror(::String, ::Vararg{String,N} where N)
    @ Pkg.Types /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Types.jl:52
  [2] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, julia_args::Cmd, test_args::Cmd, test_fn::Nothing)
    @ Pkg.Operations /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/Operations.jl:1567
  [3] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec}; coverage::Bool, test_fn::Nothing, julia_args::Cmd, test_args::Cmd, kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:328
  [4] test(ctx::Pkg.Types.Context, pkgs::Vector{Pkg.Types.PackageSpec})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:315
  [5] #test#62
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [6] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:67 [inlined]
  [7] #test#61
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [8] test
    @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:66 [inlined]
  [9] test(pkg::String; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}})
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [10] test(pkg::String)
    @ Pkg.API /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Pkg/src/API.jl:65
 [11] top-level scope
    @ none:16
