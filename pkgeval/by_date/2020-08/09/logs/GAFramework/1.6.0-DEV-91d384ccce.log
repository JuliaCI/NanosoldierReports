Julia Version 1.6.0-DEV.607
Commit 91d384ccce (2020-08-08 23:34 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_khV6YN/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_khV6YN/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21722543909281
curgen: 20 fitness: 0.2172266857436838
curgen: 30 fitness: 0.2172266857436838
curgen: 40 fitness: 0.2172266857436838
curgen: 50 fitness: 0.2172334003720297
CoordinateCreature{Vector{Float64}}([-0.2224764417263818], -0.2172334003720297) -0.2224764417263818 -0.2172334003720297
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.258101565429796
curgen: 100 fitness: 3.2581504184291314
curgen: 150 fitness: 3.2582542228935703
curgen: 200 fitness: 3.258283450960457
curgen: 250 fitness: 3.2583358355132277
curgen: 300 fitness: 3.258358359800905
curgen: 350 fitness: 3.2583827447968923
curgen: 400 fitness: 3.2583882987044888
curgen: 450 fitness: 3.2583896779914503
curgen: 500 fitness: 3.2583908615160686
CoordinateCreature{Vector{Float64}}([-0.2224192410829344, 0.22279517703216786, 0.22271085070230845, -0.22270091629964744, -0.22230439134677848, 0.22232098577882067, -0.22233732968725087, -0.22256600010522515, 0.22277924994025605, -0.22401655909159326, -0.22263082106210008, -0.22244252719358884, 0.22267805050393297, 0.2223131837855771, -0.22257331006059886], -3.2583908615160686) [-0.2224192410829344, 0.22279517703216786, 0.22271085070230845, -0.22270091629964744, -0.22230439134677848, 0.22232098577882067, -0.22233732968725087, -0.22256600010522515, 0.22277924994025605, -0.22401655909159326, -0.22263082106210008, -0.22244252719358884, 0.22267805050393297, 0.2223131837855771, -0.22257331006059886] -3.2583908615160686
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.0018332608278797125
curgen: 100 fitness: -0.0018275245988661482
curgen: 150 fitness: -0.0016550696912531748
curgen: 200 fitness: -0.0013427949692754737
curgen: 250 fitness: -0.0009112435790257223
curgen: 300 fitness: -0.000799389070266443
curgen: 350 fitness: -0.000799389070266443
curgen: 400 fitness: -0.0006477941508364893
curgen: 450 fitness: -0.0006048496605330911
curgen: 500 fitness: -0.0006048496605330911
CoordinateCreature{Vector{Float64}}([-0.0003181556489681392, -0.0010370560865123133, 0.0006395137415865625, 0.00017324079096841367, -0.0005312264463885063, -0.00010133942264862301, -9.754325409871197e-6, 0.00012051662246833017, 0.0004335249342075488, -0.00018022270009569004, 0.00045483084097322707, -0.000470057379818672, 0.000606630934977863, -0.0003299513498852652, 2.9278780502927466e-5], 0.0006048496605330911) [-0.0003181556489681392, -0.0010370560865123133, 0.0006395137415865625, 0.00017324079096841367, -0.0005312264463885063, -0.00010133942264862301, -9.754325409871197e-6, 0.00012051662246833017, 0.0004335249342075488, -0.00018022270009569004, 0.00045483084097322707, -0.000470057379818672, 0.000606630934977863, -0.0003299513498852652, 2.9278780502927466e-5] 0.0006048496605330911
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
