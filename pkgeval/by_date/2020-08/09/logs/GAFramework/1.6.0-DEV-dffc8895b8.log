Julia Version 1.6.0-DEV.604
Commit dffc8895b8 (2020-08-07 15:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake-avx512)
Environment:
  JULIA_DEPOT_PATH = ::/usr/local/share/julia
  JULIA_NUM_THREADS = 2

  Resolving package versions...
[ Info: LEGAL NOTICE: package operations send anonymous data about your system to https://pkg.julialang.org (your current package server), including the operating system and Julia versions you are using, and a random client UUID. Running `Pkg.telemetryinfo()` will show exactly what data is sent. See https://julialang.org/legal/data/ for more details about what this data is used for, how long it is retained, and how to opt out of sending it.
  Installed GAFramework ─ v0.4.1
  Installed FileIO ────── v1.4.0
Updating `~/.julia/environments/v1.6/Project.toml`
  [91ca9103] + GAFramework v0.4.1
Updating `~/.julia/environments/v1.6/Manifest.toml`
  [5789e2e9] + FileIO v1.4.0
  [91ca9103] + GAFramework v0.4.1
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8ba89e20] + Distributed
  [9fa8497b] + Future
  [b77e0a4c] + InteractiveUtils
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
    Testing GAFramework
Status `/tmp/jl_daD6Ph/Project.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [9fa8497b] Future
  [37e2e46d] LinearAlgebra
  [9a3f8284] Random
  [2f01184e] SparseArrays
  [8dfed614] Test
Status `/tmp/jl_daD6Ph/Manifest.toml`
  [5789e2e9] FileIO v1.4.0
  [91ca9103] GAFramework v0.4.1
  [2a0f44e3] Base64
  [ade2ca70] Dates
  [8ba89e20] Distributed
  [9fa8497b] Future
  [b77e0a4c] InteractiveUtils
  [76f85450] LibGit2
  [8f399da3] Libdl
  [37e2e46d] LinearAlgebra
  [56ddb016] Logging
  [d6f4376e] Markdown
  [44cfe95a] Pkg
  [de0858da] Printf
  [3fa0cd96] REPL
  [9a3f8284] Random
  [ea8e919c] SHA
  [9e88b42a] Serialization
  [6462fe0b] Sockets
  [2f01184e] SparseArrays
  [8dfed614] Test
  [cf7118a7] UUIDs
  [4ec0a83e] Unicode
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 40 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 60 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 80 edge_score: 1.0 node_score: 1.0 score: 1.0
curgen: 100 edge_score: 1.0 node_score: 1.0 score: 1.0
Running genetic algorithm with population size 300, generation number 50, elite fraction 0.01.
curgen: 10 fitness: 0.21723093429713225
curgen: 20 fitness: 0.21723093429713225
curgen: 30 fitness: 0.21723093429713225
curgen: 40 fitness: 0.21723093429713225
curgen: 50 fitness: 0.21723093429713225
CoordinateCreature{Vector{Float64}}([-0.2223016845463304], -0.21723093429713225) -0.2223016845463304 -0.21723093429713225
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: 3.2570064069616667
curgen: 100 fitness: 3.2580403266283042
curgen: 150 fitness: 3.2583826555454176
curgen: 200 fitness: 3.2584118938249627
curgen: 250 fitness: 3.25842093581963
curgen: 300 fitness: 3.2584230633174047
curgen: 350 fitness: 3.258429894302079
curgen: 400 fitness: 3.2584592531388368
curgen: 450 fitness: 3.2584596029121746
curgen: 500 fitness: 3.2584659171008905
CoordinateCreature{Vector{Float64}}([0.22226067737607955, -0.22267762664114318, 0.22206956576414763, 0.22213693589567055, -0.2226904304134465, 0.22258996521838606, -0.22255910208165705, -0.22239909343228945, 0.2230325259336824, 0.22271072964200558, -0.2223451557675968, 0.22261057569261125, 0.22249352448753898, -0.22246977295674214, 0.22265727406234498], -3.2584659171008905) [0.22226067737607955, -0.22267762664114318, 0.22206956576414763, 0.22213693589567055, -0.2226904304134465, 0.22258996521838606, -0.22255910208165705, -0.22239909343228945, 0.2230325259336824, 0.22271072964200558, -0.2223451557675968, 0.22261057569261125, 0.22249352448753898, -0.22246977295674214, 0.22265727406234498] -3.2584659171008905
Running genetic algorithm with population size 300, generation number 500, elite fraction 0.01.
curgen: 50 fitness: -0.002793141209423311
curgen: 100 fitness: -0.002085272268374183
curgen: 150 fitness: -0.0020754268906557627
curgen: 200 fitness: -0.0018626568572983615
curgen: 250 fitness: -0.0018626568572983615
curgen: 300 fitness: -0.0005789809752911879
curgen: 350 fitness: -0.0005789809752911879
curgen: 400 fitness: -0.0005789809752911879
curgen: 450 fitness: -0.0005789809752911879
curgen: 500 fitness: -0.0005789809752911879
CoordinateCreature{Vector{Float64}}([0.00012013383095819258, -0.00010276097118866153, -0.0001781557519728719, -0.00021941308920730204, -0.00014105840237105025, -4.1383397943309686e-5, 3.592975680519932e-5, 0.0004125100210555815, -0.00013928375036479967, -3.0369021762452158e-5, 0.001239275649019136, 0.00022281364528938278, 0.00014476342392238115, 1.7523168167111904e-5, -0.0009966962803036375], 0.0005789809752911879) [0.00012013383095819258, -0.00010276097118866153, -0.0001781557519728719, -0.00021941308920730204, -0.00014105840237105025, -4.1383397943309686e-5, 3.592975680519932e-5, 0.0004125100210555815, -0.00013928375036479967, -3.0369021762452158e-5, 0.001239275649019136, 0.00022281364528938278, 0.00014476342392238115, 1.7523168167111904e-5, -0.0009966962803036375] 0.0005789809752911879
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
Running genetic algorithm with population size 6000, generation number 100, elite fraction 0.1.
curgen: 20 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 40 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 60 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 80 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
curgen: 100 value: [3, 2, 4, 8, 6, 1, 5, 10, 9, 7] score: 1.0
    Testing GAFramework tests passed 
